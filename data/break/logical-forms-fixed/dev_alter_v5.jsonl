{"input": "Find the name of the shops that do not hire any employee.", "prediction": "select tbl:shop, comparative #1 #1 tbl:employee, discard #1 #2, project col:shop/Shop_Name #3", "alternatives": "select tbl:shop, comparative #1 #1 tbl:employee, project col:shop/Shop_Name #3, discard #1 #2"}
{"input": "Find the id of the pet owned by student whose last name is ‘Smith’.", "prediction": "select tbl:Students, comparative #1 #1 equal/Smith col:Students/last_name, project tbl:Pets #2, project col:Pets/pet_id #3", "alternatives": "select tbl:Students, project col:Students/last_name #1, comparative #1 #2 equal/Smith, project tbl:Pets #3, project col:Pets/id #4"}
{"input": "What is the document id, template id and description for document named \"Robbin CV\"?", "prediction": "select tbl:Documents, comparative #1 #1 equal/Robbin CV col:Documents/document_name, project col:Documents/document_id #2, project col:Documents/template_id #2, project col:Documents/document_description #2, union #3 #4 #5", "alternatives": "select tbl:Documents, comparative #1 #1 equal/Robbin CV col:Documents/document_name, project col:Documents/document_id #2, project col:Documents/template_id #2, union #3 #4 #5, project col:Documents/document_description #2"}
{"input": "What is the average age for all students who do not own any pets?", "prediction": "select tbl:Student, comparative #1 #1 tbl:Pets, discard #1 #2, project col:Student/Age #3, aggregate avg #4", "alternatives": "select tbl:Student, comparative #1 #1 tbl:Pets, project col:Student/Age #3, discard #1 #2, aggregate avg #4"}
{"input": "Which order deals with the most items? Return the order id.", "prediction": "select col:Order_Items, project tbl:Order_Items #1, group #2 #1, superlative #1 #3, project col:Order_Items/order_id #4", "alternatives": "select col:Orders, project tbl:Orders #1, group #2 #1, superlative #1 #3, project col:Orders/order_id #4"}
{"input": "what is the name and nation of the singer who have a song having 'Hey' in its name?", "prediction": "select tbl:song, project tbl:song #1, comparative #1 #2 like%Hey%, project col:artist/artist_name #3, project col:artist/nationality #3, union #4 #5", "alternatives": "select tbl:song, project tbl:song #1, union #4 #5, project col:artist/artist_name #3, project col:artist/nationality #3, comparative #1 #2 like%Hey%"}
{"input": "What is the average and maximum age for each pet type?", "prediction": "select tbl:Pets, project col:Pets/age #1, group #2 #1, union #1 #3", "alternatives": "select col:Pets, project col:Pets/pet_age #1, group #2 #1, group #2 #1, union #1 #3 #4"}
{"input": "List the name of teachers whose hometown is not `` Little Lever Urban District ''.", "prediction": "select tbl:teachers, project col:teachers/Hometown #1, comparative #1 #2 notequal/Little Lever Urban District, project col:teachers/Name #3", "alternatives": "select tbl:teachers, project col:teachers/Hometown #1, project col:teachers/Name #3, comparative #1 #2 notequal/Little Lever Urban District"}
{"input": "List the names of teachers who have not been arranged to teach courses.", "prediction": "select tbl:teachers, comparative #1 #1 tbl:teaches, discard #1 #2, project col:teachers/Name #3", "alternatives": "select tbl:teachers, comparative #1 #1 tbl:course, discard #1 #2, project col:teachers/Name #3"}
{"input": "What is the number of continents?", "prediction": "select tbl:continents, aggregate count #1", "alternatives": "select tbl:continent, aggregate count #1"}
{"input": "How many singers are from each country?", "prediction": "select col:artist, project tbl:song #1, group #2 #1, union #1 #3", "alternatives": "select col:artist, group #2 #1, project tbl:song #1, union #1 #3"}
{"input": "What are airlines that have some flight departing from airport 'AHD'?", "prediction": "select col:flight, comparative #1 #1 equal/AHD col:airport/airport_name, project tbl:flight #2", "alternatives": "select col:airlines, project tbl:flights #1, project col:flights/SourceAirport #2, comparative #1 #3 equal/AHD"}
{"input": "What is the document id with least number of paragraphs?", "prediction": "select col:Documents, project tbl:Documents #1, group #2 #1, superlative #1 #3", "alternatives": "select col:Documents, project tbl:Paragraphs #1, group #2 #1, superlative #1 #3"}
{"input": "What is the average, minimum, and maximum age for all French singers?", "prediction": "select val:artist, project col:artist/Age #1, aggregate avg #2, aggregate min #2, aggregate max #2, union #3 #4 #5", "alternatives": "select val:song, project col:song/age #1, aggregate avg #2, aggregate min #2, aggregate max #2, union #3 #4 #5"}
{"input": "Return the id and name of the document with the most paragraphs.", "prediction": "select tbl:Documents, project tbl:Document_Paragraphs #1, group #2 #1, superlative #1 #3, project col:Documents/document_id #4, project col:Documents/document_name #4, union #5 #6", "alternatives": "select tbl:Documents, project tbl:Paragraphs #1, group #2 #1, superlative #1 #3, project col:Paragraphs/Document_ID #4, project col:Documents/Document_Name #4, union #5 #6"}
{"input": "How many concerts occurred in 2014 or 2015?", "prediction": "select tbl:concerts, comparative #1 #1 equal/2014 col:concerts/year, comparative #1 #1 equal/2015 col:concerts/year, union #2 #3, aggregate count #4", "alternatives": "select tbl:concerts, aggregate count #4, comparative #1 #1 equal/2015 col:concerts/year, union #2 #3, comparative #1 #1 equal/2014 col:concerts/year"}
{"input": "Which city has most number of arriving flights?", "prediction": "select col:flight, project tbl:flight #1, group #2 #1, superlative #1 #3", "alternatives": "select col:airports, project tbl:flights #1, group #2 #1, superlative #1 #3"}
{"input": "List the airport code and name in the city of Anthony.", "prediction": "select tbl:airport, project col:airport/code #1, project col:airport/name #1, union #2 #3, comparative #4 #1 equal/Anthony", "alternatives": "select tbl:airports, comparative #1 #1 equal/Anthony col:airports/City, project col:airports/AirportCode #2, project col:airports/AirportName #2, union #3 #4"}
{"input": "Show publishers with a book published in 1989 and a book in 1990.", "prediction": "select col:book, comparative #1 #1 equal/1989 col:book/Published_Year, comparative #1 #1 equal/1990 col:book/Published_Year, intersection #1 #2 #3", "alternatives": "select col:book, comparative #1 #1 equal/1989 col:book/Published_Year, intersection #1 #2 #3, comparative #1 #1 equal/1990 col:book/Published_Year"}
{"input": "What are airlines that have flights arriving at airport 'AHD'?", "prediction": "select col:flight, project tbl:flight #1, comparative #1 #2 equal/AHD", "alternatives": "select col:airlines, project tbl:flights #1, project col:flights/DestAirport #2, comparative #1 #3 equal/AHD"}
{"input": "Which airlines have departing flights from both APG and CVO airports?", "prediction": "select col:flight, project tbl:flight #1, project tbl:airport #2, comparative #1 #3 equal/APG, comparative #1 #3 equal/CVO, intersection #1 #4 #5", "alternatives": "select col:flight, project tbl:flight #1, project tbl:airport #2, comparative #1 #3 equal/CVO, comparative #1 #3 equal/APG, intersection #1 #4 #5"}
{"input": "How many flights does airline 'JetBlue Airways' have?", "prediction": "select tbl:flight, project tbl:flight #1, comparative #2 #1 equal/JetBlue Airways, aggregate count #3", "alternatives": "select tbl:flight, aggregate count #3, comparative #2 #1 equal/JetBlue Airways, project tbl:flight #1"}
{"input": "What are the death and injury situations caused by the ship with tonnage 't'?", "prediction": "select tbl:ship, project col:ship/Tonnage #1, comparative #1 #2 equal/t, project col:ship/Number_of_Deaths #3, project col:ship/Injury_Statement #3, union #4 #5", "alternatives": "select tbl:ship, project col:ship/Tonnage #1, comparative #1 #2 equal/t, project col:ship/Number_of_Deaths #3, project col:ship/Injury_Suspense #3, union #4 #5"}
{"input": "What is the name and capacity of the stadium with the most concerts after 2013?", "prediction": "select tbl:stadium, project tbl:concerts #1, comparative #2 #2 great/2013 col:concerts/year, group #3 #1, superlative #1 #4, project col:stadium/name #5, project col:stadium/capacity #5, union #6 #7", "alternatives": "select tbl:stadium, project tbl:conzerts #1, comparative #2 #2 great/2013 col:conzerts/year, group #3 #1, superlative #1 #4, project col:stadium/name #5, project col:stadium/capacity #5, union #6 #7"}
{"input": "Count the number of paragraphs.", "prediction": "select tbl:paragraph, aggregate count #1", "alternatives": "select tbl:Paragraphs, aggregate count #1"}
{"input": "What are the different template type codes, and how many templates correspond to each?", "prediction": "select tbl:Templates, group #1 #2, union #2 #3", "alternatives": "select tbl: Templates, project col:Templates/TemplateType_Code #1, group #1 #2, union #2 #3"}
{"input": "Find the highest rank of losers in all matches.", "prediction": "select tbl:match, project col:match/Losers #1, group #2 #1, superlative #1 #3", "alternatives": "select tbl:match, project col:match/Lower_Rank #1, group #1 #2, superlative #2 #3"}
{"input": "Find the districts in which there are both shops selling less than 3000 products and shops selling more than 10000 products.", "prediction": "select col:shop, project tbl:shop #1, project none #2, comparative #1 #3 less/3000, comparative #1 #3 great/10000, intersection #1 #4 #5", "alternatives": "select col:shop, project none #1, project tbl:shop #2, comparative #1 #3 less/3000, comparative #1 #3 great/10000, intersection #1 #4 #5"}
{"input": "What are the ids and names of the architects who built at least 3 bridges ?", "prediction": "select tbl:Architects, project tbl:Bridges #1, group #2 #1, comparative #1 #3 greatequal/3, project col:Architects/architect_id #4, project col:Architects/name #4, union #5 #6", "alternatives": "select tbl:Architects, project tbl:Bridges #1, project col:Architects/architect_id #4, comparative #1 #3 greatequal/3, group #2 #1, project col:Architects/name #4, union #5 #6"}
{"input": "How many countries are listed?", "prediction": "select tbl:country, aggregate count #1", "alternatives": "select col:country, aggregate count #1"}
{"input": "What are all different template ids used for documents, and how many times were each of them used?", "prediction": "select tbl:Documents, project col:Documents/template_id #1, group #1 #2, union #2 #3", "alternatives": "select tbl:Documents, project col:Documents/template_id #1, union #2 #3, group #1 #2"}
{"input": "What is the code of airport that has the highest number of flights?", "prediction": "select tbl:airport, project tbl:flight #1, group #2 #1, superlative #1 #3, project col:airport/code #4", "alternatives": "select tbl:airport, project tbl:flight #1, group #2 #1, superlative #1 #3"}
{"input": "What is the best rank of losers across all matches?", "prediction": "select tbl:match, project col:match/Losers #1, group #2 #1, superlative #1 #3", "alternatives": "select tbl:match_record, project col:match_record/Losers #1, group #2 #1, superlative #1 #3"}
{"input": "find the minimum and maximum number of products of all stores.", "prediction": "select tbl:store, project col:store/Num_of_Products #1, aggregate col:product/Num_of_Products #2, aggregate min #3, aggregate max #3, union #4 #5", "alternatives": "select col:shop, comparative #1 #1 tbl:shop, aggregate min #2, aggregate max #2, union #3 #4"}
{"input": "What are the ids and names of the battles that led to more than 10 people killed in total.", "prediction": "select tbl:battle, project tbl:Killed #1, group #2 #1, comparative #1 #3 great/10, project col:battle/BattleId #4, project col:battle/Name #4, union #5 #6", "alternatives": "select tbl:battle, project col:death/killed #1, group #2 #1, comparative #1 #3 great/10, project col:battle/id #4, project col:battle/name #4, union #5 #6"}
{"input": "Count the number of United Airlines flights that arrive in Aberdeen.", "prediction": "select tbl:flight, comparative #1 #1 equal/Aberdeen col:airport/city, aggregate count #2", "alternatives": "select tbl:flight, comparative #1 #1 equal/Aberdeen col:airport/destination, aggregate count #2."}
{"input": "What are the dates of the orders made by the customer named \"Jeramie\"?", "prediction": "select tbl:Customer_Orders, project tbl:Customer_Orders #1, comparative #2 #1 equal/Jeramie, project col:Customer_Orders/order_date #3", "alternatives": "select tbl:Customers, project tbl:Orders #1, comparative #2 #1 equal/Jeramie, project col:Orders/date_order_placed #3"}
{"input": "What is the hometown of the youngest teacher?", "prediction": "select tbl:teachers, project col:teachers/Headquarters #1, superlative #2 #2", "alternatives": "select tbl:teachers, project col:teachers/Headquartered_Name #1, superlative #1 #2"}
{"input": "List all song names by singers above the average age.", "prediction": "select tbl:song, project col:song/age #1, aggregate avg #2, comparative #1 #2 great/#3, project col:song/song_name #4", "alternatives": "select tbl:singer, project col:singer/Age #1, aggregate avg #2, comparative #1 #2 great/#3, project col:singer/Song_Name #4, project col:singer/Song_Name #5"}
{"input": "What is the publisher with most number of books?", "prediction": "select col:book, project tbl:book #1, group #2 #1, superlative #1 #3", "alternatives": "select col:book, group #2 #1, project tbl:book #1, superlative #1 #3"}
{"input": "What is the name and capacity for the stadium with highest average attendance?", "prediction": "select tbl:stadium, project col:stadium/Average_Attendance #1, group #2 #1, superlative #1 #3, project col:stadium/name #4, project col:stadium/Capacity #4, union #5 #6", "alternatives": "select tbl:stadium, project col:stadium/Average_Average #1, group #2 #1, superlative #1 #3, project col:stadium/name #4, project col:stadium/Capacity #4, union #5 #6"}
{"input": "find the names of museums which have more staff than the minimum staff number of all museums opened after 2010.", "prediction": "select tbl:museen, comparative #1 #1 great/2010 col:museen/Open_Year, project col:museen/Staff #2, aggregate min #3, comparative #1 #3 great/#4, project col:museen/Name #5", "alternatives": "select tbl:museen, comparative #1 #3 great/#4, project col:museen/Staff #2, aggregate min #3, comparative #1 #1 great/2010 col:museen/Open_Year, project col:museen/Name #5"}
{"input": "Give me a list of id and status of orders which belong to the customer named \"Jeramie\".", "prediction": "select tbl:Customer_Orders, comparative #1 #1 equal/Jeramie col:Customers/customer_name, project col:Customer_Orders/order_id #2, project col:Customer_Orders/order_status #2, union #3 #4", "alternatives": "select tbl:Customer_Orders, comparative #1 #1 equal/Jeramie col:Customers/customer_name, union #3 #4, project col:Customer_Orders/order_status #2, project col:Customer_Orders/order_id #2"}
{"input": "List the names of employees and sort in ascending order of age.", "prediction": "select tbl:employee, project col:employee/name #1, project col:employee/age #1, sort #2 #3 ascending", "alternatives": "select tbl:employee, project col:people/Name #1, project col:employee/Age #1, sort #2 #3 ascending"}
{"input": "What are the towns from which at least two teachers come from?", "prediction": "select col:teachers, project val:teachers/Hometown #1, group #2 #1, comparative #1 #3 greatequal/2", "alternatives": "select col:teachers, project val:teachers/County #1, group #1 #2, comparative #2 #3 greatequal/2"}
{"input": "How many matches were played in 2013 or 2016?", "prediction": "select tbl:match, comparative #1 #1 equal/2013 col:match/Year, comparative #1 #1 equal/2016 col:match/Year, union #2 #3, aggregate count #4", "alternatives": "select tbl:matches, comparative #1 #1 equal/2013 col:matches/year, comparative #1 #1 equal/2016 col:matches/year, union #2 #3, aggregate count #4"}
{"input": "What are the students' first names who have both cats and dogs as pets?", "prediction": "select tbl:Student, project tbl:PersonFriend #1, comparative #1 #2 equal/cat, comparative #1 #2 equal/dog, intersection #1 #3 #4, project col:Student/Fname #5", "alternatives": "select tbl:Student, project tbl:Pets #1, comparative #1 #2 equal/cat, comparative #1 #2 equal/dog, project col:Student/Fname #1, intersection #5 #3 #4"}
{"input": "Find the number of flights landing in the city of Aberdeen or Abilene.", "prediction": "select tbl:flight, project tbl:landing #1, comparative #1 #2 equal/Aberdeen, comparative #1 #2 equal/Abilene, union #3 #4, aggregate count #5", "alternatives": "select tbl:flight, project tbl:landing #1, union #3 #4, comparative #1 #2 equal/Abilene, comparative #1 #2 equal/Aberdeen, aggregate count #5"}
{"input": "What is total bonus given in all evaluations?", "prediction": "select tbl:evaluation, project col:evaluation/Bonus #1, aggregate sum #2", "alternatives": "select tbl:evaluation, project col:evaluation/bonus #1, aggregate sum #2"}
{"input": "List the name and date the battle that has lost the ship named 'Lettice' and the ship named 'HMS Atalanta'", "prediction": "select tbl:ship, comparative #1 #1 equal/Lettice col:ship/Name, comparative #1 #1 equal/HMS Atalanta col:ship/Name, intersection #1 #2 #3, project col:ship/Name #4, project col:battle/Date #4, union #5 #6", "alternatives": "select tbl:battle, project tbl:ship #1, project col:ship/name #2, comparative #1 #3 equal/Lettice, comparative #1 #3 equal/HMS Atalanta, intersection #1 #4 #5, project col:battle/name #6, project col:battle/date #6, union #7 #8"}
{"input": "What type of pet is the youngest animal, and how much does it weigh?", "prediction": "select tbl:pet, project col:pet/Weight #1, superlative #1 #2, project col:pet/Type #3, union #4 #3", "alternatives": "select col:Pets, superlative #1 #1, project col:Pets/PetType #2, project col:Pets/weight #2, union #3 #4"}
{"input": "What are  the different countries with singers above age 20?", "prediction": "select col:artist, project tbl:song #1, comparative #2 #2 great/20 col:artist/Age", "alternatives": "select col:artist, comparative #1 #1 great/20 col:artist/Age"}
{"input": "What is the airport code of the airport with the most flights?", "prediction": "select col:flight, project tbl:flight #1, group #2 #1, superlative #1 #3, project col:airport/code #4", "alternatives": "select tbl:airports, project tbl:flights #1, group #2 #1, superlative #1 #3, project col:airports/AirportCode #4"}
{"input": "find the id, name and age for visitors who visited some museums more than once.", "prediction": "select tbl:museum, project tbl:visits #1, group #2 #1, comparative #1 #3 great/1, project col:museum/id #4, project col:museum/name #4, project col:museum/age #4, union #5 #6 #7", "alternatives": "select tbl:museum, project tbl:visits #1, project col:museum/id #4, comparative #1 #3 great/1, group #2 #1, project col:museum/name #4, project col:museum/age #4, union #5 #6 #7"}
{"input": "For each product, show its name and the number of times it was ordered.", "prediction": "select col:Order_Items, project col:Products/product_name #1, project tbl:Order_Items #1, group #3 #1, union #2 #4", "alternatives": "select col:Order_Items, group #3 #1, project tbl:Order_Items #1, project col:Products/product_name #1, union #2 #4"}
{"input": "What are the distinct types of mills that are built by American or Canadian architects?", "prediction": "select tbl:mill, project col:architecture/Nationality #1, comparative #1 #2 equal/American, comparative #1 #2 equal/Canada, union #3 #4", "alternatives": "select tbl:mill, project col:architecture/Nationality #1, comparative #1 #2 equal/American, union #3 #4, comparative #1 #2 equal/Canada"}
{"input": "Show the movie titles and book titles for all companies in China.", "prediction": "select tbl:company, comparative #1 #1 equal/China col:company/Country, project col:film/Title #2, project col:book/Title #2, union #3 #4", "alternatives": "select tbl:culture_company, comparative #1 #1 equal/China col:culture_company/Incorporated_in, project tbl:movie #2, project col:movie/Title #3, project tbl:book_club #2, project col:book_club/Book_Title #5, union #4 #6"}
{"input": "Show the stadium name and the number of concerts in each stadium.", "prediction": "select col:match_season, project col:stadium/name #1, project tbl:concerts #1, group #3 #1, union #2 #4", "alternatives": "select col:match_season, project col:stadium/name #1, union #2 #4, group #3 #1, project tbl:concerts #1"}
{"input": "How many museums were opened after 2013 or before 2008?", "prediction": "select tbl:museen, comparative #1 #1 great/2013 col:museen/Open_Year, comparative #1 #1 less/2008 col:museen/Open_Year, union #2 #3, aggregate count #4", "alternatives": "select tbl:museum, comparative #1 #1 great/2013 col:museum/Open_Year, comparative #1 #1 less/2008 col:museum/Open_Year, union #2 #3, aggregate count #4"}
{"input": "Find the total ranking points for each player and their first name.", "prediction": "select col:player, project col:player/Ranking_Points #1, group #2 #1, project col:player/FirstName #1, union #3 #4", "alternatives": "select col:player, project col:player/Ranking_Points #1, group #2 #1, union #3 #4, project col:player/FirstName #1"}
{"input": "What is the average, maximum, and minimum budget for all movies before 2000.", "prediction": "select tbl:Movie, comparative #1 #1 less/2000 col:Movie/year, project col:Movie/budget #2, aggregate avg #3, aggregate max #3, aggregate min #3, union #4 #5 #6", "alternatives": "select tbl:film, comparative #1 #1 less/2000 col:film/Year, project col:film/Budgeted #2, aggregate avg #3, aggregate max #3, aggregate min #3, union #4 #5 #6"}
{"input": "What are the ids and names of the battles that led to more than 10 people killed in total.", "prediction": "select tbl:battle, project tbl:Killed #1, group #2 #1, comparative #1 #3 great/10, project col:battle/BattleId #4, project col:battle/Name #4, union #5 #6", "alternatives": "select tbl:battle, project tbl:kill_count #1, group #2 #1, comparative #1 #3 great/10, project col:battle/BattleId #4, project col:battle/Name #4, union #5 #6"}
{"input": "find the number of distinct country codes of all players.", "prediction": "select tbl:country, aggregate count #2", "alternatives": "select col:country, aggregate count #2"}
{"input": "How many flights have destination ATO?", "prediction": "select tbl:flight, project none #1, comparative #1 #2 equal/ATO, aggregate count #3", "alternatives": "select tbl:flights, project none #1, comparative #1 #2 equal/ATO, aggregate count #3"}
{"input": "What are the names of documents that use templates with the code BK?", "prediction": "select tbl:Documents, project tbl:Documents #1, project col:Documents/template_code #2, comparative #1 #3 equal/BK, project col:Documents/document_name #4", "alternatives": "select tbl:Documents, project tbl:Documents #1, project col:Documents/Template_Code #2, comparative #1 #3 equal/BK, project col:Documents/Document_Name #4"}
{"input": "What is the name of the shop that is hiring the largest number of employees?", "prediction": "select tbl:shop, project tbl:employment #1, group #2 #1, superlative #1 #3, project col:shop/Shop_Name #4", "alternatives": "select tbl:shop, project tbl:EMPLOYEE #1, group #2 #1, superlative #1 #3, project col:shop/Shop_Name #4"}
{"input": "List all document ids with at least two paragraphs.", "prediction": "select col:Documents, project tbl:Document_Paragraphs #1, group #2 #1, comparative #1 #3 greatequal/2", "alternatives": "select col:Documents, project tbl:Document_Paragraphs #1, comparative #1 #3 greatequal/2, group #2 #1"}
{"input": "What are the manager name and district of the shop that sells the largest number of products?", "prediction": "select tbl:shop, project tbl:product #1, group #2 #1, superlative #1 #3, project col:shop/Manager_Name #4, project col:shop/District #4, union #5 #6", "alternatives": "select tbl:shop, project tbl:product #1, group #2 #1, project col:shop/Manager_Name #4, superlative #1 #3, project col:shop/District #4, union #5 #6"}
{"input": "How many United Airlines flights go to City 'Aberdeen'?", "prediction": "select tbl:flight, comparative #1 #1 equal/United Airlines col:flight/origin, comparative #2 #2 equal/Aberdeen col:flight/destination, aggregate count #3", "alternatives": "select tbl:flight, comparative #2 #2 equal/Aberdeen col:flight/destination, comparative #1 #1 equal/United Airlines col:flight/origin, aggregate count #3"}
{"input": "Show the hometowns shared by at least two teachers.", "prediction": "select col:teachers, project tbl:teachers #1, group #2 #1, comparative #1 #3 greatequal/2", "alternatives": "select col:teachers, group #2 #1, project tbl:teachers #1, comparative #1 #3 greatequal/2"}
{"input": "Find the number of concerts happened in the stadium with the highest capacity.", "prediction": "select tbl:stadium, project col:stadium/Capacity #1, superlative #1 #2, project tbl:convention #3, aggregate count #4", "alternatives": "select tbl:stadium, project col:stadium/Capacity #1, superlative #1 #2, project tbl:concert #3, aggregate count #4"}
{"input": "Return the id and type code of the template that is used for the greatest number of documents.", "prediction": "select tbl:Documents, project col:Documents/document_id #1, group #1 #2, superlative #2 #3, project col:Documents/document_type_code #4, project col:Documents/document_id #4, union #5 #6", "alternatives": "select tbl:Templates, project tbl:Documents #1, group #2 #1, superlative #1 #3, project col:Documents/Template_ID #4, project col:Templates/Template_Type_Code #4, union #5 #6"}
{"input": "Which city and country is the Alton airport at?", "prediction": "select val:airport, project col:airport/city #1, project col:airport/country #1, union #2 #3", "alternatives": "select val:airport, project col:airport/city #1, union #2 #3, project col:airport/country #1"}
{"input": "Show the name of teachers aged either 32 or 33?", "prediction": "select tbl:teachers, comparative #1 #1 equal/32 col:teachers/Age, comparative #1 #1 equal/33 col:teachers/Age, union #2 #3, project col:teachers/Name #4", "alternatives": "select tbl:teachers, comparative #1 #1 equal/32 col:teachers/Age, project col:teachers/Name #4, union #2 #3, comparative #1 #1 equal/33 col:teachers/Age"}
{"input": "What are the ids of documents that contain the paragraph text 'Brazil' and 'Ireland'?", "prediction": "select tbl:Documents, project col:Documents/paragraph_text #1, comparative #1 #2 like%Brazil%, comparative #1 #2 like%Ireland%, intersection #1 #3 #4, project col:Documents/document_id #5", "alternatives": "select col:Documents, comparative #1 #1 like%Brazil% col:Documents/paragraph_text, comparative #1 #1 like%Ireland% col:Documents/paragraph_text, intersection #1 #2 #3"}
{"input": "Return the name of the airport with code 'AKO'.", "prediction": "select tbl:airports, project col:airports/airport_code #1, comparative #1 #2 equal/AKO, project col:airports/name #3", "alternatives": "select tbl:airports, comparative #1 #2 equal/AKO, project col:airports/airport_code #1, project col:airports/name #3"}
{"input": "List the number of all matches who played in years of 2013 or 2016.", "prediction": "select tbl:match, project col:match/Year #1, comparative #1 #2 equal/2013, comparative #1 #2 equal/2016, union #3 #4, aggregate count #5", "alternatives": "select tbl:matches, comparative #1 #1 equal/2013 col:matches/year, comparative #1 #1 equal/2016 col:matches/year, union #2 #3, aggregate count #4"}
{"input": "Count the number of United Airlines flights arriving in ASY Airport.", "prediction": "select tbl:flight, comparative #1 #1 equal/ASY col:airport/Airport_Name, aggregate count #2", "alternatives": "select tbl:flights, comparative #1 #1 equal/United Airlines col:airlines/Airline, comparative #2 #2 equal/ASY col:flights/DestAirport, aggregate count #3"}
{"input": "How many paragraphs in total?", "prediction": "select tbl:paragraphs, aggregate count #1", "alternatives": "select tbl:Paragraph, aggregate count #1"}
{"input": "Which shops' number products is above the average? Give me the shop names.", "prediction": "select tbl:shop, project col:shop/Product_ID #1, aggregate avg #2, comparative #1 #2 great/#3, project col:shop/Shop_Name #4", "alternatives": "select tbl:shop, project col:shop/Product_ID #1, aggregate avg #2, comparative #1 #2 great/#3, project col:shop/Shop_name #4"}
{"input": "What are the different template type codes?", "prediction": "select tbl:Templates, project col:Templates/TemplateType_Code #1", "alternatives": "select tbl:Templates"}
{"input": "Find all airlines that have fewer than 200 flights.", "prediction": "select col:flight, project tbl:flight #1, comparative #1 #2 less/200", "alternatives": "select col:airlines, project tbl:flights #1, group #2 #1, comparative #1 #3 less/200"}
{"input": "Show names of teachers and the courses they are arranged to teach in ascending alphabetical order of the teacher's name.", "prediction": "select tbl:teachers, project col:teachers/Name #1, project tbl:course_arranged #1, union #2 #3, sort #4 #2 ascending", "alternatives": "select tbl:teachers, project col:teachers/Name #1, sort #4 #2 ascending, union #2 #3, project tbl:course_arranged #1"}
{"input": "Show the stadium name and capacity with most number of concerts in year 2014 or after.", "prediction": "select tbl:stadium, project tbl:concerts #1, project col:concerts/year #2, comparative #2 #3 greatequal/2014, group #4 #1, superlative #1 #5, project col:stadium/name #6, project col:stadium/Capacity #6, union #7 #8", "alternatives": "select tbl:stadium, project tbl:concerts #1, project col:concerts/year #2, comparative #2 #3 greatequal/2014, group #4 #1, superlative #1 #5, project col:stadium/name #6, project col:stadium/Capacity #6, union #7 #8"}
{"input": "What is the document id with 1 to 2 paragraphs?", "prediction": "select col:Documents, project col:Documents/document_id #1, group #1 #2, comparative #2 #3 greatequal/1, comparative #2 #3 lessequal/2", "alternatives": "select col:Paragraphs, project tbl:Paragraphs #1, group #2 #1, comparative #1 #3 greatequal/1, comparative #1 #3 lessequal/2, project col:Paragraphs/Document_ID #1, intersection #6 #4 #5"}
{"input": "What is maximum and minimum death toll caused each time?", "prediction": "select tbl:Trauma, project col:Trauma/Toll #1, group #2 #1, aggregate max #3, aggregate min #3, union #4 #5", "alternatives": "select tbl:Trauma, project col:Trauma/Toll #1, aggregate max #3, group #2 #1, aggregate min #3, union #4 #5"}
{"input": "For each product, show its name and the number of times it was ordered.", "prediction": "select col:Order_Items, project col:Products/product_name #1, project tbl:Order_Items #1, group #3 #1, union #2 #4", "alternatives": "select col:Products, project col:Products/product_name #1, project tbl:Orders #2, group #3 #2, union #2 #4"}
{"input": "Which employee received the most awards in evaluations? Give me the employee name.", "prediction": "select tbl:employee, project tbl:evaluation #1, group #2 #1, superlative #1 #3, project col:employee/name #4", "alternatives": "select tbl:employee, project tbl:evaluation #1, project none #2, group #3 #1, superlative #1 #4, project col:employee/Name #5"}
{"input": "How many pets have a greater weight than 10?", "prediction": "select tbl:Person, project col:Person/weight #1, comparative #1 #2 great/10, aggregate count #3", "alternatives": "select tbl:Pets, project col:Pets/weight #1, comparative #1 #2 great/10, aggregate count #3"}
{"input": "Find number of pets owned by students who are older than 20.", "prediction": "select tbl:Students, comparative #1 #1 great/20 col:Students/age, project tbl:Pets #2, aggregate count #3", "alternatives": "select tbl:Students, comparative #1 #1 great/20 col:Students/age, project tbl:Pets #2, aggregate count #3."}
{"input": "Which shops' number products is above the average? Give me the shop names.", "prediction": "select tbl:shop, project col:shop/Product_ID #1, aggregate avg #2, comparative #1 #2 great/#3, project col:shop/Shop_Name #4", "alternatives": "select tbl:shop, project col:shop/Product_ID #1, aggregate avg #2, project col:shop/Shop_Name #4, comparative #1 #2 great/#3"}
{"input": "How many players are from each country?", "prediction": "select col:country, project tbl:match_season #1, group #2 #1, union #1 #3", "alternatives": "select col:players, project tbl:players #1, group #2 #1, union #1 #3"}
{"input": "find the id, name and age for visitors who visited some museums more than once.", "prediction": "select tbl:museum, project tbl:visits #1, group #2 #1, comparative #1 #3 great/1, project col:museum/id #4, project col:museum/name #4, project col:museum/age #4, union #5 #6 #7", "alternatives": "select tbl:museum, project tbl:museum #1, group #2 #1, comparative #1 #3 great/1, project col:museum/id #4, project col:museum/name #4, project col:museum/age #4, union #5 #6 #7"}
{"input": "show the name of all bridges that was designed by american archtect, and sort the result by the bridge feet length.", "prediction": "select tbl:bridge, comparative #1 #1 equal/American archtect col:architecture/Design, project col:bridge/Name #2, project col:bridge/Feet #2, sort #3 #4", "alternatives": "select tbl:bridge, comparative #1 #1 equal/American archtect col:architecture/Design, project col:bridge/Feet #2, project col:bridge/Name #2, sort #3 #4"}
{"input": "Find all airlines that have fewer than 200 flights.", "prediction": "select col:flight, project tbl:flight #1, comparative #1 #2 less/200", "alternatives": "select col:flight, project tbl:flight #1, group #2 #1, comparative #1 #3 less/200"}
{"input": "What are the minimum and maximum number of products across all the shops?", "prediction": "select tbl:shop, project col:shop/Num_of_Products #1, aggregate col:shop/Num_of_Products #2, aggregate min #3, aggregate max #3, union #4 #5", "alternatives": "select tbl:shop, aggregate min #3, aggregate col:shop/Num_of_Products #2, project col:shop/Num_of_Products #1, aggregate max #3, union #4 #5"}
{"input": "show the name of all bridges that was designed by american archtect, and sort the result by the bridge feet length.", "prediction": "select tbl:bridge, comparative #1 #1 equal/American archtect col:architecture/Design, project col:bridge/Name #2, project col:bridge/Feet #2, sort #3 #4", "alternatives": "select tbl:bridge, project none #1, comparative #1 #2 equal/American, project col:bridge/name #3, project col:bridge/length_feet #3, sort #4 #5"}
{"input": "When was the order placed whose shipment tracking number is 3452? Give me the date.", "prediction": "select tbl:Shipments, project col:Shipments/shipment_tracking_number #1, comparative #1 #2 equal/3452, project col:Shipments/order_placed #3", "alternatives": "select col:Shipments, aggregate count #1, comparative #1 #2 equal/3452, project tbl:Orders #3, project col:Orders/date_order_placed #4"}
{"input": "What is the last name of the student who has a cat that is 3 years old?", "prediction": "select tbl:Student, project tbl:Cat #1, comparative #1 #2 equal/3, project col:Student/LName #3", "alternatives": "select tbl:Student, project val:Pets/PetType/cat #1, comparative #1 #2 equal/3, project col:Student/LName #3"}
{"input": "What are the death and injury situations caused by the ship with tonnage 't'?", "prediction": "select tbl:ship, project col:ship/Tonnage #1, comparative #1 #2 equal/t, project col:ship/Number_of_Deaths #3, project col:ship/Injury_Statement #3, union #4 #5", "alternatives": "select tbl:ship, project col:ship/tonnage #1, comparative #1 #2 equal/t, project col:death/killed #3, project col:death/injured #3, union #4 #5"}
{"input": "Where is the youngest teacher from?", "prediction": "select val:teachers, project col:teachers/Age #1, superlative #1 #2", "alternatives": "select tbl:teacher, project col:teacher/Age #1, superlative #1 #2, project col:teacher/Hometown #3"}
{"input": "Return the names and template ids for documents that contain the letter w in their description.", "prediction": "select tbl:Documents, project col:Documents/document_description #1, comparative #1 #2 like%w%, project col:Documents/document_name #3, project col:Documents/template_id #3, union #4 #5", "alternatives": "select tbl:Documents, project col:Documents/document_description #1, comparative #1 #2 like%w%, project col:Documents/document_name #3, project col:Documents/template_id #3, union #4 #5."}
{"input": "How many books fall into each category?", "prediction": "select col:book, project tbl:book #1, group #2 #1, union #1 #3", "alternatives": "select col:book, union #1 #3, group #2 #1, project tbl:book #1"}
{"input": "How many players are there for each hand type?", "prediction": "select col:Player, project tbl:Player #1, group #2 #1, union #1 #3", "alternatives": "select col:Player_Hands, project tbl:Player #1, group #2 #1, union #1 #4"}
{"input": "Give the flight numbers of flights leaving from APG.", "prediction": "select tbl:flight, comparative #1 #1 equal/APG col:flight/origin, project tbl:flight #2", "alternatives": "select tbl:flight, comparative #1 #1 equal/APG col:airlines/origin, project tbl:flight #2"}
{"input": "What are the ids and names of the battles that led to more than 10 people killed in total.", "prediction": "select tbl:battle, project tbl:Killed #1, group #2 #1, comparative #1 #3 great/10, project col:battle/BattleId #4, project col:battle/Name #4, union #5 #6", "alternatives": "select tbl:battle, project tbl:Killed #1, project col:battle/Name #4, comparative #1 #3 great/10, project col:battle/BattleId #4, group #2 #1, union #5 #6"}
{"input": "What are the codes of countries with more than 50 players?", "prediction": "select col:country, project tbl:country #1, group #2 #1, comparative #1 #3 great/50, project col:country/Country_code #4", "alternatives": "select col:country, project none #1, group #2 #1, comparative #1 #3 great/50, project col:country/Country_code #4"}
{"input": "Find the number of shops in each location.", "prediction": "select col:shop, project tbl:shop #1, group #2 #1, union #1 #3", "alternatives": "select col:shop, union #1 #3, group #2 #1, project tbl:shop #1"}
{"input": "Show names of teachers and the courses they are arranged to teach.", "prediction": "select tbl:teachers, project col:teachers/Name #1, project tbl:teaches #1, project col:courses/Course_Arrangement #3, union #2 #4", "alternatives": "select tbl:teachers, project col:teachers/Name #1, union #2 #4, project col:courses/Course_Arrangement #3, project tbl:teaches #1"}
{"input": "What are the distinct template type descriptions for the templates ever used by any document?", "prediction": "select tbl:Document_Templates, project tbl:Document_Templates #1, group #2 #1, comparative #1 #3 none", "alternatives": "select tbl:Document_Templates, comparative #1 #3 none, group #2 #1, project tbl:Document_Templates #1"}
{"input": "What are the publishers who have published a book in both 1989 and 1990?", "prediction": "select col:book, comparative #1 #1 equal/1989 col:book/Year, comparative #2 #2 equal/1990 col:book/Year", "alternatives": "select col:book, comparative #1 #1 equal/1989 col:book/Year, comparative #2 #2 equal/1990 col:book/Year, project col:book/Publisher #3"}
{"input": "List all airline names and their abbreviations in \"USA\".", "prediction": "select tbl:airlines, project col:airlines/name #1, project col:airlines/abbreviation #1, comparative #3 #3 equal/USA", "alternatives": "select tbl:airlines, project col:airlines/name #1, project col:airlines/abbreviation #1, union #2 #3"}
{"input": "What are the names and year of construction for the mills of 'Grondzeiler' type?", "prediction": "select tbl:mill, project col:mill/Type #1, comparative #1 #2 equal/Grondzeiler, project col:mill/Name #3, project col:mill/Year_of_Contruction #3, union #4 #5", "alternatives": "select tbl:mill, project col:mill/Type #1, comparative #1 #2 equal/Grondzeiler, project col:mill/Name #3, union #4 #5, project col:mill/Year_of_Contruction #3"}
{"input": "What is the template type code for template type description \"Book\".", "prediction": "select tbl:Ref_Template_Types, comparative #1 #1 equal/Book col:Ref_Template_Types/Template_Type_Description, project col:Ref_Template_Types/Template_Type_Code #2", "alternatives": "select tbl:Ref_Template_Types, project col:Ref_Template_Types/Template_Type_Description #1, comparative #1 #2 equal/Book, project col:Ref_Template_Types/Template_Type_Code #3"}
{"input": "What are the ids, version numbers, and type codes for each template?", "prediction": "select tbl:Templates, project col:Templates/template_id #1, project col:Templates/version_number #1, project col:Templates/type_code #1, union #2 #3 #4", "alternatives": "select tbl:Templates, project col:Templates/Template_ID #1, project col:Templates/Version_Number #1, project col:Templates/Template_Type_Code #1, union #2 #3 #4"}
{"input": "What are the opening year and staff number of the museum named Plaza Museum?", "prediction": "select tbl:Museum, comparative #1 #1 equal/Plaza Museum col:Museum/name, project col:Museum/open_year #2, project col:Museum/staff_number #2, union #3 #4", "alternatives": "select tbl:museum, comparative #1 #1 equal/Plaza Museum col:museum/name, project col:museum/open_year #2, project col:museum/staff_number #2, union #3 #4"}
{"input": "Find the number of matches happened in each year.", "prediction": "select col:match, project tbl:match #1, group #2 #1, union #1 #3", "alternatives": "select col:match, union #1 #3, group #2 #1, project tbl:match #1"}
{"input": "Return the number of  airports.", "prediction": "select tbl:airport, aggregate count #1", "alternatives": "select an airport, aggregate count #1"}
{"input": "Which airlines have a flight with destination airport AHD?", "prediction": "select col:flight, project tbl:flight #1, project col:flight/destination #2, comparative #1 #3 equal/AHD", "alternatives": "select tbl:flights, project col:flights/DestAirport #1, comparative #1 #2 equal/AHD"}
{"input": "Find the first name and country code of the player who did the most number of tours.", "prediction": "select tbl:Player, project tbl:Tourist_Attendance #1, group #2 #1, superlative #1 #3, project col:Player/first_name #4, project col:Player/country_code #4, union #5 #6", "alternatives": "select tbl:Player, project tbl:Tournament #1, group #2 #1, superlative #1 #3, project col:Player/first_name #4, project col:Player/country_code #4, union #5 #6"}
{"input": "How many books are there for each publisher?", "prediction": "select col:book, project tbl:book #1, group #2 #1, union #1 #3", "alternatives": "select col:book, union #1 #3, group #2 #1, project tbl:book #1"}
{"input": "Which cities do more than one employee under age 30 come from?", "prediction": "select col:Employees, project tbl:Employees #1, comparative #2 #2 less/30 col:Employees/Age, group #3 #1, comparative #1 #4 great/1", "alternatives": "select col:employee, project tbl:employee #1, project col:employee/Age #2, comparative #2 #3 less/30, group #4 #1, comparative #1 #5 great/1"}
{"input": "What is the name of each teacher and what course they teach?", "prediction": "select tbl:teachers, project col:teachers/Name #1, project tbl:teaches #1, project col:courses/course_name #3, union #2 #4", "alternatives": "select col:CLASS, project col:EMPLOYEE/EMP_NAME #1, project col:CLASS/CRS_CODE #1, union #2 #3"}
{"input": "How many different templates do all document use?", "prediction": "select tbl:Document_Templates, project col:Document_Templates/document_type_code #1, aggregate count #3", "alternatives": "select tbl:Document_Types, project col:Document_Types/document_type_code #1, aggregate count #3"}
{"input": "Which customers have made at least two orders? Give me each customer name and number of orders made.", "prediction": "select col:Customers, project tbl:Orders #1, group #2 #1, comparative #1 #3 greatequal/2, project col:Customers/customer_name #4, project tbl:Orders #4, group #6 #4, union #5 #7", "alternatives": "select tbl:Customers, project tbl:Orders #1, group #2 #1, comparative #1 #3 greatequal/2, project col:Customers/customer_name #4, project tbl:Orders #4, aggregate count #6, union #5 #7"}
{"input": "Which orders are made by the customer named \"Jeramie\"? Give me the order ids and status.", "prediction": "select tbl:Customer_Orders, comparative #1 #1 equal/Jeramie col:Customers/customer_name, project col:Customer_Orders/order_id #2, project col:Customer_Orders/order_status #2, union #3 #4", "alternatives": "select tbl:Customers, comparative #1 #1 equal/Jeramie col:Customers/customer_name, project tbl:Orders #2, project col:Orders/order_id #3, project col:Orders/order_status #3, union #4 #5"}
{"input": "What are the distinct ids of products ordered between 1975-01-01 and 1976-01-01??", "prediction": "select tbl:Products, comparative #1 #1 greatequal/1975-01-01 col:Products/date_ordered, comparative #2 #2 lessequal/1976-01-01 col:Products/date_ordered, project col:Products/product_id #3", "alternatives": "select tbl:Products, comparative #1 #1 greatequal/1975-01-01 col:Products/year, comparative #2 #2 lessequal/1976-01-01 col:Products/date_ordered, project col:Products/product_id #3"}
{"input": "What are flight numbers of flights departing from Airport \"APG\"?", "prediction": "select tbl:flight, comparative #1 #1 equal/APG col:airport/Airport_Name, project tbl:flight #2", "alternatives": "select tbl:flights, project col:flights/SourceAirport #1, comparative #1 #2 equal/APG, project col:flights/FlightNo #3"}
{"input": "List singer names and number of concerts for each singer.", "prediction": "select col:Concerts, project col:Songs/Name #1, project tbl:Concerts #1, group #3 #1, union #2 #4", "alternatives": "select col:Concerts, project col:Songs/Name #1, project tbl:Concerts #1, group #3 #1, union #2 #4."}
{"input": "Count the number of flights into ATO.", "prediction": "select tbl:flight, comparative #1 #1 equal/ATO col:flight/origin, aggregate count #2", "alternatives": "select tbl:flights, comparative #1 #1 equal/ATO col:flights/DestAirport, aggregate count #2"}
{"input": "What are the names of the teachers who are aged either 32 or 33?", "prediction": "select tbl:teachers, project col:teachers/Age #1, comparative #1 #2 equal/32, comparative #1 #2 equal/33, union #3 #4, project col:teachers/Name #5", "alternatives": "select tbl:teachers, project col:teachers/Age #1, union #3 #4, comparative #1 #2 equal/33, comparative #1 #2 equal/32, project col:teachers/Name #5"}
{"input": "Return the ids corresponding to templates with the description 'Presentation'.", "prediction": "select tbl:Templates, project col:Templates/description #1, comparative #1 #2 equal/Presentation, project col:Templates/template_id #3", "alternatives": "select tbl:Templates, project col:Templates/description #1, project col:Templates/template_id #3, comparative #1 #2 equal/Presentation"}
{"input": "For each hometown, how many teachers are there?", "prediction": "select col:teachers, project tbl:teachers #1, group #2 #1, union #1 #3", "alternatives": "select col:teacher, project tbl:teacher #1, group #2 #1, union #1 #3"}
{"input": "Which customers have ever canceled the purchase of the product \"food\" (the item status is \"Cancel\")?", "prediction": "select tbl:Products_for_Hire, project tbl:Customer_Orders #1, comparative #1 #2 equal/food, project col:Customer_Orders/product_status_code #3, comparative #3 #4 equal/Cancel", "alternatives": "select tbl:Products_for_Hire, comparative #3 #4 equal/Cancel, comparative #1 #2 equal/food, project col:Customer_Orders/product_status_code #3, project tbl:Customer_Orders #1"}
{"input": "List the names of employees and sort in ascending order of age.", "prediction": "select tbl:employee, project col:employee/name #1, project col:employee/age #1, sort #2 #3 ascending", "alternatives": "select tbl:employee, project col:employee/Name #1, project col:employee/Age #1, sort #2 #3 ascending"}
{"input": "What are all distinct countries where singers above age 20 are from?", "prediction": "select tbl:song, comparative #1 #1 great/20 col:song/age, project col:country/country #2", "alternatives": "select col:artist, comparative #1 #1 great/20 col:artist/Age"}
{"input": "What are the age and hometown of teachers?", "prediction": "select tbl:teachers, project col:teachers/Age #1, project col:teachers/Hometown #1, union #2 #3", "alternatives": "select tbl:teacher, project col:teacher/Age #1, project col:teacher/Hometown #1, union #2 #3"}
{"input": "What are the titles of movies and books corresponding to companies incorporated in China?", "prediction": "select tbl:film, comparative #1 #1 equal/China col:company/Country, project col:book/Title #2, project col:book/Title #3, union #4 #5", "alternatives": "select tbl:film, comparative #1 #1 equal/China col:company/Country, project col:book/Title #2, union #4 #5, project col:book/Title #3"}
{"input": "For each stadium, how many concerts play there?", "prediction": "select col:stadium, project tbl:conzerts #1, group #2 #1, union #1 #3", "alternatives": "select col:stadium, project tbl:concert #1, group #2 #1, union #1 #3"}
{"input": "What are the notes of the death events which has substring 'East'?", "prediction": "select tbl:Events, comparative #1 #1 like%East% col:Events/Event_Name, project col:Events/Event_Notes #2", "alternatives": "select tbl:Events, comparative #1 #1 like%East% col:Events/Event_Name, project col:Events/Event_Notification #2"}
{"input": "Show all company names with a movie directed in year 1999.", "prediction": "select tbl:company, project tbl:film #1, project col:film/Year #2, comparative #1 #3 equal/1999, project col:company/Company #4", "alternatives": "select tbl:company, project tbl:film #1, project col:company/Company #4, comparative #1 #3 equal/1999, project col:film/Year #2"}
{"input": "Return the average, maximum, and minimum budgets in millions for movies made before the year 2000.", "prediction": "select tbl:Movie, comparative #1 #1 less/2000 col:Movie/year, project col:Movie/budget #2, aggregate avg #3, aggregate max #3, aggregate min #3, union #4 #5 #6", "alternatives": "select tbl:movie, project col:movie/Year #1, comparative #1 #2 less/2000, project col:movie/Budget_million #3, aggregate avg #4, aggregate max #4, aggregate min #4, union #5 #6 #7"}
{"input": "Which employee received the most awards in evaluations? Give me the employee name.", "prediction": "select tbl:employee, project tbl:evaluation #1, group #2 #1, superlative #1 #3, project col:employee/name #4", "alternatives": "select tbl:employee, superlative #1 #3, group #2 #1, project tbl:evaluation #1, project col:employee/name #4"}
{"input": "What are the first names and birth dates of players from the USA?", "prediction": "select tbl:Player, comparative #1 #1 equal/USA col:Player/country, project col:Player/first_name #2, project col:Player/birth_date #2, union #3 #4", "alternatives": "select tbl:Player, project col:Player/first_name #2, comparative #1 #1 equal/USA col:Player/country, project col:Player/birth_date #2, union #3 #4"}
{"input": "Show the stadium name and the number of concerts in each stadium.", "prediction": "select col:match_season, project col:stadium/name #1, project tbl:concerts #1, group #3 #1, union #2 #4", "alternatives": "select col:concert, project col:stadium/Name #1, project tbl:concert #1, group #3 #1, union #2 #4"}
{"input": "Count the number of employees for each city.", "prediction": "select col:Employee, project tbl:Employee #1, group #2 #1, union #1 #3", "alternatives": "select col:Employee, group #2 #1, project tbl:Employee #1, union #1 #3"}
{"input": "How many flights depart from 'APG'?", "prediction": "select tbl:flight, comparative #1 #1 equal/APG col:flight/origin, aggregate count #2", "alternatives": "select tbl:flights, comparative #1 #1 equal/APG col:flights/SourceAirport, aggregate count #2"}
{"input": "How many different results are there for the battles?", "prediction": "select tbl:battle, project col:battle/Result #1, aggregate count #3", "alternatives": "select tbl:battle, aggregate count #2"}
{"input": "What are the names of the teachers and the courses they teach in ascending alphabetical order by the name of the teacher?", "prediction": "select tbl:teachers, project col:teachers/Name #1, project tbl:teaches #1, project col:courses/course_name #3, union #2 #4, sort #5 #4 ascending", "alternatives": "select tbl:teachers, project col:teachers/Name #1, project tbl:course #1, union #2 #3, sort #4 #2 ascending"}
{"input": "What are the type codes and descriptions for all template types?", "prediction": "select tbl:Templates, project col:Templates/Template_Type_Code #1, project col:Templates/Template_Description #1, union #2 #3", "alternatives": "select tbl:Templates, union #2 #3, project col:Templates/Template_Description #1, project col:Templates/Template_Type_Code #1"}
{"input": "Find the average ranking for each player and their first name.", "prediction": "select col:Player, project col:Player/rank #1, group #2 #1, project col:Player/first_name #1, union #3 #4", "alternatives": "select col:players, project col:rankings/ranking #1, group #2 #1, project col:players/first_name #1, union #3 #4"}
{"input": "What are the towns from which at least two teachers come from?", "prediction": "select col:teachers, project val:teachers/Hometown #1, group #2 #1, comparative #1 #3 greatequal/2", "alternatives": "select col:teacher, project tbl:teacher #1, group #2 #1, comparative #1 #3 greatequal/2"}
{"input": "List the ids of all distinct orders ordered by placed date.", "prediction": "select tbl:Orders, project none #1, project col:Orders/order_id #2, project col:Orders/order_placed_date #2, sort #3 #4", "alternatives": "select tbl:Orders, project none #1, project col:Orders/order_id #2, project col:Orders/date_order_placed #2, sort #3 #4"}
{"input": "Find the average ranking for each player and their first name.", "prediction": "select col:Player, project col:Player/rank #1, group #2 #1, project col:Player/first_name #1, union #3 #4", "alternatives": "select col:Player, project col:Player/ranked #1, group #2 #1, project col:Player/first_name #1, union #3 #4"}
{"input": "Count the number of paragraphs.", "prediction": "select tbl:paragraph, aggregate count #1", "alternatives": "select tbl:paragraph, aggregate count #2"}
{"input": "List the names of all winners who played in both 2013 and 2016.", "prediction": "select tbl:winner, comparative #1 #1 equal/2013 col:playground/Year, comparative #1 #1 equal/2016 col:playground/Year, intersection #1 #2 #3, project col:winner/Name #4", "alternatives": "select tbl:winner, intersection #1 #2 #3, comparative #1 #1 equal/2016 col:playground/Year, comparative #1 #1 equal/2013 col:playground/Year, project col:winner/Name #4"}
{"input": "What is the abbreviation of the airline has the fewest flights and what country is it in?", "prediction": "select tbl:airlines, project tbl:flight #1, group #2 #1, superlative #1 #3, project col:airlines/abbreviation #4", "alternatives": "select tbl:airlines, project tbl:flight #1, group #2 #1, project col:airlines/abbreviation #4, superlative #1 #3"}
{"input": "Count the number of matches.", "prediction": "select tbl:match, aggregate count #1", "alternatives": "select tbl:matches, aggregate count #1"}
{"input": "Show all book categories and the number of books in each category.", "prediction": "select col:book, project tbl:book #1, group #2 #1, union #1 #3", "alternatives": "select col:book, group #2 #1, project tbl:book #1, union #1 #3"}
{"input": "find the names of museums which have more staff than the minimum staff number of all museums opened after 2010.", "prediction": "select tbl:museen, comparative #1 #1 great/2010 col:museen/Open_Year, project col:museen/Staff #2, aggregate min #3, comparative #1 #3 great/#4, project col:museen/Name #5", "alternatives": "select tbl:museum, comparative #1 #1 great/2010 col:museum/Open_Year, project col:museum/Num_of_Staff #2, group #3 #2, aggregate min #4, project col:museum/Num_of_Staff #1, group #6 #1, comparative #1 #7 great/#5, project col:museum/Name #8"}
{"input": "Return the id and type code of the template that is used for the greatest number of documents.", "prediction": "select tbl:Documents, project col:Documents/document_id #1, group #1 #2, superlative #2 #3, project col:Documents/document_type_code #4, project col:Documents/document_id #4, union #5 #6", "alternatives": "select tbl:Documents, superlative #2 #3, group #1 #2, project col:Documents/document_id #1, project col:Documents/document_type_code #4, project col:Documents/document_id #4, union #5 #6"}
{"input": "What are the names of the stadiums without any concerts?", "prediction": "select tbl:stadium, comparative #1 #1 tbl:convention, discard #1 #2, project col:stadium/name #3", "alternatives": "select tbl:stadium, comparative #1 #1 tbl:concert, discard #1 #2, project col:stadium/Name #3"}
{"input": "What is the code of airport that has fewest number of flights?", "prediction": "select tbl:airport, project tbl:flight #1, group #2 #1, superlative #1 #3, project col:airport/code #4", "alternatives": "select col:flight, project tbl:flight #1, group #2 #1, superlative #1 #3"}
{"input": "What are flight numbers of flights arriving at Airport \"APG\"?", "prediction": "select tbl:flight, comparative #1 #1 equal/APG col:airport/Airport_Name, project tbl:flight #2", "alternatives": "select tbl:flights, project col:flights/DestAirport #1, comparative #1 #2 equal/APG, project col:flights/FlightNo #3"}
{"input": "What are the names of documents that use templates with the code BK?", "prediction": "select tbl:Documents, project tbl:Documents #1, project col:Documents/template_code #2, comparative #1 #3 equal/BK, project col:Documents/document_name #4", "alternatives": "select tbl:Documents, project col:Documents/template_code #2, project tbl:Documents #1, comparative #1 #3 equal/BK, project col:Documents/document_name #4"}
{"input": "List the first and last name of all players who are left / L hand in the order of birth date.", "prediction": "select tbl:Player, project col:Player/hands #1, comparative #1 #2 equal/L, project col:Player/first_name #3, project col:Player/last_name #3, union #4 #5, sort #6 #5", "alternatives": "select tbl:Player, comparative #1 #1 equal/L col:Player/hand, project col:Player/first_name #2, project col:Player/last_name #2, union #3 #4, sort #5 #4"}
{"input": "How many different store locations are there?", "prediction": "select col:district, aggregate count #2", "alternatives": "select col:branch, aggregate count #2"}
{"input": "What is the year that had the most concerts?", "prediction": "select col:conzert, project tbl:conzert #1, group #2 #1, superlative #1 #3", "alternatives": "select col:conzert, group #2 #1, project tbl:conzert #1, superlative #1 #3"}
{"input": "Find the first name of students who have both cat and dog pets.", "prediction": "select tbl:Student, project tbl:Pets #1, comparative #1 #2 equal/Cat, comparative #1 #2 equal/Dog, intersection #1 #3 #4, project col:Student/Fname #5", "alternatives": "select tbl:Student, intersection #1 #3 #4, comparative #1 #2 equal/Cat, comparative #1 #2 equal/Dog, project tbl:Pets #1, project col:Student/Fname #5"}
{"input": "Find the name of tourney that has more than 10 matches.", "prediction": "select tbl:turner, project tbl:match #1, group #2 #1, comparative #1 #3 great/10, project col:turner/name #4", "alternatives": "select tbl:turner, project tbl:match #1, group #2 #1, comparative #1 #3 great/10, project col:tournament/Name #4"}
{"input": "What is the version number and template type code for the template with version number later than 5?", "prediction": "select tbl:Templates, comparative #1 #1 great/5 col:Templates/version_number, project col:Templates/version_number #2, project col:Templates/ template_type_code #2, union #3 #4", "alternatives": "select tbl:Templates, project col:Templates/Version_Number #1, comparative #1 #2 great/5, project col:Templates/Version_Number #3, project col:Templates/Template_Type_Code #3, union #4 #5"}
{"input": "find the number of distinct country codes of all players.", "prediction": "select tbl:country, aggregate count #2", "alternatives": "select tbl:players, project col:players/country_code #1, aggregate count #3"}
{"input": "List the first name and birth date of all players from the country with code USA.", "prediction": "select tbl:Player, project col:Player/country #1, project col:Player/country #2, comparative #1 #3 equal/USA, project col:Player/first_name #4, project col:Player/birth_date #4, union #5 #6", "alternatives": "select tbl:Player, project col:Player/country #1, project col:Player/country #2, project col:Player/first_name #4, comparative #1 #3 equal/USA, project col:Player/birth_date #4, union #5 #6"}
{"input": "What is the document id, template id and description for document named \"Robbin CV\"?", "prediction": "select tbl:Documents, comparative #1 #1 equal/Robbin CV col:Documents/document_name, project col:Documents/document_id #2, project col:Documents/template_id #2, project col:Documents/document_description #2, union #3 #4 #5", "alternatives": "select tbl:Documents, comparative #1 #1 equal/Robbin CV col:Documents/Document_Name, project col:Documents/Document_ID #2, project col:Documents/Template_ID #2, project col:Documents/Document_Description #2, union #3 #4 #5"}
{"input": "What is the last name of the student who has a cat that is 3 years old?", "prediction": "select tbl:Student, project tbl:Cat #1, comparative #1 #2 equal/3, project col:Student/LName #3", "alternatives": "select tbl:Student, comparative #1 #2 equal/3, project tbl:Cat #1, project col:Student/LName #3"}
{"input": "Find the highest rank of losers in all matches.", "prediction": "select tbl:match, project col:match/Losers #1, group #2 #1, superlative #1 #3", "alternatives": "select tbl:matches, project col:matches/loser_rank #1, project col:matches/loser_rank #2, aggregate min #3"}
{"input": "What are the id and name of the museum visited most times?", "prediction": "select tbl:Museum, project tbl:Visits #1, group #2 #1, superlative #1 #3, project col:Museum/id #4, project col:Museum/name #4, union #5 #6", "alternatives": "select tbl:Museum, project tbl:Visits #1, group #2 #1, superlative #1 #3, project col:Museum/museum_id #4, project col:Museum/museum_name #4, union #5 #7"}
{"input": "Find the first name and age of students who have a pet.", "prediction": "select tbl:Student, comparative #1 #1 tbl:Pets, project col:Student/Fname #2, project col:Student/Age #2, union #3 #4", "alternatives": "select tbl:Student, comparative #1 #1 tbl:Pets, project col:Student/Fname #2, project col:Student/Age #2, union #3 #4."}
{"input": "What are the ids, names, and descriptions for all documents?", "prediction": "select tbl:Documents, project col:Documents/Document_ID #1, project col:Documents/Document_Name #1, project col:Documents/Document_Description #1, union #2 #3 #4", "alternatives": "select tbl:Documents, project col:Documents/Document_ID #1, project col:Documents/Document_Name #1, project col:Documents/Description #1, union #2 #3 #4"}
{"input": "How many countries are listed?", "prediction": "select tbl:country, aggregate count #1", "alternatives": "select tbl:countries, comparative #1 #1 none, aggregate count #2"}
{"input": "List the ids of all distinct orders ordered by placed date.", "prediction": "select tbl:Orders, project none #1, project col:Orders/order_id #2, project col:Orders/order_placed_date #2, sort #3 #4", "alternatives": "select tbl:Orders, project none #1, project col:Orders/order_id #2, project col:Orders/order_placed_date #2, sort #4 #3"}
{"input": "What are the ids of documents that contain the paragraph text 'Brazil' and 'Ireland'?", "prediction": "select tbl:Documents, project col:Documents/paragraph_text #1, comparative #1 #2 like%Brazil%, comparative #1 #2 like%Ireland%, intersection #1 #3 #4, project col:Documents/document_id #5", "alternatives": "select col:Paragraphs, comparative #1 #1 equal/Brazil col:Paragraphs/Paragraph_Text, comparative #1 #1 equal/Ireland col:Paragraphs/Paragraph_Text, intersection #1 #2 #3, project col:Paragraphs/Document_ID #4"}
{"input": "How many flights land in Aberdeen or Abilene?", "prediction": "select tbl:flight, comparative #1 #1 equal/Aberdeen col:flight/origin, comparative #1 #1 equal/Abrilene col:flight/destination, union #2 #3, aggregate count #4", "alternatives": "select tbl:flights, comparative #1 #1 equal/Aberdeen col:airports/City, comparative #1 #1 equal/Abilene col:airports/City, union #2 #3, aggregate count #4"}
{"input": "Return the number of flights arriving in Aberdeen.", "prediction": "select tbl:flight, comparative #1 #1 equal/Aberdeen col:airport/city, aggregate count #2", "alternatives": "select tbl:flight, comparative #1 #1 equal/Aberdeen col:airport/name, aggregate count #2"}
{"input": "What is the average weight for each type of pet?", "prediction": "select col:Pets, project col:Pets/weight #1, group #2 #1, union #1 #3", "alternatives": "select tbl:Pets, project col:Pets/PetType #1, project col:Pets/weight #2, group #3 #2, union #2 #4"}
{"input": "How many architects are female?", "prediction": "select tbl:architects, comparative #1 #1 equal/F col:architects/gender, aggregate count #2", "alternatives": "select tbl:architect, comparative #1 #1 equal/F col:architect/Sex, aggregate count #2"}
{"input": "What is the first name of every student who has a dog but does not have a cat?", "prediction": "select tbl:Student, comparative #1 #1 equal/dog col:Student/Staff_Name, comparative #1 #1 equal/Cat col:Student/Staff_Name, intersection #1 #2 #3, project col:Student/Fname #4", "alternatives": "select tbl:Student, comparative #1 #1 equal/dog col:Pets/PetType, comparative #2 #2 equal/cat col:Pets/PetType, discard #2 #3, project col:Student/Fname #4"}
{"input": "Show all movie titles, years, and directors, ordered by budget.", "prediction": "select tbl:film, project col:film/Title #1, project col:film/Year #1, project col:film/Director #1, project col:film/Budgeted #1, union #2 #3 #4, sort #6 #5", "alternatives": "select tbl:film, project col:film/Title #1, project col:film/Year #1, project col:film/Directed_by #1, project col:film/Budgeted #1, union #2 #3 #4, sort #6 #5"}
{"input": "How many shops are there in each location?", "prediction": "select col:shop, project tbl:shop #1, group #2 #1, union #1 #3", "alternatives": "select col:shop, union #1 #3, group #2 #1, project tbl:shop #1"}
{"input": "Show all publishers and the number of books for each publisher.", "prediction": "select col:book, project tbl:book #1, group #2 #1, union #1 #3", "alternatives": "select col:book, group #2 #1, project tbl:book #1, union #1 #3"}
{"input": "Which shop has the most employees? Give me the shop name.", "prediction": "select tbl:shop, project tbl:employee #1, group #2 #1, superlative #1 #3, project col:shop/Shop_name #4", "alternatives": "select tbl:shop, project tbl:EMPLOYEE #1, group #2 #1, superlative #1 #3, project col:shop/Shop_name #4"}
{"input": "List all document ids with at least two paragraphs.", "prediction": "select col:Documents, project tbl:Document_Paragraphs #1, group #2 #1, comparative #1 #3 greatequal/2", "alternatives": "select col:Paragraphs, project tbl:Paragraphs #1, group #2 #1, comparative #1 #3 greatequal/2, project col:Paragraphs/Document_ID #4"}
{"input": "Sort all the shops by number products in descending order, and return the name, location and district of each shop.", "prediction": "select tbl:shop, project col:shop/Product_ID #1, group #2 #1, project col:shop/Shop_Name #1, project col:shop/Location #1, project col:shop/District #1, union #3 #4 #5, sort #6 #5 descending", "alternatives": "select tbl:shop, project col:shop/Product_ID #1, union #3 #4 #5, project col:shop/Shop_Name #1, project col:shop/Location #1, project col:shop/District #1, group #2 #1, sort #6 #5 descending"}
{"input": "find the name of employee who was awarded the most times in the evaluation.", "prediction": "select tbl:employee, project tbl:evaluation #1, group #2 #1, superlative #1 #3, project col:employee/name #4", "alternatives": "select tbl:employee, comparative #1 #1 tbl:evaluation, group #2 #1, superlative #1 #3, project col:employee/name #4"}
{"input": "Which airlines have less than 200 flights?", "prediction": "select col:flight, project tbl:flight #1, comparative #1 #2 less/200", "alternatives": "select col:airlines, project tbl:flights #1, group #2 #1, comparative #1 #3 less/200"}
{"input": "Show names for all stadiums except for stadiums having a concert in year 2014.", "prediction": "select tbl:stadium, project tbl:conzert #1, project col:conzert/Year #2, comparative #1 #3 equal/2014, discard #1 #4, project col:stadium/name #5", "alternatives": "select tbl:stadium, project tbl:conzert #1, project col:conzert/Year #2, discard #1 #4, comparative #1 #3 equal/2014, project col:stadium/name #5"}
{"input": "Find the number of dog pets that are raised by female students (with sex F).", "prediction": "select tbl:Student, project col:Student/Sex #1, comparative #1 #2 equal/F, aggregate count #3", "alternatives": "select tbl:Student, comparative #1 #1 equal/F col:Student/Sex, project val:Pets/PetType/dog #2, group #3 #2, aggregate sum #4"}
{"input": "Return the type code of the template type with the description \"Book\".", "prediction": "select tbl:Templates, project col:Templates/description #1, comparative #1 #2 equal/Book, project col:Templates/type_code #3", "alternatives": "select tbl:Templates, comparative #1 #2 equal/Book, project col:Templates/description #1, project col:Templates/type_code #3"}
{"input": "Find the number of pets whose weight is heavier than 10.", "prediction": "select tbl:Person, project col:Person/weight #1, comparative #1 #2 great/10, aggregate count #3", "alternatives": "select tbl:Person, aggregate count #3, comparative #1 #2 great/10, project col:Person/weight #1"}
{"input": "What are the average ages of losers and winners across matches?", "prediction": "select tbl:match, project col:match/Launcher #1, project col:match/Winner #1, aggregate avg #2, aggregate avg #3", "alternatives": "select tbl:match, project col:match/Launcher #1, aggregate avg #2, project col:match/Winner #1, aggregate avg #3"}
{"input": "What are the first names of every student who has a cat or dog as a pet?", "prediction": "select tbl:Student, project tbl:PersonFriend #1, comparative #1 #2 equal/cat, comparative #1 #2 equal/dog, union #3 #4, project col:Student/Fname #5", "alternatives": "select tbl:Student, project tbl:Pets #1, comparative #1 #2 equal/cat, comparative #1 #2 equal/dog, union #3 #4, project col:Student/Fname #5"}
{"input": "Show all template type codes and the number of documents using each type.", "prediction": "select col:Documents, project tbl:Documents #1, group #2 #1, union #1 #3", "alternatives": "select col:Documents, union #1 #3, group #2 #1, project tbl:Documents #1"}
{"input": "Find the cities that have more than one employee under age 30.", "prediction": "select col:employee, project tbl:employee #1, comparative #2 #2 less/30 col:employee/Age, group #3 #1, comparative #1 #4 great/1", "alternatives": "select col:employee, project tbl:employee #1, project col:employee/Age #2, comparative #2 #3 less/30, group #4 #1, comparative #1 #5 great/1"}
{"input": "What are the ids of the students who do not own cats as pets?", "prediction": "select tbl:Student, comparative #1 #1 tbl:Pets, discard #1 #2, project col:Student/StuID #3", "alternatives": "select tbl:Student, comparative #1 #1 tbl:PersonFriend, discard #1 #2, project col:Student/StuID #3"}
{"input": "What is the name and country of origin of every singer who has a song with the word 'Hey' in its title?", "prediction": "select tbl:song, project tbl:song #1, project col:song/song_title #2, comparative #1 #3 like%Hey%, project col:artist/artist_name #4, project col:artist/country #4, union #5 #6", "alternatives": "select tbl:song, project tbl:song #1, project col:song/song_title #2, comparative #1 #3 like%Hey%, project col:artist/artist_name #4, project col:artist/country #4, union #5 #7"}
{"input": "Count the number of employees for each city.", "prediction": "select col:Employee, project tbl:Employee #1, group #2 #1, union #1 #3", "alternatives": "select col:employee, project tbl:employee #1, group #2 #1, union #1 #3"}
{"input": "Count the number of distinct store locations.", "prediction": "select col:district, comparative #1 #1 none, aggregate count #2", "alternatives": "select tbl:store, comparative #1 #1 none, aggregate count #3"}
{"input": "List the maximum weight and type for each type of pet.", "prediction": "select tbl:pet, project col:pet/Weight #1, group #2 #1, union #1 #3", "alternatives": "select tbl:pet_type, project col:pet_type/Weight #1, group #2 #1, union #1 #3"}
{"input": "Find the total amount of bonus given in all the evaluations.", "prediction": "select tbl:evaluation, project col:evaluation/amount_of_bonus #1, aggregate sum #2", "alternatives": "select tbl:evaluation, project col:evaluation/Bonus #1, aggregate sum #2"}
{"input": "Find the invoice numbers which are created before 1989-09-03 or after 2007-12-25.", "prediction": "select col:Invoices, comparative #1 #1 less/2007-12-25 col:Invoices/date_invoice_created, comparative #1 #1 great/1989-09-03 col:Invoices/date_invoice_created, union #2 #3", "alternatives": "select col:Invoices, comparative #1 #1 less/2009-03 col:Invoices/date_invoice_created, comparative #1 #1 great/2007-12-25 col:Invoices/date_invoice_created, union #2 #3"}
{"input": "What is the abbreviation of Airline \"JetBlue Airways\"?", "prediction": "select tbl:airlines, project col:airlines/abbreviation #1, comparative #2 #1 equal/JetBlue Airways", "alternatives": "select tbl:airline, project col:airlines/abbreviation #1, comparative #2 #1 equal/JetBlue Airways"}
{"input": "What are the names of the teachers who teach at least two courses?", "prediction": "select tbl:EMPLOYEE, project tbl:CLASS #1, group #2 #1, comparative #1 #3 greatequal/2, project col:EMPLOYEE/EMP_NAME #4", "alternatives": "select tbl:teacher, project tbl:course_arrange #1, group #2 #1, comparative #1 #3 greatequal/2, project col:teacher/Name #4"}
{"input": "find the number of players for each country.", "prediction": "select col:country, project tbl:match_season #1, group #2 #1, union #1 #3", "alternatives": "select col:country, project tbl:match_season #1, union #1 #3, group #2 #1"}
{"input": "Show countries where a singer above age 40 and a singer below 30 are from.", "prediction": "select tbl:song, comparative #1 #1 great/40 col:song/age, comparative #1 #1 less/30 col:song/age, project col:country/country #2", "alternatives": "select tbl:song, project col:country/country #2, comparative #1 #1 less/30 col:song/age, comparative #1 #1 great/40 col:song/age"}
{"input": "Which airlines have a flight with source airport AHD?", "prediction": "select col:flight, project tbl:flight #1, project col:airport/source #2, comparative #1 #3 equal/AHD", "alternatives": "select col:airlines, project tbl:flights #1, project col:flights/SourceAirport #2, comparative #1 #3 equal/AHD"}
{"input": "What is the age and hometown of every teacher?", "prediction": "select tbl:teachers, project col:teachers/Age #1, project col:teachers/Hometown #1, union #2 #3", "alternatives": "select tbl:teachers, project col:teachers/Hometown #1, project col:teachers/Age #1, union #2 #3"}
{"input": "What are the names of tournaments that have more than 10 matches?", "prediction": "select tbl:Tournament, project tbl:match #1, group #2 #1, comparative #1 #3 great/10, project col:Tournament/Name #4", "alternatives": "select col:matches, project tbl:matches #1, group #2 #1, comparative #1 #3 great/10, project col:matches/tourney_name #4"}
{"input": "Find the names of the customers who have order status both \"On Road\" and \"Shipped\".", "prediction": "select tbl:Customers, project tbl:Orders #1, comparative #1 #2 equal/On Road, comparative #1 #2 equal/Shipped, intersection #1 #3 #4, project col:Customers/customer_name #5", "alternatives": "select tbl:Customers, project tbl:Orders #1, project col:Orders/order_status #2, comparative #1 #3 equal/On Road, comparative #1 #3 equal/Shipped, intersection #1 #4 #5, project col:Customers/customer_name #6"}
{"input": "How many flights arriving in Aberdeen city?", "prediction": "select tbl:flight, comparative #1 #1 equal/Aberdeen col:airport/city, aggregate count #2", "alternatives": "select tbl:flights, comparative #1 #1 equal/Aberdeen col:airports/City, aggregate count #2"}
{"input": "What are the type codes and descriptions for all template types?", "prediction": "select tbl:Templates, project col:Templates/Template_Type_Code #1, project col:Templates/Template_Description #1, union #2 #3", "alternatives": "select tbl:Ref_Template_Types, project col:Ref_Template_Types/Template_Type_Code #1, project col:Ref_Template_Types/Template_Type_Description #1, union #2 #3"}
{"input": "What is the ship id and name that caused most total injuries?", "prediction": "select tbl:ship, project tbl:injury_accident #1, group #2 #1, superlative #1 #3, project col:ship/Ship_ID #4, project col:ship/Name #4, union #5 #6", "alternatives": "select col:injury_accident, project none #1, group #2 #1, superlative #1 #3, project col:injury_accident/Ship_ID #4, project col:injury_accident/Name #4, union #5 #6"}
{"input": "Show all paragraph texts for the document \"Customer reviews\".", "prediction": "select tbl:Documents, comparative #1 #1 equal/Customer reviews col:Documents/document_name, project col:Document_Paragraphs/paragraph_text #2", "alternatives": "select tbl:Documents, comparative #1 #1 equal/Customer reviews col:Documents/Document_Name, project col:Paragraphs/Paragraph_Text #2"}
{"input": "Give me the names of customers who have placed orders between 2009-01-01 and 2010-01-01.", "prediction": "select tbl:Customer_Orders, comparative #1 #1 lessequal/2010-01-01 col:Customer_Orders/order_date, comparative #2 #2 greatequal/2009-01-01 col:Customers/order_date, project col:Customers/customer_name #3", "alternatives": "select tbl:Customers, comparative #1 #1 lessequal/2010-01-01 col:Customer_Orders/order_date, comparative #2 #2 greatequal/2009-01-01 col:Customers/order_date, project col:Customers/customer_name #3"}
{"input": "List document IDs, document names, and document descriptions for all documents.", "prediction": "select tbl:Documents, project col:Documents/document_id #1, project col:Documents/document_name #1, project col:Documents/document_description #1, union #2 #3 #4", "alternatives": "select tbl:Documents, project col:Documents/document_id #1, project col:Documents/document_name #1, union #2 #3 #4, project col:Documents/document_description #1"}
{"input": "List singer names and number of concerts for each singer.", "prediction": "select col:Concerts, project col:Songs/Name #1, project tbl:Concerts #1, group #3 #1, union #2 #4", "alternatives": "select col:Concerts, union #2 #4, project tbl:Concerts #1, group #3 #1, project col:Songs/Name #1"}
{"input": "How many singers do we have?", "prediction": "select tbl:Songs, aggregate count #1", "alternatives": "select tbl:singer, aggregate count #1"}
{"input": "Find the manager name and district of the shop whose number of products is the largest.", "prediction": "select tbl:shop, project col:shop/Product_ID #1, group #2 #1, superlative #1 #3, project col:shop/Manager_Name #4, project col:shop/District #4, union #5 #6", "alternatives": "select tbl:shop, project col:shop/Product_Country #1, group #2 #1, superlative #1 #3, project col:shop/Manager_Name #4, project col:shop/District #4, union #5 #6."}
{"input": "Find the first name and gender of student who have more than one pet.", "prediction": "select tbl:Student, project tbl:Pets #1, group #2 #1, comparative #1 #3 great/1, project col:Student/Fname #4, project col:Student/Gender #4, union #5 #6", "alternatives": "select tbl:Students, project tbl:Pets #1, group #2 #1, comparative #1 #3 great/1, project col:Students/first_name #4, project col:Students/gender #4, union #5 #6"}
{"input": "Which year had the most matches?", "prediction": "select col:match, project tbl:match #1, group #2 #1, superlative #1 #3", "alternatives": "select col:match, project tbl:match #1, superlative #1 #3, group #2 #1"}
{"input": "what is the name and nation of the singer who have a song having 'Hey' in its name?", "prediction": "select tbl:song, project tbl:song #1, comparative #1 #2 like%Hey%, project col:artist/artist_name #3, project col:artist/nationality #3, union #4 #5", "alternatives": "select tbl:singer, comparative #1 #1 like%Hey% col:singer/Song_Name, project col:singer/Name #2, project col:singer/Country #2, union #3 #4"}
{"input": "Find the number of distinct name of losers.", "prediction": "select col:perpetrator, comparative #1 #1 tbl:loser, aggregate count #2", "alternatives": "select col:matches, aggregate count #2"}
{"input": "When was the order placed whose shipment tracking number is 3452? Give me the date.", "prediction": "select tbl:Shipments, project col:Shipments/shipment_tracking_number #1, comparative #1 #2 equal/3452, project col:Shipments/order_placed #3", "alternatives": "select tbl:Shipments, comparative #1 #2 equal/3452, project col:Shipments/shipment_tracking_number #1, project col:Shipments/order_placed #3"}
{"input": "What are all the company names that have a book published by Alyson?", "prediction": "select col:book, comparative #1 #1 equal/Alyson col:book/Publisher, project col:book/Company #2", "alternatives": "select col:book_publishing, comparative #1 #1 equal/Alyson col:book_publishing/Publisher, project col:company/Name #2"}
{"input": "How many 'United Airlines' flights go to Airport 'ASY'?", "prediction": "select tbl:flight, comparative #1 #1 equal/United Airlines col:flight/origin, comparative #2 #2 equal/ASY col:airport/name, aggregate count #3", "alternatives": "select tbl:flights, comparative #1 #1 equal/United Airlines col:airlines/Airline, project col:flights/DestAirport #2, comparative #2 #3 equal/ASY, aggregate count #4"}
{"input": "Give the city and country for the Alton airport.", "prediction": "select val:airport, project col:airport/city #1, project col:airport/country #1, union #2 #3", "alternatives": "select val:airport, project col:airport/City #1, project col:airport/Country #1, union #2 #3"}
{"input": "What categories have two or more corresponding books that were made after 1989?", "prediction": "select col:book, project tbl:book #1, comparative #2 #2 great/1989 col:book/Year", "alternatives": "select col:book_club, project tbl:book_club #1, comparative #2 #2 great/1989 col:book_club/Year, group #3 #1, comparative #1 #4 greatequal/2"}
{"input": "Find the highest rank of losers in all matches.", "prediction": "select tbl:match, project col:match/Losers #1, group #2 #1, superlative #1 #3", "alternatives": "select tbl:match, project col:match/Losers #1, superlative #1 #3, group #2 #1"}
{"input": "What categories have two or more corresponding books that were made after 1989?", "prediction": "select col:book, project tbl:book #1, comparative #2 #2 great/1989 col:book/Year", "alternatives": "select col:book, comparative #1 #1 great/1989 col:book/Year, group #2 #1, comparative #1 #3 greatequal/2"}
{"input": "How many paragraphs for the document with name 'Summer Show'?", "prediction": "select tbl:Documents, project col:Documents/document_name #1, comparative #1 #2 equal/Summer Show, project tbl:Paragraphs #3, aggregate count #4", "alternatives": "select tbl:Documents, aggregate count #4, comparative #1 #2 equal/Summer Show, project tbl:Paragraphs #3, project col:Documents/document_name #1"}
{"input": "What are the publishers who have published a book in both 1989 and 1990?", "prediction": "select col:book, comparative #1 #1 equal/1989 col:book/Year, comparative #2 #2 equal/1990 col:book/Year", "alternatives": "select col:book_club, comparative #1 #1 tbl:book_club, comparative #2 #2 equal/1990 col:book_club/Year, comparative #2 #2 equal/1989 col:book_club/Year, intersection #1 #3 #4"}
{"input": "What are the names and release years for all the songs of the youngest singer?", "prediction": "select tbl:song, project col:song/song_name #1, superlative #1 #2, project col:song/song_release_year #3, project col:song/song_name #3, union #4 #5", "alternatives": "select tbl:singer, project col:singer/Age #1, superlative #1 #2, project col:singer/Song_Name #3, project col:singer/Song_Name #4, project col:singer/Song_release_year #4, union #5 #6"}
{"input": "Find the last name of the student who has a cat that is age 3.", "prediction": "select tbl:Student, project tbl:Cat #1, project col:Cat/Age #2, comparative #1 #3 equal/3, project col:Student/LName #4", "alternatives": "select tbl:Student, project val:Pets/PetType/cat #1, project col:Pets/pet_age #2, comparative #1 #3 equal/3, project col:Student/LName #4"}
{"input": "Return the version numbers and template type codes of templates with a version number greater than 5.", "prediction": "select tbl:Templates, project col:Templates/version_number #1, comparative #1 #2 great/5, project col:Templates/version_number #3, project col:Templates/template_type_code #3, union #4 #5", "alternatives": "select tbl:Templates, project col:Templates/version_number #1, comparative #1 #2 great/5, project col:Templates/version_number #3, union #4 #5, project col:Templates/template_type_code #3"}
{"input": "Show all document ids, names and the number of paragraphs in each document.", "prediction": "select col:Documents, project col:Documents/document_id #1, project col:Documents/document_name #1, project tbl:Documents #1, group #4 #1, union #2 #3 #5", "alternatives": "select col:Documents, project col:Documents/document_id #1, project col:Documents/document_name #1, group #4 #1, project tbl:Documents #1, union #2 #3 #5"}
{"input": "Give the flight numbers of flights leaving from Aberdeen.", "prediction": "select tbl:flight, comparative #1 #1 equal/Aberdeen col:flight/origin, project tbl:flight #2", "alternatives": "select tbl:flights, comparative #1 #1 equal/Aberdeen col:airports/City, project col:flights/FlightNo #2"}
{"input": "What are the names of airports in Aberdeen?", "prediction": "select tbl:airports, comparative #1 #1 equal/Aberdeen col:airports/city, project col:airports/name #2", "alternatives": "select tbl:airports, comparative #1 #1 equal/Aberdeen col:airports/City, project col:airports/AirportName #2"}
{"input": "Show the years, book titles, and publishers for all books, in descending order by year.", "prediction": "select tbl:book, project col:book/Year #1, project col:book/Title #1, project col:book/Publisher #1, union #2 #3 #4, sort #5 #2 descending", "alternatives": "select tbl:book_club, project col:book_club/Year #1, project col:book_club/Book_Title #1, project col:book_club/Publisher #1, union #2 #3 #4, sort #5 #2 descending"}
{"input": "Find the invoice numbers which are created before 1989-09-03 or after 2007-12-25.", "prediction": "select col:Invoices, comparative #1 #1 less/2007-12-25 col:Invoices/date_invoice_created, comparative #1 #1 great/1989-09-03 col:Invoices/date_invoice_created, union #2 #3", "alternatives": "select col:Invoices, union #2 #3, comparative #1 #1 great/1989-09-03 col:Invoices/date_invoice_created, comparative #1 #1 less/2007-12-25 col:Invoices/date_invoice_created"}
{"input": "What are all company names that have a corresponding movie directed in the year 1999?", "prediction": "select tbl:company, project tbl:film #1, project col:film/Year #2, comparative #1 #3 equal/1999, project col:company/Company #4", "alternatives": "select tbl:company, project tbl:film #1, project col:film/Year #2, project col:company/Company #4, comparative #1 #3 equal/1999"}
{"input": "What are the years, titles, and publishers for all books, ordered by year descending?", "prediction": "select tbl:book, project col:book/Year #1, project col:book/Title #1, project col:book/Publisher #1, union #2 #3 #4, sort #5 #4 descending", "alternatives": "select tbl:book, project col:book/Year #1, project col:book/Title #1, project col:book/Publishers #1, union #2 #3 #4, sort #5 #4 descending"}
{"input": "What are the template ids of any templates used in more than a single document?", "prediction": "select tbl:Documents, project tbl:Documents #1, group #2 #1, comparative #1 #3 great/1, project col:Documents/template_id #4", "alternatives": "select tbl:Documents, project tbl:Documents #1, group #2 #1, project col:Documents/template_id #4, comparative #1 #3 great/1"}
{"input": "Which customers have made at least two orders? Give me each customer name and number of orders made.", "prediction": "select col:Customers, project tbl:Orders #1, group #2 #1, comparative #1 #3 greatequal/2, project col:Customers/customer_name #4, project tbl:Orders #4, group #6 #4, union #5 #7", "alternatives": "select col:Customers, project tbl:Orders #1, group #2 #1, group #6 #4, project col:Customers/customer_name #4, project tbl:Orders #4, comparative #1 #3 greatequal/2, union #5 #7"}
{"input": "List the maximum weight and type for each type of pet.", "prediction": "select tbl:pet, project col:pet/Weight #1, group #2 #1, union #1 #3", "alternatives": "select tbl:pet, union #1 #3, group #2 #1, project col:pet/Weight #1"}
{"input": "Count the number of templates of the type CV.", "prediction": "select tbl:Templates, project tbl:Templates #1, comparative #2 #1 equal/CV, aggregate count #3", "alternatives": "select tbl:Templates, project col:Templates/Template_Type_Code #1, comparative #1 #2 equal/CV, aggregate count #3"}
{"input": "Find the codes of countries that have more than 50 players.", "prediction": "select col:country, project tbl:country #1, group #2 #1, comparative #1 #3 great/50, project col:country/Country_code #4", "alternatives": "select col:players, project tbl:players #1, group #2 #1, comparative #1 #3 great/50, project col:players/country_code #4"}
{"input": "Find the number of left handed winners who participated in the WTA Championships.", "prediction": "select tbl:winner, comparative #1 #1 equal/left col:record/WTA_Championship, aggregate count #2", "alternatives": "select col:matches, comparative #1 #1 equal/L col:matches/winner_hand, comparative #2 #2 equal/WTA Championships col:matches/tourney_name, aggregate count #3"}
{"input": "What type of pet is the youngest animal, and how much does it weigh?", "prediction": "select tbl:pet, project col:pet/Weight #1, superlative #1 #2, project col:pet/Type #3, union #4 #3", "alternatives": "select tbl:pet, union #4 #3, superlative #1 #2, project col:pet/Type #3, project col:pet/Weight #1"}
{"input": "How many concerts are there in year 2014 or 2015?", "prediction": "select tbl:concerts, project col:concerts/year #1, comparative #1 #2 equal/2014, comparative #1 #2 equal/15, union #3 #4, aggregate count #5", "alternatives": "select tbl:conzert, project col:conzert/Year #1, comparative #1 #2 equal/2014, comparative #1 #2 equal/15, union #3 #4, aggregate count #5"}
{"input": "Show all template type codes and descriptions.", "prediction": "select tbl:Ref_Template_Types, project col:Ref_Template_Types/Template_Type_Code #1, project col:Ref_Template_Types/Template_Description #1, union #2 #3", "alternatives": "select tbl:Ref_Template_Types, project col:Ref_Template_Types/Template_Type_Code #1, project col:Ref_Template_Types/Template_Type_Description #1, union #2 #3"}
{"input": "What are the id, name and membership level of visitors who have spent the largest amount of money in total in all museum tickets?", "prediction": "select tbl:Visitors, project tbl:Tickets #1, group #2 #1, superlative #1 #3, project col:Visitors/tourist_id #4, project col:Visitors/customer_name #4, project col:Visitors/membership_level #4, union #5 #6 #7", "alternatives": "select tbl:visitor, project none #1, project col:visit/Total_spent #2, group #3 #1, superlative #1 #4, project col:visit/visitor_ID #5, project col:visitor/Name #5, project col:visitor/Level_of_membership #5, union #6 #7 #8"}
{"input": "What are the ids and texts of paragraphs in the document titled 'Welcome to NY'?", "prediction": "select tbl:Documents, comparative #1 #1 equal/Welcome to NY col:Documents/document_name, project col:Documents/document_id #2, project col:Documents/text_code #2, union #3 #4", "alternatives": "select tbl:Documents, comparative #1 #1 equal/Welcome to NY col:Documents/document_name, project col:Documents/document_id #2, union #3 #4, project col:Documents/text_code #2"}
{"input": "How many airlines do we have?", "prediction": "select tbl:airlines, aggregate count #1", "alternatives": "select tbl:airliners, aggregate count #1"}
{"input": "What are the names of the singers and number of concerts for each person?", "prediction": "select col:concerts, project col:song/artist_name #1, project tbl:concerts #1, group #3 #1, union #2 #4", "alternatives": "select col:concert, project col:song/artist_name #1, project tbl:concert #1, group #3 #1, union #2 #4"}
{"input": "find the names of museums which have more staff than the minimum staff number of all museums opened after 2010.", "prediction": "select tbl:museen, comparative #1 #1 great/2010 col:museen/Open_Year, project col:museen/Staff #2, aggregate min #3, comparative #1 #3 great/#4, project col:museen/Name #5", "alternatives": "select tbl:museum, comparative #1 #1 great/2010 col:museum/Open_Year, project col:museum/Staff #2, aggregate min #3, comparative #1 #3 great/#4, project col:museum/Name #5"}
{"input": "What are flight numbers of Airline \"United Airlines\"?", "prediction": "select tbl:flight, comparative #1 #1 equal/United Airlines col:airlines/name, project col:flight/flno #2", "alternatives": "select val:airlines, project col:flights/FlightNo #1"}
{"input": "Show name, country, age for all singers ordered by age from the oldest to the youngest.", "prediction": "select tbl:song, project col:artist/artist_name #1, project col:artist/country #1, project col:artist/age #1, union #2 #3 #4, sort #5 #4 descending", "alternatives": "select tbl:song, project col:artist/artist_name #1, sort #5 #4 descending, project col:artist/age #1, union #2 #3 #4, project col:artist/country #1"}
{"input": "List the name of teachers whose hometown is not `` Little Lever Urban District ''.", "prediction": "select tbl:teachers, project col:teachers/Hometown #1, comparative #1 #2 notequal/Little Lever Urban District, project col:teachers/Name #3", "alternatives": "select tbl:teacher, project col:teacher/Hometown #1, comparative #1 #2 notequal/little lever urban district, project col:teacher/Name #3"}
{"input": "What is the name of each teacher and what course they teach?", "prediction": "select tbl:teachers, project col:teachers/Name #1, project tbl:teaches #1, project col:courses/course_name #3, union #2 #4", "alternatives": "select tbl:teacher, project col:teacher/Name #1, project tbl:course_arrange #1, project col:course/Course #3, union #2 #4"}
{"input": "Find the average age of losers and winners of all matches.", "prediction": "select tbl:match, project col:match/Losers #1, project col:match/Wins #1, group #3 #1, aggregate avg #4", "alternatives": "select tbl:matches, project col:matches/winner_age #1, project col:matches/loser_age #1, project col:matches/loser_age #2, project col:matches/winner_age #3, union #4 #5, aggregate avg #6"}
{"input": "find the number of players for each country.", "prediction": "select col:country, project tbl:match_season #1, group #2 #1, union #1 #3", "alternatives": "select col:match_season, project tbl:country #1, group #2 #1, union #1 #3"}
{"input": "What is the average, minimum, and maximum age for all French singers?", "prediction": "select val:artist, project col:artist/Age #1, aggregate avg #2, aggregate min #2, aggregate max #2, union #3 #4 #5", "alternatives": "select tbl:singer, comparative #1 #1 val:singer/Country/France, project col:singer/Age #2, aggregate avg #3, aggregate min #3, aggregate max #3, union #4 #5 #6"}
{"input": "Find the number of matches happened in each year.", "prediction": "select col:match, project tbl:match #1, group #2 #1, union #1 #3", "alternatives": "select col:match, project tbl:match #2, group #3 #2, union #2 #4"}
{"input": "Give the number of Jetblue Airways flights.", "prediction": "select tbl:flight, comparative #1 #1 equal/Jetblue Airways col:flight/name, aggregate count #2", "alternatives": "select tbl:flight, comparative #1 #1 equal/Japan col:flight/name, aggregate count #2"}
{"input": "For each continent, list its id, name, and how many countries it has?", "prediction": "select col:continents, project col:continents/Continent #1, project col:continents/Continent #1, project col:continents/Name #1, project tbl:country #1, group #4 #1, union #2 #3 #5", "alternatives": "select col:continents, project col:continents/Continent #1, project col:continents/Continent #1, project col:continents/Name #1, project tbl:country #1, union #2 #3 #5, group #4 #1"}
{"input": "Find the total number of players.", "prediction": "select tbl:player, aggregate count #1", "alternatives": "select tbl:players, aggregate count #1"}
{"input": "Which order has the most recent shipment? Give me the order id.", "prediction": "select col:Shipments, project tbl:Shipments #1, superlative #1 #2, project col:Shipments/order_id #3", "alternatives": "select col:Shipments, project col:Shipments/shipment_date #1, superlative #1 #2, project col:Shipments/order_id #3"}
{"input": "What are airlines that have flights arriving at airport 'AHD'?", "prediction": "select col:flight, project tbl:flight #1, comparative #1 #2 equal/AHD", "alternatives": "select col:flight, comparative #1 #1 equal/AHD col:airport/airport_name, project tbl:flight #2"}
{"input": "Which flight numbers correspond to United Airlines flights?", "prediction": "select tbl:flight, comparative #1 #1 equal/United Airlines col:flight/name, project col:flight/flno #2", "alternatives": "select tbl:flight, comparative #1 #1 equal/United Airlines col:airlines/name, project col:flight/flno #2"}
{"input": "Return the ids corresponding to templates with the description 'Presentation'.", "prediction": "select tbl:Templates, project col:Templates/description #1, comparative #1 #2 equal/Presentation, project col:Templates/template_id #3", "alternatives": "select tbl:Templates, project col:Templates/document_description #1, comparative #1 #2 equal/Presentation, project col:Templates/template_ID #3"}
{"input": "Count the number of book clubs.", "prediction": "select tbl:book_club, aggregate count #1", "alternatives": "select tbl:Book Club, aggregate count #1"}
{"input": "Find the first name, country code and birth date of the winner who has the highest rank points in all matches.", "prediction": "select tbl:match, project col:match/Rank_Points #1, superlative #1 #2, project col:people/Fname #3, project col:people/Country_Code #3, project col:people/Birth_Date #3, union #4 #5 #6", "alternatives": "select col:matches, project tbl:matches #1, project col:matches/winner_rank_points #2, superlative #1 #3, project col:players/first_name #4, project col:players/country_code #4, project col:players/country_code #5, project col:players/birth_date #4, union #5 #7 #8"}
{"input": "Return the number of  airports.", "prediction": "select tbl:airport, aggregate count #1", "alternatives": "select tbl:airports, aggregate count #1"}
{"input": "List the names of the customers who have once bought product \"food\".", "prediction": "select tbl:Customers, comparative #1 #1 equal/food col:Products/product_details, project col:Customers/customer_name #2", "alternatives": "select tbl:Customers, comparative #1 #1 equal/food col:Products/product_details, project col:Customers/customer_name #2."}
{"input": "Find the name of the shops that do not hire any employee.", "prediction": "select tbl:shop, comparative #1 #1 tbl:employee, discard #1 #2, project col:shop/Shop_Name #3", "alternatives": "select tbl:shop, comparative #1 #1 tbl:hiring, discard #1 #2, project col:shop/Name #3"}
{"input": "How many documents are using the template with type code 'PPT'?", "prediction": "select tbl:Document_Templates, project col:Document_Templates/Template_Type_Code #1, comparative #1 #2 equal/PPT, aggregate count #3", "alternatives": "select tbl:Documents, project tbl:Templates #1, project col:Templates/Template_Type_Code #2, comparative #1 #3 equal/PPT, aggregate count #4"}
{"input": "When was the order placed whose shipment tracking number is 3452? Give me the date.", "prediction": "select tbl:Shipments, project col:Shipments/shipment_tracking_number #1, comparative #1 #2 equal/3452, project col:Shipments/order_placed #3", "alternatives": "select tbl:Shipments, project tbl:Shipments #1, project col:Shipments/shipment_tracking_number #2, comparative #1 #3 equal/3452, project col:Shipments/order_placed #4"}
{"input": "List the name, nationality and id of all male architects ordered by their names lexicographically.", "prediction": "select tbl:architects, comparative #1 #1 equal/M col:architects/gender, project col:architects/name #2, project col:architects/nationality #2, project col:architects/architect_id #2, union #3 #4 #5, sort #6 #5 lexicographically", "alternatives": "select tbl:architects, comparative #1 #1 equal/M col:architects/gender, project col:architects/name #2, project col:architects/nationality #2, project col:architects/architecture_id #2, union #3 #4 #5, sort #6 #5 lexicographically"}
{"input": "What are flight numbers of flights departing from City \"Aberdeen \"?", "prediction": "select tbl:flight, comparative #1 #1 equal/Aberdeen col:flight/origin, project tbl:flight #2", "alternatives": "select tbl:flights, project col:airports/City #1, comparative #1 #2 equal/Aberdeen, project col:flights/FlightNo #3"}
{"input": "What are the distinct name of the mills built by the architects who have also built a bridge longer than 80 meters?", "prediction": "select tbl:mill, comparative #1 #1 great/80 col:bridge/Meter_Length, project col:mill/Name #2", "alternatives": "select tbl:architect, comparative #1 #1 great/80 col:bridge/length_meters, project tbl:mill #2"}
{"input": "What are the id and name of the museum visited most times?", "prediction": "select tbl:Museum, project tbl:Visits #1, group #2 #1, superlative #1 #3, project col:Museum/id #4, project col:Museum/name #4, union #5 #6", "alternatives": "select tbl:Museum, superlative #1 #3, group #2 #1, project tbl:Visits #1, project col:Museum/id #4, project col:Museum/name #4, union #5 #6"}
{"input": "What is the average weight for each type of pet?", "prediction": "select col:Pets, project col:Pets/weight #1, group #2 #1, union #1 #3", "alternatives": "select col:pets, project col:pets/weight #1, group #2 #1, union #1 #3"}
{"input": "On what day was the order with invoice number 10 placed?", "prediction": "select tbl:Order_Items, comparative #1 #1 equal/10 col:Invoices/invoice_number, project col:Customer_Orders/order_date #2", "alternatives": "select tbl:Orders, project col:Shipments/invoice_number #1, comparative #1 #2 equal/10, project col:Orders/date_order_placed #3"}
{"input": "How many templates do we have?", "prediction": "select tbl:Templates, aggregate count #1", "alternatives": "select tbl:Forms, aggregate count #1"}
{"input": "Return the code of the template type that is most commonly used in documents.", "prediction": "select col:Documents, project tbl:Documents #1, group #2 #1, superlative #1 #3", "alternatives": "select col:Documents, superlative #1 #3, group #2 #1, project tbl:Documents #1"}
{"input": "Find the number of players for each hand type.", "prediction": "select col:Player, project tbl:Player #1, group #2 #1, union #1 #3", "alternatives": "select col:Player_Manufacturer, project tbl:Player #1, group #2 #1"}
{"input": "List categories that have at least two books after year 1989.", "prediction": "select col:book, project tbl:book #1, comparative #2 #2 great/1989 col:book/Year, group #3 #1, comparative #1 #4 greatequal/2", "alternatives": "select col:book, project tbl:book #1, group #3 #1, comparative #2 #2 great/1989 col:book/Year, comparative #1 #4 greatequal/2"}
{"input": "What is the airport code of the airport with the most flights?", "prediction": "select col:flight, project tbl:flight #1, group #2 #1, superlative #1 #3, project col:airport/code #4", "alternatives": "select tbl:airports, project tbl:flights #1, group #2 #1, superlative #1 #3"}
{"input": "Count the number of flights departing from 'APG'.", "prediction": "select tbl:flight, comparative #1 #1 equal/APG col:flight/origin, aggregate count #2", "alternatives": "select tbl:flight, comparative #1 #1 equal/APG col:flight/origin, aggregate counts #2"}
{"input": "Find the number of pets for each student who has any pet and student id.", "prediction": "select col:Pets, comparative #1 #1 tbl:Pets, project col:Pets/student_id #1, union #2 #3", "alternatives": "select tbl:Student, comparative #1 #1 tbl:Has_Pet, project tbl:Has_Pet #2, group #3 #2, project col:Student/StuID #2, union #4 #5"}
{"input": "Find the name of the employee who got the highest one time bonus.", "prediction": "select tbl:employee, project col:employee/one_time_bonus #1, superlative #1 #2, project col:employee/name #3", "alternatives": "select tbl:employee, project col:evaluation/Bonus #1, superlative #1 #2, project col:employee/Name #3"}
{"input": "What is the average length in feet of the bridges?", "prediction": "select tbl:bridge, project col:bridge/Feet #1, aggregate avg #2", "alternatives": "select tbl:bridge, project col:bridge/length_feet #1, aggregate avg #2"}
{"input": "Which employee received the biggest bonus? Give me the employee name.", "prediction": "select tbl:employee, project col:employee/bonus #1, superlative #1 #2, project col:employee/name #3", "alternatives": "select tbl:employee, superlative #1 #2, project col:employee/bonus #1, project col:employee/name #3"}
{"input": "What is the average and maximum age for each pet type?", "prediction": "select tbl:Pets, project col:Pets/age #1, group #2 #1, union #1 #3", "alternatives": "select tbl:Pets, union #1 #3, group #2 #1, project col:Pets/age #1"}
{"input": "Find the abbreviation and country of the airline that has fewest number of flights?", "prediction": "select tbl:airlines, project tbl:flight #1, group #2 #1, superlative #1 #3, project col:airlines/abbreviation #4, project col:airlines/country #4, union #5 #6", "alternatives": "select tbl:airlines, project tbl:flights #1, group #2 #1, superlative #1 #3, project col:airlines/Abbreviation #4, project col:airlines/Country #4, union #5 #6"}
{"input": "What are the names of the mills which are not located in 'Donceel'?", "prediction": "select tbl:mill, comparative #1 #1 notequal/Donceel col:mill/Location, project col:mill/Name #2", "alternatives": "select tbl:mill, comparative #1 #1 notequal/Donceel col:mill/location, project col:mill/name #2"}
{"input": "On which day was the order placed whose shipment tracking number is 3452?", "prediction": "select col:Shipments, project tbl:Shipments #1, project col:Shipments/shipment_tracking_number #2, comparative #1 #3 equal/3452, project col:Shipments/order_placed #4", "alternatives": "select tbl:Orders, project tbl:Shipments #1, comparative #1 #2 equal/3452, project col:Orders/date_order_placed #3"}
{"input": "Which template type code is used by most number of documents?", "prediction": "select col:Documents, project tbl:Documents #1, group #2 #1, superlative #1 #3", "alternatives": "select col:Documents, project tbl:Documents #1, group #2 #1, superlative #1 #3."}
{"input": "List the names of customers who have once canceled the purchase of the product \"food\" (the item status is \"Cancel\").", "prediction": "select tbl:Products_for_Hire, project tbl:Customer_Orders #1, comparative #1 #2 equal/food, project col:Customers/customer_name #3", "alternatives": "select tbl:Products_for_Hire, comparative #1 #2 equal/food, project tbl:Customer_Orders #1, project col:Customers/customer_name #3"}
{"input": "What type of pet is the youngest animal, and how much does it weigh?", "prediction": "select tbl:pet, project col:pet/Weight #1, superlative #1 #2, project col:pet/Type #3, union #4 #3", "alternatives": "select tbl:animal, project col:animal/Weight #1, superlative #1 #2, project col:animal/Type #3, union #4 #3"}
{"input": "What is the publisher with most number of books?", "prediction": "select col:book, project tbl:book #1, group #2 #1, superlative #1 #3", "alternatives": "select col:book, project tbl:book #1, group #2 #1, great/1"}
{"input": "List the name, date and result of each battle.", "prediction": "select tbl:battle, project col:battle/Name #1, project col:battle/Date #1, project col:battle/Result #1, union #2 #3 #4", "alternatives": "select tbl:battle, project col:battle/name #1, project col:battle/date #1, project col:battle/result #1, union #2 #3 #4"}
{"input": "What are the names of tournaments that have more than 10 matches?", "prediction": "select tbl:Tournament, project tbl:match #1, group #2 #1, comparative #1 #3 great/10, project col:Tournament/Name #4", "alternatives": "select tbl:Tournament, project tbl:Match_in #1, group #2 #1, comparative #1 #3 great/10, project col:Tournament/Name #4"}
{"input": "Show all template type codes and number of templates for each.", "prediction": "select col:Ref_Template_Types, project col:Ref_Template_Types/Template_Type_Code #1, group #1 #2, union #2 #3", "alternatives": "select col:Templates, project tbl:Templates #1, group #2 #1, union #1 #3"}
{"input": "Find the total ranking points for each player and their first name.", "prediction": "select col:player, project col:player/Ranking_Points #1, group #2 #1, project col:player/FirstName #1, union #3 #4", "alternatives": "select col:players, project col:rankings/ranking_points #1, group #2 #1, project col:players/first_name #1, union #3 #4"}
{"input": "What is the total ticket expense of the visitors whose membership level is 1?", "prediction": "select tbl:Visitors, project col:Visitors/membership_level #1, comparative #1 #2 equal/1, project col:Tickets/ticket_details #3, aggregate sum #4", "alternatives": "select tbl:Visitors, project col:Visitors/membership_level #1, comparative #1 #2 equal/1, project col:Tickets/ticket_cost #3, aggregate sum #4"}
{"input": "What is the name and capacity for the stadium with the highest average attendance?", "prediction": "select tbl:stadium, project col:stadium/Average_Attendance #1, group #2 #1, superlative #1 #3, project col:stadium/name #4, project col:stadium/Capacity #4, union #5 #6", "alternatives": "select tbl:stadium, project col:stadium/Average_Average #1, group #2 #1, superlative #1 #3, project col:stadium/name #4, project col:stadium/Capacity #4, union #5 #6"}
{"input": "What is the most commmon hometowns for teachers?", "prediction": "select col:teachers, project tbl:teachers #1, group #2 #1, superlative #1 #3", "alternatives": "select col:teachers, project tbl:teachers #1, superlative #1 #3, group #2 #1"}
{"input": "Find the average ranking for each player and their first name.", "prediction": "select col:Player, project col:Player/rank #1, group #2 #1, project col:Player/first_name #1, union #3 #4", "alternatives": "select col:Player, project col:Player/rank #1, group #2 #1, union #3 #4, project col:Player/first_name #1"}
{"input": "What are the different first names and ages of the students who do have pets?", "prediction": "select tbl:Student, comparative #1 #1 tbl:Pets, project col:Student/Fname #2, project col:Student/Age #2, union #3 #4", "alternatives": "select tbl:Student, union #3 #4, project col:Student/Fname #2, project col:Student/Age #2, comparative #1 #1 tbl:Pets"}
{"input": "What are the dates of the orders made by the customer named \"Jeramie\"?", "prediction": "select tbl:Customer_Orders, project tbl:Customer_Orders #1, comparative #2 #1 equal/Jeramie, project col:Customer_Orders/order_date #3", "alternatives": "select tbl:Customer_Orders, project tbl:Customer_Orders #1, comparative #2 #1 equal/Jeramie, project col:Customer_Orders/order_date #3."}
{"input": "What is the name and country of origin of every singer who has a song with the word 'Hey' in its title?", "prediction": "select tbl:song, project tbl:song #1, project col:song/song_title #2, comparative #1 #3 like%Hey%, project col:artist/artist_name #4, project col:artist/country #4, union #5 #6", "alternatives": "select col:singer, project col:singer/Song_Name #1, comparative #1 #2 like%Hey%, project tbl:singer #3, project col:singer/Name #4, project col:singer/Country #4, union #5 #6"}
{"input": "Find the names of the customers who have order status both \"On Road\" and \"Shipped\".", "prediction": "select tbl:Customers, project tbl:Orders #1, comparative #1 #2 equal/On Road, comparative #1 #2 equal/Shipped, intersection #1 #3 #4, project col:Customers/customer_name #5", "alternatives": "select tbl:Customers, project col:Customers/customer_name #5, comparative #1 #2 equal/On Road, comparative #1 #2 equal/Shipped, intersection #1 #3 #4, project tbl:Orders #1"}
{"input": "What are the names of the customers who bought product \"food\" at least once?", "prediction": "select tbl:Customers, comparative #1 #1 equal/food col:Products/product_details, project col:Customers/customer_name #2", "alternatives": "select tbl:Customers, comparative #1 #1 equal/food col:Products/product_name, project col:Customers/customer_name #2"}
{"input": "What is the code of airport that has the highest number of flights?", "prediction": "select tbl:airport, project tbl:flight #1, group #2 #1, superlative #1 #3, project col:airport/code #4", "alternatives": "select tbl:airports, project tbl:flights #1, group #2 #1, superlative #1 #3, project col:airports/AirportCode #4"}
{"input": "What is the placement date of the order whose invoice number is 10?", "prediction": "select tbl:Invoices, comparative #1 #1 equal/10 col:Invoices/invoice_number, project col:Invoices/order_placement_date #2", "alternatives": "select col:Invoices, comparative #1 #1 equal/10 col:Invoices/invoice_number, project col:Invoices/order_placement_date #2"}
{"input": "Show all countries and the number of singers in each country.", "prediction": "select col:artist, project tbl:song #1, group #2 #1, union #1 #3", "alternatives": "select col:artist, project tbl:artist #1, group #2 #1, union #1 #3"}
{"input": "Find the first name of students who have both cat and dog pets.", "prediction": "select tbl:Student, project tbl:Pets #1, comparative #1 #2 equal/Cat, comparative #1 #2 equal/Dog, intersection #1 #3 #4, project col:Student/Fname #5", "alternatives": "select tbl:Student, project tbl:PersonFriend #1, comparative #1 #2 equal/Cat, comparative #1 #2 equal/Dog, intersection #1 #3 #4, project col:Student/Fname #5"}
{"input": "Show names of teachers and the courses they are arranged to teach.", "prediction": "select tbl:teachers, project col:teachers/Name #1, project tbl:teaches #1, project col:courses/Course_Arrangement #3, union #2 #4", "alternatives": "select col:teacher, project col:course/Course #1, union #1 #2"}
{"input": "What are the first names of all players, and their total ranking points?", "prediction": "select tbl:player, project col:player/FirstName #1, project col:player/Ranking_Points #1, group #3 #1, union #2 #4", "alternatives": "select tbl:player, project col:player/FirstName #1, project col:player/Points #1, group #3 #1, union #2 #4"}
{"input": "Count the number of documents that use the PPT template type.", "prediction": "select tbl:Documents, project tbl:Documents #1, comparative #1 #2 equal/PPT, aggregate count #3", "alternatives": "select tbl:Documents, project tbl:Templates #1, comparative #1 #2 equal/PPT, aggregate count #3"}
{"input": "What is the id of the order which has the most items?", "prediction": "select col:Order_Items, project tbl:Order_Items #1, group #2 #1, superlative #1 #3, project col:Order_Items/order_id #4", "alternatives": "select tbl:Orders, project tbl:Order_Items #1, group #2 #1, superlative #1 #3, project col:Orders/order_id #4"}
{"input": "Return the different descriptions for templates that have been used in a document.", "prediction": "select tbl:Document_Types, project col:Document_Types/document_description #1", "alternatives": "select tbl:Templates, comparative #1 #1 tbl:Documents"}
{"input": "What are the students' first names who have both cats and dogs as pets?", "prediction": "select tbl:Student, project tbl:PersonFriend #1, comparative #1 #2 equal/cat, comparative #1 #2 equal/dog, intersection #1 #3 #4, project col:Student/Fname #5", "alternatives": "select tbl:Students, project tbl:PersonFriend #1, comparative #1 #2 equal/cat, comparative #1 #2 equal/dog, intersection #1 #3 #4, project col:Students/first_name #5"}
{"input": "How many distinct countries do players come from?", "prediction": "select tbl:country, aggregate count #2", "alternatives": "select tbl:players, aggregate count #2"}
{"input": "How many visitors below age 30 are there?", "prediction": "select tbl:Visitors, comparative #1 #1 less/30 col:Visitors/Age, aggregate count #2", "alternatives": "select tbl:visitor, project col:visitor/Age #1, comparative #1 #2 less/30, aggregate count #3"}
{"input": "Count the number of different templates used for documents.", "prediction": "select tbl:Document_Templates, comparative #1 #1 none, aggregate count #2", "alternatives": "select tbl:Document_Templates, comparative #1 #1 none, aggregate count #3"}
{"input": "For each product, show its name and the number of times it was ordered.", "prediction": "select col:Order_Items, project col:Products/product_name #1, project tbl:Order_Items #1, group #3 #1, union #2 #4", "alternatives": "select col:Products, project col:Products/product_name #1, project tbl:Orders #1, group #3 #1, union #2 #4"}
{"input": "Find the first name and gender of student who have more than one pet.", "prediction": "select tbl:Student, project tbl:Pets #1, group #2 #1, comparative #1 #3 great/1, project col:Student/Fname #4, project col:Student/Gender #4, union #5 #6", "alternatives": "select tbl:Student, project tbl:Has_Pet #1, group #2 #1, comparative #1 #3 great/1, project col:Student/Fname #4, project col:Student/Sex #4, union #5 #6"}
{"input": "Which country does Airline \"JetBlue Airways\" belong to?", "prediction": "select tbl:airlines, project col:airlines/country #1, comparative #2 #1 equal/JetBlue Airways", "alternatives": "select tbl:airline, comparative #1 #1 equal/JetBlue Airways col:airlines/name"}
{"input": "Show names of teachers and the number of courses they teach.", "prediction": "select tbl:teachers, project col:teachers/Name #1, project tbl:teaches #1, group #3 #1, union #2 #4", "alternatives": "select col:CLASS, project col:EMPLOYEE/EMP_NAME #1, project tbl:CLASS #1, group #3 #1, union #2 #4."}
{"input": "Which shop has the most employees? Give me the shop name.", "prediction": "select tbl:shop, project tbl:employee #1, group #2 #1, superlative #1 #3, project col:shop/Shop_name #4", "alternatives": "select tbl:shop, project tbl:employee #1, project col:shop/Shop_name #4, superlative #1 #3, group #2 #1"}
{"input": "List document IDs, document names, and document descriptions for all documents.", "prediction": "select tbl:Documents, project col:Documents/document_id #1, project col:Documents/document_name #1, project col:Documents/document_description #1, union #2 #3 #4", "alternatives": "select tbl:Documents, project col:Documents/Document_ID #1, project col:Documents/Document_Name #1, project col:Documents/Document_Description #1, union #2 #3 #4 #5"}
{"input": "Show all document ids, names and the number of paragraphs in each document.", "prediction": "select col:Documents, project col:Documents/document_id #1, project col:Documents/document_name #1, project tbl:Documents #1, group #4 #1, union #2 #3 #5", "alternatives": "select col:Documents, project col:Documents/document_id #1, project col:Documents/document_name #1, project tbl:Documents #2, group #4 #2, union #2 #3 #5"}
{"input": "Which of the mill names contains the french word 'Moulin'?", "prediction": "select col:mill, project col:mill/French #1, comparative #1 #2 like%Moulin%", "alternatives": "select col:mill, project col:mill/Moulin #1, comparative #1 #2 like%Moulin%"}
{"input": "What are all the different book publishers?", "prediction": "select col:book_publishers", "alternatives": "select col:book_club"}
{"input": "Which customers have ever canceled the purchase of the product \"food\" (the item status is \"Cancel\")?", "prediction": "select tbl:Products_for_Hire, project tbl:Customer_Orders #1, comparative #1 #2 equal/food, project col:Customer_Orders/product_status_code #3, comparative #3 #4 equal/Cancel", "alternatives": "select tbl:Products, project tbl:Customer_Orders #1, comparative #1 #2 equal/food, project col:Customer_Orders/product_status_code #3, comparative #3 #4 equal/Cancel, project col:Customers/customer_date #5"}
{"input": "How many flights does airline 'JetBlue Airways' have?", "prediction": "select tbl:flight, project tbl:flight #1, comparative #2 #1 equal/JetBlue Airways, aggregate count #3", "alternatives": "select tbl:flight, aggregate count #1, comparative #2 #1 equal/JetBlue Airways col:airlines/name, aggregate count #3"}
{"input": "List the names of teachers who have not been arranged to teach courses.", "prediction": "select tbl:teachers, comparative #1 #1 tbl:teaches, discard #1 #2, project col:teachers/Name #3", "alternatives": "select tbl:teacher, comparative #1 #1 tbl:course_arrange, discard #1 #2, project col:teacher/Name #3"}
{"input": "Return the template type description of the template type with the code AD.", "prediction": "select tbl:Customer_Templates, project col:Customer_Templates/Template_Type_Code #1, comparative #1 #2 equal/AD, project col:Customer_Templates/Template_Type_Description #3", "alternatives": "select tbl:Preferences, project col:Preferences/template_type_code #1, comparative #1 #2 equal/AD, project col:Ref_Template_Types/template_type_description #3"}
{"input": "List the names of all winners who played in both 2013 and 2016.", "prediction": "select tbl:winner, comparative #1 #1 equal/2013 col:playground/Year, comparative #1 #1 equal/2016 col:playground/Year, intersection #1 #2 #3, project col:winner/Name #4", "alternatives": "select col:match, comparative #1 #1 equal/2013 col:match/Year, comparative #1 #1 equal/2016 col:match/Year, intersection #1 #2 #3, project col:player/Name #4"}
{"input": "What are the titles, years, and directors of all movies, ordered by budget in millions?", "prediction": "select tbl:Movie, project col:Movie/title #1, project col:Movie/year #1, project col:Movie/director #1, project col:Movie/budget #1, union #2 #3 #4, sort #6 #5", "alternatives": "select tbl:Movie, project col:Movie/title #1, project col:Movie/year #1, project col:Movie/director #1, project col:Movie/budget #1, union #2 #3 #4, sort #7 #5"}
{"input": "How many countries does each continent have? List the continent id, continent name and the number of countries.", "prediction": "select col:continents, project tbl:country #1, group #2 #1, project col:continents/Continent #1, project col:continents/Continent_name #1, union #4 #5 #3", "alternatives": "select col:continents, project tbl:country #1, group #2 #1, project col:continents/Continent #1, union #3 #4 #5"}
{"input": "Find the type and weight of the youngest pet.", "prediction": "select tbl:pet, project col:pet/Height #1, superlative #1 #2, project col:pet/Type #3, project col:pet/Weight #3, union #4 #5", "alternatives": "select tbl:Pets, project col:Pets/pet_age #1, superlative #1 #2, project col:Pets/PetType #3, project col:Pets/weight #3, union #4 #5"}
{"input": "Return the different document ids along with the number of paragraphs corresponding to each, ordered by id.", "prediction": "select tbl:Documents, project col:Documents/document_id #1, project tbl:Paragraphs #1, group #3 #1, union #2 #4, sort #5 #4", "alternatives": "select tbl:Documents, project col:Documents/document_id #1, project tbl:Paragraphs #1, group #3 #2, union #2 #4, sort #5 #4"}
{"input": "Find the first name and age of students who have a pet.", "prediction": "select tbl:Student, comparative #1 #1 tbl:Pets, project col:Student/Fname #2, project col:Student/Age #2, union #3 #4", "alternatives": "select tbl:Student, comparative #1 #1 tbl:Has_Pet, project col:Student/Fname #2, project col:Student/Age #2, union #3 #4"}
{"input": "Return the number of airlines in the USA.", "prediction": "select tbl:airlines, comparative #1 #1 equal/USA col:airlines/country, aggregate count #2", "alternatives": "select tbl:airlines, comparative #1 #1 equal/USA col:airlines/Country, aggregate count #2"}
{"input": "Find the number of shops in each location.", "prediction": "select col:shop, project tbl:shop #1, group #2 #1, union #1 #3", "alternatives": "select col:Shops, project tbl:Shops #1, group #2 #1, union #1 #3"}
{"input": "Find the average and maximum age for each type of pet.", "prediction": "select col:Pets, project col:Pets/age #1, group #2 #1, union #1 #3", "alternatives": "select tbl:pet, project col:pet/Age #1, group #1 #2, union #2 #3"}
{"input": "What are the names of airports in Aberdeen?", "prediction": "select tbl:airports, comparative #1 #1 equal/Aberdeen col:airports/city, project col:airports/name #2", "alternatives": "select tbl:airport, comparative #1 #1 equal/Aberdeen col:airport/city, project col:airport/name #2"}
{"input": "What are the names of the teachers who are aged either 32 or 33?", "prediction": "select tbl:teachers, project col:teachers/Age #1, comparative #1 #2 equal/32, comparative #1 #2 equal/33, union #3 #4, project col:teachers/Name #5", "alternatives": "select tbl:teachers, comparative #1 #1 equal/32 col:teachers/Age, comparative #1 #1 equal/33 col:teachers/Age, union #2 #3, project col:teachers/Name #4."}
{"input": "Find the id of the customers who have order status both \"On Road\" and \"Shipped\".", "prediction": "select tbl:Customer_Orders, project tbl:Customer_Orders #1, comparative #1 #2 equal/On Road, comparative #1 #2 equal/Shipped, intersection #1 #3 #4, project col:Customers/customer_id #5", "alternatives": "select tbl:Customer_Orders, comparative #1 #1 equal/On Road col:Customer_Orders/order_status, comparative #1 #1 equal/Shipped col:Customer_Orders/order_status, intersection #1 #2 #3, project col:Customers/customer_id #4"}
{"input": "What are ids of the all distinct orders, sorted by placement date?", "prediction": "select tbl:Orders, project col:Orders/order_id #1, project col:Orders/placement_date #1, sort #2 #3", "alternatives": "select tbl:Orders, project col:Orders/order_id #1, project col:Orders/date_of_placement #1, sort #2 #3"}
{"input": "List all song names by singers above the average age.", "prediction": "select tbl:song, project col:song/age #1, aggregate avg #2, comparative #1 #2 great/#3, project col:song/song_name #4", "alternatives": "select tbl:song, project col:artist/age #1, aggregate avg #2, comparative #1 #2 great/#3, project col:song/song_name #4"}
{"input": "What is the average age for all students who do not own any pets?", "prediction": "select tbl:Student, comparative #1 #1 tbl:Pets, discard #1 #2, project col:Student/Age #3, aggregate avg #4", "alternatives": "select tbl:Student, comparative #1 #1 tbl:Animal, discard #1 #2, project col:Student/Age #3, aggregate avg #4"}
{"input": "What is the code of airport that has fewest number of flights?", "prediction": "select tbl:airport, project tbl:flight #1, group #2 #1, superlative #1 #3, project col:airport/code #4", "alternatives": "select tbl:airports, project tbl:flights #1, group #2 #1, superlative #1 #3, project col:airports/AirportCode #4"}
{"input": "List the names of teachers who have not been arranged to teach courses.", "prediction": "select tbl:teachers, comparative #1 #1 tbl:teaches, discard #1 #2, project col:teachers/Name #3", "alternatives": "select tbl:teachers, discard #1 #2, comparative #1 #1 tbl:teaches, project col:teachers/Name #3"}
{"input": "What is the title and director for the movie with highest worldwide gross in the year 2000 or before?", "prediction": "select tbl:Movie, project col:Movie/Gross_in_dollar #1, group #2 #1, comparative #1 #3 lessequal/2000, superlative #1 #4, project col:Movie/Title #5, project col:Movie/Director #5, union #6 #7", "alternatives": "select tbl:movie, project col:movie/Gross_worldwide #1, comparative #2 #2 lessequal/2000 col:movie/Year, superlative #1 #3, project col:movie/Title #4, project col:movie/Director #4, union #5 #6"}
{"input": "Return the type code of the template type that the most templates belong to.", "prediction": "select col:Customer_Templates, project tbl:Customer_Templates #1, group #2 #1, superlative #1 #3, project col:Customer_Templates/Template_Type_Code #4", "alternatives": "select col:Templates, project tbl:Templates #1, group #2 #1, superlative #1 #3, project col:Templates/Template_Type_Code #4"}
{"input": "Which airlines have departures from CVO but not from APG airports?", "prediction": "select col:airlines, project tbl:departures #1, comparative #1 #2 equal/CVO, comparative #1 #2 equal/APG, discard #1 #3, intersection #1 #4 #5", "alternatives": "select col:airlines, comparative #1 #1 equal/CVO col:flights/SourceAirport, comparative #2 #2 equal/APG col:flights/SourceAirport, discard #2 #3"}
{"input": "What is the best rank of losers across all matches?", "prediction": "select tbl:match, project col:match/Losers #1, group #2 #1, superlative #1 #3", "alternatives": "select tbl:match, group #2 #1, project col:match/Losers #1, superlative #1 #3"}
{"input": "How many matches were played in each year?", "prediction": "select col:match, project tbl:match #1, group #2 #1, union #1 #3", "alternatives": "select col:match, project tbl:match #1, union #1 #3, group #2 #1"}
{"input": "Which orders have shipment after 2000-01-01? Give me the order ids.", "prediction": "select tbl:Shipments, comparative #1 #1 great/2000-01-01 col:Shipments/date_of_shipment, project col:Shipments/order_id #2", "alternatives": "select tbl:Orders, comparative #1 #1 great/2000-01-01 col:Shipments/shipment_date, project col:Customer_Orders/order_id #2"}
{"input": "Show all document names using templates with template type code BK.", "prediction": "select tbl:Documents, project tbl:Documents #1, project col:Documents/template_type_code #2, comparative #1 #3 equal/BK, project col:Documents/document_name #4", "alternatives": "select tbl:Ref_Templates, project tbl:Ref_Templates #1, comparative #1 #2 equal/BK, project col:Documents/Document_Name #3"}
{"input": "What is the average weight for each type of pet?", "prediction": "select col:Pets, project col:Pets/weight #1, group #2 #1, union #1 #3", "alternatives": "select col:Pets, union #1 #3, group #2 #1, project col:Pets/weight #1"}
{"input": "What are the years, titles, and publishers for all books, ordered by year descending?", "prediction": "select tbl:book, project col:book/Year #1, project col:book/Title #1, project col:book/Publisher #1, union #2 #3 #4, sort #5 #4 descending", "alternatives": "select tbl:book_club, project col:book_club/Year #1, project col:book_club/Book_Title #1, project col:book_club/Publisher #1, union #2 #3 #4, sort #5 #2 descending"}
{"input": "Find the number of pets for each student who has any pet and student id.", "prediction": "select col:Pets, comparative #1 #1 tbl:Pets, project col:Pets/student_id #1, union #2 #3", "alternatives": "select tbl:Students, comparative #1 #1 tbl:Pets, project col:Students/student_id #2, union #2 #3 #4"}
{"input": "Which airlines have departing flights from both APG and CVO airports?", "prediction": "select col:flight, project tbl:flight #1, project tbl:airport #2, comparative #1 #3 equal/APG, comparative #1 #3 equal/CVO, intersection #1 #4 #5", "alternatives": "select col:airlines, project tbl:flights #1, project col:flights/SourceAirport #2, comparative #1 #3 equal/APG, comparative #1 #3 equal/CVO, intersection #1 #4 #5"}
{"input": "Give the city and country for the Alton airport.", "prediction": "select val:airport, project col:airport/city #1, project col:airport/country #1, union #2 #3", "alternatives": "select val:airports, project col:airports/City #1, project col:airports/Country #1, union #2 #3"}
{"input": "What are the id, name and membership level of visitors who have spent the largest amount of money in total in all museum tickets?", "prediction": "select tbl:Visitors, project tbl:Tickets #1, group #2 #1, superlative #1 #3, project col:Visitors/tourist_id #4, project col:Visitors/customer_name #4, project col:Visitors/membership_level #4, union #5 #6 #7", "alternatives": "select tbl:Visitors, project tbl:Tickets #1, group #2 #1, superlative #1 #3, project col:Visitors/tourist_id #4, project col:Visitors/customer_name #4, project col:Visitors/membership_level #4, union #5 #7 #8"}
{"input": "What are the distinct name of the mills built by the architects who have also built a bridge longer than 80 meters?", "prediction": "select tbl:mill, comparative #1 #1 great/80 col:bridge/Meter_Length, project col:mill/Name #2", "alternatives": "select tbl:mill, comparative #1 #1 great/80 col:bridge/Maximum_Meter, project col:mill/Name #2"}
{"input": "What is the document id, template id and description for document named \"Robbin CV\"?", "prediction": "select tbl:Documents, comparative #1 #1 equal/Robbin CV col:Documents/document_name, project col:Documents/document_id #2, project col:Documents/template_id #2, project col:Documents/document_description #2, union #3 #4 #5", "alternatives": "select tbl:All_Documents, comparative #1 #1 equal/Robbin CV col:All_Documents/Document_Name, project col:Ref_Document_ID #2, project col:Ref_Document_Templates/Document_Template_ID #2, project col:Ref_Document_Description #2, union #3 #4 #5"}
{"input": "How many singers are from each country?", "prediction": "select col:artist, project tbl:song #1, group #2 #1, union #1 #3", "alternatives": "select col:singer, project tbl:singer #1, group #2 #1, union #1 #3"}
{"input": "What are the ids of templates with template type code PP or PPT?", "prediction": "select tbl:Masks, project tbl:Masks #1, comparative #1 #2 equal/PP, comparative #1 #2 equal/PPT, union #3 #4, project col:Masks/template_id #5", "alternatives": "select tbl:Templates, project tbl:Templates #1, comparative #1 #2 equal/PPT, comparative #1 #2 equal/PP, union #3 #4, project col:Templates/Template_ID #5"}
{"input": "What is the name and capacity of the stadium with the most concerts after 2013?", "prediction": "select tbl:stadium, project tbl:concerts #1, comparative #2 #2 great/2013 col:concerts/year, group #3 #1, superlative #1 #4, project col:stadium/name #5, project col:stadium/capacity #5, union #6 #7", "alternatives": "select tbl:stadium, project tbl:concerts #1, comparative #2 #2 great/2013 col:concerts/year, project col:stadium/capacity #5, superlative #1 #4, project col:stadium/name #5, group #3 #1, union #6 #7"}
{"input": "What is the average and maximum capacities for all stadiums?", "prediction": "select tbl:stadium, project col:stadium/Capacity #1, aggregate avg #2, aggregate max #2, union #3 #4", "alternatives": "select tbl:stadium, project col:stadium/Capacity #1, aggregate avg #2, aggregate max #2, union #4 #3"}
{"input": "Which order deals with the most items? Return the order id.", "prediction": "select col:Order_Items, project tbl:Order_Items #1, group #2 #1, superlative #1 #3, project col:Order_Items/order_id #4", "alternatives": "select col:Order_Items, project tbl:Order_Items #1, project col:Order_Items/order_id #4, superlative #1 #3, group #2 #1"}
{"input": "What are the students' first names who have both cats and dogs as pets?", "prediction": "select tbl:Student, project tbl:PersonFriend #1, comparative #1 #2 equal/cat, comparative #1 #2 equal/dog, intersection #1 #3 #4, project col:Student/Fname #5", "alternatives": "select tbl:Student, project tbl:PersonFriend #1, intersection #1 #3 #4, comparative #1 #2 equal/dog, comparative #1 #2 equal/cat, project col:Student/Fname #5"}
{"input": "Count the number of employees", "prediction": "select tbl:EMPLOYEE, aggregate count #1", "alternatives": "select tbl:EMPLOYEE, aggregate count #1."}
{"input": "What is the id and type code for the template used by the most documents?", "prediction": "select tbl:Documents, project tbl:Documents #1, group #2 #1, superlative #1 #3, project col:Documents/Template_ID #4, project col:Documents/Type_Code #4, union #5 #6", "alternatives": "select tbl:Templates, project tbl:Documents #1, group #2 #1, superlative #1 #3, project col:Documents/Template_ID #4, project col:Templates/Template_Type_Code #5, union #5 #6"}
{"input": "What is the template type code of the template used by document with the name \"Data base\"?", "prediction": "select tbl:Documents, project col:Documents/document_name #1, comparative #1 #2 equal/Data base, project tbl:Documents #3, project col:Documents/template_type_code #4", "alternatives": "select tbl:Documents, comparative #1 #1 equal/Data base col:Documents/Document_Name, project tbl:Templates #2, project col:Templates/Template_Type_Code #3"}
{"input": "What are the ids for templates that are not used in any documents?", "prediction": "select tbl:Documents, comparative #1 #1 tbl:Documents, discard #1 #2, project col:Documents/template_id #3", "alternatives": "select tbl:Templates, comparative #1 #1 tbl:Documents, discard #1 #2, project col:Templates/Template_ID #3"}
{"input": "Show the name and theme for all concerts and the number of singers in each concert.", "prediction": "select col:artist, project col:concerts/Name #1, project col:concerts/Theme #1, project tbl:song #1, group #4 #1, union #2 #3 #5", "alternatives": "select col:artist, project col:concerts/Theme #1, project col:concerts/Name #1, project tbl:song #1, group #4 #1, union #2 #3 #5"}
{"input": "find the names of loser and winner who played in the match with greatest number of minutes.", "prediction": "select tbl:match, project col:match/minutes #1, group #2 #1, superlative #1 #3, project col:match/loser #4, project col:match/winner #4, union #5 #6", "alternatives": "select tbl:match, project col:match/minutes #1, group #2 #1, superlative #1 #3, project col:player/loser #4, project col:player/winner #4, union #5 #6."}
{"input": "Give the flight numbers of flights leaving from Aberdeen.", "prediction": "select tbl:flight, comparative #1 #1 equal/Aberdeen col:flight/origin, project tbl:flight #2", "alternatives": "select tbl:flight, comparative #1 #1 equal/Aberdeen col:airport/origin, project tbl:flight #2"}
{"input": "Count the number of United Airlines flights arriving in ASY Airport.", "prediction": "select tbl:flight, comparative #1 #1 equal/ASY col:airport/Airport_Name, aggregate count #2", "alternatives": "select tbl:flight, comparative #1 #1 equal/Airport col:airport/name, aggregate count #2"}
{"input": "Return the publisher that has published the most books.", "prediction": "select col:book, project tbl:publication #1, group #2 #1, superlative #1 #3", "alternatives": "select col:book, group #2 #1, project tbl:publication #1, superlative #1 #3"}
{"input": "On which day was the order placed whose shipment tracking number is 3452?", "prediction": "select col:Shipments, project tbl:Shipments #1, project col:Shipments/shipment_tracking_number #2, comparative #1 #3 equal/3452, project col:Shipments/order_placed #4", "alternatives": "select col:Shipments, comparative #1 #3 equal/3452, project col:Shipments/shipment_tracking_number #2, project tbl:Shipments #1, project col:Shipments/order_placed #4"}
{"input": "For students who have pets, how many pets does each student have? list their ids instead of names.", "prediction": "select tbl:Students, comparative #1 #1 tbl:Pets, project col:Students/student_id #2, select col:Pets, project col:Pets/pet_name #2, union #3 #4", "alternatives": "select tbl:Students, project col:Pets/pet_name #2, project col:Students/student_id #2, select col:Pets, comparative #1 #1 tbl:Pets, union #3 #4"}
{"input": "Which customers have both \"On Road\" and \"Shipped\" as order status? List the customer ids.", "prediction": "select tbl:Customers, project tbl:Orders #1, comparative #1 #2 equal/On Road, comparative #1 #2 equal/Shipped, intersection #1 #3 #4, project col:Customers/customer_id #5", "alternatives": "select tbl:Customer_Orders, comparative #1 #1 equal/On Road col:Customer_Orders/order_status_code, comparative #1 #1 equal/Shipped col:Customer_Orders/order_status_code, intersection #1 #2 #3"}
{"input": "Count the number of paragraphs in the document named 'Summer Show'.", "prediction": "select tbl:Document_Paragraphs, comparative #1 #1 equal/Summer Show col:Documents/document_name, aggregate count #2", "alternatives": "select tbl:Documents, comparative #1 #1 equal/Summer Show col:Documents/Document_Name, project tbl:Paragraphs #2, aggregate count #3"}
{"input": "Return the ids of templates that have the code PP or PPT.", "prediction": "select tbl:Templates, project col:Templates/Template_Code #1, comparative #1 #2 equal/PP, comparative #1 #2 equal/PPT, union #3 #4, project col:Templates/Template_ID #5", "alternatives": "select tbl:Templates, comparative #1 #2 equal/PPT, comparative #1 #2 equal/PP, project col:Templates/Template_Code #1, union #3 #4, project col:Templates/Template_ID #5"}
{"input": "What are the different template type codes?", "prediction": "select tbl:Templates, project col:Templates/TemplateType_Code #1", "alternatives": "select tbl:Templates"}
{"input": "Show all document ids, names and the number of paragraphs in each document.", "prediction": "select col:Documents, project col:Documents/document_id #1, project col:Documents/document_name #1, project tbl:Documents #1, group #4 #1, union #2 #3 #5", "alternatives": "select col:Paragraphs, project col:Paragraphs/Document_ID #1, project col:Documents/Document_Name #1, project tbl:Paragraphs #1, group #4 #1, union #2 #3 #5"}
{"input": "What are the ids of documents that have 2 or more paragraphs?", "prediction": "select col:Documents, project tbl:Document_Paragraphs #1, group #2 #1, comparative #1 #3 greatequal/2, project col:Documents/document_id #4", "alternatives": "select col:Documents, project tbl:Document_Paragraphs #1, group #2 #1, project col:Documents/document_id #4, comparative #1 #3 greatequal/2"}
{"input": "What are the first names of all players, and their average rankings?", "prediction": "select tbl:player, project col:player/FirstName #1, project col:player/Ranking #1, aggregate avg #3, union #2 #4", "alternatives": "select col:players, project col:players/first_name #1, project col:rankings/ranking #1, group #3 #1, union #2 #4"}
{"input": "Return the publisher that has published the most books.", "prediction": "select col:book, project tbl:publication #1, group #2 #1, superlative #1 #3", "alternatives": "select col:book_club, project tbl:book_club #1, group #2 #1, superlative #1 #3"}
{"input": "What are  the different countries with singers above age 20?", "prediction": "select col:artist, project tbl:song #1, comparative #2 #2 great/20 col:artist/Age", "alternatives": "select col:singer, project tbl:singer #1, project col:singer/Age #2, comparative #1 #3 great/20"}
{"input": "Show the stadium name and capacity with most number of concerts in year 2014 or after.", "prediction": "select tbl:stadium, project tbl:concerts #1, project col:concerts/year #2, comparative #2 #3 greatequal/2014, group #4 #1, superlative #1 #5, project col:stadium/name #6, project col:stadium/Capacity #6, union #7 #8", "alternatives": "select tbl:stadium, project tbl:concert #1, comparative #2 #2 greatequal/2014 col:concert/Year, group #3 #1, superlative #1 #4, project col:stadium/Name #5, project col:stadium/Capacity #5, union #6 #7"}
{"input": "What are all the different book publishers?", "prediction": "select col:book_publishers", "alternatives": "select col:book_publisher"}
{"input": "List the names of customers who have once canceled the purchase of the product \"food\" (the item status is \"Cancel\").", "prediction": "select tbl:Products_for_Hire, project tbl:Customer_Orders #1, comparative #1 #2 equal/food, project col:Customers/customer_name #3", "alternatives": "select tbl:Customers, project tbl:Products #1, comparative #1 #2 equal/food, project tbl:Order_Items #3, comparative #3 #4 equal/Cancel, project col:Customers/customer_name #5"}
{"input": "How many books fall into each category?", "prediction": "select col:book, project tbl:book #1, group #2 #1, union #1 #3", "alternatives": "select col:book_category, project tbl:book #1, group #2 #1, union #1 #3"}
{"input": "Find the names of the customers who have order status both \"On Road\" and \"Shipped\".", "prediction": "select tbl:Customers, project tbl:Orders #1, comparative #1 #2 equal/On Road, comparative #1 #2 equal/Shipped, intersection #1 #3 #4, project col:Customers/customer_name #5", "alternatives": "select tbl:Customer_Orders, comparative #1 #1 equal/On Road col:Customers/order_status, comparative #1 #1 equal/Shipped col:Customer_Orders/order_status, intersection #1 #2 #3, project col:Customers/customer_name #4"}
{"input": "What are the age and hometown of teachers?", "prediction": "select tbl:teachers, project col:teachers/Age #1, project col:teachers/Hometown #1, union #2 #3", "alternatives": "select tbl:teachers, project col:teachers/Age #1, project col:teachers/Hometown #1, union #2 #4"}
{"input": "How many matches were played in each year?", "prediction": "select col:match, project tbl:match #1, group #2 #1, union #1 #3", "alternatives": "select col:matches, project tbl:matches #1, group #2 #1, union #1 #3"}
{"input": "find the id, name and age for visitors who visited some museums more than once.", "prediction": "select tbl:museum, project tbl:visits #1, group #2 #1, comparative #1 #3 great/1, project col:museum/id #4, project col:museum/name #4, project col:museum/age #4, union #5 #6 #7", "alternatives": "select col:visit, project tbl:visitor #1, group #2 #1, comparative #1 #3 great/1, project col:visitor/ID #4, project col:visitor/Name #4, project col:visitor/Age #4, union #5 #6 #7"}
{"input": "Find the id of the customers who have order status both \"On Road\" and \"Shipped\".", "prediction": "select tbl:Customer_Orders, project tbl:Customer_Orders #1, comparative #1 #2 equal/On Road, comparative #1 #2 equal/Shipped, intersection #1 #3 #4, project col:Customers/customer_id #5", "alternatives": "select tbl:Customer_Orders, project col:Customers/customer_id #5, comparative #1 #2 equal/On Road, comparative #1 #2 equal/Shipped, intersection #1 #3 #4, project tbl:Customer_Orders #1"}
{"input": "Show the name and theme for all concerts and the number of singers in each concert.", "prediction": "select col:artist, project col:concerts/Name #1, project col:concerts/Theme #1, project tbl:song #1, group #4 #1, union #2 #3 #5", "alternatives": "select col:concert, project col:concert/concert_Name #1, project col:concert/Theme #1, project tbl:singer_in_concert #1, group #4 #1, union #2 #3 #5"}
{"input": "Count the number of paragraphs in the document named 'Summer Show'.", "prediction": "select tbl:Document_Paragraphs, comparative #1 #1 equal/Summer Show col:Documents/document_name, aggregate count #2", "alternatives": "select tbl:Documents, comparative #1 #1 equal/Summer Show col:Documents/document_name, project tbl:Paragraphs #2, aggregate count #3"}
{"input": "Which airlines have departures from CVO but not from APG airports?", "prediction": "select col:airlines, project tbl:departures #1, comparative #1 #2 equal/CVO, comparative #1 #2 equal/APG, discard #1 #3, intersection #1 #4 #5", "alternatives": "select col:airlines, project tbl:departures #1, comparative #1 #2 equal/CVO, comparative #1 #2 equal/APG, discard #1 #3, intersection #1 #4 #5,"}
{"input": "What is the total count of teachers?", "prediction": "select tbl:teachers, aggregate count #1", "alternatives": "select tbl:teacher, aggregate count #1"}
{"input": "Return the name of the airport with code 'AKO'.", "prediction": "select tbl:airports, project col:airports/airport_code #1, comparative #1 #2 equal/AKO, project col:airports/name #3", "alternatives": "select tbl:airport, project col:airport/airport_code #1, comparative #1 #2 equal/AKO, project col:airport/name #3"}
{"input": "Show the document id with paragraph text 'Brazil' and 'Ireland'.", "prediction": "select tbl:Documents, project col:Documents/paragraph_text #1, comparative #1 #2 equal/Brazil, comparative #1 #2 equal/Ireland, intersection #1 #3 #4, project col:Documents/document_id #5", "alternatives": "select col:Documents, project col:Documents/paragraph_text #1, comparative #1 #2 equal/Brazil, comparative #1 #2 equal/Ireland, intersection #1 #3 #4"}
{"input": "Which of the mill names contains the french word 'Moulin'?", "prediction": "select col:mill, project col:mill/French #1, comparative #1 #2 like%Moulin%", "alternatives": "select col:mill, comparative #1 #1 like%Moulin% col:mill/name"}
{"input": "Find the names of employees who never won any award in the evaluation.", "prediction": "select tbl:employee, comparative #1 #1 tbl:evaluation, discard #1 #2, project col:employee/name #3", "alternatives": "select tbl:employee, comparative #1 #1 tbl:evaluation, discard #1 #2, project col:employee/Name #3"}
{"input": "Which district has both stores with less than 3000 products and stores with more than 10000 products?", "prediction": "select col:district, project none #1, project tbl:store #2, group #3 #1, comparative #1 #4 less/3000, comparative #1 #4 great/10000, intersection #1 #5 #6", "alternatives": "select col:district, comparative #1 #4 less/3000, project tbl:store #2, group #3 #1, project none #1, comparative #1 #4 great/10000, intersection #1 #5 #6"}
{"input": "What country is Jetblue Airways affiliated with?", "prediction": "select col:airlines, comparative #1 #1 equal/Jetblue Airways col:airlines/name", "alternatives": "select tbl:airlines, project col:airlines/country #1"}
{"input": "What are the details for the paragraph that includes the text 'Korea'?", "prediction": "select tbl:paragraph, comparative #1 #1 like%Korea% col:paragraph/Text, project col:paragraph/Details #2", "alternatives": "select tbl:Paragraphs, comparative #1 #1 likekorea col:Paragraphs/Paragraph_Text, project col:Paragraphs/Other_Details #2"}
{"input": "What is the first name and gender of the all the students who have more than one pet?", "prediction": "select tbl:Student, project tbl:Pets #1, group #2 #1, comparative #1 #3 great/1, project col:Student/Fname #4, project col:Student/Gender #4, union #5 #6", "alternatives": "select tbl:Student, project tbl:Has_Pet #1, group #2 #1, comparative #1 #3 great/1, project col:Student/Fname #4, project col:Student/Sex #4, union #5 #6"}
{"input": "What are the different template type codes, and how many templates correspond to each?", "prediction": "select tbl:Templates, group #1 #2, union #2 #3", "alternatives": "select tbl:Templates, project col:Templates/Template_Type_Code #1, group #1 #3, union #3 #4"}
{"input": "Return the different document ids along with the number of paragraphs corresponding to each, ordered by id.", "prediction": "select tbl:Documents, project col:Documents/document_id #1, project tbl:Paragraphs #1, group #3 #1, union #2 #4, sort #5 #4", "alternatives": "select col:Paragraphs, project tbl:Paragraphs #2, group #3 #2, union #2 #4, sort #5 #2"}
{"input": "Return the code of the template type that is most commonly used in documents.", "prediction": "select col:Documents, project tbl:Documents #1, group #2 #1, superlative #1 #3", "alternatives": "select col:Documents, project tbl:Documents #1, group #2 #1, superlative #1 #3, project col:Documents/template_type_code #4"}
{"input": "Find the name and membership level of the visitors whose membership level is higher than 4, and sort by their age from old to young.", "prediction": "select tbl:Visitors, project col:Visitors/membership_level #1, comparative #1 #2 great/4, project col:Visitors/name #3, project col:Visitors/membership_level #3, project col:Visitors/age #3, union #4 #5, sort #6 #7 descending", "alternatives": "select tbl:Visitors, project col:Visitors/membership_level #1, comparative #1 #2 great/4, union #4 #5, project col:Visitors/membership_level #3, project col:Visitors/age #3, project col:Visitors/name #3, sort #6 #7 descending"}
{"input": "What are the ids and names of the architects who built at least 3 bridges ?", "prediction": "select tbl:Architects, project tbl:Bridges #1, group #2 #1, comparative #1 #3 greatequal/3, project col:Architects/architect_id #4, project col:Architects/name #4, union #5 #6", "alternatives": "select tbl:architect, project tbl:bridge #1, group #2 #1, comparative #1 #3 greatequal/3, project col:architect/id #4, project col:architect/name #4, union #5 #6"}
{"input": "Find the abbreviation and country of the airline that has fewest number of flights?", "prediction": "select tbl:airlines, project tbl:flight #1, group #2 #1, superlative #1 #3, project col:airlines/abbreviation #4, project col:airlines/country #4, union #5 #6", "alternatives": "select tbl:airlines, project tbl:flight #1, aggregate count #2, superlative #1 #3, project col:airlines/abbreviation #4, project col:airlines/country #4, union #5 #6"}
{"input": "What is the id and weight of every pet who is older than 1?", "prediction": "select tbl:Pets, comparative #1 #1 great/1 col:Pets/age, project col:Pets/id #2, project col:Pets/weight #2, union #3 #4", "alternatives": "select tbl:Pets, comparative #1 #1 great/1 col:Pets/pet_age, project col:Pets/PetID #2, project col:Pets/weight #2, union #3 #4"}
{"input": "What is the location of the bridge named 'Kolob Arch' or 'Rainbow Bridge'?", "prediction": "select col:bridge, comparative #1 #1 equal/Kolob Arch col:bridge/Name, comparative #1 #1 equal/Rainbow Bridge col:bridge/Name, union #2 #3", "alternatives": "select col:bridge, comparative #1 #1 equal/Kolob Arch col:bridge/Name, union #2 #3, comparative #1 #1 equal/Rainbow Bridge col:bridge/Name"}
{"input": "What are the death and injury situations caused by the ship with tonnage 't'?", "prediction": "select tbl:ship, project col:ship/Tonnage #1, comparative #1 #2 equal/t, project col:ship/Number_of_Deaths #3, project col:ship/Injury_Statement #3, union #4 #5", "alternatives": "select tbl:ship, project col:ship/Injury_Statement #3, comparative #1 #2 equal/t, project col:ship/Number_of_Deaths #3, project col:ship/Tonnage #1, union #4 #5"}
{"input": "Show names of teachers and the courses they are arranged to teach in ascending alphabetical order of the teacher's name.", "prediction": "select tbl:teachers, project col:teachers/Name #1, project tbl:course_arranged #1, union #2 #3, sort #4 #2 ascending", "alternatives": "select tbl:teacher, project col:teacher/Name #1, project col:course/Course #1, union #2 #3, sort #4 #2 ascending"}
{"input": "What are the number of concerts that occurred in the stadium with the largest capacity?", "prediction": "select tbl:stadium, project col:stadium/Capacity #1, superlative #1 #2, project tbl:convention #3, aggregate count #4", "alternatives": "select tbl:stadium, project col:stadium/Capacity #1, superlative #1 #2, aggregate count #4, project tbl:convention #3"}
{"input": "Which directors had a movie both in the year 1999 and 2000?", "prediction": "select col:Movie, project tbl:Movie #1, comparative #1 #2 equal/1999, comparative #1 #2 equal/2000, intersection #1 #3 #4", "alternatives": "select col:movie, project tbl:movie #1, comparative #2 #2 equal/1999 col:movie/Year, comparative #2 #2 equal/2000 col:movie/Year, intersection #1 #3 #4"}
{"input": "find the names of loser and winner who played in the match with greatest number of minutes.", "prediction": "select tbl:match, project col:match/minutes #1, group #2 #1, superlative #1 #3, project col:match/loser #4, project col:match/winner #4, union #5 #6", "alternatives": "select tbl:match, group #2 #1, project col:match/minutes #1, superlative #1 #3, project col:match/loser #4, project col:match/winner #4, union #5 #6"}
{"input": "What are the different first names and ages of the students who do have pets?", "prediction": "select tbl:Student, comparative #1 #1 tbl:Pets, project col:Student/Fname #2, project col:Student/Age #2, union #3 #4", "alternatives": "select tbl:Student, comparative #1 #1 tbl:Has_Pet, project col:Student/Age #2, union #3 #4"}
{"input": "What are the distinct battle names which are between bulgarian commander 'Kaloyan' and latin commander 'Baldwin I'?", "prediction": "select tbl:Battle, project col:Battle/Commandant #1, comparative #1 #2 equal/Kaloyan, comparative #1 #2 equal/Latin, comparative #1 #2 equal/Baldwin I, intersection #1 #3 #4", "alternatives": "select tbl:battle, comparative #1 #1 equal/Kaloyan col:battle/bulgarian_commander, comparative #2 #2 equal/Baldwin I col:battle/latin_commander, project col:battle/name #3"}
{"input": "find the code of the country where has the greatest number of players.", "prediction": "select col:country, project tbl:country #1, group #2 #1, superlative #1 #3", "alternatives": "select col:country, project none #1, group #2 #1, superlative #1 #3, project col:country/Country_Code #4"}
{"input": "Find the number of visitors who did not visit any museum opened after 2010.", "prediction": "select tbl:museum, comparative #1 #1 great/2010 col:museum/Open_Year, discard #1 #2, aggregate count #3", "alternatives": "select tbl:museum, discard #1 #2, comparative #1 #1 great/2010 col:museum/Open_Year, aggregate count #3"}
{"input": "How many players are there for each hand type?", "prediction": "select col:Player, project tbl:Player #1, group #2 #1, union #1 #3", "alternatives": "select col:Player, group #2 #1, project tbl:Player #1, union #1 #3"}
{"input": "What is the name and capacity for the stadium with highest average attendance?", "prediction": "select tbl:stadium, project col:stadium/Average_Attendance #1, group #2 #1, superlative #1 #3, project col:stadium/name #4, project col:stadium/Capacity #4, union #5 #6", "alternatives": "select tbl:stadium, project none #1, group #2 #1, superlative #1 #3, project col:stadium/Name #4, project col:stadium/Capacity #4, union #5 #6"}
{"input": "Show all book categories and the number of books in each category.", "prediction": "select col:book, project tbl:book #1, group #2 #1, union #1 #3", "alternatives": "select col:book, project tbl:book #1, group #2 #1, union #1 #3."}
{"input": "Find the cities that have more than one employee under age 30.", "prediction": "select col:employee, project tbl:employee #1, comparative #2 #2 less/30 col:employee/Age, group #3 #1, comparative #1 #4 great/1", "alternatives": "select col:employee, comparative #1 #4 great/1, comparative #2 #2 less/30 col:employee/Age, group #3 #1, project tbl:employee #1"}
{"input": "What is the year that had the most concerts?", "prediction": "select col:conzert, project tbl:conzert #1, group #2 #1, superlative #1 #3", "alternatives": "select tbl:concert, project col:concert/Year #1, group #1 #2, superlative #2 #3"}
{"input": "Show all template type codes and the number of documents using each type.", "prediction": "select col:Documents, project tbl:Documents #1, group #2 #1, union #1 #3", "alternatives": "select col:Templates, project tbl:Documents #1, group #2 #1, union #1 #3"}
{"input": "Which orders are made by the customer named \"Jeramie\"? Give me the order ids and status.", "prediction": "select tbl:Customer_Orders, comparative #1 #1 equal/Jeramie col:Customers/customer_name, project col:Customer_Orders/order_id #2, project col:Customer_Orders/order_status #2, union #3 #4", "alternatives": "select tbl:Customer_Orders, union #3 #4, project col:Customer_Orders/order_id #2, project col:Customer_Orders/order_status #2, comparative #1 #1 equal/Jeramie col:Customers/customer_name"}
{"input": "List the most common hometown of teachers.", "prediction": "select col:teachers, project tbl:teachers #1, group #2 #1, superlative #1 #3", "alternatives": "select col:teacher, project tbl:teacher #1, group #2 #1, superlative #1 #3"}
{"input": "How many flights depart from City Aberdeen?", "prediction": "select tbl:flight, comparative #1 #1 equal/City Aberdeen col:flight/origin, aggregate count #2", "alternatives": "select tbl:flight, comparative #1 #1 equal/Airport City Aberdeen col:flight/origin, aggregate count #2"}
{"input": "Return the number of United Airlines flights leaving from AHD Airport.", "prediction": "select tbl:flight, comparative #1 #1 equal/AHD Airport col:airport/origin, aggregate count #2", "alternatives": "select tbl:flights, comparative #1 #1 equal/United Airlines col:airlines/Airline, comparative #2 #2 equal/AHD col:flights/SourceAirport, aggregate count #3"}
{"input": "What is the average age of the visitors whose membership level is not higher than 4?", "prediction": "select tbl:Visitors, project col:Visitors/membership_level #1, comparative #1 #2 notequal/4, project col:Visitors/age #3, aggregate avg #4", "alternatives": "select tbl:Visitors, comparative #1 #2 notequal/4, project col:Visitors/membership_level #1, project col:Visitors/age #3, aggregate avg #4"}
{"input": "Find the number of employees hired in each shop; show the shop name as well.", "prediction": "select tbl:shop, project tbl:employee #1, group #2 #1, project col:shop/Shop_name #1, union #3 #4", "alternatives": "select col:employee, project tbl:employee #1, group #2 #1, project col:shop/Shop_Name #1, union #3 #4"}
{"input": "What are the names of the customers who bought product \"food\" at least once?", "prediction": "select tbl:Customers, comparative #1 #1 equal/food col:Products/product_details, project col:Customers/customer_name #2", "alternatives": "select tbl:Customers, project tbl:Buys #1, comparative #1 #2 equal/food, group #3 #1, comparative #1 #4 greatequal/1, project col:Customers/customer_name #5"}
{"input": "What are the distinct battle names which are between bulgarian commander 'Kaloyan' and latin commander 'Baldwin I'?", "prediction": "select tbl:Battle, project col:Battle/Commandant #1, comparative #1 #2 equal/Kaloyan, comparative #1 #2 equal/Latin, comparative #1 #2 equal/Baldwin I, intersection #1 #3 #4", "alternatives": "select tbl:Battle, project col:Battle/Commandant #1, comparative #1 #2 equal/Latin, comparative #1 #2 equal/Kaloyan, comparative #1 #2 equal/Baldwin I, intersection #1 #3 #4"}
{"input": "Find the first name of students who have cat or dog pet.", "prediction": "select tbl:Student, project tbl:Pets #1, comparative #1 #2 equal/Cat, comparative #1 #2 equal/Dog, union #3 #4, project col:Student/Fname #5", "alternatives": "select tbl:Student, comparative #1 #1 equal/Cat col:Has_Pets/name, comparative #1 #1 equal/Dog col:Has_Pets/name, union #2 #3"}
{"input": "What are the names and locations of the stadiums that had concerts that occurred in both 2014 and 2015?", "prediction": "select tbl:stadium, project tbl:concerts #1, comparative #1 #2 equal/2014, comparative #1 #2 equal/15, intersection #1 #3 #4, project col:stadium/name #5, project col:stadium/Location #5, union #6 #7", "alternatives": "select tbl:stadium, comparative #1 #1 equal/2014 col:concert/Year, comparative #1 #1 equal/2015 col:concert/Year, project col:stadium/Name #1, intersection #4 #2 #3, project col:stadium/Location #1, intersection #6 #2 #3, union #5 #7"}
{"input": "Find the first name of students who have both cat and dog pets.", "prediction": "select tbl:Student, project tbl:Pets #1, comparative #1 #2 equal/Cat, comparative #1 #2 equal/Dog, intersection #1 #3 #4, project col:Student/Fname #5", "alternatives": "select tbl:Student, comparative #1 #1 equal/cat col:Pets/PetType, comparative #1 #1 equal/dog col:Pets/PetType, intersection #1 #2 #3, project col:Student/Fname #4"}
{"input": "What are the opening year and staff number of the museum named Plaza Museum?", "prediction": "select tbl:Museum, comparative #1 #1 equal/Plaza Museum col:Museum/name, project col:Museum/open_year #2, project col:Museum/staff_number #2, union #3 #4", "alternatives": "select tbl:Museum, comparative #1 #1 equal/Plaza Museum col:Museum/name, project col:Museum/staff_number #2, project col:Museum/open_year #2, union #3 #4"}
{"input": "How many concerts occurred in 2014 or 2015?", "prediction": "select tbl:concerts, comparative #1 #1 equal/2014 col:concerts/year, comparative #1 #1 equal/2015 col:concerts/year, union #2 #3, aggregate count #4", "alternatives": "select tbl:concert, comparative #1 #1 equal/2014 col:concert/Year, comparative #1 #1 equal/2015 col:concert/Year, union #2 #3, aggregate count #4"}
{"input": "What is the abbreviation of the airline has the fewest flights and what country is it in?", "prediction": "select tbl:airlines, project tbl:flight #1, group #2 #1, superlative #1 #3, project col:airlines/abbreviation #4", "alternatives": "select tbl:airlines, project tbl:flight #1, group #2 #1, superlative #1 #3, project col:airlines/country #4, aggregate col:airlines/abbreviation #5"}
{"input": "What is the most commmon hometowns for teachers?", "prediction": "select col:teachers, project tbl:teachers #1, group #2 #1, superlative #1 #3", "alternatives": "select col:teachers, project none #1, group #2 #1, superlative #1 #3"}
{"input": "Find the id and name of the museum that has the most staff members?", "prediction": "select tbl:Museum, project tbl:Staff #1, group #2 #1, superlative #1 #3, project col:Museum/museum_id #4, project col:Museum/museum_name #4, union #5 #6", "alternatives": "select tbl:Museum, project col:Museum/museum_name #4, group #2 #1, superlative #1 #3, project col:Museum/museum_id #4, project tbl:Staff #1, union #5 #6"}
{"input": "Show all document names using templates with template type code BK.", "prediction": "select tbl:Documents, project tbl:Documents #1, project col:Documents/template_type_code #2, comparative #1 #3 equal/BK, project col:Documents/document_name #4", "alternatives": "select tbl:Templates, project tbl:Templates #1, comparative #1 #2 equal/BK, project tbl:Documents #3, project col:Documents/Document_Name #4"}
{"input": "Which airline has abbreviation 'UAL'?", "prediction": "select col:airlines, project col:airlines/abbreviation #1, comparative #1 #2 like%UAL%", "alternatives": "select tbl:airlines, project col:airlines/abbreviation #1, comparative #1 #2 equal/UAL"}
{"input": "What is the best rank of losers across all matches?", "prediction": "select tbl:match, project col:match/Losers #1, group #2 #1, superlative #1 #3", "alternatives": "select tbl:matches, project col:matches/loser_rank #1, project col:matches/loser_rank #2, aggregate min #3"}
{"input": "What are the titles of movies and books corresponding to companies incorporated in China?", "prediction": "select tbl:film, comparative #1 #1 equal/China col:company/Country, project col:book/Title #2, project col:book/Title #3, union #4 #5", "alternatives": "select tbl:culture_company, comparative #1 #1 equal/China col:culture_company/Incorporated_in, project tbl:movie #2, project col:movie/Title #3, project tbl:book_club #2, project col:book_club/Book_Title #5, union #4 #6"}
{"input": "How many ships ended up being 'Captured'?", "prediction": "select tbl:Ship, comparative #1 #1 equal/Captured col:Ship/details, aggregate count #2", "alternatives": "select tbl:Ship, comparative #1 #1 equal/Captured col:Ship/Department_Name, aggregate count #3"}
{"input": "How many flights land in Aberdeen or Abilene?", "prediction": "select tbl:flight, comparative #1 #1 equal/Aberdeen col:flight/origin, comparative #1 #1 equal/Abrilene col:flight/destination, union #2 #3, aggregate count #4", "alternatives": "select tbl:flight, comparative #1 #1 equal/Abrilene col:flight/destination, comparative #1 #1 equal/Aberdeen col:flight/origin, union #2 #3, aggregate count #4"}
{"input": "How many different loser names are there?", "prediction": "select col:loan, comparative #1 #1 tbl:loan, aggregate count #2", "alternatives": "select col:Losers, comparative #1 #1 tbl:Losers, aggregate count #2"}
{"input": "find the name of employee who was awarded the most times in the evaluation.", "prediction": "select tbl:employee, project tbl:evaluation #1, group #2 #1, superlative #1 #3, project col:employee/name #4", "alternatives": "select tbl:employee, project tbl:evaluation #1, group #2 #1, superlative #1 #3, project col:employee/Name #4"}
{"input": "Which publishers did not publish a book in 1989?", "prediction": "select col:book, comparative #1 #1 equal/1989 col:book/Year, discard #1 #2", "alternatives": "select col:book, comparative #1 #1 tbl:book, comparative #2 #2 equal/1989 col:book/Year"}
{"input": "What are the names of the teachers and how many courses do they teach?", "prediction": "select tbl:teachers, project col:teachers/Name #1, project tbl:teaches #1, group #3 #1, union #2 #4", "alternatives": "select tbl:teachers, project col:teachers/Name #1, project tbl:course #1, group #3 #1, union #2 #4"}
{"input": "What is the template type code of the template used by document with the name \"Data base\"?", "prediction": "select tbl:Documents, project col:Documents/document_name #1, comparative #1 #2 equal/Data base, project tbl:Documents #3, project col:Documents/template_type_code #4", "alternatives": "select tbl:Documents, project col:Documents/document_name #1, comparative #1 #2 equal/Data base, project tbl:Ref_Template_Code #3"}
{"input": "Sort all the shops by number products in descending order, and return the name, location and district of each shop.", "prediction": "select tbl:shop, project col:shop/Product_ID #1, group #2 #1, project col:shop/Shop_Name #1, project col:shop/Location #1, project col:shop/District #1, union #3 #4 #5, sort #6 #5 descending", "alternatives": "select tbl:shop, project col:shop/Name #1, project col:shop/Location #1, project col:shop/District #1, project col:shop/Number_products #1, group #5 #1, union #2 #3 #4, sort #7 #6 descending"}
{"input": "Sort employee names by their age in ascending order.", "prediction": "select tbl:employee, project col:employee/name #1, project col:employee/age #1, sort #2 #3 ascending", "alternatives": "select tbl:employee, project col:employee/age #1, project col:employee/name #1, sort #2 #3 ascending"}
{"input": "What is the id of the pet owned by the student whose last name is 'Smith'?", "prediction": "select tbl:Students, project col:Students/last_name #1, comparative #1 #2 equal/Smith, project tbl:Pets #3, project col:Pets/pet_id #4", "alternatives": "select tbl:Students, comparative #1 #1 equal/Smith col:Students/last_name, project tbl:Pets #2, project col:Pets/pet_id #3"}
{"input": "How many flights depart from City Aberdeen?", "prediction": "select tbl:flight, comparative #1 #1 equal/City Aberdeen col:flight/origin, aggregate count #2", "alternatives": "select tbl:flights, comparative #1 #1 equal/Aberdeen col:airports/City, aggregate count #2"}
{"input": "Show paragraph details for paragraph with text 'Korea'.", "prediction": "select tbl:paragraph, project col:paragraph/Text #1, comparative #1 #2 equal/Korea, project col:paragraph/Details #3", "alternatives": "select tbl:paragraph, project col:paragraph/Text #1, comparative #1 #2 equal/Korea, project col:paragraph/Paragraph_details #3"}
{"input": "What is the total number of singers?", "prediction": "select tbl:song, aggregate count #1", "alternatives": "select tbl:Songs, aggregate count #1"}
{"input": "How many distinct countries do players come from?", "prediction": "select tbl:country, aggregate count #2", "alternatives": "select tbl:country, project col:country/Country_name #1"}
{"input": "Find the total number of tours for each ranking date.", "prediction": "select col:tourist, project tbl:tourist #1, group #2 #1, union #1 #3", "alternatives": "select col:tourist, group #2 #1, project tbl:tourist #1, union #1 #3"}
{"input": "Find the name of the winner who has the highest rank points and participated in the Australian Open tourney.", "prediction": "select col:match_season, project col:match_season/Rank_Points #1, superlative #1 #2, comparative #3 #3 equal/Australian Open col:match_season/Tournament", "alternatives": "select col:match_season, project col:match_season/Rank_Points #1, comparative #3 #3 equal/Australian Open col:match_season/Tournament, superlative #1 #2"}
{"input": "What are the manager name and district of the shop that sells the largest number of products?", "prediction": "select tbl:shop, project tbl:product #1, group #2 #1, superlative #1 #3, project col:shop/Manager_Name #4, project col:shop/District #4, union #5 #6", "alternatives": "select tbl:shop, project tbl:product #1, group #2 #1, superlative #1 #3, project col:shop/Manager_Name #4, project col:shop/District #4, union #5 #6"}
{"input": "Find the first name and gender of student who have more than one pet.", "prediction": "select tbl:Student, project tbl:Pets #1, group #2 #1, comparative #1 #3 great/1, project col:Student/Fname #4, project col:Student/Gender #4, union #5 #6", "alternatives": "select tbl:Student, project col:Student/Fname #4, group #2 #1, comparative #1 #3 great/1, project tbl:Pets #1, project col:Student/Gender #4, union #5 #6"}
{"input": "What are the distinct template type descriptions for the templates ever used by any document?", "prediction": "select tbl:Document_Templates, project tbl:Document_Templates #1, group #2 #1, comparative #1 #3 none", "alternatives": "select tbl:Templates, comparative #1 #1 tbl:Documents, project col:Ref_Template_Types/Template_Type_Description #2, comparative #3 #3 none"}
{"input": "What is the code of airport that has the highest number of flights?", "prediction": "select tbl:airport, project tbl:flight #1, group #2 #1, superlative #1 #3, project col:airport/code #4", "alternatives": "select tbl:airport, project tbl:flight #1, project col:airport/code #4, superlative #1 #3, group #2 #1"}
{"input": "Find the year that has the most number of matches.", "prediction": "select col:match, project tbl:match #1, group #2 #1, superlative #1 #3", "alternatives": "select col:matches, project tbl:matches #1, group #2 #1, superlative #1 #3"}
{"input": "Give me the names of customers who have placed orders between 2009-01-01 and 2010-01-01.", "prediction": "select tbl:Customer_Orders, comparative #1 #1 lessequal/2010-01-01 col:Customer_Orders/order_date, comparative #2 #2 greatequal/2009-01-01 col:Customers/order_date, project col:Customers/customer_name #3", "alternatives": "select tbl:Orders, comparative #1 #1 lessequal/2010-01-01 col:Orders/date_order_placed, comparative #2 #2 greatequal/2009-01-01 col:Orders/date_order_placed, project tbl:Customers #3, project col:Customers/customer_name #4"}
{"input": "Find the name of the customer who made the most orders.", "prediction": "select tbl:Customers, project tbl:Orders #1, group #2 #1, superlative #1 #3, project col:Customers/customer_name #4", "alternatives": "select tbl:customer, project tbl:order #1, group #2 #1, superlative #1 #3, project col:customer/customer_name #4"}
{"input": "Find the ids of orders which are shipped after 2000-01-01.", "prediction": "select tbl:Orders, comparative #1 #1 great/2000-01-01 col:Orders/shipping_date, project col:Orders/order_id #2", "alternatives": "select tbl:Orders, comparative #1 #1 great/2000-01-01 col:Orders/date_order_shipped, project col:Orders/order_id #2"}
{"input": "List the name, nationality and id of all male architects ordered by their names lexicographically.", "prediction": "select tbl:architects, comparative #1 #1 equal/M col:architects/gender, project col:architects/name #2, project col:architects/nationality #2, project col:architects/architect_id #2, union #3 #4 #5, sort #6 #5 lexicographically", "alternatives": "select tbl:architect, comparative #1 #1 equal/male col:architect/gender, project col:architect/name #2, project col:architect/nationality #2, project col:architect/id #2, union #3 #4 #5, sort #6 #3 ascending"}
{"input": "Return the version numbers and template type codes of templates with a version number greater than 5.", "prediction": "select tbl:Templates, project col:Templates/version_number #1, comparative #1 #2 great/5, project col:Templates/version_number #3, project col:Templates/template_type_code #3, union #4 #5", "alternatives": "select tbl:Templates, project col:Templates/version_number #1, comparative #1 #2 great/5, project col:Templates/version_number #3, project col:Templates/ template_type_code #3, union #4 #5"}
{"input": "Find the dates of orders which belong to the customer named \"Jeramie\".", "prediction": "select tbl:Customer, comparative #1 #1 equal/Jeramie col:Customers/customer_name, project tbl:Orders #2, project col:Orders/order_date #3", "alternatives": "select tbl:Customers, comparative #1 #1 equal/Jeramie col:Customers/customer_name, project tbl:Orders #2, project col:Orders/date_order_placed #3"}
{"input": "How many teachers are there?", "prediction": "select tbl:teachers, aggregate count #1", "alternatives": "select tbl:teachers, aggregate count #2"}
{"input": "Find the names of the visitors whose membership level is higher than 4, and order the results by the level from high to low.", "prediction": "select tbl:Visitors, project col:Visitors/membership_level #1, comparative #1 #2 great/4, project col:Visitors/name #3, project col:Visitors/membership_level #3, sort #4 #5 ascending", "alternatives": "select tbl:Visitors, project col:Visitors/membership_level #1, comparative #1 #2 great/4, sort #4 #5 ascending, project col:Visitors/membership_level #3, project col:Visitors/name #3"}
{"input": "Show names of teachers and the courses they are arranged to teach.", "prediction": "select tbl:teachers, project col:teachers/Name #1, project tbl:teaches #1, project col:courses/Course_Arrangement #3, union #2 #4", "alternatives": "select tbl:teachers, project col:teachers/Name #1, project tbl:teaches #1, union #2 #3"}
{"input": "Show different hometown of teachers and the number of teachers from each hometown.", "prediction": "select tbl:teachers, project col:teachers/Hometown #1, group #1 #2, union #2 #3", "alternatives": "select tbl:teacher, project col:teacher/Hometown #1, group #1 #2, union #2 #3"}
{"input": "How many players are from each country?", "prediction": "select col:country, project tbl:match_season #1, group #2 #1, union #1 #3", "alternatives": "select col:country, union #1 #3, group #2 #1, project tbl:match_season #1"}
{"input": "Which template type code is used by most number of documents?", "prediction": "select col:Documents, project tbl:Documents #1, group #2 #1, superlative #1 #3", "alternatives": "select col:Templates, project tbl:Documents #1, group #2 #1, superlative #1 #3"}
{"input": "Which directors had a movie both in the year 1999 and 2000?", "prediction": "select col:Movie, project tbl:Movie #1, comparative #1 #2 equal/1999, comparative #1 #2 equal/2000, intersection #1 #3 #4", "alternatives": "select col:Movie, comparative #1 #2 equal/1999, project tbl:Movie #1, comparative #1 #2 equal/2000, intersection #1 #3 #4"}
{"input": "What is the abbreviation of the airline has the fewest flights and what country is it in?", "prediction": "select tbl:airlines, project tbl:flight #1, group #2 #1, superlative #1 #3, project col:airlines/abbreviation #4", "alternatives": "select tbl:airlines, project tbl:flights #1, group #2 #1, superlative #1 #3, project col:airlines/Abbreviation #4, project col:airlines/Country #4, union #5 #6"}
{"input": "What is the first name of every student who has a dog but does not have a cat?", "prediction": "select tbl:Student, comparative #1 #1 equal/dog col:Student/Staff_Name, comparative #1 #1 equal/Cat col:Student/Staff_Name, intersection #1 #2 #3, project col:Student/Fname #4", "alternatives": "select tbl:Student, comparative #1 #1 equal/dog col:Student/Staff_Name, intersection #1 #2 #3, comparative #1 #1 equal/Cat col:Student/Staff_Name, project col:Student/Fname #4"}
{"input": "How many 'United Airlines' flights depart from Airport 'AHD'?", "prediction": "select tbl:flight, comparative #1 #1 equal/AHD col:airport/Airport_Name, aggregate count #2", "alternatives": "select tbl:flight, project tbl:flight #1, comparative #2 #1 equal/AHD col:airport/name, aggregate count #3"}
{"input": "Find the ids of orders which are shipped after 2000-01-01.", "prediction": "select tbl:Orders, comparative #1 #1 great/2000-01-01 col:Orders/shipping_date, project col:Orders/order_id #2", "alternatives": "select col:Shipments, comparative #1 #1 great/2000-01-01 col:Shipments/shipment_date, project col:Shipments/order_id #2"}
{"input": "List the names of teachers in ascending order of age.", "prediction": "select tbl:teachers, project col:teachers/Name #1, project col:teachers/Age #1, sort #2 #3 ascending", "alternatives": "select tbl:teacher, project col:teacher/Name #1, project col:teacher/Age #1, sort #2 #3 ascending"}
{"input": "What are all distinct countries where singers above age 20 are from?", "prediction": "select tbl:song, comparative #1 #1 great/20 col:song/age, project col:country/country #2", "alternatives": "select tbl:singer, project col:singer/Age #1, comparative #1 #2 great/20"}
{"input": "What are the names of the stadiums without any concerts?", "prediction": "select tbl:stadium, comparative #1 #1 tbl:convention, discard #1 #2, project col:stadium/name #3", "alternatives": "select tbl:stadium, comparative #1 #1 tbl:conzerts, discard #1 #2, project col:stadium/name #3"}
{"input": "Show all template type codes with less than three templates.", "prediction": "select col:Templates, project tbl:Templates #1, group #2 #1, comparative #1 #3 less/3", "alternatives": "select col:Templates, comparative #1 #3 less/3, group #2 #1, project tbl:Templates #1"}
{"input": "How many paragraphs for the document with name 'Summer Show'?", "prediction": "select tbl:Documents, project col:Documents/document_name #1, comparative #1 #2 equal/Summer Show, project tbl:Paragraphs #3, aggregate count #4", "alternatives": "select tbl:Documents, comparative #1 #1 equal/Summer Show col:Documents/Document_Name, project tbl:Paragraphs #2, aggregate count #3"}
{"input": "For each customer who has at least two orders, find the customer name and number of orders made.", "prediction": "select tbl:Customers, project tbl:Orders #1, group #2 #1, comparative #1 #3 greatequal/2, project col:Customers/customer_name #4, project tbl:Orders #4, group #6 #4, union #5 #7", "alternatives": "select col:Customers, project tbl:Orders #1, group #2 #1, comparative #1 #3 greatequal/2, project col:Customers/customer_name #4, group #2 #4, union #5 #6"}
{"input": "What is the document id and name with greatest number of paragraphs?", "prediction": "select tbl:Documents, project tbl:Paragraphs #1, group #2 #1, superlative #1 #3, project col:Documents/document_id #4, project col:Documents/document_name #4, union #5 #6", "alternatives": "select tbl:Documents, project col:Documents/document_id #4, group #2 #1, superlative #1 #3, project tbl:Paragraphs #1, project col:Documents/document_name #4, union #5 #6"}
{"input": "Show the name of teachers aged either 32 or 33?", "prediction": "select tbl:teachers, comparative #1 #1 equal/32 col:teachers/Age, comparative #1 #1 equal/33 col:teachers/Age, union #2 #3, project col:teachers/Name #4", "alternatives": "select tbl:teacher, comparative #1 #1 equal/32 col:teacher/Age, comparative #1 #1 equal/33 col:teacher/Age, union #2 #3, project col:teacher/Name #4"}
{"input": "How many movie directors are there?", "prediction": "select tbl:Movie, aggregate count #1", "alternatives": "select col:film, aggregate count #1"}
{"input": "Find the first name and country code of the player who did the most number of tours.", "prediction": "select tbl:Player, project tbl:Tourist_Attendance #1, group #2 #1, superlative #1 #3, project col:Player/first_name #4, project col:Player/country_code #4, union #5 #6", "alternatives": "select tbl:players, project col:rankings/tours #1, group #2 #1, superlative #1 #3, project col:players/first_name #4, project col:players/country_code #4, union #5 #6"}
{"input": "Which airlines have at least 10 flights?", "prediction": "select col:flight, project tbl:flight #1, group #2 #1, comparative #1 #3 greatequal/10", "alternatives": "select col:flight, comparative #1 #1 greatequal/10 col:flight/no"}
{"input": "How many pets are owned by students that have an age greater than 20?", "prediction": "select tbl:Students, project col:Students/age #1, comparative #1 #2 great/20, project tbl:Pets #3, aggregate count #4", "alternatives": "select tbl:Student, project col:Student/Age #1, comparative #1 #2 great/20, project tbl:Has_Pet #3, aggregate count #4"}
{"input": "Which airlines have a flight with destination airport AHD?", "prediction": "select col:flight, project tbl:flight #1, project col:flight/destination #2, comparative #1 #3 equal/AHD", "alternatives": "select col:flight, project tbl:flight #1, project col:flight/destination #2, comparative #1 #3 equal/ASHD"}
{"input": "Return the template type description of the template type with the code AD.", "prediction": "select tbl:Customer_Templates, project col:Customer_Templates/Template_Type_Code #1, comparative #1 #2 equal/AD, project col:Customer_Templates/Template_Type_Description #3", "alternatives": "select tbl:Ref_Template_Types, project col:Ref_Template_Types/Template_Type_Code #1, comparative #1 #2 equal/AD, project col:Ref_Template_Types/Template_Type_Description #3"}
{"input": "What is the code of the country with the most players?", "prediction": "select col:country, project tbl:country #1, group #2 #1, superlative #1 #3", "alternatives": "select col:country, project tbl:match_season #1, group #2 #1, superlative #1 #3"}
{"input": "Find the total number of matches.", "prediction": "select tbl:match, aggregate count #1", "alternatives": "select tbl:matches, aggregate count #1"}
{"input": "What are the names, countries, and ages for every singer in descending order of age?", "prediction": "select tbl:song, project col:artist/artist_name #1, project col:artist/country #1, project col:artist/age #1, union #2 #3 #4, sort #5 #4 descending", "alternatives": "select tbl:song, sort #5 #4 descending, project col:artist/country #1, project col:artist/age #1, union #2 #3 #4, project col:artist/artist_name #1"}
{"input": "How many countries does each continent have? List the continent id, continent name and the number of countries.", "prediction": "select col:continents, project tbl:country #1, group #2 #1, project col:continents/Continent #1, project col:continents/Continent_name #1, union #4 #5 #3", "alternatives": "select col:continents, union #4 #5 #3, group #2 #1, project col:continents/Continent #1, project col:continents/Continent_name #1, project tbl:country #1"}
{"input": "Give the flight numbers of flights landing at APG.", "prediction": "select tbl:flight, comparative #1 #1 equal/APG col:airport/airport_name, project tbl:flight #2", "alternatives": "select tbl:flights, comparative #1 #1 equal/APG col:flights/DestAirport, project col:flights/FlightNo #2"}
{"input": "What is the document id with least number of paragraphs?", "prediction": "select col:Documents, project tbl:Documents #1, group #2 #1, superlative #1 #3", "alternatives": "select col:Paragraphs, project tbl:Paragraphs #1, group #2 #1, superlative #1 #3"}
{"input": "Which city and country is the Alton airport at?", "prediction": "select val:airport, project col:airport/city #1, project col:airport/country #1, union #2 #3", "alternatives": "select val:airports, project col:airports/City #1, project col:airports/Country #1, union #2 #3"}
{"input": "Show all document ids and the number of paragraphs in each document. Order by document id.", "prediction": "select col:Documents, project col:Documents/document_id #1, project tbl:Documents #1, group #3 #1, union #2 #4, sort #5 #4", "alternatives": "select col:Paragraphs, project col:Paragraphs/Document_ID #1, project tbl:Paragraphs #1, group #3 #1, union #2 #4, sort #5 #2"}
{"input": "What are the names of the customers who have made two or less orders?", "prediction": "select tbl:Customers, project tbl:Orders #1, group #2 #1, comparative #1 #3 lessequal/2, project col:Customers/customer_name #4", "alternatives": "select col:Customers, comparative #1 #1 tbl:Orders, group #2 #1, comparative #1 #3 lessequal/2, project col:Customers/customer_name #4"}
{"input": "Show names of teachers and the courses they are arranged to teach in ascending alphabetical order of the teacher's name.", "prediction": "select tbl:teachers, project col:teachers/Name #1, project tbl:course_arranged #1, union #2 #3, sort #4 #2 ascending", "alternatives": "select tbl:teachers, project col:teachers/Name #1, project tbl:teaches #1, project col:courses/Courses #3, union #2 #4, sort #5 #4 ascending"}
{"input": "Which airlines have departing flights from both APG and CVO airports?", "prediction": "select col:flight, project tbl:flight #1, project tbl:airport #2, comparative #1 #3 equal/APG, comparative #1 #3 equal/CVO, intersection #1 #4 #5", "alternatives": "select col:flight, comparative #1 #1 equal/APG col:airport/Airport_Name, comparative #1 #1 equal/CVO col:airport/Airport_Name, intersection #1 #2 #3"}
{"input": "Find the average and maximum age for each type of pet.", "prediction": "select col:Pets, project col:Pets/age #1, group #2 #1, union #1 #3", "alternatives": "select tbl:Pets, project col:Pets/PetType #1, project col:Pets/pet_age #2, group #3 #2, group #3 #2, union #2 #4 #5"}
{"input": "Which orders have shipment after 2000-01-01? Give me the order ids.", "prediction": "select tbl:Shipments, comparative #1 #1 great/2000-01-01 col:Shipments/date_of_shipment, project col:Shipments/order_id #2", "alternatives": "select col:Shipments, project tbl:Shipments #1, comparative #1 #2 great/2000-01-01, project col:Shipments/order_id #3"}
{"input": "What are all the song names by singers who are older than average?", "prediction": "select tbl:song, project col:song/rating #1, aggregate avg #2, comparative #1 #2 great/#3, project col:song/song_name #4", "alternatives": "select tbl:singer, project col:singer/Age #1, aggregate avg #2, comparative #1 #2 great/#3, project col:singer/Song_Name #4, project col:singer/Song_Name #5"}
{"input": "What is the abbreviation of Airline \"JetBlue Airways\"?", "prediction": "select tbl:airlines, project col:airlines/abbreviation #1, comparative #2 #1 equal/JetBlue Airways", "alternatives": "select col:airlines, comparative #1 #1 equal/JetBlue Airways col:airlines/Airline"}
{"input": "Return the number of flights departing from Aberdeen.", "prediction": "select tbl:flight, comparative #1 #1 equal/Aberdeen col:flight/origin, aggregate count #2", "alternatives": "select tbl:flight, comparative #1 #1 equal/Aberdeen col:flight/origin, aggregate counts #2"}
{"input": "Find the number of pets whose weight is heavier than 10.", "prediction": "select tbl:Person, project col:Person/weight #1, comparative #1 #2 great/10, aggregate count #3", "alternatives": "select tbl:Pets, project col:Pets/weight #1, comparative #1 #2 great/10, aggregate count #3"}
{"input": "What are the names, countries, and ages for every singer in descending order of age?", "prediction": "select tbl:song, project col:artist/artist_name #1, project col:artist/country #1, project col:artist/age #1, union #2 #3 #4, sort #5 #4 descending", "alternatives": "select tbl:song, project col:song/artist_name #1, project col:song/country #1, project col:song/age #1, union #2 #3 #4, sort #5 #4 descending"}
{"input": "What are the invoice numbers created before 1989-09-03 or after 2007-12-25?", "prediction": "select col:Invoices, comparative #1 #1 less/1989-09-03 col:Invoices/date_invoice_created, comparative #1 #1 great/2007-12-25 col:Invoices/date_invoice_number, union #2 #3", "alternatives": "select col:Invoices, comparative #1 #1 great/2007-12-25 col:Invoices/date_invoice_created, comparative #1 #1 less/1989-09-03 col:Invoices/date_invoice_created, union #2 #3"}
{"input": "List the name, date and result of each battle.", "prediction": "select tbl:battle, project col:battle/Name #1, project col:battle/Date #1, project col:battle/Result #1, union #2 #3 #4", "alternatives": "select tbl:battle, project col:battle/Result #1, project col:battle/Date #1, project col:battle/Name #1, union #2 #3 #4"}
{"input": "What is the total count of teachers?", "prediction": "select tbl:teachers, aggregate count #1", "alternatives": "select tbl:teacher, aggregate count #1"}
{"input": "For each hometown, how many teachers are there?", "prediction": "select col:teachers, project tbl:teachers #1, group #2 #1, union #1 #3", "alternatives": "select col:teacher, project tbl:teacher #1, group #2 #1, union #1 #3"}
{"input": "Show the movie titles and book titles for all companies in China.", "prediction": "select tbl:company, comparative #1 #1 equal/China col:company/Country, project col:film/Title #2, project col:book/Title #2, union #3 #4", "alternatives": "select tbl:company, comparative #1 #1 equal/China col:company/Country, project col:film/Title #2, union #3 #4, project col:book/Title #2"}
{"input": "What is the ship id and name that caused most total injuries?", "prediction": "select tbl:ship, project tbl:injury_accident #1, group #2 #1, superlative #1 #3, project col:ship/Ship_ID #4, project col:ship/Name #4, union #5 #6", "alternatives": "select tbl:ship, select tbl:death, group #2 #1, superlative #1 #3, project col:ship/id #4, project col:ship/name #4, union #5 #6"}
{"input": "Show names of teachers and the number of courses they teach.", "prediction": "select tbl:teachers, project col:teachers/Name #1, project tbl:teaches #1, group #3 #1, union #2 #4", "alternatives": "select tbl:teachers, project col:teachers/Name #1, union #2 #4, group #3 #1, project tbl:teaches #1"}
{"input": "What are flight numbers of flights arriving at Airport \"APG\"?", "prediction": "select tbl:flight, comparative #1 #1 equal/APG col:airport/Airport_Name, project tbl:flight #2", "alternatives": "select tbl:flight, comparative #1 #1 equal/APG col:airport/airport_name, project tbl:flight #2"}
{"input": "Find the number of concerts happened in the stadium with the highest capacity.", "prediction": "select tbl:stadium, project col:stadium/Capacity #1, superlative #1 #2, project tbl:convention #3, aggregate count #4", "alternatives": "select tbl:stadium, project col:stadium/Capacity #1, superlative #1 #2, project tbl:konzert #3, aggregate count #4"}
{"input": "For each shop, return the number of employees working there and the name of the shop.", "prediction": "select col:shop, project tbl:employee #1, group #2 #1, project col:shop/Shop_name #1, union #3 #4", "alternatives": "select col:shop, project tbl:hiring #1, group #2 #1, project col:shop/Name #1, union #3 #4"}
{"input": "What is the first name of every student who has a dog but does not have a cat?", "prediction": "select tbl:Student, comparative #1 #1 equal/dog col:Student/Staff_Name, comparative #1 #1 equal/Cat col:Student/Staff_Name, intersection #1 #2 #3, project col:Student/Fname #4", "alternatives": "select tbl:Student, comparative #1 #1 equal/dog col:Student/Hound, comparative #1 #1 equal/Cat col:Student/Hound, intersection #1 #2 #3, project col:Student/Fname #4"}
{"input": "How many pets are owned by students that have an age greater than 20?", "prediction": "select tbl:Students, project col:Students/age #1, comparative #1 #2 great/20, project tbl:Pets #3, aggregate count #4", "alternatives": "select tbl:Students, project tbl:Pets #3, comparative #1 #2 great/20, project col:Students/age #1, aggregate count #4"}
{"input": "What are flight numbers of flights departing from Airport \"APG\"?", "prediction": "select tbl:flight, comparative #1 #1 equal/APG col:airport/Airport_Name, project tbl:flight #2", "alternatives": "select tbl:flight, comparative #1 #1 equal/APG col:airport/Airport_Name, project tbl:flight #2."}
{"input": "Find the average rank of winners in all matches.", "prediction": "select tbl:match, project col:match/Rank #1, aggregate avg #2", "alternatives": "select tbl:matches, project col:matches/winner_rank #1, project col:matches/winner_rank #2, aggregate avg #3"}
{"input": "List the names of the customers who have once bought product \"food\".", "prediction": "select tbl:Customers, comparative #1 #1 equal/food col:Products/product_details, project col:Customers/customer_name #2", "alternatives": "select tbl:Customers, project tbl:Products #1, comparative #1 #2 equal/food, project col:Customers/customer_name #3"}
{"input": "Find the total number of matches.", "prediction": "select tbl:match, aggregate count #1", "alternatives": "select, aggregate count #1"}
{"input": "List all singer names in concerts in year 2014.", "prediction": "select tbl:concerts, project col:concerts/Year #1, comparative #1 #2 equal/2014, project col:song/Name #3", "alternatives": "select tbl:concerts, project col:concerts/Year #1, project col:song/Name #3, comparative #1 #2 equal/2014"}
{"input": "What is the document name and template id for document with description with the letter 'w' in it?", "prediction": "select tbl:Documents, comparative #1 #1 like%w% col:Documents/document_description, project col:Documents/document_name #2, project col:Documents/template_id #2, union #3 #4", "alternatives": "select tbl:Documents, project col:Documents/document_description #1, comparative #1 #2 like%w%, project col:Documents/document_name #3, project col:Documents/template_id #3, union #4 #5"}
{"input": "Find the type and weight of the youngest pet.", "prediction": "select tbl:pet, project col:pet/Height #1, superlative #1 #2, project col:pet/Type #3, project col:pet/Weight #3, union #4 #5", "alternatives": "select tbl:pet, project col:pet/Height #1, superlative #1 #2, project col:pet/Weight #3, project col:pet/Type #3, union #4 #5"}
{"input": "Which year has most number of concerts?", "prediction": "select col:concerts, project tbl:concerts #1, group #2 #1, superlative #1 #3", "alternatives": "select col:concerts, superlative #1 #3, group #2 #1, project tbl:concerts #1"}
{"input": "List the number of all matches who played in years of 2013 or 2016.", "prediction": "select tbl:match, project col:match/Year #1, comparative #1 #2 equal/2013, comparative #1 #2 equal/2016, union #3 #4, aggregate count #5", "alternatives": "select tbl:match, project col:match/Year #1, comparative #1 #2 equal/2013, aggregate count #5, union #3 #4, comparative #1 #2 equal/2016"}
{"input": "What are the names and year of construction for the mills of 'Grondzeiler' type?", "prediction": "select tbl:mill, project col:mill/Type #1, comparative #1 #2 equal/Grondzeiler, project col:mill/Name #3, project col:mill/Year_of_Contruction #3, union #4 #5", "alternatives": "select tbl:mill, project col:mill/type #1, comparative #1 #2 equal/Grondzeiler, project col:mill/name #3, project col:mill/built_year #3, union #4 #5"}
{"input": "find the code of the country where has the greatest number of players.", "prediction": "select col:country, project tbl:country #1, group #2 #1, superlative #1 #3", "alternatives": "select col:country, group #2 #1, project tbl:country #1, superlative #1 #3"}
{"input": "Show names of teachers that teach at least two courses.", "prediction": "select tbl:teachers, project tbl:course #1, group #2 #1, comparative #1 #3 greatequal/2, project col:teachers/Name #4", "alternatives": "select tbl:teachers, group #2 #1, project tbl:course #1, comparative #1 #3 greatequal/2, project col:teachers/Name #4"}
{"input": "For each continent, list its id, name, and how many countries it has?", "prediction": "select col:continents, project col:continents/Continent #1, project col:continents/Continent #1, project col:continents/Name #1, project tbl:country #1, group #4 #1, union #2 #3 #5", "alternatives": "select tbl:continents, project col:continents/ContId #1, project col:continents/Continent #1, project tbl:countries #1, group #4 #1, union #2 #3 #5"}
{"input": "Find all airlines that have flights from both airports 'APG' and 'CVO'.", "prediction": "select col:flight, comparative #1 #1 equal/APG col:airport/airport_name, comparative #1 #1 equal/CVO col:airport/airport_name, intersection #1 #2 #3", "alternatives": "select tbl:flights, comparative #1 #1 equal/APG col:flights/SourceAirport, comparative #1 #1 equal/CVO col:flights/SourceAirport, project col:airlines/Airline #1, project tbl:airlines #2, project tbl:airlines #3, intersection #4 #5 #6"}
{"input": "Count the number of employees", "prediction": "select tbl:EMPLOYEE, aggregate count #1", "alternatives": "select tbl:employee, aggregate count #1"}
{"input": "List the names of all winners who played in both 2013 and 2016.", "prediction": "select tbl:winner, comparative #1 #1 equal/2013 col:playground/Year, comparative #1 #1 equal/2016 col:playground/Year, intersection #1 #2 #3, project col:winner/Name #4", "alternatives": "select col:matches, comparative #1 #1 equal/2013 col:matches/year, comparative #1 #1 equal/2016 col:matches/year, intersection #1 #2 #3, project col:matches/winner_name #4"}
{"input": "Find the weight of the youngest dog.", "prediction": "select tbl:dog, project col:dog/Weight #1, superlative #1 #2, project col:dog/Weight #3", "alternatives": "select tbl:dogs, project col:dogs/weight #1, superlative #1 #2, project col:dogs/weight #3"}
{"input": "Show the stadium name and capacity with most number of concerts in year 2014 or after.", "prediction": "select tbl:stadium, project tbl:concerts #1, project col:concerts/year #2, comparative #2 #3 greatequal/2014, group #4 #1, superlative #1 #5, project col:stadium/name #6, project col:stadium/Capacity #6, union #7 #8", "alternatives": "select tbl:stadium, project tbl:concerts #1, project col:concerts/year #2, project col:stadium/name #6, group #4 #1, superlative #1 #5, comparative #2 #3 greatequal/2014, project col:stadium/Capacity #6, union #7 #8"}
{"input": "Return the name, location and district of all shops in descending order of number of products.", "prediction": "select tbl:shop, project col:shop/Shop_Name #1, project col:shop/Location #1, project col:shop/District #1, union #2 #3 #4, sort #5 #4 descending", "alternatives": "select tbl:shop, project col:shop/Shop_Name #1, project col:shop/Location #1, union #2 #3 #4, project col:shop/District #1, sort #5 #4 descending"}
{"input": "Show all document ids and the number of paragraphs in each document. Order by document id.", "prediction": "select col:Documents, project col:Documents/document_id #1, project tbl:Documents #1, group #3 #1, union #2 #4, sort #5 #4", "alternatives": "select col:Documents, project col:Documents/document_id #1, union #2 #4, group #3 #1, project tbl:Documents #1, sort #5 #4"}
{"input": "How many dog pets are raised by female students?", "prediction": "select tbl:Student, comparative #1 #1 equal/F col:Student/Sex, aggregate count #2", "alternatives": "select tbl:Student, comparative #1 #1 equal/F col:Student/Sex, project val:Pets/PetType/dog #2, group #3 #2, aggregate sum #4"}
{"input": "Find the name of the employee who got the highest one time bonus.", "prediction": "select tbl:employee, project col:employee/one_time_bonus #1, superlative #1 #2, project col:employee/name #3", "alternatives": "select tbl:employee, superlative #1 #2, project col:employee/one_time_bonus #1, project col:employee/name #3"}
{"input": "Find the number of left handed winners who participated in the WTA Championships.", "prediction": "select tbl:winner, comparative #1 #1 equal/left col:record/WTA_Championship, aggregate count #2", "alternatives": "select tbl:winner, comparative #1 #1 equal/left col:winner/Hand, comparative #2 #2 none, aggregate count #3"}
{"input": "What is the last name of the student who has a cat that is 3 years old?", "prediction": "select tbl:Student, project tbl:Cat #1, comparative #1 #2 equal/3, project col:Student/LName #3", "alternatives": "select tbl:Students, project tbl:Cats #1, comparative #1 #2 equal/3, project col:Students/last_name #3"}
{"input": "Give the city and country for the Alton airport.", "prediction": "select val:airport, project col:airport/city #1, project col:airport/country #1, union #2 #3", "alternatives": "select val:airport, union #2 #3, project col:airport/country #1, project col:airport/city #1"}
{"input": "What are the names of the teachers and how many courses do they teach?", "prediction": "select tbl:teachers, project col:teachers/Name #1, project tbl:teaches #1, group #3 #1, union #2 #4", "alternatives": "select tbl:teachers, project col:teachers/Name #1, group #3 #1, project tbl:teaches #1, union #2 #4"}
{"input": "Find the maximum weight for each type of pet. List the maximum weight and pet type.", "prediction": "select tbl:Pets, project col:Pets/weight #1, group #2 #1, union #1 #3", "alternatives": "select tbl:Pets, select col:Pets, project col:Pets/weight #2, group #3 #2, union #4 #2"}
{"input": "Find the names of the visitors whose membership level is higher than 4, and order the results by the level from high to low.", "prediction": "select tbl:Visitors, project col:Visitors/membership_level #1, comparative #1 #2 great/4, project col:Visitors/name #3, project col:Visitors/membership_level #3, sort #4 #5 ascending", "alternatives": "select tbl:Visitors, project col:Visitors/membership_level #1, comparative #1 #2 great/4, project col:Visitors/people_name #3, project col:Visitors/membership_level #3, sort #4 #5 descending"}
{"input": "What is the first name and country code of the player with the most tours?", "prediction": "select tbl:Player, project tbl:Tourist_Attraction #1, group #2 #1, superlative #1 #3, project col:Player/first_name #4, project col:Player/country_code #4, union #5 #6", "alternatives": "select tbl:players, project col:rankings/tours #1, group #2 #1, superlative #1 #3, project col:players/first_name #4, project col:players/country_code #4, union #5 #6"}
{"input": "What is the airport code of the airport with the most flights?", "prediction": "select col:flight, project tbl:flight #1, group #2 #1, superlative #1 #3, project col:airport/code #4", "alternatives": "select col:flight, superlative #1 #3, group #2 #1, project tbl:flight #1, project col:airport/code #4"}
{"input": "What is the total number of singers?", "prediction": "select tbl:song, aggregate count #1", "alternatives": "select tbl:singer, aggregate count #1"}
{"input": "What are the names of the teachers and how many courses do they teach?", "prediction": "select tbl:teachers, project col:teachers/Name #1, project tbl:teaches #1, group #3 #1, union #2 #4", "alternatives": "select col:teacher, project col:teacher/Name #1, project tbl:course_arrange #1, group #3 #1, union #2 #4"}
{"input": "What are the first names of all players, and their average rankings?", "prediction": "select tbl:player, project col:player/FirstName #1, project col:player/Ranking #1, aggregate avg #3, union #2 #4", "alternatives": "select tbl:player, project col:player/Ranking #1, project col:player/FirstName #1, aggregate avg #3, union #2 #4"}
{"input": "Show all company names with a movie directed in year 1999.", "prediction": "select tbl:company, project tbl:film #1, project col:film/Year #2, comparative #1 #3 equal/1999, project col:company/Company #4", "alternatives": "select tbl:company, project tbl:film #1, project col:film/Year #2, comparative #1 #3 equal/1999, project col:company/Name #4"}
{"input": "What is the code of the country with the most players?", "prediction": "select col:country, project tbl:country #1, group #2 #1, superlative #1 #3", "alternatives": "select col:players, project tbl:players #1, group #2 #1, superlative #1 #3, project col:players/country_code #4"}
{"input": "Find the number of dog pets that are raised by female students (with sex F).", "prediction": "select tbl:Student, project col:Student/Sex #1, comparative #1 #2 equal/F, aggregate count #3", "alternatives": "select tbl:Student, project col:Student/Sex #1, aggregate count #3, comparative #1 #2 equal/F"}
{"input": "What is the code of airport that has fewest number of flights?", "prediction": "select tbl:airport, project tbl:flight #1, group #2 #1, superlative #1 #3, project col:airport/code #4", "alternatives": "select tbl:airport, project tbl:flight #1, project col:airport/code #4, superlative #1 #3, group #2 #1"}
{"input": "Show the name of the teacher for the math course.", "prediction": "select tbl:course, comparative #1 #1 equal/Math col:course/Date, project col:teacher/Name #2", "alternatives": "select tbl:Course, comparative #1 #1 equal/Math col:Course/CName, project col:teacher/Name #2"}
{"input": "What are the template ids of any templates used in more than a single document?", "prediction": "select tbl:Documents, project tbl:Documents #1, group #2 #1, comparative #1 #3 great/1, project col:Documents/template_id #4", "alternatives": "select col:Documents, project tbl:Documents #1, group #2 #1, comparative #1 #3 great/1, project col:Documents/Template_ID #4"}
{"input": "Find number of pets owned by students who are older than 20.", "prediction": "select tbl:Students, comparative #1 #1 great/20 col:Students/age, project tbl:Pets #2, aggregate count #3", "alternatives": "select tbl:Student, comparative #1 #1 great/20 col:Student/Age, project tbl:Has_Pet #2, aggregate count #3"}
{"input": "Find the id and name of the museum that has the most staff members?", "prediction": "select tbl:Museum, project tbl:Staff #1, group #2 #1, superlative #1 #3, project col:Museum/museum_id #4, project col:Museum/museum_name #4, union #5 #6", "alternatives": "select tbl:museum, project col:museum/Num_of_Staff #1, group #2 #1, superlative #1 #3, project col:museum/Name #4, project col:museum/Museum_ID #4, union #6 #5"}
{"input": "What is the average and maximum capacities for all stadiums?", "prediction": "select tbl:stadium, project col:stadium/Capacity #1, aggregate avg #2, aggregate max #2, union #3 #4", "alternatives": "select tbl:stadium, aggregate avg #2, project col:stadium/Capacity #1, aggregate max #2, union #3 #4"}
{"input": "Which country does Airline \"JetBlue Airways\" belong to?", "prediction": "select tbl:airlines, project col:airlines/country #1, comparative #2 #1 equal/JetBlue Airways", "alternatives": "select val:airlines, project col:airlines/Country #1"}
{"input": "Show all movie titles, years, and directors, ordered by budget.", "prediction": "select tbl:film, project col:film/Title #1, project col:film/Year #1, project col:film/Director #1, project col:film/Budgeted #1, union #2 #3 #4, sort #6 #5", "alternatives": "select tbl:movie, project col:movie/Title #1, project col:movie/Year #1, project col:movie/Director #1, project col:movie/Budget_million #1, union #2 #3 #4, sort #6 #5"}
{"input": "Show publishers with a book published in 1989 and a book in 1990.", "prediction": "select col:book, comparative #1 #1 equal/1989 col:book/Published_Year, comparative #1 #1 equal/1990 col:book/Published_Year, intersection #1 #2 #3", "alternatives": "select col:book_club, comparative #1 #1 equal/1990 col:book_club/Year, comparative #1 #1 equal/1989 col:book_club/Year, intersection #1 #2 #3"}
{"input": "find the code of the country where has the greatest number of players.", "prediction": "select col:country, project tbl:country #1, group #2 #1, superlative #1 #3", "alternatives": "select col:players, project tbl:players #1, group #2 #1, superlative #1 #3, project col:players/country_code #4"}
{"input": "Find the average weight for each pet type.", "prediction": "select col:Pets, project col:Pets/weight #1, group #2 #1, union #1 #3", "alternatives": "select tbl:pet, project col:pet/Weight #1, group #2 #1, union #1 #3"}
{"input": "For students who have pets, how many pets does each student have? list their ids instead of names.", "prediction": "select tbl:Students, comparative #1 #1 tbl:Pets, project col:Students/student_id #2, select col:Pets, project col:Pets/pet_name #2, union #3 #4", "alternatives": "select tbl:Student, comparative #1 #1 tbl:Has_Pet, project tbl:Has_Pet #2, group #3 #2, union #2 #4"}
{"input": "Return the number of flights.", "prediction": "select tbl:flight, aggregate count #1", "alternatives": "select tbl:Flight, aggregate count #1"}
{"input": "Show all distinct publishers for books.", "prediction": "select tbl:book, project col:book/Publisher #1", "alternatives": "select tbl:book, project col:book/Authorship #1"}
{"input": "For each stadium, how many concerts play there?", "prediction": "select col:stadium, project tbl:conzerts #1, group #2 #1, union #1 #3", "alternatives": "select col:stadium, project tbl:conzerts #1, group #2 #1, union #1 #4"}
{"input": "How many total tours were there for each ranking date?", "prediction": "select col:Tourist_Rankings, project tbl:Tourist_Rankings #1, group #2 #1, union #1 #3", "alternatives": "select col:Tourist_Rankings, project tbl:Tourist_Rankings #1, group #2 #1, union #1 #4"}
{"input": "What are the number of concerts that occurred in the stadium with the largest capacity?", "prediction": "select tbl:stadium, project col:stadium/Capacity #1, superlative #1 #2, project tbl:convention #3, aggregate count #4", "alternatives": "select tbl:stadium, project col:stadium/Capacity #1, superlative #1 #2, project tbl:concert #3, aggregate count #4"}
{"input": "Find the name and age of the visitor who bought the most tickets at once.", "prediction": "select tbl:Visitors, project tbl:Tickets #1, group #2 #1, superlative #1 #3, project col:Visitors/name #4, project col:Visitors/age #4, union #5 #6", "alternatives": "select tbl:visitor, project tbl:visitor #1, project col:visit/Num_of_Ticket #2, group #3 #2, superlative #1 #4, project col:visitor/Name #5, project col:visitor/Age #5, union #6 #7"}
{"input": "What are the ids and names of each document, as well as the number of paragraphs in each?", "prediction": "select col:Documents, project col:Documents/document_id #1, project col:Documents/document_name #1, project tbl:Documents #1, group #4 #1, union #2 #3 #5", "alternatives": "select col:Paragraphs, project col:Paragraphs/Document_ID #1, project col:Documents/Document_Name #1, project tbl:Paragraphs #1, group #4 #1, union #2 #3 #5"}
{"input": "Show different hometown of teachers and the number of teachers from each hometown.", "prediction": "select tbl:teachers, project col:teachers/Hometown #1, group #1 #2, union #2 #3", "alternatives": "select tbl:teacher, project col:teacher/Hometown #1, group #1 #3, union #3 #4"}
{"input": "What is the placement date of the order whose invoice number is 10?", "prediction": "select tbl:Invoices, comparative #1 #1 equal/10 col:Invoices/invoice_number, project col:Invoices/order_placement_date #2", "alternatives": "select tbl:Orders, project col:Shipments/invoice_number #1, project col:Shipments/invoice_number #2, comparative #1 #3 equal/10, project col:Orders/date_order_placed #4"}
{"input": "Find the name and membership level of the visitors whose membership level is higher than 4, and sort by their age from old to young.", "prediction": "select tbl:Visitors, project col:Visitors/membership_level #1, comparative #1 #2 great/4, project col:Visitors/name #3, project col:Visitors/membership_level #3, project col:Visitors/age #3, union #4 #5, sort #6 #7 descending", "alternatives": "select tbl:visitor, project col:visitor/Level_of_membership #1, comparative #1 #2 great/4, project col:visitor/Name #3, project col:visitor/Level_of_membership #3, project col:visitor/Age #3, union #4 #5, sort #7 #6 descending"}
{"input": "Show the document id with paragraph text 'Brazil' and 'Ireland'.", "prediction": "select tbl:Documents, project col:Documents/paragraph_text #1, comparative #1 #2 equal/Brazil, comparative #1 #2 equal/Ireland, intersection #1 #3 #4, project col:Documents/document_id #5", "alternatives": "select tbl:Documents, project col:Documents/paragraph_text #1, comparative #1 #2 equal/Ireland, comparative #1 #2 equal/Brazil, intersection #1 #3 #4, project col:Documents/document_id #5"}
{"input": "Find the id and weight of all pets whose age is older than 1.", "prediction": "select tbl:Pets, project col:Pets/age #1, comparative #1 #2 great/1, project col:Pets/id #3, project col:Pets/weight #3, union #4 #5", "alternatives": "select tbl:Pets, project col:Pets/pet_age #1, comparative #1 #2 great/1, project col:Pets/PetID #3, project col:Pets/weight #3, union #4 #5"}
{"input": "Find the first name of students who have cat or dog pet.", "prediction": "select tbl:Student, project tbl:Pets #1, comparative #1 #2 equal/Cat, comparative #1 #2 equal/Dog, union #3 #4, project col:Student/Fname #5", "alternatives": "select tbl:Student, project tbl:Pets #1, comparative #1 #2 equal/dog, comparative #1 #2 equal/cat, union #3 #4, project col:Student/Fname #5"}
{"input": "Count the number of templates.", "prediction": "select tbl:Templates, aggregate count #1", "alternatives": "select tbl:Ref_Templates, aggregate count #1"}
{"input": "How many airports do we have?", "prediction": "select tbl:airport, aggregate count #1", "alternatives": "select col:airport, aggregate count #1"}
{"input": "Show paragraph details for paragraph with text 'Korea'.", "prediction": "select tbl:paragraph, project col:paragraph/Text #1, comparative #1 #2 equal/Korea, project col:paragraph/Details #3", "alternatives": "select tbl:paragraph, project col:paragraph/Text #1, project col:paragraph/Details #3, comparative #1 #2 equal/Korea"}
{"input": "Show the name and the release year of the song by the youngest singer.", "prediction": "select tbl:song, project col:song/artist_name #1, superlative #1 #2, project col:song/song_name #3, project col:song/release_year #3, union #4 #5", "alternatives": "select tbl:song, project col:song/artist_name #1, union #4 #5, project col:song/song_name #3, project col:song/release_year #3, superlative #1 #2"}
{"input": "What is the name and capacity for the stadium with highest average attendance?", "prediction": "select tbl:stadium, project col:stadium/Average_Attendance #1, group #2 #1, superlative #1 #3, project col:stadium/name #4, project col:stadium/Capacity #4, union #5 #6", "alternatives": "select tbl:stadium, project col:stadium/Average_Attendance #1, group #2 #1, project col:stadium/Capacity #4, project col:stadium/name #4, superlative #1 #3, union #5 #6"}
{"input": "Which city and country is the Alton airport at?", "prediction": "select val:airport, project col:airport/city #1, project col:airport/country #1, union #2 #3", "alternatives": "select val:airport, project col:airport/City #1, project col:airport/Country #1, union #2 #3"}
{"input": "Find the districts in which there are both shops selling less than 3000 products and shops selling more than 10000 products.", "prediction": "select col:shop, project tbl:shop #1, project none #2, comparative #1 #3 less/3000, comparative #1 #3 great/10000, intersection #1 #4 #5", "alternatives": "select col:shop, project tbl:shop #1, project col:shop/Number_products #2, group #3 #2, comparative #1 #4 less/3000, comparative #1 #4 great/10000, intersection #1 #5 #6"}
{"input": "For each stadium, how many concerts play there?", "prediction": "select col:stadium, project tbl:conzerts #1, group #2 #1, union #1 #3", "alternatives": "select col:stadium, project tbl:conzerts #1, union #1 #3, group #2 #1"}
{"input": "Which city has most number of arriving flights?", "prediction": "select col:flight, project tbl:flight #1, group #2 #1, superlative #1 #3", "alternatives": "select col:flight, group #2 #1, project tbl:flight #1, superlative #1 #3"}
{"input": "Give the ids of documents that have between one and two paragraphs.", "prediction": "select col:Documents, comparative #1 #1 greatequal/1 col:Documents/paragraphs, comparative #1 #1 lessequal/2 col:Documents/paragraph_number, intersection #1 #2 #3", "alternatives": "select col:Paragraphs, project tbl:Paragraphs #1, group #2 #1, comparative #1 #3 lessequal/2, comparative #1 #3 greatequal/1, intersection #1 #4 #5, project col:Paragraphs/Document_ID #6"}
{"input": "Find the average weight for each pet type.", "prediction": "select col:Pets, project col:Pets/weight #1, group #2 #1, union #1 #3", "alternatives": "select col:Pets, union #1 #3, group #2 #1, project col:Pets/weight #1"}
{"input": "List the most common hometown of teachers.", "prediction": "select col:teachers, project tbl:teachers #1, group #2 #1, superlative #1 #3", "alternatives": "select col:teachers, project tbl:teachers #1, superlative #1 #3, group #2 #1"}
{"input": "What is the id of the pet owned by the student whose last name is 'Smith'?", "prediction": "select tbl:Students, project col:Students/last_name #1, comparative #1 #2 equal/Smith, project tbl:Pets #3, project col:Pets/pet_id #4", "alternatives": "select tbl:Student, project tbl:Has_Pet #1, comparative #1 #2 equal/Smith, project tbl:Has_Pet #3, project col:Has_Pet/PetID #4"}
{"input": "Give the number of Jetblue Airways flights.", "prediction": "select tbl:flight, comparative #1 #1 equal/Jetblue Airways col:flight/name, aggregate count #2", "alternatives": "select tbl:flights, comparative #1 #1 equal/JetBlue Airways col:airlines/Airline, aggregate count #2"}
{"input": "What are the names of tournaments that have more than 10 matches?", "prediction": "select tbl:Tournament, project tbl:match #1, group #2 #1, comparative #1 #3 great/10, project col:Tournament/Name #4", "alternatives": "select tbl:Tournament, project tbl:match #1, project col:Tournament/Name #4, comparative #1 #3 great/10, group #2 #1"}
{"input": "Return the document id, template id, and description for the document with the name Robbin CV.", "prediction": "select tbl:Documents, comparative #1 #1 equal/Robbin CV col:Documents/document_name, project col:Documents/document_id #2, project col:Documents/template_id #2, project col:Documents/document_description #2, union #3 #4 #5", "alternatives": "select tbl:Documents, comparative #1 #1 equal/Robbin CV col:Documents/Document_Name, project col:Documents/Document_ID #2, project col:Documents/Template_ID #2, project col:Documents/Document_Description #2, union #3 #4 #5"}
{"input": "Show location and name for all stadiums with a capacity between 5000 and 10000.", "prediction": "select tbl:stadium, project col:stadium/Capacity #1, comparative #1 #2 greatequal/5000, comparative #1 #2 lessequal/10000, intersection #1 #3 #4, project col:stadium/Location #5, project col:stadium/name #5, union #6 #7", "alternatives": "select tbl:stadium, project col:stadium/Capacity #1, comparative #1 #2 lessequal/10000, comparative #1 #2 greatequal/5000, intersection #1 #3 #4, project col:stadium/Location #5, project col:stadium/Name #5, union #6 #7"}
{"input": "Show the document id with paragraph text 'Brazil' and 'Ireland'.", "prediction": "select tbl:Documents, project col:Documents/paragraph_text #1, comparative #1 #2 equal/Brazil, comparative #1 #2 equal/Ireland, intersection #1 #3 #4, project col:Documents/document_id #5", "alternatives": "select col:Paragraphs, project tbl:Paragraphs #1, project col:Paragraphs/Paragraph_Text #2, comparative #1 #3 equal/Brazil, comparative #1 #3 equal/Ireland, intersection #1 #4 #5"}
{"input": "For each continent, list its id, name, and how many countries it has?", "prediction": "select col:continents, project col:continents/Continent #1, project col:continents/Continent #1, project col:continents/Name #1, project tbl:country #1, group #4 #1, union #2 #3 #5", "alternatives": "select col:continents, project col:continents/Continent #1, project col:continents/Continent #1, project col:continents/name #1, project tbl:country #1, group #4 #1, union #2 #3 #5"}
{"input": "Show all document names using templates with template type code BK.", "prediction": "select tbl:Documents, project tbl:Documents #1, project col:Documents/template_type_code #2, comparative #1 #3 equal/BK, project col:Documents/document_name #4", "alternatives": "select tbl:Documents, project tbl:Documents #1, project col:Documents/document_name #4, comparative #1 #3 equal/BK, project col:Documents/template_type_code #2"}
{"input": "Which airlines have a flight with source airport AHD?", "prediction": "select col:flight, project tbl:flight #1, project col:airport/source #2, comparative #1 #3 equal/AHD", "alternatives": "select col:flight, project tbl:flight #1, project col:flight/origin #2, comparative #1 #3 equal/AH"}
{"input": "How many concerts are there in year 2014 or 2015?", "prediction": "select tbl:concerts, project col:concerts/year #1, comparative #1 #2 equal/2014, comparative #1 #2 equal/15, union #3 #4, aggregate count #5", "alternatives": "select tbl:concerts, comparative #1 #2 equal/2014, project col:concerts/year #1, comparative #1 #2 equal/15, union #3 #4, aggregate count #5"}
{"input": "List all company names with a book published by Alyson.", "prediction": "select tbl:company, project tbl:book #1, comparative #1 #2 equal/Alyson, project col:company/Name #3", "alternatives": "select col:book, comparative #1 #1 equal/Alyson col:book/Publisher, project col:company/Name #2"}
{"input": "Return the average, maximum, and minimum budgets in millions for movies made before the year 2000.", "prediction": "select tbl:Movie, comparative #1 #1 less/2000 col:Movie/year, project col:Movie/budget #2, aggregate avg #3, aggregate max #3, aggregate min #3, union #4 #5 #6", "alternatives": "select tbl:Movie, comparative #1 #1 less/2000 col:Movie/year, project col:Movie/budgeted #2, aggregate avg #3, aggregate max #3, aggregate min #3, union #4 #5 #7"}
{"input": "Return the ids corresponding to templates with the description 'Presentation'.", "prediction": "select tbl:Templates, project col:Templates/description #1, comparative #1 #2 equal/Presentation, project col:Templates/template_id #3", "alternatives": "select tbl:Templates, comparative #1 #1 equal/Presentation col:Ref_Template_Types/Template_Type_Description, project col:Templates/Template_ID #2"}
{"input": "Return the id of the document with the fewest paragraphs.", "prediction": "select col:Documents, project tbl:Document_Paragraphs #1, group #2 #1, superlative #1 #3, project col:Documents/document_id #4", "alternatives": "select col:Documents, project col:Documents/document_id #4, group #2 #1, superlative #1 #3, project tbl:Document_Paragraphs #1"}
{"input": "Find the names of stores whose number products is more than the average number of products.", "prediction": "select tbl:store, project tbl:product #1, group #2 #1, aggregate avg #3, comparative #1 #3 great/#4, project col:store/Store_Name #5", "alternatives": "select tbl:store, project tbl:product #1, project col:store/Store_Name #5, aggregate avg #3, comparative #1 #3 great/#4, group #2 #1"}
{"input": "Find the number of employees hired in each shop; show the shop name as well.", "prediction": "select tbl:shop, project tbl:employee #1, group #2 #1, project col:shop/Shop_name #1, union #3 #4", "alternatives": "select col:shop, project tbl:hiring #1, group #2 #1, project col:shop/Name #1, union #3 #4"}
{"input": "Find the cities that have more than one employee under age 30.", "prediction": "select col:employee, project tbl:employee #1, comparative #2 #2 less/30 col:employee/Age, group #3 #1, comparative #1 #4 great/1", "alternatives": "select col:Addresses, project tbl:Employees #1, comparative #2 #2 less/30 col:Employees/Age, group #3 #1, comparative #1 #4 great/1"}
{"input": "How many players are there for each hand type?", "prediction": "select col:Player, project tbl:Player #1, group #2 #1, union #1 #3", "alternatives": "select col:players, project tbl:players #1, group #2 #1, union #1 #3"}
{"input": "Show all template type codes and descriptions.", "prediction": "select tbl:Ref_Template_Types, project col:Ref_Template_Types/Template_Type_Code #1, project col:Ref_Template_Types/Template_Description #1, union #2 #3", "alternatives": "select tbl:Ref_Template_Types, project col:Ref_Template_Types/Template_Type_Code #1, union #2 #3, project col:Ref_Template_Types/Template_Description #1"}
{"input": "What are the different first names and ages of the students who do have pets?", "prediction": "select tbl:Student, comparative #1 #1 tbl:Pets, project col:Student/Fname #2, project col:Student/Age #2, union #3 #4", "alternatives": "select tbl:Student, comparative #1 #1 tbl:Pets, union #2 #3"}
{"input": "What are the first names of all players, and their total ranking points?", "prediction": "select tbl:player, project col:player/FirstName #1, project col:player/Ranking_Points #1, group #3 #1, union #2 #4", "alternatives": "select tbl:player, project col:player/FirstName #1, union #2 #4, group #3 #1, project col:player/Ranking_Points #1"}
{"input": "Return the name of the airport with code 'AKO'.", "prediction": "select tbl:airports, project col:airports/airport_code #1, comparative #1 #2 equal/AKO, project col:airports/name #3", "alternatives": "select tbl:airports, project col:airports/AirportCode #1, comparative #1 #2 equal/AKO, project col:airports/AirportName #3"}
{"input": "Return the code of the template type that is most commonly used in documents.", "prediction": "select col:Documents, project tbl:Documents #1, group #2 #1, superlative #1 #3", "alternatives": "select col:Templates, project tbl:Documents #1, group #2 #1, superlative #1 #3, project col:Templates/Template_Type_Code #4"}
{"input": "Which airline has most number of flights?", "prediction": "select col:flight, project tbl:flight #1, group #2 #1, superlative #1 #3", "alternatives": "select col:airlines, project tbl:flights #1, group #2 #1, superlative #1 #3"}
{"input": "Return the different descriptions for templates that have been used in a document.", "prediction": "select tbl:Document_Types, project col:Document_Types/document_description #1", "alternatives": "select tbl:Document_Types, comparative #1 #1 tbl:Document_Types, project col:Document_Types/description #2"}
{"input": "Which airline has most number of flights?", "prediction": "select col:flight, project tbl:flight #1, group #2 #1, superlative #1 #3", "alternatives": "select col:flight, superlative #1 #3, group #2 #1, project tbl:flight #1"}
{"input": "What are the names and year of construction for the mills of 'Grondzeiler' type?", "prediction": "select tbl:mill, project col:mill/Type #1, comparative #1 #2 equal/Grondzeiler, project col:mill/Name #3, project col:mill/Year_of_Contruction #3, union #4 #5", "alternatives": "select tbl:mills, project col:mills/Type #1, comparative #1 #2 equal/Grondzeiler, project col:mills/name #3, project col:mills/Year_of_Contruction #3, union #45"}
{"input": "What are the ids, version numbers, and type codes for each template?", "prediction": "select tbl:Templates, project col:Templates/template_id #1, project col:Templates/version_number #1, project col:Templates/type_code #1, union #2 #3 #4", "alternatives": "select tbl:Templates, project col:Templates/template_id #1, union #2 #3 #4, project col:Templates/type_code #1, project col:Templates/version_number #1"}
{"input": "Show all book categories and the number of books in each category.", "prediction": "select col:book, project tbl:book #1, group #2 #1, union #1 #3", "alternatives": "select tbl:book_club, project col:book_club/Category #1, group #1 #2, union #2 #3"}
{"input": "What are the names of the teachers ordered by ascending age?", "prediction": "select tbl:teachers, project col:teachers/Name #1, project col:teachers/Age #1, sort #2 #3 ascending", "alternatives": "select tbl:teachers, project col:teachers/Name #1, project col:teachers/age #1, sort #2 #3 ascending"}
{"input": "What are the dates of the orders made by the customer named \"Jeramie\"?", "prediction": "select tbl:Customer_Orders, project tbl:Customer_Orders #1, comparative #2 #1 equal/Jeramie, project col:Customer_Orders/order_date #3", "alternatives": "select tbl:Customer_Orders, comparative #2 #1 equal/Jeramie, project tbl:Customer_Orders #1, project col:Customer_Orders/order_date #3"}
{"input": "What is the id of the pet owned by the student whose last name is 'Smith'?", "prediction": "select tbl:Students, project col:Students/last_name #1, comparative #1 #2 equal/Smith, project tbl:Pets #3, project col:Pets/pet_id #4", "alternatives": "select tbl:Students, project tbl:Pets #3, comparative #1 #2 equal/Smith, project col:Students/last_name #1, project col:Pets/pet_id #4"}
{"input": "Return the template type code of the template that is used by a document named Data base.", "prediction": "select tbl:Documents, comparative #1 #1 equal/Data base col:Documents/document_name, project tbl:Templates #2, project col:Templates/template_type_code #3", "alternatives": "select tbl:Documents, comparative #1 #1 equal/Data base col:Documents/document_name, project tbl:Templates #2, project col:Templates/ template_type_code #3"}
{"input": "Find the districts in which there are both shops selling less than 3000 products and shops selling more than 10000 products.", "prediction": "select col:shop, project tbl:shop #1, project none #2, comparative #1 #3 less/3000, comparative #1 #3 great/10000, intersection #1 #4 #5", "alternatives": "select col:shop, project tbl:shop #1, comparative #1 #3 great/10000, comparative #1 #3 less/3000, project none #2, intersection #1 #4 #5"}
{"input": "Which airlines have departures from CVO but not from APG airports?", "prediction": "select col:airlines, project tbl:departures #1, comparative #1 #2 equal/CVO, comparative #1 #2 equal/APG, discard #1 #3, intersection #1 #4 #5", "alternatives": "select col:airlines, project tbl:departures #1, intersection #1 #4 #5, comparative #1 #2 equal/APG, discard #1 #3, comparative #1 #2 equal/CVO"}
{"input": "Count the number of different templates used for documents.", "prediction": "select tbl:Document_Templates, comparative #1 #1 none, aggregate count #2", "alternatives": "select tbl:Documents, aggregate count #2"}
{"input": "List the names of teachers in ascending order of age.", "prediction": "select tbl:teachers, project col:teachers/Name #1, project col:teachers/Age #1, sort #2 #3 ascending", "alternatives": "select tbl:teachers, sort #2 #3 ascending, project col:teachers/Age #1, project col:teachers/Name #1"}
{"input": "What is the age and hometown of every teacher?", "prediction": "select tbl:teachers, project col:teachers/Age #1, project col:teachers/Hometown #1, union #2 #3", "alternatives": "select tbl:teacher, project col:teacher/Age #1, project col:teacher/Hometown #1, union #2 #3"}
{"input": "What is the document id with least number of paragraphs?", "prediction": "select col:Documents, project tbl:Documents #1, group #2 #1, superlative #1 #3", "alternatives": "select col:Documents, group #2 #1, project tbl:Documents #1, superlative #1 #3"}
{"input": "What is the average length in feet of the bridges?", "prediction": "select tbl:bridge, project col:bridge/Feet #1, aggregate avg #2", "alternatives": "select tbl:bridge, project col:bridge/feet #1, aggregate avg #2"}
{"input": "What are the ids of documents that have 2 or more paragraphs?", "prediction": "select col:Documents, project tbl:Document_Paragraphs #1, group #2 #1, comparative #1 #3 greatequal/2, project col:Documents/document_id #4", "alternatives": "select col:Documents, project tbl:Document_Paragraphs #1, group #2 #1, comparative #1 #3 greatequal/2, project col:Documents/Document_ID #4"}
{"input": "What are the names and locations of the stadiums that had concerts that occurred in both 2014 and 2015?", "prediction": "select tbl:stadium, project tbl:concerts #1, comparative #1 #2 equal/2014, comparative #1 #2 equal/15, intersection #1 #3 #4, project col:stadium/name #5, project col:stadium/Location #5, union #6 #7", "alternatives": "select tbl:stadium, project tbl:concerts #1, comparative #1 #2 equal/2014, comparative #1 #2 equal/15, intersection #1 #3 #4, project col:stadium/name #5, project col:stadium/Location #5, union #6 #7"}
{"input": "Find the name of the employee who got the highest one time bonus.", "prediction": "select tbl:employee, project col:employee/one_time_bonus #1, superlative #1 #2, project col:employee/name #3", "alternatives": "select tbl:employee, project col:employee/one_time_bonus #1, superlative #1 #2, project col:employee/name #4"}
{"input": "Show all template ids and number of documents using each template.", "prediction": "select col:Documents, project col:Documents/Document_ID #1, project tbl:Documents #1, group #3 #1, union #2 #4", "alternatives": "select col:Documents, project tbl:Documents #1, group #2 #1, project col:Documents/Template_ID #1, union #4 #3"}
{"input": "How many documents are using the template with type code 'PPT'?", "prediction": "select tbl:Document_Templates, project col:Document_Templates/Template_Type_Code #1, comparative #1 #2 equal/PPT, aggregate count #3", "alternatives": "select tbl:Document_Maths, project col:Document_Maths/template_type_code #1, comparative #1 #2 equal/PPT, aggregate count #3"}
{"input": "List document IDs, document names, and document descriptions for all documents.", "prediction": "select tbl:Documents, project col:Documents/document_id #1, project col:Documents/document_name #1, project col:Documents/document_description #1, union #2 #3 #4", "alternatives": "select tbl:Documents, project col:Documents/Document_ID #1, project col:Documents/Document_Name #1, project col:Documents/Document_Description #1, union #2 #3 #4"}
{"input": "What are the names of the teachers who are aged either 32 or 33?", "prediction": "select tbl:teachers, project col:teachers/Age #1, comparative #1 #2 equal/32, comparative #1 #2 equal/33, union #3 #4, project col:teachers/Name #5", "alternatives": "select tbl:teacher, comparative #1 #1 equal/32 col:teacher/Age, comparative #1 #1 equal/33 col:teacher/Age, union #2 #3, project col:teacher/Name #4"}
{"input": "Find the number of visitors who did not visit any museum opened after 2010.", "prediction": "select tbl:museum, comparative #1 #1 great/2010 col:museum/Open_Year, discard #1 #2, aggregate count #3", "alternatives": "select tbl:visitor, project tbl:museum #1, comparative #1 #2 great/2010, discard #1 #3, aggregate count #4"}
{"input": "What are the ids and texts of paragraphs in the document titled 'Welcome to NY'?", "prediction": "select tbl:Documents, comparative #1 #1 equal/Welcome to NY col:Documents/document_name, project col:Documents/document_id #2, project col:Documents/text_code #2, union #3 #4", "alternatives": "select tbl:Documents, comparative #1 #1 equal/Welcome to NY col:Documents/document_title, project col:Documents/document_id #2, project col:Documents/text_code #2, union #3 #4"}
{"input": "Find the average age of losers and winners of all matches.", "prediction": "select tbl:match, project col:match/Losers #1, project col:match/Wins #1, group #3 #1, aggregate avg #4", "alternatives": "select tbl:match, project col:match/Losers #1, project col:match/Wins #1, aggregate avg #4, group #3 #1"}
{"input": "How many singers are from each country?", "prediction": "select col:artist, project tbl:song #1, group #2 #1, union #1 #3", "alternatives": "select col:country, project tbl:artist #1, group #2 #1, union #1 #3"}
{"input": "What is the name of the customer who has the largest number of orders?", "prediction": "select tbl:Customers, project tbl:Orders #1, group #2 #1, superlative #1 #3, project col:Customers/customer_name #4", "alternatives": "select tbl:Customers, project tbl:Orders #1, project col:Customers/customer_name #4, superlative #1 #3, group #2 #1"}
{"input": "Show all template type codes and number of templates for each.", "prediction": "select col:Ref_Template_Types, project col:Ref_Template_Types/Template_Type_Code #1, group #1 #2, union #2 #3", "alternatives": "select col:Ref_Template_Types, union #2 #3, group #1 #2, project col:Ref_Template_Types/Template_Type_Code #1"}
{"input": "What is the average age of the visitors whose membership level is not higher than 4?", "prediction": "select tbl:Visitors, project col:Visitors/membership_level #1, comparative #1 #2 notequal/4, project col:Visitors/age #3, aggregate avg #4", "alternatives": "select tbl:Visitors, project col:Visitors/membership_level #1, comparative #1 #2 notequal/4, project col:Visitors/age #3, aggregate avg 4"}
{"input": "Return the different document ids along with the number of paragraphs corresponding to each, ordered by id.", "prediction": "select tbl:Documents, project col:Documents/document_id #1, project tbl:Paragraphs #1, group #3 #1, union #2 #4, sort #5 #4", "alternatives": "select tbl:Documents, union #2 #4, project tbl:Paragraphs #1, group #3 #1, project col:Documents/document_id #1, sort #5 #4"}
{"input": "How many pets have a greater weight than 10?", "prediction": "select tbl:Person, project col:Person/weight #1, comparative #1 #2 great/10, aggregate count #3", "alternatives": "select tbl:Person, project col:Person/weight #1, aggregate count #3, comparative #1 #2 great/10"}
{"input": "Show all distinct template type codes for all templates.", "prediction": "select tbl:Templates, project col:Templates/Template_Type_Code #1", "alternatives": "select tbl:All_Templates, project col:All_Templates/Template_Type_Code #1"}
{"input": "List the first and last name of all players who are left / L hand in the order of birth date.", "prediction": "select tbl:Player, project col:Player/hands #1, comparative #1 #2 equal/L, project col:Player/first_name #3, project col:Player/last_name #3, union #4 #5, sort #6 #5", "alternatives": "select tbl:players, project col:players/hand #1, comparative #1 #2 equal/L, project col:players/first_name #3, project col:players/last_name #3, project col:players/birth_date #3, union #4 #5, sort #7 #6"}
{"input": "Return the publisher that has published the most books.", "prediction": "select col:book, project tbl:publication #1, group #2 #1, superlative #1 #3", "alternatives": "select col:books, project tbl:book #1, group #2 #1, superlative #1 #3"}
{"input": "What is the name of the winner with the most rank points who participated in the Australian Open tournament?", "prediction": "select val:record, project col:record/Rank_Points #1, group #2 #1, superlative #1 #3, project col:people/Name #4", "alternatives": "select col:matches, comparative #1 #1 equal/Australian Open col:matches/tourney_name, project col:matches/winner_rank_points #2, superlative #2 #3, project col:matches/winner_name #4"}
{"input": "Find the number of visitors who did not visit any museum opened after 2010.", "prediction": "select tbl:museum, comparative #1 #1 great/2010 col:museum/Open_Year, discard #1 #2, aggregate count #3", "alternatives": "select tbl:museum, comparative #1 #1 great/2010 col:museum/Open_Year, discard #1 #2, aggregate count #3"}
{"input": "What are the average and maximum number of tickets bought in all visits?", "prediction": "select tbl:Visits, project col:Visits/Ticket_Buy #1, aggregate col:Visits/Ticket_Buy #2, aggregate avg #3, aggregate max #3, union #4 #5", "alternatives": "select tbl:Visits, project col:Visits/Ticket_Buy #1, aggregate max #3, aggregate avg #3, aggregate col:Visits/Ticket_Buy #2, union #4 #5"}
{"input": "What are the locations and names of all stadiums with capacity between 5000 and 10000?", "prediction": "select tbl:stadium, project col:stadium/Capacity #1, comparative #1 #2 greatequal/5000, comparative #1 #2 lessequal/10000, intersection #1 #3 #4, project col:stadium/Location #5, project col:stadium/name #5, union #6 #7", "alternatives": "select tbl:stadium, project col:stadium/Capacity #1, comparative #1 #2 lessequal/10000, comparative #1 #2 greatequal/5000, intersection #1 #3 #4, project col:stadium/Location #5, project col:stadium/Name #5, union #6 #7"}
{"input": "How many flights depart from 'APG'?", "prediction": "select tbl:flight, comparative #1 #1 equal/APG col:flight/origin, aggregate count #2", "alternatives": "select tbl:flight, comparative #1 #1 equal/APG col:flight/origin, aggregate count #2."}
{"input": "Count the number of matches.", "prediction": "select tbl:match, aggregate count #1", "alternatives": "select tbl:match, aggregate count #1."}
{"input": "How many United Airlines flights go to City 'Aberdeen'?", "prediction": "select tbl:flight, comparative #1 #1 equal/United Airlines col:flight/origin, comparative #2 #2 equal/Aberdeen col:flight/destination, aggregate count #3", "alternatives": "select tbl:flights, comparative #1 #1 equal/United Airlines col:airlines/Airline, project col:airports/City #2, comparative #2 #3 equal/Aberdeen, aggregate count #4"}
{"input": "What are the names of the teachers who teach at least two courses?", "prediction": "select tbl:EMPLOYEE, project tbl:CLASS #1, group #2 #1, comparative #1 #3 greatequal/2, project col:EMPLOYEE/EMP_NAME #4", "alternatives": "select tbl:teachers, project tbl:course #1, group #2 #1, comparative #1 #3 greatequal/2, project col:teachers/Name #4"}
{"input": "List categories that have at least two books after year 1989.", "prediction": "select col:book, project tbl:book #1, comparative #2 #2 great/1989 col:book/Year, group #3 #1, comparative #1 #4 greatequal/2", "alternatives": "select tbl:book_club, comparative #1 #1 great/1989 col:book_club/Year, project col:book_club/Category #2, group #2 #3, comparative #3 #4 greatequal/2"}
{"input": "What are the first names of all players, and their total ranking points?", "prediction": "select tbl:player, project col:player/FirstName #1, project col:player/Ranking_Points #1, group #3 #1, union #2 #4", "alternatives": "select col:players, project col:players/first_name #1, project col:rankings/ranking_points #1, group #3 #1, union #2 #4"}
{"input": "What are the opening year and staff number of the museum named Plaza Museum?", "prediction": "select tbl:Museum, comparative #1 #1 equal/Plaza Museum col:Museum/name, project col:Museum/open_year #2, project col:Museum/staff_number #2, union #3 #4", "alternatives": "select tbl:museum, comparative #1 #1 equal/Plaza Museum col:museum/Name, project col:museum/Open_Year #2, project col:museum/Num_of_Staff #2, aggregate col:museum/Num_of_Staff #4, union #3 #5"}
{"input": "What are the id, name and membership level of visitors who have spent the largest amount of money in total in all museum tickets?", "prediction": "select tbl:Visitors, project tbl:Tickets #1, group #2 #1, superlative #1 #3, project col:Visitors/tourist_id #4, project col:Visitors/customer_name #4, project col:Visitors/membership_level #4, union #5 #6 #7", "alternatives": "select tbl:Visitors, union #5 #6 #7, group #2 #1, superlative #1 #3, project col:Visitors/tourist_id #4, project col:Visitors/customer_name #4, project col:Visitors/membership_level #4, project tbl:Tickets #1"}
{"input": "Find the number of pets for each student who has any pet and student id.", "prediction": "select col:Pets, comparative #1 #1 tbl:Pets, project col:Pets/student_id #1, union #2 #3", "alternatives": "select col:Pets, comparative #1 #1 tbl:Pets, union #2 #3, project col:Pets/student_id #1"}
{"input": "What are the names of documents that use templates with the code BK?", "prediction": "select tbl:Documents, project tbl:Documents #1, project col:Documents/template_code #2, comparative #1 #3 equal/BK, project col:Documents/document_name #4", "alternatives": "select tbl:Documents, project tbl:Templates #1, project col:Templates/Template_Type_Code #2, comparative #1 #3 equal/BK, project col:Documents/Document_Name #4"}
{"input": "What is the ship id and name that caused most total injuries?", "prediction": "select tbl:ship, project tbl:injury_accident #1, group #2 #1, superlative #1 #3, project col:ship/Ship_ID #4, project col:ship/Name #4, union #5 #6", "alternatives": "select tbl:ship, project tbl:injury_accident #1, project col:ship/Name #4, superlative #1 #3, project col:ship/Ship_ID #4, group #2 #1, union #5 #6"}
{"input": "List the maximum weight and type for each type of pet.", "prediction": "select tbl:pet, project col:pet/Weight #1, group #2 #1, union #1 #3", "alternatives": "select tbl:Pets, project col:Pets/PetType #1, project col:Pets/weight #2, group #3 #2, union #4 #2"}
{"input": "find the minimum and maximum number of products of all stores.", "prediction": "select tbl:store, project col:store/Num_of_Products #1, aggregate col:product/Num_of_Products #2, aggregate min #3, aggregate max #3, union #4 #5", "alternatives": "select tbl:store, aggregate col:product/Num_of_Products #2, project col:store/Num_of_Products #1, aggregate min #3, aggregate max #3, union #4 #5"}
{"input": "Find the number of dog pets that are raised by female students (with sex F).", "prediction": "select tbl:Student, project col:Student/Sex #1, comparative #1 #2 equal/F, aggregate count #3", "alternatives": "select tbl:Student, comparative #1 #1 equal/F col:Student/Sex, aggregate count #2"}
{"input": "What is the publisher with most number of books?", "prediction": "select col:book, project tbl:book #1, group #2 #1, superlative #1 #3", "alternatives": "select col:book_club, project tbl:book_club #1, group #2 #1, superlative #1 #3"}
{"input": "Which customers made orders between 2009-01-01 and 2010-01-01? Find their names.", "prediction": "select tbl:Customers, comparative #1 #1 lessequal/2010-01-01 col:Orders/order_date, comparative #2 #2 greatequal/2009-01-01 col:Customers/order_date, project col:Customers/customer_name #3", "alternatives": "select tbl:Orders, comparative #1 #1 lessequal/2010-01-01 col:Orders/date_order_placed, comparative #2 #2 greatequal/2009-01-01 col:Orders/date_order_placed, project tbl:Customers #3, project col:Customers/customer_name #4"}
{"input": "List the number of all matches who played in years of 2013 or 2016.", "prediction": "select tbl:match, project col:match/Year #1, comparative #1 #2 equal/2013, comparative #1 #2 equal/2016, union #3 #4, aggregate count #5", "alternatives": "select tbl:match, project col:match/Year #1, comparative #1 #2 equal/2016, comparative #1 #2 equal/2013, union #3 #4, aggregate count #5"}
{"input": "What are the names and locations of the stadiums that had concerts that occurred in both 2014 and 2015?", "prediction": "select tbl:stadium, project tbl:concerts #1, comparative #1 #2 equal/2014, comparative #1 #2 equal/15, intersection #1 #3 #4, project col:stadium/name #5, project col:stadium/Location #5, union #6 #7", "alternatives": "select tbl:stadium, project tbl:concerts #1, comparative #1 #2 equal/2014, comparative #1 #2 equal/15, intersection #1 #3 #4, project col:stadium/name #5, union #6 #7, project col:stadium/Location #5"}
{"input": "Count the number of documents that use the PPT template type.", "prediction": "select tbl:Documents, project tbl:Documents #1, comparative #1 #2 equal/PPT, aggregate count #3", "alternatives": "select tbl:Documents, project tbl:Documents #1, aggregate count #3, comparative #1 #2 equal/PPT"}
{"input": "List the first and last name of all players in the order of birth date.", "prediction": "select tbl:Player, project col:Player/first_name #1, project col:Player/last_name #1, project col:Player/bdate #1, union #2 #3, sort #5 #4", "alternatives": "select tbl:Player, project col:Player/first_name #1, project col:Player/last_name #1, project col:Player/birthdate #1, union #2 #3, sort #5 #4"}
{"input": "Find the year that has the most number of matches.", "prediction": "select col:match, project tbl:match #1, group #2 #1, superlative #1 #3", "alternatives": "select col:match, superlative #1 #3, group #2 #1, project tbl:match #1"}
{"input": "What is the total ticket expense of the visitors whose membership level is 1?", "prediction": "select tbl:Visitors, project col:Visitors/membership_level #1, comparative #1 #2 equal/1, project col:Tickets/ticket_details #3, aggregate sum #4", "alternatives": "select tbl:Visitors, comparative #1 #2 equal/1, project col:Visitors/membership_level #1, project col:Tickets/ticket_details #3, aggregate sum #4"}
{"input": "Find the dates of orders which belong to the customer named \"Jeramie\".", "prediction": "select tbl:Customer, comparative #1 #1 equal/Jeramie col:Customers/customer_name, project tbl:Orders #2, project col:Orders/order_date #3", "alternatives": "select tbl:Customer, project col:Orders/order_date #3, project tbl:Orders #2, comparative #1 #1 equal/Jeramie col:Customers/customer_name"}
{"input": "What are the name and results of the battles when the bulgarian commander is not 'Boril'", "prediction": "select tbl:battle, project col:battle/Commander #1, comparative #1 #2 notequal/Boril, project col:battle/Name #3, project col:battle/Result #3, union #4 #5", "alternatives": "select tbl:battle, project col:battle/bulgarian_commander #1, comparative #1 #2 notequal/Boril, project col:battle/name #3, project col:battle/result #3, union #4 #5"}
{"input": "What are the distinct ids of products ordered between 1975-01-01 and 1976-01-01??", "prediction": "select tbl:Products, comparative #1 #1 greatequal/1975-01-01 col:Products/date_ordered, comparative #2 #2 lessequal/1976-01-01 col:Products/date_ordered, project col:Products/product_id #3", "alternatives": "select tbl:Products, project col:Products/product_id #3, comparative #2 #2 lessequal/1976-01-01 col:Products/date_ordered, comparative #1 #1 greatequal/1975-01-01 col:Products/date_ordered"}
{"input": "Find all airlines that have flights from both airports 'APG' and 'CVO'.", "prediction": "select col:flight, comparative #1 #1 equal/APG col:airport/airport_name, comparative #1 #1 equal/CVO col:airport/airport_name, intersection #1 #2 #3", "alternatives": "select col:flight, comparative #1 #1 equal/APG col:airports/airport_name, comparative #1 #1 equal/CVO col:airports/airport_name, intersection #1 #2 #4"}
{"input": "What are the locations and names of all stadiums with capacity between 5000 and 10000?", "prediction": "select tbl:stadium, project col:stadium/Capacity #1, comparative #1 #2 greatequal/5000, comparative #1 #2 lessequal/10000, intersection #1 #3 #4, project col:stadium/Location #5, project col:stadium/name #5, union #6 #7", "alternatives": "select tbl:stadium, project col:stadium/Capacity #1, comparative #1 #2 lessequal/10000, comparative #1 #2 greatequal/5000, intersection #1 #3 #4, project col:stadium/Location #5, project col:stadium/Name #5, union #6 #7"}
{"input": "Give me a list of distinct product ids from orders placed between 1975-01-01 and 1976-01-01?", "prediction": "select tbl:Orders, comparative #1 #1 greatequal/1975-01-01 col:Orders/date_order_placed, comparative #2 #2 lessequal/1976-01-01 col:Orders/date_order_placed, project col:Orders/product_id #3", "alternatives": "select tbl:Orders, comparative #2 #2 lessequal/1976-01-01 col:Orders/date_order_placed, comparative #1 #1 greatequal/1975-01-01 col:Orders/date_order_placed, project col:Orders/product_id #3"}
{"input": "Return the template type code of the template that is used by a document named Data base.", "prediction": "select tbl:Documents, comparative #1 #1 equal/Data base col:Documents/document_name, project tbl:Templates #2, project col:Templates/template_type_code #3", "alternatives": "select tbl:Templates, project tbl:Documents #1, comparative #2 #2 equal/Data base col:Documents/Document_Name, project col:Templates/Template_Type_Code #3"}
{"input": "Show paragraph details for paragraph with text 'Korea'.", "prediction": "select tbl:paragraph, project col:paragraph/Text #1, comparative #1 #2 equal/Korea, project col:paragraph/Details #3", "alternatives": "select tbl:Paragraphs, project col:Paragraphs/Paragraph_Text #1, comparative #1 #2 likekorea, project col:Paragraphs/Other_Details #3"}
{"input": "Show names of teachers that teach at least two courses.", "prediction": "select tbl:teachers, project tbl:course #1, group #2 #1, comparative #1 #3 greatequal/2, project col:teachers/Name #4", "alternatives": "select tbl:teacher, project tbl:course_arrange #1, group #2 #1, comparative #1 #3 greatequal/2, project col:teacher/Name #4"}
{"input": "What is the id and weight of every pet who is older than 1?", "prediction": "select tbl:Pets, comparative #1 #1 great/1 col:Pets/age, project col:Pets/id #2, project col:Pets/weight #2, union #3 #4", "alternatives": "select tbl:Pets, project col:Pets/weight #2, project col:Pets/id #2, comparative #1 #1 great/1 col:Pets/age, union #3 #4"}
{"input": "What are the paragraph texts for the document with the name 'Customer reviews'?", "prediction": "select tbl:Documents, project col:Documents/document_name #1, comparative #1 #2 equal/Customer reviews, project col:Documents/paragraph_text #3", "alternatives": "select tbl:Documents, comparative #1 #1 equal/Customer reviews col:Documents/document_name, project col:Documents/paragraph_text #2"}
{"input": "What are the names, themes, and number of singers for every concert?", "prediction": "select tbl:concert, project col:concert/Name #1, project col:concert/Theme #1, project tbl:song #1, group #4 #1, union #2 #3 #5", "alternatives": "select tbl:conzert, project col:conzert/Name #1, project col:conzert/Theme #1, project tbl:song #1, group #4 #1, union #2 #3 #5"}
{"input": "Count the number of flights departing from 'APG'.", "prediction": "select tbl:flight, comparative #1 #1 equal/APG col:flight/origin, aggregate count #2", "alternatives": "select tbl:flights, comparative #1 #1 equal/APG col:flights/SourceAirport, aggregate count #2"}
{"input": "Which year has most number of concerts?", "prediction": "select col:concerts, project tbl:concerts #1, group #2 #1, superlative #1 #3", "alternatives": "select col:concert, project tbl:concert #1, group #2 #1, superlative #1 #3"}
{"input": "Find the name and location of the stadiums which some concerts happened in the years of both 2014 and 2015.", "prediction": "select tbl:stadium, project tbl:convention #1, project col:convention/Year #2, comparative #1 #3 equal/2014, comparative #1 #3 equal/15, intersection #1 #4 #5, project col:stadium/name #6, project col:stadium/Location #6, union #7 #8", "alternatives": "select tbl:stadium, project tbl:convention #1, project col:convention/Year #2, project col:stadium/name #6, comparative #1 #3 equal/15, intersection #1 #4 #5, comparative #1 #3 equal/2014, project col:stadium/Location #6, union #7 #8"}
{"input": "What are the average and maximum number of tickets bought in all visits?", "prediction": "select tbl:Visits, project col:Visits/Ticket_Buy #1, aggregate col:Visits/Ticket_Buy #2, aggregate avg #3, aggregate max #3, union #4 #5", "alternatives": "select tbl:Visits, project col:Visits/Ticket_Buy #1, aggregate col:Visits/Ticket_Value #2, aggregate avg #3, aggregate max #3, union #4 #5"}
{"input": "List all singer names in concerts in year 2014.", "prediction": "select tbl:concerts, project col:concerts/Year #1, comparative #1 #2 equal/2014, project col:song/Name #3", "alternatives": "select tbl:concert, comparative #1 #1 equal/2014 col:concert/Year, project col:singer/Name #2"}
{"input": "What country is Jetblue Airways affiliated with?", "prediction": "select col:airlines, comparative #1 #1 equal/Jetblue Airways col:airlines/name", "alternatives": "select val:airlines, project col:airlines/Country #1"}
{"input": "What are the first names and birth dates of players from the USA?", "prediction": "select tbl:Player, comparative #1 #1 equal/USA col:Player/country, project col:Player/first_name #2, project col:Player/birth_date #2, union #3 #4", "alternatives": "select tbl:players, comparative #1 #1 equal/USA col:players/country_code, project col:players/first_name #2, project col:players/birth_date #2, union #3 #4"}
{"input": "Show the name and the release year of the song by the youngest singer.", "prediction": "select tbl:song, project col:song/artist_name #1, superlative #1 #2, project col:song/song_name #3, project col:song/release_year #3, union #4 #5", "alternatives": "select col:singer, project tbl:singer #1, project col:singer/Age #2, superlative #1 #3, project col:singer/Song_Name #4, project col:singer/Song_release_year #4, union #5 #6"}
{"input": "Return the id of the document with the fewest paragraphs.", "prediction": "select col:Documents, project tbl:Document_Paragraphs #1, group #2 #1, superlative #1 #3, project col:Documents/document_id #4", "alternatives": "select col:Documents, project tbl:Document_Paragraphs #1, group #2 #1, superlative #1 #3, project col:Documents/Document_ID #4"}
{"input": "For each customer who has at least two orders, find the customer name and number of orders made.", "prediction": "select tbl:Customers, project tbl:Orders #1, group #2 #1, comparative #1 #3 greatequal/2, project col:Customers/customer_name #4, project tbl:Orders #4, group #6 #4, union #5 #7", "alternatives": "select tbl:Customers, project tbl:Orders #1, group #2 #1, comparative #1 #3 greatequal/2, project col:Customers/customer_name #4, project tbl:Orders #4, aggregate count #6, union #5 #7"}
{"input": "Which cities do more than one employee under age 30 come from?", "prediction": "select col:Employees, project tbl:Employees #1, comparative #2 #2 less/30 col:Employees/Age, group #3 #1, comparative #1 #4 great/1", "alternatives": "select col:employee, project tbl:employee #1, comparative #2 #2 less/30 col:employee/Age, group #3 #1, comparative #1 #4 great/1"}
{"input": "Show countries where a singer above age 40 and a singer below 30 are from.", "prediction": "select tbl:song, comparative #1 #1 great/40 col:song/age, comparative #1 #1 less/30 col:song/age, project col:country/country #2", "alternatives": "select tbl:song, comparative #1 #1 great/40 col:song/Age, comparative #1 #1 less/30 col:song/Age, project col:country/Country #3"}
{"input": "What are airport names at City 'Aberdeen'?", "prediction": "select tbl:airport, project col:airport/city #1, comparative #1 #2 equal/Aberdeen, project col:airport/name #3", "alternatives": "select val:airports, project col:airports/AirportName #1"}
{"input": "How many different types of pet are there?", "prediction": "select tbl:Pet, project col:Pet/Type #1, aggregate count #3", "alternatives": "select tbl:Pets, aggregate count #2"}
{"input": "Find the first name, country code and birth date of the winner who has the highest rank points in all matches.", "prediction": "select tbl:match, project col:match/Rank_Points #1, superlative #1 #2, project col:people/Fname #3, project col:people/Country_Code #3, project col:people/Birth_Date #3, union #4 #5 #6", "alternatives": "select tbl:match, project col:match/Rank_Points #1, superlative #1 #2, project col:people/FirstName #3, project col:people/Country_Code #3, project col:people/BirthDate #3, union #4 #5 #6"}
{"input": "Find the id of the order which is shipped most recently.", "prediction": "select col:Orders, superlative #1 #1, project col:Orders/order_id #2", "alternatives": "select col:Shipments, project col:Shipments/shipment_date #1, superlative #1 #2, project col:Shipments/order_id #3"}
{"input": "What are all the song names by singers who are older than average?", "prediction": "select tbl:song, project col:song/rating #1, aggregate avg #2, comparative #1 #2 great/#3, project col:song/song_name #4", "alternatives": "select tbl:song, project col:song/song_name #4, aggregate avg #2, comparative #1 #2 great/#3, project col:song/rating #1"}
{"input": "What are the names of the teachers and the courses they teach in ascending alphabetical order by the name of the teacher?", "prediction": "select tbl:teachers, project col:teachers/Name #1, project tbl:teaches #1, project col:courses/course_name #3, union #2 #4, sort #5 #4 ascending", "alternatives": "select tbl:teacher, project tbl:course_arrange #1, project col:teacher/Name #1, project col:course/Course #2, union #3 #4, sort #5 #3 ascending"}
{"input": "Find the name of the winner who has the highest rank points and participated in the Australian Open tourney.", "prediction": "select col:match_season, project col:match_season/Rank_Points #1, superlative #1 #2, comparative #3 #3 equal/Australian Open col:match_season/Tournament", "alternatives": "select tbl:winner, project col:match/Rank_Points #1, superlative #1 #2, comparative #3 #3 equal/Australian Open col:turner/Tournament, project col:winner/Name #4"}
{"input": "What are the ids of documents that contain the paragraph text 'Brazil' and 'Ireland'?", "prediction": "select tbl:Documents, project col:Documents/paragraph_text #1, comparative #1 #2 like%Brazil%, comparative #1 #2 like%Ireland%, intersection #1 #3 #4, project col:Documents/document_id #5", "alternatives": "select tbl:Documents, project col:Documents/paragraph_text #1, comparative #1 #2 like%Brazil%, intersection #1 #3 #4, comparative #1 #2 like%Ireland%, project col:Documents/document_id #5"}
{"input": "What are the average ages of losers and winners across matches?", "prediction": "select tbl:match, project col:match/Launcher #1, project col:match/Winner #1, aggregate avg #2, aggregate avg #3", "alternatives": "select tbl:match, project col:match/Losers #1, project col:match/Winner #1, group #3 #1, aggregate avg #2"}
{"input": "Return the type code of the template type that the most templates belong to.", "prediction": "select col:Customer_Templates, project tbl:Customer_Templates #1, group #2 #1, superlative #1 #3, project col:Customer_Templates/Template_Type_Code #4", "alternatives": "select col:Templates, project tbl:Templates #1, group #2 #1, superlative #1 #3, project col:Templates/Template_Type_Code #4"}
{"input": "Which order deals with the most items? Return the order id.", "prediction": "select col:Order_Items, project tbl:Order_Items #1, group #2 #1, superlative #1 #3, project col:Order_Items/order_id #4", "alternatives": "select tbl:Orders, project tbl:Order_Items #1, group #2 #1, superlative #1 #3, project col:Orders/order_id #4"}
{"input": "Which template type code is used by most number of documents?", "prediction": "select col:Documents, project tbl:Documents #1, group #2 #1, superlative #1 #3", "alternatives": "select col:Documents, project tbl:Documents #1, superlative #1 #3, group #2 #1"}
{"input": "Count the number of documents that use the PPT template type.", "prediction": "select tbl:Documents, project tbl:Documents #1, comparative #1 #2 equal/PPT, aggregate count #3", "alternatives": "select tbl:Documents, project tbl:Documents #1, comparative #2 #1 equal/PPT col:Documents/model_name, aggregate count #3"}
{"input": "Give me the names of customers who have placed orders between 2009-01-01 and 2010-01-01.", "prediction": "select tbl:Customer_Orders, comparative #1 #1 lessequal/2010-01-01 col:Customer_Orders/order_date, comparative #2 #2 greatequal/2009-01-01 col:Customers/order_date, project col:Customers/customer_name #3", "alternatives": "select tbl:Customer_Orders, comparative #1 #1 lessequal/2010-01-01 col:Customer_Orders/order_date, project col:Customers/customer_name #3, comparative #2 #2 greatequal/2009-01-01 col:Customers/order_date"}
{"input": "What is the name and capacity for the stadium with the highest average attendance?", "prediction": "select tbl:stadium, project col:stadium/Average_Attendance #1, group #2 #1, superlative #1 #3, project col:stadium/name #4, project col:stadium/Capacity #4, union #5 #6", "alternatives": "select tbl:stadium, project col:stadium/Average_Attendance #1, project col:stadium/Capacity #4, superlative #1 #3, project col:stadium/name #4, group #2 #1, union #5 #6"}
{"input": "What airline serves the most flights?", "prediction": "select col:flight, project tbl:flight #1, group #2 #1, superlative #1 #3", "alternatives": "select col:airlines, project tbl:flights #1, group #2 #1, superlative #1 #3"}
{"input": "Which district has both stores with less than 3000 products and stores with more than 10000 products?", "prediction": "select col:district, project none #1, project tbl:store #2, group #3 #1, comparative #1 #4 less/3000, comparative #1 #4 great/10000, intersection #1 #5 #6", "alternatives": "select col:district, project none #1, project tbl:product #2, comparative #1 #3 less/3000, comparative #1 #3 great/10000, intersection #1 #4 #5"}
{"input": "For each shop, return the number of employees working there and the name of the shop.", "prediction": "select col:shop, project tbl:employee #1, group #2 #1, project col:shop/Shop_name #1, union #3 #4", "alternatives": "select tbl:shop, project tbl:employee #1, group #2 #1, project col:shop/Shop_name #1, union #3 #4"}
{"input": "Which customers have both \"On Road\" and \"Shipped\" as order status? List the customer ids.", "prediction": "select tbl:Customers, project tbl:Orders #1, comparative #1 #2 equal/On Road, comparative #1 #2 equal/Shipped, intersection #1 #3 #4, project col:Customers/customer_id #5", "alternatives": "select tbl:Customers, project col:Customers/customer_id #5, comparative #1 #2 equal/On Road, comparative #1 #2 equal/Shipped, intersection #1 #3 #4, project tbl:Orders #1"}
{"input": "Which abbreviation corresponds to Jetblue Airways?", "prediction": "select val:airlines, project col:airlines/abbreviation #1", "alternatives": "select tbl:airlines, comparative #1 #1 equal/Joinblue Airways col:airlines/name"}
{"input": "Return the id of the document with the fewest paragraphs.", "prediction": "select col:Documents, project tbl:Document_Paragraphs #1, group #2 #1, superlative #1 #3, project col:Documents/document_id #4", "alternatives": "select col:Paragraphs, project tbl:Paragraphs #1, group #2 #1, superlative #1 #3, project col:Paragraphs/Document_ID #4"}
{"input": "What are the distinct battle names which are between bulgarian commander 'Kaloyan' and latin commander 'Baldwin I'?", "prediction": "select tbl:Battle, project col:Battle/Commandant #1, comparative #1 #2 equal/Kaloyan, comparative #1 #2 equal/Latin, comparative #1 #2 equal/Baldwin I, intersection #1 #3 #4", "alternatives": "select tbl:Battle, project col:Battle/Commandant #1, comparative #1 #2 equal/Kaloyan, comparative #1 #2 equal/Latin, comparative #3 #3 equal/Baldwin I, union #4 #5"}
{"input": "What is the total ticket expense of the visitors whose membership level is 1?", "prediction": "select tbl:Visitors, project col:Visitors/membership_level #1, comparative #1 #2 equal/1, project col:Tickets/ticket_details #3, aggregate sum #4", "alternatives": "select tbl:visitor, comparative #1 #1 equal/1 col:visitor/Level_of_membership, project col:visit/Total_spent #2, aggregate sum #3"}
{"input": "Find the number of employees hired in each shop; show the shop name as well.", "prediction": "select tbl:shop, project tbl:employee #1, group #2 #1, project col:shop/Shop_name #1, union #3 #4", "alternatives": "select tbl:shop, group #2 #1, project tbl:employee #1, project col:shop/Shop_name #1, union #3 #4"}
{"input": "What are all the song names by singers who are older than average?", "prediction": "select tbl:song, project col:song/rating #1, aggregate avg #2, comparative #1 #2 great/#3, project col:song/song_name #4", "alternatives": "select tbl:song, comparative #1 #1 great/#3, project col:song/song_name #4"}
{"input": "What are the template ids with template type description \"Presentation\".", "prediction": "select tbl:Customer_Templates, project tbl:Customer_Templates #1, comparative #1 #2 equal/Presentation, project col:Customer_Templates/template_id #3", "alternatives": "select tbl:Ref_Template_Types, project tbl:Ref_Template_Types #1, comparative #1 #2 equal/Presentation, project col:Ref_Template_Types/ template_id #3"}
{"input": "What are the first names of every student who has a cat or dog as a pet?", "prediction": "select tbl:Student, project tbl:PersonFriend #1, comparative #1 #2 equal/cat, comparative #1 #2 equal/dog, union #3 #4, project col:Student/Fname #5", "alternatives": "select tbl:Student, project tbl:PersonFriend #1, comparative #1 #2 equal/Cat, comparative #1 #2 equal/Dog, union #3 #4, project col:Student/Fname #5"}
{"input": "Give the airline with abbreviation 'UAL'.", "prediction": "select col:airlines, project col:airlines/abbreviation #1, comparative #1 #2 equal/UAL", "alternatives": "select col:airlines, project col:airlines/Abbreviation #1, comparative #1 #2 equal/UAL"}
{"input": "What are all different template ids used for documents, and how many times were each of them used?", "prediction": "select tbl:Documents, project col:Documents/template_id #1, group #1 #2, union #2 #3", "alternatives": "select tbl:Document_Templates, project col:Documents/template_id #1, group #1 #3, union #3 #4"}
{"input": "What are the distinct types of mills that are built by American or Canadian architects?", "prediction": "select tbl:mill, project col:architecture/Nationality #1, comparative #1 #2 equal/American, comparative #1 #2 equal/Canada, union #3 #4", "alternatives": "select tbl:architect, comparative #1 #1 equal/American col:architect/nationality, comparative #1 #1 equal/Canadian col:architect/nationality, project tbl:mill #2, project tbl:mill #3, union #4 #5"}
{"input": "Return the type code of the template type with the description \"Book\".", "prediction": "select tbl:Templates, project col:Templates/description #1, comparative #1 #2 equal/Book, project col:Templates/type_code #3", "alternatives": "select tbl:Ref_Template_Types, project col:Ref_Template_Types/template_description #1, comparative #1 #2 equal/Book, project col:Ref_Template_Types/type_code #3"}
{"input": "Find the names of the visitors whose membership level is higher than 4, and order the results by the level from high to low.", "prediction": "select tbl:Visitors, project col:Visitors/membership_level #1, comparative #1 #2 great/4, project col:Visitors/name #3, project col:Visitors/membership_level #3, sort #4 #5 ascending", "alternatives": "select tbl:visitor, project col:visitor/Level_of_membership #1, comparative #1 #2 great/4, project col:visitor/Name #3, project col:visitor/Level_of_membership #3, sort #4 #5 descending"}
{"input": "How many shops are there in each location?", "prediction": "select col:shop, project tbl:shop #1, group #2 #1, union #1 #3", "alternatives": "select col:Shops, project tbl:Shops #1, group #2 #1, union #1 #3"}
{"input": "What are all company names that have a corresponding movie directed in the year 1999?", "prediction": "select tbl:company, project tbl:film #1, project col:film/Year #2, comparative #1 #3 equal/1999, project col:company/Company #4", "alternatives": "select tbl:culture_company, project tbl:movie #1, project col:movie/Year #2, comparative #1 #3 equal/1999, project col:culture_company/Company_name #4"}
{"input": "What is maximum and minimum death toll caused each time?", "prediction": "select tbl:Trauma, project col:Trauma/Toll #1, group #2 #1, aggregate max #3, aggregate min #3, union #4 #5", "alternatives": "select tbl:Number_Deaths, project col:Number_Deaths/total_catastrophe #1, group #2 #1, aggregate max #3, aggregate min #3, union #4 #5"}
{"input": "Find the manager name and district of the shop whose number of products is the largest.", "prediction": "select tbl:shop, project col:shop/Product_ID #1, group #2 #1, superlative #1 #3, project col:shop/Manager_Name #4, project col:shop/District #4, union #5 #6", "alternatives": "select tbl:shop, project col:shop/Number_products #1, group #2 #1, superlative #1 #3, project col:shop/Manager_name #4, project col:shop/District #4, union #5 #6"}
{"input": "List all company names with a book published by Alyson.", "prediction": "select tbl:company, project tbl:book #1, comparative #1 #2 equal/Alyson, project col:company/Name #3", "alternatives": "select val:book_club, project tbl:book_club #1, project tbl:culture_company #2, project col:culture_company/Company_name #3"}
{"input": "What is the airport name for airport 'AKO'?", "prediction": "select tbl:airport, project col:airport/name #1, comparative #2 #1 equal/AKO", "alternatives": "select col:airports, project tbl:airports #1, comparative #1 #2 equal/AKO"}
{"input": "Find all airlines that have at least 10 flights.", "prediction": "select col:flight, project tbl:flight #1, group #2 #1, comparative #1 #3 greatequal/10", "alternatives": "select col:airlines, project tbl:flights #1, group #2 #1, comparative #1 #3 great/10"}
{"input": "What are the distinct template type descriptions for the templates ever used by any document?", "prediction": "select tbl:Document_Templates, project tbl:Document_Templates #1, group #2 #1, comparative #1 #3 none", "alternatives": "select tbl:Ref_Template_Types, comparative #1 #1 tbl:Documents_with_Templates, project col:Ref_Template_Types/Template_Type_Description #2"}
{"input": "Which district has both stores with less than 3000 products and stores with more than 10000 products?", "prediction": "select col:district, project none #1, project tbl:store #2, group #3 #1, comparative #1 #4 less/3000, comparative #1 #4 great/10000, intersection #1 #5 #6", "alternatives": "select col:shop, project tbl:shop #1, project col:shop/Number_products #2, group #3 #2, comparative #1 #4 less/3000, comparative #1 #4 great/10000, intersection #1 #5 #6"}
{"input": "How many players are from each country?", "prediction": "select col:country, project tbl:match_season #1, group #2 #1, union #1 #3", "alternatives": "select col:country, project tbl:country #1, group #1 #2, union #2 #3"}
{"input": "What is the average age for all students who do not own any pets?", "prediction": "select tbl:Student, comparative #1 #1 tbl:Pets, discard #1 #2, project col:Student/Age #3, aggregate avg #4", "alternatives": "select tbl:Student, comparative #1 #1 tbl:Has_Pet, discard #1 #2, project col:Student/Age #3, aggregate avg #4"}
{"input": "What is the average, minimum, and maximum age for all French singers?", "prediction": "select val:artist, project col:artist/Age #1, aggregate avg #2, aggregate min #2, aggregate max #2, union #3 #4 #5", "alternatives": "select val:artist, project col:artist/Age #1, union #3 #4 #5, aggregate min #2, aggregate max #2, aggregate avg #2"}
{"input": "Show the name of teachers aged either 32 or 33?", "prediction": "select tbl:teachers, comparative #1 #1 equal/32 col:teachers/Age, comparative #1 #1 equal/33 col:teachers/Age, union #2 #3, project col:teachers/Name #4", "alternatives": "select tbl:teachers, project col:teachers/Age #1, comparative #1 #2 equal/32, comparative #1 #2 equal/33, union #3 #4"}
{"input": "Return the number of United Airlines flights leaving from AHD Airport.", "prediction": "select tbl:flight, comparative #1 #1 equal/AHD Airport col:airport/origin, aggregate count #2", "alternatives": "select tbl:flight, comparative #1 #1 equal/AH Airport col:airport/airport_name, aggregate count #2"}
{"input": "Show the hometowns shared by at least two teachers.", "prediction": "select col:teachers, project tbl:teachers #1, group #2 #1, comparative #1 #3 greatequal/2", "alternatives": "select col:teachers, project tbl:teachers #1, group #2 #1, comparative #1 #3 greatequal/2!"}
{"input": "Count the number of templates of the type CV.", "prediction": "select tbl:Templates, project tbl:Templates #1, comparative #2 #1 equal/CV, aggregate count #3", "alternatives": "select tbl:Templates, aggregate count #3, comparative #2 #1 equal/CV, project tbl:Templates #1"}
{"input": "Which airlines have a flight with destination airport AHD?", "prediction": "select col:flight, project tbl:flight #1, project col:flight/destination #2, comparative #1 #3 equal/AHD", "alternatives": "select col:flight, comparative #1 #3 equal/AHD, project col:flight/destination #2, project tbl:flight #1"}
{"input": "Give me a list of distinct product ids from orders placed between 1975-01-01 and 1976-01-01?", "prediction": "select tbl:Orders, comparative #1 #1 greatequal/1975-01-01 col:Orders/date_order_placed, comparative #2 #2 lessequal/1976-01-01 col:Orders/date_order_placed, project col:Orders/product_id #3", "alternatives": "select tbl:Orders, comparative #1 #1 lessequal/1976-01-01 col:Orders/date_order_placed, comparative #2 #2 greatequal/1975-01-01 col:Orders/date_order_in_force, project col:Orders/product_id #3"}
{"input": "What are the ids and names of the architects who built at least 3 bridges ?", "prediction": "select tbl:Architects, project tbl:Bridges #1, group #2 #1, comparative #1 #3 greatequal/3, project col:Architects/architect_id #4, project col:Architects/name #4, union #5 #6", "alternatives": "select tbl:Architects, project tbl:Bridges #1, group #2 #1, comparative #1 #3 greatequal/3, project col:Architects/Architekt_ID #4, project col:Architects/ArchitectName #4, union #5 #6"}
{"input": "How many flights does airline 'JetBlue Airways' have?", "prediction": "select tbl:flight, project tbl:flight #1, comparative #2 #1 equal/JetBlue Airways, aggregate count #3", "alternatives": "select tbl:flights, comparative #1 #1 equal/JetBlue Airways col:airlines/Airline, aggregate count #2"}
{"input": "Find the distinct details of invoices which are created before 1989-09-03 or after 2007-12-25.", "prediction": "select tbl:Invoices, comparative #1 #1 less/1989-09-03 col:Invoices/date_invoice_created, comparative #1 #1 great/2007-12-25 col:Invoices/date_invoice_created, union #2 #3", "alternatives": "select tbl:Invoices, comparative #1 #1 less/1989-09-03 col:Invoices/invoice_date, comparative #1 #1 great/2007-12-25 col:Invoices/invoice_date, union #2 #3, project col:Invoices/invoice_details #4"}
{"input": "What is the document name and template id for document with description with the letter 'w' in it?", "prediction": "select tbl:Documents, comparative #1 #1 like%w% col:Documents/document_description, project col:Documents/document_name #2, project col:Documents/template_id #2, union #3 #4", "alternatives": "select tbl:Documents, union #3 #4, project col:Documents/document_name #2, project col:Documents/template_id #2, comparative #1 #1 like%w% col:Documents/document_description"}
{"input": "What are the distinct names and nationalities of the architects who have ever built a mill?", "prediction": "select tbl:architects, comparative #1 #1 tbl:mill, project col:architects/Name #2, project col:architects/Nationality #2, union #3 #4", "alternatives": "select tbl:architect, comparative #1 #1 tbl:mill, project col:architect/Name #2, project col:architect/Nationality #2, union #3 #4"}
{"input": "What are the id and name of the museum visited most times?", "prediction": "select tbl:Museum, project tbl:Visits #1, group #2 #1, superlative #1 #3, project col:Museum/id #4, project col:Museum/name #4, union #5 #6", "alternatives": "select tbl:museum, project tbl:visit #1, group #2 #1, superlative #1 #3, project col:visit/Museum_ID #4, project col:museum/Name #4, union #5 #6"}
{"input": "Find the distinct details of invoices which are created before 1989-09-03 or after 2007-12-25.", "prediction": "select tbl:Invoices, comparative #1 #1 less/1989-09-03 col:Invoices/date_invoice_created, comparative #1 #1 great/2007-12-25 col:Invoices/date_invoice_created, union #2 #3", "alternatives": "select tbl:Invoices, comparative #1 #1 less/2007-12-25 col:Invoices/date_invoice_created, comparative #1 #1 great/1989-09-03 col:Invoices/date_invoice_created, union #2 #3"}
{"input": "Return the ids of templates that have the code PP or PPT.", "prediction": "select tbl:Templates, project col:Templates/Template_Code #1, comparative #1 #2 equal/PP, comparative #1 #2 equal/PPT, union #3 #4, project col:Templates/Template_ID #5", "alternatives": "select tbl:Templates, project col:Templates/Template_Type_Code #1, comparative #1 #2 equal/PPT, comparative #1 #2 equal/PP, union #3 #4, project col:Templates/Template_ID #5"}
{"input": "What is the version number and template type code for the template with version number later than 5?", "prediction": "select tbl:Templates, comparative #1 #1 great/5 col:Templates/version_number, project col:Templates/version_number #2, project col:Templates/ template_type_code #2, union #3 #4", "alternatives": "select tbl:Templates, comparative #1 #1 great/5 col:Templates/version_number, project col:Templates/version_number #2, project col:Templates/template_type_code #2, union #3 #5"}
{"input": "How many books fall into each category?", "prediction": "select col:book, project tbl:book #1, group #2 #1, union #1 #3", "alternatives": "select col:book_club, project tbl:book_club #1, group #2 #1, union #1 #3"}
{"input": "How many different types of pet are there?", "prediction": "select tbl:Pet, project col:Pet/Type #1, aggregate count #3", "alternatives": "select col:Pets, project col:Pets/type #1, aggregate count #3"}
{"input": "Return the id and type code of the template that is used for the greatest number of documents.", "prediction": "select tbl:Documents, project col:Documents/document_id #1, group #1 #2, superlative #2 #3, project col:Documents/document_type_code #4, project col:Documents/document_id #4, union #5 #6", "alternatives": "select tbl:Documents, project tbl:Documents #1, group #2 #1, superlative #1 #3, project col:Documents/template_id #4, project col:Documents/template_type_code #4, union #5 #6"}
{"input": "Count the number of distinct store locations.", "prediction": "select col:district, comparative #1 #1 none, aggregate count #2", "alternatives": "select tbl:shop, aggregate count #2"}
{"input": "What is the template type code for template type description \"Book\".", "prediction": "select tbl:Ref_Template_Types, comparative #1 #1 equal/Book col:Ref_Template_Types/Template_Type_Description, project col:Ref_Template_Types/Template_Type_Code #2", "alternatives": "select tbl:Ref_Template_Types, comparative #1 #1 equal/Book col:Ref_Template_Types/Temple_Type_Description, project col:Ref_Template_Types/Template_Type_Code #2"}
{"input": "What are the ids and names of each document, as well as the number of paragraphs in each?", "prediction": "select col:Documents, project col:Documents/document_id #1, project col:Documents/document_name #1, project tbl:Documents #1, group #4 #1, union #2 #3 #5", "alternatives": "select col:Documents, project col:Documents/document_id #1, project col:Documents/document_name #1, project tbl:Paragraphs #1, group #4 #1, union #2 #3 #5"}
{"input": "What is the document id with 1 to 2 paragraphs?", "prediction": "select col:Documents, project col:Documents/document_id #1, group #1 #2, comparative #2 #3 greatequal/1, comparative #2 #3 lessequal/2", "alternatives": "select col:Documents, project col:Documents/document_id #1, group #1 #2, comparative #2 #3 lessequal/2, comparative #2 #3 greatequal/1"}
{"input": "Show location and name for all stadiums with a capacity between 5000 and 10000.", "prediction": "select tbl:stadium, project col:stadium/Capacity #1, comparative #1 #2 greatequal/5000, comparative #1 #2 lessequal/10000, intersection #1 #3 #4, project col:stadium/Location #5, project col:stadium/name #5, union #6 #7", "alternatives": "select tbl:stadium, project col:stadium/Capacity #1, comparative #1 #2 greatequal/5000, union #6 #7, intersection #1 #3 #4, project col:stadium/Location #5, project col:stadium/name #5, comparative #1 #2 lessequal/10000"}
{"input": "Find the first name and age of students who have a pet.", "prediction": "select tbl:Student, comparative #1 #1 tbl:Pets, project col:Student/Fname #2, project col:Student/Age #2, union #3 #4", "alternatives": "select tbl:Student, union #3 #4, project col:Student/Fname #2, project col:Student/Age #2, comparative #1 #1 tbl:Pets"}
{"input": "Which customers have ever canceled the purchase of the product \"food\" (the item status is \"Cancel\")?", "prediction": "select tbl:Products_for_Hire, project tbl:Customer_Orders #1, comparative #1 #2 equal/food, project col:Customer_Orders/product_status_code #3, comparative #3 #4 equal/Cancel", "alternatives": "select col:Customers, comparative #1 #1 equal/food col:Products/product_name, comparative #2 #2 equal/Cancel col:Order_Items/order_item_status"}
{"input": "What are the different template type codes, and how many documents use each type?", "prediction": "select tbl:Documents, project col:Documents/Template_Type_Code #1, group #1 #2, union #2 #3", "alternatives": "select col:Templates, project tbl:Documents #2, group #3 #2, union #2 #4"}
{"input": "Show all countries and the number of singers in each country.", "prediction": "select col:artist, project tbl:song #1, group #2 #1, union #1 #3", "alternatives": "select col:artist, project tbl:song #1, union #1 #3, group #2 #1"}
{"input": "List the name of teachers whose hometown is not `` Little Lever Urban District ''.", "prediction": "select tbl:teachers, project col:teachers/Hometown #1, comparative #1 #2 notequal/Little Lever Urban District, project col:teachers/Name #3", "alternatives": "select tbl:teachers, project col:teachers/Hometown #1, comparative #1 #2 notequal/Little Lever Urban District"}
{"input": "List all company names with a book published by Alyson.", "prediction": "select tbl:company, project tbl:book #1, comparative #1 #2 equal/Alyson, project col:company/Name #3", "alternatives": "select tbl:company, project tbl:book #1, project col:company/Name #3, comparative #1 #2 equal/Alyson"}
{"input": "Find the last name of the student who has a cat that is age 3.", "prediction": "select tbl:Student, project tbl:Cat #1, project col:Cat/Age #2, comparative #1 #3 equal/3, project col:Student/LName #4", "alternatives": "select tbl:Students, project tbl:Cats #1, project col:Cats/age #2, comparative #1 #3 equal/3, project col:Students/last_name #4"}
{"input": "Return the number of flights.", "prediction": "select tbl:flight, aggregate count #1", "alternatives": "select tbl:flights, aggregate count #1"}
{"input": "Give the code of the airport with the least flights.", "prediction": "select col:flight, project tbl:flight #1, group #2 #1, superlative #1 #3, project col:airport/code #4", "alternatives": "select tbl:airports, project tbl:flights #1, group #2 #1, superlative #1 #3, project col:airports/AirportCode #4"}
{"input": "How much does the youngest dog weigh?", "prediction": "select tbl:dog, project col:dog/Weight #1, superlative #1 #2, project col:dog/Weight #3", "alternatives": "select tbl:dog, project col:dog/Weight #1, superlative #1 #2"}
{"input": "What is the number of employees from each city?", "prediction": "select col:Addresses, project tbl:Employees #1, group #2 #1, union #1 #3", "alternatives": "select col:employee, project tbl:employee #1, group #2 #1, union #1 #3"}
{"input": "Return the number of airlines in the USA.", "prediction": "select tbl:airlines, comparative #1 #1 equal/USA col:airlines/country, aggregate count #2", "alternatives": "select tbl:airlines, comparative #1 #1 equal/USA col:airlines/continents, aggregate count #2"}
{"input": "What are the names, countries, and ages for every singer in descending order of age?", "prediction": "select tbl:song, project col:artist/artist_name #1, project col:artist/country #1, project col:artist/age #1, union #2 #3 #4, sort #5 #4 descending", "alternatives": "select tbl:singer, project col:singer/Name #1, project col:singer/Country #1, project col:singer/Age #1, union #2 #3 #4, sort #5 #4 descending"}
{"input": "What is the name of the visitor who visited both a museum opened before 2009 and a museum opened after 2011?", "prediction": "select tbl:museum, comparative #1 #1 great/2011 col:museum/Open_Year, comparative #1 #1 less/2009 col:museum/Open_Year, project col:visitors/Name #1, intersection #4 #2 #3", "alternatives": "select tbl:museum, comparative #1 #1 great/2011 col:museum/Open_Year, comparative #1 #1 less/2009 col:museum/Open_Year, project tbl:visitor #1, intersection #4 #2 #3, project col:visitor/Name #5"}
{"input": "Which customers have both \"On Road\" and \"Shipped\" as order status? List the customer ids.", "prediction": "select tbl:Customers, project tbl:Orders #1, comparative #1 #2 equal/On Road, comparative #1 #2 equal/Shipped, intersection #1 #3 #4, project col:Customers/customer_id #5", "alternatives": "select tbl:Customers, project tbl:Orders #1, project col:Orders/order_status #2, comparative #1 #3 equal/On Road, comparative #1 #3 equal/Shipped, intersection #1 #4 #5, project col:Customers/customer_id #6"}
{"input": "Show ids for all templates that are used by more than one document.", "prediction": "select col:Documents, project tbl:Documents #1, group #2 #1, comparative #1 #3 great/1, project col:Documents/template_id #4", "alternatives": "select tbl:Documents, project tbl:Documents #1, group #2 #1, comparative #1 #3 great/1, project col:Documents/Template_ID #4"}
{"input": "What are the titles of movies and books corresponding to companies incorporated in China?", "prediction": "select tbl:film, comparative #1 #1 equal/China col:company/Country, project col:book/Title #2, project col:book/Title #3, union #4 #5", "alternatives": "select tbl:Movie, comparative #1 #1 equal/China col:Companies/country, project col:Movie/title #2, project col:Books/title #2, union #3 #4"}
{"input": "How many movie directors are there?", "prediction": "select tbl:Movie, aggregate count #1", "alternatives": "select col:movie, aggregate count #1"}
{"input": "For students who have pets, how many pets does each student have? list their ids instead of names.", "prediction": "select tbl:Students, comparative #1 #1 tbl:Pets, project col:Students/student_id #2, select col:Pets, project col:Pets/pet_name #2, union #3 #4", "alternatives": "select tbl:Students, comparative #1 #1 tbl:Pets, project col:Students/student_id #2, select col:Pets, project col:Person/name #2, union #3 #4"}
{"input": "Find the number of distinct name of losers.", "prediction": "select col:perpetrator, comparative #1 #1 tbl:loser, aggregate count #2", "alternatives": "select col:player, comparative #1 #1 tbl:perpetrator, aggregate count #2"}
{"input": "Count the number of United Airlines flights that arrive in Aberdeen.", "prediction": "select tbl:flight, comparative #1 #1 equal/Aberdeen col:airport/city, aggregate count #2", "alternatives": "select val:airlines, project tbl:flights #1, comparative #2 #2 equal/Aberdeen col:airports/City, aggregate count #3"}
{"input": "Find the codes of countries that have more than 50 players.", "prediction": "select col:country, project tbl:country #1, group #2 #1, comparative #1 #3 great/50, project col:country/Country_code #4", "alternatives": "select col:country, project tbl:country #1, group #2 #1, project col:country/Country_code #4, comparative #1 #3 great/50"}
{"input": "How many documents do we have?", "prediction": "select tbl:Documents, aggregate count #1", "alternatives": "select tbl:Ref_Document_ID, aggregate count #1"}
{"input": "Find the total ranking points for each player and their first name.", "prediction": "select col:player, project col:player/Ranking_Points #1, group #2 #1, project col:player/FirstName #1, union #3 #4", "alternatives": "select tbl:player, project col:player/Ranking_Points #1, group #2 #1, project col:player/FirstName #1, union #3 #4"}
{"input": "Show all paragraph ids and texts for the document with name 'Welcome to NY'.", "prediction": "select tbl:Documents, project col:Documents/document_name #1, comparative #1 #2 equal/Welcome to NY, project col:Documents/paragraph_id #3, project col:Documents/text_code #3, union #4 #5", "alternatives": "select tbl:Documents, project col:Documents/Document_Name #1, comparative #1 #2 equal/Welcome to NY, project tbl:Paragraphs #3, project col:Paragraphs/Paragraph_ID #4, project col:Paragraphs/Paragraph_Text #4, union #5 #6"}
{"input": "Find the year that has the most number of matches.", "prediction": "select col:match, project tbl:match #1, group #2 #1, superlative #1 #3", "alternatives": "select col:match_season, project none #1, group #2 #1, superlative #1 #3"}
{"input": "Show all template type codes and number of templates for each.", "prediction": "select col:Ref_Template_Types, project col:Ref_Template_Types/Template_Type_Code #1, group #1 #2, union #2 #3", "alternatives": "select col:Customer_Templates, project col:Customer_Templates/Template_Type_Code #1, project tbl:Customer_Templates #1, group #3 #1, union #2 #4"}
{"input": "Show the hometowns shared by at least two teachers.", "prediction": "select col:teachers, project tbl:teachers #1, group #2 #1, comparative #1 #3 greatequal/2", "alternatives": "select col:teacher, project tbl:teacher #1, group #2 #1, comparative #1 #3 greatequal/2"}
{"input": "What is the airport name for airport 'AKO'?", "prediction": "select tbl:airport, project col:airport/name #1, comparative #2 #1 equal/AKO", "alternatives": "select tbl:airport, comparative #1 #1 equal/AKO col:airport/name, project col:airport/name #2"}
{"input": "Return the template type code of the template that is used by a document named Data base.", "prediction": "select tbl:Documents, comparative #1 #1 equal/Data base col:Documents/document_name, project tbl:Templates #2, project col:Templates/template_type_code #3", "alternatives": "select tbl:Documents, project col:Templates/template_type_code #3, project tbl:Templates #2, comparative #1 #1 equal/Data base col:Documents/document_name"}
{"input": "What is the name of the customer who has the largest number of orders?", "prediction": "select tbl:Customers, project tbl:Orders #1, group #2 #1, superlative #1 #3, project col:Customers/customer_name #4", "alternatives": "select col:Customers, project tbl:Orders #1, group #2 #1, superlative #1 #3, project col:Customers/customer_name #4"}
{"input": "What are the average ages of losers and winners across matches?", "prediction": "select tbl:match, project col:match/Launcher #1, project col:match/Winner #1, aggregate avg #2, aggregate avg #3", "alternatives": "select tbl:matches, project col:matches/loser_age #1, project col:matches/winner_age #1, project col:matches/loser_age #2, project col:matches/winner_age #3, aggregate avg #4, aggregate avg #5, union #6 #7"}
{"input": "Find the name of tourney that has more than 10 matches.", "prediction": "select tbl:turner, project tbl:match #1, group #2 #1, comparative #1 #3 great/10, project col:turner/name #4", "alternatives": "select col:matches, project tbl:matches #1, group #2 #1, comparative #1 #3 great/10, project col:matches/tourney_name #4"}
{"input": "Find the number of players for each hand type.", "prediction": "select col:Player, project tbl:Player #1, group #2 #1, union #1 #3", "alternatives": "select col:players, project tbl:players #1, group #2 #1, union #1 #3"}
{"input": "Show the years, book titles, and publishers for all books, in descending order by year.", "prediction": "select tbl:book, project col:book/Year #1, project col:book/Title #1, project col:book/Publisher #1, union #2 #3 #4, sort #5 #2 descending", "alternatives": "select tbl:book, project col:book/Year #1, project col:book/Title #1, project col:book/Publishers #1, union #2 #3 #4, sort #5 #2 descending"}
{"input": "Give the airline with abbreviation 'UAL'.", "prediction": "select col:airlines, project col:airlines/abbreviation #1, comparative #1 #2 equal/UAL", "alternatives": "select col:airlines, project col:airlines/abbreviation #1, comparative #1 #2 equal/UAL"}
{"input": "List the name and tonnage ordered by in descending alphabetical order for the names.", "prediction": "select tbl:name, project col:ship/Tonnage #1, project col:ship/Name #1, union #2 #3, sort #4 #2 descending", "alternatives": "select tbl:name, union #2 #3, project col:ship/Name #1, project col:ship/Tonnage #1, sort #4 #2 descending"}
{"input": "Which year had the most matches?", "prediction": "select col:match, project tbl:match #1, group #2 #1, superlative #1 #3", "alternatives": "select tbl:matches, project col:matches/year #1, group #1 #2, superlative #2 #3"}
{"input": "What are the names of the stadiums without any concerts?", "prediction": "select tbl:stadium, comparative #1 #1 tbl:convention, discard #1 #2, project col:stadium/name #3", "alternatives": "select tbl:stadium, discard #1 #2, comparative #1 #1 tbl:convention, project col:stadium/name #3"}
{"input": "Which customers have both \"On Road\" and \"Shipped\" as order status? List the customer names.", "prediction": "select tbl:Customers, project tbl:Orders #1, comparative #1 #2 equal/On Road, comparative #1 #2 equal/Shipped, intersection #1 #3 #4, project col:Customers/customer_name #5", "alternatives": "select tbl:Customer_Orders, comparative #1 #1 equal/On Road col:Customer_Orders/order_status, comparative #1 #1 equal/Shipped col:Customer_Orders/order_status, intersection #1 #2 #3"}
{"input": "How many documents are using the template with type code 'PPT'?", "prediction": "select tbl:Document_Templates, project col:Document_Templates/Template_Type_Code #1, comparative #1 #2 equal/PPT, aggregate count #3", "alternatives": "select tbl:Document_Templates, project col:Document_Templates/Template_Type_Code #1, aggregate count #3, comparative #1 #2 equal/PPT"}
{"input": "What is the first name and gender of the all the students who have more than one pet?", "prediction": "select tbl:Student, project tbl:Pets #1, group #2 #1, comparative #1 #3 great/1, project col:Student/Fname #4, project col:Student/Gender #4, union #5 #6", "alternatives": "select tbl:Student, group #2 #1, project tbl:Pets #1, comparative #1 #3 great/1, project col:Student/Fname #4, project col:Student/Gender #4, union #5 #6"}
{"input": "Give the airport code and airport name corresonding to the city Anthony.", "prediction": "select val:airport, project col:airport/Airport_Code #1, project col:airport/Airport_Name #1, union #2 #3", "alternatives": "select tbl:airport, project col:airport/code #1, project col:airport/name #1, union #2 #3, comparative #4 #1 equal/Antony"}
{"input": "What are the first names of all players, and their average rankings?", "prediction": "select tbl:player, project col:player/FirstName #1, project col:player/Ranking #1, aggregate avg #3, union #2 #4", "alternatives": "select tbl:player, project col:player/FirstName #1, project col:player/Ranking #1, group #3 #1, union #2 #4"}
{"input": "Find the names of stores whose number products is more than the average number of products.", "prediction": "select tbl:store, project tbl:product #1, group #2 #1, aggregate avg #3, comparative #1 #3 great/#4, project col:store/Store_Name #5", "alternatives": "select tbl:shop, project col:shop/Number_products #1, group #2 #1, aggregate avg #3, comparative #1 #3 great/#4, project col:shop/Name #5"}
{"input": "Find the id and name of the museum that has the most staff members?", "prediction": "select tbl:Museum, project tbl:Staff #1, group #2 #1, superlative #1 #3, project col:Museum/museum_id #4, project col:Museum/museum_name #4, union #5 #6", "alternatives": "select tbl:Museum, project tbl:Staff #1, group #2 #1, superlative #1 #3, project col:Museum/muse_id #4, project col:Museum/museum_name #4, union #5 #7"}
{"input": "What are the names and release years for all the songs of the youngest singer?", "prediction": "select tbl:song, project col:song/song_name #1, superlative #1 #2, project col:song/song_release_year #3, project col:song/song_name #3, union #4 #5", "alternatives": "select tbl:song, project col:song/song_name #1, superlative #1 #2, project col:song/song_release_year #3, project col:song/song_name #3, union #5 #4"}
{"input": "Find the id of the customers who have order status both \"On Road\" and \"Shipped\".", "prediction": "select tbl:Customer_Orders, project tbl:Customer_Orders #1, comparative #1 #2 equal/On Road, comparative #1 #2 equal/Shipped, intersection #1 #3 #4, project col:Customers/customer_id #5", "alternatives": "select tbl:Customers, project tbl:Orders #1, project col:Orders/order_status #2, comparative #1 #3 equal/On Road, comparative #1 #3 equal/Shipped, intersection #1 #4 #5, project col:Customers/customer_id #6"}
{"input": "Show ids for all templates that are used by more than one document.", "prediction": "select col:Documents, project tbl:Documents #1, group #2 #1, comparative #1 #3 great/1, project col:Documents/template_id #4", "alternatives": "select col:Documents, group #2 #1, project tbl:Documents #1, comparative #1 #3 great/1, project col:Documents/template_id #4"}
{"input": "What are the manager name and district of the shop that sells the largest number of products?", "prediction": "select tbl:shop, project tbl:product #1, group #2 #1, superlative #1 #3, project col:shop/Manager_Name #4, project col:shop/District #4, union #5 #6", "alternatives": "select tbl:shop, project col:shop/Number_products #1, group #2 #1, superlative #1 #3, project col:shop/Manager_name #4, project col:shop/Manager_name #5, project col:shop/District #4, union #6 #7"}
{"input": "find the minimum and maximum number of products of all stores.", "prediction": "select tbl:store, project col:store/Num_of_Products #1, aggregate col:product/Num_of_Products #2, aggregate min #3, aggregate max #3, union #4 #5", "alternatives": "select tbl:store, project col:store/Product_ID #1, aggregate col:product/Num_of_Products #2, aggregate min #3, aggregate max #3, union #4 #5"}
{"input": "What is the average, maximum, and minimum budget for all movies before 2000.", "prediction": "select tbl:Movie, comparative #1 #1 less/2000 col:Movie/year, project col:Movie/budget #2, aggregate avg #3, aggregate max #3, aggregate min #3, union #4 #5 #6", "alternatives": "select tbl:Movie, aggregate avg #3, project col:Movie/budget #2, comparative #1 #1 less/2000 col:Movie/year, aggregate max #3, aggregate min #3, union #4 #5 #6"}
{"input": "Find the number of matches happened in each year.", "prediction": "select col:match, project tbl:match #1, group #2 #1, union #1 #3", "alternatives": "select col:matches, project tbl:matches #1, group #2 #1, union #1 #3"}
{"input": "Which employee received the biggest bonus? Give me the employee name.", "prediction": "select tbl:employee, project col:employee/bonus #1, superlative #1 #2, project col:employee/name #3", "alternatives": "select tbl:employee, project col:evaluation/Bonus #1, superlative #1 #2, project col:employee/Name #3"}
{"input": "How many different store locations are there?", "prediction": "select col:district, aggregate count #2", "alternatives": "select tbl:shop, aggregate count #2"}
{"input": "What is the id and weight of every pet who is older than 1?", "prediction": "select tbl:Pets, comparative #1 #1 great/1 col:Pets/age, project col:Pets/id #2, project col:Pets/weight #2, union #3 #4", "alternatives": "select tbl:pet, comparative #1 #1 great/1 col:pet/Age, project col:pet/id #2, project col:pet/Weight #2, union #3 #4"}
{"input": "How many templates have template type code CV?", "prediction": "select tbl:Templates, project tbl:Templates #1, comparative #1 #2 equal/CV, aggregate count #3", "alternatives": "select tbl:Customer_Templates, project tbl:Customer_Templates #1, comparative #1 #2 equal/ CV, aggregate count #3"}
{"input": "What are the names of the singers and number of concerts for each person?", "prediction": "select col:concerts, project col:song/artist_name #1, project tbl:concerts #1, group #3 #1, union #2 #4", "alternatives": "select col:concerts, project tbl:concerts #1, project col:song/artist_name #1, group #3 #1, union #2 #4"}
{"input": "What are airport names at City 'Aberdeen'?", "prediction": "select tbl:airport, project col:airport/city #1, comparative #1 #2 equal/Aberdeen, project col:airport/name #3", "alternatives": "select tbl:airport, project col:airport/city #1, project col:airport/name #3, comparative #1 #2 equal/Aberdeen"}
{"input": "Find the weight of the youngest dog.", "prediction": "select tbl:dog, project col:dog/Weight #1, superlative #1 #2, project col:dog/Weight #3", "alternatives": "select val:Pets, project col:Pets/pet_age #1, superlative #1 #2, project col:Pets/weight #3"}
{"input": "Return the document id, template id, and description for the document with the name Robbin CV.", "prediction": "select tbl:Documents, comparative #1 #1 equal/Robbin CV col:Documents/document_name, project col:Documents/document_id #2, project col:Documents/template_id #2, project col:Documents/document_description #2, union #3 #4 #5", "alternatives": "select tbl:Documents, project col:Documents/document_name #1, comparative #1 #2 equal/Robbin CV, project col:Documents/document_id #3, project col:Documents/template_id #3, project col:Documents/document_description #3, union #4 #5 #6"}
{"input": "Which customers made orders between 2009-01-01 and 2010-01-01? Find their names.", "prediction": "select tbl:Customers, comparative #1 #1 lessequal/2010-01-01 col:Orders/order_date, comparative #2 #2 greatequal/2009-01-01 col:Customers/order_date, project col:Customers/customer_name #3", "alternatives": "select tbl:Customers, comparative #1 #1 lessequal/2010-01-01 col:Orders/date_order, comparative #2 #2 greatequal/2009-01-01 col:Customers/date_order, project col:Customers/customer_name #3."}
{"input": "Show names for all stadiums except for stadiums having a concert in year 2014.", "prediction": "select tbl:stadium, project tbl:conzert #1, project col:conzert/Year #2, comparative #1 #3 equal/2014, discard #1 #4, project col:stadium/name #5", "alternatives": "select tbl:stadium, project tbl:concern #1, project col:concern/Year #2, comparative #1 #3 equal/2014, discard #1 #4, project col:stadium/name #5"}
{"input": "Show all distinct publishers for books.", "prediction": "select tbl:book, project col:book/Publisher #1", "alternatives": "select tbl:book_club, project col:book_club/Publisher #1"}
{"input": "Find the average number of staff working for the museums that were open before 2009.", "prediction": "select tbl:museen, comparative #1 #1 less/2009 col:museum/Open_Year, project col:museum/Staff #2, group #3 #2, aggregate avg #4", "alternatives": "select tbl:museen, comparative #1 #1 less/2009 col:museum/Open_Year, group #3 #2, project col:museum/Staff #2, aggregate avg #4"}
{"input": "what is the name and nation of the singer who have a song having 'Hey' in its name?", "prediction": "select tbl:song, project tbl:song #1, comparative #1 #2 like%Hey%, project col:artist/artist_name #3, project col:artist/nationality #3, union #4 #5", "alternatives": "select tbl:song, project tbl:song #1, comparative #1 #2 like%Hey%, project col:song/artist_name #3, project col:song/artist_name #4, project col:song/nationality #3, union #5 #6"}
{"input": "How many museums were opened after 2013 or before 2008?", "prediction": "select tbl:museen, comparative #1 #1 great/2013 col:museen/Open_Year, comparative #1 #1 less/2008 col:museen/Open_Year, union #2 #3, aggregate count #4", "alternatives": "select tbl:museen, project col:museen/Open_Year #1, comparative #1 #2 great/2013, comparative #1 #2 less/2008, union #3 #4, aggregate count #5"}
{"input": "Which customers have both \"On Road\" and \"Shipped\" as order status? List the customer names.", "prediction": "select tbl:Customers, project tbl:Orders #1, comparative #1 #2 equal/On Road, comparative #1 #2 equal/Shipped, intersection #1 #3 #4, project col:Customers/customer_name #5", "alternatives": "select tbl:Customers, project tbl:Orders #1, project col:Customers/customer_name #5, comparative #1 #2 equal/Shipped, intersection #1 #3 #4, comparative #1 #2 equal/On Road"}
{"input": "Count the number of templates of the type CV.", "prediction": "select tbl:Templates, project tbl:Templates #1, comparative #2 #1 equal/CV, aggregate count #3", "alternatives": "select tbl:Visits_Templates, project tbl:Visits_Templates #1, comparative #2 #1 equal/CV, aggregate count #3"}
{"input": "How many templates have template type code CV?", "prediction": "select tbl:Templates, project tbl:Templates #1, comparative #1 #2 equal/CV, aggregate count #3", "alternatives": "select tbl:Templates, project tbl:Templates #1, aggregate count #3, comparative #1 #2 equal/CV"}
{"input": "What is the average, minimum, and maximum age of all singers from France?", "prediction": "select tbl:song, comparative #1 #1 equal/France col:song/country, project col:song/age #2, aggregate avg #3, aggregate min #3, aggregate max #3, union #4 #5 #6", "alternatives": "select tbl:song, comparative #1 #1 equal/France col:song/country, project col:song/age #2, aggregate avg #3, aggregate min #3, aggregate max #3, union #4 #5 #7"}
{"input": "What are the different template type codes, and how many documents use each type?", "prediction": "select tbl:Documents, project col:Documents/Template_Type_Code #1, group #1 #2, union #2 #3", "alternatives": "select tbl:Documents, group #1 #2, project col:Documents/Template_Type_Code #1, union #2 #3"}
{"input": "What is the age and hometown of every teacher?", "prediction": "select tbl:teachers, project col:teachers/Age #1, project col:teachers/Hometown #1, union #2 #3", "alternatives": "select tbl:teacher, project col:teacher/Age #1, project col:teacher/Hometown #1, union #2 #3"}
{"input": "What are the ids and texts of paragraphs in the document titled 'Welcome to NY'?", "prediction": "select tbl:Documents, comparative #1 #1 equal/Welcome to NY col:Documents/document_name, project col:Documents/document_id #2, project col:Documents/text_code #2, union #3 #4", "alternatives": "select tbl:Documents, comparative #1 #1 equal/Welcome to NY col:Documents/Document_Name, project tbl:Paragraphs #2, project col:Paragraphs/Paragraph_ID #3, project col:Paragraphs/Paragraph_Text #3, union #4 #5"}
{"input": "Find the maximum weight for each type of pet. List the maximum weight and pet type.", "prediction": "select tbl:Pets, project col:Pets/weight #1, group #2 #1, union #1 #3", "alternatives": "select tbl:Pets, project col:Pets/weight #1, union #1 #3, group #2 #1"}
{"input": "Find the number of distinct type of pets.", "prediction": "select tbl:Pets, aggregate count #2", "alternatives": "select tbl:Pets, comparative #1 #1 none, aggregate count #2"}
{"input": "Find the number of pets whose weight is heavier than 10.", "prediction": "select tbl:Person, project col:Person/weight #1, comparative #1 #2 great/10, aggregate count #3", "alternatives": "select tbl:Pets, project col:Pets/weight #1, comparative #1 #2 great/10, count #3"}
{"input": "What is the first name and country code of the player with the most tours?", "prediction": "select tbl:Player, project tbl:Tourist_Attraction #1, group #2 #1, superlative #1 #3, project col:Player/first_name #4, project col:Player/country_code #4, union #5 #6", "alternatives": "select tbl:Player, project tbl:Tourist_Attraction #1, group #2 #1, superlative #1 #3, project col:Player/pName #4, project col:Player/Country_Code #4, union #5 #6"}
{"input": "What is the document id and name with greatest number of paragraphs?", "prediction": "select tbl:Documents, project tbl:Paragraphs #1, group #2 #1, superlative #1 #3, project col:Documents/document_id #4, project col:Documents/document_name #4, union #5 #6", "alternatives": "select tbl:Documents, project tbl:Paragraphs #1, group #2 #1, superlative #1 #3, project col:Paragraphs/Document_ID #4, project col:Documents/Document_Name #4, union #5 #6"}
{"input": "What is the id of the order which has the most items?", "prediction": "select col:Order_Items, project tbl:Order_Items #1, group #2 #1, superlative #1 #3, project col:Order_Items/order_id #4", "alternatives": "select col:Order_Items, project tbl:Order_Items #1, superlative #1 #3, group #2 #1, project col:Order_Items/order_id #4"}
{"input": "How many 'United Airlines' flights depart from Airport 'AHD'?", "prediction": "select tbl:flight, comparative #1 #1 equal/AHD col:airport/Airport_Name, aggregate count #2", "alternatives": "select tbl:flights, comparative #1 #1 equal/United Airlines col:airlines/Airline, project col:flights/SourceAirport #2, comparative #2 #3 equal/AHD, aggregate count #4"}
{"input": "List the name and tonnage ordered by in descending alphabetical order for the names.", "prediction": "select tbl:name, project col:ship/Tonnage #1, project col:ship/Name #1, union #2 #3, sort #4 #2 descending", "alternatives": "select col:ship, select col:ship, union #1 #2, sort #3 #1 descending"}
{"input": "How many airlines are from USA?", "prediction": "select tbl:airlines, comparative #1 #1 equal/USA col:airlines/country, aggregate count #2", "alternatives": "select tbl:airline, comparative #1 #1 equal/USA col:airlines/country, aggregate count #2"}
{"input": "What are the name and results of the battles when the bulgarian commander is not 'Boril'", "prediction": "select tbl:battle, project col:battle/Commander #1, comparative #1 #2 notequal/Boril, project col:battle/Name #3, project col:battle/Result #3, union #4 #5", "alternatives": "select tbl:battle, union #4 #5, comparative #1 #2 notequal/Boril, project col:battle/Name #3, project col:battle/Result #3, project col:battle/Commander #1"}
{"input": "Find the total number of players.", "prediction": "select tbl:player, aggregate count #1", "alternatives": "select tbl:player, aggregate counts #1"}
{"input": "find the name of employee who was awarded the most times in the evaluation.", "prediction": "select tbl:employee, project tbl:evaluation #1, group #2 #1, superlative #1 #3, project col:employee/name #4", "alternatives": "select tbl:employee, group #2 #1, project tbl:evaluation #1, superlative #1 #3, project col:employee/name #4"}
{"input": "How many flights arriving in Aberdeen city?", "prediction": "select tbl:flight, comparative #1 #1 equal/Aberdeen col:airport/city, aggregate count #2", "alternatives": "select tbl:flight, project tbl:airport #1, comparative #1 #2 equal/Aberdeen, aggregate count #3"}
{"input": "Count the number of employees for each city.", "prediction": "select col:Employee, project tbl:Employee #1, group #2 #1, union #1 #3", "alternatives": "select col:Addresses, project tbl:Employees #1, group #2 #1, union #1 #3"}
{"input": "What are the names of the teachers ordered by ascending age?", "prediction": "select tbl:teachers, project col:teachers/Name #1, project col:teachers/Age #1, sort #2 #3 ascending", "alternatives": "select tbl:teachers, project col:teachers/Age #1, project col:teachers/Name #1, sort #2 #3 ascending"}
{"input": "List the airport code and name in the city of Anthony.", "prediction": "select tbl:airport, project col:airport/code #1, project col:airport/name #1, union #2 #3, comparative #4 #1 equal/Anthony", "alternatives": "select tbl:airport, project col:airport/code #1, comparative #4 #1 equal/Anthony, union #2 #3, project col:airport/name #1"}
{"input": "How many airlines are from USA?", "prediction": "select tbl:airlines, comparative #1 #1 equal/USA col:airlines/country, aggregate count #2", "alternatives": "select tbl:airlines, comparative #1 #1 equal/USA col:airlines/Country, aggregate count #2"}
{"input": "What are the airline names and abbreviations for airlines in the USA?", "prediction": "select tbl:airlines, comparative #1 #1 equal/USA col:airlines/country, project col:airlines/name #2, project col:airlines/abbreviation #2, union #3 #4", "alternatives": "select tbl:airlines, project col:airlines/name #2, comparative #1 #1 equal/USA col:airlines/country, project col:airlines/abbreviation #2, union #3 #4"}
{"input": "What are the ids of templates with template type code PP or PPT?", "prediction": "select tbl:Masks, project tbl:Masks #1, comparative #1 #2 equal/PP, comparative #1 #2 equal/PPT, union #3 #4, project col:Masks/template_id #5", "alternatives": "select tbl:Masks, project tbl:Masks #1, union #3 #4, comparative #1 #2 equal/PPT, comparative #1 #2 equal/PP, project col:Masks/template_id #5"}
{"input": "What is the name of the shop that is hiring the largest number of employees?", "prediction": "select tbl:shop, project tbl:employment #1, group #2 #1, superlative #1 #3, project col:shop/Shop_Name #4", "alternatives": "select tbl:shop, project col:shop/Shop_Name #4, group #2 #1, superlative #1 #3, project tbl:employment #1"}
{"input": "How many total tours were there for each ranking date?", "prediction": "select col:Tourist_Rankings, project tbl:Tourist_Rankings #1, group #2 #1, union #1 #3", "alternatives": "select col:Tourist_Rankings, union #1 #3, group #2 #1, project tbl:Tourist_Rankings #1"}
{"input": "What is the average age of the visitors whose membership level is not higher than 4?", "prediction": "select tbl:Visitors, project col:Visitors/membership_level #1, comparative #1 #2 notequal/4, project col:Visitors/age #3, aggregate avg #4", "alternatives": "select tbl:visitor, project col:visitor/Level_of_membership #1, comparative #1 #2 lessequal/4, project col:visitor/Age #3, aggregate avg #4"}
{"input": "How many different winners both participated in the WTA Championships and were left handed?", "prediction": "select col:results, comparative #1 #1 equal/WTA Championship col:races/name, comparative #1 #1 equal/left col:races/name, intersection #1 #2 #3", "alternatives": "select col:results, intersection #1 #2 #3, comparative #1 #1 equal/left col:races/name, comparative #1 #1 equal/WTA Championship col:races/name"}
{"input": "show the name of all bridges that was designed by american archtect, and sort the result by the bridge feet length.", "prediction": "select tbl:bridge, comparative #1 #1 equal/American archtect col:architecture/Design, project col:bridge/Name #2, project col:bridge/Feet #2, sort #3 #4", "alternatives": "select tbl:bridge, comparative #1 #1 equal/American archtect col:architecture/Name, project col:bridge/Name #2, project col:bridge/Feet #2, sort #3 #4"}
{"input": "List the first name and birth date of all players from the country with code USA.", "prediction": "select tbl:Player, project col:Player/country #1, project col:Player/country #2, comparative #1 #3 equal/USA, project col:Player/first_name #4, project col:Player/birth_date #4, union #5 #6", "alternatives": "select tbl:players, project col:players/country_code #1, project col:players/country_code #2, comparative #1 #3 equal/USA, project col:players/first_name #4, project col:players/birth_date #4, union #5 #6"}
{"input": "List all singer names in concerts in year 2014.", "prediction": "select tbl:concerts, project col:concerts/Year #1, comparative #1 #2 equal/2014, project col:song/Name #3", "alternatives": "select tbl:concerts, project col:concerts/Year #1, comparative #1 #2 equal/2014, project col:song/Songer #3"}
{"input": "What is the name and country of origin of every singer who has a song with the word 'Hey' in its title?", "prediction": "select tbl:song, project tbl:song #1, project col:song/song_title #2, comparative #1 #3 like%Hey%, project col:artist/artist_name #4, project col:artist/country #4, union #5 #6", "alternatives": "select tbl:song, union #5 #6, project col:song/song_title #2, comparative #1 #3 like%Hey%, project col:artist/artist_name #4, project col:artist/country #4, project tbl:song #1"}
{"input": "List the name and date the battle that has lost the ship named 'Lettice' and the ship named 'HMS Atalanta'", "prediction": "select tbl:ship, comparative #1 #1 equal/Lettice col:ship/Name, comparative #1 #1 equal/HMS Atalanta col:ship/Name, intersection #1 #2 #3, project col:ship/Name #4, project col:battle/Date #4, union #5 #6", "alternatives": "select tbl:ship, comparative #1 #1 equal/Lettice col:ship/Name, intersection #1 #2 #3, comparative #1 #1 equal/HMS Atalanta col:ship/Name, project col:ship/Name #4, project col:battle/Date #4, union #5 #6"}
{"input": "Return the name, location and district of all shops in descending order of number of products.", "prediction": "select tbl:shop, project col:shop/Shop_Name #1, project col:shop/Location #1, project col:shop/District #1, union #2 #3 #4, sort #5 #4 descending", "alternatives": "select tbl:shop, project col:shop/Shop_Name #1, project col:shop/Location #1, project col:shop/District #1, union #2 #3 #4, sort #6 #5 descending"}
{"input": "Return the name, location and district of all shops in descending order of number of products.", "prediction": "select tbl:shop, project col:shop/Shop_Name #1, project col:shop/Location #1, project col:shop/District #1, union #2 #3 #4, sort #5 #4 descending", "alternatives": "select tbl:shop, project col:shop/Name #1, project col:shop/Location #1, project col:shop/District #1, project col:shop/Number_products #1, group #5 #1, union #2 #3 #4, sort #7 #6 descending"}
{"input": "What is the document name and template id for document with description with the letter 'w' in it?", "prediction": "select tbl:Documents, comparative #1 #1 like%w% col:Documents/document_description, project col:Documents/document_name #2, project col:Documents/template_id #2, union #3 #4", "alternatives": "select tbl:Documents, project col:Documents/Document_Description #1, comparative #1 #2 like%w%, project col:Documents/Document_Name #3, project col:Documents/Template_ID #3, union #4 #5"}
{"input": "Show name, country, age for all singers ordered by age from the oldest to the youngest.", "prediction": "select tbl:song, project col:artist/artist_name #1, project col:artist/country #1, project col:artist/age #1, union #2 #3 #4, sort #5 #4 descending", "alternatives": "select tbl:song, project col:song/artist_name #1, project col:song/country #1, project col:song/age #1, project col:song/age #1, union #2 #3 #4, sort #5 #4 descending"}
{"input": "What is the title and director for the movie with highest worldwide gross in the year 2000 or before?", "prediction": "select tbl:Movie, project col:Movie/Gross_in_dollar #1, group #2 #1, comparative #1 #3 lessequal/2000, superlative #1 #4, project col:Movie/Title #5, project col:Movie/Director #5, union #6 #7", "alternatives": "select tbl:film, project col:film/Gross_in_dollar #1, group #2 #1, comparative #1 #3 lessequal/2000, superlative #1 #4, project col:film/Title #5, project col:film/Directed_by #5, union #6 #7"}
{"input": "Find the manager name and district of the shop whose number of products is the largest.", "prediction": "select tbl:shop, project col:shop/Product_ID #1, group #2 #1, superlative #1 #3, project col:shop/Manager_Name #4, project col:shop/District #4, union #5 #6", "alternatives": "select tbl:shop, union #5 #6, group #2 #1, superlative #1 #3, project col:shop/Manager_Name #4, project col:shop/District #4, project col:shop/Product_ID #1"}
{"input": "How many 'United Airlines' flights go to Airport 'ASY'?", "prediction": "select tbl:flight, comparative #1 #1 equal/United Airlines col:flight/origin, comparative #2 #2 equal/ASY col:airport/name, aggregate count #3", "alternatives": "select tbl:flight, comparative #2 #2 equal/ASY col:airport/name, comparative #1 #1 equal/United Airlines col:flight/origin, aggregate count #3"}
{"input": "Which order has the most recent shipment? Give me the order id.", "prediction": "select col:Shipments, project tbl:Shipments #1, superlative #1 #2, project col:Shipments/order_id #3", "alternatives": "select tbl:Shipments, project col:Shipments/order_id #1, superlative #1 #2, project col:Shipments/order_id #3"}
{"input": "Sort all the shops by number products in descending order, and return the name, location and district of each shop.", "prediction": "select tbl:shop, project col:shop/Product_ID #1, group #2 #1, project col:shop/Shop_Name #1, project col:shop/Location #1, project col:shop/District #1, union #3 #4 #5, sort #6 #5 descending", "alternatives": "select tbl:shop, project col:shop/Product_ID #1, group #2 #1, project col:shop/Shop_Name #1, project col:shop/Location #1, project col:shop/District #1, union #3 #4 #5 descending"}
{"input": "Find the number of flights landing in the city of Aberdeen or Abilene.", "prediction": "select tbl:flight, project tbl:landing #1, comparative #1 #2 equal/Aberdeen, comparative #1 #2 equal/Abilene, union #3 #4, aggregate count #5", "alternatives": "select tbl:flights, project col:airports/City #1, comparative #1 #2 equal/Aberdeen, comparative #1 #2 equal/Abilene, union #3 #4, aggregate count #5"}
{"input": "What are all different template ids used for documents, and how many times were each of them used?", "prediction": "select tbl:Documents, project col:Documents/template_id #1, group #1 #2, union #2 #3", "alternatives": "select tbl:Documents, project col:Documents/Template_ID #1, group #1 #3, union #3 #4"}
{"input": "What is the average, minimum, and maximum age of all singers from France?", "prediction": "select tbl:song, comparative #1 #1 equal/France col:song/country, project col:song/age #2, aggregate avg #3, aggregate min #3, aggregate max #3, union #4 #5 #6", "alternatives": "select tbl:song, union #4 #5 #6, project col:song/age #2, aggregate avg #3, aggregate min #3, aggregate max #3, comparative #1 #1 equal/France col:song/country"}
{"input": "What are the template ids of any templates used in more than a single document?", "prediction": "select tbl:Documents, project tbl:Documents #1, group #2 #1, comparative #1 #3 great/1, project col:Documents/template_id #4", "alternatives": "select tbl:Ref_Templates, project tbl:Documents #1, group #2 #1, comparative #1 #3 great/1, project col:Ref_Templates/model_id #4"}
{"input": "Show all distinct template type codes for all templates.", "prediction": "select tbl:Templates, project col:Templates/Template_Type_Code #1", "alternatives": "select tbl:Templates, project tbl:Templates #1"}
{"input": "Show names of teachers and the number of courses they teach.", "prediction": "select tbl:teachers, project col:teachers/Name #1, project tbl:teaches #1, group #3 #1, union #2 #4", "alternatives": "select col:teacher, project col:teacher/Name #1, project tbl:course_arrange #1, group #3 #1, union #2 #4"}
{"input": "List the first and last name of all players who are left / L hand in the order of birth date.", "prediction": "select tbl:Player, project col:Player/hands #1, comparative #1 #2 equal/L, project col:Player/first_name #3, project col:Player/last_name #3, union #4 #5, sort #6 #5", "alternatives": "select tbl:Player, project col:Player/hands #1, comparative #1 #2 equal/L, union #4 #5, project col:Player/last_name #3, project col:Player/first_name #3, sort #6 #5"}
{"input": "Find the name and age of the visitor who bought the most tickets at once.", "prediction": "select tbl:Visitors, project tbl:Tickets #1, group #2 #1, superlative #1 #3, project col:Visitors/name #4, project col:Visitors/age #4, union #5 #6", "alternatives": "select tbl:Visitors, project tbl:Tickets #1, group #2 #1, superlative #1 #3, project col:Visitors/Name #4, project col:Visitors/Age #4, union #5 #7"}
{"input": "What are the names, themes, and number of singers for every concert?", "prediction": "select tbl:concert, project col:concert/Name #1, project col:concert/Theme #1, project tbl:song #1, group #4 #1, union #2 #3 #5", "alternatives": "select col:concert, project col:concert/concert_Name #1, project col:concert/Theme #1, project tbl:singer_in_concert #1, group #4 #1, union #2 #3 #5"}
{"input": "Show all publishers and the number of books for each publisher.", "prediction": "select col:book, project tbl:book #1, group #2 #1, union #1 #3", "alternatives": "select col:book_club, project tbl:book_club #1, group #2 #1, union #1 #3"}
{"input": "Show all paragraph ids and texts for the document with name 'Welcome to NY'.", "prediction": "select tbl:Documents, project col:Documents/document_name #1, comparative #1 #2 equal/Welcome to NY, project col:Documents/paragraph_id #3, project col:Documents/text_code #3, union #4 #5", "alternatives": "select tbl:Documents, comparative #1 #2 equal/Welcome to NY, project col:Documents/document_name #1, project col:Documents/paragraph_id #3, project col:Documents/text_code #3, union #4 #5"}
{"input": "What are the type codes and descriptions for all template types?", "prediction": "select tbl:Templates, project col:Templates/Template_Type_Code #1, project col:Templates/Template_Description #1, union #2 #3", "alternatives": "select tbl:Ref_Template_Types, project col:Ref_Template_Types/Template_Type_Code #1, project col:Descriptions/Template_Type_Description #1, union #2 #3"}
{"input": "Return the number of flights departing from Aberdeen.", "prediction": "select tbl:flight, comparative #1 #1 equal/Aberdeen col:flight/origin, aggregate count #2", "alternatives": "select tbl:flights, comparative #1 #1 equal/Aberdeen col:airports/City, aggregate count #2"}
{"input": "Which airlines have a flight with source airport AHD?", "prediction": "select col:flight, project tbl:flight #1, project col:airport/source #2, comparative #1 #3 equal/AHD", "alternatives": "select col:flight, comparative #1 #3 equal/AHD, project col:airport/source #2, project tbl:flight #1"}
{"input": "Which airlines have at least 10 flights?", "prediction": "select col:flight, project tbl:flight #1, group #2 #1, comparative #1 #3 greatequal/10", "alternatives": "select col:flight, group #2 #1, project tbl:flight #1, comparative #1 #3 greatequal/10"}
{"input": "List the airport code and name in the city of Anthony.", "prediction": "select tbl:airport, project col:airport/code #1, project col:airport/name #1, union #2 #3, comparative #4 #1 equal/Anthony", "alternatives": "select tbl:airports, project col:airports/code #1, project col:airports/name #1, union #2 #3, comparative #4 #1 equal/Antony"}
{"input": "Find the average number of staff working for the museums that were open before 2009.", "prediction": "select tbl:museen, comparative #1 #1 less/2009 col:museum/Open_Year, project col:museum/Staff #2, group #3 #2, aggregate avg #4", "alternatives": "select tbl:museum, comparative #1 #1 less/2009 col:museum/Open_Year, project col:museum/Staff #2, group #3 #2, aggregate avg #4"}
{"input": "What are the ids, names, and descriptions for all documents?", "prediction": "select tbl:Documents, project col:Documents/Document_ID #1, project col:Documents/Document_Name #1, project col:Documents/Document_Description #1, union #2 #3 #4", "alternatives": "select tbl:Documents, project col:Documents/Document_Description #1, project col:Documents/Document_Name #1, project col:Documents/Document_ID #1, union #2 #3 #4"}
{"input": "How many total tours were there for each ranking date?", "prediction": "select col:Tourist_Rankings, project tbl:Tourist_Rankings #1, group #2 #1, union #1 #3", "alternatives": "select col:rankings, project col:rankings/tours #1, group #2 #1, union #1 #3"}
{"input": "What is the average, maximum, and minimum budget for all movies before 2000.", "prediction": "select tbl:Movie, comparative #1 #1 less/2000 col:Movie/year, project col:Movie/budget #2, aggregate avg #3, aggregate max #3, aggregate min #3, union #4 #5 #6", "alternatives": "select tbl:movie, comparative #1 #1 less/2000 col:movie/Year, project col:movie/Budget_million #2, aggregate avg #3, aggregate max #3, aggregate min #3, union #4 #5 #6"}
{"input": "What are the names of the singers who performed in a concert in 2014?", "prediction": "select tbl:artist, comparative #1 #1 equal/2014 col:concerts/year, project col:artist/name #2", "alternatives": "select tbl:concert, comparative #1 #1 equal/2014 col:concert/Year, project tbl:singer_in_concert #2, project col:singer/Name #3"}
{"input": "What are ids of the all distinct orders, sorted by placement date?", "prediction": "select tbl:Orders, project col:Orders/order_id #1, project col:Orders/placement_date #1, sort #2 #3", "alternatives": "select tbl:Orders, project col:Orders/order_id #1, project col:Orders/date_order_placed #1, sort #2 #3"}
{"input": "What are the template ids with template type description \"Presentation\".", "prediction": "select tbl:Customer_Templates, project tbl:Customer_Templates #1, comparative #1 #2 equal/Presentation, project col:Customer_Templates/template_id #3", "alternatives": "select col:Templates, project tbl:Templates #1, comparative #1 #2 equal/Presentation"}
{"input": "For each hometown, how many teachers are there?", "prediction": "select col:teachers, project tbl:teachers #1, group #2 #1, union #1 #3", "alternatives": "select col:teachers, project tbl:teachers #1, union #1 #3, group #2 #1"}
{"input": "What are the first names and birth dates of players from the USA?", "prediction": "select tbl:Player, comparative #1 #1 equal/USA col:Player/country, project col:Player/first_name #2, project col:Player/birth_date #2, union #3 #4", "alternatives": "select tbl:player, comparative #1 #1 equal/USA col:player/Nationality, project col:player/FirstName #2, project col:player/BirthDate #2, union #3 #4"}
{"input": "Which airlines have less than 200 flights?", "prediction": "select col:flight, project tbl:flight #1, comparative #1 #2 less/200", "alternatives": "select col:flight, project tbl:flight #1, comparative #1 #2 less/200"}
{"input": "Show location and name for all stadiums with a capacity between 5000 and 10000.", "prediction": "select tbl:stadium, project col:stadium/Capacity #1, comparative #1 #2 greatequal/5000, comparative #1 #2 lessequal/10000, intersection #1 #3 #4, project col:stadium/Location #5, project col:stadium/name #5, union #6 #7", "alternatives": "select tbl:stadium, project col:stadium/Capacity #1, comparative #1 #2 lessequal/10000, comparative #1 #2 greatequal/5000, intersection #1 #3 #4, project col:stadium/Location #5, project col:stadium/Name #5, union #6 #7"}
{"input": "What is the template type descriptions for template type code \"AD\".", "prediction": "select tbl:Ref_Template_Types, comparative #1 #1 equal/AD col:Ref_Template_Types/Template_Type_Code, project col:Ref_Template_Types/Template_Type_Description #2", "alternatives": "select tbl:Ref_Template_Types, comparative #1 #1 equal/AD col:Ref_Template_Types/Temple_Type_Code, project col:Ref_Template_Types/Template_Type_Description #2"}
{"input": "What are the ids of templates with template type code PP or PPT?", "prediction": "select tbl:Masks, project tbl:Masks #1, comparative #1 #2 equal/PP, comparative #1 #2 equal/PPT, union #3 #4, project col:Masks/template_id #5", "alternatives": "select tbl:Templates, project col:Templates/Template_Type_Code #1, comparative #1 #2 equal/PP, comparative #1 #2 equal/PPT, union #3 #4, project col:Templates/Template_ID #5"}
{"input": "Which flight numbers correspond to United Airlines flights?", "prediction": "select tbl:flight, comparative #1 #1 equal/United Airlines col:flight/name, project col:flight/flno #2", "alternatives": "select tbl:flights, comparative #1 #1 equal/United Airlines col:airlines/Airline, project col:flights/FlightNo #2"}
{"input": "On which day was the order placed whose shipment tracking number is 3452?", "prediction": "select col:Shipments, project tbl:Shipments #1, project col:Shipments/shipment_tracking_number #2, comparative #1 #3 equal/3452, project col:Shipments/order_placed #4", "alternatives": "select col:Shipments, project tbl:Shipments #1, project col:Shipments/shipment_tracking_number #2, comparative #1 #3 equal/3452, project col:Shipments/date_of_order #4"}
{"input": "Show all paragraph ids and texts for the document with name 'Welcome to NY'.", "prediction": "select tbl:Documents, project col:Documents/document_name #1, comparative #1 #2 equal/Welcome to NY, project col:Documents/paragraph_id #3, project col:Documents/text_code #3, union #4 #5", "alternatives": "select tbl:Documents, comparative #1 #1 equal/Welcome to NY col:Documents/document_name, project col:Documents/paragraph_id #2, project col:Documents/text_code #2, union #3 #4"}
{"input": "Give me a list of distinct product ids from orders placed between 1975-01-01 and 1976-01-01?", "prediction": "select tbl:Orders, comparative #1 #1 greatequal/1975-01-01 col:Orders/date_order_placed, comparative #2 #2 lessequal/1976-01-01 col:Orders/date_order_placed, project col:Orders/product_id #3", "alternatives": "select tbl:Orders, comparative #1 #1 lessequal/1976-01-01 col:Orders/date_order_placed, comparative #2 #2 greatequal/1975-01-01 col:Orders/date_order_placed"}
{"input": "How many different templates do all document use?", "prediction": "select tbl:Document_Templates, project col:Document_Templates/document_type_code #1, aggregate count #3", "alternatives": "select tbl:Documents, aggregate count #2"}
{"input": "What are the codes of template types that have fewer than 3 templates?", "prediction": "select col:Templates, project tbl:Templates #1, group #2 #1, comparative #1 #3 less/3, project col:Templates/Template_Type_Code #4", "alternatives": "select col:Templates, project tbl:Templates #1, project col:Templates/Template_Type_Code #4, comparative #1 #3 less/3, group #2 #1"}
{"input": "Which shops' number products is above the average? Give me the shop names.", "prediction": "select tbl:shop, project col:shop/Product_ID #1, aggregate avg #2, comparative #1 #2 great/#3, project col:shop/Shop_Name #4", "alternatives": "select tbl:shop, project col:shop/Number_products #1, group #2 #1, aggregate avg #3, comparative #1 #3 great/#4, project col:shop/Name #5"}
{"input": "What are the minimum and maximum number of products across all the shops?", "prediction": "select tbl:shop, project col:shop/Num_of_Products #1, aggregate col:shop/Num_of_Products #2, aggregate min #3, aggregate max #3, union #4 #5", "alternatives": "select tbl:shop, project col:shop/Product_Country #1, aggregate col:shop/Product_Country #2, aggregate min #3, aggregate max #3, union #4 #5"}
{"input": "Which airline has most number of flights?", "prediction": "select col:flight, project tbl:flight #1, group #2 #1, superlative #1 #3", "alternatives": "select col:airlines, project tbl:flight #1, group #2 #1, superlative #1 #3"}
{"input": "Find the abbreviation and country of the airline that has fewest number of flights?", "prediction": "select tbl:airlines, project tbl:flight #1, group #2 #1, superlative #1 #3, project col:airlines/abbreviation #4, project col:airlines/country #4, union #5 #6", "alternatives": "select tbl:airlines, project col:airlines/abbreviation #4, group #2 #1, superlative #1 #3, project tbl:flight #1, project col:airlines/country #4, union #5 #6"}
{"input": "What are the first names of every student who has a cat or dog as a pet?", "prediction": "select tbl:Student, project tbl:PersonFriend #1, comparative #1 #2 equal/cat, comparative #1 #2 equal/dog, union #3 #4, project col:Student/Fname #5", "alternatives": "select tbl:Student, comparative #1 #2 equal/cat, project tbl:PersonFriend #1, comparative #1 #2 equal/dog, union #3 #4, project col:Student/Fname #5"}
{"input": "Show all paragraph texts for the document \"Customer reviews\".", "prediction": "select tbl:Documents, comparative #1 #1 equal/Customer reviews col:Documents/document_name, project col:Document_Paragraphs/paragraph_text #2", "alternatives": "select tbl:Document, comparative #1 #1 equal/Customer reviews col:Documents/document_name, project col:Document_Paragraphs/paragraph_text #2"}
{"input": "What are the years, titles, and publishers for all books, ordered by year descending?", "prediction": "select tbl:book, project col:book/Year #1, project col:book/Title #1, project col:book/Publisher #1, union #2 #3 #4, sort #5 #4 descending", "alternatives": "select tbl:book, project col:book/Title #1, project col:book/Year #1, project col:book/Publisher #1, union #2 #3 #4, sort #5 #4 descending"}
{"input": "Show template ids, version numbers, and template type codes for all templates.", "prediction": "select tbl:Templates, project col:Templates/template_id #1, project col:Templates/version_number #1, project col:Templates/type_code #1, union #2 #3 #4", "alternatives": "select tbl:Templates, project col:Templates/Template_ID #1, project col:Templates/Version_Number #1, project col:Templates/Template_Type_Code #1, union #2 #3 #4"}
{"input": "What airline serves the most flights?", "prediction": "select col:flight, project tbl:flight #1, group #2 #1, superlative #1 #3", "alternatives": "select col:flight, group #2 #1, project tbl:flight #1, superlative #1 #3"}
{"input": "Find the name and membership level of the visitors whose membership level is higher than 4, and sort by their age from old to young.", "prediction": "select tbl:Visitors, project col:Visitors/membership_level #1, comparative #1 #2 great/4, project col:Visitors/name #3, project col:Visitors/membership_level #3, project col:Visitors/age #3, union #4 #5, sort #6 #7 descending", "alternatives": "select tbl:Visitors, project col:Visitors/membership_level #1, comparative #1 #2 great/4, project col:Visitors/name #3, project col:Visitors/membership_level #3, project col:Visitors/age #3, union #4 #5, sort #7 #6 descending"}
{"input": "What is the name of each teacher and what course they teach?", "prediction": "select tbl:teachers, project col:teachers/Name #1, project tbl:teaches #1, project col:courses/course_name #3, union #2 #4", "alternatives": "select tbl:teachers, project col:teachers/Name #1, project col:courses/course_name #3, project tbl:teaches #1, union #2 #4"}
{"input": "Which employee received the most awards in evaluations? Give me the employee name.", "prediction": "select tbl:employee, project tbl:evaluation #1, group #2 #1, superlative #1 #3, project col:employee/name #4", "alternatives": "select tbl:Employees, project tbl:Evaluations #1, group #2 #1, superlative #1 #3, project col:Employees/Name #4"}
{"input": "How many flights have destination ATO?", "prediction": "select tbl:flight, project none #1, comparative #1 #2 equal/ATO, aggregate count #3", "alternatives": "select tbl:flight, aggregate count #3, comparative #1 #2 equal/ATO, project none #1"}
{"input": "How many matches were played in each year?", "prediction": "select col:match, project tbl:match #1, group #2 #1, union #1 #3", "alternatives": "select col:match, project tbl:match #1, group #2 #1, union #1 #3!"}
{"input": "How many continents are there?", "prediction": "select tbl:continents, aggregate count #1", "alternatives": "select col:continents, aggregate count #1"}
{"input": "How many countries exist?", "prediction": "select tbl:country, aggregate count #1", "alternatives": "select col:country, aggregate count #1"}
{"input": "What is the name of the shop that is hiring the largest number of employees?", "prediction": "select tbl:shop, project tbl:employment #1, group #2 #1, superlative #1 #3, project col:shop/Shop_Name #4", "alternatives": "select tbl:shop, project tbl:hiring #1, group #2 #1, superlative #1 #3, project col:shop/Name #4"}
{"input": "Give the airport code and airport name corresonding to the city Anthony.", "prediction": "select val:airport, project col:airport/Airport_Code #1, project col:airport/Airport_Name #1, union #2 #3", "alternatives": "select val:airports, project col:airports/AirportCode #1, project col:airports/AirportName #1, union #2 #3"}
{"input": "What are the ids for templates that are not used in any documents?", "prediction": "select tbl:Documents, comparative #1 #1 tbl:Documents, discard #1 #2, project col:Documents/template_id #3", "alternatives": "select tbl:Documents, project tbl:Templates #1, select tbl:Documents, discard #3 #2, project col:Documents/Document_ID #4"}
{"input": "Show the years, book titles, and publishers for all books, in descending order by year.", "prediction": "select tbl:book, project col:book/Year #1, project col:book/Title #1, project col:book/Publisher #1, union #2 #3 #4, sort #5 #2 descending", "alternatives": "select tbl:book, project col:book/Year #1, sort #5 #2 descending, project col:book/Publisher #1, union #2 #3 #4, project col:book/Title #1"}
{"input": "Show publishers with a book published in 1989 and a book in 1990.", "prediction": "select col:book, comparative #1 #1 equal/1989 col:book/Published_Year, comparative #1 #1 equal/1990 col:book/Published_Year, intersection #1 #2 #3", "alternatives": "select col:book, comparative #1 #1 equal/1989 col:book/Publishing_year, comparative #1 #1 equal/1990 col:book/Publishing_year, intersection #1 #2 #3"}
{"input": "What is the title and director for the movie with highest worldwide gross in the year 2000 or before?", "prediction": "select tbl:Movie, project col:Movie/Gross_in_dollar #1, group #2 #1, comparative #1 #3 lessequal/2000, superlative #1 #4, project col:Movie/Title #5, project col:Movie/Director #5, union #6 #7", "alternatives": "select tbl:Movie, project col:Movie/Gross_in_dollar #1, group #2 #1, project col:Movie/Director #5, superlative #1 #4, project col:Movie/Title #5, comparative #1 #3 lessequal/2000, union #6 #7"}
{"input": "What is the id and type code for the template used by the most documents?", "prediction": "select tbl:Documents, project tbl:Documents #1, group #2 #1, superlative #1 #3, project col:Documents/Template_ID #4, project col:Documents/Type_Code #4, union #5 #6", "alternatives": "select tbl:Documents, group #2 #1, project tbl:Documents #1, superlative #1 #3, project col:Documents/Template_ID #4, project col:Documents/Type_Code #4, union #5 #6"}
{"input": "What are the age and hometown of teachers?", "prediction": "select tbl:teachers, project col:teachers/Age #1, project col:teachers/Hometown #1, union #2 #3", "alternatives": "select tbl:teachers, union #2 #3, project col:teachers/Hometown #1, project col:teachers/Age #1"}
{"input": "What are flight numbers of flights departing from City \"Aberdeen \"?", "prediction": "select tbl:flight, comparative #1 #1 equal/Aberdeen col:flight/origin, project tbl:flight #2", "alternatives": "select tbl:flight, project col:flight/origin #1, comparative #1 #2 equal/Aberdeen, project tbl:flight #3"}
{"input": "Find the names of employees who never won any award in the evaluation.", "prediction": "select tbl:employee, comparative #1 #1 tbl:evaluation, discard #1 #2, project col:employee/name #3", "alternatives": "select tbl:employee, comparative #1 #1 tbl:evaluation, project col:employee/name #3, discard #1 #2"}
{"input": "What are the minimum and maximum number of products across all the shops?", "prediction": "select tbl:shop, project col:shop/Num_of_Products #1, aggregate col:shop/Num_of_Products #2, aggregate min #3, aggregate max #3, union #4 #5", "alternatives": "select tbl:shop, project col:shop/Number_products #1, group #2 #1, aggregate min #3, aggregate max #3, union #4 #5"}
{"input": "Show all template ids and number of documents using each template.", "prediction": "select col:Documents, project col:Documents/Document_ID #1, project tbl:Documents #1, group #3 #1, union #2 #4", "alternatives": "select col:Documents, project col:Documents/template_id #1, project tbl:Documents #1, group #3 #1, union #2 #4."}
{"input": "List the first and last name of all players in the order of birth date.", "prediction": "select tbl:Player, project col:Player/first_name #1, project col:Player/last_name #1, project col:Player/bdate #1, union #2 #3, sort #5 #4", "alternatives": "select tbl:players, project col:players/first_name #1, project col:players/last_name #1, project col:players/birth_date #1, union #2 #3, sort #5 #4"}
{"input": "Show all template type codes and the number of documents using each type.", "prediction": "select col:Documents, project tbl:Documents #1, group #2 #1, union #1 #3", "alternatives": "select col:Documents, project col:Documents/document_type_code #1, project tbl:Documents #1, group #3 #1, union #2 #4"}
{"input": "What are the names of the mills which are not located in 'Donceel'?", "prediction": "select tbl:mill, comparative #1 #1 notequal/Donceel col:mill/Location, project col:mill/Name #2", "alternatives": "select tbl:mills, comparative #1 #1 notequal/Donceel col:mills/Location, project col:mills/Name #2"}
{"input": "Find all airlines that have flights from both airports 'APG' and 'CVO'.", "prediction": "select col:flight, comparative #1 #1 equal/APG col:airport/airport_name, comparative #1 #1 equal/CVO col:airport/airport_name, intersection #1 #2 #3", "alternatives": "select col:flight, comparative #1 #1 equal/CVO col:airport/airport_name, comparative #1 #1 equal/APG col:airport/airport_name, intersection #1 #2 #3"}
{"input": "Which city has most number of arriving flights?", "prediction": "select col:flight, project tbl:flight #1, group #2 #1, superlative #1 #3", "alternatives": "select col:Flight, project tbl:Flight #1, group #2 #1, superlative #1 #3"}
{"input": "What is the name of the winner with the most rank points who participated in the Australian Open tournament?", "prediction": "select val:record, project col:record/Rank_Points #1, group #2 #1, superlative #1 #3, project col:people/Name #4", "alternatives": "select val:record, superlative #1 #3, group #2 #1, project col:record/Rank_Points #1, project col:people/Name #4"}
{"input": "What are the ids of documents that have 2 or more paragraphs?", "prediction": "select col:Documents, project tbl:Document_Paragraphs #1, group #2 #1, comparative #1 #3 greatequal/2, project col:Documents/document_id #4", "alternatives": "select col:Paragraphs, project tbl:Paragraphs #1, group #2 #1, comparative #1 #3 greatequal/2, project col:Paragraphs/Document_ID #4"}
{"input": "Show ids for all templates that are used by more than one document.", "prediction": "select col:Documents, project tbl:Documents #1, group #2 #1, comparative #1 #3 great/1, project col:Documents/template_id #4", "alternatives": "select col:Documents, project tbl:Documents #1, group #2 #1, comparative #1 #3 great/1, project col:Documents/Template_ID #4"}
{"input": "Return the ids of templates that have the code PP or PPT.", "prediction": "select tbl:Templates, project col:Templates/Template_Code #1, comparative #1 #2 equal/PP, comparative #1 #2 equal/PPT, union #3 #4, project col:Templates/Template_ID #5", "alternatives": "select col:Documents, project col:Documents/Document_Code #1, comparative #1 #2 equal/PP, comparative #1 #2 equal/PPT, union #3 #4, project col:Documents/Document_ID #5"}
{"input": "Give the ids of documents that have between one and two paragraphs.", "prediction": "select col:Documents, comparative #1 #1 greatequal/1 col:Documents/paragraphs, comparative #1 #1 lessequal/2 col:Documents/paragraph_number, intersection #1 #2 #3", "alternatives": "select col:Documents, project tbl:Documents #1, comparative #1 #2 greatequal/1, comparative #1 #2 lessequal/2, intersection #1 #3 #4, project col:Documents/Document_ID #5."}
{"input": "Which shop has the most employees? Give me the shop name.", "prediction": "select tbl:shop, project tbl:employee #1, group #2 #1, superlative #1 #3, project col:shop/Shop_name #4", "alternatives": "select col:hiring, project none #1, group #2 #1, superlative #1 #3, project col:shop/Name #4"}
{"input": "What are airport names at City 'Aberdeen'?", "prediction": "select tbl:airport, project col:airport/city #1, comparative #1 #2 equal/Aberdeen, project col:airport/name #3", "alternatives": "select tbl:airport, project col:airport/Airport_Name #1, comparative #2 #1 equal/Aberdeen"}
{"input": "Show the stadium name and the number of concerts in each stadium.", "prediction": "select col:match_season, project col:stadium/name #1, project tbl:concerts #1, group #3 #1, union #2 #4", "alternatives": "select col:match_season, project col:stadium/name #1, project tbl:concerts #1, group #3 #1, union #2 #4"}
{"input": "What is the number of employees from each city?", "prediction": "select col:Addresses, project tbl:Employees #1, group #2 #1, union #1 #3", "alternatives": "select col:Addresses, project tbl:Employees #1, union #1 #3, group #2 #1"}
{"input": "List the name and date the battle that has lost the ship named 'Lettice' and the ship named 'HMS Atalanta'", "prediction": "select tbl:ship, comparative #1 #1 equal/Lettice col:ship/Name, comparative #1 #1 equal/HMS Atalanta col:ship/Name, intersection #1 #2 #3, project col:ship/Name #4, project col:battle/Date #4, union #5 #6", "alternatives": "select col:ship, comparative #1 #1 equal/Lettice col:ship/Name, comparative #1 #1 equal/HMS Atalanta col:ship/Name, intersection #1 #2 #3, project col:ship/Name #4, project col:battle/Date #4, union #5 #6"}
{"input": "What are the titles, years, and directors of all movies, ordered by budget in millions?", "prediction": "select tbl:Movie, project col:Movie/title #1, project col:Movie/year #1, project col:Movie/director #1, project col:Movie/budget #1, union #2 #3 #4, sort #6 #5", "alternatives": "select tbl:movie, project col:movie/Title #1, project col:movie/Year #1, project col:movie/Director #1, project col:movie/Budget_million #1, union #2 #3 #4, sort #6 #5 ascending"}
{"input": "What is the name of the visitor who visited both a museum opened before 2009 and a museum opened after 2011?", "prediction": "select tbl:museum, comparative #1 #1 great/2011 col:museum/Open_Year, comparative #1 #1 less/2009 col:museum/Open_Year, project col:visitors/Name #1, intersection #4 #2 #3", "alternatives": "select tbl:museum, comparative #1 #1 great/2011 col:museum/Open_Year, comparative #1 #1 less/2009 col:museum/Open_Year, project col:visitors/Name #1, intersection #6 #2 #3"}
{"input": "What is the location of the bridge named 'Kolob Arch' or 'Rainbow Bridge'?", "prediction": "select col:bridge, comparative #1 #1 equal/Kolob Arch col:bridge/Name, comparative #1 #1 equal/Rainbow Bridge col:bridge/Name, union #2 #3", "alternatives": "select tbl:bridge, comparative #1 #1 equal/Kolob Arch col:bridge/name, comparative #1 #1 equal/Rainbow Bridge col:bridge/name, union #2 #3, project col:bridge/location #4"}
{"input": "List all airline names and their abbreviations in \"USA\".", "prediction": "select tbl:airlines, project col:airlines/name #1, project col:airlines/abbreviation #1, comparative #3 #3 equal/USA", "alternatives": "select tbl:airlines, project col:airlines/name #1, comparative #3 #3 equal/USA, project col:airlines/abbreviation #1"}
{"input": "What are the distinct details of invoices created before 1989-09-03 or after 2007-12-25?", "prediction": "select tbl:Invoices, comparative #1 #1 less/1989-09-03 col:Invoices/date_invoice_launch, comparative #1 #1 great/2007-12-25 col:Invoices/date_invoice_launch, union #2 #3", "alternatives": "select tbl:Invoices, comparative #1 #1 less/1989-09-03 col:Invoices/date_invoice_made, comparative #1 #1 great/2007-12-25 col:Invoices/date_invoice_created, union #2 #3"}
{"input": "Give the code of the airport with the least flights.", "prediction": "select col:flight, project tbl:flight #1, group #2 #1, superlative #1 #3, project col:airport/code #4", "alternatives": "select col:flight, project tbl:flight #1, group #2 #1, project col:airport/code #4, superlative #1 #3"}
{"input": "What is the name of the visitor who visited both a museum opened before 2009 and a museum opened after 2011?", "prediction": "select tbl:museum, comparative #1 #1 great/2011 col:museum/Open_Year, comparative #1 #1 less/2009 col:museum/Open_Year, project col:visitors/Name #1, intersection #4 #2 #3", "alternatives": "select tbl:museum, comparative #1 #1 great/2011 col:museum/Open_Year, comparative #1 #1 less/2009 col:museum/Open_Year, intersection #4 #2 #3, project col:visitors/Name #1"}
{"input": "For each customer who has at least two orders, find the customer name and number of orders made.", "prediction": "select tbl:Customers, project tbl:Orders #1, group #2 #1, comparative #1 #3 greatequal/2, project col:Customers/customer_name #4, project tbl:Orders #4, group #6 #4, union #5 #7", "alternatives": "select tbl:Customers, project tbl:Orders #1, group #2 #1, project tbl:Orders #4, project col:Customers/customer_name #4, comparative #1 #3 greatequal/2, group #6 #4, union #5 #7"}
{"input": "What are all the company names that have a book published by Alyson?", "prediction": "select col:book, comparative #1 #1 equal/Alyson col:book/Publisher, project col:book/Company #2", "alternatives": "select val:book_club, project tbl:book_club #1, project col:culture_company/Company_name #2"}
{"input": "Return the type code of the template type with the description \"Book\".", "prediction": "select tbl:Templates, project col:Templates/description #1, comparative #1 #2 equal/Book, project col:Templates/type_code #3", "alternatives": "select tbl:Ref_Template_Types, project col:Ref_Template_Types/Template_Type_Description #1, comparative #1 #2 equal/Book, project col:Ref_Template_Types/Template_Type_Code #3"}
{"input": "find the number of players for each country.", "prediction": "select col:country, project tbl:match_season #1, group #2 #1, union #1 #3", "alternatives": "select tbl:players, project col:players/country_code #1, group #1 #2, union #2 #3"}
{"input": "Find the first name, country code and birth date of the winner who has the highest rank points in all matches.", "prediction": "select tbl:match, project col:match/Rank_Points #1, superlative #1 #2, project col:people/Fname #3, project col:people/Country_Code #3, project col:people/Birth_Date #3, union #4 #5 #6", "alternatives": "select tbl:match, project col:match/Rank_Points #1, superlative #1 #2, project col:people/Fname #3, project col:people/Birth_Date #3, project col:people/Country_Code #3, union #4 #5 #6"}
{"input": "Find the first name of students who have cat or dog pet.", "prediction": "select tbl:Student, project tbl:Pets #1, comparative #1 #2 equal/Cat, comparative #1 #2 equal/Dog, union #3 #4, project col:Student/Fname #5", "alternatives": "select tbl:Student, project tbl:Pets #1, comparative #1 #2 equal/Dog, comparative #1 #2 equal/Cat, union #3 #4, project col:Student/Fname #5"}
{"input": "Find the name and location of the stadiums which some concerts happened in the years of both 2014 and 2015.", "prediction": "select tbl:stadium, project tbl:convention #1, project col:convention/Year #2, comparative #1 #3 equal/2014, comparative #1 #3 equal/15, intersection #1 #4 #5, project col:stadium/name #6, project col:stadium/Location #6, union #7 #8", "alternatives": "select tbl:stadium, project tbl:concert #1, comparative #1 #2 equal/2014, comparative #1 #2 equal/2015, intersection #1 #3 #4, project col:stadium/Name #5, project col:stadium/Location #5, union #6 #7"}
{"input": "Which customers made orders between 2009-01-01 and 2010-01-01? Find their names.", "prediction": "select tbl:Customers, comparative #1 #1 lessequal/2010-01-01 col:Orders/order_date, comparative #2 #2 greatequal/2009-01-01 col:Customers/order_date, project col:Customers/customer_name #3", "alternatives": "select tbl:Customers, comparative #1 #1 lessequal/2010-01-01 col:Orders/order_date, project col:Customers/customer_name #3, comparative #2 #2 greatequal/2009-01-01 col:Customers/order_date"}
{"input": "What are the names of the teachers who teach at least two courses?", "prediction": "select tbl:EMPLOYEE, project tbl:CLASS #1, group #2 #1, comparative #1 #3 greatequal/2, project col:EMPLOYEE/EMP_NAME #4", "alternatives": "select tbl:EMPLOYEE, project col:EMPLOYEE/EMP_NAME #4, group #2 #1, comparative #1 #3 greatequal/2, project tbl:CLASS #1"}
{"input": "Give the code of the airport with the least flights.", "prediction": "select col:flight, project tbl:flight #1, group #2 #1, superlative #1 #3, project col:airport/code #4", "alternatives": "select col:flight, project tbl:airport #1, group #2 #1, superlative #1 #3, project col:airport/code #4"}
{"input": "Give the flight numbers of flights landing at APG.", "prediction": "select tbl:flight, comparative #1 #1 equal/APG col:airport/airport_name, project tbl:flight #2", "alternatives": "select tbl:flight, comparative #1 #1 equal/APG col:airport/aircraft, project col:flight/flno #2"}
{"input": "What are the names of the customers who have made two or less orders?", "prediction": "select tbl:Customers, project tbl:Orders #1, group #2 #1, comparative #1 #3 lessequal/2, project col:Customers/customer_name #4", "alternatives": "select tbl:Customers, project tbl:Orders #1, group #2 #1, project col:Customers/customer_name #4, comparative #1 #3 lessequal/2"}
{"input": "Return the type code of the template type that the most templates belong to.", "prediction": "select col:Customer_Templates, project tbl:Customer_Templates #1, group #2 #1, superlative #1 #3, project col:Customer_Templates/Template_Type_Code #4", "alternatives": "select col:Customer_Templates, group #2 #1, project tbl:Customer_Templates #1, superlative #1 #3, project col:Customer_Templates/Template_Type_Code #4"}
{"input": "Which template type code has most number of templates?", "prediction": "select col:Templates, project tbl:Templates #1, group #2 #1, superlative #1 #3", "alternatives": "select col:Templates, project tbl:Templates #1, superlative #1 #3, group #2 #1"}
{"input": "For each shop, return the number of employees working there and the name of the shop.", "prediction": "select col:shop, project tbl:employee #1, group #2 #1, project col:shop/Shop_name #1, union #3 #4", "alternatives": "select col:shop, union #3 #4, group #2 #1, project col:shop/Shop_name #1, project tbl:employee #1"}
{"input": "What is the first name and country code of the player with the most tours?", "prediction": "select tbl:Player, project tbl:Tourist_Attraction #1, group #2 #1, superlative #1 #3, project col:Player/first_name #4, project col:Player/country_code #4, union #5 #6", "alternatives": "select tbl:Player, project tbl:Tourist_Attraction #1, group #2 #1, superlative #1 #3, union #5 #6, project col:Player/country_code #4, project col:Player/first_name #4"}
{"input": "Show different hometown of teachers and the number of teachers from each hometown.", "prediction": "select tbl:teachers, project col:teachers/Hometown #1, group #1 #2, union #2 #3", "alternatives": "select tbl:teachers, union #2 #3, group #1 #2, project col:teachers/Hometown #1"}
{"input": "Find the number of concerts happened in the stadium with the highest capacity.", "prediction": "select tbl:stadium, project col:stadium/Capacity #1, superlative #1 #2, project tbl:convention #3, aggregate count #4", "alternatives": "select tbl:stadium, superlative #1 #2, project col:stadium/Capacity #1, project tbl:convention #3, aggregate count #4"}
{"input": "What is the document id and name with greatest number of paragraphs?", "prediction": "select tbl:Documents, project tbl:Paragraphs #1, group #2 #1, superlative #1 #3, project col:Documents/document_id #4, project col:Documents/document_name #4, union #5 #6", "alternatives": "select col:Documents, project tbl:Documents #1, group #2 #1, superlative #1 #3, project col:Documents/document_id #4, project col:Documents/document_name #4, union #5 #6"}
{"input": "Find the id and weight of all pets whose age is older than 1.", "prediction": "select tbl:Pets, project col:Pets/age #1, comparative #1 #2 great/1, project col:Pets/id #3, project col:Pets/weight #3, union #4 #5", "alternatives": "select tbl:Pets, comparative #1 #2 great/1, project col:Pets/age #1, project col:Pets/id #3, project col:Pets/weight #3, union #4 #5"}
{"input": "Show countries where a singer above age 40 and a singer below 30 are from.", "prediction": "select tbl:song, comparative #1 #1 great/40 col:song/age, comparative #1 #1 less/30 col:song/age, project col:country/country #2", "alternatives": "select col:singer, project tbl:singer #1, project col:singer/Age #2, comparative #1 #3 great/40, comparative #1 #3 less/30, intersection #1 #4 #5"}
{"input": "Show template ids, version numbers, and template type codes for all templates.", "prediction": "select tbl:Templates, project col:Templates/template_id #1, project col:Templates/version_number #1, project col:Templates/type_code #1, union #2 #3 #4", "alternatives": "select tbl:Templates, project col:Templates/template_id #1, union #2 #3 #4, project col:Templates/type_code #1, project col:Templates/version_number #1"}
{"input": "What are the number of concerts that occurred in the stadium with the largest capacity?", "prediction": "select tbl:stadium, project col:stadium/Capacity #1, superlative #1 #2, project tbl:convention #3, aggregate count #4", "alternatives": "select tbl:stadium, project col:stadium/Capacity #1, superlative #1 #2, project tbl:concerts #3, aggregate count #4"}
{"input": "List the name, date and result of each battle.", "prediction": "select tbl:battle, project col:battle/Name #1, project col:battle/Date #1, project col:battle/Result #1, union #2 #3 #4", "alternatives": "select tbl:Batal, project col:Batal/Name #1, project col:Batal/Date #1, project col:Batal/Result #1, union #2 #3 #4"}
{"input": "Find the first name and country code of the player who did the most number of tours.", "prediction": "select tbl:Player, project tbl:Tourist_Attendance #1, group #2 #1, superlative #1 #3, project col:Player/first_name #4, project col:Player/country_code #4, union #5 #6", "alternatives": "select tbl:Player, superlative #1 #3, group #2 #1, project tbl:Tourist_Attendance #1, project col:Player/first_name #4, project col:Player/country_code #4, union #5 #6"}
{"input": "What are the codes of template types that have fewer than 3 templates?", "prediction": "select col:Templates, project tbl:Templates #1, group #2 #1, comparative #1 #3 less/3, project col:Templates/Template_Type_Code #4", "alternatives": "select tbl:Templates, project tbl:Templates #1, group #2 #1, comparative #1 #3 less/3, project col:Templates/Template_Code #4"}
{"input": "List the names of teachers in ascending order of age.", "prediction": "select tbl:teachers, project col:teachers/Name #1, project col:teachers/Age #1, sort #2 #3 ascending", "alternatives": "select tbl:teacher, project col:teacher/Name #1, project col:teacher/Age #1, sort #2 #3 ascending"}
{"input": "What are the distinct ids of products ordered between 1975-01-01 and 1976-01-01??", "prediction": "select tbl:Products, comparative #1 #1 greatequal/1975-01-01 col:Products/date_ordered, comparative #2 #2 lessequal/1976-01-01 col:Products/date_ordered, project col:Products/product_id #3", "alternatives": "select col:Order_Items, comparative #1 #1 lessequal/1976-01-01 col:Orders/date_order_placed, comparative #2 #2 greatequal/1975-01-01 col:Orders/date_order_placed"}
{"input": "Which cities do more than one employee under age 30 come from?", "prediction": "select col:Employees, project tbl:Employees #1, comparative #2 #2 less/30 col:Employees/Age, group #3 #1, comparative #1 #4 great/1", "alternatives": "select col:Employees, group #3 #1, comparative #2 #2 less/30 col:Employees/Age, project tbl:Employees #1, comparative #1 #4 great/1"}
{"input": "How many different loser names are there?", "prediction": "select col:loan, comparative #1 #1 tbl:loan, aggregate count #2", "alternatives": "select col:matches, aggregate count #1"}
{"input": "Which airlines have at least 10 flights?", "prediction": "select col:flight, project tbl:flight #1, group #2 #1, comparative #1 #3 greatequal/10", "alternatives": "select col:airlines, project tbl:flights #1, group #2 #1, comparative #1 #3 great/10"}
{"input": "What are the invoice numbers created before 1989-09-03 or after 2007-12-25?", "prediction": "select col:Invoices, comparative #1 #1 less/1989-09-03 col:Invoices/date_invoice_created, comparative #1 #1 great/2007-12-25 col:Invoices/date_invoice_number, union #2 #3", "alternatives": "select col:Invoices, union #2 #3, comparative #1 #1 great/2007-12-25 col:Invoices/date_invoice_number, comparative #1 #1 less/1989-09-03 col:Invoices/date_invoice_created"}
{"input": "What is the version number and template type code for the template with version number later than 5?", "prediction": "select tbl:Templates, comparative #1 #1 great/5 col:Templates/version_number, project col:Templates/version_number #2, project col:Templates/ template_type_code #2, union #3 #4", "alternatives": "select tbl:Templates, union #3 #4, project col:Templates/version_number #2, project col:Templates/ template_type_code #2, comparative #1 #1 great/5 col:Templates/version_number"}
{"input": "List the ids of all distinct orders ordered by placed date.", "prediction": "select tbl:Orders, project none #1, project col:Orders/order_id #2, project col:Orders/order_placed_date #2, sort #3 #4", "alternatives": "select tbl:Orders, project col:Orders/order_placed_date #2, project col:Orders/order_id #2, project none #1, sort #3 #4"}
{"input": "How many different winners both participated in the WTA Championships and were left handed?", "prediction": "select col:results, comparative #1 #1 equal/WTA Championship col:races/name, comparative #1 #1 equal/left col:races/name, intersection #1 #2 #3", "alternatives": "select col:match, comparative #1 #1 equal/WTA Championship col:match/Tournament, comparative #1 #1 equal/Left Handed col:match/Player, intersection #1 #2 #3, aggregate count #5"}
{"input": "Find the average and maximum age for each type of pet.", "prediction": "select col:Pets, project col:Pets/age #1, group #2 #1, union #1 #3", "alternatives": "select col:Pets, union #1 #3, group #2 #1, project col:Pets/age #1"}
{"input": "Find the last name of the student who has a cat that is age 3.", "prediction": "select tbl:Student, project tbl:Cat #1, project col:Cat/Age #2, comparative #1 #3 equal/3, project col:Student/LName #4", "alternatives": "select tbl:Student, project tbl:Cat #1, comparative #1 #3 equal/3, project col:Cat/Age #2, project col:Student/LName #4"}
{"input": "Sort employee names by their age in ascending order.", "prediction": "select tbl:employee, project col:employee/name #1, project col:employee/age #1, sort #2 #3 ascending", "alternatives": "select tbl:employee, project col:employee/Name #1, project col:employee/Age #1, sort #2 #3 ascending"}
{"input": "Where is the youngest teacher from?", "prediction": "select val:teachers, project col:teachers/Age #1, superlative #1 #2", "alternatives": "select val:Teachers, project col:Teachers/born_child #1"}
{"input": "Give the flight numbers of flights leaving from APG.", "prediction": "select tbl:flight, comparative #1 #1 equal/APG col:flight/origin, project tbl:flight #2", "alternatives": "select tbl:flights, comparative #1 #1 equal/APG col:flights/SourceAirport, project col:flights/FlightNo #2"}
{"input": "What is the most commmon hometowns for teachers?", "prediction": "select col:teachers, project tbl:teachers #1, group #2 #1, superlative #1 #3", "alternatives": "select tbl:teacher, project col:teacher/Hometown #1, group #1 #2, superlative #2 #3"}
{"input": "What is the year that had the most concerts?", "prediction": "select col:conzert, project tbl:conzert #1, group #2 #1, superlative #1 #3", "alternatives": "select col:conduct, project tbl:conduct #1, group #2 #1, superlative #1 #3"}
{"input": "How many visitors below age 30 are there?", "prediction": "select tbl:Visitors, comparative #1 #1 less/30 col:Visitors/Age, aggregate count #2", "alternatives": "select tbl:Visitors, project col:Visitors/age #1, comparative #1 #2 less/30, aggregate count #3"}
{"input": "Return the template type description of the template type with the code AD.", "prediction": "select tbl:Customer_Templates, project col:Customer_Templates/Template_Type_Code #1, comparative #1 #2 equal/AD, project col:Customer_Templates/Template_Type_Description #3", "alternatives": "select tbl:Customer_Templates, comparative #1 #2 equal/AD, project col:Customer_Templates/Template_Type_Code #1, project col:Customer_Templates/Template_Type_Description #3"}
{"input": "How many ships ended up being 'Captured'?", "prediction": "select tbl:Ship, comparative #1 #1 equal/Captured col:Ship/details, aggregate count #2", "alternatives": "select tbl:ship, comparative #1 #1 equal/Captured col:ship/disposition_of_ship, aggregate count #2"}
{"input": "How many paragraphs in total?", "prediction": "select tbl:paragraphs, aggregate count #1", "alternatives": "select tbl:Paragraphs, aggregate count #1"}
{"input": "What are the towns from which at least two teachers come from?", "prediction": "select col:teachers, project val:teachers/Hometown #1, group #2 #1, comparative #1 #3 greatequal/2", "alternatives": "select col:teachers, project val:teachers/Hometown #1, comparative #1 #3 greatequal/2, group #2 #1"}
{"input": "What are the distinct details of invoices created before 1989-09-03 or after 2007-12-25?", "prediction": "select tbl:Invoices, comparative #1 #1 less/1989-09-03 col:Invoices/date_invoice_launch, comparative #1 #1 great/2007-12-25 col:Invoices/date_invoice_launch, union #2 #3", "alternatives": "select tbl:Invoices, union #2 #3, comparative #1 #1 great/2007-12-25 col:Invoices/date_invoice_launch, comparative #1 #1 less/1989-09-03 col:Invoices/date_invoice_launch"}
{"input": "How many 'United Airlines' flights go to Airport 'ASY'?", "prediction": "select tbl:flight, comparative #1 #1 equal/United Airlines col:flight/origin, comparative #2 #2 equal/ASY col:airport/name, aggregate count #3", "alternatives": "select tbl:flight, project tbl:airport #1, comparative #1 #2 equal/ASY, aggregate count #3"}
{"input": "What airline serves the most flights?", "prediction": "select col:flight, project tbl:flight #1, group #2 #1, superlative #1 #3", "alternatives": "select col:flight, project none #1, group #2 #1, superlative #1 #3"}
{"input": "Count the number of flights into ATO.", "prediction": "select tbl:flight, comparative #1 #1 equal/ATO col:flight/origin, aggregate count #2", "alternatives": "select tbl:flight, comparative #1 #1 equal/ATO col:flight/origin, aggregate count #2"}
{"input": "How much does the youngest dog weigh?", "prediction": "select tbl:dog, project col:dog/Weight #1, superlative #1 #2, project col:dog/Weight #3", "alternatives": "select val:Pets, project col:Pets/pet_age #1, superlative #1 #2, project col:Pets/weight #3"}
{"input": "Find the name of the shops that do not hire any employee.", "prediction": "select tbl:shop, comparative #1 #1 tbl:employee, discard #1 #2, project col:shop/Shop_Name #3", "alternatives": "select tbl:shop, comparative #1 #1 tbl:employee, discard #1 #2, project col:shop/Shop_name #3"}
{"input": "Return the average, maximum, and minimum budgets in millions for movies made before the year 2000.", "prediction": "select tbl:Movie, comparative #1 #1 less/2000 col:Movie/year, project col:Movie/budget #2, aggregate avg #3, aggregate max #3, aggregate min #3, union #4 #5 #6", "alternatives": "select tbl:Movie, aggregate min #3, project col:Movie/budget #2, aggregate avg #3, aggregate max #3, comparative #1 #1 less/2000 col:Movie/year, union #4 #5 #6"}
{"input": "What are the ids and names of each document, as well as the number of paragraphs in each?", "prediction": "select col:Documents, project col:Documents/document_id #1, project col:Documents/document_name #1, project tbl:Documents #1, group #4 #1, union #2 #3 #5", "alternatives": "select col:Documents, project col:Documents/document_name #1, project col:Documents/document_id #1, project tbl:Documents #1, group #4 #1, union #2 #3 #5"}
{"input": "How many concerts are there in year 2014 or 2015?", "prediction": "select tbl:concerts, project col:concerts/year #1, comparative #1 #2 equal/2014, comparative #1 #2 equal/15, union #3 #4, aggregate count #5", "alternatives": "select tbl:concert, comparative #1 #1 equal/2014 col:concert/Year, comparative #1 #1 equal/2015 col:concert/Year, union #2 #3, aggregate count #4"}
{"input": "Show all publishers and the number of books for each publisher.", "prediction": "select col:book, project tbl:book #1, group #2 #1, union #1 #3", "alternatives": "select col:book, project none #1, group #2 #1, union #1 #3"}
{"input": "What is the code of the country with the most players?", "prediction": "select col:country, project tbl:country #1, group #2 #1, superlative #1 #3", "alternatives": "select col:country, superlative #1 #3, group #2 #1, project tbl:country #1"}
{"input": "Find the names of stores whose number products is more than the average number of products.", "prediction": "select tbl:store, project tbl:product #1, group #2 #1, aggregate avg #3, comparative #1 #3 great/#4, project col:store/Store_Name #5", "alternatives": "select tbl:store, project col:product/Num_of_Products #1, aggregate avg #2, comparative #1 #2 great/#3, project col:store/Store_Name #4"}
{"input": "Find the distinct details of invoices which are created before 1989-09-03 or after 2007-12-25.", "prediction": "select tbl:Invoices, comparative #1 #1 less/1989-09-03 col:Invoices/date_invoice_created, comparative #1 #1 great/2007-12-25 col:Invoices/date_invoice_created, union #2 #3", "alternatives": "select tbl:Invoices, comparative #1 #1 great/2007-12-25 col:Invoices/date_invoice_created, comparative #1 #1 less/1989-09-03 col:Invoices/date_invoice_created, union #2 #3"}
{"input": "Find the type and weight of the youngest pet.", "prediction": "select tbl:pet, project col:pet/Height #1, superlative #1 #2, project col:pet/Type #3, project col:pet/Weight #3, union #4 #5", "alternatives": "select tbl:pet, project col:pet/Weight #1, superlative #1 #2, project col:pet/Type #3, union #4 #5"}
{"input": "List the most common hometown of teachers.", "prediction": "select col:teachers, project tbl:teachers #1, group #2 #1, superlative #1 #3", "alternatives": "select col:teachers, project tbl:teachers #1, group #2 #1, superlative #1 #3."}
{"input": "Return the version numbers and template type codes of templates with a version number greater than 5.", "prediction": "select tbl:Templates, project col:Templates/version_number #1, comparative #1 #2 great/5, project col:Templates/version_number #3, project col:Templates/template_type_code #3, union #4 #5", "alternatives": "select tbl:Templates, project col:Templates/Version_Number #1, comparative #1 #2 great/5, project col:Templates/Version_Number #3, project col:Templates/Template_Type_Code #3, union #4 #5"}
{"input": "Give the ids of documents that have between one and two paragraphs.", "prediction": "select col:Documents, comparative #1 #1 greatequal/1 col:Documents/paragraphs, comparative #1 #1 lessequal/2 col:Documents/paragraph_number, intersection #1 #2 #3", "alternatives": "select col:Documents, comparative #1 #1 greatequal/1 col:Documents/paragraphs, intersection #1 #2 #3, comparative #1 #1 lessequal/2 col:Documents/paragraph_number"}
{"input": "What is the hometown of the youngest teacher?", "prediction": "select tbl:teachers, project col:teachers/Headquarters #1, superlative #2 #2", "alternatives": "select tbl:teacher, project col:teacher/Age #1, superlative #1 #2, project col:teacher/Hometown #3"}
{"input": "Give me a list of id and status of orders which belong to the customer named \"Jeramie\".", "prediction": "select tbl:Customer_Orders, comparative #1 #1 equal/Jeramie col:Customers/customer_name, project col:Customer_Orders/order_id #2, project col:Customer_Orders/order_status #2, union #3 #4", "alternatives": "select tbl:Customers, comparative #1 #1 equal/Jeramie col:Customers/customer_name, project tbl:Orders #2, project col:Orders/order_id #3, project col:Orders/order_status #3, union #4 #5"}
{"input": "What are the paragraph texts for the document with the name 'Customer reviews'?", "prediction": "select tbl:Documents, project col:Documents/document_name #1, comparative #1 #2 equal/Customer reviews, project col:Documents/paragraph_text #3", "alternatives": "select tbl:Documents, comparative #1 #1 equal/Customer reviews col:Documents/Document_Name, project col:Paragraphs/Paragraph_Text #2"}
{"input": "Return the id and name of the document with the most paragraphs.", "prediction": "select tbl:Documents, project tbl:Document_Paragraphs #1, group #2 #1, superlative #1 #3, project col:Documents/document_id #4, project col:Documents/document_name #4, union #5 #6", "alternatives": "select tbl:Documents, project tbl:Document_Paragraphs #1, group #2 #1, superlative #1 #3, project col:Documents/document_id #4, project col:Documents/document_name #4, union #5 #7"}
{"input": "What are all company names that have a corresponding movie directed in the year 1999?", "prediction": "select tbl:company, project tbl:film #1, project col:film/Year #2, comparative #1 #3 equal/1999, project col:company/Company #4", "alternatives": "select col:film_company, project tbl:film_company #1, project col:film_company/Year #2, comparative #1 #3 equal/1999"}
{"input": "Show all movie titles, years, and directors, ordered by budget.", "prediction": "select tbl:film, project col:film/Title #1, project col:film/Year #1, project col:film/Director #1, project col:film/Budgeted #1, union #2 #3 #4, sort #6 #5", "alternatives": "select tbl:film, project col:film/Title #1, project col:film/Director #1, project col:film/Year #1, project col:film/Budgeted #1, union #2 #3 #4, sort #6 #5"}
{"input": "List all airline names and their abbreviations in \"USA\".", "prediction": "select tbl:airlines, project col:airlines/name #1, project col:airlines/abbreviation #1, comparative #3 #3 equal/USA", "alternatives": "select tbl:airlines, project col:airlines/Airline #1, project col:airlines/Abbreviation #2, union #2 #3, comparative #4 #4 equal/USA col:airlines/Country"}
{"input": "Find the names of employees who never won any award in the evaluation.", "prediction": "select tbl:employee, comparative #1 #1 tbl:evaluation, discard #1 #2, project col:employee/name #3", "alternatives": "select tbl:employee, comparative #1 #1 tbl:evaluation, discard #1 #2, project col:employee/Name #3"}
{"input": "Show the name and the release year of the song by the youngest singer.", "prediction": "select tbl:song, project col:song/artist_name #1, superlative #1 #2, project col:song/song_name #3, project col:song/release_year #3, union #4 #5", "alternatives": "select tbl:song, project col:song/jail_year #1, superlative #1 #2, project col:song/song_name #3, project col:song/release_year #3, union #4 #5"}
{"input": "What are the different ids and names of the battles that lost any 'Brig' type shipes?", "prediction": "select tbl:battle, project tbl:shipes #1, comparative #1 #2 equal/Brig, project col:battle/id #3, project col:battle/name #3, union #4 #5", "alternatives": "select tbl:battle, comparative #1 #1 equal/Brig col:ship/ship_type, project col:battle/name #2, union #3 #4"}
{"input": "Find the average rank of winners in all matches.", "prediction": "select tbl:match, project col:match/Rank #1, aggregate avg #2", "alternatives": "select tbl:match, project col:match/Round #1, aggregate avg #2"}
{"input": "How many pets are owned by students that have an age greater than 20?", "prediction": "select tbl:Students, project col:Students/age #1, comparative #1 #2 great/20, project tbl:Pets #3, aggregate count #4", "alternatives": "select tbl:Students, project col:Students/age #1, comparative #1 #2 great/20, project tbl:PersonFriend #3, aggregate count #4"}
{"input": "Show the name of the teacher for the math course.", "prediction": "select tbl:course, comparative #1 #1 equal/Math col:course/Date, project col:teacher/Name #2", "alternatives": "select tbl:teacher, comparative #1 #1 equal/Math col:course/Course, project col:teacher/Name #2"}
{"input": "How many different results are there for the battles?", "prediction": "select tbl:battle, project col:battle/Result #1, aggregate count #3", "alternatives": "select tbl:bate, project col:bate/Result #1, aggregate count #3"}
{"input": "Find the maximum weight for each type of pet. List the maximum weight and pet type.", "prediction": "select tbl:Pets, project col:Pets/weight #1, group #2 #1, union #1 #3", "alternatives": "select tbl:pet, project col:pet/Weight #1, group #2 #1, union #1 #3"}
{"input": "Which template type code has most number of templates?", "prediction": "select col:Templates, project tbl:Templates #1, group #2 #1, superlative #1 #3", "alternatives": "select col:Launch, project tbl:Launch #1, group #2 #1, superlative #1 #3"}
{"input": "How many book clubs are there?", "prediction": "select tbl:book_club, aggregate count #1", "alternatives": "select tbl:BookClub, aggregate count #1"}
{"input": "Find the id of the pet owned by student whose last name is ‘Smith’.", "prediction": "select tbl:Students, comparative #1 #1 equal/Smith col:Students/last_name, project tbl:Pets #2, project col:Pets/pet_id #3", "alternatives": "select tbl:Students, project tbl:Pets #2, comparative #1 #1 equal/Smith col:Students/last_name, project col:Pets/pet_id #3"}
{"input": "Show all document ids and the number of paragraphs in each document. Order by document id.", "prediction": "select col:Documents, project col:Documents/document_id #1, project tbl:Documents #1, group #3 #1, union #2 #4, sort #5 #4", "alternatives": "select tbl:Documents, project col:Documents/document_id #1, project tbl:Documents #2, group #3 #2, union #2 #4, sort #5 #4"}
{"input": "What is the location of the bridge named 'Kolob Arch' or 'Rainbow Bridge'?", "prediction": "select col:bridge, comparative #1 #1 equal/Kolob Arch col:bridge/Name, comparative #1 #1 equal/Rainbow Bridge col:bridge/Name, union #2 #3", "alternatives": "select tbl:bridge, project col:bridge/Name #1, comparative #1 #2 equal/Kolob Arch, comparative #1 #2 equal/Rainbow Bridge, union #3 #4, project col:bridge/Location #5"}
{"input": "What are the names of the singers and number of concerts for each person?", "prediction": "select col:concerts, project col:song/artist_name #1, project tbl:concerts #1, group #3 #1, union #2 #4", "alternatives": "select col:singer, project col:singer/Name #1, project tbl:singer_in_concert #1, group #3 #1, union #2 #4"}
{"input": "Find the name of tourney that has more than 10 matches.", "prediction": "select tbl:turner, project tbl:match #1, group #2 #1, comparative #1 #3 great/10, project col:turner/name #4", "alternatives": "select tbl:turner, comparative #1 #3 great/10, group #2 #1, project tbl:match #1, project col:turner/name #4"}
{"input": "Return the document id, template id, and description for the document with the name Robbin CV.", "prediction": "select tbl:Documents, comparative #1 #1 equal/Robbin CV col:Documents/document_name, project col:Documents/document_id #2, project col:Documents/template_id #2, project col:Documents/document_description #2, union #3 #4 #5", "alternatives": "select tbl:Documents, project col:Documents/template_id #2, project col:Documents/document_id #2, comparative #1 #1 equal/Robbin CV col:Documents/document_name, project col:Documents/document_description #2, union #3 #4 #5"}
{"input": "What are the name and results of the battles when the bulgarian commander is not 'Boril'", "prediction": "select tbl:battle, project col:battle/Commander #1, comparative #1 #2 notequal/Boril, project col:battle/Name #3, project col:battle/Result #3, union #4 #5", "alternatives": "select tbl:battle, project col:battle/Commandant #1, comparative #1 #2 notequal/Boril, project col:battle/Name #3, project col:battle/Result #3, union #4 #5"}
{"input": "Show all company names with a movie directed in year 1999.", "prediction": "select tbl:company, project tbl:film #1, project col:film/Year #2, comparative #1 #3 equal/1999, project col:company/Company #4", "alternatives": "select tbl:movie, comparative #1 #1 equal/1999 col:movie/Year, project tbl:culture_company #2, project col:culture_company/Company_name #3"}
{"input": "Find the name and age of the visitor who bought the most tickets at once.", "prediction": "select tbl:Visitors, project tbl:Tickets #1, group #2 #1, superlative #1 #3, project col:Visitors/name #4, project col:Visitors/age #4, union #5 #6", "alternatives": "select tbl:Visitors, project tbl:Tickets #1, group #2 #1, project col:Visitors/name #4, superlative #1 #3, project col:Visitors/age #4, union #5 #6"}
{"input": "What is the first name and gender of the all the students who have more than one pet?", "prediction": "select tbl:Student, project tbl:Pets #1, group #2 #1, comparative #1 #3 great/1, project col:Student/Fname #4, project col:Student/Gender #4, union #5 #6", "alternatives": "select tbl:Student, project tbl:Pets #1, group #2 #1, comparative #1 #3 great/1, project col:Student/Fname #4, project col:Gender/Gender #4, union #5 #6"}
{"input": "List the names of customers who have once canceled the purchase of the product \"food\" (the item status is \"Cancel\").", "prediction": "select tbl:Products_for_Hire, project tbl:Customer_Orders #1, comparative #1 #2 equal/food, project col:Customers/customer_name #3", "alternatives": "select tbl:Products_for_Hire, project tbl:Customer_Orders #1, comparative #1 #2 equal/food, project col:Customers/product_status_code #3, comparative #3 #4 equal/Cancel, project col:Customers/customer_name #5"}
{"input": "List the name and tonnage ordered by in descending alphabetical order for the names.", "prediction": "select tbl:name, project col:ship/Tonnage #1, project col:ship/Name #1, union #2 #3, sort #4 #2 descending", "alternatives": "select col:ship, project col:ship/Name #1, project col:ship/Tonnage #1, union #2 #3, sort #4 #2 descending"}
{"input": "Which year has most number of concerts?", "prediction": "select col:concerts, project tbl:concerts #1, group #2 #1, superlative #1 #3", "alternatives": "select col:conzert, project tbl:conzert #1, group #2 #1, superlative #1 #3"}
{"input": "What is the average, minimum, and maximum age of all singers from France?", "prediction": "select tbl:song, comparative #1 #1 equal/France col:song/country, project col:song/age #2, aggregate avg #3, aggregate min #3, aggregate max #3, union #4 #5 #6", "alternatives": "select tbl:singer, comparative #1 #1 equal/France col:singer/Country, project col:singer/Age #2, aggregate avg #3, aggregate min #3, aggregate max #3, union #4 #5 #6"}
{"input": "How many countries does each continent have? List the continent id, continent name and the number of countries.", "prediction": "select col:continents, project tbl:country #1, group #2 #1, project col:continents/Continent #1, project col:continents/Continent_name #1, union #4 #5 #3", "alternatives": "select tbl:continents, project tbl:countries #1, group #2 #1, project col:continents/ContId #1, project col:continents/Continent #1, union #4 #5 #3"}
{"input": "Return the names and template ids for documents that contain the letter w in their description.", "prediction": "select tbl:Documents, project col:Documents/document_description #1, comparative #1 #2 like%w%, project col:Documents/document_name #3, project col:Documents/template_id #3, union #4 #5", "alternatives": "select tbl:Documents, project col:Documents/document_description #1, project col:Documents/template_id #3, project col:Documents/document_name #3, comparative #1 #2 like%w%, union #4 #5"}
{"input": "Show all countries and the number of singers in each country.", "prediction": "select col:artist, project tbl:song #1, group #2 #1, union #1 #3", "alternatives": "select col:singer, project tbl:singer #1, group #2 #1, union #1 #3"}
{"input": "How many flights land in Aberdeen or Abilene?", "prediction": "select tbl:flight, comparative #1 #1 equal/Aberdeen col:flight/origin, comparative #1 #1 equal/Abrilene col:flight/destination, union #2 #3, aggregate count #4", "alternatives": "select tbl:flight, comparative #1 #1 equal/Aberdeen col:flight/origin, comparative #1 #1 equal/Abidjan col:flight/destination, union #2 #3, aggregate count #4"}
{"input": "Which directors had a movie both in the year 1999 and 2000?", "prediction": "select col:Movie, project tbl:Movie #1, comparative #1 #2 equal/1999, comparative #1 #2 equal/2000, intersection #1 #3 #4", "alternatives": "select col:Movie, project tbl:Movie #1, project col:Movie/year #2, comparative #1 #3 equal/1999, comparative #1 #3 equal/2000, intersection #1 #4"}
{"input": "What is the number of employees from each city?", "prediction": "select col:Addresses, project tbl:Employees #1, group #2 #1, union #1 #3", "alternatives": "select col:Employee, project tbl:Employee #1, group #2 #1, union #1 #3."}
{"input": "What are the paragraph texts for the document with the name 'Customer reviews'?", "prediction": "select tbl:Documents, project col:Documents/document_name #1, comparative #1 #2 equal/Customer reviews, project col:Documents/paragraph_text #3", "alternatives": "select tbl:Documents, project col:Documents/document_name #1, project col:Documents/paragraph_text #3, comparative #1 #2 equal/Customer reviews"}
{"input": "How many airports do we have?", "prediction": "select tbl:airport, aggregate count #1", "alternatives": "select tbl:airports, aggregate count #1"}
{"input": "Show the name and theme for all concerts and the number of singers in each concert.", "prediction": "select col:artist, project col:concerts/Name #1, project col:concerts/Theme #1, project tbl:song #1, group #4 #1, union #2 #3 #5", "alternatives": "select col:artist, project col:concerts/CName #1, project col:concerts/Theme #1, project tbl:song #1, group #4 #1, union #2 #3"}
{"input": "Show the movie titles and book titles for all companies in China.", "prediction": "select tbl:company, comparative #1 #1 equal/China col:company/Country, project col:film/Title #2, project col:book/Title #2, union #3 #4", "alternatives": "select tbl:company, comparative #1 #1 equal/China col:company/Country, project col:film/Title #2, project col:book/Title #3, union #3 #4"}
{"input": "List all document ids with at least two paragraphs.", "prediction": "select col:Documents, project tbl:Document_Paragraphs #1, group #2 #1, comparative #1 #3 greatequal/2", "alternatives": "select col:Documents, project tbl:Paragraphs #1, group #2 #1, comparative #1 #3 greatequal/2"}
{"input": "Find the name of the winner who has the highest rank points and participated in the Australian Open tourney.", "prediction": "select col:match_season, project col:match_season/Rank_Points #1, superlative #1 #2, comparative #3 #3 equal/Australian Open col:match_season/Tournament", "alternatives": "select col:matches, project col:matches/winner_rank_points #1, comparative #1 #2 equal/Australian Open, project col:matches/winner_rank_points #3, superlative #3 #4, project col:matches/winner_name #5"}
{"input": "Show names of teachers that teach at least two courses.", "prediction": "select tbl:teachers, project tbl:course #1, group #2 #1, comparative #1 #3 greatequal/2, project col:teachers/Name #4", "alternatives": "select tbl:EMPLOYEE, project tbl:CLASS #1, group #2 #1, comparative #1 #3 greatequal/2, project col:EMPLOYEE/EMP_NAME #4"}
{"input": "List categories that have at least two books after year 1989.", "prediction": "select col:book, project tbl:book #1, comparative #2 #2 great/1989 col:book/Year, group #3 #1, comparative #1 #4 greatequal/2", "alternatives": "select col:book, project tbl:book #1, comparative #2 #2 great/1989 col:book/Year, group #3 #1, comparative #1 #4 greatequal/2."}
{"input": "What are the details for the paragraph that includes the text 'Korea'?", "prediction": "select tbl:paragraph, comparative #1 #1 like%Korea% col:paragraph/Text, project col:paragraph/Details #2", "alternatives": "select tbl:paragraph, comparative #1 #1 like%Korea% col:paragraph/Text, project col:paragraph/Details #3"}
{"input": "On what day was the order with invoice number 10 placed?", "prediction": "select tbl:Order_Items, comparative #1 #1 equal/10 col:Invoices/invoice_number, project col:Customer_Orders/order_date #2", "alternatives": "select tbl:Customer_Orders, project tbl:Invoices #1, comparative #1 #2 equal/10, project col:Customer_Orders/order_date #3"}
{"input": "Return the number of flights arriving in Aberdeen.", "prediction": "select tbl:flight, comparative #1 #1 equal/Aberdeen col:airport/city, aggregate count #2", "alternatives": "select tbl:flights, comparative #1 #1 equal/Aberdeen col:airports/City, aggregate count #2"}
{"input": "How many teachers are there?", "prediction": "select tbl:teachers, aggregate count #1", "alternatives": "select tbl:teacher, aggregate count #1"}
{"input": "What is the name and capacity for the stadium with the highest average attendance?", "prediction": "select tbl:stadium, project col:stadium/Average_Attendance #1, group #2 #1, superlative #1 #3, project col:stadium/name #4, project col:stadium/Capacity #4, union #5 #6", "alternatives": "select tbl:stadium, project none #1, group #2 #1, superlative #1 #3, project col:stadium/Name #4, project col:stadium/Capacity #4, union #5 #6"}
{"input": "Which orders are made by the customer named \"Jeramie\"? Give me the order ids and status.", "prediction": "select tbl:Customer_Orders, comparative #1 #1 equal/Jeramie col:Customers/customer_name, project col:Customer_Orders/order_id #2, project col:Customer_Orders/order_status #2, union #3 #4", "alternatives": "select tbl:Customer_Orders, project val:Customer_Orders/order_name/Jeramie #1, project col:Customer_Orders/order_id #2, project col:Customer_Orders/order_status #2, union #3 #4 #5"}
{"input": "find the names of loser and winner who played in the match with greatest number of minutes.", "prediction": "select tbl:match, project col:match/minutes #1, group #2 #1, superlative #1 #3, project col:match/loser #4, project col:match/winner #4, union #5 #6", "alternatives": "select tbl:matches, project col:matches/minutes #1, group #2 #1, superlative #1 #3, project col:matches/winner_name #4, project col:matches/winner_name #5, project col:matches/loser_name #4, project col:matches/loser_name #7, union #6 #8"}
{"input": "Find the total amount of bonus given in all the evaluations.", "prediction": "select tbl:evaluation, project col:evaluation/amount_of_bonus #1, aggregate sum #2", "alternatives": "select tbl:evaluation, project col:evaluation/Bonus #1, aggregate sum #2"}
{"input": "Find the dates of orders which belong to the customer named \"Jeramie\".", "prediction": "select tbl:Customer, comparative #1 #1 equal/Jeramie col:Customers/customer_name, project tbl:Orders #2, project col:Orders/order_date #3", "alternatives": "select tbl:Customer_Orders, comparative #1 #1 equal/Jeramie col:Customers/customer_name, project tbl:Orders #2, project col:Orders/order_date #3"}
{"input": "What are the notes of the death events which has substring 'East'?", "prediction": "select tbl:Events, comparative #1 #1 like%East% col:Events/Event_Name, project col:Events/Event_Notes #2", "alternatives": "select tbl:death, comparative #1 #1 like%East% col:death/note, project col:death/note #2"}
{"input": "What is the document id with 1 to 2 paragraphs?", "prediction": "select col:Documents, project col:Documents/document_id #1, group #1 #2, comparative #2 #3 greatequal/1, comparative #2 #3 lessequal/2", "alternatives": "select col:Documents, comparative #1 #1 tbl:Document_Paragraphs, comparative #2 #2 greatequal/1 col:Documents/document_id"}
{"input": "List all song names by singers above the average age.", "prediction": "select tbl:song, project col:song/age #1, aggregate avg #2, comparative #1 #2 great/#3, project col:song/song_name #4", "alternatives": "select tbl:song, comparative #1 #2 great/#3, aggregate avg #2, project col:song/age #1, project col:song/song_name #4"}
{"input": "How many matches were played in 2013 or 2016?", "prediction": "select tbl:match, comparative #1 #1 equal/2013 col:match/Year, comparative #1 #1 equal/2016 col:match/Year, union #2 #3, aggregate count #4", "alternatives": "select tbl:match, union #2 #3, comparative #1 #1 equal/2016 col:match/Year, comparative #1 #1 equal/2013 col:match/Year, aggregate count #4"}
{"input": "What are the average and maximum number of tickets bought in all visits?", "prediction": "select tbl:Visits, project col:Visits/Ticket_Buy #1, aggregate col:Visits/Ticket_Buy #2, aggregate avg #3, aggregate max #3, union #4 #5", "alternatives": "select tbl:visit, project col:visit/Num_of_Ticket #1, aggregate col:visit/Num_of_Ticket #2, aggregate avg #3, aggregate max #3, union #4 #5"}
{"input": "Show names for all stadiums except for stadiums having a concert in year 2014.", "prediction": "select tbl:stadium, project tbl:conzert #1, project col:conzert/Year #2, comparative #1 #3 equal/2014, discard #1 #4, project col:stadium/name #5", "alternatives": "select tbl:stadium, comparative #1 #1 tbl:concert, comparative #2 #2 equal/2014 col:concert/Year, discard #1 #3, project col:stadium/Name #4"}
{"input": "Return the names and template ids for documents that contain the letter w in their description.", "prediction": "select tbl:Documents, project col:Documents/document_description #1, comparative #1 #2 like%w%, project col:Documents/document_name #3, project col:Documents/template_id #3, union #4 #5", "alternatives": "select tbl:Documents, project col:Documents/Document_Description #1, comparative #1 #2 like%w%, project col:Documents/Document_Name #3, project col:Documents/Template_ID #3, project col:Documents/Template_ID #5, union #4 #6"}
{"input": "What are the names of the teachers ordered by ascending age?", "prediction": "select tbl:teachers, project col:teachers/Name #1, project col:teachers/Age #1, sort #2 #3 ascending", "alternatives": "select tbl:teacher, project col:teacher/Name #1, project col:teacher/Age #1, sort #2 #3 ascending"}
{"input": "How many architects are female?", "prediction": "select tbl:architects, comparative #1 #1 equal/F col:architects/gender, aggregate count #2", "alternatives": "select tbl:architect, comparative #1 #1 equal/female col:architect/gender, aggregate count #2"}
{"input": "What are the ids of the students who do not own cats as pets?", "prediction": "select tbl:Student, comparative #1 #1 tbl:Pets, discard #1 #2, project col:Student/StuID #3", "alternatives": "select tbl:Student, comparative #1 #1 tbl:Pets, project col:Student/StuID #3, discard #1 #2"}
{"input": "Find the weight of the youngest dog.", "prediction": "select tbl:dog, project col:dog/Weight #1, superlative #1 #2, project col:dog/Weight #3", "alternatives": "select tbl:dog, superlative #1 #2, project col:dog/Weight #1, project col:dog/Weight #3"}
{"input": "What are the distinct names and nationalities of the architects who have ever built a mill?", "prediction": "select tbl:architects, comparative #1 #1 tbl:mill, project col:architects/Name #2, project col:architects/Nationality #2, union #3 #4", "alternatives": "select tbl:architects, union #3 #4, project col:architects/Name #2, project col:architects/Nationality #2, comparative #1 #1 tbl:mill"}
{"input": "How many countries exist?", "prediction": "select tbl:country, aggregate count #1", "alternatives": "select tbl:countries, aggregate count #1"}
{"input": "Find the total number of tours for each ranking date.", "prediction": "select col:tourist, project tbl:tourist #1, group #2 #1, union #1 #3", "alternatives": "select col:Tourist_Rankings, project tbl:Tourist_Rankings #1, group #2 #1, union #1 #3"}
{"input": "How many books are there for each publisher?", "prediction": "select col:book, project tbl:book #1, group #2 #1, union #1 #3", "alternatives": "select col:book_club, project tbl:book_club #1, group #2 #1, union #1 #3"}
{"input": "Which publishers did not publish a book in 1989?", "prediction": "select col:book, comparative #1 #1 equal/1989 col:book/Year, discard #1 #2", "alternatives": "select col:book_club, comparative #1 #1 equal/1989 col:book_club/Year, discard #1 #2"}
{"input": "What is the id of the order which has the most items?", "prediction": "select col:Order_Items, project tbl:Order_Items #1, group #2 #1, superlative #1 #3, project col:Order_Items/order_id #4", "alternatives": "select col:Order_Items, project tbl:Order_Items #1, group #2 #1, superlative #1 #3, project col:Customer_Orders/order_id #4"}
{"input": "Show all template type codes and descriptions.", "prediction": "select tbl:Ref_Template_Types, project col:Ref_Template_Types/Template_Type_Code #1, project col:Ref_Template_Types/Template_Description #1, union #2 #3", "alternatives": "select tbl:Ref_Template_Types, project col:Ref_Template_Types/Temple_Type_Code #1, project col:Ref_Template_Types/Temple_Description #1, union #2 #3"}
{"input": "Find the name and location of the stadiums which some concerts happened in the years of both 2014 and 2015.", "prediction": "select tbl:stadium, project tbl:convention #1, project col:convention/Year #2, comparative #1 #3 equal/2014, comparative #1 #3 equal/15, intersection #1 #4 #5, project col:stadium/name #6, project col:stadium/Location #6, union #7 #8", "alternatives": "select tbl:stadium, project tbl:concerts #1, project col:concerts/year #2, comparative #1 #3 equal/2014, comparative #1 #3 equal/15, intersection #1 #4 #5, project col:stadium/name #6, project col:stadium/Location #6, union #7 #8"}
{"input": "Find all airlines that have at least 10 flights.", "prediction": "select col:flight, project tbl:flight #1, group #2 #1, comparative #1 #3 greatequal/10", "alternatives": "select col:flight, comparative #1 #1 greatequal/10 col:flight/no"}
{"input": "What are the codes of countries with more than 50 players?", "prediction": "select col:country, project tbl:country #1, group #2 #1, comparative #1 #3 great/50, project col:country/Country_code #4", "alternatives": "select col:players, project tbl:players #1, group #2 #1, comparative #1 #3 great/50, project col:players/country_code #4"}
{"input": "What are the airline names and abbreviations for airlines in the USA?", "prediction": "select tbl:airlines, comparative #1 #1 equal/USA col:airlines/country, project col:airlines/name #2, project col:airlines/abbreviation #2, union #3 #4", "alternatives": "select tbl:airlines, comparative #1 #1 equal/USA col:airlines/continent, project col:airlines/name #2, project col:airlines/abbreviation #2, union #3 #4"}
{"input": "What is the average and maximum age for each pet type?", "prediction": "select tbl:Pets, project col:Pets/age #1, group #2 #1, union #1 #3", "alternatives": "select col:Pets, project col:Pets/age #1, group #2 #1, union #1 #3"}
{"input": "Find the id of the pet owned by student whose last name is ‘Smith’.", "prediction": "select tbl:Students, comparative #1 #1 equal/Smith col:Students/last_name, project tbl:Pets #2, project col:Pets/pet_id #3", "alternatives": "select tbl:Student, project tbl:Has_Pet #1, comparative #1 #2 equal/Smith, project tbl:Has_Pet #3, project col:Has_Pet/PetID #4"}
{"input": "How many singers do we have?", "prediction": "select tbl:Songs, aggregate count #1", "alternatives": "select tbl:song, aggregate count #1"}
{"input": "What are the ids, version numbers, and type codes for each template?", "prediction": "select tbl:Templates, project col:Templates/template_id #1, project col:Templates/version_number #1, project col:Templates/type_code #1, union #2 #3 #4", "alternatives": "select tbl:Templates, project col:Templates/id #1, project col:Templates/version_number #1, project col:Templates/type_code #1, union #2 #3 #4"}
{"input": "How many matches were played in 2013 or 2016?", "prediction": "select tbl:match, comparative #1 #1 equal/2013 col:match/Year, comparative #1 #1 equal/2016 col:match/Year, union #2 #3, aggregate count #4", "alternatives": "select tbl:match, comparative #1 #1 equal/2016 col:match/Year, comparative #1 #1 equal/2013 col:match/Year, union #2 #3, aggregate count #4"}
{"input": "What are the different ids and names of the battles that lost any 'Brig' type shipes?", "prediction": "select tbl:battle, project tbl:shipes #1, comparative #1 #2 equal/Brig, project col:battle/id #3, project col:battle/name #3, union #4 #5", "alternatives": "select tbl:battle, project tbl:shipes #1, project col:battle/id #3, comparative #1 #2 equal/Brig, project col:battle/name #3, union #4 #5"}
{"input": "Find the number of flights landing in the city of Aberdeen or Abilene.", "prediction": "select tbl:flight, project tbl:landing #1, comparative #1 #2 equal/Aberdeen, comparative #1 #2 equal/Abilene, union #3 #4, aggregate count #5", "alternatives": "select tbl:flight, comparative #1 #1 equal/Aberdeen col:airport/city, comparative #1 #1 equal/Abilene col:flight/origin, union #2 #3, aggregate count #4"}
{"input": "What are the locations and names of all stadiums with capacity between 5000 and 10000?", "prediction": "select tbl:stadium, project col:stadium/Capacity #1, comparative #1 #2 greatequal/5000, comparative #1 #2 lessequal/10000, intersection #1 #3 #4, project col:stadium/Location #5, project col:stadium/name #5, union #6 #7", "alternatives": "select tbl:stadium, union #6 #7, comparative #1 #2 greatequal/5000, comparative #1 #2 lessequal/10000, intersection #1 #3 #4, project col:stadium/Location #5, project col:stadium/name #5, project col:stadium/Capacity #1"}
{"input": "Which order has the most recent shipment? Give me the order id.", "prediction": "select col:Shipments, project tbl:Shipments #1, superlative #1 #2, project col:Shipments/order_id #3", "alternatives": "select col:Shipments, superlative #1 #2, project tbl:Shipments #1, project col:Shipments/order_id #3"}
{"input": "Give me a list of id and status of orders which belong to the customer named \"Jeramie\".", "prediction": "select tbl:Customer_Orders, comparative #1 #1 equal/Jeramie col:Customers/customer_name, project col:Customer_Orders/order_id #2, project col:Customer_Orders/order_status #2, union #3 #4", "alternatives": "select tbl:Customer_Orders, comparative #1 #1 equal/Jeramie col:Customers/customer_name, project col:Orders/order_id #2, project col:Orders/order_status #2, union #3 #4"}
{"input": "Show template ids, version numbers, and template type codes for all templates.", "prediction": "select tbl:Templates, project col:Templates/template_id #1, project col:Templates/version_number #1, project col:Templates/type_code #1, union #2 #3 #4", "alternatives": "select tbl:Customer_Templates, project col:Customer_Templates/template_id #1, project col:Customer_Templates/version_number #1, project col:Customer_Templates/type_code #1, union #2 #3 #4"}
{"input": "What are ids of the all distinct orders, sorted by placement date?", "prediction": "select tbl:Orders, project col:Orders/order_id #1, project col:Orders/placement_date #1, sort #2 #3", "alternatives": "select tbl:Orders, project col:Orders/placement_date #1, project col:Orders/order_id #1, sort #2 #3"}
{"input": "How many books are there for each publisher?", "prediction": "select col:book, project tbl:book #1, group #2 #1, union #1 #3", "alternatives": "select col:book, project tbl:book #1, group #2 #1, union #1 #3."}
{"input": "What are flight numbers of Airline \"United Airlines\"?", "prediction": "select tbl:flight, comparative #1 #1 equal/United Airlines col:airlines/name, project col:flight/flno #2", "alternatives": "select val:flight, project col:flight/flno #1"}
{"input": "Find all airlines that have at least 10 flights.", "prediction": "select col:flight, project tbl:flight #1, group #2 #1, comparative #1 #3 greatequal/10", "alternatives": "select col:flight, group #2 #1, project tbl:flight #1, comparative #1 #3 greatequal/10"}
{"input": "How many pets have a greater weight than 10?", "prediction": "select tbl:Person, project col:Person/weight #1, comparative #1 #2 great/10, aggregate count #3", "alternatives": "select tbl:pets, project col:pets/Weight #1, comparative #1 #2 great/10, aggregate count #3"}
{"input": "Find the id and weight of all pets whose age is older than 1.", "prediction": "select tbl:Pets, project col:Pets/age #1, comparative #1 #2 great/1, project col:Pets/id #3, project col:Pets/weight #3, union #4 #5", "alternatives": "select tbl:pets, project col:pets/age #1, comparative #1 #2 great/1, project col:pets/id #3, project col:pets/weight #3, union #4 #5"}
{"input": "How many flights have destination ATO?", "prediction": "select tbl:flight, project none #1, comparative #1 #2 equal/ATO, aggregate count #3", "alternatives": "select tbl:flight, project col:flight/destination #1, comparative #1 #2 equal/AO, aggregate count #3"}
{"input": "What are the names, themes, and number of singers for every concert?", "prediction": "select tbl:concert, project col:concert/Name #1, project col:concert/Theme #1, project tbl:song #1, group #4 #1, union #2 #3 #5", "alternatives": "select tbl:concert, project col:concert/Name #1, group #4 #1, project tbl:song #1, project col:concert/Theme #1, union #2 #3 #5"}
{"input": "How many paragraphs for the document with name 'Summer Show'?", "prediction": "select tbl:Documents, project col:Documents/document_name #1, comparative #1 #2 equal/Summer Show, project tbl:Paragraphs #3, aggregate count #4", "alternatives": "select tbl:All_Documents, project col:All_Documents/Document_Name #1, comparative #1 #2 equal/Summer Show, project tbl:Paragraph #3, aggregate count #4"}
{"input": "What are the codes of countries with more than 50 players?", "prediction": "select col:country, project tbl:country #1, group #2 #1, comparative #1 #3 great/50, project col:country/Country_code #4", "alternatives": "select col:country, project col:country/Country_code #4, group #2 #1, comparative #1 #3 great/50, project tbl:country #1"}
{"input": "List the first and last name of all players in the order of birth date.", "prediction": "select tbl:Player, project col:Player/first_name #1, project col:Player/last_name #1, project col:Player/bdate #1, union #2 #3, sort #5 #4", "alternatives": "select tbl:Player, project col:Player/first_name #1, project col:Player/last_name #1, union #2 #3, project col:Player/bdate #1, sort #5 #4"}
{"input": "Find the codes of countries that have more than 50 players.", "prediction": "select col:country, project tbl:country #1, group #2 #1, comparative #1 #3 great/50, project col:country/Country_code #4", "alternatives": "select col:country, project tbl:country #1, group #2 #1, comparative #1 #3 great/50, project col:country/Code #4"}
{"input": "What are the different template type codes, and how many documents use each type?", "prediction": "select tbl:Documents, project col:Documents/Template_Type_Code #1, group #1 #2, union #2 #3", "alternatives": "select tbl:Document_Types, project col:Document_Types/Template_Type_Code #1, group #1 #2, union #2 #3"}
{"input": "What is maximum and minimum death toll caused each time?", "prediction": "select tbl:Trauma, project col:Trauma/Toll #1, group #2 #1, aggregate max #3, aggregate min #3, union #4 #5", "alternatives": "select col:death, aggregate max #1, aggregate min #1, union #2 #3"}
{"input": "Find the name of the customer who made the most orders.", "prediction": "select tbl:Customers, project tbl:Orders #1, group #2 #1, superlative #1 #3, project col:Customers/customer_name #4", "alternatives": "select tbl:Customers, project tbl:Orders #1, project col:Customers/customer_name #4, superlative #1 #3, group #2 #1"}
{"input": "What is the id and type code for the template used by the most documents?", "prediction": "select tbl:Documents, project tbl:Documents #1, group #2 #1, superlative #1 #3, project col:Documents/Template_ID #4, project col:Documents/Type_Code #4, union #5 #6", "alternatives": "select tbl:Documents, project tbl:Documents #1, group #2 #1, superlative #1 #3, project col:Documents/template_id #4, project col:Documents/template_type_code #4"}
{"input": "What are the names and release years for all the songs of the youngest singer?", "prediction": "select tbl:song, project col:song/song_name #1, superlative #1 #2, project col:song/song_release_year #3, project col:song/song_name #3, union #4 #5", "alternatives": "select tbl:song, project col:song/song_name #1, project col:song/song_name #3, project col:song/song_release_year #3, superlative #1 #2, union #4 #5"}
{"input": "What are the different ids and names of the battles that lost any 'Brig' type shipes?", "prediction": "select tbl:battle, project tbl:shipes #1, comparative #1 #2 equal/Brig, project col:battle/id #3, project col:battle/name #3, union #4 #5", "alternatives": "select tbl:battle, project tbl:shipes #1, comparative #1 #2 equal/Brig, discard #1 #3, project col:battle/id #4, project col:battle/name #4, union #5 #6"}
{"input": "Find the total number of tours for each ranking date.", "prediction": "select col:tourist, project tbl:tourist #1, group #2 #1, union #1 #3", "alternatives": "select col:rankings, project col:rankings/tours #1, group #2 #1, union #1 #3"}
{"input": "Show all template type codes with less than three templates.", "prediction": "select col:Templates, project tbl:Templates #1, group #2 #1, comparative #1 #3 less/3", "alternatives": "select col:Ref_Templates, project tbl:Ref_Templates #1, group #2 #1, comparative #1 #3 less/3"}
{"input": "What are the ids of the students who do not own cats as pets?", "prediction": "select tbl:Student, comparative #1 #1 tbl:Pets, discard #1 #2, project col:Student/StuID #3", "alternatives": "select tbl:Student, comparative #1 #1 equal/cat col:Pets/PetType, discard #1 #2, project col:Student/StuID #3"}
{"input": "What are the template ids with template type description \"Presentation\".", "prediction": "select tbl:Customer_Templates, project tbl:Customer_Templates #1, comparative #1 #2 equal/Presentation, project col:Customer_Templates/template_id #3", "alternatives": "select tbl:Customer_Templates, comparative #1 #2 equal/Presentation, project tbl:Customer_Templates #1, project col:Customer_Templates/template_id #3"}
{"input": "How much does the youngest dog weigh?", "prediction": "select tbl:dog, project col:dog/Weight #1, superlative #1 #2, project col:dog/Weight #3", "alternatives": "select tbl:dog, superlative #1 #2, project col:dog/Weight #1, project col:dog/Weight #3"}
{"input": "What are the distinct names and nationalities of the architects who have ever built a mill?", "prediction": "select tbl:architects, comparative #1 #1 tbl:mill, project col:architects/Name #2, project col:architects/Nationality #2, union #3 #4", "alternatives": "select tbl:architect, comparative #1 #1 tbl:mill, project col:architect/nationality #2, union #3 #4"}
{"input": "What are the distinct types of mills that are built by American or Canadian architects?", "prediction": "select tbl:mill, project col:architecture/Nationality #1, comparative #1 #2 equal/American, comparative #1 #2 equal/Canada, union #3 #4", "alternatives": "select tbl:mill, comparative #1 #1 equal/American col:architecture/Nationality, comparative #1 #1 equal/Canada col:architecture/Nationality, union #2 #3"}
{"input": "What are the ids for templates that are not used in any documents?", "prediction": "select tbl:Documents, comparative #1 #1 tbl:Documents, discard #1 #2, project col:Documents/template_id #3", "alternatives": "select tbl:Documents, project col:Documents/template_id #3, discard #1 #2, comparative #1 #1 tbl:Documents"}
{"input": "List the names of employees and sort in ascending order of age.", "prediction": "select tbl:employee, project col:employee/name #1, project col:employee/age #1, sort #2 #3 ascending", "alternatives": "select tbl:employee, project col:employee/name #1, sort #2 #3 ascending, project col:employee/age #1"}
{"input": "Find the id of the order which is shipped most recently.", "prediction": "select col:Orders, superlative #1 #1, project col:Orders/order_id #2", "alternatives": "select col:Orders, project col:Orders/order_shipping_date #1, superlative #1 #2"}
{"input": "What are the airline names and abbreviations for airlines in the USA?", "prediction": "select tbl:airlines, comparative #1 #1 equal/USA col:airlines/country, project col:airlines/name #2, project col:airlines/abbreviation #2, union #3 #4", "alternatives": "select tbl:airlines, comparative #1 #1 equal/USA col:airlines/Country, project col:airlines/Airline #2, project col:airlines/Abbreviation #2, union #3 #4"}
{"input": "List the first name and birth date of all players from the country with code USA.", "prediction": "select tbl:Player, project col:Player/country #1, project col:Player/country #2, comparative #1 #3 equal/USA, project col:Player/first_name #4, project col:Player/birth_date #4, union #5 #6", "alternatives": "select tbl:Player, project col:Player/country #1, comparative #1 #2 equal/USA, project col:Player/first_name #3, project col:Player/birth_date #3, union #4 #5"}
{"input": "Find number of pets owned by students who are older than 20.", "prediction": "select tbl:Students, comparative #1 #1 great/20 col:Students/age, project tbl:Pets #2, aggregate count #3", "alternatives": "select tbl:Students, aggregate count #3, project tbl:Pets #2, comparative #1 #1 great/20 col:Students/age"}
{"input": "What are the titles, years, and directors of all movies, ordered by budget in millions?", "prediction": "select tbl:Movie, project col:Movie/title #1, project col:Movie/year #1, project col:Movie/director #1, project col:Movie/budget #1, union #2 #3 #4, sort #6 #5", "alternatives": "select tbl:Movie, sort #6 #5, project col:Movie/year #1, project col:Movie/director #1, project col:Movie/budget #1, union #2 #3 #4, project col:Movie/title #1"}
{"input": "What are airlines that have some flight departing from airport 'AHD'?", "prediction": "select col:flight, comparative #1 #1 equal/AHD col:airport/airport_name, project tbl:flight #2", "alternatives": "select col:flight, project tbl:flight #1, comparative #2 #1 equal/AHD col:airport/Airport_Name, aggregate count #3"}
{"input": "Which year had the most matches?", "prediction": "select col:match, project tbl:match #1, group #2 #1, superlative #1 #3", "alternatives": "select col:match, project tbl:match #1, group #3 #1, superlative #1 #4"}
{"input": "How many dog pets are raised by female students?", "prediction": "select tbl:Student, comparative #1 #1 equal/F col:Student/Sex, aggregate count #2", "alternatives": "select tbl:Student, comparative #1 #1 equal/F col:Student/Sex, project tbl:PersonFriend #2, aggregate count #3"}
{"input": "What is the name and capacity of the stadium with the most concerts after 2013?", "prediction": "select tbl:stadium, project tbl:concerts #1, comparative #2 #2 great/2013 col:concerts/year, group #3 #1, superlative #1 #4, project col:stadium/name #5, project col:stadium/capacity #5, union #6 #7", "alternatives": "select tbl:stadium, project tbl:concert #1, comparative #2 #2 great/2013 col:concert/Year, group #3 #1, superlative #1 #4, project col:stadium/Name #5, project col:stadium/Capacity #5, union #6 #7"}
{"input": "What are the names of the singers who performed in a concert in 2014?", "prediction": "select tbl:artist, comparative #1 #1 equal/2014 col:concerts/year, project col:artist/name #2", "alternatives": "select tbl:song, comparative #1 #1 equal/2014 col:performance/year, project col:artist/artist_name #2."}
{"input": "Which customers have both \"On Road\" and \"Shipped\" as order status? List the customer names.", "prediction": "select tbl:Customers, project tbl:Orders #1, comparative #1 #2 equal/On Road, comparative #1 #2 equal/Shipped, intersection #1 #3 #4, project col:Customers/customer_name #5", "alternatives": "select tbl:Customers, project tbl:Orders #1, project col:Orders/order_status #2, comparative #1 #3 equal/On Road, comparative #1 #3 equal/Shipped, intersection #1 #4 #5, project col:Customers/customer_name #6"}
{"input": "Return the id and name of the document with the most paragraphs.", "prediction": "select tbl:Documents, project tbl:Document_Paragraphs #1, group #2 #1, superlative #1 #3, project col:Documents/document_id #4, project col:Documents/document_name #4, union #5 #6", "alternatives": "select tbl:Documents, project tbl:Document_Paragraphs #1, group #2 #1, union #5 #6, project col:Documents/document_id #4, project col:Documents/document_name #4, superlative #1 #3"}
{"input": "How many concerts occurred in 2014 or 2015?", "prediction": "select tbl:concerts, comparative #1 #1 equal/2014 col:concerts/year, comparative #1 #1 equal/2015 col:concerts/year, union #2 #3, aggregate count #4", "alternatives": "select tbl:Concerts, comparative #1 #1 equal/2014 col:Concerts/year, comparative #1 #1 equal/2015 col:Concerts/year, union #2 #3, aggregate count #4"}
{"input": "What are the names of the teachers and the courses they teach in ascending alphabetical order by the name of the teacher?", "prediction": "select tbl:teachers, project col:teachers/Name #1, project tbl:teaches #1, project col:courses/course_name #3, union #2 #4, sort #5 #4 ascending", "alternatives": "select tbl:teachers, project col:teachers/Name #1, project tbl:teaches #1, union #2 #4, project col:courses/course_name #3, sort #5 #4 ascending"}
{"input": "Which abbreviation corresponds to Jetblue Airways?", "prediction": "select val:airlines, project col:airlines/abbreviation #1", "alternatives": "select val:airlines, project col:airlines/Abbreviation #1"}
{"input": "List the name, nationality and id of all male architects ordered by their names lexicographically.", "prediction": "select tbl:architects, comparative #1 #1 equal/M col:architects/gender, project col:architects/name #2, project col:architects/nationality #2, project col:architects/architect_id #2, union #3 #4 #5, sort #6 #5 lexicographically", "alternatives": "select tbl:architects, comparative #1 #1 equal/M col:architects/gender, project col:architects/name #2, sort #6 #5 lexicographically, project col:architects/architect_id #2, union #3 #4 #5, project col:architects/nationality #2"}
{"input": "Find the invoice numbers which are created before 1989-09-03 or after 2007-12-25.", "prediction": "select col:Invoices, comparative #1 #1 less/2007-12-25 col:Invoices/date_invoice_created, comparative #1 #1 great/1989-09-03 col:Invoices/date_invoice_created, union #2 #3", "alternatives": "select tbl:Invoices, project col:Invoices/invoice_date #1, comparative #1 #2 less/1989-09-03, comparative #1 #2 great/2007-12-25, union #3 #4, project col:Invoices/invoice_number #5"}
{"input": "How many different winners both participated in the WTA Championships and were left handed?", "prediction": "select col:results, comparative #1 #1 equal/WTA Championship col:races/name, comparative #1 #1 equal/left col:races/name, intersection #1 #2 #3", "alternatives": "select col:matches, comparative #1 #1 equal/WTA Championships col:matches/tourney_name, comparative #1 #1 equal/L col:matches/winner_hand, intersection #1 #2 #3, aggregate count #4"}
{"input": "What is the name of the winner with the most rank points who participated in the Australian Open tournament?", "prediction": "select val:record, project col:record/Rank_Points #1, group #2 #1, superlative #1 #3, project col:people/Name #4", "alternatives": "select val:match, project col:match/Rank_Points #1, group #2 #1, superlative #1 #3"}
{"input": "What are the distinct details of invoices created before 1989-09-03 or after 2007-12-25?", "prediction": "select tbl:Invoices, comparative #1 #1 less/1989-09-03 col:Invoices/date_invoice_launch, comparative #1 #1 great/2007-12-25 col:Invoices/date_invoice_launch, union #2 #3", "alternatives": "select tbl:Invoices, comparative #1 #1 less/1989-09-03 col:Invoices/invoice_date, comparative #1 #1 great/2007-12-25 col:Invoices/invoice_date, union #2 #3"}
{"input": "How many United Airlines flights go to City 'Aberdeen'?", "prediction": "select tbl:flight, comparative #1 #1 equal/United Airlines col:flight/origin, comparative #2 #2 equal/Aberdeen col:flight/destination, aggregate count #3", "alternatives": "select tbl:flight, comparative #1 #1 equal/United Airlines col:flight/origin, comparative #2 #2 equal/Berdeen col:flight/destination, aggregate count #3"}
{"input": "Find the number of players for each hand type.", "prediction": "select col:Player, project tbl:Player #1, group #2 #1, union #1 #3", "alternatives": "select col:Player, group #2 #1, project tbl:Player #1, union #1 #3"}
{"input": "Show all template ids and number of documents using each template.", "prediction": "select col:Documents, project col:Documents/Document_ID #1, project tbl:Documents #1, group #3 #1, union #2 #4", "alternatives": "select col:Documents, project col:Documents/Document_ID #1, group #3 #1, project tbl:Documents #1, union #2 #4"}
{"input": "Sort employee names by their age in ascending order.", "prediction": "select tbl:employee, project col:employee/name #1, project col:employee/age #1, sort #2 #3 ascending", "alternatives": "select tbl:employee, project col:employee/name #1, project col:employee/age #1, sort #2 #3 ascending."}
{"input": "List singer names and number of concerts for each singer.", "prediction": "select col:Concerts, project col:Songs/Name #1, project tbl:Concerts #1, group #3 #1, union #2 #4", "alternatives": "select col:singer, project col:singer/Name #1, project tbl:singer_in_concert #1, group #3 #1, union #2 #4"}
{"input": "Show name, country, age for all singers ordered by age from the oldest to the youngest.", "prediction": "select tbl:song, project col:artist/artist_name #1, project col:artist/country #1, project col:artist/age #1, union #2 #3 #4, sort #5 #4 descending", "alternatives": "select tbl:singer, project col:singer/Name #1, project col:singer/Country #1, project col:singer/Age #1, union #2 #3 #4, sort #5 #4 descending"}
{"input": "How many museums were opened after 2013 or before 2008?", "prediction": "select tbl:museen, comparative #1 #1 great/2013 col:museen/Open_Year, comparative #1 #1 less/2008 col:museen/Open_Year, union #2 #3, aggregate count #4", "alternatives": "select tbl:museen, comparative #1 #1 great/2013 col:museen/Open_Year, comparative #1 #1 less/2008 col:museen/Open_Year, aggregate count #4, union #2 #3"}
{"input": "Which airline has abbreviation 'UAL'?", "prediction": "select col:airlines, project col:airlines/abbreviation #1, comparative #1 #2 like%UAL%", "alternatives": "select col:airlines, project col:airlines/Abbreviation #1, comparative #1 #2 equal/UAL"}
{"input": "What are the invoice numbers created before 1989-09-03 or after 2007-12-25?", "prediction": "select col:Invoices, comparative #1 #1 less/1989-09-03 col:Invoices/date_invoice_created, comparative #1 #1 great/2007-12-25 col:Invoices/date_invoice_number, union #2 #3", "alternatives": "select col:Invoices, comparative #1 #1 less/1989-09-03 col:Invoices/invoice_date, comparative #1 #1 great/2007-12-25 col:Invoices/invoice_date, union #2 #3"}
{"input": "What is the template type code of the template used by document with the name \"Data base\"?", "prediction": "select tbl:Documents, project col:Documents/document_name #1, comparative #1 #2 equal/Data base, project tbl:Documents #3, project col:Documents/template_type_code #4", "alternatives": "select tbl:Documents, project col:Documents/document_name #1, project col:Documents/template_type_code #4, project tbl:Documents #3, comparative #1 #2 equal/Data base"}
{"input": "Give the airport code and airport name corresonding to the city Anthony.", "prediction": "select val:airport, project col:airport/Airport_Code #1, project col:airport/Airport_Name #1, union #2 #3", "alternatives": "select val:airport, project col:airport/Airport_Code #1, union #2 #3, project col:airport/Airport_Name #1"}
{"input": "Find the average age of losers and winners of all matches.", "prediction": "select tbl:match, project col:match/Losers #1, project col:match/Wins #1, group #3 #1, aggregate avg #4", "alternatives": "select tbl:match, project col:match/Losers #1, project col:match/Winner #1, aggregate avg #2, union #3 #4"}
{"input": "Find the average number of staff working for the museums that were open before 2009.", "prediction": "select tbl:museen, comparative #1 #1 less/2009 col:museum/Open_Year, project col:museum/Staff #2, group #3 #2, aggregate avg #4", "alternatives": "select tbl:museum, comparative #1 #1 less/2009 col:museum/Open_Year, project col:museum/Num_of_Staff #2, aggregate avg #3"}
{"input": "Which employee received the biggest bonus? Give me the employee name.", "prediction": "select tbl:employee, project col:employee/bonus #1, superlative #1 #2, project col:employee/name #3", "alternatives": "select tbl:employee, project col:employee/billion #1, superlative #1 #2, project col:employee/name #3."}
