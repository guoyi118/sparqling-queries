{"id": "ATIS_dev_0", "input": "what flights are available tomorrow from denver to philadelphia ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from denver']\", \"FILTER['#2', 'to philadelphia']\", \"FILTER['#3', 'if available']\"]"}
{"id": "ATIS_dev_1", "input": "show me the afternoon flights from washington to boston ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from washington']\", \"FILTER['#2', 'to boston']\", \"FILTER['#3', 'in the afternoon']\"]"}
{"id": "ATIS_dev_10", "input": "show me the flights from atlanta to baltimore ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from atlanta']\", \"FILTER['#2', 'to baltimore']\"]"}
{"id": "ATIS_dev_100", "input": "i want a flight from houston to memphis on tuesday morning ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from houston']\", \"FILTER['#2', 'to memphis']\", \"FILTER['#3', 'on tuesday']\", \"FILTER['#4', 'in the morning']\"]"}
{"id": "ATIS_dev_101", "input": "what are the cheapest one way flights from atlanta to pittsburgh ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from atlanta']\", \"FILTER['#2', 'to pittsburgh']\", \"FILTER['#3', 'that are one way']\", \"PROJECT['cheapness of #REF', '#4']\", \"COMPARATIVE['#4', '#5', 'is cheapest']\"]"}
{"id": "ATIS_dev_102", "input": "what ground transportation is available from the pittsburgh airport to downtown and how much does it cost ", "output": "[\"SELECT['ground transportation']\", \"FILTER['#1', 'which is available']\", \"FILTER['#2', 'from the pittsburgh airport']\", \"FILTER['#3', 'to downtown']\", \"PROJECT['the cost of #REF', '#4']\"]"}
{"id": "ATIS_dev_103", "input": "flight information from san francisco to pittsburgh ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from san francisco']\", \"FILTER['#2', 'to pittsburgh']\", \"PROJECT['information of #REF', '#3']\"]"}
{"id": "ATIS_dev_104", "input": "what flights are available from san francisco to pittsburgh on monday morning ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from san francisco']\", \"FILTER['#2', 'to pittsburgh']\", \"FILTER['#3', 'on monday morning']\", \"FILTER['#4', 'that are available']\"]"}
{"id": "ATIS_dev_105", "input": "train to newark ", "output": "[\"SELECT['trains']\", \"FILTER['#1', 'to newark']\"]"}
{"id": "ATIS_dev_106", "input": "i'm traveling from boston to atlanta and i'd like to go sometime after 5pm but i want to know what kind of airplane it's on ", "output": "[\"SELECT['travel']\", \"PROJECT['airplanes of #REF', '#1']\", \"FILTER['#2', 'from boston']\", \"FILTER['#3', 'to atlanta']\", \"FILTER['#4', 'that are after 5pm']\", \"PROJECT['what kind of #REF', '#5']\"]"}
{"id": "ATIS_dev_107", "input": "dallas to baltimore ", "output": "[\"SELECT['dallas to baltimore']\"]"}
{"id": "ATIS_dev_108", "input": "what does ff mean ", "output": "[\"SELECT['what does ff mean']\"]"}
{"id": "ATIS_dev_109", "input": "well i'll try last time tell me the kind of aircraft united airlines flies from denver to san francisco before 10 o'clock in the morning ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'on united airlines']\", \"FILTER['#2', 'from denver']\", \"FILTER['#3', 'to san francisco']\", \"FILTER['#4', 'that are before 10 oclock in the morning']\", \"PROJECT['the kind of aircraft of #REF', '#5']\"]"}
{"id": "ATIS_dev_11", "input": "show me the flights from dallas to boston ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from dallas']\", \"FILTER['#2', 'to boston']\"]"}
{"id": "ATIS_dev_110", "input": "i need a flight from philadelphia to dallas ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from philadelphia']\", \"FILTER['#2', 'to dallas']\"]"}
{"id": "ATIS_dev_111", "input": "what is the round trip first class fare on united from boston to san francisco ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from boston']\", \"FILTER['#2', 'to san francisco']\", \"FILTER['#3', 'on united']\", \"FILTER['#4', 'that are round trip']\", \"FILTER['#5', 'on first class']\", \"PROJECT['fares of #REF', '#6']\"]"}
{"id": "ATIS_dev_112", "input": "i'd like also to book a one way flight from pittsburgh to atlanta the cheapest one on july twentieth ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'that are one way']\", \"FILTER['#2', 'from pittsburgh']\", \"FILTER['#3', 'to atlanta']\", \"FILTER['#4', 'on july twentieth']\", \"FILTER['#5', 'that is cheapest']\"]"}
{"id": "ATIS_dev_113", "input": "find me the cheapest one way fare i can get from boston to denver ", "output": "[\"SELECT['one way fares']\", \"FILTER['#1', 'from boston']\", \"FILTER['#2', 'to denver']\", \"PROJECT['the cheapest of #REF', '#3']\"]"}
{"id": "ATIS_dev_114", "input": "flights from baltimore to san francisco ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from baltimore']\", \"FILTER['#2', 'to san francisco']\"]"}
{"id": "ATIS_dev_115", "input": "i want to fly from baltimore to dallas round trip ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from baltimore']\", \"FILTER['#2', 'to dallas']\", \"FILTER['#3', 'that is round trip']\"]"}
{"id": "ATIS_dev_116", "input": "what are all the flights into atlanta's airport ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'to atlanta s airport']\"]"}
{"id": "ATIS_dev_117", "input": "show me the flights from philadelphia to dallas ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from philadelphia']\", \"FILTER['#2', 'to dallas']\"]"}
{"id": "ATIS_dev_118", "input": "what flights from seattle to salt lake city ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from seattle']\", \"FILTER['#2', 'to salt lake city']\"]"}
{"id": "ATIS_dev_119", "input": "what is the earliest flight from pittsburgh to san francisco ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from pittsburgh']\", \"FILTER['#2', 'to san francisco']\", \"PROJECT['when are #REF', '#3']\", \"COMPARATIVE['#3', '#4', 'is the lowest']\"]"}
{"id": "ATIS_dev_12", "input": "list the flights from st. paul to san jose and from st. paul to houston ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from st. paul']\", \"FILTER['#2', 'to san jose']\", \"FILTER['#2', 'to houston']\", \"UNION['#3', '#4']\"]"}
{"id": "ATIS_dev_120", "input": "are there any flights from pittsburgh to boston that leave between noon and 5 o'clock ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from pittsburgh to boston']\", \"FILTER['#2', 'that leave betweenleftside noon']\", \"FILTER['#3', 'that leave betweenrightside 5 oclock']\"]"}
{"id": "ATIS_dev_121", "input": "what is ord ", "output": "[\"SELECT['ord']\"]"}
{"id": "ATIS_dev_122", "input": "list all nonstop flights from los angeles to pittsburgh which arrive before 5pm on tuesday ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'that are nonstop']\", \"FILTER['#2', 'from los angeles']\", \"FILTER['#3', 'to pittsburgh']\", \"FILTER['#4', 'which arrive before 5pm']\", \"FILTER['#5', 'on tuesday']\"]"}
{"id": "ATIS_dev_123", "input": "show me about the ground transportation in boston ", "output": "[\"SELECT['ground transportation']\", \"FILTER['#1', 'in boston']\"]"}
{"id": "ATIS_dev_124", "input": "what's the earliest flight from boston to bwi that serves lunch ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from boston']\", \"FILTER['#2', 'to bwi']\", \"FILTER['#3', 'that serves lunch']\", \"PROJECT['the earliest #REF', '#4']\"]"}
{"id": "ATIS_dev_125", "input": "how many flights arrive at general mitchell international ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'that arrive at least general mitchell international']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "ATIS_dev_126", "input": "where does canadian airlines international fly ", "output": "[\"SELECT['canadian airlines international']\", \"PROJECT['where does #REF fly', '#1']\"]"}
{"id": "ATIS_dev_127", "input": "what ground transportation is available from the pittsburgh airport to the town ", "output": "[\"SELECT['ground transportations']\", \"FILTER['#1', 'from the pittsburgh airport']\", \"FILTER['#2', 'to the town']\", \"FILTER['#3', 'that are available']\"]"}
{"id": "ATIS_dev_128", "input": "what's the capacity of an f28 ", "output": "[\"SELECT['capacity']\", \"FILTER['#1', 'of f28']\"]"}
{"id": "ATIS_dev_129", "input": "what car rentals are available next sunday from denver airport ", "output": "[\"SELECT['car rentals']\", \"FILTER['#1', 'available next sunday']\", \"FILTER['#2', 'from denver airport']\"]"}
{"id": "ATIS_dev_13", "input": "i'd like to book the cheapest one way flight from pittsburgh to atlanta on july twentieth ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'that are one way']\", \"FILTER['#2', 'from pittsburgh']\", \"FILTER['#3', 'to atlanta']\", \"FILTER['#4', 'on july twentieth']\", \"FILTER['#5', 'that is cheapest']\"]"}
{"id": "ATIS_dev_130", "input": "show flights leaving miami to cleveland on us air that leave after noon ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'on us air']\", \"FILTER['#2', 'from miami']\", \"FILTER['#3', 'to cleveland']\", \"FILTER['#4', 'leaving in the after noon']\"]"}
{"id": "ATIS_dev_131", "input": "i want a flight from atlanta to washington that leaves after 3pm ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from atlanta to washington']\", \"FILTER['#2', 'that leave after 3pm']\"]"}
{"id": "ATIS_dev_132", "input": "show me the flights from cleveland to memphis ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from cleveland']\", \"FILTER['#2', 'to memphis']\"]"}
{"id": "ATIS_dev_133", "input": "what does the fare code qw mean ", "output": "[\"SELECT['fare codes']\", \"PROJECT['qw of #REF', '#1']\", \"PROJECT['what does #REF mean', '#2']\"]"}
{"id": "ATIS_dev_134", "input": "show me all the flights from cincinnati to toronto ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from cincinnati']\", \"FILTER['#2', 'to toronto']\"]"}
{"id": "ATIS_dev_135", "input": "from las vegas to new york a nonstop twa and fare ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'that are nonstop']\", \"FILTER['#2', 'that are twa']\", \"FILTER['#3', 'from las vegas']\", \"FILTER['#4', 'to new york']\", \"PROJECT['fares of #REF', '#5']\", \"UNION['#5', '#6']\"]"}
{"id": "ATIS_dev_136", "input": "i'd like to know the latest flight from atlanta to boston ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from atlanta']\", \"FILTER['#2', 'to boston']\", \"FILTER['#3', 'that is latest']\"]"}
{"id": "ATIS_dev_137", "input": "show flights from memphis to las vegas ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from memphis']\", \"FILTER['#2', 'las vegas']\"]"}
{"id": "ATIS_dev_138", "input": "could you please find me a nonstop flight from atlanta to baltimore on a boeing 757 arriving at 7pm ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from atlanta to baltimore']\", \"FILTER['#2', 'on and boeing 757']\", \"FILTER['#3', 'arriving atlantas 7pm']\", \"PROJECT['nonstop #REF', '#4']\"]"}
{"id": "ATIS_dev_139", "input": "what flights from st. paul to kansas city on friday with supper served ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from st. paul']\", \"FILTER['#2', 'to kansas city']\", \"FILTER['#3', 'on friday']\", \"FILTER['#4', 'that serve supper']\"]"}
{"id": "ATIS_dev_140", "input": "could you tell me if there is ground transportation between the boston airport and boston downtown ", "output": "[\"SELECT['ground transportation']\", \"FILTER['#1', 'between boston airport']\", \"FILTER['#2', 'and boston downtown']\", \"BOOLEAN['#3', 'is there any #REF']\"]"}
{"id": "ATIS_dev_141", "input": "is it possible for me to fly from baltimore to san francisco ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from baltimore']\", \"FILTER['#2', 'to san francisco']\", \"BOOLEAN['#3', 'if there is #REF']\"]"}
{"id": "ATIS_dev_142", "input": "what is the first class fare for a round trip dallas to denver ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from dallas']\", \"FILTER['#2', 'to denver']\", \"FILTER['#3', 'that is round trip']\", \"FILTER['#4', 'that is on first class']\", \"PROJECT['fares of #REF', '#5']\"]"}
{"id": "ATIS_dev_143", "input": "list all flights on continental leaving seattle on sunday after 430pm ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'on continental']\", \"FILTER['#2', 'leaving seattle']\", \"FILTER['#3', 'on sunday']\", \"FILTER['#4', 'after 430pm']\"]"}
{"id": "ATIS_dev_144", "input": "all flights and fares from pittsburgh to dallas round trip after 12pm less than 1100 dollars ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from pittsburgh']\", \"FILTER['#2', 'to dallas']\", \"FILTER['#3', 'that are round trip']\", \"FILTER['#4', 'that are after 12pm']\", \"FILTER['#5', 'that are less than 1100']\", \"PROJECT['fares of #REF', '#6']\", \"UNION['#6', '#7']\"]"}
{"id": "ATIS_dev_145", "input": "what flights are available from boston to dallas ", "output": "[\"SELECT['available flights']\", \"FILTER['#1', 'from boston to dallas']\"]"}
{"id": "ATIS_dev_146", "input": "i need a cheap flight from baltimore to san francisco ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from baltimore to san francisco']\", \"PROJECT['cheap #REF', '#2']\"]"}
{"id": "ATIS_dev_147", "input": "a first class flight on american to san francisco on the coming tuesday ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'on american']\", \"FILTER['#2', 'to san francisco']\", \"FILTER['#3', 'on the coming tuesday']\", \"FILTER['#4', 'that is first class']\"]"}
{"id": "ATIS_dev_148", "input": "does any airline have an early afternoon flight from boston to denver ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'in the early afternoon']\", \"FILTER['#2', 'from boston']\", \"FILTER['#3', 'to denver']\", \"PROJECT['airlines of #REF', '#4']\"]"}
{"id": "ATIS_dev_149", "input": "show me flights on monday from philadelphia to boston after 7am ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from philadelphia']\", \"FILTER['#2', 'to boston']\", \"FILTER['#3', 'on monday']\", \"FILTER['#4', 'after 7am']\"]"}
{"id": "ATIS_dev_15", "input": "is there a flight on united airlines from boston to denver ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'on united airlines']\", \"FILTER['#2', 'from boston']\", \"FILTER['#3', 'to denver']\"]"}
{"id": "ATIS_dev_150", "input": "looking for a flight to salt lake city ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'to salt lake city']\"]"}
{"id": "ATIS_dev_151", "input": "show me the nonstop flights from nashville to st. louis ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'that are nonstop']\", \"FILTER['#2', 'from nashville']\", \"FILTER['#3', 'to st. louis']\"]"}
{"id": "ATIS_dev_152", "input": "what are the different classes that an airline offers ", "output": "[\"SELECT['airlines']\", \"PROJECT['different classes #REF offer', '#1']\"]"}
{"id": "ATIS_dev_153", "input": "what type of ground transportation is available between the airport and downtown san francisco ", "output": "[\"SELECT['ground transportation']\", \"FILTER['#1', 'between the airport']\", \"FILTER['#2', 'and downtown san francisco']\"]"}
{"id": "ATIS_dev_155", "input": "what is fare code qo mean ", "output": "[\"SELECT['fare codes']\", \"FILTER['#1', 'which is qo']\", \"PROJECT['what is #REF mean', '#2']\"]"}
{"id": "ATIS_dev_156", "input": "what's the price of the least expensive first class round trip ticket on us air from cleveland to miami ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'in first class']\", \"FILTER['#2', 'on us air']\", \"FILTER['#3', 'from cleveland']\", \"FILTER['#4', 'to miami']\", \"PROJECT['ticket price of #REF', '#5']\", \"FILTER['#6', 'that is the least expensive']\"]"}
{"id": "ATIS_dev_157", "input": "show me the list of flights from dallas to baltimore on american and delta airlines ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from dallas']\", \"FILTER['#2', 'to baltimore']\", \"FILTER['#3', 'on american airlines']\", \"FILTER['#3', 'on delta airlines']\", \"UNION['#4', '#5']\"]"}
{"id": "ATIS_dev_158", "input": "how much does the limousine service cost within pittsburgh ", "output": "[\"SELECT['limousine services']\", \"FILTER['#1', 'within pittsburgh']\", \"PROJECT['how much of #REF', '#2']\"]"}
{"id": "ATIS_dev_159", "input": "what is the cheapest one way fare from boston to washington ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from boston']\", \"FILTER['#2', 'to washington']\", \"FILTER['#3', 'that are one way']\", \"PROJECT['fares of #REF', '#4']\", \"FILTER['#5', 'that is the cheapest']\"]"}
{"id": "ATIS_dev_160", "input": "i need a flight this sunday from miami to las vegas and i would prefer a morning flight ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from miami']\", \"FILTER['#2', 'to las vegas']\", \"FILTER['#3', 'this sunday']\", \"FILTER['#4', 'in the morning']\"]"}
{"id": "ATIS_dev_161", "input": "how much does it cost to fly from atlanta to san francisco ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from atlanta']\", \"FILTER['#2', 'to san francisco']\", \"PROJECT['cost of #REF', '#3']\"]"}
{"id": "ATIS_dev_162", "input": "i need an early flight from denver to san francisco please and i would like breakfast served on that ", "output": "[\"SELECT['flights']\", \"PROJECT['early #REF', '#1']\", \"FILTER['#2', 'from denver']\", \"FILTER['#3', 'to san francisco']\", \"FILTER['#4', 'where breakfast is served']\"]"}
{"id": "ATIS_dev_163", "input": "what round trip tickets are there from cleveland to miami on us air that arrive before 4pm ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'that are round trip']\", \"FILTER['#2', 'from cleveland']\", \"FILTER['#3', 'to miami']\", \"FILTER['#4', 'on us air']\", \"FILTER['#5', 'that arrive before 4pm']\"]"}
{"id": "ATIS_dev_164", "input": "what are the classes of service on lufthansa ", "output": "[\"SELECT['classes']\", \"FILTER['#1', 'of service']\", \"FILTER['#2', 'on lufthansa']\"]"}
{"id": "ATIS_dev_165", "input": "which airlines provide direct flights between washington and denver ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'that are direct']\", \"FILTER['#2', 'between washington']\", \"FILTER['#3', 'and denver']\", \"PROJECT['airlines that provide #REF', '#4']\"]"}
{"id": "ATIS_dev_166", "input": "i have two friends that would like to visit me on wednesday here in washington dc one of them lives in denver and the other lives in miami ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from denver']\", \"FILTER['#2', 'to washington dc']\", \"FILTER['#3', 'on wednesday']\", \"FILTER['#1', 'from miami']\", \"FILTER['#5', 'to washington dc']\", \"FILTER['#6', 'on wednesday']\", \"UNION['#4', '#7']\"]"}
{"id": "ATIS_dev_167", "input": "does flight ua 270 from denver to philadelphia have a meal ", "output": "[\"SELECT['flight ua 270']\", \"FILTER['#1', 'from denver']\", \"FILTER['#2', 'to philadelphia']\", \"PROJECT['does #REF have a meal', '#3']\"]"}
{"id": "ATIS_dev_168", "input": "show me all the eastern airlines flights leaving pittsburgh between 12 and 4 in the afternoon ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'of eastern airlines']\", \"FILTER['#2', 'that are leaving pittsburgh']\", \"FILTER['#3', 'betweenleftside 12']\", \"FILTER['#4', 'betweenrightside 4 in the afternoon']\"]"}
{"id": "ATIS_dev_169", "input": "give me us air flights for next wednesday from cleveland to miami ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from cleveland']\", \"FILTER['#2', 'to miami']\", \"FILTER['#3', 'for next wednesday']\", \"FILTER['#4', 'on us air']\"]"}
{"id": "ATIS_dev_17", "input": "what is the earliest flight leaving denver going to boston ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from denver']\", \"FILTER['#2', 'to boston']\", \"PROJECT['earliest of #REF', '#3']\"]"}
{"id": "ATIS_dev_170", "input": "what nonstop flights are available from oakland to philadelphia arriving between 5 and 6pm ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'that are nonstop']\", \"FILTER['#2', 'from oakland']\", \"FILTER['#3', 'to philadelphia']\", \"FILTER['#4', 'arriving betweenleftside 5']\", \"FILTER['#5', 'arriving betweenrightside 6pm']\"]"}
{"id": "ATIS_dev_171", "input": "give me the flights from phoenix to milwaukee on wednesday ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from phoenix to milwaukee']\", \"FILTER['#2', 'on wednesday']\"]"}
{"id": "ATIS_dev_174", "input": "i need a list of late afternoon flights from chicago to milwaukee ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from chicago']\", \"FILTER['#2', 'to milwaukee']\", \"FILTER['#3', 'in late afternoon']\"]"}
{"id": "ATIS_dev_175", "input": "what flights are available on wednesday from atlanta to washington dc ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from atlanta']\", \"FILTER['#2', 'to washington dc']\", \"FILTER['#3', 'on wednesday']\"]"}
{"id": "ATIS_dev_176", "input": "what flights leave philadelphia for dallas and depart before noon on american airlines ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from philadelphia']\", \"FILTER['#2', 'to dallas']\", \"FILTER['#3', 'that depart before noon']\", \"FILTER['#4', 'on american airlines']\"]"}
{"id": "ATIS_dev_177", "input": "what is the fare on american airlines flight 928 from dallas fort worth to boston ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'on american airlines']\", \"FILTER['#2', 'flight 928']\", \"FILTER['#3', 'from dallas fort worth']\", \"FILTER['#4', 'to boston']\", \"PROJECT['fares of #REF', '#5']\"]"}
{"id": "ATIS_dev_178", "input": "how far from the airport in the dallas fort worth airport is dallas ", "output": "[\"SELECT['the dallas fort worth airport']\", \"PROJECT['how far from dallas is #REF', '#1']\"]"}
{"id": "ATIS_dev_179", "input": "i would like an american airlines flight from cincinnati to burbank leaving this afternoon ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'on american airlines']\", \"FILTER['#2', 'from cincinnati']\", \"FILTER['#3', 'to burbank']\", \"FILTER['#4', 'leaving this afternoon']\"]"}
{"id": "ATIS_dev_18", "input": "display all flights from san francisco to boston on august eighth ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from san francisco']\", \"FILTER['#2', 'to boston']\", \"FILTER['#3', 'on august eighth']\"]"}
{"id": "ATIS_dev_180", "input": "yes i live in washington and i want to make a trip to san francisco which airlines may i use for this trip ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from washington']\", \"FILTER['#2', 'to san francisco']\", \"PROJECT['airlines that have #REF', '#3']\"]"}
{"id": "ATIS_dev_181", "input": "i'd like a twa flight from las vegas to new york nonstop ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'that are twa']\", \"FILTER['#2', 'from las vegas']\", \"FILTER['#3', 'to new york']\", \"FILTER['#4', 'that are nonstop']\"]"}
{"id": "ATIS_dev_182", "input": "pm flights dallas to atlanta ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'in the pm']\", \"FILTER['#2', 'from dallas']\", \"FILTER['#3', 'to atlanta']\"]"}
{"id": "ATIS_dev_183", "input": "can you list all the flights between phoenix and las vegas ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from phoenix']\", \"FILTER['#2', 'to las vegas']\", \"FILTER['#1', 'from las vegas']\", \"FILTER['#4', 'to phoenix']\", \"UNION['#3', '#5']\"]"}
{"id": "ATIS_dev_184", "input": "what flights arrive in chicago on sunday on continental ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'to chicago']\", \"FILTER['#2', 'on continental']\", \"FILTER['#3', 'that arrive on sunday']\"]"}
{"id": "ATIS_dev_185", "input": "show me all flights from denver to philadelphia on saturday after sunday which leave after noon ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'on saturday']\", \"FILTER['#2', 'after sunday']\", \"FILTER['#3', 'from denver']\", \"FILTER['#4', 'to philadelphia']\", \"FILTER['#5', 'which leave after noon']\"]"}
{"id": "ATIS_dev_186", "input": "show me the flights from love field to other airports ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from love field']\", \"FILTER['#2', 'to other airports']\"]"}
{"id": "ATIS_dev_187", "input": "show me the flights to and from love field ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'to love field']\", \"FILTER['#1', 'from love field']\", \"UNION['#2', '#3']\"]"}
{"id": "ATIS_dev_188", "input": "does american airlines offer a flight from boston to oakland which stops in denver ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'that american airlines offer']\", \"FILTER['#2', 'from boston']\", \"FILTER['#3', 'to oakland']\", \"FILTER['#4', 'which stops in denver']\"]"}
{"id": "ATIS_dev_189", "input": "can you show me one way economy fares from dallas to atlanta ", "output": "[\"SELECT['fares']\", \"FILTER['#1', 'that are one way']\", \"FILTER['#2', 'that are economy']\", \"FILTER['#3', 'from dallas']\", \"FILTER['#4', 'to atlanta']\"]"}
{"id": "ATIS_dev_19", "input": "i would like a flight from oakland to philadelphia at one in the afternoon arriving at 5pm ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from oakland to philadelphia']\", \"FILTER['#2', 'at one in the afternoon']\", \"FILTER['#3', 'arriving at least 5pm']\"]"}
{"id": "ATIS_dev_190", "input": "what is ground transportation between the san francisco airport and the city ", "output": "[\"SELECT['ground transportation']\", \"FILTER['#1', 'between san francisco airport']\", \"FILTER['#2', 'and the city']\"]"}
{"id": "ATIS_dev_191", "input": "anything from baltimore or washington with a stopover in denver going to san francisco ", "output": "[\"SELECT['stopovers']\", \"FILTER['#1', 'in denver']\", \"FILTER['#2', 'going to san francisco']\", \"FILTER['#3', 'from baltimore']\", \"FILTER['#3', 'from washington']\", \"UNION['#4', '#5']\"]"}
{"id": "ATIS_dev_192", "input": "are there any flights from atlanta to denver ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from atlanta']\", \"FILTER['#2', 'to denver']\"]"}
{"id": "ATIS_dev_194", "input": "flights from oakland to san francisco ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from oakland']\", \"FILTER['#2', 'to san francisco']\"]"}
{"id": "ATIS_dev_195", "input": "show me all flights from new york to miami leaving on a tuesday and returning on sunday ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from new york']\", \"FILTER['#2', 'to miami']\", \"FILTER['#3', 'leaving on a tuesday']\", \"FILTER['#4', 'that are returning on a sunday']\"]"}
{"id": "ATIS_dev_196", "input": "what first class flights are available on july twenty fifth 1991 from denver to baltimore ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'in first class']\", \"FILTER['#2', 'from denver']\", \"FILTER['#3', 'to baltimore']\", \"FILTER['#4', 'on july twenty fifth 1991']\"]"}
{"id": "ATIS_dev_197", "input": "give me flights on american airlines from milwaukee to phoenix ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'on american airlines']\", \"FILTER['#2', 'from milwaukee']\", \"FILTER['#3', 'to phoenix']\"]"}
{"id": "ATIS_dev_198", "input": "what's the lowest round trip fare from atlanta to bwi ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'that are round trip']\", \"FILTER['#2', 'from atlanta']\", \"FILTER['#3', 'to bwi']\", \"PROJECT['fares of #REF', '#4']\", \"FILTER['#5', 'that are the lowest']\"]"}
{"id": "ATIS_dev_199", "input": "show me the airlines between toronto and denver ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'between toronto']\", \"FILTER['#2', 'and denver']\", \"PROJECT['airlines of #REF', '#3']\"]"}
{"id": "ATIS_dev_2", "input": "flights from phoenix to milwaukee ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from phoenix']\", \"FILTER['#2', 'to milwaukee']\"]"}
{"id": "ATIS_dev_20", "input": "what's the lowest round trip fare from dallas to any city ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from dallas']\", \"FILTER['#2', 'to any city']\", \"FILTER['#3', 'that is round trip']\", \"PROJECT['fares of #REF', '#4']\", \"FILTER['#5', 'that are the lowest']\"]"}
{"id": "ATIS_dev_200", "input": "what is the earliest flight that has no stops from washington to san francisco on friday ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from washington']\", \"FILTER['#2', 'to san francisco']\", \"FILTER['#3', 'on friday']\", \"FILTER['#4', 'that has no stops']\", \"PROJECT['the earliest #REF', '#5']\"]"}
{"id": "ATIS_dev_201", "input": "what is the fare on november seventh going one way from san francisco to oakland ", "output": "[\"SELECT['fares']\", \"FILTER['#1', 'on november seventh']\", \"FILTER['#2', 'that is one way']\", \"FILTER['#3', 'from san francisco']\", \"FILTER['#4', 'to oakland']\"]"}
{"id": "ATIS_dev_203", "input": "i would like an early morning flight from chicago into seattle on continental airlines ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from chicago']\", \"FILTER['#2', 'to seattle']\", \"FILTER['#3', 'on continental airlines']\", \"PROJECT['early morning #REF', '#4']\"]"}
{"id": "ATIS_dev_204", "input": "show me round trip flights from denver to baltimore that offer first class service on united ", "output": "[\"SELECT['flights']\", \"PROJECT['round trip #REF', '#1']\", \"FILTER['#2', 'from denver']\", \"FILTER['#3', 'to baltimore']\", \"FILTER['#4', 'with first class']\", \"FILTER['#5', 'on united']\"]"}
{"id": "ATIS_dev_205", "input": "i'm traveling to dallas from philadelphia ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from philadelphia']\", \"FILTER['#2', 'to dallas']\"]"}
{"id": "ATIS_dev_206", "input": "could you tell me the flights leaving pittsburgh around midnight for oakland ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'leaving pittsburgh']\", \"FILTER['#2', 'for oakland']\", \"FILTER['#3', 'around midnight']\"]"}
{"id": "ATIS_dev_207", "input": "how much does flight ua 297 from denver to san francisco cost ", "output": "[\"SELECT['flight ua 297']\", \"FILTER['#1', 'from denver']\", \"FILTER['#2', 'to san francisco']\", \"PROJECT['the cost of #REF', '#3']\"]"}
{"id": "ATIS_dev_208", "input": "please list the flights from dallas fort worth to dc baltimore on july twenty third ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from dallas fort worth']\", \"FILTER['#2', 'to dc baltimore']\", \"FILTER['#3', 'on july twenty third']\"]"}
{"id": "ATIS_dev_209", "input": "which flights go from philadelphia to san francisco ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from philadelphia']\", \"FILTER['#2', 'to san francisco']\"]"}
{"id": "ATIS_dev_21", "input": "please give me the flight times i would like to fly from boston to baltimore in the morning before 8 ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from boston']\", \"FILTER['#2', 'to baltimore']\", \"FILTER['#3', 'in the morning']\", \"FILTER['#4', 'before 8']\", \"PROJECT['times of #REF', '#5']\"]"}
{"id": "ATIS_dev_210", "input": "atlanta to oakland thursday ", "output": "[\"SELECT['atlanta']\", \"FILTER['#1', 'to oakland']\", \"FILTER['#2', 'on thursday']\"]"}
{"id": "ATIS_dev_211", "input": "show me flights from tampa to st. louis leaving before 10am ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from tampa']\", \"FILTER['#2', 'to st. louis']\", \"FILTER['#3', 'leaving before 10am']\"]"}
{"id": "ATIS_dev_212", "input": "does american airlines fly from philadelphia to dallas ", "output": "[\"SELECT['american airline flights']\", \"FILTER['#1', 'from philadelphia to dallas']\"]"}
{"id": "ATIS_dev_213", "input": "flights from kansas city to cleveland on wednesday ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from kansas city to cleveland']\", \"FILTER['#2', 'on wednesday']\"]"}
{"id": "ATIS_dev_214", "input": "show me the flights from philadelphia to baltimore in the morning ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from philadelphia']\", \"FILTER['#2', 'to baltimore']\", \"FILTER['#3', 'in the morning']\"]"}
{"id": "ATIS_dev_215", "input": "what are all of the flights into and out of atlanta's airport ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'into atlanta airport']\", \"FILTER['#1', 'out of atlanta airport']\", \"UNION['#2', '#3']\"]"}
{"id": "ATIS_dev_216", "input": "show me the cities served by canadian airlines international ", "output": "[\"SELECT['cities']\", \"FILTER['#1', 'served by canadian airlines international']\"]"}
{"id": "ATIS_dev_217", "input": "give me the least expensive first class round trip ticket on us air from cleveland to miami ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'that are round trip']\", \"FILTER['#2', 'on us air']\", \"FILTER['#3', 'from cleveland']\", \"FILTER['#4', 'to miami']\", \"PROJECT['tickets of #REF', '#5']\", \"FILTER['#6', 'that are the least expensive']\"]"}
{"id": "ATIS_dev_218", "input": "what is the cheapest one way fare from pittsburgh to atlanta traveling on tuesday august twentieth ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'that are one way']\", \"FILTER['#2', 'from pittsburgh']\", \"FILTER['#3', 'to atlanta']\", \"FILTER['#4', 'on tuesday august twentieth']\", \"PROJECT['fares of #REF', '#5']\", \"PROJECT['cheapest of #REF', '#6']\"]"}
{"id": "ATIS_dev_219", "input": "show me the car rentals in baltimore ", "output": "[\"SELECT['car rentals']\", \"FILTER['#1', 'in baltimore']\"]"}
{"id": "ATIS_dev_22", "input": "list all flights from boston to san francisco with the maximum number of stops ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from boston']\", \"FILTER['#2', 'to san francisco']\", \"PROJECT['stops of #REF', '#3']\", \"GROUP['count', '#4', '#3']\", \"COMPARATIVE['#3', '#5', 'is the highest']\"]"}
{"id": "ATIS_dev_220", "input": "i'd like to fly from san francisco to boston with a stopover in dallas fort worth and i want to fly on delta airlines ", "output": "[\"SELECT['fly']\", \"FILTER['#1', 'from san francisco']\", \"FILTER['#2', 'to boston']\", \"FILTER['#3', 'with a stopover in dallas fort worth']\", \"FILTER['#4', 'on delta airlines']\"]"}
{"id": "ATIS_dev_222", "input": "all flights from boston to washington dc after 5pm on november eleventh economy class ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from boston']\", \"FILTER['#2', 'to washington dc']\", \"FILTER['#3', 'on november eleventh']\", \"FILTER['#4', 'that are after 5pm']\", \"FILTER['#5', 'on economy class']\"]"}
{"id": "ATIS_dev_223", "input": "show me the us air flights from atlanta to boston ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'on us air']\", \"FILTER['#2', 'from atlanta']\", \"FILTER['#3', 'to boston']\"]"}
{"id": "ATIS_dev_224", "input": "american flights to houston from cincinnati ", "output": "[\"SELECT['american flights']\", \"FILTER['#1', 'to houston']\", \"FILTER['#2', 'from cincinnati']\"]"}
{"id": "ATIS_dev_225", "input": "list flights from denver to san francisco no denver to philadelphia ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from denver']\", \"FILTER['#2', 'to san francisco']\"]"}
{"id": "ATIS_dev_226", "input": "flights between new york and miami ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'betweenleftside new york']\", \"FILTER['#2', 'betweenrightside miami']\"]"}
{"id": "ATIS_dev_227", "input": "which airlines have connections between pittsburgh and baltimore ", "output": "[\"SELECT['airlines']\", \"FILTER['#1', 'that have connections betweenleftside pittsburgh']\", \"FILTER['#2', 'that have connections betweenrightside baltimore']\"]"}
{"id": "ATIS_dev_228", "input": "what is the cheapest flight from pittsburgh to atlanta leaving on october fifth ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from pittsburgh']\", \"FILTER['#2', 'to atlanta']\", \"FILTER['#3', 'on october fifth']\", \"PROJECT['cheapest of #REF', '#4']\"]"}
{"id": "ATIS_dev_23", "input": "what flights does american airlines fly from philadelphia to dallas ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'on american airlines']\", \"FILTER['#2', 'from philadelphia']\", \"FILTER['#3', 'to dallas']\"]"}
{"id": "ATIS_dev_230", "input": "show me the united flights from bwi to denver ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from bwi']\", \"FILTER['#2', 'to denver']\", \"FILTER['#3', 'on united']\"]"}
{"id": "ATIS_dev_231", "input": "find me the earliest boston departure for atlanta and the lastest return trip from atlanta so that i can be in atlanta the longest amount of time but return to boston the same day ", "output": "[\"SELECT['departures']\", \"FILTER['#1', 'from boston']\", \"FILTER['#2', 'to atlanta']\", \"PROJECT['when is #REF', '#3']\", \"SUPERLATIVE['min', '#3', '#4']\", \"SELECT['return trips']\", \"FILTER['#6', 'from atlanta']\", \"FILTER['#7', 'to boston']\", \"PROJECT['when is #REF', '#8']\", \"SUPERLATIVE['max', '#8', '#9']\", \"UNION['#5', '#10']\"]"}
{"id": "ATIS_dev_232", "input": "list american airlines flights from newark to nashville ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'on american airlines']\", \"FILTER['#2', 'from newark']\", \"FILTER['#3', 'to nashville']\"]"}
{"id": "ATIS_dev_233", "input": "on monday show me flights from baltimore to dallas ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from baltimore']\", \"FILTER['#2', 'to dallas']\", \"FILTER['#3', 'on monday']\"]"}
{"id": "ATIS_dev_234", "input": "all flights from boston to washington dc on november eleventh ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'on november eleventh']\", \"FILTER['#2', 'from boston']\", \"PROJECT['all #REF to washington', '#3']\"]"}
{"id": "ATIS_dev_235", "input": "tell me about ground transportation between orlando international and orlando ", "output": "[\"SELECT['ground transportations']\", \"FILTER['#1', 'betweenleftside orlando international']\", \"FILTER['#2', 'betweenrightside orlando']\"]"}
{"id": "ATIS_dev_236", "input": "show me the least expensive flight from miami to cleveland on sunday after noon ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from miami']\", \"FILTER['#2', 'to cleveland']\", \"FILTER['#3', 'after noon']\", \"FILTER['#4', 'on sunday']\", \"FILTER['#5', 'that is least expensive']\"]"}
{"id": "ATIS_dev_237", "input": "chicago to san francisco on continental ", "output": "[\"SELECT['continental']\", \"PROJECT['to san francisco of #REF', '#1']\", \"PROJECT['from chicago of #REF', '#2']\"]"}
{"id": "ATIS_dev_238", "input": "what are the flights from las vegas to burbank on saturday may twenty two ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from las vegas']\", \"FILTER['#2', 'to burbank']\", \"FILTER['#3', 'on saturday may twenty two']\"]"}
{"id": "ATIS_dev_239", "input": "what flights from atlanta to st. louis on tuesday arriving around 230pm ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from atlanta']\", \"FILTER['#2', 'to st. louis']\", \"FILTER['#3', 'on tuesday']\", \"FILTER['#4', 'arriving 230pm']\"]"}
{"id": "ATIS_dev_24", "input": "show me the flights arriving in baltimore from philadelphia at about 4 o'clock ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'to baltimore']\", \"FILTER['#2', 'from philadelphia']\", \"FILTER['#3', 'arriving at about 4 oclock']\"]"}
{"id": "ATIS_dev_240", "input": "list the flight from philadelphia to san francisco on american airlines ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'on american airlines']\", \"FILTER['#2', 'from philadelphia']\", \"FILTER['#3', 'to san francisco']\"]"}
{"id": "ATIS_dev_241", "input": "give me the flights from milwaukee to st. louis leaving sunday morning ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from milwaukee']\", \"FILTER['#2', 'to st. louis']\", \"FILTER['#3', 'leaving sunday morning']\"]"}
{"id": "ATIS_dev_242", "input": "flights from pittsburgh to newark ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from pittsburgh']\", \"FILTER['#2', 'to newark']\"]"}
{"id": "ATIS_dev_243", "input": "on the 8am flight from san francisco to atlanta what type of aircraft is used ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from san francisco']\", \"FILTER['#2', 'to atlanta']\", \"FILTER['#3', 'on 8am']\", \"PROJECT['type of aircraft #REF used', '#4']\"]"}
{"id": "ATIS_dev_244", "input": "show me ground transport in seattle ", "output": "[\"SELECT['ground transports']\", \"FILTER['#1', 'in seattle']\"]"}
{"id": "ATIS_dev_245", "input": "i'd like information on the least expensive airfare round trip from pittsburgh to boston ", "output": "[\"SELECT['round trips airfares']\", \"FILTER['#1', 'from pittsburghs']\", \"FILTER['#2', 'to boston']\", \"PROJECT['the least expensive of #REF', '#3']\"]"}
{"id": "ATIS_dev_246", "input": "i'd like to find a nonstop flight from boston to atlanta that leaves sometime in the afternoon and arrives in atlanta before evening ", "output": "[\"SELECT['flights']\", \"PROJECT['nonstop #REF', '#1']\", \"FILTER['#2', 'from boston']\", \"FILTER['#3', 'to atlanta']\", \"FILTER['#4', 'that leave in the afternoon']\", \"FILTER['#5', 'and arrive in atlanta before evening']\"]"}
{"id": "ATIS_dev_247", "input": "what afternoon flights are available from atlanta to san francisco ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from atlanta']\", \"FILTER['#2', 'to san francisco']\", \"FILTER['#3', 'in there afternoon']\"]"}
{"id": "ATIS_dev_248", "input": "show me flights from baltimore to philadelphia please ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from baltimore']\", \"FILTER['#2', 'to philadelphia']\"]"}
{"id": "ATIS_dev_249", "input": "please show me flights from san francisco to dallas ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from san francisco']\", \"FILTER['#2', 'to dallas']\"]"}
{"id": "ATIS_dev_25", "input": "what's the cheapest fare for a round trip from indianapolis to orlando on december twenty seventh ", "output": "[\"SELECT['fares']\", \"FILTER['#1', 'which are round trip']\", \"FILTER['#2', 'on december twenty seventh']\", \"FILTER['#3', 'from indianapolis']\", \"FILTER['#4', 'to orlando']\", \"PROJECT['the cheapest of #REF', '#5']\"]"}
{"id": "ATIS_dev_250", "input": "list all flights from boston to san francisco with more than 3 stops ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from boston']\", \"FILTER['#2', 'to san francisco']\", \"PROJECT['stops of #REF', '#3']\", \"GROUP['count', '#4', '#3']\", \"COMPARATIVE['#3', '#5', 'is more than 3']\"]"}
{"id": "ATIS_dev_251", "input": "list least expensive flight from dallas to baltimore ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from dallas']\", \"FILTER['#2', 'to baltimore']\", \"PROJECT['the least expensive #REF', '#3']\"]"}
{"id": "ATIS_dev_252", "input": "when is the first flight leaving from oakland to boston ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from oakland']\", \"FILTER['#2', 'to boston']\", \"FILTER['#3', 'leaving first']\"]"}
{"id": "ATIS_dev_253", "input": "show me the earliest flight on thursday from atlanta to washington ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'on thursday']\", \"FILTER['#2', 'from atlanta']\", \"FILTER['#3', 'to washington']\", \"PROJECT['the earliest of #REF', '#4']\"]"}
{"id": "ATIS_dev_254", "input": "i'd like the earliest flight from dallas to boston ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from dallas']\", \"FILTER['#2', 'to boston']\", \"FILTER['#3', 'that are the earliest']\"]"}
{"id": "ATIS_dev_255", "input": "i need to reverse the flight from pittsburgh to denver please ", "output": "[\"SELECT['flight from pittsburgh to denver']\", \"PROJECT['reverse #REF', '#1']\"]"}
{"id": "ATIS_dev_256", "input": "please give me the earliest flight tomorrow from st. petersburg to milwaukee ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'tomorrow']\", \"FILTER['#2', 'from st. petersburg']\", \"FILTER['#3', 'to milwaukee']\", \"PROJECT['the earliest of #REF', '#4']\"]"}
{"id": "ATIS_dev_257", "input": "give me all the flights from memphis to charlotte ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from memphis']\", \"FILTER['#2', 'to charlotte']\", \"PROJECT['all the #REF', '#3']\"]"}
{"id": "ATIS_dev_258", "input": "show me the flights from philadelphia to dallas with one stop ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from philadelphia']\", \"FILTER['#2', 'to dallas']\", \"FILTER['#3', 'with one stop']\"]"}
{"id": "ATIS_dev_259", "input": "also give me a list of flights between oakland and boston ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'between oakland']\", \"FILTER['#2', 'and boston']\"]"}
{"id": "ATIS_dev_26", "input": "what are the flights and prices from la to charlotte for monday morning ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from la']\", \"FILTER['#2', 'to charlotte']\", \"FILTER['#3', 'on monday morning']\", \"PROJECT['prices of #REF', '#4']\", \"UNION['#4', '#5']\"]"}
{"id": "ATIS_dev_260", "input": "can you list costs of denver rental cars ", "output": "[\"SELECT['rental cars']\", \"FILTER['#1', 'in denver']\", \"PROJECT['the costs of #REF', '#2']\"]"}
{"id": "ATIS_dev_261", "input": "round trip flights from minneapolis to san diego coach economy fare ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'that are round trip']\", \"FILTER['#2', 'from minneapolis']\", \"FILTER['#3', 'to san diego']\", \"FILTER['#4', 'in coach']\", \"PROJECT['economy fares of #REF', '#5']\"]"}
{"id": "ATIS_dev_262", "input": "i need information on flight from atlanta to denver ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from atlanta to denver']\", \"PROJECT['information on #REF', '#2']\"]"}
{"id": "ATIS_dev_263", "input": "what airlines flies out of atlanta ", "output": "[\"SELECT['airlines']\", \"FILTER['#1', 'which fly out of atlanta']\"]"}
{"id": "ATIS_dev_264", "input": "can you show me fares for december sixteenth from oakland to dallas one way only ", "output": "[\"SELECT['fares']\", \"FILTER['#1', 'on december sixteenth']\", \"FILTER['#2', 'from oakland']\", \"FILTER['#3', 'to dallas']\", \"FILTER['#4', 'that are one way only']\"]"}
{"id": "ATIS_dev_265", "input": "what airlines fly from boston to atlanta ", "output": "[\"SELECT['airlines']\", \"FILTER['#1', 'that fly from boston']\", \"FILTER['#2', 'to atlanta']\"]"}
{"id": "ATIS_dev_266", "input": "what are the fares for flights serving a meal from boston to pittsburgh before noon on thursday ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from boston']\", \"FILTER['#2', 'to pittsburgh']\", \"FILTER['#3', 'before noon']\", \"FILTER['#4', 'on thursday']\", \"FILTER['#5', 'that serve a meal']\", \"PROJECT['fares for #REF', '#6']\"]"}
{"id": "ATIS_dev_268", "input": "what are the flights between dallas and pittsburgh on july eight ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'between dallas']\", \"FILTER['#2', 'and pittsburgh']\", \"FILTER['#3', 'on july eight']\"]"}
{"id": "ATIS_dev_269", "input": "please give me the flight times the morning on united airlines for september twentieth from philadelphia to san francisco ", "output": "[\"SELECT['flights in the morning']\", \"FILTER['#1', 'from philadelphia to san francisco']\", \"FILTER['#2', 'on september twentieth']\", \"PROJECT['times of #REF', '#3']\"]"}
{"id": "ATIS_dev_27", "input": "i would like information on flights from pittsburgh to baltimore arriving in baltimore before 10am on thursday ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from pittsburgh']\", \"FILTER['#2', 'to baltimore']\", \"FILTER['#3', 'arriving before 10am']\", \"FILTER['#4', 'on thursday']\", \"PROJECT['information of #REF', '#5']\"]"}
{"id": "ATIS_dev_271", "input": "yes i'm looking for a flight between oakland and boston with a stopover in dallas fort worth do you have one of those ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'between oakland']\", \"FILTER['#2', 'and boston']\", \"FILTER['#3', 'with a stopover in dallas fort worth']\", \"BOOLEAN['#4', 'is there any #REF']\"]"}
{"id": "ATIS_dev_272", "input": "show morning flights from san francisco to pittsburgh ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'in morning']\", \"FILTER['#2', 'from san francisco']\", \"FILTER['#3', 'to pittsburgh']\"]"}
{"id": "ATIS_dev_273", "input": "show me all the flights from columbus to baltimore ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from columbus']\", \"FILTER['#2', 'to baltimore']\"]"}
{"id": "ATIS_dev_274", "input": "what does fare code qx mean ", "output": "[\"SELECT['fare code qx']\", \"PROJECT['what does #REF mean', '#1']\"]"}
{"id": "ATIS_dev_275", "input": "could you tell me about flights from philadelphia to dallas that arrives in the early afternoon ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from philadelphia to dallas']\", \"FILTER['#2', 'that arrives early afternoon']\"]"}
{"id": "ATIS_dev_276", "input": "how much does it cost to fly on delta from dallas to baltimore ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'on delta']\", \"FILTER['#2', 'from dallas']\", \"FILTER['#3', 'to baltimore']\", \"PROJECT['cost of #REF', '#4']\"]"}
{"id": "ATIS_dev_277", "input": "on eastern flight 825 flying from atlanta to denver can you tell me what type of aircraft is used on a flight when it leaves at 555 ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'on eastern']\", \"FILTER['#2', 'flying from atlanta']\", \"FILTER['#3', 'to denver']\", \"FILTER['#4', 'that leaves at 555']\", \"PROJECT['the type of aircraft used on #REF', '#5']\"]"}
{"id": "ATIS_dev_278", "input": "i want to go from boston to oakland on united and leave at 838am which flight should i take ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'that are on united']\", \"FILTER['#2', 'from boston']\", \"FILTER['#3', 'to oakland']\", \"FILTER['#4', 'that leave at 838am']\"]"}
{"id": "ATIS_dev_279", "input": "show me the continental flights leaving chicago early saturday morning ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'of continental']\", \"FILTER['#2', 'leaving chicago']\", \"FILTER['#3', 'early on saturday morning']\"]"}
{"id": "ATIS_dev_28", "input": "what are the flights available between 10am and 3pm between pittsburgh and fort worth ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from pittsburgh']\", \"FILTER['#2', 'betweenleftside 10am']\", \"FILTER['#3', 'betweenrightside 3pm']\", \"FILTER['#4', 'to fort worth']\"]"}
{"id": "ATIS_dev_280", "input": "what does code y stand for ", "output": "[\"SELECT['code']\", \"PROJECT['y in #REF', '#1']\", \"PROJECT['what stands for #REF', '#2']\"]"}
{"id": "ATIS_dev_281", "input": "what are the flights and fares from boston to philadelphia ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from boston']\", \"FILTER['#2', 'to philadelphia']\", \"PROJECT['fares of #REF', '#3']\", \"UNION['#3', '#4']\"]"}
{"id": "ATIS_dev_282", "input": "i'd like to fly united airlines from washington to denver ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'of united airlines']\", \"FILTER['#2', 'from washington']\", \"FILTER['#3', 'to denver']\"]"}
{"id": "ATIS_dev_283", "input": "i'd like to see flights from pittsburgh to atlanta ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from pittsburgh']\", \"FILTER['#2', 'to atlanta']\"]"}
{"id": "ATIS_dev_284", "input": "tell me about ground transportation at san francisco ", "output": "[\"SELECT['ground transportation']\", \"FILTER['#1', 'at san francisco']\"]"}
{"id": "ATIS_dev_285", "input": "what flights leave phoenix on wednesday evening and arrive in milwaukee ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from phoenix']\", \"FILTER['#2', 'to milwaukee']\", \"FILTER['#3', 'that leave wednesday evening']\"]"}
{"id": "ATIS_dev_286", "input": "show me the flights on delta that go through atlanta ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'on delta']\", \"FILTER['#2', 'that go through atlanta']\"]"}
{"id": "ATIS_dev_288", "input": "what is the latest flight on wednesday going from atlanta to washington dc ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from atlanta']\", \"FILTER['#2', 'to washington dc']\", \"FILTER['#3', 'on wednesday']\", \"FILTER['#4', 'that is the latest']\"]"}
{"id": "ATIS_dev_289", "input": "what nonstop flights between boston and washington arrive after 4 o'clock pm ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'that are nonstop']\", \"FILTER['#2', 'between boston']\", \"FILTER['#3', 'and washington']\", \"FILTER['#4', 'that arrive after 4 pm']\"]"}
{"id": "ATIS_dev_29", "input": "what are the flights from dallas to philadelphia ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from dallas']\", \"FILTER['#2', 'to philadelphia']\"]"}
{"id": "ATIS_dev_290", "input": "show me the flights from san francisco to washington dc ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from san francisco']\", \"FILTER['#2', 'to washington dc']\"]"}
{"id": "ATIS_dev_291", "input": "what is the earliest flight leaving boston and arriving in atlanta on november seventh ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'leaving boston']\", \"FILTER['#2', 'that are arriving in atlanta']\", \"FILTER['#3', 'on november seventh']\", \"PROJECT['the earliest #REF', '#4']\"]"}
{"id": "ATIS_dev_292", "input": "what morning flights do you have between oakland and denver ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'between oakland']\", \"FILTER['#2', 'between denver']\", \"FILTER['#3', 'that are in the morning']\"]"}
{"id": "ATIS_dev_293", "input": "is there a flight between philadelphia and denver that leaves philadelphia around 2 o'clock in the afternoon ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from philadelphia']\", \"FILTER['#2', 'to denver']\", \"FILTER['#3', 'that leave philadelphia around 2 oclock in the afternoon']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least one']\"]"}
{"id": "ATIS_dev_294", "input": "what are the flights from kansas city to burbank on saturday may twenty two on america west ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from kansas city']\", \"FILTER['#2', 'to burbank']\", \"FILTER['#3', 'on america west']\", \"FILTER['#4', 'on saturday may twenty two']\"]"}
{"id": "ATIS_dev_295", "input": "on tuesday i'd like to fly from detroit to st. petersburg ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from detroit']\", \"FILTER['#2', 'to st. petersburg']\", \"FILTER['#3', 'on tuesday']\"]"}
{"id": "ATIS_dev_296", "input": "what is the cheapest round trip flight from atlanta to pittsburgh ", "output": "[\"SELECT['flight']\", \"FILTER['#1', 'from atlanta']\", \"FILTER['#2', 'to pittsburgh']\", \"PROJECT['round trip #REF', '#3']\", \"PROJECT['cheapest #REF', '#4']\"]"}
{"id": "ATIS_dev_297", "input": "show first flight from philadelphia to dallas ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from philadelphia']\", \"FILTER['#2', 'to dallas']\", \"COMPARATIVE['#3', '#1', 'is first']\"]"}
{"id": "ATIS_dev_299", "input": "what flights do you have from baltimore to san francisco ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from baltimore to san francisco']\"]"}
{"id": "ATIS_dev_3", "input": "i'd like to fly from philadelphia to san francisco through dallas ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from philadelphia']\", \"FILTER['#2', 'to san francisco']\", \"FILTER['#3', 'through dallas']\"]"}
{"id": "ATIS_dev_30", "input": "what flights does us air have from san francisco to pittsburgh on tuesday ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from san francisco']\", \"FILTER['#2', 'to pittsburgh']\", \"FILTER['#3', 'on tuesday']\", \"FILTER['#4', 'from us air']\"]"}
{"id": "ATIS_dev_301", "input": "show me flights from baltimore to philadelphia arriving after 2100 ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from baltimore']\", \"FILTER['#2', 'to philadelphia']\", \"FILTER['#3', 'arriving after 2100']\"]"}
{"id": "ATIS_dev_302", "input": "morning flights from pittsburgh to atlanta on wednesday ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'in the morning']\", \"FILTER['#2', 'from pittsburgh']\", \"FILTER['#3', 'to atlanta']\", \"FILTER['#4', 'on wednesday']\"]"}
{"id": "ATIS_dev_303", "input": "i want a flight originating in denver going to pittsburgh and atlanta in either order ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from denver']\", \"FILTER['#2', 'to pittsburgh']\", \"FILTER['#3', 'to atlanta']\", \"FILTER['#2', 'to atlanta']\", \"FILTER['#5', 'to pittsburgh']\", \"UNION['#4', '#6']\"]"}
{"id": "ATIS_dev_304", "input": "i want to go from baltimore to san francisco with a stopover in denver ", "output": "[\"SELECT['from baltimore to san francisco']\", \"FILTER['#1', 'with a stopover in denver']\"]"}
{"id": "ATIS_dev_305", "input": "oakland to philadelphia ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from oakland']\", \"FILTER['#2', 'to philadelphia']\"]"}
{"id": "ATIS_dev_306", "input": "what flights leave from chicago to seattle on saturday ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from chicago']\", \"FILTER['#2', 'to seattle']\", \"FILTER['#3', 'on saturday']\"]"}
{"id": "ATIS_dev_307", "input": "show me the flights to love field from all other airports ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from all airports']\", \"FILTER['#2', 'to love field']\"]"}
{"id": "ATIS_dev_308", "input": "i would like a flight as early as possible in the day leaving from boston and to denver ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from boston to denver']\", \"PROJECT['early #REF', '#2']\"]"}
{"id": "ATIS_dev_309", "input": "i would like to book an early morning flight from tampa florida to charlotte north carolina on april sixth ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from tampa florida']\", \"FILTER['#2', 'to charlotte north carolina']\", \"FILTER['#3', 'on april sixth']\", \"FILTER['#4', 'that are early in the morning']\"]"}
{"id": "ATIS_dev_31", "input": "what is the cost of united airlines flight 415 from chicago to kansas city thursday night ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'on united airlines']\", \"FILTER['#2', 'from chicago']\", \"FILTER['#3', 'to kansas city']\", \"FILTER['#4', 'on thursday night']\"]"}
{"id": "ATIS_dev_310", "input": "cheapest flight from memphis to miami ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from memphis']\", \"FILTER['#2', 'to miami']\", \"FILTER['#3', 'that are cheapest']\"]"}
{"id": "ATIS_dev_311", "input": "what afternoon flights are available from denver to san francisco on wednesdays ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from denver']\", \"FILTER['#2', 'to san francisco']\", \"FILTER['#3', 'on wednesdays']\", \"PROJECT['afternoon #REF', '#4']\"]"}
{"id": "ATIS_dev_312", "input": "is there ground transportation in dallas from the dallas airport to downtown dallas ", "output": "[\"SELECT['ground transportation']\", \"FILTER['#1', 'from dallas airport']\", \"FILTER['#2', 'to downtown dallas']\", \"BOOLEAN['#3', 'is there #REF']\"]"}
{"id": "ATIS_dev_313", "input": "thank you for that information now i would like to book a flight from philadelphia to boston on the night of april sixteen around 9 o'clock ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from philadelphia']\", \"FILTER['#2', 'to boston']\", \"FILTER['#3', 'on the night of april sixteen']\", \"FILTER['#4', 'around 9 oclock']\"]"}
{"id": "ATIS_dev_314", "input": "round trip flights between houston and las vegas ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'that are round trip']\", \"FILTER['#2', 'between houston']\", \"FILTER['#3', 'and las vegas']\"]"}
{"id": "ATIS_dev_315", "input": "flights from san jose to st. paul ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from san jose']\", \"FILTER['#2', 'to st. paul']\"]"}
{"id": "ATIS_dev_316", "input": "how many seats in a 734 ", "output": "[\"SELECT['734']\", \"PROJECT['seats in #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "ATIS_dev_317", "input": "what does ewr stand for ", "output": "[\"SELECT['ewr']\", \"PROJECT['what does #REF stand for', '#1']\"]"}
{"id": "ATIS_dev_318", "input": "i would like to know if i fly on american flight number 813 from boston to oakland if i will stop enroute at another city ", "output": "[\"SELECT['american flight number 813']\", \"PROJECT['stops of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at least one']\"]"}
{"id": "ATIS_dev_319", "input": "i need a flight from pittsburgh to new york city ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from pittsburgh']\", \"FILTER['#2', 'to new york city']\"]"}
{"id": "ATIS_dev_32", "input": "show me the flights from boston to san francisco stopping in dallas on american airlines ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from boston']\", \"FILTER['#2', 'to san francisco']\", \"FILTER['#3', 'stopping in dallas']\", \"FILTER['#4', 'on american airlines']\"]"}
{"id": "ATIS_dev_320", "input": "is twa flight 497 766 from st. petersburg to milwaukee with one stop available tomorrow morning ", "output": "[\"SELECT['flight 497 766']\", \"FILTER['#1', 'from st. petersburg to milwaukee']\", \"FILTER['#2', 'with one stop']\", \"FILTER['#3', 'tomorrow morning']\", \"FILTER['#4', 'that is available']\"]"}
{"id": "ATIS_dev_321", "input": "what airline is ea the abbreviation for ", "output": "[\"SELECT['the abbreviation ea']\", \"PROJECT['what airline is #REF for', '#1']\"]"}
{"id": "ATIS_dev_322", "input": "define airline us ", "output": "[\"SELECT['define airline us']\"]"}
{"id": "ATIS_dev_323", "input": "please show me ground transportation in denver ", "output": "[\"SELECT['ground transportation']\", \"FILTER['#1', 'in denver']\"]"}
{"id": "ATIS_dev_324", "input": "american airlines from phoenix to denver ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from phoenix']\", \"FILTER['#2', 'to denver']\", \"FILTER['#3', 'on american airlines']\"]"}
{"id": "ATIS_dev_325", "input": "is there any flight leaving washington around 3 o'clock for denver ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'leaving washington']\", \"FILTER['#2', 'around 3 oclock']\", \"FILTER['#3', 'for denver']\"]"}
{"id": "ATIS_dev_326", "input": "show me all flights from orlando to san diego on a boeing 737 ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'on a boeing 737']\", \"FILTER['#2', 'from orlando']\", \"FILTER['#3', 'to san diego']\"]"}
{"id": "ATIS_dev_327", "input": "how much is the 718am flight from las vegas to new york twa ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from las vegas']\", \"FILTER['#2', 'to new york']\", \"FILTER['#3', 'that is twa']\", \"FILTER['#4', 'that is 718am']\", \"PROJECT['how much of #REF', '#5']\"]"}
{"id": "ATIS_dev_328", "input": "ground transportation in denver ", "output": "[\"SELECT['ground transportation']\", \"FILTER['#1', 'in denver']\"]"}
{"id": "ATIS_dev_329", "input": "what are the flights from pittsburgh to denver and back ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from pittsburgh']\", \"FILTER['#2', 'to denver']\", \"FILTER['#3', 'from denver']\", \"FILTER['#4', 'to pittsburgh']\"]"}
{"id": "ATIS_dev_33", "input": "i want an early morning flight between philadelphia and pittsburgh on tuesday morning ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'betweenleftside philadelphia']\", \"FILTER['#2', 'betweenrightside pittsburgh']\", \"FILTER['#3', 'on tuesday morning']\", \"PROJECT['early #REF', '#4']\"]"}
{"id": "ATIS_dev_330", "input": "please list ground transport in san francisco ", "output": "[\"SELECT['ground transport']\", \"FILTER['#1', 'in san francisco']\"]"}
{"id": "ATIS_dev_331", "input": "what flights leave denver before noon on northwest airlines ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from denver']\", \"FILTER['#2', 'on northwest airlines']\", \"FILTER['#3', 'leave before noon']\"]"}
{"id": "ATIS_dev_332", "input": "list all the flights that fly into general mitchell international ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'that fly into general mitchell international']\"]"}
{"id": "ATIS_dev_333", "input": "show me the flights from denver to philadelphia ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from denver']\", \"FILTER['#2', 'to philadelphia']\"]"}
{"id": "ATIS_dev_334", "input": "what limousine service is in boston ", "output": "[\"SELECT['limousine services']\", \"FILTER['#1', 'in boston']\"]"}
{"id": "ATIS_dev_335", "input": "show me all the flights leaving baltimore ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'leaving baltimore']\"]"}
{"id": "ATIS_dev_336", "input": "explain the restriction ap/80 ", "output": "[\"SELECT['the restriction ap/80']\", \"PROJECT['explain #REF', '#1']\"]"}
{"id": "ATIS_dev_337", "input": "could you please give me the cost of a round trip flight from denver to pittsburgh ", "output": "[\"SELECT['flights']\", \"PROJECT['round trip #REF', '#1']\", \"FILTER['#2', 'from denver']\", \"FILTER['#3', 'to pittsburgh']\", \"PROJECT['cost of #REF', '#4']\"]"}
{"id": "ATIS_dev_338", "input": "what airlines fly from boston to san francisco ", "output": "[\"SELECT['airlines']\", \"FILTER['#1', 'which fly from boston']\", \"FILTER['#2', 'to san francisco']\"]"}
{"id": "ATIS_dev_339", "input": "show me all direct flights from dallas fort worth to either san francisco or oakland ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'that are direct']\", \"FILTER['#2', 'from dallas fort worth']\", \"FILTER['#3', 'to san francisco']\", \"FILTER['#3', 'to oakland']\", \"UNION['#4', '#5']\"]"}
{"id": "ATIS_dev_340", "input": "show all flights from pittsburgh to san francisco ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from pittsburgh']\", \"FILTER['#2', 'to san francisco']\"]"}
{"id": "ATIS_dev_341", "input": "list the fares of us air flights from boston to philadelphia ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'on us air']\", \"FILTER['#2', 'from boston']\", \"FILTER['#3', 'to philadelphia']\", \"PROJECT['fares of #REF', '#4']\"]"}
{"id": "ATIS_dev_342", "input": "i would like an afternoon flight from denver colorado to dallas texas ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'that are afternoon']\", \"FILTER['#2', 'from denver colorado']\", \"FILTER['#3', 'to dallas texas']\"]"}
{"id": "ATIS_dev_343", "input": "show me all flights from chicago to kansas city on thursday june seventeenth arriving in kansas city at around 7 o'clock in the evening ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'on thursday june seventeenth']\", \"FILTER['#2', 'from chicago']\", \"FILTER['#3', 'to kansas city']\", \"FILTER['#4', 'arriving at kansas city around 7 oclock in the evening']\"]"}
{"id": "ATIS_dev_344", "input": "what flight from boston to atlanta arrives earliest in atlanta ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from boston']\", \"FILTER['#2', 'to atlanta']\", \"FILTER['#3', 'that arrives earliest']\"]"}
{"id": "ATIS_dev_345", "input": "what is the least expensive one way ticket from atlanta to denver leaving on october twelfth ", "output": "[\"SELECT['ticket']\", \"PROJECT['one way #REF', '#1']\", \"FILTER['#2', 'from atlanta']\", \"FILTER['#3', 'to denver']\", \"FILTER['#4', 'leaving on october twelfth']\", \"PROJECT['least expensive #REF', '#5']\"]"}
{"id": "ATIS_dev_346", "input": "tell me about flights from toronto to salt lake city leaving toronto between 530 and 7pm ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from toronto']\", \"FILTER['#2', 'to salt lake city']\", \"FILTER['#3', 'leaving betweenleftside 530']\", \"FILTER['#4', 'leaving betweenrightside 7pm']\"]"}
{"id": "ATIS_dev_347", "input": "i would like to fly delta airlines from atlanta to pittsburgh ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'of delta airlines']\", \"FILTER['#2', 'from atlanta']\", \"FILTER['#3', 'to pittsburgh']\"]"}
{"id": "ATIS_dev_348", "input": "i want to travel from washington dc to philadelphia on tuesday morning ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from washington dc']\", \"FILTER['#2', 'to philadelphia']\", \"FILTER['#3', 'on tuesday morning']\"]"}
{"id": "ATIS_dev_349", "input": "show me airports in washington dc ", "output": "[\"SELECT['airports']\", \"FILTER['#1', 'in washington dc']\"]"}
{"id": "ATIS_dev_35", "input": "now i'd like flights from philadelphia to pittsburgh leaving between 430 and 530pm ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from philadelphia']\", \"FILTER['#2', 'to pittsburgh']\", \"FILTER['#3', 'leaving between 430']\", \"FILTER['#4', 'and 530pm']\"]"}
{"id": "ATIS_dev_350", "input": "list lowest cost flight from dallas to baltimore that serves a meal ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from dallas']\", \"FILTER['#2', 'to baltimore']\", \"FILTER['#3', 'that serves a meal']\", \"PROJECT['lowest cost #REF', '#4']\"]"}
{"id": "ATIS_dev_351", "input": "i would like to fly from denver to boston on wednesday the twenty first ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from denver']\", \"FILTER['#2', 'to boston']\", \"FILTER['#3', 'on wednesday the twenty first']\"]"}
{"id": "ATIS_dev_352", "input": "are there delta flights leaving denver ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'of delta']\", \"FILTER['#2', 'leaving denver']\"]"}
{"id": "ATIS_dev_353", "input": "what is the ground transportation from boston airport to boston downtown ", "output": "[\"SELECT['ground transportation']\", \"FILTER['#1', 'from boston airport']\", \"FILTER['#2', 'to boston downtown']\"]"}
{"id": "ATIS_dev_354", "input": "what is the earliest flight from tampa to milwaukee tomorrow ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from tampa']\", \"FILTER['#2', 'to milwaukee']\", \"FILTER['#3', 'that are tomorrow']\", \"FILTER['#4', 'that are the earliest']\"]"}
{"id": "ATIS_dev_355", "input": "i need to go to san diego from toronto but i want to stopover in denver ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from toronto']\", \"FILTER['#2', 'to san diego']\", \"FILTER['#3', 'that stopover in denver']\"]"}
{"id": "ATIS_dev_356", "input": "give me the flights from san francisco to washington dc for december first ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from san francisco']\", \"FILTER['#2', 'to washington dc']\", \"FILTER['#3', 'on december first']\"]"}
{"id": "ATIS_dev_357", "input": "list nonstop flights from baltimore to newark on wednesday before noon ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'on wednesday']\", \"FILTER['#2', 'before noon']\", \"FILTER['#3', 'from baltimore']\", \"FILTER['#4', 'to newark']\", \"FILTER['#5', 'which are nonstop']\"]"}
{"id": "ATIS_dev_358", "input": "what are the coach class fares on flights from pittsburgh to atlanta ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'in coach class']\", \"FILTER['#2', 'from pittsburgh']\", \"FILTER['#3', 'to atlanta']\", \"PROJECT['fares of #REF', '#4']\"]"}
{"id": "ATIS_dev_359", "input": "is there an airport limousine at the atlanta airport ", "output": "[\"SELECT['airport limousines']\", \"FILTER['#1', 'at the atlanta airport']\"]"}
{"id": "ATIS_dev_36", "input": "show me all midwest express flights from detroit to chicago ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from detroit']\", \"FILTER['#2', 'to chicago']\", \"FILTER['#3', 'on midwest express']\"]"}
{"id": "ATIS_dev_360", "input": "what is the latest flight departing from boston to san francisco ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from boston']\", \"FILTER['#2', 'to san francisco']\", \"PROJECT['latest of #REF', '#3']\"]"}
{"id": "ATIS_dev_361", "input": "do you have a flight from charlotte to atlanta next tuesday ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from charlotte']\", \"FILTER['#2', 'to atlanta']\", \"FILTER['#3', 'next tuesday']\", \"BOOLEAN['#4', 'are there any #REF']\"]"}
{"id": "ATIS_dev_362", "input": "what is the cost of round trip ticket first class between oakland and atlanta ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'that are round trip']\", \"FILTER['#2', 'between oakland']\", \"FILTER['#3', 'and atlanta']\", \"FILTER['#4', 'in first class']\", \"PROJECT['ticket cost of #REF', '#5']\"]"}
{"id": "ATIS_dev_364", "input": "now please give me the latest flight tomorrow on twa from milwaukee to tacoma ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'on twa']\", \"FILTER['#2', 'from milwaukee']\", \"FILTER['#3', 'to tacoma']\", \"FILTER['#4', 'tomorrow']\", \"PROJECT['latest #REF', '#5']\"]"}
{"id": "ATIS_dev_365", "input": "what's the first class fare round trip from atlanta to denver ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from atlanta']\", \"FILTER['#2', 'to denver']\", \"FILTER['#3', 'that are round trip']\", \"FILTER['#4', 'that are on first class']\", \"PROJECT['fares of #REF', '#5']\"]"}
{"id": "ATIS_dev_366", "input": "newark to cleveland daily ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from newark']\", \"FILTER['#2', 'to cleveland']\", \"FILTER['#3', 'that are daily']\"]"}
{"id": "ATIS_dev_367", "input": "how much is a round trip fare from indianapolis to seattle ", "output": "[\"SELECT['round trip fare']\", \"FILTER['#1', 'from indianapolis to seattle']\", \"PROJECT['how much #REF is', '#2']\"]"}
{"id": "ATIS_dev_368", "input": "show me which flights from san francisco to pittsburgh on a monday are first class ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'in first class']\", \"FILTER['#2', 'from san francisco']\", \"FILTER['#3', 'to pittsburgh']\", \"FILTER['#4', 'on a monday']\"]"}
{"id": "ATIS_dev_369", "input": "give me flights from chicago to seattle on saturday morning ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from chicago']\", \"FILTER['#2', 'to seattle']\", \"FILTER['#3', 'on saturday morning']\"]"}
{"id": "ATIS_dev_37", "input": "find me the earliest boston departure and the latest atlanta return trip so that i can be on the ground the maximum amount of time in atlanta and return to boston on the same day ", "output": "[\"SELECT['boston departures']\", \"SELECT['atlanta return trips']\", \"PROJECT['earliest #REF', '#1']\", \"PROJECT['latest #REF', '#2']\", \"UNION['#3', '#4']\"]"}
{"id": "ATIS_dev_370", "input": "give me the flights from pittsburgh to los angeles on thursday evening ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from pittsburgh']\", \"FILTER['#2', 'to los angeles']\", \"FILTER['#3', 'on thursday evening']\"]"}
{"id": "ATIS_dev_371", "input": "give me the flights on december twenty seventh with the fares from indianapolis to orlando ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from indianapolis']\", \"FILTER['#2', 'to orlando']\", \"FILTER['#3', 'on december twenty seventh']\"]"}
{"id": "ATIS_dev_372", "input": "show all flights between san francisco and philadelphia for september fifteenth ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'betweenleftside san francisco']\", \"FILTER['#2', 'betweenrightside philadelphia']\", \"FILTER['#3', 'for september fifteenth']\"]"}
{"id": "ATIS_dev_373", "input": "could you please find me the earliest flight from boston to oakland ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from boston']\", \"FILTER['#2', 'to oakland']\", \"PROJECT['the earliest #REF', '#3']\"]"}
{"id": "ATIS_dev_374", "input": "what kind of ground transportation is there in washington dc ", "output": "[\"SELECT['ground transportation']\", \"FILTER['#1', 'in washington dc']\", \"PROJECT['the kinds of #REF', '#2']\"]"}
{"id": "ATIS_dev_375", "input": "please show me the flights from washington to san francisco ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from washington']\", \"FILTER['#2', 'to san francisco']\"]"}
{"id": "ATIS_dev_376", "input": "explain restriction ap please ", "output": "[\"SELECT['restriction ap']\", \"PROJECT['explain #REF', '#1']\"]"}
{"id": "ATIS_dev_377", "input": "list the flights on friday afternoon from philadelphia to oakland ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'on friday']\", \"FILTER['#2', 'in the afternoon']\", \"FILTER['#3', 'from philadelphia']\", \"FILTER['#4', 'to oakland']\"]"}
{"id": "ATIS_dev_379", "input": "find a flight from long beach to st. louis stopping in dallas ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from long beach']\", \"FILTER['#2', 'to st. louis']\", \"FILTER['#3', 'that is stopping in dallas']\"]"}
{"id": "ATIS_dev_38", "input": "information on flights from baltimore to philadelphia ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from baltimore']\", \"FILTER['#2', 'to philadelphia']\"]"}
{"id": "ATIS_dev_380", "input": "how long does it take to get from kansas city to st. paul ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from kansas city']\", \"FILTER['#2', 'to st. paul']\", \"PROJECT['how long is #REF', '#3']\"]"}
{"id": "ATIS_dev_381", "input": "flights from los angeles to pittsburgh ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from los angeles']\", \"FILTER['#2', 'to pittsburgh']\"]"}
{"id": "ATIS_dev_382", "input": "give me the cheapest one way flights between boston and philadelphia which arrive after noon on a tuesday ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'between boston']\", \"FILTER['#2', 'between philadelphia']\", \"FILTER['#3', 'that arrive after noon']\", \"FILTER['#4', 'that are on tuesday']\", \"FILTER['#5', 'that are one way']\", \"PROJECT['cheapest #REF', '#6']\"]"}
{"id": "ATIS_dev_383", "input": "flight from denver to philadelphia ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from denver']\", \"FILTER['#2', 'to philadelphia']\"]"}
{"id": "ATIS_dev_384", "input": "show me all the flights from philadelphia to san francisco ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from philadelphia']\", \"FILTER['#2', 'to san francisco']\"]"}
{"id": "ATIS_dev_385", "input": "what are the flights from denver to san francisco on tuesday october fifteenth ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from denver']\", \"FILTER['#2', 'to san francisco']\", \"FILTER['#3', 'on tuesday october fifteenth']\"]"}
{"id": "ATIS_dev_386", "input": "what flights from denver to salt lake city ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from denver']\", \"FILTER['#2', 'to salt lake city']\"]"}
{"id": "ATIS_dev_387", "input": "what classes of service does twa have ", "output": "[\"SELECT['classes of service']\", \"FILTER['#1', 'that twa has']\"]"}
{"id": "ATIS_dev_388", "input": "list nonstop flights from baltimore washington airport to oakland that depart in the afternoon ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'that are nonstop']\", \"FILTER['#2', 'from baltimore washington airport']\", \"FILTER['#3', 'to oakland']\", \"FILTER['#4', 'that depart in the afternoon']\"]"}
{"id": "ATIS_dev_389", "input": "what's the earliest flight from dallas to houston ", "output": "[\"SELECT['flight']\", \"FILTER['#1', 'from dallas']\", \"FILTER['#2', 'to houston']\", \"PROJECT['earliest #REF', '#3']\"]"}
{"id": "ATIS_dev_39", "input": "hello i would like to plan a flight from boston to denver ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from boston']\", \"FILTER['#2', 'to denver']\"]"}
{"id": "ATIS_dev_390", "input": "i need a flight to seattle leaving from baltimore making a stop in minneapolis ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'to seattle from baltimore']\", \"FILTER['#2', 'making a stop in minneapolis']\"]"}
{"id": "ATIS_dev_391", "input": "is there a flight between san francisco and boston with a stopover in dallas fort worth ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'between san francisco']\", \"FILTER['#2', 'and boston']\", \"FILTER['#3', 'with a stopover in dallas fort worth']\"]"}
{"id": "ATIS_dev_392", "input": "how far is the airport from san francisco ", "output": "[\"SELECT['the airport']\", \"PROJECT['how far from san francisco is #REF', '#1']\"]"}
{"id": "ATIS_dev_394", "input": "show me the latest flight to love field ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'to love field']\", \"PROJECT['latest #REF', '#2']\"]"}
{"id": "ATIS_dev_395", "input": "list all the flights that arrive at general mitchell international airport ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'that arrive at least general mitchell international airport']\"]"}
{"id": "ATIS_dev_396", "input": "show me the flights from new york to los angeles with stop in milwaukee ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from new york']\", \"FILTER['#2', 'to los angeles']\", \"FILTER['#3', 'with stop in milwaukee']\"]"}
{"id": "ATIS_dev_397", "input": "list the flights from philadelphia to dallas on american airlines ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from philadelphia']\", \"FILTER['#2', 'to dallas']\", \"FILTER['#3', 'on american airlines']\"]"}
{"id": "ATIS_dev_399", "input": "show me the monday flights from san francisco to pittsburgh ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from san francisco']\", \"FILTER['#2', 'to pittsburgh']\", \"FILTER['#3', 'on monday']\"]"}
{"id": "ATIS_dev_4", "input": "i'm starting from denver ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'starting from denver']\"]"}
{"id": "ATIS_dev_40", "input": "i need an early flight from dallas to houston ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from dallas to houston']\", \"PROJECT['early #REF', '#2']\"]"}
{"id": "ATIS_dev_400", "input": "what is the lowest cost for a one way ticket from boston to washington ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from boston']\", \"FILTER['#2', 'to washington']\", \"FILTER['#3', 'that are one way']\", \"PROJECT['ticket cost of #REF', '#4']\", \"FILTER['#5', 'that is the lowest']\"]"}
{"id": "ATIS_dev_401", "input": "what is the latest evening flight leaving san francisco for washington ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'leaving san francisco']\", \"FILTER['#2', 'for washington']\", \"FILTER['#3', 'in the evening']\", \"PROJECT['the latest #REF', '#4']\"]"}
{"id": "ATIS_dev_402", "input": "what ground transport is available in minneapolis ", "output": "[\"SELECT['ground transport']\", \"FILTER['#1', 'in minneapolis']\"]"}
{"id": "ATIS_dev_403", "input": "what type of airplane is an m80 ", "output": "[\"SELECT['airplanes']\", \"FILTER['#1', 'that are m80']\", \"PROJECT['type of #REF', '#2']\"]"}
{"id": "ATIS_dev_404", "input": "i'm looking for flights from pittsburgh to philadelphia leaving before 9am ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from pittsburgh']\", \"FILTER['#2', 'to philadelphia']\", \"FILTER['#3', 'that are leaving before 9am']\"]"}
{"id": "ATIS_dev_405", "input": "show me all economy prices from dallas to baltimore ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'in economy']\", \"FILTER['#2', 'from dallas']\", \"FILTER['#3', 'to baltimore']\", \"PROJECT['prices of #REF', '#4']\"]"}
{"id": "ATIS_dev_406", "input": "flights from milwaukee to phoenix on saturday or sunday american airlines ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'on american airlines']\", \"FILTER['#2', 'from milwaukee']\", \"FILTER['#3', 'to phoenix']\", \"FILTER['#4', 'on saturday']\", \"FILTER['#4', 'on sunday']\", \"UNION['#5', '#6']\"]"}
{"id": "ATIS_dev_407", "input": "what airport is at tampa ", "output": "[\"SELECT['airport']\", \"FILTER['#1', 'in tampa']\"]"}
{"id": "ATIS_dev_408", "input": "show me all the flights out of boston today ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'out of boston']\", \"FILTER['#2', 'that are today']\"]"}
{"id": "ATIS_dev_409", "input": "give me fares from atlanta to baltimore ", "output": "[\"SELECT['fares']\", \"FILTER['#1', 'from atlanta']\", \"FILTER['#2', 'to baltimore']\"]"}
{"id": "ATIS_dev_41", "input": "give me a flight from philadelphia to denver on sunday ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from philadelphia']\", \"FILTER['#2', 'to denver']\", \"FILTER['#3', 'on sunday']\"]"}
{"id": "ATIS_dev_410", "input": "show prices for all flights from baltimore to dallas on july twenty ninth ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from baltimore']\", \"FILTER['#2', 'to dallas']\", \"FILTER['#3', 'on july twenty ninth']\", \"PROJECT['prices of #REF', '#4']\"]"}
{"id": "ATIS_dev_411", "input": "show me fares from houston to las vegas ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from houston']\", \"FILTER['#2', 'to las vegas']\", \"PROJECT['fares of #REF', '#3']\"]"}
{"id": "ATIS_dev_412", "input": "show me all fares from new york to miami leaving on a tuesday ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from new york']\", \"FILTER['#2', 'to miami']\", \"FILTER['#3', 'leaving on a tuesday']\", \"PROJECT['fares of #REF', '#4']\"]"}
{"id": "ATIS_dev_413", "input": "from sfo to denver ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from sfo']\", \"FILTER['#2', 'to denver']\"]"}
{"id": "ATIS_dev_414", "input": "what flights go from dallas to tampa ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from dallas']\", \"FILTER['#2', 'to tampa']\"]"}
{"id": "ATIS_dev_415", "input": "my question is i want to go to san francisco and i live in denver and i would like to fly on united airlines do you have an early flight ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'on united airlines']\", \"FILTER['#2', 'from san francisco']\", \"FILTER['#3', 'to denver']\", \"FILTER['#4', 'that are early']\"]"}
{"id": "ATIS_dev_416", "input": "baltimore to philadelphia ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from baltimore']\", \"FILTER['#2', 'to philadelphia']\"]"}
{"id": "ATIS_dev_417", "input": "now i need a flight on tuesday from phoenix to detroit ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from phoenix']\", \"FILTER['#2', 'to detroit']\", \"FILTER['#3', 'on tuesday']\"]"}
{"id": "ATIS_dev_418", "input": "i want a flight from toronto to san diego that stops in st. louis are there flights ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from toronto']\", \"FILTER['#2', 'to san diego']\", \"FILTER['#3', 'that stops in st. louis']\"]"}
{"id": "ATIS_dev_419", "input": "could you tell me what the earliest flight that goes between atlanta and denver is which serves a meal ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'between atlanta']\", \"FILTER['#2', 'and denver']\", \"FILTER['#3', 'that serves a meal']\", \"FILTER['#4', 'that is the earliest']\"]"}
{"id": "ATIS_dev_42", "input": "what flights does delta have from denver to dallas after 5 ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'on delta']\", \"FILTER['#2', 'from denver']\", \"FILTER['#3', 'to dallas']\", \"FILTER['#4', 'after 5']\"]"}
{"id": "ATIS_dev_420", "input": "show me times for flights from san francisco to atlanta ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from san francisco']\", \"FILTER['#2', 'to atlanta']\", \"PROJECT['times for #REF', '#3']\"]"}
{"id": "ATIS_dev_421", "input": "give me the flights from washington dc to philadelphia for december second ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from washington dc to philadelphia']\", \"FILTER['#2', 'on december second']\"]"}
{"id": "ATIS_dev_422", "input": "what is a flight that goes from baltimore to san francisco and arrives at san francisco at 8pm on a friday ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from baltimore']\", \"FILTER['#2', 'to san francisco']\", \"FILTER['#3', 'that arrives on a friday']\", \"FILTER['#4', 'at 8pm']\"]"}
{"id": "ATIS_dev_423", "input": "i want to go between boston and san francisco ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'between boston']\", \"FILTER['#2', 'between san francisco']\"]"}
{"id": "ATIS_dev_424", "input": "what type of aircraft does eastern fly from atlanta to denver before 6pm ", "output": "[\"SELECT['aircraft']\", \"FILTER['#1', 'from eastern']\", \"FILTER['#2', 'which have flights from atlanta']\", \"FILTER['#3', 'to denver']\", \"FILTER['#4', 'before 6pm']\", \"PROJECT['the type of #REF', '#5']\"]"}
{"id": "ATIS_dev_425", "input": "is there a flight tomorrow morning from columbus to nashville ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from columbus']\", \"FILTER['#2', 'to nashville']\", \"FILTER['#3', 'that is tomorrow']\", \"FILTER['#4', 'that is in morning']\"]"}
{"id": "ATIS_dev_426", "input": "show me all the flights from san francisco to boston for august thirty first 1991 ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from san francisco']\", \"FILTER['#2', 'to boston']\", \"FILTER['#3', 'on august thirty first 1991']\"]"}
{"id": "ATIS_dev_427", "input": "show me all first class fares from new york to miami leaving on a tuesday ", "output": "[\"SELECT['fares']\", \"FILTER['#1', 'in first class']\", \"FILTER['#2', 'from new york']\", \"FILTER['#3', 'to miami']\", \"FILTER['#4', 'leaving on a tuesday']\"]"}
{"id": "ATIS_dev_428", "input": "show me all flights from phoenix to milwaukee on american airlines on wednesday ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from phoenix']\", \"FILTER['#2', 'to milwaukee']\", \"FILTER['#3', 'on american airlines']\", \"FILTER['#4', 'on wednesday']\"]"}
{"id": "ATIS_dev_429", "input": "what flights from tampa to cincinnati ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from tampa']\", \"FILTER['#2', 'to cincinnati']\"]"}
{"id": "ATIS_dev_43", "input": "please show me the cost of flight ua 201 from boston to denver and flight ua 343 from boston to denver ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'on ua 201']\", \"FILTER['#2', 'from boston']\", \"FILTER['#3', 'to denver']\", \"FILTER['#1', 'on ua 343']\", \"FILTER['#5', 'from boston']\", \"FILTER['#6', 'to denver']\", \"UNION['#4', '#7']\", \"PROJECT['costs of #REF', '#8']\"]"}
{"id": "ATIS_dev_430", "input": "what kind of ground transportation is there in philadelphia ", "output": "[\"SELECT['ground transportations']\", \"FILTER['#1', 'in philadelphia']\"]"}
{"id": "ATIS_dev_431", "input": "rental cars in washington dc ", "output": "[\"SELECT['rental cars']\", \"FILTER['#1', 'in washington dc']\"]"}
{"id": "ATIS_dev_432", "input": "show me the flights from boston to atlanta and the return flights from atlanta to boston ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from boston']\", \"FILTER['#2', 'to atlanta']\", \"PROJECT['return #REF', '#1']\", \"FILTER['#4', 'from atlanta']\", \"FILTER['#5', 'to boston']\", \"UNION['#3', '#6']\"]"}
{"id": "ATIS_dev_433", "input": "show me the fares from dallas to san francisco ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from dallas']\", \"FILTER['#2', 'to san francisco']\", \"PROJECT['fares of #REF', '#3']\"]"}
{"id": "ATIS_dev_434", "input": "how far is downtown from the airport in dallas ", "output": "[\"SELECT['airports']\", \"FILTER['#1', 'in dallas']\", \"PROJECT['how far is downtown from #REF', '#2']\"]"}
{"id": "ATIS_dev_435", "input": "show me round trip fares from san jose to salt lake city ", "output": "[\"SELECT['round trip flights']\", \"FILTER['#1', 'from san jose to salt lake city']\", \"PROJECT['fares of #REF', '#2']\"]"}
{"id": "ATIS_dev_436", "input": "what is the fare from san francisco to dallas fort worth on delta flight 852 ", "output": "[\"SELECT['flight 852']\", \"FILTER['#1', 'on delta']\", \"FILTER['#2', 'from san francisco']\", \"FILTER['#3', 'to dallas fort worth']\", \"PROJECT['fare of #REF', '#4']\"]"}
{"id": "ATIS_dev_437", "input": "all flights from pittsburgh to philadelphia next tuesday arriving near 6 o'clock ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from pittsburgh to philadelphia']\", \"FILTER['#2', 'on next tuesday']\", \"FILTER['#3', 'that arrive near 6 oclock']\"]"}
{"id": "ATIS_dev_439", "input": "what are the early morning flights from boston to denver ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from boston']\", \"FILTER['#2', 'to denver']\", \"FILTER['#3', 'in the early morning']\"]"}
{"id": "ATIS_dev_44", "input": "list all round trip flights between indianapolis and orlando on the twenty seventh of december ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'which are round trip']\", \"FILTER['#2', 'between indianapolis']\", \"FILTER['#3', 'and orlando']\", \"FILTER['#4', 'on the twenty seventh of december']\"]"}
{"id": "ATIS_dev_440", "input": "what're the lowest one way fares from denver to atlanta ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from denver']\", \"FILTER['#2', 'to atlanta']\", \"PROJECT['fares of #REF', '#3']\", \"FILTER['#4', 'that are there lowest']\"]"}
{"id": "ATIS_dev_441", "input": "i would like information for flights from baltimore to dallas on early tuesday morning ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from baltimore']\", \"FILTER['#2', 'to dallas']\", \"FILTER['#3', 'early on tuesday morning']\"]"}
{"id": "ATIS_dev_442", "input": "flight leaving chicago to nashville ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'leaving chicago']\", \"FILTER['#2', 'to nashville']\"]"}
{"id": "ATIS_dev_444", "input": "show flights from san francisco to denver on a thursday ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from san francisco']\", \"FILTER['#2', 'to denver']\", \"FILTER['#3', 'on thursday']\"]"}
{"id": "ATIS_dev_445", "input": "please tell me how many nonstop flights there are from boston to atlanta ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from boston']\", \"FILTER['#2', 'to atlanta']\", \"FILTER['#3', 'nonstop']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "ATIS_dev_446", "input": "list daily flights from oakland to boston using twa ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from oakland']\", \"FILTER['#2', 'to boston']\", \"FILTER['#3', 'that are daily']\", \"FILTER['#4', 'that use twa']\"]"}
{"id": "ATIS_dev_447", "input": "is there a continental flight leaving from las vegas to new york nonstop ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'on continental']\", \"FILTER['#2', 'leaving from las vegas']\", \"FILTER['#3', 'to new york']\", \"FILTER['#4', 'which are nonstop']\"]"}
{"id": "ATIS_dev_448", "input": "list all flights from boston to atlanta before 5 o'clock am on thursday ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from boston']\", \"FILTER['#2', 'to atlanta']\", \"FILTER['#3', 'before 5 oclock am']\", \"FILTER['#4', 'on thursday']\"]"}
{"id": "ATIS_dev_449", "input": "show me the flights from philadelphia to dallas that stop in atlanta ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from philadelphia']\", \"FILTER['#2', 'to dallas']\", \"FILTER['#3', 'which stop in atlanta']\"]"}
{"id": "ATIS_dev_45", "input": "i want information on flights from atlanta to washington dc give me information on flights after 4pm on wednesday ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from atlanta']\", \"FILTER['#2', 'to washington dc']\", \"FILTER['#3', 'on wednesday']\", \"FILTER['#4', 'after 4pm']\", \"PROJECT['information on #REF', '#5']\"]"}
{"id": "ATIS_dev_450", "input": "show me the flights from st. petersburg to toronto that leave monday ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from st. petersburg']\", \"FILTER['#2', 'to toronto']\", \"FILTER['#3', 'which leave on monday']\"]"}
{"id": "ATIS_dev_451", "input": "which airlines serve pittsburgh ", "output": "[\"SELECT['airlines']\", \"FILTER['#1', 'which serve pittsburgh']\"]"}
{"id": "ATIS_dev_452", "input": "how much does flight ua 270 from denver to philadelphia cost ", "output": "[\"SELECT['flight ua 270']\", \"FILTER['#1', 'from denver']\", \"FILTER['#2', 'to philadelphia']\", \"PROJECT['how much does #REF cost', '#3']\"]"}
{"id": "ATIS_dev_453", "input": "what airlines go to pittsburgh ", "output": "[\"SELECT['airlines']\", \"FILTER['#1', 'that go to pittsburgh']\"]"}
{"id": "ATIS_dev_454", "input": "which flights from memphis to tacoma also stop in los angeles ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from memphis']\", \"FILTER['#2', 'to tacoma']\", \"FILTER['#3', 'which also stop in los angeles']\"]"}
{"id": "ATIS_dev_455", "input": "fares and flights from pittsburgh to philadelphia ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from pittsburgh']\", \"FILTER['#2', 'to philadelphia']\", \"PROJECT['fares of #REF', '#3']\", \"UNION['#3', '#4']\"]"}
{"id": "ATIS_dev_456", "input": "show flights between toronto and san francisco ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'between toronto']\", \"FILTER['#2', 'and san francisco']\"]"}
{"id": "ATIS_dev_457", "input": "what's the fare for delta flight 217 from dallas to san francisco ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'on delta flight 217']\", \"FILTER['#2', 'from dallas']\", \"FILTER['#3', 'to san francisco']\", \"PROJECT['fare of #REF', '#4']\"]"}
{"id": "ATIS_dev_458", "input": "list all flights from boston to atlanta after 6 o'clock pm on wednesday ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from boston']\", \"FILTER['#2', 'to atlanta']\", \"FILTER['#3', 'after 6 oclock pm']\", \"FILTER['#4', 'on wednesday']\"]"}
{"id": "ATIS_dev_459", "input": "okay i'd like a flight on us air from indianapolis to san diego in the afternoon what's available ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'on us air']\", \"FILTER['#2', 'from indianapolis']\", \"FILTER['#3', 'to san diego']\", \"FILTER['#4', 'in the afternoon']\"]"}
{"id": "ATIS_dev_46", "input": "from toronto to atlanta in the afternoon ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from toronto']\", \"FILTER['#2', 'to atlanta']\", \"FILTER['#3', 'in the afternoon']\"]"}
{"id": "ATIS_dev_460", "input": "what flights are available from boston to denver today ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from boston']\", \"FILTER['#2', 'to denver']\", \"FILTER['#3', 'that are today']\"]"}
{"id": "ATIS_dev_461", "input": "how can i get from the airport in pittsburgh to downtown ", "output": "[\"SELECT['pittsburgh']\", \"PROJECT['the airport in #REF', '#1']\", \"PROJECT['how to get from #REF to downtown', '#2']\"]"}
{"id": "ATIS_dev_462", "input": "could you please show me all flights from milwaukee to montreal ", "output": "[\"SELECT['all flights']\", \"FILTER['#1', 'from milwaukee']\", \"FILTER['#2', 'to montreal']\"]"}
{"id": "ATIS_dev_463", "input": "what is the earliest flight you have leaving boston heading to philadelphia ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from boston']\", \"FILTER['#2', 'to philadelphia']\", \"FILTER['#3', 'leaving the earliest']\"]"}
{"id": "ATIS_dev_464", "input": "flight numbers from minneapolis to long beach on june twenty six ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from minneapolis']\", \"FILTER['#2', 'to long beach']\", \"FILTER['#3', 'on june twenty six']\", \"PROJECT['the flight numbers of #REF', '#4']\"]"}
{"id": "ATIS_dev_465", "input": "locate flights from philadelphia to dallas stopping in hartfield ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from philadelphia']\", \"FILTER['#2', 'to dallas']\", \"FILTER['#3', 'stopping in hartfield']\"]"}
{"id": "ATIS_dev_466", "input": "tell me which airlines have flights from pittsburgh to san francisco on monday september second ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from pittsburgh']\", \"FILTER['#2', 'to san francisco']\", \"FILTER['#3', 'on monday september second']\", \"PROJECT['airlines of #REF', '#4']\"]"}
{"id": "ATIS_dev_468", "input": "may i have a list of flights going from boston to denver on the twenty ninth of july ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from boston']\", \"FILTER['#2', 'to denver']\", \"FILTER['#3', 'on july twenty ninth']\"]"}
{"id": "ATIS_dev_469", "input": "list types of planes that fly between pittsburgh and baltimore ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'between pittsburgh']\", \"FILTER['#2', 'and baltimore']\", \"PROJECT['planes of #REF', '#3']\", \"PROJECT['types of #REF', '#4']\"]"}
{"id": "ATIS_dev_47", "input": "leaving denver flying to san francisco before 10am what type of aircraft is used ", "output": "[\"SELECT['aircraft']\", \"FILTER['#1', 'leaving denver']\", \"FILTER['#2', 'flying to san francisco']\", \"FILTER['#3', 'before 10am']\", \"PROJECT['type of #REF', '#4']\"]"}
{"id": "ATIS_dev_470", "input": "i want to go from boston to washington on monday morning ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from boston']\", \"FILTER['#2', 'to washington']\", \"FILTER['#3', 'on monday']\", \"FILTER['#4', 'in the morning']\"]"}
{"id": "ATIS_dev_471", "input": "flight 417 from cincinnati to dallas ", "output": "[\"SELECT['flight 417']\", \"FILTER['#1', 'from cincinnati']\", \"FILTER['#2', 'to dallas']\"]"}
{"id": "ATIS_dev_472", "input": "show me flights from dallas to atlanta ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from dallas']\", \"FILTER['#2', 'to atlanta']\"]"}
{"id": "ATIS_dev_473", "input": "is there ground transportation in boston from the airport ", "output": "[\"SELECT['ground transportation']\", \"FILTER['#1', 'from the airport']\", \"FILTER['#2', 'to boston']\", \"BOOLEAN['#3', 'is there any #REF']\"]"}
{"id": "ATIS_dev_474", "input": "show me the flights from san francisco to las vegas ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from san francisco']\", \"FILTER['#2', 'to las vegas']\"]"}
{"id": "ATIS_dev_476", "input": "how much does it cost to get downtown from the atlanta airport by limousine ", "output": "[\"SELECT['limousine cost']\", \"FILTER['#1', 'from atlanta airport']\", \"FILTER['#2', 'to downtown']\"]"}
{"id": "ATIS_dev_478", "input": "i would like the evening schedule of flights from san francisco to washington ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'in the evening']\", \"FILTER['#2', 'from san francisco']\", \"FILTER['#3', 'to washington']\", \"PROJECT['schedule of #REF', '#4']\"]"}
{"id": "ATIS_dev_479", "input": "show me fares from seattle to minneapolis ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from seattle']\", \"FILTER['#2', 'to minneapolis']\", \"PROJECT['fares of #REF', '#3']\"]"}
{"id": "ATIS_dev_48", "input": "i would like a flight between denver and san francisco leaving from denver in the afternoon and arriving at 5pm ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from denver']\", \"FILTER['#2', 'leaving in the afternoon']\", \"FILTER['#3', 'to san francisco']\", \"FILTER['#4', 'arriving at 5pm']\"]"}
{"id": "ATIS_dev_480", "input": "is there ground transportation from the airport to downtown phoenix ", "output": "[\"SELECT['ground transportations']\", \"FILTER['#1', 'from the airport']\", \"FILTER['#2', 'to downtown phoenix']\"]"}
{"id": "ATIS_dev_481", "input": "i'd like the flights from san jose to nashville on the morning of friday june third ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from san jose']\", \"FILTER['#2', 'to nashville']\", \"FILTER['#3', 'on the morning of friday june third']\"]"}
{"id": "ATIS_dev_483", "input": "please give me the cheapest flight from denver to pittsburgh ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from denver to pittsburgh']\", \"PROJECT['cheapest #REF', '#2']\"]"}
{"id": "ATIS_dev_484", "input": "which airlines fly from boston to washington dc via other cities ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from boston']\", \"FILTER['#2', 'to washington dc']\", \"FILTER['#3', 'via other cities']\", \"PROJECT['airlines that have #REF', '#4']\"]"}
{"id": "ATIS_dev_485", "input": "please give me all flights from dallas to oakland before noon ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from dallas']\", \"FILTER['#2', 'to oakland']\", \"FILTER['#3', 'before noon']\"]"}
{"id": "ATIS_dev_49", "input": "from denver to baltimore ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from denver']\", \"FILTER['#2', 'to baltimore']\"]"}
{"id": "ATIS_dev_5", "input": "please list all flights between boston and san francisco nonstop ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'betweenleftside boston']\", \"FILTER['#2', 'betweenrightside san francisco']\", \"FILTER['#3', 'that are nonstop']\"]"}
{"id": "ATIS_dev_51", "input": "show me the ground transportation schedule in philadelphia in the morning on wednesday ", "output": "[\"SELECT['ground transportation schedule']\", \"FILTER['#1', 'in philadelphia']\", \"FILTER['#2', 'in the morning']\", \"FILTER['#3', 'on wednesday']\"]"}
{"id": "ATIS_dev_52", "input": "list round trip flights from orlando to kansas city ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'that are round trip']\", \"FILTER['#2', 'from orlando']\", \"FILTER['#3', 'to kansas city']\"]"}
{"id": "ATIS_dev_53", "input": "ground transportation oakland ", "output": "[\"SELECT['transportation']\", \"PROJECT['grounds #REF', '#1']\", \"FILTER['#2', 'in oakland']\"]"}
{"id": "ATIS_dev_54", "input": "i would like to see flights from denver to philadelphia ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from denver']\", \"FILTER['#2', 'to philadelphia']\"]"}
{"id": "ATIS_dev_55", "input": "list flights from san francisco to pittsburgh ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from san francisco']\", \"FILTER['#2', 'to pittsburgh']\"]"}
{"id": "ATIS_dev_56", "input": "what is the price of american airlines flight 19 from new york to los angeles ", "output": "[\"SELECT['american airlines flight 19']\", \"FILTER['#1', 'from new york']\", \"FILTER['#2', 'to los angeles']\", \"PROJECT['price of #REF', '#3']\"]"}
{"id": "ATIS_dev_57", "input": "list all direct flights from boston to denver ", "output": "[\"SELECT['direct flights']\", \"FILTER['#1', 'from boston']\", \"FILTER['#2', 'to denver']\"]"}
{"id": "ATIS_dev_58", "input": "list all flights from tampa florida to miami that are the cheapest one way ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from tampa florida']\", \"FILTER['#2', 'to miami']\", \"FILTER['#3', 'that are one way']\", \"FILTER['#4', 'that is cheapest']\"]"}
{"id": "ATIS_dev_59", "input": "please give me flights leaving san francisco and going to pittsburgh ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'leaving san francisco']\", \"FILTER['#2', 'going to pittsburgh']\"]"}
{"id": "ATIS_dev_6", "input": "can you list flights from boston to washington with the lowest one way fares that leave on saturday ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from boston']\", \"FILTER['#2', 'to washington']\", \"FILTER['#3', 'that leave on saturday']\", \"PROJECT['one ways fares of #REF', '#4']\", \"SUPERLATIVE['min', '#4', '#5']\"]"}
{"id": "ATIS_dev_60", "input": "is there a flight on american airlines from boston to denver ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'on american airlines']\", \"FILTER['#2', 'from boston']\", \"FILTER['#3', 'to denver']\"]"}
{"id": "ATIS_dev_61", "input": "show business class fares from san francisco to denver on united airlines ", "output": "[\"SELECT['fares']\", \"FILTER['#1', 'from san francisco']\", \"FILTER['#2', 'to denver']\", \"FILTER['#3', 'that are business class']\", \"FILTER['#4', 'on united airlines']\"]"}
{"id": "ATIS_dev_62", "input": "what are the costs of flights from dallas to boston tomorrow ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from dallas']\", \"FILTER['#2', 'to boston']\", \"FILTER['#3', 'tomorrow']\", \"PROJECT['costs of #REF', '#4']\"]"}
{"id": "ATIS_dev_63", "input": "i'd like to fly from philadelphia to dallas through atlanta ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from philadelphia to dallas']\", \"FILTER['#2', 'through atlanta']\"]"}
{"id": "ATIS_dev_64", "input": "list aircraft types that fly between boston and san francisco ", "output": "[\"SELECT['aircraft']\", \"FILTER['#1', 'that fly betweenleftside boston']\", \"FILTER['#2', 'that fly betweenrightside san francisco']\", \"PROJECT['types of #REF', '#3']\"]"}
{"id": "ATIS_dev_65", "input": "what flights are available from boston to denver ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from boston']\", \"FILTER['#2', 'to denver']\"]"}
{"id": "ATIS_dev_66", "input": "i need to go from boston to atlanta in the same day find me the earliest flight from boston ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from boston to atlanta']\", \"FILTER['#2', 'in the same day']\", \"PROJECT['the earliest #REF', '#3']\"]"}
{"id": "ATIS_dev_67", "input": "us air flights departing from charlotte around 1pm ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'on us air']\", \"FILTER['#2', 'departing from charlotte']\", \"FILTER['#3', 'around 1pm']\"]"}
{"id": "ATIS_dev_68", "input": "give me the flights from salt lake city to new york city arriving before 6pm ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from salt lake city']\", \"FILTER['#2', 'to new york city']\", \"FILTER['#3', 'arriving before 6pm']\"]"}
{"id": "ATIS_dev_69", "input": "can you show me what flights are available on december sixteen going from oakland to dallas ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'on december sixteen']\", \"FILTER['#2', 'from oakland']\", \"FILTER['#3', 'to dallas']\"]"}
{"id": "ATIS_dev_7", "input": "denver to atlanta ", "output": "[\"SELECT['denver']\", \"FILTER['#1', 'to atlanta']\"]"}
{"id": "ATIS_dev_70", "input": "show me all first class prices from dallas to baltimore ", "output": "[\"SELECT['prices']\", \"PROJECT['first class #REF', '#1']\", \"FILTER['#2', 'from dallas']\", \"FILTER['#3', 'to baltimore']\"]"}
{"id": "ATIS_dev_71", "input": "show me the fares for delta flights from dallas to san francisco ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'that are for delta']\", \"FILTER['#2', 'from dallas']\", \"FILTER['#3', 'to san francisco']\", \"PROJECT['fares of #REF', '#4']\"]"}
{"id": "ATIS_dev_72", "input": "us air next wednesday from cleveland to miami ", "output": "[\"SELECT['us air next']\", \"FILTER['#1', 'from cleveland']\", \"FILTER['#2', 'to miami']\", \"FILTER['#3', 'that are on next wednesday']\"]"}
{"id": "ATIS_dev_73", "input": "i would like a flight from dallas to philadelphia ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from dallas']\", \"FILTER['#2', 'to philadelphia']\"]"}
{"id": "ATIS_dev_74", "input": "please list nonstop flights from las vegas to new york on america west ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'that are nonstop']\", \"FILTER['#2', 'from las vegas']\", \"FILTER['#3', 'to new york']\", \"FILTER['#4', 'on america west']\"]"}
{"id": "ATIS_dev_75", "input": "i wish to fly from boston to washington please find an airline for me ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from boston']\", \"FILTER['#2', 'to washington']\"]"}
{"id": "ATIS_dev_76", "input": "what does iah mean ", "output": "[\"SELECT['iah']\", \"PROJECT['what does #REF mean', '#1']\"]"}
{"id": "ATIS_dev_77", "input": "what are the flights from atlanta to baltimore which arrive in baltimore at 7 o'clock pm ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from atlanta']\", \"FILTER['#2', 'to baltimore']\", \"FILTER['#3', 'that arrive at 7 pm']\"]"}
{"id": "ATIS_dev_78", "input": "i need to go from philadelphia to dallas ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from philadelphia']\", \"FILTER['#2', 'to dallas']\"]"}
{"id": "ATIS_dev_79", "input": "i need a flight from philadelphia to denver on sunday ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from philadelphia']\", \"FILTER['#2', 'to denver']\", \"FILTER['#3', 'on sunday']\"]"}
{"id": "ATIS_dev_80", "input": "could you show me all flights from montreal to charlotte ", "output": "[\"SELECT['flights']\", \"PROJECT['all #REF from montreal', '#1']\", \"FILTER['#2', 'to charlotte']\"]"}
{"id": "ATIS_dev_81", "input": "how many flights are there between san francisco and philadelphia on august eighteenth ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from san francisco']\", \"FILTER['#2', 'to philadelphia']\", \"FILTER['#3', 'on august eighteenth']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "ATIS_dev_82", "input": "boston to pittsburgh ", "output": "[\"SELECT['boston']\", \"FILTER['#1', 'to pittsburgh']\"]"}
{"id": "ATIS_dev_83", "input": "what's the most expensive way i can fly to washington ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'to washington']\", \"PROJECT['the most expensive #REF', '#2']\"]"}
{"id": "ATIS_dev_84", "input": "flights from la guardia or jfk to cleveland ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from la guardia']\", \"FILTER['#1', 'from jfk']\", \"UNION['#2', '#3']\", \"FILTER['#4', 'to cleveland']\"]"}
{"id": "ATIS_dev_86", "input": "what is the earliest flight from atlanta to boston ", "output": "[\"SELECT['flight']\", \"FILTER['#1', 'from atlanta']\", \"FILTER['#2', 'to boston']\", \"PROJECT['earliest #REF', '#3']\"]"}
{"id": "ATIS_dev_87", "input": "what is the first flight from atlanta to boston leaving on thursday september fifth ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from atlanta']\", \"FILTER['#2', 'to boston']\", \"FILTER['#3', 'leaving thursday september fifth']\", \"FILTER['#4', 'that is the first flight']\"]"}
{"id": "ATIS_dev_88", "input": "airlines that fly to miami from new york on friday ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from new york']\", \"FILTER['#2', 'to miami']\", \"FILTER['#3', 'on friday']\", \"PROJECT['airlines of #REF', '#4']\"]"}
{"id": "ATIS_dev_89", "input": "show flights leaving boston on wednesday morning and arriving in denver ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'leaving boston']\", \"FILTER['#2', 'on wednesday morning']\", \"FILTER['#3', 'arriving in denver']\", \"FILTER['#4', '']\"]"}
{"id": "ATIS_dev_9", "input": "what flights are there from newark to tampa ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from newark']\", \"FILTER['#2', 'to tampa']\"]"}
{"id": "ATIS_dev_90", "input": "i would like to see the flights available from pittsburgh to san francisco for monday ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from pittsburgh']\", \"FILTER['#2', 'to san francisco']\", \"FILTER['#3', 'for monday']\"]"}
{"id": "ATIS_dev_91", "input": "in boston is there ground transportation between airport and downtown ", "output": "[\"SELECT['ground transportations']\", \"FILTER['#1', 'in boston']\", \"FILTER['#2', 'betweenleftside the airport']\", \"FILTER['#3', 'betweenrightside downtown']\"]"}
{"id": "ATIS_dev_92", "input": "i would like to fly from dallas to san francisco on saturday and arrive in san francisco before 4pm ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from dallas']\", \"FILTER['#2', 'on saturday']\", \"FILTER['#3', 'that arrive in san francisco']\", \"FILTER['#4', 'before 4pm']\"]"}
{"id": "ATIS_dev_93", "input": "show me all flights from denver to san francisco ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from denver']\", \"FILTER['#2', 'to san francisco']\"]"}
{"id": "ATIS_dev_94", "input": "what are the delta flights from dallas to boston ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'which are on delta']\", \"FILTER['#2', 'from dallas']\", \"FILTER['#3', 'to boston']\"]"}
{"id": "ATIS_dev_95", "input": "what aircraft is co 1209 ", "output": "[\"SELECT['aircraft']\", \"FILTER['#1', 'which is co 1209']\"]"}
{"id": "ATIS_dev_96", "input": "list all flights on continental departing on monday before noon from denver to chicago ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'on continental']\", \"FILTER['#2', 'from denver']\", \"FILTER['#3', 'to chicago']\", \"FILTER['#4', 'that are departing on monday']\", \"FILTER['#5', 'before noon']\"]"}
{"id": "ATIS_dev_98", "input": "list all flights on united from san francisco to boston ", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'on united']\", \"FILTER['#2', 'from san francisco']\", \"FILTER['#3', 'to boston']\"]"}
{"id": "ATIS_dev_99", "input": "how many united flights are there to san francisco ", "output": "[\"SELECT['flights']\", \"PROJECT['united #REF', '#1']\", \"FILTER['#2', 'to san francisco']\"]"}
{"id": "CLEVR_dev_10", "input": "Which shape is a different color from the others?", "output": "[\"SELECT['objects']\", \"PROJECT['colors of #REF', '#1']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is equal to one']\", \"COMPARATIVE['#1', '#2', 'is the same as #4']\"]"}
{"id": "CLEVR_dev_1000", "input": "are there more red spheres than metal objects?", "output": "[\"SELECT['red spheres']\", \"SELECT['metal objects']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'higher than #4']\"]"}
{"id": "CLEVR_dev_1002", "input": "What color is the shiny object that has no sides?", "output": "[\"SELECT['shiny objects']\", \"FILTER['#1', 'with no sides']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_1006", "input": "is the smallestt item shown, that also matches the shape of the largest item shown, also made of the same material?", "output": "[\"SELECT['item']\", \"FILTER['#1', 'that is smallestt']\", \"PROJECT['shape of #REF', '#2']\", \"FILTER['#1', 'that is largest']\", \"PROJECT['shape of #REF', '#4']\", \"COMPARATIVE['#2', '#3', 'is same as #5']\", \"COMPARATIVE['#4', '#3', 'is same as #5']\", \"PROJECT['material of #REF', '#6']\", \"PROJECT['material of #REF', '#7']\", \"BOOLEAN['#8', 'is same as #9']\"]"}
{"id": "CLEVR_dev_1010", "input": "Are there any items larger than the yellow cylinder?", "output": "[\"SELECT['the yellow cylinder']\", \"PROJECT['size of #REF', '#1']\", \"SELECT['objects']\", \"DISCARD['#3', '#1']\", \"PROJECT['size of #REF', '#4']\", \"COMPARATIVE['#4', '#5', 'is higher than #2']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is at least one']\"]"}
{"id": "CLEVR_dev_1016", "input": "How many boxes are there in the picture?", "output": "[\"SELECT['boxes']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_1018", "input": "What color is the smallestt, shiny object?", "output": "[\"SELECT['smallestt object']\", \"FILTER['#1', 'that is shiny']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_102", "input": "What shape is the small blue object?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are small']\", \"FILTER['#2', 'that are blue']\", \"PROJECT['the shape of #REF', '#3']\"]"}
{"id": "CLEVR_dev_1021", "input": "How many other objects are made from the same type of material as the object that is the most far in the back?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is most far in the back']\", \"PROJECT['material of #REF', '#1']\", \"PROJECT['material of #REF', '#2']\", \"COMPARATIVE['#1', '#3', 'is the same as #4']\", \"AGGREGATE['count', '#5']\"]"}
{"id": "CLEVR_dev_1025", "input": "How many red blocks do you see?", "output": "[\"SELECT['red blocks']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_1027", "input": "There are four items that share one color, what is that color?", "output": "[\"SELECT['items']\", \"PROJECT['colors of #REF', '#1']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is four']\"]"}
{"id": "CLEVR_dev_103", "input": "Are more objects green than any other color?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are green']\", \"DISCARD['#1', '#2']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'higher than #5']\"]"}
{"id": "CLEVR_dev_1034", "input": "What shape is ther only one of?", "output": "[\"SELECT['objects']\", \"PROJECT['shapes of #REF', '#1']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is one']\"]"}
{"id": "CLEVR_dev_1035", "input": "What material is the small object that is behind the large red object and is of the same shape?", "output": "[\"SELECT['large red object']\", \"PROJECT['small object behind #REF', '#1']\", \"PROJECT['shape of #REF', '#1']\", \"PROJECT['shape of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is the same as #4']\", \"PROJECT['material of #REF', '#5']\"]"}
{"id": "CLEVR_dev_1036", "input": "Is the smallestt sphere the same color of the largest cube?", "output": "[\"SELECT['smallestt sphere']\", \"SELECT['largest cube']\", \"PROJECT['color of #REF', '#1']\", \"PROJECT['color of #REF', '#2']\", \"BOOLEAN['#3', 'the same as #4']\"]"}
{"id": "CLEVR_dev_104", "input": "If you took one purple ball out of the picture how many would be left?", "output": "[\"SELECT['balls']\", \"FILTER['#1', 'that are purple']\", \"AGGREGATE['count', '#2']\", \"PROJECT['the difference of #REF and one', '#3']\"]"}
{"id": "CLEVR_dev_1040", "input": "How many other things are the sames size and shape as the brown matte object?", "output": "[\"SELECT['the brown matte object']\", \"PROJECT['size of #REF', '#1']\", \"PROJECT['shape of #REF', '#1']\", \"SELECT['things']\", \"DISCARD['#4', '#1']\", \"PROJECT['sizes of #REF', '#5']\", \"PROJECT['shapes of #REF', '#5']\", \"COMPARATIVE['#5', '#6', 'is the same as #2']\", \"COMPARATIVE['#5', '#7', 'is the same as #3']\", \"INTERSECTION['#5', '#8', '#9']\", \"AGGREGATE['count', '#10']\"]"}
{"id": "CLEVR_dev_1044", "input": "There are three objects separated to the side from the rest, what color is the center object?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are separated to the side']\", \"FILTER['#2', 'that is in the center']\", \"PROJECT['the color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_1049", "input": "how many shapes are partially hidden?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are partially hidden']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_1051", "input": "How many objects are spheres?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are spheres']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_1052", "input": "What color objects appears three times?", "output": "[\"SELECT['objects']\", \"PROJECT['colors of #REF', '#1']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is three']\"]"}
{"id": "CLEVR_dev_1064", "input": "Is there a purple metallic ball behind the purple metallic block?", "output": "[\"SELECT['purple metallic ball']\", \"SELECT['purple metallic block']\", \"FILTER['#1', 'behind #2']\", \"BOOLEAN['#3', 'Is there any #REF']\"]"}
{"id": "CLEVR_dev_1066", "input": "what is the shape of the object that is a different material than the others?", "output": "[\"SELECT['objects']\", \"PROJECT['materials of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is different than the others']\", \"PROJECT['shape of #REF', '#3']\"]"}
{"id": "CLEVR_dev_1067", "input": "How many red objects are pictured?", "output": "[\"SELECT['red objects']\", \"FILTER['#1', 'which are pictured']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_1068", "input": "There are objects that have the same colors, which one is the most present?", "output": "[\"SELECT['objects']\", \"PROJECT['colors of #REF', '#1']\", \"GROUP['count', '#1', '#2']\", \"SUPERLATIVE['max', '#2', '#3']\"]"}
{"id": "CLEVR_dev_1072", "input": "Which color occurs the least?", "output": "[\"SELECT['objects']\", \"PROJECT['colors of #REF', '#1']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is the lowest']\"]"}
{"id": "CLEVR_dev_1077", "input": "What color is the object that is not the largest object but the same shape as the largest object?", "output": "[\"SELECT['objects']\", \"PROJECT['size of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is the highest']\", \"DISCARD['#1', '#3']\", \"PROJECT['shape of #REF', '#3']\", \"PROJECT['shapes of #REF', '#4']\", \"COMPARATIVE['#4', '#6', 'is the same as #5']\", \"PROJECT['color of #REF', '#7']\"]"}
{"id": "CLEVR_dev_1083", "input": "What color balls are matte?", "output": "[\"SELECT['balls']\", \"FILTER['#1', 'that are matte']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_1086", "input": "what material is the cylinder that is different than most?", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'that are different than most']\", \"PROJECT['the material of #REF', '#2']\"]"}
{"id": "CLEVR_dev_1095", "input": "What is the color of the back most object?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is back most']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_1096", "input": "How many objects are colored primary colors?", "output": "[\"SELECT['objects']\", \"PROJECT['colors of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'are primary colors']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_1097", "input": "Are more objects metallic or matte?", "output": "[\"SELECT['metallic objects']\", \"SELECT['matte objects']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"COMPARISON['max', '#3', '#4']\"]"}
{"id": "CLEVR_dev_1104", "input": "How many objects in this photo are spherical? ", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are spherical']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_1107", "input": "What material is the only small object?", "output": "[\"SELECT['small object']\", \"PROJECT['material of #REF', '#1']\"]"}
{"id": "CLEVR_dev_1111", "input": "How many total cubes are depicted?", "output": "[\"SELECT['cubes']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_1115", "input": "Are there more small shiny objects than objects that are in front of the brown sphere?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are shiny']\", \"SELECT['brown sphere']\", \"FILTER['#1', 'in front of #3']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'higher than #6']\"]"}
{"id": "CLEVR_dev_1117", "input": "There are two of each shape objects and one object is a loner. Which shape is that?", "output": "[\"SELECT['objects']\", \"PROJECT['shapes of #REF', '#1']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is one']\"]"}
{"id": "CLEVR_dev_1123", "input": "shape is the object behind the gold sphere?", "output": "[\"SELECT['objects']\", \"SELECT['gold sphere']\", \"FILTER['#1', 'that is behind #2']\", \"PROJECT['shape of #REF', '#3']\"]"}
{"id": "CLEVR_dev_1128", "input": "Of the four purple objects how many are metalic?", "output": "[\"SELECT['purple objects']\", \"FILTER['#1', 'that are metalic']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_1130", "input": "which object does not belong to a set", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that belong to a set']\", \"DISCARD['#1', '#2']\"]"}
{"id": "CLEVR_dev_1131", "input": "How many objects are metal in this picture?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are metal']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_1133", "input": "Is the small cube behind the matte purple cylinder matte or shiny?", "output": "[\"SELECT['the matte purple cylinder']\", \"SELECT['cubes']\", \"FILTER['#2', 'that are small']\", \"FILTER['#3', 'that are behind #1']\", \"BOOLEAN['#4', 'is matte']\", \"BOOLEAN['#4', 'is shiny']\", \"UNION['#5', '#6']\"]"}
{"id": "CLEVR_dev_1135", "input": "What is the shape of the Smallest purple object?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are purple']\", \"PROJECT['size of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is the lowest']\", \"PROJECT['shape of #REF', '#4']\"]"}
{"id": "CLEVR_dev_1136", "input": "What color is the object furthest from the large blue sphere?", "output": "[\"SELECT['the large blue sphere']\", \"PROJECT['the furthest object of #REF', '#1']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_1138", "input": "what shape is the red metallic object?", "output": "[\"SELECT['red object']\", \"FILTER['#1', 'that is metallic']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_1143", "input": "Is the ball smaller than the cubes?", "output": "[\"SELECT['ball']\", \"SELECT['cubes']\", \"BOOLEAN['#1', 'smaller than #2']\"]"}
{"id": "CLEVR_dev_1146", "input": "Are there more red objects or silver objects?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are red']\", \"FILTER['#1', 'that are silver']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'higher than #5']\"]"}
{"id": "CLEVR_dev_1147", "input": "what shape is the small gray object in the middle", "output": "[\"SELECT['small object']\", \"FILTER['#1', 'that is gray']\", \"FILTER['#2', 'in the middle']\", \"PROJECT['shape of #REF', '#3']\"]"}
{"id": "CLEVR_dev_1149", "input": "How many objects are either gray matte objects or cylinders?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are cylinders']\", \"AGGREGATE['count', '#2']\", \"DISCARD['#1', '#2']\", \"FILTER['#4', 'that are gray']\", \"FILTER['#5', 'that are matte']\", \"AGGREGATE['count', '#6']\", \"ARITHMETIC['sum', '#7', '#3']\"]"}
{"id": "CLEVR_dev_1151", "input": "how many red balls do you see?", "output": "[\"SELECT['red balls']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_1152", "input": "what color is to the right of the green cylinder", "output": "[\"SELECT['green cylinder']\", \"PROJECT['color to the right of #REF', '#1']\"]"}
{"id": "CLEVR_dev_1153", "input": "How many things are spheres?", "output": "[\"SELECT['spheres']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_1154", "input": "What color is the smallestt matte ball?", "output": "[\"SELECT['smallestt matte ball']\", \"PROJECT['color of #REF', '#1']\"]"}
{"id": "CLEVR_dev_1157", "input": "What shape is to the right of the metallic blue ball but to the left of the metallic green ball?", "output": "[\"SELECT['ball']\", \"FILTER['#1', 'that is metallic']\", \"FILTER['#2', 'that is blue']\", \"FILTER['#2', 'that is green']\", \"SELECT['objects']\", \"FILTER['#5', 'that are to the right of #3']\", \"FILTER['#6', 'that are to the left of #4']\"]"}
{"id": "CLEVR_dev_1159", "input": "WHat item is the largest?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that is the largest']\"]"}
{"id": "CLEVR_dev_116", "input": "Half of the objects are what color?", "output": "[\"SELECT['objects']\", \"PROJECT['colors of #REF', '#1']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is the highest']\"]"}
{"id": "CLEVR_dev_1160", "input": "What is the color of the object that is furthest right?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is furthest right']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_1163", "input": "how many objects are metallic ", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are metallic']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_1168", "input": "What shape is the rubber object in the back?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is rubber']\", \"FILTER['#2', 'that is in the back']\", \"PROJECT['shape of #REF', '#3']\"]"}
{"id": "CLEVR_dev_117", "input": "Are the yellow objects matte?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are yellow']\", \"FILTER['#2', 'that are matte']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to #5']\"]"}
{"id": "CLEVR_dev_1170", "input": "Are any objects made from the same material?", "output": "[\"SELECT['objects']\", \"PROJECT['materials #REF are made from', '#1']\", \"BOOLEAN['if_exist', '#1', 'where #2 is the same']\"]"}
{"id": "CLEVR_dev_1173", "input": "Is the matte ball on top of the green shiny cylinder?", "output": "[\"SELECT['the green shiny cylinder']\", \"PROJECT['balls on top of #REF', '#1']\", \"FILTER['#2', 'that are matte']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least one']\"]"}
{"id": "CLEVR_dev_1174", "input": "How many black blocks are there?", "output": "[\"SELECT['blocks']\", \"FILTER['#1', 'that are black']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_1175", "input": "what color is the red ball?", "output": "[\"SELECT['red ball']\", \"PROJECT['color of #REF', '#1']\"]"}
{"id": "CLEVR_dev_1177", "input": "How many different shapes can be seen?", "output": "[\"SELECT['shapes that can be seen']\", \"PROJECT['different #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"UNION['#1', '#3']\"]"}
{"id": "CLEVR_dev_1182", "input": "Is there a gray metallic block next to the big blue block?", "output": "[\"SELECT['blocks']\", \"FILTER['#1', 'that is big']\", \"FILTER['#2', 'that is blue']\", \"FILTER['#1', 'that are gray']\", \"FILTER['#4', 'that are metallic']\", \"BOOLEAN['if_exist', '#5', 'next to #3']\"]"}
{"id": "CLEVR_dev_1186", "input": "What shape is in between the two cubes?", "output": "[\"SELECT['cubes']\", \"SELECT['shapes']\", \"FILTER['#2', 'that are between the two #1']\"]"}
{"id": "CLEVR_dev_119", "input": "What object is to the far right?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are to the far right']\"]"}
{"id": "CLEVR_dev_1191", "input": "Is the smallestt cube the same color of the smallestt cylinder?", "output": "[\"SELECT['smallestt cube']\", \"SELECT['smallestt cylinder']\", \"PROJECT['color of #REF', '#1']\", \"PROJECT['color of #REF', '#2']\", \"BOOLEAN['#3', 'the same as #4']\"]"}
{"id": "CLEVR_dev_1193", "input": "What object is off by iteself?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is off by iteself']\"]"}
{"id": "CLEVR_dev_1196", "input": "Is there one or two blue balls in the picture?", "output": "[\"SELECT['balls in the picture']\", \"FILTER['#1', 'that are blue']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is one']\", \"BOOLEAN['#3', 'is two']\", \"UNION['#4', '#5']\"]"}
{"id": "CLEVR_dev_1198", "input": "what is the color of the cylinder that is away from the others?", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'that is away from the others']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_1200", "input": "what is the color of the sphere that is partially hidden", "output": "[\"SELECT['spheres']\", \"FILTER['#1', 'that is partially hidden']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_1201", "input": "How many metallic cubes appear in this image?", "output": "[\"SELECT['metallic cubes']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_1204", "input": "What are the objects behind the blue cylinder object?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are blue']\", \"FILTER['#2', 'that are cylinder']\", \"FILTER['#1', 'behind #3']\"]"}
{"id": "CLEVR_dev_1206", "input": "What is the color of the sphere that is farthest to the right?", "output": "[\"SELECT['sphere']\", \"FILTER['#1', 'farthest to the right']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_1207", "input": "What color object is reflected in the cube in the middle of the picture", "output": "[\"SELECT['object']\", \"SELECT['cube']\", \"FILTER['#2', 'that is in the middle']\", \"FILTER['#1', 'reflected in #3']\", \"PROJECT['color of #REF', '#4']\"]"}
{"id": "CLEVR_dev_1217", "input": "What shape is the purple object that is shiny?", "output": "[\"SELECT['purple object']\", \"FILTER['#1', 'that is shiny']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_1221", "input": "How many large round cylinders are there?", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'that are large']\", \"FILTER['#2', 'that are round']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_1228", "input": "What shape is the object which is most hidden?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is most hidden']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_1229", "input": "What color is shown the most?", "output": "[\"SELECT['colors']\", \"FILTER['#1', 'that is shown the most']\"]"}
{"id": "CLEVR_dev_1231", "input": "There is a cube that is to the left of the large purple metal object; what color is it?", "output": "[\"SELECT['the large purple metal object']\", \"SELECT['cubes']\", \"FILTER['#2', 'that are to the left of #1']\", \"PROJECT['the color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_1233", "input": "How many objects total in the picture?", "output": "[\"SELECT['objects']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_1235", "input": "How many balls are red and in front of the green cylinder?", "output": "[\"SELECT['balls']\", \"SELECT['the green cylinder']\", \"FILTER['#1', 'that are red']\", \"FILTER['#3', 'that are in front of #2']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "CLEVR_dev_1236", "input": "Is there another object with the same color and finish as the cylinder?", "output": "[\"SELECT['the cylinder']\", \"PROJECT['color of #REF', '#1']\", \"PROJECT['finish of #REF', '#1']\", \"SELECT['objects']\", \"DISCARD['#4', '#1']\", \"PROJECT['colors of #REF', '#5']\", \"PROJECT['finishes of #REF', '#5']\", \"COMPARATIVE['#5', '#6', 'is the same as #2']\", \"COMPARATIVE['#5', '#7', 'is the same as #3']\", \"INTERSECTION['#5', '#8', '#9']\", \"AGGREGATE['count', '#10']\", \"BOOLEAN['#11', 'is at least one']\"]"}
{"id": "CLEVR_dev_1243", "input": "Are any of the objects a cylinder?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are cylinders']\", \"BOOLEAN['#2', 'are there any #REF']\"]"}
{"id": "CLEVR_dev_1244", "input": "What is the color of the shape that is to the right of the purple cylinder and to the left of the cyan sphere?", "output": "[\"SELECT['the purple cylinder']\", \"SELECT['the cyan sphere']\", \"SELECT['shapes']\", \"FILTER['#3', 'that are to the right of #1']\", \"FILTER['#4', 'that are to the left of #2']\", \"PROJECT['the color of #REF', '#5']\"]"}
{"id": "CLEVR_dev_1245", "input": "What is the total number of light blue objects in this image?", "output": "[\"SELECT['light blue objects']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_1247", "input": "Are there more tiny spheres than shiny cylinders?", "output": "[\"SELECT['spheres']\", \"FILTER['#1', 'that are tiny']\", \"AGGREGATE['count', '#2']\", \"SELECT['cylinders']\", \"FILTER['#4', 'that are shiny']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#3', 'more than #6']\"]"}
{"id": "CLEVR_dev_1251", "input": "How many small metallic spheres are there?", "output": "[\"SELECT['small metallic spheres']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_1252", "input": "Are all the rubber spheres the same size?", "output": "[\"SELECT['spheres']\", \"FILTER['#1', 'that are rubber']\", \"PROJECT['size', '#2']\", \"GROUP['count', '#2', '#3']\", \"SUPERLATIVE['max', '#2', '#4']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'the same as #7']\"]"}
{"id": "CLEVR_dev_1253", "input": "Is there any duplicate of colors here?", "output": "[\"SELECT['colors']\", \"PROJECT['duplicates of #REF', '#1']\", \"BOOLEAN['#2', 'are there any #REF']\"]"}
{"id": "CLEVR_dev_1258", "input": "Are the small balls matte?", "output": "[\"SELECT['small balls']\", \"FILTER['#1', 'that are matte']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'the same as #4']\"]"}
{"id": "CLEVR_dev_1262", "input": "What color has the highest frequency of occurrence among the shapes?", "output": "[\"SELECT['objects']\", \"PROJECT['colors of #REF', '#1']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is the highest']\"]"}
{"id": "CLEVR_dev_1264", "input": "What material is the green square?", "output": "[\"SELECT['green square']\", \"PROJECT['material of #REF', '#1']\"]"}
{"id": "CLEVR_dev_1269", "input": "what shape are the majority of the objects", "output": "[\"SELECT['shapes']\", \"PROJECT['objects of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"SUPERLATIVE['max', '#1', '#3']\"]"}
{"id": "CLEVR_dev_1278", "input": "What color is the small matte cube?", "output": "[\"SELECT['small cube']\", \"FILTER['#1', 'that is matte']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_1280", "input": "What material are the small objects made of?", "output": "[\"SELECT['small objects']\", \"PROJECT['material of #REF', '#1']\"]"}
{"id": "CLEVR_dev_1289", "input": "is the blue sphere the same shape as the other blue object?", "output": "[\"SELECT['the blue sphere']\", \"SELECT['objects']\", \"DISCARD['#2', '#1']\", \"FILTER['#3', 'that is blue']\", \"PROJECT['the shape of #REF', '#1']\", \"PROJECT['the shape of #REF', '#4']\", \"BOOLEAN['#5', 'the same as #6']\"]"}
{"id": "CLEVR_dev_1291", "input": "what is the shape of the object behind all of the others?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is behind all of the others']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_1294", "input": "which rubber object is the same color as the metallic cylinder?", "output": "[\"SELECT['the metallic cylinder']\", \"PROJECT['the color of #REF', '#1']\", \"SELECT['objects']\", \"FILTER['#3', 'that are rubber']\", \"PROJECT['the colors of #REF', '#4']\", \"COMPARATIVE['#4', '#5', 'is the same as #2']\"]"}
{"id": "CLEVR_dev_13", "input": "Which ball is the closest to the cube?", "output": "[\"SELECT['cubes']\", \"SELECT['balls']\", \"FILTER['#2', 'that is closest to #1']\"]"}
{"id": "CLEVR_dev_1301", "input": "What color is the middle cylinder in the front?", "output": "[\"SELECT['middle cylinder']\", \"FILTER['#1', 'that is in the front']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_1309", "input": "what color is the sphere touching the purple cylinder?", "output": "[\"SELECT['the purple cylinder']\", \"SELECT['the sphere']\", \"FILTER['#2', 'that is touching #1']\", \"PROJECT['the color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_1314", "input": "What color is the largest object in this image?", "output": "[\"SELECT['objects']\", \"PROJECT['size of #REF', '#1']\", \"SUPERLATIVE['max', '#1', '#2']\", \"PROJECT['color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_1317", "input": "Do you see a large purple shiny ball?", "output": "[\"SELECT['large ball']\", \"FILTER['#1', 'that is purple']\", \"FILTER['#1', 'that is shiny']\", \"INTERSECTION['#1', '#2', '#3']\", \"BOOLEAN['#4', 'is there any #REF']\"]"}
{"id": "CLEVR_dev_1318", "input": "How many flat surfaces does the partially hidden object have?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are partially hidden']\", \"PROJECT['flat surfaces of #REF', '#2']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_1319", "input": "What color is the object behind the shiny object and to the left of the red cube?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is shiny']\", \"FILTER['#1', 'behind #2']\", \"SELECT['red cube']\", \"FILTER['#3', 'to the left of #4']\", \"PROJECT['color of #REF', '#5']\"]"}
{"id": "CLEVR_dev_1320", "input": "What shape object is cut off?", "output": "[\"SELECT['object']\", \"FILTER['#1', 'that is cut off']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_1325", "input": "are there more purple or red objects?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are purple']\", \"FILTER['#1', 'that are red']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"COMPARISON['max', '#4', '#5']\"]"}
{"id": "CLEVR_dev_1328", "input": "Is there a purple object?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are purple']\", \"BOOLEAN['#2', 'if there is a #REF']\"]"}
{"id": "CLEVR_dev_1329", "input": "How many gray objects are inside the picture?", "output": "[\"SELECT['gray objects']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_133", "input": "The only metal object is what color?", "output": "[\"SELECT['object']\", \"FILTER['#1', 'that is metal']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_1349", "input": "Are there more matte cubes or shiny cubes?", "output": "[\"SELECT['matte cubes']\", \"SELECT['shiny cubes']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"COMPARISON['max', '#3', '#4']\"]"}
{"id": "CLEVR_dev_1354", "input": "What is in the middle? ", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are in the middle']\"]"}
{"id": "CLEVR_dev_1358", "input": "What is the shape of the only green object?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are green']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_1359", "input": "Do all of the objects have a shadow casted?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'with a shadow casted']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'the same as #4']\"]"}
{"id": "CLEVR_dev_1362", "input": "what color is the rubber sphere?", "output": "[\"SELECT['sphere']\", \"FILTER['#1', 'that is rubber']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_137", "input": "What object is in between the yellow objects?", "output": "[\"SELECT['yellow objects']\", \"PROJECT['What is between #REF', '#1']\"]"}
{"id": "CLEVR_dev_1370", "input": "Are both metallic squares the same color?", "output": "[\"SELECT['metallic squares']\", \"PROJECT['color of #REF', '#1']\", \"BOOLEAN['#2', 'both the same']\"]"}
{"id": "CLEVR_dev_1372", "input": "How many green things are there in this picture?", "output": "[\"SELECT['things']\", \"FILTER['#1', 'in this picture']\", \"FILTER['#2', 'that are green']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_1376", "input": "Are there any metal shapes present?", "output": "[\"SELECT['metal shapes']\", \"BOOLEAN['#1', 'are there any #REF']\"]"}
{"id": "CLEVR_dev_1377", "input": "what shape is the item that is the only non matte item of three similar items?", "output": "[\"SELECT['items']\", \"PROJECT['three similar #REF', '#1']\", \"FILTER['#1', 'that is matte']\", \"DISCARD['#2', '#3']\", \"PROJECT['shape of #REF', '#4']\"]"}
{"id": "CLEVR_dev_138", "input": "Does the purple item have the same shape as the gold ball?", "output": "[\"SELECT['purple item']\", \"SELECT['gold ball']\", \"PROJECT['shape of #REF', '#1']\", \"PROJECT['shape of #REF', '#2']\", \"BOOLEAN['#3', 'is the same as #4']\"]"}
{"id": "CLEVR_dev_1380", "input": "Is there more shiny spheres or matte spheres?", "output": "[\"SELECT['spheres']\", \"FILTER['#1', 'that are shiny']\", \"FILTER['#1', 'that are matte']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"COMPARISON['max', '#4', '#5']\"]"}
{"id": "CLEVR_dev_1387", "input": "What is behind the gold cube?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is gold']\", \"FILTER['#2', 'that is cube']\", \"FILTER['#1', 'behind #3']\"]"}
{"id": "CLEVR_dev_1388", "input": "What type of material are the most items made of?", "output": "[\"SELECT['materials']\", \"PROJECT['items made of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"SUPERLATIVE['max', '#1', '#3']\", \"PROJECT['type of #REF', '#4']\"]"}
{"id": "CLEVR_dev_1393", "input": "Are any of the objects the same color as another object?", "output": "[\"SELECT['objects']\", \"PROJECT['colors of #REF', '#1']\", \"GROUP['count', '#1', '#2']\", \"BOOLEAN['#3', 'is higher than one']\"]"}
{"id": "CLEVR_dev_1396", "input": "What shape is shown twice?", "output": "[\"SELECT['shapes']\", \"FILTER['#1', 'that is shown twice']\"]"}
{"id": "CLEVR_dev_1397", "input": "How many spheres are there in the picture?", "output": "[\"SELECT['spheres']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_1399", "input": "What number of cubes are shiny?", "output": "[\"SELECT['shiny cubes']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_1407", "input": "How many rubber objects are the same size as the blue cylinder?", "output": "[\"SELECT['rubber objects']\", \"SELECT['blue cylinder']\", \"PROJECT['size of #REF', '#1']\", \"PROJECT['size of #REF', '#2']\", \"COMPARATIVE['#1', '#3', 'is the same as #4']\", \"AGGREGATE['count', '#5']\"]"}
{"id": "CLEVR_dev_1409", "input": "Most of the objects in the image take the form of what shape?", "output": "[\"SELECT['shapes']\", \"PROJECT['objects of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"SUPERLATIVE['max', '#1', '#3']\"]"}
{"id": "CLEVR_dev_1413", "input": "The red cylinder is partly hidden by what color sphere?", "output": "[\"SELECT['the red cylinder']\", \"SELECT['the sphere']\", \"FILTER['#2', 'that #1 is partly hidden by']\", \"PROJECT['the color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_1415", "input": "Are there any objects the same material as the green cylinder?", "output": "[\"SELECT['objects']\", \"SELECT['green cylinder']\", \"PROJECT['material of #REF', '#1']\", \"PROJECT['material of #REF', '#2']\", \"COMPARATIVE['#1', '#3', 'is the same as #4']\", \"BOOLEAN['#5', 'are there any #REF']\"]"}
{"id": "CLEVR_dev_1419", "input": "What number of blue squares are there?", "output": "[\"SELECT['squares']\", \"FILTER['#1', 'that are blue']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_1423", "input": "How many objects are the same material as the purple cylinder?", "output": "[\"SELECT['purple cylinder']\", \"SELECT['objects']\", \"DISCARD['#2', '#1']\", \"PROJECT['material of #REF', '#1']\", \"PROJECT['materials of #REF', '#3']\", \"COMPARATIVE['#3', '#4', 'is the same as #5']\", \"AGGREGATE['count', '#6']\"]"}
{"id": "CLEVR_dev_1424", "input": "What is the color of the other cube that's the same size as the red cube?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that are red']\", \"PROJECT['size of #REF', '#2']\", \"DISCARD['#1', '#2']\", \"PROJECT['sizes of #REF', '#4']\", \"COMPARATIVE['#4', '#5', 'is the same as #3']\", \"PROJECT['color of #REF', '#6']\"]"}
{"id": "CLEVR_dev_1426", "input": "Are thee purple objects pictured?", "output": "[\"SELECT['purple objects']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'equal to thee']\"]"}
{"id": "CLEVR_dev_1427", "input": "What shape is the object that isn't the same as the others?", "output": "[\"SELECT['object']\", \"FILTER['#1', 'that is not the same as the others']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_1428", "input": "Are there any repeating paint jobs on these objects?", "output": "[\"SELECT['objects']\", \"PROJECT['paint jobs on #REF', '#1']\", \"FILTER['#2', 'that are repeating']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least one']\"]"}
{"id": "CLEVR_dev_1434", "input": "What shape is the neutral colored object?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is neutral colored']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_1435", "input": "Is there a greater amount of green or gray objects?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are green']\", \"FILTER['#1', 'that are gray']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"COMPARISON['max', '#4', '#5']\"]"}
{"id": "CLEVR_dev_1438", "input": "What shape is the tiny object in the middle of the group?", "output": "[\"SELECT['tiny object']\", \"FILTER['#1', 'that is in the middle of the group']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_144", "input": "Is there more than one purple object?", "output": "[\"SELECT['purple object']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'higher than one']\"]"}
{"id": "CLEVR_dev_1440", "input": "Do all of the objects have a flat top?", "output": "[\"SELECT['objects']\", \"PROJECT['tops of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is flat']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'the same as #5']\"]"}
{"id": "CLEVR_dev_1445", "input": "Are there any green balls?", "output": "[\"SELECT['green balls']\", \"BOOLEAN['#1', 'are there any #REF']\"]"}
{"id": "CLEVR_dev_1447", "input": "what shape os the object that has nothing in common with the other objects", "output": "[\"SELECT['objects']\", \"PROJECT['shapes of #REF', '#1']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is one']\"]"}
{"id": "CLEVR_dev_1448", "input": "Are the big cylinders made of the same material?", "output": "[\"SELECT['big cylinders']\", \"PROJECT['materials of #REF', '#1']\", \"BOOLEAN['#2', 'the same']\"]"}
{"id": "CLEVR_dev_1450", "input": "Are there three objects that are exactly the same?", "output": "[\"SELECT['objects']\", \"BOOLEAN['#1', 'are there three #REF that Are exactly the same']\"]"}
{"id": "CLEVR_dev_1451", "input": "What color is the small orb?", "output": "[\"SELECT['orbs']\", \"FILTER['#1', 'that are small']\", \"PROJECT['the color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_1454", "input": "Are there more green shiny things or squares?", "output": "[\"SELECT['green things']\", \"FILTER['#1', 'that are shiny']\", \"SELECT['squares']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"COMPARISON['max', '#4', '#5']\"]"}
{"id": "CLEVR_dev_1455", "input": "What color is shown here in two shades?", "output": "[\"SELECT['colors']\", \"PROJECT['shades of #REF shown', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is two']\"]"}
{"id": "CLEVR_dev_1456", "input": "What shape is the large cyan object that is to the right of the blue matte sphere?", "output": "[\"SELECT['the blue matte sphere']\", \"SELECT['objects']\", \"FILTER['#2', 'that are large']\", \"FILTER['#3', 'that are cyan']\", \"FILTER['#4', 'that are to the right of #1']\", \"PROJECT['the shape of #REF', '#5']\"]"}
{"id": "CLEVR_dev_1457", "input": "if most of the items shown are shiny and most of the items shown are blue, would it be fair to say most of the items are shiny and blue?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that are shiny']\", \"FILTER['#2', 'that are blue']\", \"DISCARD['#1', '#3']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is higher than #6']\"]"}
{"id": "CLEVR_dev_146", "input": "Are all three tiny cubes the same?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that are tiny']\", \"BOOLEAN['#2', 'if all of #REF are the same']\"]"}
{"id": "CLEVR_dev_1461", "input": "What is the large shiny purple square immediately next to?", "output": "[\"SELECT['squares']\", \"FILTER['#1', 'that are shiny']\", \"FILTER['#2', 'that are large']\", \"FILTER['#3', 'that are purple']\", \"SELECT['objects']\", \"FILTER['#5', 'that is next to #4']\"]"}
{"id": "CLEVR_dev_1463", "input": "What color is the middle matte ball?", "output": "[\"SELECT['balls']\", \"FILTER['#1', 'that are matte']\", \"FILTER['#2', 'that are in the middle']\", \"PROJECT['color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_1466", "input": "How many items have a flat surface?", "output": "[\"SELECT['items']\", \"PROJECT['surfaces of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is flat']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_1470", "input": "How many blue objects are there pictured?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are pictured']\", \"FILTER['#2', 'that are blue']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_1476", "input": "How many square objects in the picture?", "output": "[\"SELECT['squares']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_1479", "input": "are there more metal or rubber objects?", "output": "[\"SELECT['metal objects']\", \"SELECT['rubber objects']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"COMPARISON['max', '#3', '#4']\"]"}
{"id": "CLEVR_dev_1480", "input": "What is the shape of the object behind the big yellow thing and to the right of the brown thing?", "output": "[\"SELECT['the big yellow thing']\", \"SELECT['the brown thing']\", \"SELECT['objects']\", \"FILTER['#3', 'that are behind #1']\", \"FILTER['#4', 'that are to the right of #2']\", \"PROJECT['the shape of #REF', '#5']\"]"}
{"id": "CLEVR_dev_1488", "input": "What shape is the only gold object?", "output": "[\"SELECT['gold object']\", \"PROJECT['shape of #REF', '#1']\"]"}
{"id": "CLEVR_dev_1490", "input": "How many spheres are present in the photo?", "output": "[\"SELECT['spheres']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_1493", "input": "What color is the largest circular object?", "output": "[\"SELECT['circular objects']\", \"PROJECT['size of #REF', '#1']\", \"SUPERLATIVE['max', '#1', '#2']\", \"PROJECT['color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_1496", "input": "how many spheres are made of metal?", "output": "[\"SELECT['spheres']\", \"FILTER['#1', 'that are made of metal']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_1498", "input": "How many cylinders are in the picture?", "output": "[\"SELECT['cylinders']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_1499", "input": "What is the most prevalent shape", "output": "[\"SELECT['shapes']\", \"FILTER['#1', 'that is the most prevalent']\"]"}
{"id": "CLEVR_dev_1503", "input": "How many shapes of the same size are there?", "output": "[\"SELECT['shapes']\", \"PROJECT['sizes of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'are the same']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_1508", "input": "What shape is between the two calls?", "output": "[\"SELECT['calls']\", \"SELECT['shapes']\", \"FILTER['#2', 'that is between two #1']\"]"}
{"id": "CLEVR_dev_1509", "input": "Are any purple objects shiny?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are purple']\", \"FILTER['#2', 'that are shiny']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least one']\"]"}
{"id": "CLEVR_dev_1510", "input": "Are the two spheres in this image the same size?", "output": "[\"SELECT['spheres']\", \"PROJECT['sizes of #REF', '#1']\", \"BOOLEAN['#2', 'both the same']\"]"}
{"id": "CLEVR_dev_1511", "input": "What object is in the forground?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is in the forground']\"]"}
{"id": "CLEVR_dev_1513", "input": "Are there two matte blocks?", "output": "[\"SELECT['blocks']\", \"FILTER['#1', 'that are matte']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is two']\"]"}
{"id": "CLEVR_dev_152", "input": "How many shiny spheres are there in this picture?", "output": "[\"SELECT['shiny spheres']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_1520", "input": "What is the color of the smallestt circular object?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are circular']\", \"PROJECT['size of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is the lowest']\", \"PROJECT['color of #REF', '#4']\"]"}
{"id": "CLEVR_dev_1527", "input": "is the green block to the right of the yellow sphere", "output": "[\"SELECT['blocks']\", \"FILTER['#1', 'that is green']\", \"SELECT['spheres']\", \"FILTER['#3', 'that is yellow']\", \"BOOLEAN['#2', 'to the right of #4']\"]"}
{"id": "CLEVR_dev_1528", "input": "How many of these objects can be rolled?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that can be rolled']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_1529", "input": "Are the blue green objects the same shape?", "output": "[\"SELECT['blue green objects']\", \"PROJECT['shapes of #REF', '#1']\", \"BOOLEAN['#2', 'the same']\"]"}
{"id": "CLEVR_dev_1530", "input": "Are all the objects cubes?", "output": "[\"SELECT['objects']\", \"BOOLEAN['#1', 'if all the #REF are cubes']\"]"}
{"id": "CLEVR_dev_1531", "input": "How many shiny blue objects are present?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are blue']\", \"FILTER['#2', 'that are shiny']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_1533", "input": "Are there any cylinders behind the large purple ball?", "output": "[\"SELECT['the large purple ball']\", \"PROJECT['cylinders behind of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at least one']\"]"}
{"id": "CLEVR_dev_1534", "input": "How many dots of light is on the silver ball?", "output": "[\"SELECT['dots of light']\", \"SELECT['silver ball']\", \"FILTER['#1', 'on #2']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_1537", "input": "How shiny cubes are to the right of both cylinders?", "output": "[\"SELECT['cylinders']\", \"PROJECT['cubes to the right of the two of #REF', '#1']\", \"FILTER['#2', 'that are shiny']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_154", "input": "What color is the small sphere next to the smaller cylinder?", "output": "[\"SELECT['small sphere']\", \"SELECT['smaller cylinder']\", \"FILTER['#1', 'next to #2']\", \"PROJECT['color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_1544", "input": "What color is the formost object?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is formost']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_1546", "input": "Are there as many matte balls as there are cubes?", "output": "[\"SELECT['balls']\", \"SELECT['cubes']\", \"FILTER['#1', 'that are matte']\", \"FILTER['#2', 'that are matte']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to #6']\"]"}
{"id": "CLEVR_dev_1548", "input": "How many objects are blue spheres?", "output": "[\"SELECT['spheres']\", \"FILTER['#1', 'that are blue']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_1552", "input": "If there were six red cubes added to this set, would the size of this set be exactly double?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'in this set']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is six']\"]"}
{"id": "CLEVR_dev_1555", "input": "How many objects are blue?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are blue']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_1556", "input": "How many small green balls are there?", "output": "[\"SELECT['balls']\", \"FILTER['#1', 'that are green']\", \"FILTER['#2', 'that are small']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_1558", "input": "What is the shiny purple object?", "output": "[\"SELECT['shiny object']\", \"FILTER['#1', 'that is purple']\"]"}
{"id": "CLEVR_dev_1559", "input": "How many objects are both cyan and metallic?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are cyan']\", \"FILTER['#1', 'that are metallic']\", \"INTERSECTION['#1', '#2', '#3']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "CLEVR_dev_156", "input": "How many green spheres are in the photo?", "output": "[\"SELECT['spheres']\", \"FILTER['#1', 'that are green']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_1561", "input": "Are there more cylinders, squares or small green shiny balls?", "output": "[\"SELECT['cylinders']\", \"SELECT['squares']\", \"SELECT['small green shiny balls']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"COMPARISON['max', '#4', '#5', '#6']\"]"}
{"id": "CLEVR_dev_1562", "input": "Are there more small blocks or balls?", "output": "[\"SELECT['small blocks']\", \"SELECT['balls']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"COMPARISON['max', '#3', '#4']\"]"}
{"id": "CLEVR_dev_1563", "input": "what is the closest object?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is the closest']\"]"}
{"id": "CLEVR_dev_1564", "input": "Are more objects red or blue?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are red']\", \"FILTER['#1', 'that are blue']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"COMPARISON['max', '#4', '#5']\"]"}
{"id": "CLEVR_dev_1565", "input": "How many large shiny boxes are yellow?", "output": "[\"SELECT['shiny boxes']\", \"FILTER['#1', 'that are large']\", \"FILTER['#2', 'that are yellow']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_157", "input": "What material is the big cylinder made of?", "output": "[\"SELECT['the big cylinder']\", \"PROJECT['material that #REF is made of', '#1']\"]"}
{"id": "CLEVR_dev_1570", "input": "What color are the matching objects", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are matching']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_1571", "input": "What shape is the center most object?", "output": "[\"SELECT['object']\", \"FILTER['#1', 'that is center most']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_1574", "input": "is the gray square smaller than the green square?", "output": "[\"SELECT['the green square']\", \"PROJECT['the size of #REF', '#1']\", \"SELECT['the gray square']\", \"PROJECT['the size of #REF', '#3']\", \"BOOLEAN['#4', 'is smaller than #2']\"]"}
{"id": "CLEVR_dev_1578", "input": "What color is the cylinder directly in front of the red cube?", "output": "[\"SELECT['the red cube']\", \"PROJECT['the cylinder directly in front of #REF', '#1']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_1581", "input": "how many spheres are not metallic?", "output": "[\"SELECT['spheres']\", \"FILTER['#1', 'that are not metallic']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_1590", "input": "Is there two or three metallic green balls?", "output": "[\"SELECT['metallic balls']\", \"FILTER['#1', 'that are green']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'equal to two or three']\"]"}
{"id": "CLEVR_dev_1591", "input": "How many spherical objects are there?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are spherical']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_1598", "input": "What is the shape of the rubber object to the left of the blue rubber cylinder? ", "output": "[\"SELECT['rubber object']\", \"SELECT['blue cylinder']\", \"FILTER['#2', 'that is rubber']\", \"FILTER['#1', 'to the left of #3']\", \"PROJECT['shape of #REF', '#4']\"]"}
{"id": "CLEVR_dev_1606", "input": "are the two items closest in color also the same shape?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that are closest in color']\", \"PROJECT['shapes of #REF', '#2']\", \"BOOLEAN['#3', 'both the same']\"]"}
{"id": "CLEVR_dev_1609", "input": "what is the color of the small metallic cube?", "output": "[\"SELECT['small cube']\", \"FILTER['#1', 'that is metallic']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_161", "input": "What color is the object farthest away from the camera?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is farthest away from the camera']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_1610", "input": "Are any of the cubes red?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that are red']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at least one']\"]"}
{"id": "CLEVR_dev_1612", "input": "What color is the only shiney object?", "output": "[\"SELECT['shiney object']\", \"PROJECT['color of #REF', '#1']\"]"}
{"id": "CLEVR_dev_1614", "input": "Is the small ball shiny?", "output": "[\"SELECT['balls']\", \"FILTER['#1', 'that are small']\", \"BOOLEAN['#2', 'is shiny']\"]"}
{"id": "CLEVR_dev_1618", "input": "Are the spheres all comprised of the same material?", "output": "[\"SELECT['the spheres']\", \"PROJECT['the materials that #REF are comprised of', '#1']\", \"BOOLEAN['#2', 'if all #REF are the same']\"]"}
{"id": "CLEVR_dev_1619", "input": "How many objects are in the middle ? ", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are in the middle']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_1622", "input": "Are any cubes small?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that are small']\", \"BOOLEAN['#2', 'are there any #REF']\"]"}
{"id": "CLEVR_dev_1625", "input": "what color is the metallic sphere?", "output": "[\"SELECT['metallic sphere']\", \"PROJECT['color of #REF', '#1']\"]"}
{"id": "CLEVR_dev_163", "input": "Are the objects mainly matte or glossy?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that Are matte']\", \"FILTER['#1', 'that Are glossy']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"COMPARISON['max', '#4', '#5']\"]"}
{"id": "CLEVR_dev_1637", "input": "What color is the block that is located all the way to the right of all of the other shapes?", "output": "[\"SELECT['blocks']\", \"FILTER['#1', 'that are located all the way to the right of all of the other shapes']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_1638", "input": "What is the shape of the metallic object to the right of the matte red object?", "output": "[\"SELECT['metallic object']\", \"SELECT['matte object']\", \"FILTER['#2', 'that is red']\", \"FILTER['#1', 'to the right of #3']\", \"PROJECT['shape of #REF', '#4']\"]"}
{"id": "CLEVR_dev_1640", "input": "How many other objects are made of the same material as the red sphere?", "output": "[\"SELECT['objects']\", \"SELECT['red sphere']\", \"DISCARD['#1', '#2']\", \"PROJECT['material of #REF', '#2']\", \"PROJECT['material of #REF', '#3']\", \"COMPARATIVE['#3', '#5', 'is the same as #4']\", \"AGGREGATE['count', '#6']\"]"}
{"id": "CLEVR_dev_1642", "input": "What color is the sphere that is not metal?", "output": "[\"SELECT['spheres']\", \"FILTER['#1', 'that is not metal']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_1643", "input": "What color is the object to the left of the yellow cylinder?", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'that are yellow']\", \"SELECT['objects']\", \"FILTER['#3', 'to the left of #2']\", \"PROJECT['the color of #REF', '#4']\"]"}
{"id": "CLEVR_dev_1645", "input": "Are any of the balls purple?", "output": "[\"SELECT['balls']\", \"FILTER['#1', 'that are purple']\", \"BOOLEAN['#2', 'are there any #REF']\"]"}
{"id": "CLEVR_dev_1648", "input": "Are all of the purple objects pictured metallic?", "output": "[\"SELECT['purple objects']\", \"FILTER['#1', 'that are metallic']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'the same as #4']\"]"}
{"id": "CLEVR_dev_1649", "input": "How many of the items can roll away?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that can roll away']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_1651", "input": "Is the green ball in front of the yellow plastic ball?", "output": "[\"SELECT['the yellow plastic ball']\", \"PROJECT['balls in front of #REF', '#1']\", \"FILTER['#2', 'that are green']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is one']\"]"}
{"id": "CLEVR_dev_1654", "input": "What is the Shape of the largest shiny object?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are shiny']\", \"PROJECT['the size of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is the largest']\", \"PROJECT['the Shape of #REF', '#4']\"]"}
{"id": "CLEVR_dev_1658", "input": "Most of the objects are blue or cyan; what is the other color represented?", "output": "[\"SELECT['objects']\", \"PROJECT['colors of #REF', '#1']\", \"FILTER['#2', 'blue']\", \"DISCARD['#2', '#3']\", \"FILTER['#4', 'cyan']\", \"DISCARD['#4', '#5']\"]"}
{"id": "CLEVR_dev_1664", "input": "What color is the matte cylinder", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'that are matte']\", \"PROJECT['the color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_1666", "input": "how many spheres are in the picture?", "output": "[\"SELECT['spheres']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_1667", "input": "How many small cylinders are there in the image?", "output": "[\"SELECT['small cylinders']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_1676", "input": "Is the small ball shiny or matte?", "output": "[\"SELECT['small ball']\", \"BOOLEAN['#1', 'is shiny']\", \"BOOLEAN['#1', 'is matte']\", \"COMPARISON['true', '#2', '#3']\"]"}
{"id": "CLEVR_dev_168", "input": "How many other objects are the same color as the sphere in between  the two purple cylinders? ", "output": "[\"SELECT['the purple cylinders']\", \"PROJECT['the sphere that is in between #REF', '#1']\", \"PROJECT['color of #REF', '#2']\", \"SELECT['objects']\", \"DISCARD['#4', '#2']\", \"PROJECT['color of #REF', '#5']\", \"COMPARATIVE['#5', '#6', 'is the same as #3']\", \"AGGREGATE['count', '#7']\"]"}
{"id": "CLEVR_dev_1684", "input": "What color is the smallestt object ?", "output": "[\"SELECT['smallestt object']\", \"PROJECT['color of #REF', '#1']\"]"}
{"id": "CLEVR_dev_1686", "input": "Is there more matte objects or more cubes?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are matte']\", \"FILTER['#1', 'that are cubes']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"COMPARISON['max', '#4', '#5']\"]"}
{"id": "CLEVR_dev_1687", "input": "What shape is the most prominent?", "output": "[\"SELECT['shapes']\", \"FILTER['#1', 'that is the most prominent']\"]"}
{"id": "CLEVR_dev_1688", "input": "What shape is least represented in this image?", "output": "[\"SELECT['shapes']\", \"FILTER['#1', 'in this image']\", \"FILTER['#2', 'that are least represented']\"]"}
{"id": "CLEVR_dev_169", "input": "Are there nine or ten objects shown?", "output": "[\"SELECT['objects shown']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is nine']\", \"BOOLEAN['#2', 'is ten']\", \"UNION['#3', '#4']\"]"}
{"id": "CLEVR_dev_1694", "input": "What color is the item with the biggest circumference, without sides?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'without sides']\", \"PROJECT['circumferences of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is the biggest']\", \"PROJECT['color of #REF', '#4']\"]"}
{"id": "CLEVR_dev_1695", "input": "how many cubes are large and metal?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that are large']\", \"FILTER['#2', 'that are metal']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_17", "input": "What is the color of the ball that is farthest away?", "output": "[\"SELECT['ball']\", \"FILTER['#1', 'that is farthest away']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_170", "input": "how many large spheres are metal?", "output": "[\"SELECT['large spheres']\", \"FILTER['#1', 'that are metal']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_1701", "input": "What material is the cyan cube?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that is cyan']\", \"PROJECT['material of #REF', '#2']\"]"}
{"id": "CLEVR_dev_1713", "input": "What color is the sphere behind the red box?", "output": "[\"SELECT['sphere']\", \"SELECT['red box']\", \"FILTER['#1', 'behind #2']\", \"PROJECT['color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_1714", "input": "Are there more metallic objects than there are matte objects?", "output": "[\"SELECT['metallic objects']\", \"SELECT['matte objects']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'higher than #4']\"]"}
{"id": "CLEVR_dev_1715", "input": "What color are the two shiny objects that are the same color?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are shiny']\", \"PROJECT['colors of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'are the same']\", \"PROJECT['the color of #REF', '#4']\"]"}
{"id": "CLEVR_dev_1717", "input": "What color is shared by two spheres in this image?", "output": "[\"SELECT['colors']\", \"PROJECT['spheres of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is two']\"]"}
{"id": "CLEVR_dev_1720", "input": "Are there more gold or green objects?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are gold']\", \"FILTER['#1', 'that are green']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"COMPARISON['max', '#4', '#5']\"]"}
{"id": "CLEVR_dev_1724", "input": "what color are the large matte cubes?", "output": "[\"SELECT['large cubes']\", \"FILTER['#1', 'that are matte']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_1728", "input": "What color is the small ball?", "output": "[\"SELECT['small ball']\", \"PROJECT['color of #REF', '#1']\"]"}
{"id": "CLEVR_dev_1736", "input": "What color is the object to the left of 3 other objects?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are to the left of 3 other objects']\", \"PROJECT['the color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_1737", "input": "how many different shapes arr present?", "output": "[\"SELECT['shapes']\", \"PROJECT['different #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_174", "input": "are the brown blocks the same color", "output": "[\"SELECT['brown blocks']\", \"PROJECT['colors of #REF', '#1']\", \"BOOLEAN['#2', 'the same']\"]"}
{"id": "CLEVR_dev_1741", "input": "What color are the rubber things?", "output": "[\"SELECT['things']\", \"FILTER['#1', 'that are rubber']\", \"PROJECT['the color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_1742", "input": "What color is the small shiny sphere?", "output": "[\"SELECT['small sphere']\", \"FILTER['#1', 'that is shiny']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_1743", "input": "is the blue ball metallic?", "output": "[\"SELECT['balls']\", \"FILTER['#1', 'that is blue']\", \"BOOLEAN['#2', 'metallic']\"]"}
{"id": "CLEVR_dev_1748", "input": "are there more metallic cylinders than rubber objects?", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'that are metallic']\", \"AGGREGATE['count', '#2']\", \"SELECT['objects']\", \"FILTER['#4', 'that are rubber']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#3', 'higher than #6']\"]"}
{"id": "CLEVR_dev_1753", "input": "Where is a light casted on ?", "output": "[\"SELECT['a light']\", \"PROJECT['where #REF is casted on', '#1']\"]"}
{"id": "CLEVR_dev_1755", "input": "What shape is the uniquely colored object?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are uniquely colored']\", \"PROJECT['the shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_1756", "input": "Are all of the purple objects metallic or matte?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are purple']\", \"BOOLEAN['#2', 'if all #REF are metallic']\", \"BOOLEAN['#2', 'if all #REF are matte']\", \"UNION['#3', '#4']\"]"}
{"id": "CLEVR_dev_1759", "input": "is the gray cube the same material as the gray sphere?", "output": "[\"SELECT['gray cube']\", \"SELECT['gray sphere']\", \"PROJECT['material of #REF', '#1']\", \"PROJECT['material of #REF', '#2']\", \"BOOLEAN['#3', 'the same as #4']\"]"}
{"id": "CLEVR_dev_1762", "input": "Can you find 2 blue objects that are orange?", "output": "[\"SELECT['blue objects']\", \"FILTER['#1', 'that are orange']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'equal to 2']\"]"}
{"id": "CLEVR_dev_1765", "input": "How many sets of pairs can be sorted by color?", "output": "[\"SELECT['sets of pairs']\", \"SORT['#1 that can be', 'color']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_1770", "input": "What shape of objects appear to be touching each other", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that appear to be touching each other']\", \"PROJECT['the shapes of #REF', '#2']\"]"}
{"id": "CLEVR_dev_1774", "input": "Is there a small object that is to the right of the small yellow cube and in front of the large brown sphere?", "output": "[\"SELECT['the small yellow cube']\", \"SELECT['the large brown sphere']\", \"SELECT['objects']\", \"FILTER['#3', 'that are small']\", \"FILTER['#4', 'that are to the right of #1']\", \"FILTER['#5', 'that are in front of #2']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is at least one']\"]"}
{"id": "CLEVR_dev_1776", "input": "Is the cylinder in front shiny?", "output": "[\"SELECT['cylinder']\", \"FILTER['#1', 'that is in the front']\", \"BOOLEAN['#2', 'is shiny']\"]"}
{"id": "CLEVR_dev_1782", "input": "How many of the items are not large?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that are large']\", \"DISCARD['#1', '#2']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_1783", "input": "All of the objects have something in common; what is it?", "output": "[\"SELECT['the objects']\", \"PROJECT['what #REF have in common', '#1']\"]"}
{"id": "CLEVR_dev_1785", "input": "There are two giant cylinders, which color cylinder is in front?", "output": "[\"SELECT['giant cylinders']\", \"FILTER['#1', 'that is in front']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_1787", "input": "Is the color of the object that is closest to the front red?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is closest to the front']\", \"PROJECT['color of #REF', '#2']\", \"BOOLEAN['#3', 'equal to red']\"]"}
{"id": "CLEVR_dev_179", "input": "Are all the object boxes?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are boxes']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'the same as #4']\"]"}
{"id": "CLEVR_dev_1790", "input": "What is shape is the red object to the right of the yellow ball?", "output": "[\"SELECT['red object']\", \"SELECT['yellow ball']\", \"FILTER['#1', 'to the right of #2']\", \"PROJECT['shape of #REF', '#3']\"]"}
{"id": "CLEVR_dev_18", "input": "How many circle objects are in the picture?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are circles']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_1802", "input": "How many sides does the largest item have?.", "output": "[\"SELECT['objects']\", \"PROJECT['size of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is the highest']\", \"PROJECT['sides of #REF', '#3']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "CLEVR_dev_1811", "input": "How many shiney green items do you see?", "output": "[\"SELECT['shiney green items']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_1815", "input": "What is the shape of the green object?", "output": "[\"SELECT['green object']\", \"PROJECT['shape of #REF', '#1']\"]"}
{"id": "CLEVR_dev_1816", "input": "what is the large purple thing?", "output": "[\"SELECT['things']\", \"FILTER['#1', 'that are large']\", \"FILTER['#2', 'that are purple']\"]"}
{"id": "CLEVR_dev_1824", "input": "Are all of the small spheres brown?", "output": "[\"SELECT['small spheres']\", \"FILTER['#1', 'that are brown']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'the same as #4']\"]"}
{"id": "CLEVR_dev_1829", "input": "What color is the object blocking the brown cube?", "output": "[\"SELECT['brown cube']\", \"PROJECT['object blocking #REF', '#1']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_1830", "input": "Are the two red cylinders made of the same material?", "output": "[\"SELECT['red cylinders']\", \"PROJECT['material of #REF', '#1']\", \"PROJECT['distinct #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to one']\"]"}
{"id": "CLEVR_dev_1833", "input": "Is there a cube that is the same color as the large cylinder?", "output": "[\"SELECT['cubes']\", \"SELECT['large cylinder']\", \"PROJECT['color of #REF', '#1']\", \"PROJECT['color of #REF', '#2']\", \"COMPARATIVE['#1', '#3', 'is the same as #4']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is higher than zero']\"]"}
{"id": "CLEVR_dev_1839", "input": "What color is the sphere closest to the touching cubes?", "output": "[\"SELECT['sphere']\", \"SELECT['cubes']\", \"FILTER['#2', 'that are touching']\", \"FILTER['#1', 'closest to #3']\", \"PROJECT['color of #REF', '#4']\"]"}
{"id": "CLEVR_dev_184", "input": "Are there as many light blue objects as green objects?", "output": "[\"SELECT['light blue objects']\", \"SELECT['green objects']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'the same as #4']\"]"}
{"id": "CLEVR_dev_1848", "input": "of the blue spheres, how many are larger then the smallestt red item?", "output": "[\"SELECT['blue spheres']\", \"SELECT['red item']\", \"PROJECT['the size of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is the lowest']\", \"PROJECT['the size of #REF', '#1']\", \"COMPARATIVE['#1', '#5', 'is larger than #4']\", \"AGGREGATE['count', '#6']\"]"}
{"id": "CLEVR_dev_1852", "input": "Is there a silver sphere? ", "output": "[\"SELECT['sphere']\", \"FILTER['#1', 'that are silver']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at least one']\"]"}
{"id": "CLEVR_dev_1853", "input": "Is the yellow sphere the same material as the blue cylinder?", "output": "[\"SELECT['the yellow sphere']\", \"SELECT['the blue cylinder']\", \"PROJECT['the material of #REF', '#1']\", \"PROJECT['the material of #REF', '#2']\", \"BOOLEAN['#3', 'is the same as #4']\"]"}
{"id": "CLEVR_dev_1856", "input": "What shape is the cyan object?", "output": "[\"SELECT['cyan object']\", \"PROJECT['shape of #REF', '#1']\"]"}
{"id": "CLEVR_dev_1859", "input": "Are there more blue objects than brown objects?", "output": "[\"SELECT['blue objects']\", \"SELECT['brown objects']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'higher than #4']\"]"}
{"id": "CLEVR_dev_1861", "input": "Is the red item the same shape as any other item?", "output": "[\"SELECT['red item']\", \"SELECT['items']\", \"DISCARD['#2', '#1']\", \"PROJECT['shape of #REF', '#1']\", \"PROJECT['shapes of #REF', '#3']\", \"COMPARATIVE['#1', '#4', 'is the same as #5']\", \"BOOLEAN['#6', 'is there any #REF']\"]"}
{"id": "CLEVR_dev_1863", "input": "What shape is the yellow object to the right of the purple cylinder?", "output": "[\"SELECT['yellow object']\", \"SELECT['purple cylinder']\", \"FILTER['#1', 'to the right of #2']\", \"PROJECT['shape of #REF', '#3']\"]"}
{"id": "CLEVR_dev_1865", "input": "What shape object isn't the same as the other two?", "output": "[\"SELECT['objects']\", \"PROJECT['shapes of #REF', '#1']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is equal to one']\"]"}
{"id": "CLEVR_dev_187", "input": "Which other shape is the same color and material as the large cube?", "output": "[\"SELECT['the large cube']\", \"PROJECT['the color of #REF', '#1']\", \"PROJECT['the material of #REF', '#1']\", \"SELECT['shapes']\", \"DISCARD['#4', '#1']\", \"PROJECT['the colors of #REF', '#5']\", \"PROJECT['the materials of #REF', '#5']\", \"COMPARATIVE['#5', '#6', 'is the same as #2']\", \"COMPARATIVE['#5', '#7', 'is the same as #3']\", \"INTERSECTION['#5', '#8', '#9']\"]"}
{"id": "CLEVR_dev_1878", "input": "are all objects the same color?", "output": "[\"SELECT['objects']\", \"PROJECT['colors of #REF', '#1']\", \"BOOLEAN['#2', 'if all the #REF are the same']\"]"}
{"id": "CLEVR_dev_1881", "input": "What color is hiding behind a large sliver cube?", "output": "[\"SELECT['color']\", \"SELECT['large cube']\", \"FILTER['#2', 'that is sliver']\", \"FILTER['#1', 'hiding behind #3']\"]"}
{"id": "CLEVR_dev_1887", "input": "How many shapes are being partially obstructed by the blue cube?", "output": "[\"SELECT['shapes']\", \"SELECT['blue cube']\", \"FILTER['#1', 'partially obstructed by #2']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_1893", "input": "Is the blue sphere the same size as the brown sphere?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are sphere']\", \"FILTER['#2', 'that are blue']\", \"FILTER['#2', 'that are brown']\", \"PROJECT['size of #REF', '#3']\", \"PROJECT['size of #REF', '#4']\", \"BOOLEAN['#5', 'same as #6']\"]"}
{"id": "CLEVR_dev_1894", "input": "Are there any yellow objects that are matte and cubed?", "output": "[\"SELECT['yellow objects']\", \"FILTER['#1', 'that are matte']\", \"FILTER['#1', 'that are cubed']\", \"INTERSECTION['#1', '#2', '#3']\", \"BOOLEAN['#4', 'are there any #REF']\"]"}
{"id": "CLEVR_dev_1899", "input": "what color are all of the large spheres?", "output": "[\"SELECT['spheres']\", \"FILTER['#1', 'that are large']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_19", "input": "There is a red cylinder that is next to the cyan cube and behind the purple cube, is made of the same material as the purple cube?", "output": "[\"SELECT['the purple cube']\", \"SELECT['the cyan cube']\", \"SELECT['cylinders']\", \"FILTER['#3', 'that are red']\", \"FILTER['#4', 'that are next to #2']\", \"FILTER['#5', 'that are behind #1']\", \"PROJECT['the material of #REF', '#1']\", \"PROJECT['the material of #REF', '#6']\", \"BOOLEAN['#7', 'and #8 are the same']\"]"}
{"id": "CLEVR_dev_1900", "input": "Is the sphere the same color as the object that is obscuring it?", "output": "[\"SELECT['the sphere']\", \"PROJECT['the color of #REF', '#1']\", \"SELECT['objects']\", \"FILTER['#3', 'that are obscuring #1']\", \"PROJECT['the color of #REF', '#4']\", \"BOOLEAN['#2', 'and #5 are the same']\"]"}
{"id": "CLEVR_dev_1901", "input": "which shiny color is represented the most times", "output": "[\"SELECT['colors']\", \"FILTER['#1', 'that is shiny']\", \"FILTER['#2', 'that is represented the most times']\"]"}
{"id": "CLEVR_dev_1903", "input": "What color is the object that does not have a matching shape?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that does not have a matching shape']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_1906", "input": "What shape is the only gray item?", "output": "[\"SELECT['gray item']\", \"PROJECT['shape of #REF', '#1']\"]"}
{"id": "CLEVR_dev_1910", "input": "What shape is the object furthest to the right?", "output": "[\"SELECT['object']\", \"FILTER['#1', 'furthest to the right']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_1911", "input": "Are all of the large objects spheres?", "output": "[\"SELECT['large objects']\", \"FILTER['#1', 'that are spheres']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'the same as #4']\"]"}
{"id": "CLEVR_dev_1917", "input": "what object is hardly seen in the front?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is hardly seen']\", \"FILTER['#2', 'that is in the front']\"]"}
{"id": "CLEVR_dev_1918", "input": "How pairs of objects are the same size and material?", "output": "[\"SELECT['objects']\", \"PROJECT['size', '#1']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#1', '#3', 'at least two']\", \"PROJECT['material', '#4']\", \"GROUP['count', '#4', '#5']\", \"COMPARATIVE['#1', '#6', 'at least two']\", \"AGGREGATE['count', '#7']\", \"PROJECT['division of #REF and two', '#8']\"]"}
{"id": "CLEVR_dev_1919", "input": "How many spheres are not purple?", "output": "[\"SELECT['spheres']\", \"FILTER['#1', 'that are purple']\", \"DISCARD['#1', '#2']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_1921", "input": "what shape is touching the sphere?", "output": "[\"SELECT['shapes']\", \"FILTER['#1', 'that is sphere']\", \"FILTER['#1', 'that is touching #2']\"]"}
{"id": "CLEVR_dev_1923", "input": "Are any of the cubes matte?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that are matte']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is higher than zero']\"]"}
{"id": "CLEVR_dev_1925", "input": "What is the shape of the item that isn't made from the same material as the other items?", "output": "[\"SELECT['items']\", \"PROJECT['materials of #REF', '#1']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is one']\", \"COMPARATIVE['#1', '#2', 'is #4']\", \"PROJECT['the shape of #REF', '#5']\"]"}
{"id": "CLEVR_dev_1927", "input": "what is the blue shiny thing?", "output": "[\"SELECT['blue thing']\", \"FILTER['#1', 'that is shiny']\"]"}
{"id": "CLEVR_dev_1929", "input": "what color is the cylinder? ", "output": "[\"SELECT['the cylinder']\", \"PROJECT['the color of #REF', '#1']\"]"}
{"id": "CLEVR_dev_1931", "input": "Are all of the spheres yellow rubber?", "output": "[\"SELECT['spheres']\", \"BOOLEAN['#1', 'if all #REF are yellow rubber']\"]"}
{"id": "CLEVR_dev_1935", "input": "Are the two red objects both shiny cubes?", "output": "[\"SELECT['red objects']\", \"SELECT['shiny cubes']\", \"BOOLEAN['#1', 'the same as #2']\"]"}
{"id": "CLEVR_dev_1940", "input": "Are there any yellow cubes?", "output": "[\"SELECT['yellow cubes']\", \"BOOLEAN['#1', 'are there any #REF']\"]"}
{"id": "CLEVR_dev_1943", "input": "What color in the large matte cube?", "output": "[\"SELECT['matte cube']\", \"FILTER['#1', 'that is large']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_1944", "input": "Are the two large cubes both shiny?", "output": "[\"SELECT['cubes']\", \"PROJECT['two #REF that are large', '#1']\", \"FILTER['#2', 'that are shiny']\", \"DISCARD['#2', '#3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'equal to zero']\"]"}
{"id": "CLEVR_dev_195", "input": "Does the leftmost item share a shape with any other item?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that are the leftmost']\", \"DISCARD['#1', '#2']\", \"PROJECT['shape of #REF', '#2']\", \"PROJECT['shapes of #REF', '#3']\", \"COMPARATIVE['#3', '#5', 'is the same as #4']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is at least one']\"]"}
{"id": "CLEVR_dev_1955", "input": "How many cylinders to the right of the gray metallic thing are matte?", "output": "[\"SELECT['the gray metallic thing']\", \"SELECT['cylinders']\", \"FILTER['#2', 'that are to the right of #1']\", \"FILTER['#3', 'that are matte']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "CLEVR_dev_1956", "input": "Are there more red rubber objects than green objects?", "output": "[\"SELECT['red objects']\", \"FILTER['#1', 'that are rubber']\", \"SELECT['green objects']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'higher than #5']\"]"}
{"id": "CLEVR_dev_196", "input": "What color has objects that only differ in size?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that only differ in size']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_1963", "input": "how many objects are in between the purple cylinder and cyan cube?", "output": "[\"SELECT['the purple cylinder']\", \"SELECT['the cyan cube']\", \"SELECT['objects in between']\", \"INTERSECTION['#3', '#1', '#2']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "CLEVR_dev_1967", "input": "Are there more cubes or metallic objects?", "output": "[\"SELECT['cubes']\", \"SELECT['metallic objects']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"COMPARISON['max', '#3', '#4']\"]"}
{"id": "CLEVR_dev_1971", "input": "what is the object on the left made out of? ", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'on the left']\", \"PROJECT['what #REF is made out of', '#2']\"]"}
{"id": "CLEVR_dev_1976", "input": "What shape is behind the red sphere?", "output": "[\"SELECT['red sphere']\", \"PROJECT['shape behind #REF', '#1']\"]"}
{"id": "CLEVR_dev_1977", "input": "Are there any shiny cylinders?", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'that are shiny']\", \"BOOLEAN['#2', 'if there are any #REF']\"]"}
{"id": "CLEVR_dev_1978", "input": "Is there any matte purple spheres?", "output": "[\"SELECT['matte spheres']\", \"FILTER['#1', 'that are purple']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is higher than zero']\"]"}
{"id": "CLEVR_dev_1980", "input": "What color is the sphere that doesn't match the others?", "output": "[\"SELECT['sphere']\", \"FILTER['#1', 'that does not match the others']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_1981", "input": "What object is on the left most side of the image?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'in the image']\", \"FILTER['#2', 'on the left most side']\"]"}
{"id": "CLEVR_dev_1985", "input": "Are there any cubes visible?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that are visible']\", \"BOOLEAN['#2', 'are there any #REF']\"]"}
{"id": "CLEVR_dev_1986", "input": "Are there any matte things behind the red thing?", "output": "[\"SELECT['matte things']\", \"SELECT['red thing']\", \"FILTER['#1', 'behind #2']\", \"BOOLEAN['#3', 'are there any #REF']\"]"}
{"id": "CLEVR_dev_1988", "input": "What is the total amount of cylinders and spheres?", "output": "[\"SELECT['cylinders']\", \"SELECT['spheres']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"ARITHMETIC['sum', '#3', '#4']\"]"}
{"id": "CLEVR_dev_1994", "input": "What color is the ball behind the shiny blue block?", "output": "[\"SELECT['blocks']\", \"FILTER['#1', 'that is shiny']\", \"FILTER['#2', 'that is blue']\", \"SELECT['balls']\", \"FILTER['#4', 'that is behind #3']\", \"PROJECT['the color of #REF', '#5']\"]"}
{"id": "CLEVR_dev_1996", "input": "What shape is beind the yellow cylinder?", "output": "[\"SELECT['objects']\", \"SELECT['yellow cylinder']\", \"FILTER['#1', 'beind #2']\", \"PROJECT['shape of #REF', '#3']\"]"}
{"id": "CLEVR_dev_1998", "input": "what is the shape in back?", "output": "[\"SELECT['shapes']\", \"FILTER['#1', 'that is in the back']\"]"}
{"id": "CLEVR_dev_2", "input": "What color is the cube that is matte?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that is matte']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_2001", "input": "Is the gold item the same material as the green one?", "output": "[\"SELECT['gold item']\", \"SELECT['green item']\", \"PROJECT['material of #REF', '#1']\", \"PROJECT['material of #REF', '#2']\", \"BOOLEAN['#3', 'the same as #4']\"]"}
{"id": "CLEVR_dev_201", "input": "What color is the object near the green cube?", "output": "[\"SELECT['objects']\", \"SELECT['green cube']\", \"FILTER['#1', 'near #2']\", \"PROJECT['color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_2015", "input": "How many balls are the same color as the small cylinder?", "output": "[\"SELECT['balls']\", \"SELECT['small cylinder']\", \"PROJECT['colors of #REF', '#1']\", \"PROJECT['color of #REF', '#2']\", \"COMPARATIVE['#1', '#3', 'is the same as #4']\", \"AGGREGATE['count', '#5']\"]"}
{"id": "CLEVR_dev_2017", "input": "How many shiny gold objects are there?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are gold']\", \"FILTER['#2', 'that are shiny']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_2019", "input": "Which of the two purple shapes is behind the metallic cube?", "output": "[\"SELECT['metallic cube']\", \"PROJECT['purple shape behind #REF', '#1']\"]"}
{"id": "CLEVR_dev_202", "input": "How many different colors are in the photo?", "output": "[\"SELECT['photo']\", \"PROJECT['colors in #REF', '#1']\", \"PROJECT['different #REF', '#2']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_2020", "input": "Are the large cubes the same color?", "output": "[\"SELECT['large cubes']\", \"PROJECT['colors of #REF', '#1']\", \"BOOLEAN['#2', 'the same']\"]"}
{"id": "CLEVR_dev_2021", "input": "Are there a cube and a sphere that are the same color?", "output": "[\"SELECT['cubes']\", \"PROJECT['colors of #REF', '#1']\", \"SELECT['spheres']\", \"PROJECT['colors of #REF', '#3']\", \"BOOLEAN['if_exist', '#2', 'are the same as any #4']\"]"}
{"id": "CLEVR_dev_2026", "input": "How many green spheres or yellow cylinders are there?", "output": "[\"SELECT['green spheres']\", \"SELECT['yellow cylinders']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"UNION['#3', '#4']\"]"}
{"id": "CLEVR_dev_203", "input": "What color is the thing directly to the left of the yellow thing?", "output": "[\"SELECT['yellow thing']\", \"PROJECT['thing directly left of #REF', '#1']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_2030", "input": "How many objects are behind the purple sphere?", "output": "[\"SELECT['objects']\", \"SELECT['purple sphere']\", \"FILTER['#1', 'behind #2']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_2032", "input": "Is the material of the large sphere the same material as the object to the right of the cyan cube? ", "output": "[\"SELECT['large sphere']\", \"SELECT['object']\", \"SELECT['cyan cube']\", \"FILTER['#2', 'to the right of #3']\", \"PROJECT['material of #REF', '#1']\", \"PROJECT['material of #REF', '#4']\", \"BOOLEAN['#5', 'the same as #6']\"]"}
{"id": "CLEVR_dev_2037", "input": "Are all the big cubes shiny?", "output": "[\"SELECT['big cubes']\", \"FILTER['#1', 'that are shiny']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'the same as #4']\"]"}
{"id": "CLEVR_dev_2039", "input": "What color is the block in the very back?", "output": "[\"SELECT['block']\", \"FILTER['#1', 'in the very back']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_2048", "input": "What color are the three left most objects?", "output": "[\"SELECT['objects']\", \"PROJECT['three #REF that are left most', '#1']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_205", "input": "what is the shape of the matte item that is located in the center of the three items situated in a straight line?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that are situated in a straight line']\", \"PROJECT['matte item in the center of #REF', '#2']\", \"PROJECT['shape of #REF', '#3']\"]"}
{"id": "CLEVR_dev_2053", "input": "How many more cubes are there than matte objects?", "output": "[\"SELECT['cubes']\", \"SELECT['matte objects']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "CLEVR_dev_2058", "input": "Are both red items a cube?", "output": "[\"SELECT['red items']\", \"FILTER['#1', 'that are cubes']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'the same as #4']\"]"}
{"id": "CLEVR_dev_2059", "input": "Is the green sphere metallic or matte?", "output": "[\"SELECT['sphere']\", \"BOOLEAN['#1', 'is metallic or matte']\"]"}
{"id": "CLEVR_dev_2061", "input": "How many brown objects are present?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are brown']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_2065", "input": "Is one large cube darker than the other?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that are large']\", \"BOOLEAN['#2', 'if one #REF is darker than the other']\"]"}
{"id": "CLEVR_dev_2068", "input": "What is the color of the metallic cylinder in the middle?", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'that are in the middle']\", \"FILTER['#2', 'that are metallic']\", \"PROJECT['color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_207", "input": "What item is hiding behind brown sphere?", "output": "[\"SELECT['sphere']\", \"FILTER['#1', 'that is brown']\", \"SELECT['objects']\", \"FILTER['#3', 'that is behind #2']\"]"}
{"id": "CLEVR_dev_2070", "input": "Which color has the fewest number of objects?", "output": "[\"SELECT['colors']\", \"PROJECT['objects of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"SUPERLATIVE['min', '#1', '#3']\"]"}
{"id": "CLEVR_dev_2076", "input": "Is there a sphere present? ", "output": "[\"SELECT['sphere']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is higher than zero']\"]"}
{"id": "CLEVR_dev_2078", "input": "How many different shapes do you see?", "output": "[\"SELECT['shapes']\", \"FILTER['#1', 'that are different']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_2080", "input": "How many cyan objects?", "output": "[\"SELECT['cyan objects']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_2082", "input": "How many red items are shown here?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that are shown here']\", \"FILTER['#2', 'that are red']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_2084", "input": "What color do the most objects have in common?", "output": "[\"SELECT['colors']\", \"PROJECT['objects of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"SUPERLATIVE['max', '#1', '#3']\"]"}
{"id": "CLEVR_dev_2087", "input": "How many metal items are in the picture?", "output": "[\"SELECT['picture']\", \"PROJECT['metal items in #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_2090", "input": "Are there any objects that are metallic and yellow?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are metallic']\", \"FILTER['#2', 'that are yellow']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least one']\"]"}
{"id": "CLEVR_dev_2091", "input": "how many cubes are gold?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that are gold']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_2096", "input": "How many things are smaller than the metallic purple cylinder?", "output": "[\"SELECT['the metallic purple cylinder']\", \"PROJECT['the size of #REF', '#1']\", \"SELECT['objects']\", \"PROJECT['size of #REF', '#3']\", \"COMPARATIVE['#3', '#4', 'is smaller than #2']\", \"AGGREGATE['count', '#5']\"]"}
{"id": "CLEVR_dev_21", "input": "Is there a shiny cube?", "output": "[\"SELECT['cube']\", \"FILTER['#1', 'that is shiny']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'more than zero']\"]"}
{"id": "CLEVR_dev_2103", "input": "Is there a blue cube that is the same size as a gray cube?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that are gray']\", \"FILTER['#1', 'that are blue']\", \"PROJECT['sizes of #REF', '#2']\", \"PROJECT['sizes of #REF', '#3']\", \"COMPARATIVE['#3', '#5', 'is the same as any of #4']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is at least one']\"]"}
{"id": "CLEVR_dev_2105", "input": "What is the shape of the object that is gray and matte?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is gray']\", \"FILTER['#2', 'that is matte']\", \"PROJECT['shape of #REF', '#3']\"]"}
{"id": "CLEVR_dev_2110", "input": "how many blue cylinders are there", "output": "[\"SELECT['blue cylinders']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_2111", "input": "Are there any equal number of objects to the left and right of the tan cylinder?", "output": "[\"SELECT['objects']\", \"SELECT['tan cylinder']\", \"FILTER['#1', 'to the left of #2']\", \"FILTER['#1', 'to the right of #2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#5', 'the same as #6']\"]"}
{"id": "CLEVR_dev_2116", "input": "What is the color of the items that are the same color and closest together?", "output": "[\"SELECT['items']\", \"PROJECT['colors of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'are the same']\", \"FILTER['#3', 'that are the closest together']\", \"PROJECT['the color of #REF', '#4']\"]"}
{"id": "CLEVR_dev_2118", "input": "What shape is the most common in this group of objects?", "output": "[\"SELECT['shapes']\", \"FILTER['#1', 'in this group of objects']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#2', '#3', 'is the highest']\"]"}
{"id": "CLEVR_dev_2123", "input": "What is the shape of the object partly hidden behind the big green sphere?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is big']\", \"FILTER['#2', 'that is green']\", \"FILTER['#3', 'that is sphere']\", \"FILTER['#1', 'that is partly hidden behind #4']\", \"PROJECT['shape of #REF', '#5']\"]"}
{"id": "CLEVR_dev_2125", "input": "What shape is the object to the right of the large object?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are large']\", \"FILTER['#1', 'that are to the right of #2']\", \"PROJECT['shape of #REF', '#3']\"]"}
{"id": "CLEVR_dev_213", "input": "How many gray objects are shown?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are gray']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_2131", "input": "what material is the object in the front middle made out of?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'in the front middle']\", \"PROJECT['the material that #REF is made out of', '#2']\"]"}
{"id": "CLEVR_dev_2135", "input": "Which shape is not like the others?", "output": "[\"SELECT['objects']\", \"PROJECT['shapes of #REF', '#1']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is equal to one']\"]"}
{"id": "CLEVR_dev_2141", "input": "Are the shiny small spheres the same color?", "output": "[\"SELECT['small spheres']\", \"FILTER['#1', 'that are shiny']\", \"PROJECT['colors of #REF', '#2']\", \"BOOLEAN['#3', 'the same']\"]"}
{"id": "CLEVR_dev_2143", "input": "Are the large objects all green?", "output": "[\"SELECT['large objects']\", \"FILTER['#1', 'that are green']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'the same as #4']\"]"}
{"id": "CLEVR_dev_2144", "input": "Are all the objects squares?", "output": "[\"SELECT['all the objects']\", \"BOOLEAN['#1', 'squares']\"]"}
{"id": "CLEVR_dev_2150", "input": "How many colors are duplicated among the cylinders and spheres?", "output": "[\"SELECT['cylinders']\", \"PROJECT['colors of #REF', '#1']\", \"SELECT['spheres']\", \"PROJECT['colors of #REF', '#3']\", \"SELECT['colors']\", \"INTERSECTION['#5', '#2', '#4']\", \"AGGREGATE['count', '#6']\"]"}
{"id": "CLEVR_dev_2153", "input": "Is the shiny sphere behind the gray sphere blue?", "output": "[\"SELECT['the gray sphere']\", \"SELECT['the shiny sphere']\", \"FILTER['#2', 'that is behind #1']\", \"BOOLEAN['#3', 'is blue']\"]"}
{"id": "CLEVR_dev_2154", "input": "How many matte objects are red cylinders and large blue objects?", "output": "[\"SELECT['matte objects']\", \"FILTER['#1', 'that are red cylinders']\", \"FILTER['#1', 'that are large blue objects']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"ARITHMETIC['sum', '#4', '#5']\"]"}
{"id": "CLEVR_dev_2157", "input": "What color is the small object behind the red matte object?", "output": "[\"SELECT['small object']\", \"SELECT['red object']\", \"FILTER['#2', 'that is matte']\", \"FILTER['#1', 'behind #3']\", \"PROJECT['color of #REF', '#4']\"]"}
{"id": "CLEVR_dev_216", "input": "What is the only shape that is not a sphere?", "output": "[\"SELECT['shapes']\", \"FILTER['#1', 'that are a sphere']\", \"PROJECT['the only #REF', '#1']\", \"DISCARD['#3', '#2']\"]"}
{"id": "CLEVR_dev_2169", "input": "Is there a gold sphere?", "output": "[\"SELECT['sphere']\", \"FILTER['#1', 'that is gold']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'higher than zero']\"]"}
{"id": "CLEVR_dev_217", "input": "What shape are the brown Matte objects ?", "output": "[\"SELECT['brown objects']\", \"FILTER['#1', 'that are Matte']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_2177", "input": "How many more matte objects are there than cubes?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are matte']\", \"SELECT['cubes']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"ARITHMETIC['difference', '#4', '#5']\"]"}
{"id": "CLEVR_dev_2178", "input": "Are any cubes partially hidden?", "output": "[\"SELECT['cubes']\", \"BOOLEAN['#1', 'if any #REF are partially hidden']\"]"}
{"id": "CLEVR_dev_2182", "input": "what color is the ball in the middle?", "output": "[\"SELECT['ball']\", \"FILTER['#1', 'that is in the middle']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_2183", "input": "What is the color of the shape in the middle of the three cylinders?", "output": "[\"SELECT['shapes']\", \"SELECT['cylinders']\", \"FILTER['#1', 'in the middle of three #2']\", \"PROJECT['color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_2187", "input": "what shape is the only gold object?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are gold']\", \"PROJECT['the shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_2194", "input": "What color is the item to the far left?", "output": "[\"SELECT['item']\", \"FILTER['#1', 'to the far left']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_2195", "input": "how  many big cylinders are there?", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'that are big']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_2196", "input": "What is the shape of the object behind the green cube?", "output": "[\"SELECT['green cube']\", \"PROJECT['object behind #REF', '#1']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_2197", "input": "How many yellow objects are to the right of the cyan cylinder?", "output": "[\"SELECT['yellow objects']\", \"SELECT['cyan cylinder']\", \"FILTER['#1', 'to the right of #2']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_2198", "input": "how many yellow objects are there?", "output": "[\"SELECT['yellow objects']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_2201", "input": "what color is the cube in the front? ", "output": "[\"SELECT['cube']\", \"FILTER['#1', 'that is in front']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_2202", "input": "how many light blue cylinders are there?", "output": "[\"SELECT['light blue cylinders']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_2209", "input": "what color is the big cylinder?", "output": "[\"SELECT['big cylinder']\", \"PROJECT['color of #REF', '#1']\"]"}
{"id": "CLEVR_dev_2210", "input": "What is the color of the sphere that is not red?", "output": "[\"SELECT['spheres']\", \"PROJECT['colors of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is red']\", \"DISCARD['#1', '#3']\", \"PROJECT['color of #REF', '#4']\"]"}
{"id": "CLEVR_dev_2211", "input": "Are there more blue objects than gray objects?", "output": "[\"SELECT['blue objects']\", \"SELECT['gray objects']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is higher than #4']\"]"}
{"id": "CLEVR_dev_2213", "input": "What is the color of the object between the two cylinders?", "output": "[\"SELECT['objects']\", \"SELECT['cylinders']\", \"FILTER['#1', 'between #2']\", \"PROJECT['color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_2218", "input": "Are there any objects between the small yellow thing and the metallic blue thing?", "output": "[\"SELECT['objects']\", \"SELECT['small thing']\", \"FILTER['#2', 'that is yellow']\", \"SELECT['metallic thing']\", \"FILTER['#4', 'that is blue']\", \"FILTER['#1', 'betweenleftside #3']\", \"FILTER['#6', 'betweenrightside #5']\", \"BOOLEAN['#7', 'are there any #REF']\"]"}
{"id": "CLEVR_dev_2222", "input": "How many gray cubes are there?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that are gray']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_2223", "input": "is there a shiny object that is in front of a teal sphere?", "output": "[\"SELECT['teal sphere']\", \"PROJECT['shiny object in front of #REF', '#1']\", \"BOOLEAN['#2', 'is there any #REF']\"]"}
{"id": "CLEVR_dev_2224", "input": "are there any objects that have only straight sides", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that have only straight sides']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at least one']\"]"}
{"id": "CLEVR_dev_2231", "input": "how many cubes are the same color as the leftmost item that is not purple?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that is leftmost']\", \"FILTER['#2', 'purple items']\", \"DISCARD['#2', '#3']\", \"SELECT['cubes']\", \"PROJECT['color of #REF', '#4']\", \"PROJECT['colors of #REF', '#5']\", \"COMPARATIVE['#5', '#6', 'is the same as #7']\", \"AGGREGATE['count', '#8']\"]"}
{"id": "CLEVR_dev_2234", "input": "How many matte green objects are there?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are matte']\", \"FILTER['#2', 'that are green']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_2235", "input": "Are the large cylinders all the same material?", "output": "[\"SELECT['large cylinders']\", \"PROJECT['material of #REF', '#1']\", \"BOOLEAN['#2', 'all the same']\"]"}
{"id": "CLEVR_dev_224", "input": "How many objects are either yellow or shiny? ", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are yellow']\", \"FILTER['#1', 'that are shiny']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"ARITHMETIC['sum', '#4', '#5']\"]"}
{"id": "CLEVR_dev_2254", "input": "What color is the metallic object closest to the front?", "output": "[\"SELECT['metallic objects']\", \"FILTER['#1', 'that is closest to the front']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_2268", "input": "Are all of the cubes shiny and large?", "output": "[\"SELECT['cubes']\", \"BOOLEAN['#1', 'if all #REF are shiny']\", \"BOOLEAN['#1', 'if all #REF are large']\", \"UNION['#2', '#3']\"]"}
{"id": "CLEVR_dev_2272", "input": "What color is the shiny block?", "output": "[\"SELECT['shiny block']\", \"PROJECT['color of #REF', '#1']\"]"}
{"id": "CLEVR_dev_2275", "input": "Are both of the large objects cylinders?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are large']\", \"AGGREGATE['count', '#2']\", \"FILTER['#2', 'that are cylinders']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#3', 'and #5 are equal']\"]"}
{"id": "CLEVR_dev_2277", "input": "Is there an object that is the same color and material as the left most object?", "output": "[\"SELECT['objects']\", \"PROJECT['the left most #REF', '#1']\", \"PROJECT['colors of #REF', '#2']\", \"PROJECT['materials of #REF', '#2']\", \"DISCARD['#1', '#2']\", \"PROJECT['colors of #REF', '#5']\", \"PROJECT['materials of #REF', '#5']\", \"COMPARATIVE['#5', '#6', 'is the same as #3']\", \"COMPARATIVE['#5', '#7', 'Is the same as #4']\", \"INTERSECTION['#5', '#8', '#9']\", \"BOOLEAN['#10', 'if there are any #REF']\"]"}
{"id": "CLEVR_dev_2281", "input": "are there any identical items?", "output": "[\"SELECT['identical items']\", \"BOOLEAN['#1', 'are there any #REF']\"]"}
{"id": "CLEVR_dev_229", "input": "Is there a ball and a cube that are the same material?", "output": "[\"SELECT['balls']\", \"SELECT['cubes']\", \"PROJECT['materials of #REF', '#1']\", \"PROJECT['materials of #REF', '#2']\", \"BOOLEAN['if_exist', '#3', 'are the same as any #4']\"]"}
{"id": "CLEVR_dev_2290", "input": "Are three of the objects purple?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are purple']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'equal to three']\"]"}
{"id": "CLEVR_dev_2293", "input": "If you subtract the blue cubes and red cylinder how many objects are left?", "output": "[\"SELECT['objects']\", \"AGGREGATE['count', '#1']\", \"SELECT['cubes']\", \"FILTER['#3', 'that are blue']\", \"AGGREGATE['count', '#4']\", \"SELECT['the red cylinders']\", \"AGGREGATE['count', '#6']\", \"ARITHMETIC['sum', '#5', '#6']\", \"ARITHMETIC['difference', '#2', '#8']\"]"}
{"id": "CLEVR_dev_2295", "input": "What color is the cube closest to the yellow sphere that's to the left of the purple metallic sphere?", "output": "[\"SELECT['sphere']\", \"FILTER['#1', 'that is yellow']\", \"FILTER['#1', 'that is purple']\", \"FILTER['#3', 'that is metallic']\", \"FILTER['#2', 'that is left of #4']\", \"SELECT['cubes']\", \"FILTER['#6', 'that is closest to #5']\", \"PROJECT['color of #REF', '#7']\"]"}
{"id": "CLEVR_dev_2298", "input": "What shape do the most objects have in common?", "output": "[\"SELECT['shapes']\", \"PROJECT['objects of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"SUPERLATIVE['max', '#1', '#3']\"]"}
{"id": "CLEVR_dev_2305", "input": "How many  shapes have a matte finish?", "output": "[\"SELECT['shapes']\", \"PROJECT['finishes of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is matte']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_2309", "input": "What is the shape of the two matching yellow and cyan items?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that are yellow']\", \"FILTER['#1', 'that are cyan']\", \"PROJECT['the shape of #REF', '#2']\", \"PROJECT['the shape of #REF', '#3']\", \"COMPARATIVE['#2', '#4', 'is the same as #5']\", \"PROJECT['the shape of #REF', '#6']\"]"}
{"id": "CLEVR_dev_2311", "input": "Are there three red items shown?", "output": "[\"SELECT['red items']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'equal to three']\"]"}
{"id": "CLEVR_dev_2314", "input": "Are all of the objects the same material and color?", "output": "[\"SELECT['objects']\", \"PROJECT['materials of #REF', '#1']\", \"PROJECT['colors of #REF', '#1']\", \"BOOLEAN['#2', 'Are all #REF the same']\", \"BOOLEAN['#3', 'Are all #REF the same']\", \"BOOLEAN['#4', 'and #5 true']\"]"}
{"id": "CLEVR_dev_2316", "input": "How many objects are between the large blue cylinder and the small red cylinder?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is large']\", \"FILTER['#2', 'that is blue']\", \"FILTER['#3', 'that is cylinder']\", \"FILTER['#1', 'that is small']\", \"FILTER['#5', 'that is red']\", \"FILTER['#6', 'that is cylinder']\", \"FILTER['#1', 'betweenleftside #4']\", \"FILTER['#8', 'betweenrightside #7']\", \"AGGREGATE['count', '#9']\"]"}
{"id": "CLEVR_dev_232", "input": "Does the big sphere have the same color as the object next to it?", "output": "[\"SELECT['sphere']\", \"FILTER['#1', 'that is big']\", \"PROJECT['color of #REF', '#2']\", \"SELECT['object']\", \"FILTER['#4', 'that is next to #2']\", \"PROJECT['color of #REF', '#5']\", \"BOOLEAN['#3', 'is the same as #6']\"]"}
{"id": "CLEVR_dev_2322", "input": "Is there an object that has the same color as the cube?", "output": "[\"SELECT['the cube']\", \"PROJECT['the color of #REF', '#1']\", \"SELECT['objects']\", \"DISCARD['#3', '#1']\", \"PROJECT['colors of #REF', '#4']\", \"COMPARATIVE['#4', '#5', 'is the same as #2']\", \"BOOLEAN['#6', 'if there are any #REF']\"]"}
{"id": "CLEVR_dev_2324", "input": "What is the shape of the object reflected in the large gray cube?", "output": "[\"SELECT['objects']\", \"SELECT['large cube']\", \"FILTER['#2', 'that is gray']\", \"FILTER['#1', 'reflected in #3']\", \"PROJECT['shape of #REF', '#4']\"]"}
{"id": "CLEVR_dev_2325", "input": "How many objects other than cylinders are there?", "output": "[\"SELECT['objects']\", \"SELECT['cylinders']\", \"DISCARD['#1', '#2']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_2328", "input": "How many objects are made of the same material, share the same color?", "output": "[\"SELECT['objects']\", \"PROJECT['colors of #REF', '#1']\", \"PROJECT['materials that #REF are made of', '#1']\", \"COMPARATIVE['#1', '#2', 'are the same']\", \"COMPARATIVE['#1', '#3', 'are the same']\", \"INTERSECTION['#1', '#4', '#5']\", \"AGGREGATE['count', '#6']\"]"}
{"id": "CLEVR_dev_2331", "input": "Are there more green cylinders than there are gray spheres?", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'that are green']\", \"SELECT['spheres']\", \"FILTER['#3', 'that are gray']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is more than #6']\"]"}
{"id": "CLEVR_dev_2335", "input": "What color are the two objects that are the same?", "output": "[\"SELECT['objects']\", \"PROJECT['colors of #REF', '#1']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is two']\"]"}
{"id": "CLEVR_dev_2340", "input": "How many objects are bigger than the green cube?", "output": "[\"SELECT['the green cube']\", \"PROJECT['size of #REF', '#1']\", \"SELECT['objects']\", \"DISCARD['#3', '#1']\", \"PROJECT['size of #REF', '#4']\", \"COMPARATIVE['#4', '#5', 'is higher than #2']\", \"AGGREGATE['count', '#6']\"]"}
{"id": "CLEVR_dev_2344", "input": "what is the color of the metallic cylinder being blocked by the blue cylinder?", "output": "[\"SELECT['metallic cylinder']\", \"SELECT['blue cylinder']\", \"FILTER['#1', 'being blocked by #2']\", \"PROJECT['color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_235", "input": "What color is the round ball?", "output": "[\"SELECT['balls']\", \"FILTER['#1', 'that is round']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_2354", "input": "what color is the object that is different", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is different']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_2355", "input": "What is the color of the item furthest away from the other items?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'furthest away from other items']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_2357", "input": "How many metallic items are behind the red rubber ball?", "output": "[\"SELECT['metallic items']\", \"SELECT['red ball']\", \"FILTER['#2', 'that is rubber']\", \"FILTER['#1', 'behind #3']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "CLEVR_dev_2358", "input": "Is the gold sphere large?", "output": "[\"SELECT['gold sphere']\", \"PROJECT['size of #REF', '#1']\", \"BOOLEAN['#2', 'is large']\"]"}
{"id": "CLEVR_dev_236", "input": "What color are the large metallic cylinders that are close to the gray metallic box?", "output": "[\"SELECT['large cylinders']\", \"FILTER['#1', 'that are metallic']\", \"SELECT['gray box']\", \"FILTER['#3', 'that is metallic']\", \"FILTER['#2', 'close to #4']\", \"PROJECT['color of #REF', '#5']\"]"}
{"id": "CLEVR_dev_2361", "input": "what object is in front?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is in the front']\"]"}
{"id": "CLEVR_dev_2364", "input": "How many cyan objects are on the right half of the image?", "output": "[\"SELECT['cyan objects']\", \"FILTER['#1', 'on the right half of the image']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_2367", "input": "are there more large cylinders than small spheres?", "output": "[\"SELECT['large cylinders']\", \"SELECT['small spheres']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is higher than #4']\"]"}
{"id": "CLEVR_dev_237", "input": "There are three items that are the same shape, what is that shape?", "output": "[\"SELECT['items']\", \"PROJECT['shapes of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'are the same']\", \"PROJECT['shape of #REF', '#3']\"]"}
{"id": "CLEVR_dev_2371", "input": "Are the size, shape, and color of the objects to the far left and far right the same?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'to the far left']\", \"FILTER['#1', 'to the far right']\", \"PROJECT['size of #REF', '#2']\", \"PROJECT['size of #REF', '#3']\", \"BOOLEAN['#4', 'the same as #5']\", \"PROJECT['shape of #REF', '#2']\", \"PROJECT['shape of #REF', '#2']\", \"BOOLEAN['#7', 'the same as #8']\", \"PROJECT['color of #REF', '#2']\", \"PROJECT['color of #REF', '#3']\", \"BOOLEAN['#10', 'the same as #11']\", \"BOOLEAN['#6', 'and #9 and #12 true']\"]"}
{"id": "CLEVR_dev_2373", "input": "How many colors appear only once in the scene?", "output": "[\"SELECT['colors']\", \"FILTER['#1', 'that appear only once']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_2379", "input": "Are there more rubber objects than metallic objects?", "output": "[\"SELECT['rubber objects']\", \"SELECT['metallic objects']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'higher than #4']\"]"}
{"id": "CLEVR_dev_2384", "input": "How many objects are metallic or cyan?", "output": "[\"SELECT['metallic objects']\", \"SELECT['cyan objects']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"ARITHMETIC['sum', '#3', '#4']\"]"}
{"id": "CLEVR_dev_2385", "input": "What is the color of the small cylinder to the left of the purple cylinder?", "output": "[\"SELECT['small cylinder']\", \"SELECT['purple cylinder']\", \"FILTER['#1', 'to the left of #2']\", \"PROJECT['color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_2387", "input": "What color is the largest shiny cylinder?", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'that are shiny']\", \"AGGREGATE['max', '#2']\", \"PROJECT['the color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_2389", "input": "Is the red sphere positioned farthest to the left?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'positioned farthest to the left']\", \"SELECT['the red sphere']\", \"BOOLEAN['#3', 'is the #2']\"]"}
{"id": "CLEVR_dev_2393", "input": "how many cylinders are right of the end of the purple metallic sphere?", "output": "[\"SELECT['the purple metallic sphere']\", \"SELECT['cylinders']\", \"PROJECT['the end of #REF', '#1']\", \"FILTER['#2', 'that are to the right of #3']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "CLEVR_dev_24", "input": "What color is the cirlce object?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is cirlce']\", \"PROJECT['the colors of #REF', '#2']\"]"}
{"id": "CLEVR_dev_240", "input": "is the purple cube the same material as the yellow object?", "output": "[\"SELECT['the purple cube']\", \"SELECT['the yellow cube']\", \"PROJECT['the material of #REF', '#1']\", \"PROJECT['the material of #REF', '#2']\", \"BOOLEAN['#3', 'the same as #4']\"]"}
{"id": "CLEVR_dev_2404", "input": "What shape is the object that  is hidden behind the large blue sphere?", "output": "[\"SELECT['the large blue sphere']\", \"PROJECT['object that is hidden behind of #REF', '#1']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_2410", "input": "How many objects are to the left of the purple object?", "output": "[\"SELECT['objects']\", \"SELECT['purple object']\", \"FILTER['#1', 'to the left of #2']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_2411", "input": "How many distinct shapes can be seen in the picture?", "output": "[\"SELECT['shapes']\", \"PROJECT['distinct #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_2414", "input": "Are the two spheres the same size?", "output": "[\"SELECT['spheres']\", \"PROJECT['sizes of #REF', '#1']\", \"BOOLEAN['#2', 'are both #REF the same']\"]"}
{"id": "CLEVR_dev_2419", "input": "How many small cubes are in front of the large cyan object?", "output": "[\"SELECT['small cubes']\", \"SELECT['large object']\", \"FILTER['#2', 'that is cyan']\", \"FILTER['#1', 'in front of #3']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "CLEVR_dev_2420", "input": "Are all of the cubes made out of the same material?", "output": "[\"SELECT['cubes']\", \"PROJECT['materials of #REF', '#1']\", \"BOOLEAN['#2', 'are all of #REF the same']\"]"}
{"id": "CLEVR_dev_2421", "input": "How many other objects are the same color as the leftmost large cylinder?", "output": "[\"SELECT['cylinder']\", \"FILTER['#1', 'that is large']\", \"FILTER['#2', 'that is the leftmost']\", \"PROJECT['color of #REF', '#3']\", \"SELECT['objects']\", \"DISCARD['#5', '#3']\", \"PROJECT['colors of #REF', '#6']\", \"COMPARATIVE['#6', '#7', 'are the same as #4']\", \"AGGREGATE['count', '#8']\"]"}
{"id": "CLEVR_dev_2430", "input": "are all objects metal?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are metal']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_2432", "input": "Are there any objects that are the same color as the large cube?", "output": "[\"SELECT['large cube']\", \"SELECT['objects']\", \"DISCARD['#2', '#1']\", \"PROJECT['color of #REF', '#1']\", \"PROJECT['colors of #REF', '#3']\", \"COMPARATIVE['#3', '#4', 'is the same as #5']\", \"BOOLEAN['#6', 'are there any #REF']\"]"}
{"id": "CLEVR_dev_2433", "input": "is there any green objects?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are green']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'more than zero']\"]"}
{"id": "CLEVR_dev_2438", "input": "What color are the matte objects?", "output": "[\"SELECT['the matte objects']\", \"PROJECT['color of #REF', '#1']\"]"}
{"id": "CLEVR_dev_2447", "input": "Are there any purple objects that are to the left of the green thing?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is purple']\", \"FILTER['#1', 'that is green']\", \"FILTER['#2', 'that are to the left of #3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'more than zero']\"]"}
{"id": "CLEVR_dev_245", "input": "What color is the sphere located to the left of the purple cube?", "output": "[\"SELECT['sphere']\", \"SELECT['purple cube']\", \"FILTER['#1', 'to the left of #2']\", \"PROJECT['color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_2450", "input": "What color is the farthest away matte object?", "output": "[\"SELECT['matte objects']\", \"FILTER['#1', 'that is farthest away']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_246", "input": "How many metallic yellow cylinders are next to the red block?", "output": "[\"SELECT['red block']\", \"PROJECT['metallic yellow cylinders next to #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_2460", "input": "Are there any metallic objects in the picture?", "output": "[\"SELECT['objects in the picture']\", \"FILTER['#1', 'that are metallic']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at least one']\"]"}
{"id": "CLEVR_dev_2461", "input": "Are all these items metallic?", "output": "[\"SELECT['the items']\", \"BOOLEAN['#1', 'if all of #REF are metallic']\"]"}
{"id": "CLEVR_dev_2463", "input": "how many sphere are there?", "output": "[\"SELECT['sphere']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_2466", "input": "What color is the metallic object that is the same shape as the purple object?", "output": "[\"SELECT['metallic objects']\", \"SELECT['purple object']\", \"PROJECT['shapes of #REF', '#1']\", \"PROJECT['shape of #REF', '#3']\", \"COMPARATIVE['#1', '#3', 'is the same as #4']\", \"PROJECT['color of #REF', '#5']\"]"}
{"id": "CLEVR_dev_2470", "input": "What color is the object left of the red object?", "output": "[\"SELECT['objects']\", \"SELECT['red object']\", \"FILTER['#1', 'to the left of #2']\", \"PROJECT['color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_2474", "input": "what shape appears least?", "output": "[\"SELECT['objects']\", \"PROJECT['shape', '#1']\", \"GROUP['count', '#1', '#2']\", \"SUPERLATIVE['min', '#1', '#3']\", \"PROJECT['shape of #REF', '#4']\"]"}
{"id": "CLEVR_dev_2477", "input": "What color are the two shiny spheres?", "output": "[\"SELECT['shiny spheres']\", \"PROJECT['color of #REF', '#1']\"]"}
{"id": "CLEVR_dev_248", "input": "What is to the left of the small brown cube?", "output": "[\"SELECT['small cube']\", \"FILTER['#1', 'that is brown']\", \"PROJECT['What is to the left of #REF', '#2']\"]"}
{"id": "CLEVR_dev_2481", "input": "What color is the only cylinder shown?", "output": "[\"SELECT['cylinder']\", \"PROJECT['color of #REF', '#1']\"]"}
{"id": "CLEVR_dev_2483", "input": "Are there four items?", "output": "[\"SELECT['items']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'equal to four']\"]"}
{"id": "CLEVR_dev_2485", "input": "Are the three spheres made out of the same material?", "output": "[\"SELECT['spheres']\", \"PROJECT['the materials that #REF are made out of', '#1']\", \"BOOLEAN['#2', 'are the same']\"]"}
{"id": "CLEVR_dev_2488", "input": "Which color sphere is not matte and not cyan?", "output": "[\"SELECT['spheres']\", \"FILTER['#1', 'that is not matte']\", \"FILTER['#1', 'that is not cyan']\", \"INTERSECTION['#1', '#2', '#3']\", \"PROJECT['color of #REF', '#4']\"]"}
{"id": "CLEVR_dev_2491", "input": "Are the two non metallic cubes the same size?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that are not metallic']\", \"PROJECT['size', '#2']\", \"GROUP['count', '#2', '#3']\", \"SUPERLATIVE['max', '#2', '#4']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'equal two']\"]"}
{"id": "CLEVR_dev_2492", "input": "Are there more metallic spheres than metallic cubes?", "output": "[\"SELECT['spheres']\", \"FILTER['#1', 'that are metallic']\", \"AGGREGATE['count', '#2']\", \"SELECT['cubes']\", \"FILTER['#4', 'that are metallic']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#3', 'is higher than #6']\"]"}
{"id": "CLEVR_dev_2496", "input": "What is the shape of the brown thing in front of the green thing?", "output": "[\"SELECT['green thing']\", \"PROJECT['brown thing in front of #REF', '#1']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_2499", "input": "What color is the small sphere?", "output": "[\"SELECT['small sphere']\", \"PROJECT['color of #REF', '#1']\"]"}
{"id": "CLEVR_dev_25", "input": "is the red cylinder the same material as the blue cube?", "output": "[\"SELECT['red cylinder']\", \"SELECT['blue cube']\", \"PROJECT['material of #REF', '#1']\", \"PROJECT['material of #REF', '#2']\", \"BOOLEAN['#3', 'the same as #4']\"]"}
{"id": "CLEVR_dev_2502", "input": "How many shiny objects are grouped together?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is shiny']\", \"FILTER['#2', 'that is grouped together']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_2506", "input": "Is the blue object the same shape as the red object?", "output": "[\"SELECT['blue object']\", \"SELECT['red object']\", \"PROJECT['shape of #REF', '#1']\", \"PROJECT['shape of #REF', '#2']\", \"BOOLEAN['#3', 'is the same as #4']\"]"}
{"id": "CLEVR_dev_2513", "input": "Are most of the objects green?", "output": "[\"SELECT['the objects']\", \"BOOLEAN['#1', 'if most of #REF are green']\"]"}
{"id": "CLEVR_dev_2522", "input": "What color is the shape in between the blue cube and purple cylinder?", "output": "[\"SELECT['the blue cube']\", \"SELECT['the purple cylinder']\", \"SELECT['shapes']\", \"FILTER['#3', 'that are betweenleftside #1']\", \"FILTER['#4', 'that are betweenrightside #2']\", \"PROJECT['the color of #REF', '#5']\"]"}
{"id": "CLEVR_dev_2524", "input": "what shape is on the back left?", "output": "[\"SELECT['shapes']\", \"FILTER['#1', 'that is on the back left']\"]"}
{"id": "CLEVR_dev_2529", "input": "Are there any objects that are the same size and shape?", "output": "[\"SELECT['objects']\", \"PROJECT['sizes of #REF', '#1']\", \"PROJECT['shapes of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'are the same']\", \"COMPARATIVE['#1', '#3', 'are the same']\", \"INTERSECTION['#1', '#4', '#5']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is at least two']\"]"}
{"id": "CLEVR_dev_2535", "input": "What color is the item farthest away?", "output": "[\"SELECT['item']\", \"FILTER['#1', 'that is farthest away']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_2540", "input": "how many shiny green balls?", "output": "[\"SELECT['green balls']\", \"FILTER['#1', 'that are shiny']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_2541", "input": "Are there as many matte objects as metallic objects?", "output": "[\"SELECT['matte objects']\", \"SELECT['metallic objects']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'the same as #4']\"]"}
{"id": "CLEVR_dev_2544", "input": "THere is one shape not with a shiney finish, what color is it?", "output": "[\"SELECT['shapes']\", \"PROJECT['finishes of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is not shiney']\", \"PROJECT['color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_2550", "input": "How many red shiny objects are there?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are red']\", \"FILTER['#2', 'that are shiny']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_2557", "input": "What color is the largest metallic item?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that are metallic']\", \"PROJECT['size of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is the highest']\", \"PROJECT['color of #REF', '#4']\"]"}
{"id": "CLEVR_dev_2567", "input": "Is the small purple sphere the same color as the large spheres?", "output": "[\"SELECT['small sphere']\", \"FILTER['#1', 'that is purple']\", \"SELECT['large spheres']\", \"PROJECT['color of #REF', '#2']\", \"PROJECT['colors of #REF', '#3']\", \"COMPARATIVE['#1', '#4', 'is the same as #5']\", \"BOOLEAN['#6', 'is there any #REF']\"]"}
{"id": "CLEVR_dev_2571", "input": "What shape is the object that is the same color as the cube?", "output": "[\"SELECT['objects']\", \"SELECT['cube']\", \"PROJECT['color of #REF', '#1']\", \"PROJECT['color of #REF', '#2']\", \"COMPARATIVE['#1', '#3', 'is the same as #4']\", \"PROJECT['shape of #REF', '#5']\"]"}
{"id": "CLEVR_dev_2574", "input": "How many objects are in front of the gray cylinder and behind the red cylinder?", "output": "[\"SELECT['the gray cylinder']\", \"SELECT['the red cylinder']\", \"SELECT['objects']\", \"DISCARD['#3', '#1']\", \"DISCARD['#4', '#2']\", \"FILTER['#5', 'in front of #1']\", \"FILTER['#6', 'behind #2']\", \"AGGREGATE['count', '#7']\"]"}
{"id": "CLEVR_dev_2579", "input": "How many shiny blue cylinders are there?", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'that are blue']\", \"FILTER['#1', 'that are shiny']\", \"INTERSECTION['#1', '#2', '#3']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "CLEVR_dev_2584", "input": "How many objects made of metal are on the right side of the image?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'on the right side of the image']\", \"FILTER['#2', 'that are made of metal']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_2585", "input": "Is there a cube in this picture?", "output": "[\"SELECT['cubes']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'more than zero']\"]"}
{"id": "CLEVR_dev_2586", "input": "How many sizes of cubes are there?", "output": "[\"SELECT['cubes']\", \"PROJECT['sizes of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_2590", "input": "Are all these items of the same material?", "output": "[\"SELECT['items']\", \"PROJECT['the material of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'equal to one']\"]"}
{"id": "CLEVR_dev_2592", "input": "What color of rubber items is shown most?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that are rubber']\", \"PROJECT['color of #REF', '#2']\", \"FILTER['#3', 'that is shown most']\"]"}
{"id": "CLEVR_dev_2595", "input": "Is the number of purple objects equal to the number of objects that are spheres?", "output": "[\"SELECT['purple objects']\", \"SELECT['spheres']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'the same as #4']\"]"}
{"id": "CLEVR_dev_2599", "input": "Are there more cyan things than matte red things?", "output": "[\"SELECT['cyan things']\", \"SELECT['matte things']\", \"FILTER['#2', 'that are red']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'higher than #5']\"]"}
{"id": "CLEVR_dev_26", "input": "is the rubber cube and the metallic sphere the same color?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that is rubber']\", \"PROJECT['color of #REF', '#2']\", \"SELECT['sphere']\", \"FILTER['#4', 'that is metallic']\", \"PROJECT['color of #REF', '#5']\", \"BOOLEAN['#3', 'the same as #6']\"]"}
{"id": "CLEVR_dev_2602", "input": "Are the small cylinder and the small cube to the left of the metallic sphere the same color?", "output": "[\"SELECT['small cylinder']\", \"SELECT['small cube']\", \"SELECT['metallic sphere']\", \"FILTER['#2', 'to the left of #3']\", \"PROJECT['color of #REF', '#1']\", \"PROJECT['color of #REF', '#4']\", \"BOOLEAN['#5', 'the same as #6']\"]"}
{"id": "CLEVR_dev_2605", "input": "How many big objects are metallic?", "output": "[\"SELECT['big objects']\", \"FILTER['#1', 'that are metallic']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_2607", "input": "Are there any objects behind the purple cylinder?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'behind the purple cylinder']\", \"BOOLEAN['#2', 'if there any #REF']\"]"}
{"id": "CLEVR_dev_2609", "input": "Are there more green cylinders than cyan spheres?", "output": "[\"SELECT['green cylinders']\", \"SELECT['cyan spheres']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'higher than #4']\"]"}
{"id": "CLEVR_dev_2610", "input": "How many metallic cylinders are behind the yellow sphere?", "output": "[\"SELECT['metallic cylinders']\", \"SELECT['yellow sphere']\", \"FILTER['#1', 'behind #2']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_2622", "input": "Are the purple items metal?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that are purple']\", \"BOOLEAN['#2', 'are metal']\"]"}
{"id": "CLEVR_dev_2629", "input": "What material is the small gold ball made of?", "output": "[\"SELECT['small ball']\", \"FILTER['#1', 'that is gold']\", \"PROJECT['material of #REF', '#2']\"]"}
{"id": "CLEVR_dev_2635", "input": "Are there fewer red things than green things?", "output": "[\"SELECT['red things']\", \"SELECT['green things']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'lower than #4']\"]"}
{"id": "CLEVR_dev_2636", "input": "What is the shape of the largest object?", "output": "[\"SELECT['objects']\", \"PROJECT['the size of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is the largest']\", \"PROJECT['the shape of #REF', '#3']\"]"}
{"id": "CLEVR_dev_2638", "input": "How many blue cylinders and shiny balls are there?", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'that are blue']\", \"AGGREGATE['count', '#2']\", \"SELECT['balls']\", \"FILTER['#4', 'that are shiny']\", \"AGGREGATE['count', '#5']\", \"ARITHMETIC['sum', '#3', '#6']\"]"}
{"id": "CLEVR_dev_2641", "input": "The two objects that are the same size are both what?", "output": "[\"SELECT['objects']\", \"PROJECT['sizes of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'are the same']\", \"PROJECT['what are #REF', '#3']\"]"}
{"id": "CLEVR_dev_2642", "input": "What shape is partly hidden behind the brown cylinder?", "output": "[\"SELECT['shapes']\", \"FILTER['#1', 'that is brown']\", \"FILTER['#2', 'that is cylinder']\", \"FILTER['#1', 'partly hidden behind #3']\"]"}
{"id": "CLEVR_dev_2646", "input": "What shape is the green object behind the purple sphere?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is green']\", \"FILTER['#1', 'that is purple']\", \"FILTER['#3', 'that is sphere']\", \"FILTER['#2', 'behind #4']\", \"PROJECT['shape of #REF', '#5']\"]"}
{"id": "CLEVR_dev_2649", "input": "How many objects are either a cylinder or square?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are cylinders']\", \"FILTER['#1', 'that are squares']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"ARITHMETIC['sum', '#4', '#5']\"]"}
{"id": "CLEVR_dev_266", "input": "How many of the items are casting a shadow?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that are casting a shadow']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_2662", "input": "How many sides of the cube are next to a sphere?", "output": "[\"SELECT['cube']\", \"PROJECT['sides of #REF', '#1']\", \"FILTER['#2', 'next to a sphere']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_2666", "input": "what color is the sphere in the back?", "output": "[\"SELECT['sphere']\", \"FILTER['#1', 'that is in the back']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_2667", "input": "Is there any other thing that is the same color as the small metallic sphere?", "output": "[\"SELECT['the small metallic sphere']\", \"SELECT['objects']\", \"DISCARD['#2', '#1']\", \"PROJECT['color of #REF', '#1']\", \"PROJECT['colors of #REF', '#3']\", \"COMPARATIVE['#3', '#5', 'is the same as #4']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is at least one']\"]"}
{"id": "CLEVR_dev_2669", "input": "what color is the other cylinder whose height is comparable to the green cylinder?", "output": "[\"SELECT['green cylinder']\", \"SELECT['cylinders']\", \"DISCARD['#2', '#1']\", \"PROJECT['height of #REF', '#1']\", \"PROJECT['heights of #REF', '#3']\", \"COMPARATIVE['#3', '#4', 'is comparable to #5']\", \"PROJECT['color of #REF', '#6']\"]"}
{"id": "CLEVR_dev_2674", "input": "What is the color of the small cylinder?", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'that is small']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_2679", "input": "Is the small sphere the same color as any of the large spheres?", "output": "[\"SELECT['spheres']\", \"FILTER['#1', 'that are small']\", \"FILTER['#1', 'that are large']\", \"PROJECT['color of #REF', '#2']\", \"PROJECT['colors of #REF', '#3']\", \"BOOLEAN['#4', 'is the same as any of #5']\"]"}
{"id": "CLEVR_dev_2680", "input": "how many large cylinders are there?", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'that are large']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_2683", "input": "How many more cubes are there than spheres?", "output": "[\"SELECT['cubes']\", \"SELECT['spheres']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "CLEVR_dev_2690", "input": "How many red things are to the left of the purple metallic thing?", "output": "[\"SELECT['red things']\", \"SELECT['purple thing']\", \"FILTER['#2', 'that is metallic']\", \"FILTER['#1', 'to the left of #3']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "CLEVR_dev_2691", "input": "Are both of the small cubes red?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that are small']\", \"FILTER['#2', 'that are red']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'equal two']\"]"}
{"id": "CLEVR_dev_2693", "input": "What is the shape of the object partially hidden behind the green cube?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that is green']\", \"SELECT['objects']\", \"FILTER['#3', 'that is partially behind #2']\", \"PROJECT['shape of #REF', '#4']\"]"}
{"id": "CLEVR_dev_2694", "input": "how many object are green objects?", "output": "[\"SELECT['green objects']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_2698", "input": "What color do the most objects share?", "output": "[\"SELECT['objects']\", \"PROJECT['colors of #REF', '#1']\", \"GROUP['count', '#1', '#2']\", \"SUPERLATIVE['max', '#2', '#3']\"]"}
{"id": "CLEVR_dev_2699", "input": "Is there a cylinder?", "output": "[\"SELECT['a cylinder']\", \"BOOLEAN['#1', 'if there is #REF']\"]"}
{"id": "CLEVR_dev_270", "input": "What is the color of item in the center?", "output": "[\"SELECT['item']\", \"FILTER['#1', 'that is in the center']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_2701", "input": "how many silver objects", "output": "[\"SELECT['silver objects']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_2706", "input": "What shape are the two items farthest to the right?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that are farthest to the right']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_2709", "input": "Are all of the green objects cubes?", "output": "[\"SELECT['green objects']\", \"FILTER['#1', 'that are cubes']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is higher than zero']\"]"}
{"id": "CLEVR_dev_271", "input": "What color is the most common?", "output": "[\"SELECT['colors']\", \"FILTER['#1', 'that is most common']\"]"}
{"id": "CLEVR_dev_2710", "input": "Are there five metallic items?", "output": "[\"SELECT['metallic items']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is equal to five']\"]"}
{"id": "CLEVR_dev_2718", "input": "Is the metal gold thing in front of the red thing?", "output": "[\"SELECT['metal thing']\", \"FILTER['#1', 'that is gold']\", \"SELECT['red thing']\", \"BOOLEAN['#2', 'in front of #3']\"]"}
{"id": "CLEVR_dev_2719", "input": "What is the shape of the object reflected on the big brown cylinder.", "output": "[\"SELECT['big brown cylinder']\", \"PROJECT['object reflected on #REF', '#1']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_272", "input": "There is a metallic yellow block, is there any other metallic yellow blocks next to it?", "output": "[\"SELECT['block']\", \"FILTER['#1', 'that is metallic']\", \"FILTER['#2', 'that is yellow']\", \"PROJECT['other #REF', '#3']\", \"FILTER['#4', 'that are next to #3']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is more than zero']\"]"}
{"id": "CLEVR_dev_2720", "input": "how many large balls?", "output": "[\"SELECT['large balls']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_2723", "input": "Are there any small cubes that are the same color as the sphere in the foreground?", "output": "[\"SELECT['small cubes']\", \"SELECT['spheres']\", \"FILTER['#2', 'that is in the foreground']\", \"PROJECT['colors of #REF', '#1']\", \"PROJECT['color of #REF', '#3']\", \"COMPARATIVE['#1', '#4', 'is the same as #5']\", \"BOOLEAN['#6', 'are there any #REF']\"]"}
{"id": "CLEVR_dev_2724", "input": "What shape is partly hidden behind the big green cube?", "output": "[\"SELECT['the big green cube']\", \"SELECT['shapes']\", \"FILTER['#2', 'that are partly hidden behind #1']\"]"}
{"id": "CLEVR_dev_2726", "input": "How many cyan cylinders are there?", "output": "[\"SELECT['cyan cylinders']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_2732", "input": "What shape are objects grouped in the middle?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'grouped in the middle']\", \"PROJECT['the shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_2735", "input": "how many teal objects are the same size as the largest yellow object?", "output": "[\"SELECT['teal objects']\", \"SELECT['largest yellow object']\", \"PROJECT['size of #REF', '#1']\", \"PROJECT['size of #REF', '#2']\", \"COMPARATIVE['#1', '#3', 'is the same as #4']\", \"AGGREGATE['count', '#5']\"]"}
{"id": "CLEVR_dev_274", "input": "What color are most the objects?", "output": "[\"SELECT['colors']\", \"PROJECT['objects of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"SUPERLATIVE['max', '#1', '#3']\"]"}
{"id": "CLEVR_dev_2743", "input": "Of the cyan items, are any matte cubes?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that are matte']\", \"FILTER['#2', 'that are cyan']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least one']\"]"}
{"id": "CLEVR_dev_2746", "input": "How many objects have a matte finish?", "output": "[\"SELECT['objects']\", \"PROJECT['finishes of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is matte']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_2758", "input": "How many rubber items are red and to the right of the metallic red cube?", "output": "[\"SELECT['rubber items']\", \"FILTER['#1', 'that are red']\", \"SELECT['metallic cube']\", \"FILTER['#3', 'that is red']\", \"FILTER['#2', 'to the right of #4']\", \"AGGREGATE['count', '#5']\"]"}
{"id": "CLEVR_dev_2760", "input": "Is the large cube the same color as any of the other large objects?", "output": "[\"SELECT['large cube']\", \"SELECT['large objects']\", \"DISCARD['#2', '#1']\", \"PROJECT['color of #REF', '#1']\", \"PROJECT['colors of #REF', '#3']\", \"COMPARATIVE['#3', '#4', 'is the same as #5']\", \"BOOLEAN['#6', 'is there any #REF']\"]"}
{"id": "CLEVR_dev_2763", "input": "What shape is directly in front of the red cube?", "output": "[\"SELECT['shapes']\", \"SELECT['red cube']\", \"FILTER['#1', 'directly in front of #2']\"]"}
{"id": "CLEVR_dev_2765", "input": "Are there any blue items?", "output": "[\"SELECT['blue items']\", \"BOOLEAN['#1', 'are there any #REF']\"]"}
{"id": "CLEVR_dev_277", "input": "How many purple or gray objects are there?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are purple']\", \"FILTER['#1', 'that are gray']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"ARITHMETIC['sum', '#4', '#5']\"]"}
{"id": "CLEVR_dev_2772", "input": "How many shapes are reflected in the silver cylinder?", "output": "[\"SELECT['shapes']\", \"SELECT['silver cylinder']\", \"FILTER['#1', 'reflected in #2']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_2775", "input": "If you remove the cylinders and spheres, what material is the remaining object?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'cylinders']\", \"DISCARD['#1', '#2']\", \"FILTER['#3', 'spheres']\", \"DISCARD['#3', '#4']\", \"PROJECT['material of #REF', '#5']\"]"}
{"id": "CLEVR_dev_2776", "input": "What is the shape of the object to the right of the cylinder?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is cylinder']\", \"FILTER['#1', 'that is to the right of #2']\", \"PROJECT['shape of #REF', '#3']\"]"}
{"id": "CLEVR_dev_2778", "input": "What shape has the most objects present?", "output": "[\"SELECT['objects']\", \"PROJECT['shape of #REF', '#1']\", \"GROUP['count', '#1', '#2']\", \"SUPERLATIVE['max', '#2', '#3']\"]"}
{"id": "CLEVR_dev_2780", "input": "Are all the rubber items blue?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that are rubber']\", \"FILTER['#2', 'that are blue']\", \"DISCARD['#2', '#3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'equal to zero']\"]"}
{"id": "CLEVR_dev_2784", "input": "What color is the small cylinder directly behind the large cube?", "output": "[\"SELECT['the large cube']\", \"PROJECT['cylinders directly behind of #REF', '#1']\", \"FILTER['#2', 'that are small']\", \"PROJECT['color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_2788", "input": "Are there any tiny cylinders?", "output": "[\"SELECT['cylinders']\", \"BOOLEAN['#1', 'if any of #REF are tiny']\"]"}
{"id": "CLEVR_dev_2794", "input": "Are both of the small spheres shiny?", "output": "[\"SELECT['spheres']\", \"FILTER['#1', 'that are small']\", \"FILTER['#2', 'that are shiny']\", \"DISCARD['#2', '#3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'equal to zero']\"]"}
{"id": "CLEVR_dev_2795", "input": "How many more metallic objects are there than spheres?", "output": "[\"SELECT['metallic objects']\", \"SELECT['spheres']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "CLEVR_dev_2799", "input": "What color do two objects share?", "output": "[\"SELECT['colors']\", \"PROJECT['objects of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is two']\"]"}
{"id": "CLEVR_dev_2800", "input": "what color is the sphere on the left?", "output": "[\"SELECT['spheres']\", \"FILTER['#1', 'on the left']\", \"PROJECT['the color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_2802", "input": "There's an object sitting between the two shiny cubes. Is it the only one of its color?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that are shiny']\", \"SELECT['objects']\", \"FILTER['#3', 'sitting between two #2']\", \"PROJECT['the color of #REF', '#4']\", \"PROJECT['the color of #REF', '#3']\", \"COMPARATIVE['#3', '#6', 'is the same as #5']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'equal to one']\"]"}
{"id": "CLEVR_dev_2807", "input": "what shape is the object in front?", "output": "[\"SELECT['object']\", \"FILTER['#1', 'that is in front']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_2808", "input": "How many cubes are behind the center gray cylinder in the middle of the scene?", "output": "[\"SELECT['gray cylinder']\", \"FILTER['#1', 'that is in the middle of the scene']\", \"PROJECT['cubes behind #REF', '#2']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_2810", "input": "Is there a smaller item the same shape as the blue item?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that is blue']\", \"FILTER['#1', 'that are small']\", \"PROJECT['the shape of #REF', '#2']\", \"PROJECT['the shape of #REF', '#3']\", \"BOOLEAN['if_exist', '#5', 'the same as #4']\"]"}
{"id": "CLEVR_dev_2825", "input": "What color do two large objects share?", "output": "[\"SELECT['large objects']\", \"PROJECT['color of #REF', '#1']\"]"}
{"id": "CLEVR_dev_2827", "input": "What color object is farthest left?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is farthest left']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_2834", "input": "How many metallic silver objects are there?", "output": "[\"SELECT['metallic objects']\", \"FILTER['#1', 'that are silver']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_2835", "input": "How many blue things are metallic and a cylinder?", "output": "[\"SELECT['blue things']\", \"FILTER['#1', 'that are metallic']\", \"FILTER['#2', 'that are cylinders']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_2839", "input": "what color are the big balls?", "output": "[\"SELECT['big balls']\", \"PROJECT['color of #REF', '#1']\"]"}
{"id": "CLEVR_dev_284", "input": "What shape is there a matte object both large and small?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are matte']\", \"FILTER['#2', 'that are large']\", \"FILTER['#2', 'that are small']\", \"PROJECT['the shapes of #REF', '#3']\", \"PROJECT['the shapes of #REF', '#4']\", \"SELECT['the shapes']\", \"INTERSECTION['#7', '#5', '#6']\"]"}
{"id": "CLEVR_dev_285", "input": "Is there a large red cube?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that are red']\", \"FILTER['#2', 'that are large']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'at least one']\"]"}
{"id": "CLEVR_dev_2851", "input": "what color is the shape being blocked by the same shape?", "output": "[\"SELECT['shape']\", \"FILTER['#1', 'that is the same']\", \"FILTER['#1', 'being blocked by #2']\", \"PROJECT['color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_286", "input": "Is the metallic purple ball in front of the yellow metallic block?", "output": "[\"SELECT['block']\", \"FILTER['#1', 'that is metallic']\", \"FILTER['#2', 'that is yellow']\", \"SELECT['ball']\", \"FILTER['#4', 'that is metallic']\", \"FILTER['#5', 'that is purple']\", \"BOOLEAN['#6', 'is in front of #3']\"]"}
{"id": "CLEVR_dev_2861", "input": "What is the total number of objects completely left of the blue cylinder?", "output": "[\"SELECT['blue cylinder']\", \"PROJECT['objects completely left of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_2862", "input": "Are there two shapes of the same color?", "output": "[\"SELECT['shapes']\", \"PROJECT['colors of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'are the same']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is two']\"]"}
{"id": "CLEVR_dev_2864", "input": "there is an object to left of the red cube, what color is it?", "output": "[\"SELECT['objects']\", \"SELECT['red cube']\", \"FILTER['#1', 'that is to the left of #2']\", \"PROJECT['color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_2867", "input": "How many large objects are shiny cubes?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that are shiny']\", \"FILTER['#1', 'that are large']\", \"INTERSECTION['#1', '#2', '#3']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "CLEVR_dev_2871", "input": "What shape is the small gray item behind the cyan cylinder?", "output": "[\"SELECT['small item']\", \"FILTER['#1', 'that is gray']\", \"SELECT['cyan cylinder']\", \"FILTER['#2', 'behind #3']\", \"PROJECT['shape of #REF', '#4']\"]"}
{"id": "CLEVR_dev_2872", "input": "What color is the object that is to the right of the gray cylinder and in front of the red sphere?", "output": "[\"SELECT['cylinder']\", \"FILTER['#1', 'that is gray']\", \"SELECT['spheres']\", \"FILTER['#3', 'that are red']\", \"SELECT['objects']\", \"FILTER['#5', 'that is right of #2']\", \"FILTER['#6', 'that is front of #4']\", \"PROJECT['color of #REF', '#7']\"]"}
{"id": "CLEVR_dev_2876", "input": "How many more matte items are there than cylinders?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that are matte']\", \"AGGREGATE['count', '#2']\", \"SELECT['cylinders']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['difference', '#3', '#5']\"]"}
{"id": "CLEVR_dev_2883", "input": "Are all of the blue objects made out of the same material?", "output": "[\"SELECT['blue objects']\", \"PROJECT['materials of #REF', '#1']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is higher than one']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is higher than zero']\"]"}
{"id": "CLEVR_dev_2886", "input": "Are all of the objects Spheres?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are Spheres']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'the same as #4']\"]"}
{"id": "CLEVR_dev_289", "input": "What color is the object that is closer to the camera?", "output": "[\"SELECT['objects']\", \"PROJECT['how close to the camera are #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is the highest']\", \"PROJECT['color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_2896", "input": "Are all three objects the same shape?", "output": "[\"SELECT['objects']\", \"PROJECT['shapes of #REF', '#1']\", \"BOOLEAN['#2', 'all the same']\"]"}
{"id": "CLEVR_dev_2897", "input": "How many red metallic shapes are there?", "output": "[\"SELECT['red shapes']\", \"FILTER['#1', 'that are metallic']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_290", "input": "Is the cyan cube bigger than the red square?", "output": "[\"SELECT['the cyan cube']\", \"SELECT['the red square']\", \"PROJECT['size of #REF', '#1']\", \"PROJECT['size of #REF', '#2']\", \"BOOLEAN['#3', 'is higher than #4']\"]"}
{"id": "CLEVR_dev_2900", "input": "What is the material of the only purple item?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that are purple']\", \"PROJECT['the material of #REF', '#2']\"]"}
{"id": "CLEVR_dev_2909", "input": "How many objects are the same color as the small cylinder?", "output": "[\"SELECT['objects']\", \"SELECT['small cylinder']\", \"PROJECT['colors of #REF', '#1']\", \"PROJECT['color of #REF', '#2']\", \"COMPARATIVE['#1', '#3', 'is the same as #4']\", \"AGGREGATE['count', '#5']\"]"}
{"id": "CLEVR_dev_291", "input": "What shape are the objects that are closest to each other?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are closest to each other']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_2915", "input": "What is the largest objects color?", "output": "[\"SELECT['large object']\", \"PROJECT['color of #REF', '#1']\"]"}
{"id": "CLEVR_dev_2918", "input": "What shape is the second largest object?", "output": "[\"SELECT['objects']\", \"AGGREGATE['max', '#1']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_2920", "input": "Are there more than one purple cube?", "output": "[\"SELECT['purple cubes']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'higher than one']\"]"}
{"id": "CLEVR_dev_2925", "input": "How many small round spheres are there?", "output": "[\"SELECT['round spheres']\", \"FILTER['#1', 'that are small']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_2931", "input": "Are the large cubes matte or shiny?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that are large']\", \"BOOLEAN['#2', 'are matte']\", \"BOOLEAN['#2', 'are shiny']\", \"UNION['#3', '#4']\"]"}
{"id": "CLEVR_dev_2934", "input": "of all the small shiny objects, how many are the same color as the nearest object?", "output": "[\"SELECT['object']\", \"FILTER['#1', 'that are small']\", \"FILTER['#2', 'that are shiny']\", \"FILTER['#1', 'nearest #3']\", \"PROJECT['color of #REF', '#4']\", \"COMPARATIVE['#2', '#5', '']\", \"AGGREGATE['count', '#6']\"]"}
{"id": "CLEVR_dev_294", "input": "Are both large cylinders gray?", "output": "[\"SELECT['large cylinders']\", \"FILTER['#1', 'that Are gray']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to #4']\"]"}
{"id": "CLEVR_dev_2941", "input": "How many objects are red or blue?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are red']\", \"FILTER['#1', 'that are blue']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"UNION['#4', '#5']\"]"}
{"id": "CLEVR_dev_2943", "input": "What color object is on the left side of the gray thing and in front of the purple cylinder?", "output": "[\"SELECT['the gray thing']\", \"SELECT['the purple cylinder']\", \"SELECT['objects']\", \"FILTER['#3', 'that are on the left side of #1']\", \"FILTER['#3', 'that are in front of #2']\", \"INTERSECTION['#3', '#4', '#5']\", \"PROJECT['the color of #REF', '#6']\"]"}
{"id": "CLEVR_dev_2949", "input": "Is the shiny green object a large cube?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are shiny']\", \"FILTER['#2', 'that are green']\", \"BOOLEAN['#3', 'is large']\", \"BOOLEAN['#3', 'is a cube']\", \"BOOLEAN['logical_and', 'true', '#4', '#5']\"]"}
{"id": "CLEVR_dev_2950", "input": "how many objects are smaller than the blue sphere?", "output": "[\"SELECT['objects']\", \"SELECT['the blue sphere']\", \"PROJECT['size of #REF', '#1']\", \"PROJECT['size of #REF', '#2']\", \"COMPARATIVE['#1', '#3', 'is lower than #4']\", \"AGGREGATE['count', '#5']\"]"}
{"id": "CLEVR_dev_2954", "input": "How many shiny cylinders are there?", "output": "[\"SELECT['shiny cylinders']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_2957", "input": "No colors match this thing, what color is it?", "output": "[\"SELECT['this thing']\", \"PROJECT['the color of #REF', '#1']\"]"}
{"id": "CLEVR_dev_2959", "input": "What color is the small cylinder mostly hidden by the cyan cube?", "output": "[\"SELECT['small cylinder']\", \"SELECT['cyan cube']\", \"FILTER['#1', 'mostly hidden by #2']\", \"PROJECT['color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_2965", "input": "What is the color of the item that is the same shape and size as the identical items? ", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that are identical']\", \"PROJECT['size of #REF', '#2']\", \"PROJECT['shape of #REF', '#2']\", \"COMPARATIVE['#1', '#3', '']\", \"COMPARATIVE['#1', '#4', '']\", \"INTERSECTION['#1', '#5', '#6']\", \"PROJECT['color of #REF', '#7']\"]"}
{"id": "CLEVR_dev_2966", "input": "What shape is the object furthest to the left?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is furthest to the left']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_2969", "input": "Are both purple cubes shiny?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that are purple']\", \"FILTER['#2', 'that are shiny']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to two']\"]"}
{"id": "CLEVR_dev_2970", "input": "Is the cube the same color as the large cylinder?", "output": "[\"SELECT['cube']\", \"PROJECT['color of #REF', '#1']\", \"SELECT['cylinders']\", \"FILTER['#3', 'that is large']\", \"PROJECT['color of #REF', '#4']\", \"BOOLEAN['#2', 'the same as #5']\"]"}
{"id": "CLEVR_dev_2971", "input": "Are all the cylinders shiny?", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'that are shiny']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'the same as #4']\"]"}
{"id": "CLEVR_dev_2973", "input": "How many cubes are small and shiny?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that are small']\", \"FILTER['#1', 'that are shiny']\", \"INTERSECTION['#1', '#2', '#3']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "CLEVR_dev_2974", "input": "What material is seen the most?", "output": "[\"SELECT['material']\", \"FILTER['#1', 'that is seen the most']\"]"}
{"id": "CLEVR_dev_2980", "input": "What is the shape of the red object?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is red']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_2981", "input": "What is the color of the object right in front of the yellow cube?", "output": "[\"SELECT['yellow cube']\", \"PROJECT['object right in front of #REF', '#1']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_2983", "input": "How many purple matte objects are there?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are purple']\", \"FILTER['#2', 'that are matte']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_2987", "input": "how many shiny balls are there that are not in the front", "output": "[\"SELECT['balls']\", \"FILTER['#1', 'that are shiny']\", \"FILTER['#2', 'that are in the front']\", \"DISCARD['#2', '#3']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "CLEVR_dev_2990", "input": "Are there equal amounts of each shape?", "output": "[\"SELECT['objects']\", \"PROJECT['shapes of #REF', '#1']\", \"GROUP['count', '#1', '#2']\", \"BOOLEAN['#3', 'are equal']\"]"}
{"id": "CLEVR_dev_2991", "input": "How many of the large cubes are matte?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that are large']\", \"FILTER['#2', 'that are matte']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_2996", "input": "what shape is on the right?", "output": "[\"SELECT['shapes']\", \"FILTER['#1', 'that is on the right']\"]"}
{"id": "CLEVR_dev_2999", "input": "Are there more items that are metallic or matte?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that are metallic']\", \"FILTER['#1', 'that are matte']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"COMPARISON['max', '#4', '#5']\"]"}
{"id": "CLEVR_dev_30", "input": "How many spheres are in this picture?", "output": "[\"SELECT['spheres in this picture']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_3000", "input": "How many yellow objects are cubes?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are yellow']\", \"FILTER['#2', 'that are cubes']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_3001", "input": "What color is the block behind the shiny purple cylinder?", "output": "[\"SELECT['the shiny purple cylinder']\", \"SELECT['blocks']\", \"FILTER['#2', 'that are behind #1']\", \"PROJECT['the color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_3003", "input": "How many cubes match the color of the sphere?", "output": "[\"SELECT['cubes']\", \"SELECT['sphere']\", \"PROJECT['colors of #REF', '#1']\", \"PROJECT['color of #REF', '#2']\", \"COMPARATIVE['#1', '#3', 'is the same as #4']\", \"AGGREGATE['count', '#5']\"]"}
{"id": "CLEVR_dev_3009", "input": "Are all the objects cylinders?", "output": "[\"SELECT['objects']\", \"SELECT['cylinders']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to #4']\"]"}
{"id": "CLEVR_dev_301", "input": "What color are the two balls shown here?", "output": "[\"SELECT['balls']\", \"PROJECT['color of two #REF', '#1']\"]"}
{"id": "CLEVR_dev_3016", "input": "How many objects are yellow spheres?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are yellow spheres']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_3018", "input": "what color is the cube in front?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that are in the front']\", \"PROJECT['the color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_3021", "input": "Are any balls blue or red?", "output": "[\"SELECT['balls']\", \"FILTER['#1', 'that are blue']\", \"FILTER['#1', 'that are red']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"ARITHMETIC['sum', '#4', '#5']\", \"BOOLEAN['#6', 'higher than zero']\"]"}
{"id": "CLEVR_dev_3022", "input": "How many objects are either spherical or square?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is spherical']\", \"AGGREGATE['count', '#2']\", \"FILTER['#1', 'that is square']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['sum', '#3', '#5']\"]"}
{"id": "CLEVR_dev_3023", "input": "How many cylinders are to the left of the tan cube?", "output": "[\"SELECT['cylinders']\", \"SELECT['cubes']\", \"FILTER['#2', 'that is tan']\", \"FILTER['#1', 'that are to the left of #3']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "CLEVR_dev_3032", "input": "Are the cubes larger than the cylinder?", "output": "[\"SELECT['cubes']\", \"SELECT['cylinder']\", \"BOOLEAN['#1', 'larger than #2']\"]"}
{"id": "CLEVR_dev_3034", "input": "What color object is closest to the front?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are closest to the front']\", \"PROJECT['the color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_3035", "input": "Are all of the cylinders large and shiny?", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'that are large']\", \"FILTER['#2', 'that are shiny']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#4', 'is equal to #5']\"]"}
{"id": "CLEVR_dev_3036", "input": "How many objects are to the right of the light blue sphere?", "output": "[\"SELECT['the light blue sphere']\", \"PROJECT['objects to the right of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_3038", "input": "Are there five metallic items here?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that are metallic']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is five']\"]"}
{"id": "CLEVR_dev_3040", "input": "How many cyan colored cylinders that are large do you see?", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'that are large']\", \"FILTER['#2', 'that are cyan colored']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_3042", "input": "How many matte blue balls are there?", "output": "[\"SELECT['balls']\", \"FILTER['#1', 'that are matte']\", \"FILTER['#2', 'that are blue']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_3046", "input": "Are all the objects the same color?", "output": "[\"SELECT['objects']\", \"PROJECT['colors of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is one']\"]"}
{"id": "CLEVR_dev_3047", "input": "What shape is the object directly behind the gray sphere?", "output": "[\"SELECT['the gray sphere']\", \"PROJECT['the object directly behind #REF', '#1']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_3057", "input": "How many objects can roll?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that can roll']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_3059", "input": "Are there more purple or silver objects?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are purple']\", \"AGGREGATE['count', '#2']\", \"FILTER['#1', 'that are silver']\", \"AGGREGATE['count', '#4']\", \"COMPARISON['max', '#3', '#5']\"]"}
{"id": "CLEVR_dev_3063", "input": "what color is the backmost sphere?", "output": "[\"SELECT['sphere']\", \"FILTER['#1', 'that is backmost']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_3064", "input": "How many cyan things are in the picture?", "output": "[\"SELECT['cyan things']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_3069", "input": "What shape is the object partially hidden by the metalic green sphere?", "output": "[\"SELECT['objects']\", \"SELECT['metalic sphere']\", \"FILTER['#2', 'that is green']\", \"FILTER['#1', 'partially hidden by #3']\", \"PROJECT['shape of #REF', '#4']\"]"}
{"id": "CLEVR_dev_3070", "input": "What is the color of the object in the middle of the large cylinder and large cyan cube?", "output": "[\"SELECT['the large cylinder']\", \"SELECT['the large cyan cube']\", \"SELECT['objects']\", \"FILTER['#3', 'that are in the middle of #1 and #2']\", \"PROJECT['the color of #REF', '#4']\"]"}
{"id": "CLEVR_dev_3072", "input": "Are the metallic spheres the same color and size?", "output": "[\"SELECT['spheres']\", \"FILTER['#1', 'that are metallic']\", \"PROJECT['colors of #REF', '#2']\", \"PROJECT['sizes of #REF', '#2']\", \"BOOLEAN['#3', 'are the same']\", \"BOOLEAN['#4', 'are the same']\", \"UNION['#5', '#6']\"]"}
{"id": "CLEVR_dev_3076", "input": "What is the color of the small item?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that is small']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_3077", "input": "What color is the ball in the back?", "output": "[\"SELECT['balls']\", \"FILTER['#1', 'that is in the back']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_3078", "input": "What shape is being blocked by the brown cylinder?", "output": "[\"SELECT['shapes']\", \"SELECT['brown cylinder']\", \"FILTER['#1', 'blocked by #2']\"]"}
{"id": "CLEVR_dev_308", "input": "Are all the objects in the picture metal?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are metal']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'the same as #4']\"]"}
{"id": "CLEVR_dev_3086", "input": "what shape is in the front?", "output": "[\"SELECT['shape']\", \"FILTER['#1', 'that is in the front']\"]"}
{"id": "CLEVR_dev_3089", "input": "how many of the balls are shiny?", "output": "[\"SELECT['balls']\", \"FILTER['#1', 'that are shiny']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_309", "input": "Is the shiny cylinder next to the green square?", "output": "[\"SELECT['squares']\", \"SELECT['cylinders']\", \"FILTER['#1', 'that is green']\", \"FILTER['#2', 'that is shiny']\", \"BOOLEAN['#4', 'next to #3']\"]"}
{"id": "CLEVR_dev_3090", "input": "Is the cube to the left of the blue cylinder?", "output": "[\"SELECT['cube']\", \"SELECT['blue cylinder']\", \"BOOLEAN['#1', 'to the left of #2']\"]"}
{"id": "CLEVR_dev_3091", "input": "Are there any metallic small spheres?", "output": "[\"SELECT['metallic spheres']\", \"FILTER['#1', 'that are small']\", \"BOOLEAN['#2', 'are there any #REF']\"]"}
{"id": "CLEVR_dev_3094", "input": "Is the object in front of the purple sphere shiny?", "output": "[\"SELECT['sphere']\", \"FILTER['#1', 'that is purple']\", \"SELECT['objects']\", \"FILTER['#3', 'that are in front of #2']\", \"BOOLEAN['#4', 'is shiny']\"]"}
{"id": "CLEVR_dev_3099", "input": "How many purple cubes and green balls are there?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that is purple']\", \"SELECT['balls']\", \"FILTER['#3', 'that is green']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['sum', '#5', '#6']\"]"}
{"id": "CLEVR_dev_3104", "input": "How many object are there?", "output": "[\"SELECT['objects']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_3110", "input": "Are there more metallic objects than matte objects?", "output": "[\"SELECT['metallic objects']\", \"SELECT['matte objects']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'higher than #4']\"]"}
{"id": "CLEVR_dev_3111", "input": "Are the two small objects the same color and material?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are small']\", \"PROJECT['colors of #REF', '#2']\", \"PROJECT['materials of #REF', '#2']\", \"BOOLEAN['#3', 'if the two #REF are the same']\", \"BOOLEAN['#4', 'if the two #REF are the same']\", \"UNION['#5', '#6']\"]"}
{"id": "CLEVR_dev_3116", "input": "Are the two spheres in front the same size and material?", "output": "[\"SELECT['spheres']\", \"FILTER['#1', 'that are in the front']\", \"PROJECT['sizes of #REF', '#2']\", \"PROJECT['materials of #REF', '#2']\", \"BOOLEAN['#3', 'are the same']\", \"BOOLEAN['#4', 'are the same']\", \"BOOLEAN['logical_and', 'true', '#5', '#6']\"]"}
{"id": "CLEVR_dev_312", "input": "How many cubes are yellow and matte?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that are yellow']\", \"FILTER['#2', 'that are matte']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_3122", "input": "Is there a red object shown?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is red']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'more than zero']\"]"}
{"id": "CLEVR_dev_3124", "input": "How many metallic shapes are shown?", "output": "[\"SELECT['shapes']\", \"FILTER['#1', 'that are metallic']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_3126", "input": "How many brown cubes are behind the large brown object?", "output": "[\"SELECT['brown cubes']\", \"SELECT['large object']\", \"FILTER['#2', 'that is brown']\", \"FILTER['#1', 'behind #3']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "CLEVR_dev_3127", "input": "Is the number of brown objects the same as the number of gray objects?", "output": "[\"SELECT['brown objects']\", \"SELECT['gray objects']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'the same as #4']\"]"}
{"id": "CLEVR_dev_313", "input": "Is the smaller item made of the same material as the larger objects?", "output": "[\"SELECT['smaller item']\", \"SELECT['larger objects']\", \"PROJECT['material of #REF', '#1']\", \"PROJECT['material of #REF', '#2']\", \"BOOLEAN['#3', 'the same as #4']\"]"}
{"id": "CLEVR_dev_3130", "input": "There is a small metallic sphere and a small rubber sphere, are those objects in front of the small metallic cube?", "output": "[\"SELECT['cube']\", \"FILTER['#1', 'that is small']\", \"FILTER['#2', 'that is metallic']\", \"SELECT['sphere']\", \"FILTER['#4', 'that is small']\", \"FILTER['#5', 'that is metallic']\", \"FILTER['#5', 'that is rubber']\", \"BOOLEAN['#6', 'is in front of #3']\", \"BOOLEAN['#7', 'is in front of #3']\", \"BOOLEAN['logical_and', 'true', '#8', '#9']\"]"}
{"id": "CLEVR_dev_3134", "input": "Are both green objects spheres?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are green']\", \"SELECT['spheres']\", \"FILTER['#3', 'that are green']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to #6']\"]"}
{"id": "CLEVR_dev_3136", "input": "what is the shape of the largest object in the picture?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'in the picture']\", \"AGGREGATE['max', '#2']\", \"PROJECT['shape of #REF', '#3']\"]"}
{"id": "CLEVR_dev_3137", "input": "Is there a cube present?", "output": "[\"SELECT['cubes']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is higher than zero']\"]"}
{"id": "CLEVR_dev_3141", "input": "Are there any blue items that aren't metallic?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that are blue']\", \"FILTER['#2', 'that are metallic']\", \"DISCARD['#2', '#3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'more than zero']\"]"}
{"id": "CLEVR_dev_3147", "input": "How many small items do you see?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that are small']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_3149", "input": "how many cylinders are large", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'that are large']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_3151", "input": "How many red big squares are there?", "output": "[\"SELECT['red big squares']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_3156", "input": "Are there more small spheres than there are large spheres?", "output": "[\"SELECT['small spheres']\", \"SELECT['large spheres']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'higher than #4']\"]"}
{"id": "CLEVR_dev_3162", "input": "what color is the shape in the back?", "output": "[\"SELECT['the shapes']\", \"FILTER['#1', 'that is in the back']\", \"PROJECT['the color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_3163", "input": "what color are the spheres?", "output": "[\"SELECT['spheres']\", \"PROJECT['color of #REF', '#1']\"]"}
{"id": "CLEVR_dev_3168", "input": "which color has the most objects present out of all of the objects?", "output": "[\"SELECT['colors']\", \"PROJECT['objects of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"SUPERLATIVE['max', '#1', '#3']\"]"}
{"id": "CLEVR_dev_3172", "input": "How many shiny blocks are there?", "output": "[\"SELECT['blocks']\", \"FILTER['#1', 'that are shiny']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_3178", "input": "Is the number of cylinders equal to the number of matte spheres?", "output": "[\"SELECT['cylinders']\", \"SELECT['spheres']\", \"FILTER['#2', 'that are matte']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to #5']\"]"}
{"id": "CLEVR_dev_3181", "input": "Are all the shiny spheres green?", "output": "[\"SELECT['shiny spheres']\", \"FILTER['#1', 'that are green']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'the same as #4']\"]"}
{"id": "CLEVR_dev_3186", "input": "What is the color of the object behind the cyan cylinder?", "output": "[\"SELECT['object']\", \"SELECT['cyan cylinder']\", \"FILTER['#1', 'behind #2']\", \"PROJECT['color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_32", "input": "What color block is farthest front?", "output": "[\"SELECT['blocks']\", \"FILTER['#1', 'that is farthest front']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_320", "input": "What color is the same for a cube and cylinder?", "output": "[\"SELECT['cubes']\", \"PROJECT['the colors of #REF', '#1']\", \"SELECT['cylinders']\", \"PROJECT['the colors of #REF', '#3']\", \"SELECT['the colors']\", \"INTERSECTION['#5', '#2', '#4']\"]"}
{"id": "CLEVR_dev_3206", "input": "Is there an object that has the same shape as the green cylinder?", "output": "[\"SELECT['cylinder']\", \"FILTER['#1', 'that is green']\", \"PROJECT['shape of #REF', '#2']\", \"SELECT['object']\", \"PROJECT['shape of #REF', '#4']\", \"COMPARATIVE['#4', '#5', 'is same as #3']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is more than zero']\"]"}
{"id": "CLEVR_dev_321", "input": "What is next to the large purple cylinder?", "output": "[\"SELECT['large purple cylinder']\", \"PROJECT['What is next to #REF', '#1']\"]"}
{"id": "CLEVR_dev_3210", "input": "Which color are most of the matte objects?", "output": "[\"SELECT['colors']\", \"PROJECT['matte objects of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"SUPERLATIVE['max', '#1', '#3']\"]"}
{"id": "CLEVR_dev_3211", "input": "Is the small object a shiny cube?", "output": "[\"SELECT['small object']\", \"SELECT['shiny cube']\", \"BOOLEAN['#1', 'the same as #2']\"]"}
{"id": "CLEVR_dev_3214", "input": "How many red and blue shiny spheres are there?", "output": "[\"SELECT['spheres']\", \"FILTER['#1', 'that are shiny']\", \"FILTER['#2', 'that are red']\", \"FILTER['#2', 'that are blue']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['sum', '#5', '#6']\"]"}
{"id": "CLEVR_dev_3217", "input": "What color is the small metallic object?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are small']\", \"FILTER['#2', 'that are metallic']\", \"PROJECT['color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_322", "input": "What is the only repeating color in this image?", "output": "[\"SELECT['colors']\", \"FILTER['#1', 'that is repeating']\"]"}
{"id": "CLEVR_dev_3221", "input": "How many metallic items are there?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that are metallic']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_3222", "input": "Are all the spheres shiny?", "output": "[\"SELECT['spheres']\", \"FILTER['#1', 'that are shiny']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'the same as #4']\"]"}
{"id": "CLEVR_dev_3223", "input": "What number of objects are red or are cubes?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are red']\", \"FILTER['#1', 'that are cubes']\", \"DISCARD['#3', '#2']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['sum', '#5', '#6']\"]"}
{"id": "CLEVR_dev_323", "input": "are there more metal or rubber spheres?", "output": "[\"SELECT['metal spheres']\", \"SELECT['rubber spheres']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"COMPARISON['max', '#3', '#4']\"]"}
{"id": "CLEVR_dev_3232", "input": "What is the number of cool toned objects that are behind the green cube?", "output": "[\"SELECT['the green cube']\", \"SELECT['objects']\", \"FILTER['#2', 'that are behind #1']\", \"FILTER['#3', 'that are cool toned']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "CLEVR_dev_3242", "input": "are there more cubes or spheres showing", "output": "[\"SELECT['cubes showing']\", \"SELECT['spheres showing']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"COMPARISON['max', '#3', '#4']\"]"}
{"id": "CLEVR_dev_3249", "input": "Are the yellow objects the same size?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are yellow']\", \"PROJECT['sizes of #REF', '#2']\", \"BOOLEAN['#3', 'the same']\"]"}
{"id": "CLEVR_dev_3252", "input": "Is the large green sphere the same material as the object to the left of the green cylinder?", "output": "[\"SELECT['green sphere']\", \"FILTER['#1', 'that Is large']\", \"SELECT['objects']\", \"SELECT['green cylinder']\", \"FILTER['#3', 'to the left of #4']\", \"PROJECT['material of #REF', '#2']\", \"PROJECT['material of #REF', '#5']\", \"BOOLEAN['#6', 'the same as #7']\"]"}
{"id": "CLEVR_dev_3253", "input": "Are all of the cubes blue and metallic?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that are blue']\", \"FILTER['#2', 'that are metallic']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#4', 'and #5 are equal']\"]"}
{"id": "CLEVR_dev_3264", "input": "what color is the large ball?", "output": "[\"SELECT['large ball']\", \"PROJECT['color of #REF', '#1']\"]"}
{"id": "CLEVR_dev_3267", "input": "What is the largest object in the picture?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is the largest']\"]"}
{"id": "CLEVR_dev_3271", "input": "how many shapes have the same material as the only brown shape?", "output": "[\"SELECT['shapes']\", \"SELECT['brown shape']\", \"PROJECT['materials of #REF', '#1']\", \"PROJECT['material of #REF', '#2']\", \"COMPARATIVE['#1', '#3', 'is the same as #4']\", \"AGGREGATE['count', '#5']\"]"}
{"id": "CLEVR_dev_3273", "input": "what shape is shown the most?", "output": "[\"SELECT['shapes']\", \"FILTER['#1', 'that is shown the most']\"]"}
{"id": "CLEVR_dev_3280", "input": "What shape is the turquoise metallic object?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are turquoise']\", \"FILTER['#2', 'that are metallic']\", \"PROJECT['shape of #REF', '#3']\"]"}
{"id": "CLEVR_dev_3281", "input": "Are the large objects made out of the same material?", "output": "[\"SELECT['large objects']\", \"PROJECT['materials of #REF', '#1']\", \"BOOLEAN['#2', 'the same']\"]"}
{"id": "CLEVR_dev_3283", "input": "what color is the object parallel to the red cube?", "output": "[\"SELECT['red cube']\", \"PROJECT['object parallel to #REF', '#1']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_3288", "input": "What shape do a small red object and a small green object share?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are small']\", \"FILTER['#2', 'that are red']\", \"FILTER['#2', 'that are green']\", \"PROJECT['shapes of #REF', '#3']\", \"PROJECT['shapes of #REF', '#4']\", \"SELECT['shapes']\", \"INTERSECTION['#7', '#5', '#6']\"]"}
{"id": "CLEVR_dev_329", "input": "What shape is the one shiny object in this picture?", "output": "[\"SELECT['shiny object']\", \"PROJECT['shape of #REF', '#1']\"]"}
{"id": "CLEVR_dev_3292", "input": "Is the ball shiny or matte?", "output": "[\"SELECT['the ball']\", \"BOOLEAN['#1', 'is shiny']\", \"BOOLEAN['#1', 'is matte']\", \"UNION['#2', '#3']\"]"}
{"id": "CLEVR_dev_3294", "input": "How many metal cubes are there?", "output": "[\"SELECT['metal cubes']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_33", "input": "Which type of shape occurs least frequently?", "output": "[\"SELECT['objects']\", \"PROJECT['shapes of #REF', '#1']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is the lowest']\"]"}
{"id": "CLEVR_dev_3300", "input": "Are there any yellow cylinders in front of the cube?", "output": "[\"SELECT['yellow cylinders']\", \"SELECT['cube']\", \"FILTER['#1', 'in front of #2']\", \"BOOLEAN['#3', 'are there any #REF']\"]"}
{"id": "CLEVR_dev_3301", "input": "Are all of the yellow objects matte?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are yellow']\", \"FILTER['#2', 'that are matte']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to #5']\"]"}
{"id": "CLEVR_dev_3309", "input": "Which shape is the outlier?", "output": "[\"SELECT['shapes']\", \"FILTER['#1', 'that is the outlier']\"]"}
{"id": "CLEVR_dev_3311", "input": "How many items are neither metal nor cubes?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that are metal']\", \"DISCARD['#1', '#2']\", \"FILTER['#1', 'that are cubes']\", \"DISCARD['#1', '#4']\", \"INTERSECTION['#1', '#3', '#5']\", \"AGGREGATE['count', '#6']\"]"}
{"id": "CLEVR_dev_3312", "input": "Are there an equal number of squares and matte objects?", "output": "[\"SELECT['squares']\", \"SELECT['matte objects']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'equal to #4']\"]"}
{"id": "CLEVR_dev_3316", "input": "Are there any red spheres?", "output": "[\"SELECT['red spheres']\", \"BOOLEAN['#1', 'are there any #REF']\"]"}
{"id": "CLEVR_dev_3317", "input": "The small red spear is what material?", "output": "[\"SELECT['small spear']\", \"FILTER['#1', 'that is red']\", \"PROJECT['material of #REF', '#2']\"]"}
{"id": "CLEVR_dev_3318", "input": "What shape is the only large item?", "output": "[\"SELECT['large item']\", \"PROJECT['shape of #REF', '#1']\"]"}
{"id": "CLEVR_dev_3319", "input": "Is the large sphere the same color as the small cube?", "output": "[\"SELECT['large sphere']\", \"SELECT['small cube']\", \"PROJECT['color of #REF', '#1']\", \"PROJECT['color of #REF', '#2']\", \"BOOLEAN['#3', 'is the same as #4']\"]"}
{"id": "CLEVR_dev_332", "input": "Is the cube of higher volume than the rest combined?", "output": "[\"SELECT['cube']\", \"SELECT['the rest']\", \"PROJECT['volume of #REF', '#1']\", \"PROJECT['volumes of #REF', '#2']\", \"AGGREGATE['sum', '#4']\", \"BOOLEAN['#3', 'higher than #5']\"]"}
{"id": "CLEVR_dev_3323", "input": "Are all the purple items the same shape?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that are purple']\", \"PROJECT['the shape of #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to one']\"]"}
{"id": "CLEVR_dev_3325", "input": "How many matte objects are there to the right of the blue object? ", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are matte']\", \"FILTER['#1', 'that is blue']\", \"FILTER['#2', 'that is to the right of #3']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "CLEVR_dev_3335", "input": "how many cubes is there?", "output": "[\"SELECT['cubes']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_3337", "input": "What color is the object behind the green sphere?", "output": "[\"SELECT['objects']\", \"SELECT['green sphere']\", \"FILTER['#1', 'behind #2']\", \"PROJECT['color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_3338", "input": "Is the sphere the same color as any of the large objects?", "output": "[\"SELECT['sphere']\", \"SELECT['large objects']\", \"PROJECT['color of #REF', '#1']\", \"PROJECT['colors of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is the same as #4']\", \"BOOLEAN['#5', 'is there any #REF']\"]"}
{"id": "CLEVR_dev_3339", "input": "What color is the block in the middle of the three blocks?", "output": "[\"SELECT['blocks']\", \"PROJECT['three of #REF', '#1']\", \"FILTER['#1', 'in the middle of #2']\", \"PROJECT['colors of #REF', '#3']\"]"}
{"id": "CLEVR_dev_3350", "input": "How many small matte cylinders are there?", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'that are small']\", \"FILTER['#2', 'that are matte']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_3372", "input": "Is there an object with the same color as the small cylinder?", "output": "[\"SELECT['objects']\", \"SELECT['small cylinder']\", \"PROJECT['color of #REF', '#1']\", \"PROJECT['color of #REF', '#2']\", \"COMPARATIVE['#1', '#3', 'is the same as #4']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is higher than zero']\"]"}
{"id": "CLEVR_dev_3375", "input": "Are there more cylinders or cubes?", "output": "[\"SELECT['cylinders']\", \"SELECT['cubes']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"COMPARISON['max', '#3', '#4']\"]"}
{"id": "CLEVR_dev_3376", "input": "If there's a purple item, what shape is it?", "output": "[\"SELECT['purple item']\", \"PROJECT['shape of #REF', '#1']\"]"}
{"id": "CLEVR_dev_3383", "input": "How many metallic objects are to the left of the purple object?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are metallic']\", \"FILTER['#1', 'that is purple']\", \"FILTER['#2', 'that are to the left of #3']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "CLEVR_dev_3385", "input": "Are both silver objects shiny?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are silver']\", \"BOOLEAN['#2', 'if both #REF are shiny']\"]"}
{"id": "CLEVR_dev_339", "input": "are there more metallic objects or more matte objects?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are metallic']\", \"FILTER['#1', 'that are matte']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"COMPARISON['max', '#4', '#5']\"]"}
{"id": "CLEVR_dev_340", "input": "What color in photo is the same as an elephant?", "output": "[\"SELECT['colors']\", \"FILTER['#1', 'that is the same as an elephant']\"]"}
{"id": "CLEVR_dev_3401", "input": "how many gray cubes are there ", "output": "[\"SELECT['gray cubes']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_3403", "input": "What shape is the object between the red cylinder and green cube?", "output": "[\"SELECT['cylinder']\", \"FILTER['#1', 'that is red']\", \"SELECT['cube']\", \"FILTER['#3', 'that is green']\", \"SELECT['object']\", \"INTERSECTION['#5', '#2', '#4']\", \"PROJECT['shape of #REF', '#6']\"]"}
{"id": "CLEVR_dev_3408", "input": "Are there any gold spheres? ", "output": "[\"SELECT['spheres']\", \"FILTER['#1', 'that are gold']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is more than zero']\"]"}
{"id": "CLEVR_dev_3410", "input": "Is the large gray object the same shape as the small green object?", "output": "[\"SELECT['large object']\", \"FILTER['#1', 'that is gray']\", \"SELECT['small object']\", \"FILTER['#3', 'that is green']\", \"PROJECT['shape of #REF', '#2']\", \"PROJECT['shape of #REF', '#4']\", \"BOOLEAN['#5', 'is the same as #6']\"]"}
{"id": "CLEVR_dev_3411", "input": "what color is small cube?", "output": "[\"SELECT['cube']\", \"FILTER['#1', 'that is small']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_3414", "input": "Is the largest object pictures matte or metallic?", "output": "[\"SELECT['object']\", \"AGGREGATE['max', '#1']\", \"BOOLEAN['#2', 'is matte']\", \"BOOLEAN['#2', 'is metallic']\", \"UNION['#3', '#4']\"]"}
{"id": "CLEVR_dev_3416", "input": "Is the sphere on the left and the cylinder the same color?", "output": "[\"SELECT['sphere']\", \"FILTER['#1', 'that is on the left']\", \"SELECT['cylinder']\", \"PROJECT['color of #REF', '#2']\", \"PROJECT['color of #REF', '#3']\", \"BOOLEAN['#4', 'is the same as #5']\"]"}
{"id": "CLEVR_dev_3418", "input": "What color is the object closest to the large object?", "output": "[\"SELECT['large object']\", \"PROJECT['object closest to #REF', '#1']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_3419", "input": "Is there any objects to the right of the large cube that are the same color?", "output": "[\"SELECT['the large cube']\", \"PROJECT['color of #REF', '#1']\", \"SELECT['objects']\", \"FILTER['#3', 'that are to the right of #1']\", \"PROJECT['colors of #REF', '#4']\", \"COMPARATIVE['#4', '#5', 'is the same as #2']\", \"BOOLEAN['#6', 'if there are any #REF']\"]"}
{"id": "CLEVR_dev_3420", "input": "are there more small cylinders than large?", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'that are small']\", \"FILTER['#1', 'that are large']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is more than #5']\"]"}
{"id": "CLEVR_dev_3430", "input": "Are there more matte spheres than metallic spheres?", "output": "[\"SELECT['spheres']\", \"FILTER['#1', 'that are matte']\", \"FILTER['#1', 'that are metallic']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'more than #5']\"]"}
{"id": "CLEVR_dev_3434", "input": "How many items are small and not green?", "output": "[\"SELECT['small items']\", \"FILTER['#1', 'that are not green']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_3438", "input": "What color is the closest object?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are the closest']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_3443", "input": "What color is the matte small cube?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that is matte']\", \"FILTER['#2', 'that is small']\", \"PROJECT['color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_3444", "input": "How many objects are shiny spheres?", "output": "[\"SELECT['shiny spheres']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_3445", "input": "what color is shown most?", "output": "[\"SELECT['objects']\", \"PROJECT['colors of #REF', '#1']\", \"GROUP['count', '#1', '#2']\", \"SUPERLATIVE['max', '#2', '#3']\"]"}
{"id": "CLEVR_dev_3447", "input": "What is the shape of the red object behind the gray cube?", "output": "[\"SELECT['red object']\", \"SELECT['gray cube']\", \"FILTER['#1', 'behind #2']\", \"PROJECT['shape of #REF', '#3']\"]"}
{"id": "CLEVR_dev_3449", "input": "How many shapes are small and metallic?", "output": "[\"SELECT['shapes']\", \"FILTER['#1', 'which are small']\", \"FILTER['#2', 'that are metallic']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_3452", "input": "How many other objects are the same color as the cylinder on the right?", "output": "[\"SELECT['objects']\", \"SELECT['cylinder']\", \"FILTER['#2', 'that is on the right']\", \"PROJECT['colors of #REF', '#1']\", \"PROJECT['color of #REF', '#3']\", \"COMPARATIVE['#1', '#4', 'is the same as #5']\", \"AGGREGATE['count', '#6']\"]"}
{"id": "CLEVR_dev_3456", "input": "How many more metallic spheres are there than metallic cylinders?", "output": "[\"SELECT['metallic spheres']\", \"SELECT['metallic cylinders']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "CLEVR_dev_3460", "input": "What color is the small cube to the left of the brown cylinder?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that is small']\", \"SELECT['cylinders']\", \"FILTER['#3', 'that is brown']\", \"FILTER['#2', 'to the left of #4']\", \"PROJECT['color of #REF', '#5']\"]"}
{"id": "CLEVR_dev_3466", "input": "How many metallic objects are to the left of the yellow object?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are yellow']\", \"FILTER['#1', 'that are metallic']\", \"FILTER['#3', 'that are to the left of #2']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "CLEVR_dev_3469", "input": "How many of the objects are blue?", "output": "[\"SELECT['blue objects']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_3474", "input": "Is there an object the same color as the sphere?", "output": "[\"SELECT['objects']\", \"SELECT['sphere']\", \"PROJECT['colors of #REF', '#1']\", \"PROJECT['color of #REF', '#3']\", \"COMPARATIVE['#1', '#3', 'is the same as #4']\", \"BOOLEAN['#5', 'is there any #REF']\"]"}
{"id": "CLEVR_dev_3476", "input": "What is the color that shows up most?", "output": "[\"SELECT['colors']\", \"FILTER['#1', 'that shows up most']\"]"}
{"id": "CLEVR_dev_3479", "input": "What color shape is hiding behind the big yellow cube?", "output": "[\"SELECT['shape']\", \"SELECT['big cube']\", \"FILTER['#2', 'that is yellow']\", \"FILTER['#1', 'hiding behind #3']\", \"PROJECT['color of #REF', '#4']\"]"}
{"id": "CLEVR_dev_348", "input": "What color is the circle to the right of the image?", "output": "[\"SELECT['circles']\", \"FILTER['#1', 'that are to the right of the image']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_3491", "input": "Are there any large balls the same color as the small ball?", "output": "[\"SELECT['balls']\", \"FILTER['#1', 'that are small']\", \"PROJECT['color of #REF', '#2']\", \"FILTER['#1', 'that are large']\", \"PROJECT['colors of #REF', '#4']\", \"COMPARATIVE['#4', '#5', 'is the same as #3']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is at least one']\"]"}
{"id": "CLEVR_dev_3498", "input": "What is the color of the object partly hidden behind the big green cylinder?", "output": "[\"SELECT['big green cylinder']\", \"PROJECT['object partly hidden behind #REF', '#1']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_3499", "input": "How many spheres are the same color and material?", "output": "[\"SELECT['spheres']\", \"PROJECT['colors of #REF', '#1']\", \"PROJECT['materials of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'are the same']\", \"COMPARATIVE['#1', '#3', 'are the same']\", \"INTERSECTION['#1', '#4', '#5']\", \"AGGREGATE['count', '#6']\"]"}
{"id": "CLEVR_dev_350", "input": "How many cubes share the same color in this image?", "output": "[\"SELECT['cubes']\", \"PROJECT['colors of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'are the same']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_3504", "input": "how many tan items are there?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that are tan']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_3508", "input": "Is the yellow sphere behind a blue cylinder?", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'that are blue']\", \"PROJECT['spheres behind of #REF', '#2']\", \"FILTER['#3', 'that are yellow']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is one']\"]"}
{"id": "CLEVR_dev_3510", "input": "What is the shape of the object that is partly hidden?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is partly hidden']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_3512", "input": "What is the shape reflected on the blue cube?", "output": "[\"SELECT['blue cube']\", \"PROJECT['shape reflected on #REF', '#1']\"]"}
{"id": "CLEVR_dev_3515", "input": "What color is most common among the objects?", "output": "[\"SELECT['colors']\", \"PROJECT['objects of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"SUPERLATIVE['max', '#1', '#3']\"]"}
{"id": "CLEVR_dev_3529", "input": "How many nonmetallic objects are there?", "output": "[\"SELECT['nonmetallic objects']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_3534", "input": "what shape is half hidden?", "output": "[\"SELECT['shapes']\", \"FILTER['#1', 'that is half hidden']\"]"}
{"id": "CLEVR_dev_354", "input": "Does the yellow cylinder casting shadows?", "output": "[\"SELECT['yellow cylinder']\", \"PROJECT['Does #REF cast shadows', '#1']\"]"}
{"id": "CLEVR_dev_3546", "input": "Are the cubes all different colors?", "output": "[\"SELECT['cubes']\", \"PROJECT['the color of #REF', '#1']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is the same as #4']\"]"}
{"id": "CLEVR_dev_3547", "input": "Is there an object with the same color as sphere?", "output": "[\"SELECT['objects']\", \"SELECT['sphere']\", \"PROJECT['colors of #REF', '#1']\", \"PROJECT['color of #REF', '#2']\", \"COMPARATIVE['#1', '#3', 'is the same as #4']\", \"BOOLEAN['#5', 'is there any #REF']\"]"}
{"id": "CLEVR_dev_3551", "input": "what is the only shape present?", "output": "[\"SELECT['objects']\", \"PROJECT['shapes of #REF', '#1']\"]"}
{"id": "CLEVR_dev_3552", "input": "Are most of the large green objects cubes?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are large']\", \"FILTER['#2', 'that are green']\", \"BOOLEAN['#3', 'if most of #REF are cubes']\"]"}
{"id": "CLEVR_dev_3554", "input": "How many pairs of items the same color are there?", "output": "[\"SELECT['colors']\", \"PROJECT['items of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is pairs']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "CLEVR_dev_356", "input": "what is the shape of the two objects that are not fully visible", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are fully visible']\", \"PROJECT['the two of #REF', '#1']\", \"DISCARD['#3', '#2']\", \"PROJECT['the shape of #REF', '#4']\"]"}
{"id": "CLEVR_dev_3566", "input": "What color is the cube directly in front of the blue cylinder?", "output": "[\"SELECT['the blue cylinder']\", \"SELECT['cubes']\", \"FILTER['#2', 'that are directly in front of #1']\", \"PROJECT['color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_3568", "input": "what color is the tiny ball?", "output": "[\"SELECT['balls']\", \"FILTER['#1', 'that are tiny']\", \"PROJECT['the color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_3570", "input": "What number of cyan objects are large?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are cyan']\", \"FILTER['#2', 'that are large']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_3573", "input": "What color do the two spheres share?", "output": "[\"SELECT['the spheres']\", \"PROJECT['color of #REF', '#1']\"]"}
{"id": "CLEVR_dev_3579", "input": "Is the small cylinder the same color as a large sphere?", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'that is small']\", \"PROJECT['color of #REF', '#2']\", \"SELECT['spheres']\", \"FILTER['#4', 'that is large']\", \"PROJECT['color of #REF', '#5']\", \"BOOLEAN['#3', 'the same as #6']\"]"}
{"id": "CLEVR_dev_358", "input": "Are there more shiny items or matte?", "output": "[\"SELECT['shiny items']\", \"SELECT['matte items']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"COMPARISON['max', '#3', '#4']\"]"}
{"id": "CLEVR_dev_3582", "input": "Are there any gold shapes?", "output": "[\"SELECT['gold shapes']\", \"BOOLEAN['#1', 'are there any #REF']\"]"}
{"id": "CLEVR_dev_3584", "input": "how many items are green?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that are green']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_3589", "input": "what color is the cylinder in the front?", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'that are in the front']\", \"PROJECT['the color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_3594", "input": "What shape is reflected on the red cube?", "output": "[\"SELECT['shapes']\", \"SELECT['red cube']\", \"FILTER['#1', 'reflected on #2']\"]"}
{"id": "CLEVR_dev_360", "input": "Is the red cylinder bigger than the yellow cylinder?", "output": "[\"SELECT['the red cylinder']\", \"SELECT['the yellow cylinder']\", \"PROJECT['size of #REF', '#1']\", \"PROJECT['size of #REF', '#2']\", \"BOOLEAN['#3', 'is higher than #4']\"]"}
{"id": "CLEVR_dev_3600", "input": "What color is the cylinder to the far right?", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'that is to the far right']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_3602", "input": "what color is the cylinder in the back?", "output": "[\"SELECT['cylinder']\", \"FILTER['#1', 'that is in the back']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_3607", "input": "what color is the small item in the very back of the picture behind the green cylinder?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that is green']\", \"FILTER['#2', 'that is cylinder']\", \"FILTER['#1', 'that is small']\", \"FILTER['#4', 'that is in the very back of the picture']\", \"FILTER['#5', 'that is behind #3']\", \"PROJECT['color of #REF', '#6']\"]"}
{"id": "CLEVR_dev_3608", "input": "Are any of the red objects shiny?", "output": "[\"SELECT['red objects']\", \"FILTER['#1', 'that are shiny']\", \"BOOLEAN['#2', 'are there any #REF']\"]"}
{"id": "CLEVR_dev_3609", "input": "How many items are to the left of the red ball?", "output": "[\"SELECT['items']\", \"SELECT['red ball']\", \"FILTER['#1', 'to the left of #2']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_361", "input": "how many objects are present in this picture?", "output": "[\"SELECT['objects']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_3610", "input": "What color is the cube closest to the blue sphere?", "output": "[\"SELECT['cube']\", \"SELECT['blue sphere']\", \"FILTER['#1', 'closest to #2']\", \"PROJECT['color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_3614", "input": "how many objects are behind the farthest away purple object?", "output": "[\"SELECT['objects']\", \"SELECT['purple object']\", \"FILTER['#2', 'that is farthest away']\", \"FILTER['#1', 'behind #3']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "CLEVR_dev_3615", "input": "How many other objects are the same material as the large blue object?", "output": "[\"SELECT['objects']\", \"SELECT['large object']\", \"FILTER['#2', 'that is blue']\", \"PROJECT['materials of #REF', '#1']\", \"PROJECT['material of #REF', '#3']\", \"COMPARATIVE['#1', '#4', 'is the same as #5']\", \"AGGREGATE['count', '#6']\"]"}
{"id": "CLEVR_dev_3617", "input": "How many large balls and matte cubes are in this image?", "output": "[\"SELECT['balls']\", \"FILTER['#1', 'that are large']\", \"AGGREGATE['count', '#2']\", \"SELECT['cubes']\", \"FILTER['#4', 'that are matte']\", \"AGGREGATE['count', '#5']\", \"ARITHMETIC['sum', '#3', '#6']\"]"}
{"id": "CLEVR_dev_362", "input": "Are the cubes pictured matte or metallic?", "output": "[\"SELECT['the cubes pictured']\", \"BOOLEAN['#1', 'are matte']\", \"BOOLEAN['#1', 'are metallic']\", \"UNION['#2', '#3']\"]"}
{"id": "CLEVR_dev_3623", "input": "What color is the block behind the large blue cylinder?", "output": "[\"SELECT['the large blue cylinder']\", \"PROJECT['block behind of #REF', '#1']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_3626", "input": "Is the purple cylinder the same size as the other cylinders?", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'that are purple']\", \"PROJECT['size of #REF', '#2']\", \"DISCARD['#1', '#2']\", \"PROJECT['sizes of #REF', '#4']\", \"BOOLEAN['#3', 'is the same as #5']\"]"}
{"id": "CLEVR_dev_3629", "input": "What small shape is behind the large, shiny cylinder on the right?", "output": "[\"SELECT['large shiny cylinder']\", \"FILTER['#1', 'that is on the right']\", \"PROJECT['small shape behind #REF', '#2']\"]"}
{"id": "CLEVR_dev_363", "input": "What shape is the object reflected in the furthest object from the camera?", "output": "[\"SELECT['object']\", \"FILTER['#1', 'furthest from the camera']\", \"FILTER['#1', 'reflected in #2']\", \"PROJECT['shape of #REF', '#3']\"]"}
{"id": "CLEVR_dev_3631", "input": "What material is the object behind the brown cylinder and left of the silver cylinder?", "output": "[\"SELECT['the brown cylinder']\", \"SELECT['the silver cylinder']\", \"SELECT['objects']\", \"FILTER['#3', 'that are behind #1']\", \"FILTER['#4', 'that are to the left of #2']\", \"PROJECT['the material of #REF', '#5']\"]"}
{"id": "CLEVR_dev_3637", "input": "How many objects are a ball?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are ball']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_364", "input": "Do all the objects have round sides?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'with round sides']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to #4']\"]"}
{"id": "CLEVR_dev_3640", "input": "What color is the item in the front?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that are in the front']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_3641", "input": "How many boxes are there if you subtract the number of spheres?", "output": "[\"SELECT['boxes']\", \"SELECT['spheres']\", \"PROJECT['number #REF', '#1']\", \"PROJECT['number #REF', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "CLEVR_dev_3642", "input": "Are there any spheres shown here?", "output": "[\"SELECT['spheres']\", \"BOOLEAN['#1', 'are there any #REF']\"]"}
{"id": "CLEVR_dev_3648", "input": "Are the two green squares the same size?", "output": "[\"SELECT['green squares']\", \"PROJECT['sizes of #REF', '#1']\", \"BOOLEAN['#2', 'both the same']\"]"}
{"id": "CLEVR_dev_3649", "input": "How many large metallic cubes are there?", "output": "[\"SELECT['large cubes']\", \"FILTER['#1', 'that are metallic']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_365", "input": "What is the shape of the gray object?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are gray']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_3650", "input": "What shape is between the cylinders?", "output": "[\"SELECT['cylinders']\", \"PROJECT['shape between #REF', '#1']\"]"}
{"id": "CLEVR_dev_3654", "input": "What shape are the gray items?", "output": "[\"SELECT['gray items']\", \"PROJECT['shape of #REF', '#1']\"]"}
{"id": "CLEVR_dev_3662", "input": "What shape is the item partially hidden?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that are partially hidden']\", \"PROJECT['the shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_3669", "input": "Are there more shiny objects than there are cubes?", "output": "[\"SELECT['shiny objects']\", \"SELECT['cubes']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'higher than #4']\"]"}
{"id": "CLEVR_dev_3676", "input": "What color is the large round object on the far right?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is round']\", \"FILTER['#2', 'that is large']\", \"FILTER['#3', 'on the far right']\", \"PROJECT['color of #REF', '#4']\"]"}
{"id": "CLEVR_dev_3679", "input": "What is the shape of the gray item?", "output": "[\"SELECT['gray item']\", \"PROJECT['shape of #REF', '#1']\"]"}
{"id": "CLEVR_dev_3681", "input": "how many different kind of shapes are there?", "output": "[\"SELECT['objects']\", \"PROJECT['shapes of #REF', '#1']\", \"PROJECT['kinds of #REF', '#2']\", \"PROJECT['different #REF', '#3']\", \"GROUP['count', '#4', '#3']\", \"UNION['#3', '#5']\"]"}
{"id": "CLEVR_dev_3684", "input": "How many shiny yellow balls are there?", "output": "[\"SELECT['balls']\", \"FILTER['#1', 'that are shiny']\", \"FILTER['#2', 'that are yellow']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_3686", "input": "How many balls are the same size?", "output": "[\"SELECT['balls']\", \"PROJECT['sizes of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is the same']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_3687", "input": "There are four spheres; what color is the partially hidden one?", "output": "[\"SELECT['spheres']\", \"FILTER['#1', 'that is partially hidden']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_3688", "input": "What color is the smallestt object shown?", "output": "[\"SELECT['objects']\", \"PROJECT['size of #REF', '#1']\", \"SUPERLATIVE['min', '#1', '#2']\", \"PROJECT['color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_3689", "input": "What color is the shiniest object?", "output": "[\"SELECT['object']\", \"FILTER['#1', 'that is shiniest']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_3691", "input": "How many objects are hiding behind the red matte cylinder?", "output": "[\"SELECT['the red matte cylinder']\", \"PROJECT['objects hiding behind of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_3695", "input": "Are all the gray items matte?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that are gray']\", \"FILTER['#2', 'that are matte']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#5', 'is equal to #4']\"]"}
{"id": "CLEVR_dev_3705", "input": "How many cylinders are next to the red rubber sphere that is close to two small cubes?", "output": "[\"SELECT['cylinders']\", \"SELECT['spheres']\", \"SELECT['cubes']\", \"FILTER['#2', 'that are red']\", \"FILTER['#4', 'that are rubber']\", \"FILTER['#3', 'that are small']\", \"FILTER['#5', 'that is close to two #6']\", \"FILTER['#1', 'that are next to #7']\", \"AGGREGATE['count', '#8']\"]"}
{"id": "CLEVR_dev_3706", "input": "How many objects are to the left of the shiny object that is not a sphere?", "output": "[\"SELECT['objects']\", \"SELECT['shiny object']\", \"FILTER['#2', 'that is not a sphere']\", \"FILTER['#1', 'to the left of #3']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "CLEVR_dev_3711", "input": "How many yellow shapes are there? ", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are yellow']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_3712", "input": "what color is the cylinder directly in the middle?", "output": "[\"SELECT['cylinder']\", \"FILTER['#1', 'that is directly in the middle']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_3713", "input": "the two cylinders that are next to eachother, what color is the rubber one?", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'that are next to eachother']\", \"FILTER['#2', 'that is rubber']\", \"PROJECT['color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_3717", "input": "How many cylinders are there? ", "output": "[\"SELECT['cylinders']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_3718", "input": "What is the shape of the object behind the green ball on the right?", "output": "[\"SELECT['balls']\", \"FILTER['#1', 'that are green']\", \"FILTER['#2', 'that are on the right']\", \"PROJECT['the object behind of #REF', '#3']\", \"PROJECT['shape of #REF', '#4']\"]"}
{"id": "CLEVR_dev_3725", "input": "What's metallic behind the blue cylinder?", "output": "[\"SELECT['metallic objects']\", \"SELECT['blue cylinder']\", \"FILTER['#1', 'behind #2']\"]"}
{"id": "CLEVR_dev_3732", "input": "What is the total number of cubes that are not metallic?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that are metallic']\", \"DISCARD['#1', '#2']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_374", "input": "How many objects are not only yellow, but shiny?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are yellow']\", \"FILTER['#2', 'that are shiny']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_3741", "input": "How many more cubes are on the left than on the right?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that are on the left']\", \"FILTER['#1', 'that are on the right']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"ARITHMETIC['difference', '#4', '#5']\"]"}
{"id": "CLEVR_dev_3747", "input": "Is the yellow cylinder made of the same material as the gray cylinder?", "output": "[\"SELECT['cylinder']\", \"FILTER['#1', 'that is yellow']\", \"FILTER['#1', 'that is gray']\", \"PROJECT['material of #REF', '#2']\", \"PROJECT['material of #REF', '#3']\", \"BOOLEAN['#4', 'is the same as #5']\"]"}
{"id": "CLEVR_dev_3748", "input": "What color object is off by itself?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is off by itself']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_3749", "input": "What shape is the large object with two metallic spheres behind it?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are large']\", \"SELECT['spheres']\", \"FILTER['#3', 'that are metallic']\", \"FILTER['#4', 'that are behind of #2']\", \"GROUP['count', '#5', '#2']\", \"COMPARATIVE['#2', '#6', 'is equal to two']\", \"PROJECT['shape of #REF', '#7']\"]"}
{"id": "CLEVR_dev_3750", "input": "Are these objects all matte?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are matte']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'the same as #4']\"]"}
{"id": "CLEVR_dev_3751", "input": "What is the color of the front cylinder", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'that is in front']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_3753", "input": "How many cylinders are there here?", "output": "[\"SELECT['cylinders']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_3755", "input": "What shape is the object farthest away?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is farthest away']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_3757", "input": "Are the small two cubes the same color?", "output": "[\"SELECT['small cubes']\", \"PROJECT['colors of #REF', '#1']\", \"BOOLEAN['#2', 'both the same']\"]"}
{"id": "CLEVR_dev_3758", "input": "Are there cubes in this images?", "output": "[\"SELECT['cubes']\", \"SELECT['this image']\", \"BOOLEAN['if_exist', '#1', 'in #2']\"]"}
{"id": "CLEVR_dev_3760", "input": "How many small matte cylinders are present?", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'that are small']\", \"FILTER['#2', 'that are matte']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_3763", "input": "Is the sphere on the left of the screen?", "output": "[\"SELECT['the sphere']\", \"FILTER['#1', 'on the screen']\", \"BOOLEAN['#2', 'is on the left']\"]"}
{"id": "CLEVR_dev_3766", "input": "Are all of the metallic objects the same shapes?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are metallic']\", \"PROJECT['shapes of #REF', '#2']\", \"GROUP['count', '#2', '#3']\", \"AGGREGATE['max', '#4']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#5', 'is equal to #6']\"]"}
{"id": "CLEVR_dev_3767", "input": "What is the color that two metallic objects share?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are metallic']\", \"PROJECT['colors of #REF', '#2']\", \"GROUP['count', '#2', '#3']\", \"COMPARATIVE['#3', '#4', 'is equal to two']\"]"}
{"id": "CLEVR_dev_377", "input": "Is the shiny object the same size as the round objects?", "output": "[\"SELECT['shiny object']\", \"SELECT['round objects']\", \"PROJECT['size of #REF', '#1']\", \"PROJECT['size of #REF', '#2']\", \"BOOLEAN['#3', 'the same as #4']\"]"}
{"id": "CLEVR_dev_3773", "input": "What is the shape of the only red object?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is red']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_3781", "input": "What color is the block behind the shiny red sphere?", "output": "[\"SELECT['block']\", \"SELECT['shiny sphere']\", \"FILTER['#2', 'that is red']\", \"FILTER['#1', 'behind #3']\", \"PROJECT['color of #REF', '#4']\"]"}
{"id": "CLEVR_dev_3784", "input": "What is the most popular color in  the image?", "output": "[\"SELECT['objects']\", \"PROJECT['colors of #REF', '#1']\", \"GROUP['count', '#1', '#2']\", \"SUPERLATIVE['max', '#2', '#3']\"]"}
{"id": "CLEVR_dev_3785", "input": "Is the red cylinder the same size as the shiny gray cylinder?", "output": "[\"SELECT['red cylinder']\", \"SELECT['shiny cylinder']\", \"FILTER['#2', 'that is gray']\", \"PROJECT['size of #REF', '#1']\", \"PROJECT['size of #REF', '#3']\", \"BOOLEAN['#4', 'is the same as #5']\"]"}
{"id": "CLEVR_dev_3797", "input": "Is the silver cube up front?", "output": "[\"SELECT['the silver cube']\", \"BOOLEAN['#1', 'is up front']\"]"}
{"id": "CLEVR_dev_3799", "input": "are any of the shapes gray?", "output": "[\"SELECT['shapes']\", \"FILTER['#1', 'that are gray']\", \"BOOLEAN['#2', 'are there any #REF']\"]"}
{"id": "CLEVR_dev_38", "input": "What color  is the matte sphere?", "output": "[\"SELECT['matte sphere']\", \"PROJECT['color of #REF', '#1']\"]"}
{"id": "CLEVR_dev_3803", "input": "How many objects are smaller than the blue boxes? ", "output": "[\"SELECT['objects']\", \"SELECT['blue boxes']\", \"PROJECT['size of #REF', '#1']\", \"PROJECT['size of #REF', '#2']\", \"COMPARATIVE['#1', '#3', 'is there same as #4']\", \"AGGREGATE['count', '#5']\"]"}
{"id": "CLEVR_dev_3806", "input": "How many objects of all sizes and shapes are yellow?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are yellow']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_3808", "input": "Are all of the cubes silver in color?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that are silver']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'the same as #4']\"]"}
{"id": "CLEVR_dev_3809", "input": "What color are the metallic spheres?", "output": "[\"SELECT['spheres']\", \"FILTER['#1', 'that are metallic']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_3819", "input": "How many shiny spheres?", "output": "[\"SELECT['spheres']\", \"FILTER['#1', 'that are shiny']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_382", "input": "Are any two things both the same color and material?", "output": "[\"SELECT['objects']\", \"PROJECT['colors of #REF', '#1']\", \"PROJECT['materials of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'are the same']\", \"COMPARATIVE['#1', '#3', 'are the same']\", \"INTERSECTION['#1', '#4', '#5']\", \"BOOLEAN['#6', 'if there are any two #REF']\"]"}
{"id": "CLEVR_dev_3821", "input": "Are the materials of the front object an the furthest away the same?", "output": "[\"SELECT['object']\", \"FILTER['#1', 'in the front']\", \"FILTER['#2', 'furthest away']\", \"PROJECT['material of #REF', '#2']\", \"PROJECT['material of #REF', '#3']\", \"BOOLEAN['#4', 'the same as #5']\"]"}
{"id": "CLEVR_dev_3822", "input": "What is the number of large items that are not red matte?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that are large']\", \"FILTER['#1', 'that are red']\", \"FILTER['#3', 'that are matte']\", \"DISCARD['#2', '#4']\", \"AGGREGATE['count', '#5']\"]"}
{"id": "CLEVR_dev_3826", "input": "How many blue objects are there?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are blue']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_3829", "input": "Are the number of spheres equal to the number of cylinders?", "output": "[\"SELECT['spheres']\", \"SELECT['cylinders']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'the same as #4']\"]"}
{"id": "CLEVR_dev_3830", "input": "Are all the large cubes made from the same material?", "output": "[\"SELECT['large cubes']\", \"PROJECT['materials of #REF', '#1']\", \"PROJECT['distinct #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to one']\"]"}
{"id": "CLEVR_dev_3831", "input": "Are all the spheres made of the same material?", "output": "[\"SELECT['spheres']\", \"PROJECT['materials of #REF', '#1']\", \"BOOLEAN['#2', 'all the same']\"]"}
{"id": "CLEVR_dev_3833", "input": "Are all the cubes made of the same material?", "output": "[\"SELECT['cubes']\", \"PROJECT['materials of #REF', '#1']\", \"BOOLEAN['#2', 'if all of #REF are the same']\"]"}
{"id": "CLEVR_dev_3837", "input": "is there a purple sphere on the right?", "output": "[\"SELECT['purple sphere']\", \"FILTER['#1', 'on the right']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is higher than zero']\"]"}
{"id": "CLEVR_dev_3841", "input": "Are the cylinders all the same material? ", "output": "[\"SELECT['cylinders']\", \"PROJECT['materials of #REF', '#1']\", \"BOOLEAN['#2', 'all the same']\"]"}
{"id": "CLEVR_dev_3844", "input": "What color is the small object between the red cylinder and the brown cylinder in the back?", "output": "[\"SELECT['the red cylinder']\", \"SELECT['the brown cylinder in the back']\", \"SELECT['objects between']\", \"INTERSECTION['#3', '#1', '#2']\", \"FILTER['#4', 'that are small']\", \"PROJECT['color of #REF', '#5']\"]"}
{"id": "CLEVR_dev_3849", "input": "Directly behind the large green shape is an object, what color is it?", "output": "[\"SELECT['large green shape']\", \"PROJECT['object behind #REF', '#1']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_3850", "input": "What shape is the small gray item in the back right?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that is small']\", \"FILTER['#2', 'that is gray']\", \"FILTER['#3', 'in the back right']\", \"PROJECT['shape of #REF', '#4']\"]"}
{"id": "CLEVR_dev_3855", "input": "How many objects are the same shape as the largest object?", "output": "[\"SELECT['object']\", \"PROJECT['size of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is the largest']\", \"PROJECT['the shape of #REF', '#3']\", \"SELECT['objects']\", \"DISCARD['#5', '#3']\", \"PROJECT['the shape of #REF', '#6']\", \"COMPARATIVE['#6', '#7', 'is the same as #4']\", \"AGGREGATE['count', '#8']\"]"}
{"id": "CLEVR_dev_3856", "input": "what object is mostly covered because of the brown cube?", "output": "[\"SELECT['objects']\", \"SELECT['brown cube']\", \"FILTER['#1', 'mostly covered because of #2']\"]"}
{"id": "CLEVR_dev_3861", "input": "What color is the large cube behind the other large cube?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that are large']\", \"FILTER['#2', 'that are behind the other large cube']\", \"PROJECT['the color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_3863", "input": "is the largest object matte?", "output": "[\"SELECT['objects']\", \"PROJECT['size of #REF', '#1']\", \"SUPERLATIVE['max', '#1', '#2']\", \"BOOLEAN['#3', 'is matte']\"]"}
{"id": "CLEVR_dev_3864", "input": "What is red and matte?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are red']\", \"FILTER['#2', 'that are matte']\"]"}
{"id": "CLEVR_dev_3866", "input": "How many objects are not the same shape as the blue object?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are blue']\", \"DISCARD['#1', '#2']\", \"PROJECT['shape of #REF', '#2']\", \"PROJECT['shapes of #REF', '#3']\", \"COMPARATIVE['#3', '#5', 'is the same as #4']\", \"DISCARD['#3', '#6']\", \"AGGREGATE['count', '#7']\"]"}
{"id": "CLEVR_dev_3867", "input": "Is the purple sphere the only matte object?", "output": "[\"SELECT['purple matte sphere']\", \"SELECT['matte objects']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'the same as #4']\"]"}
{"id": "CLEVR_dev_3875", "input": "What size is the object that is both in front of the brown box and to the right of the purple box?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are in front of the brown box']\", \"FILTER['#1', 'that are to the right of the purple box']\", \"INTERSECTION['#1', '#2', '#3']\", \"PROJECT['size of #REF', '#4']\"]"}
{"id": "CLEVR_dev_3881", "input": "What color is the big ball on the left?", "output": "[\"SELECT['big ball']\", \"FILTER['#1', 'on the left']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_3890", "input": "Which color has the most number of shapes? ", "output": "[\"SELECT['shapes']\", \"SELECT['colors']\", \"GROUP['count', '#1', '#2']\", \"SUPERLATIVE['max', '#2', '#3']\"]"}
{"id": "CLEVR_dev_3893", "input": "how many matte items are cubes?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that are matte']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_3899", "input": "is there another object that has the same color as the tallest object?", "output": "[\"SELECT['objects']\", \"PROJECT['height of #REF', '#1']\", \"SUPERLATIVE['max', '#1', '#2']\", \"DISCARD['#1', '#3']\", \"PROJECT['color of #REF', '#3']\", \"PROJECT['color of #REF', '#4']\", \"COMPARATIVE['#4', '#6', 'is there same as #5']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is higher than zero']\"]"}
{"id": "CLEVR_dev_3900", "input": "How many objects are to the right of the yellow cube?", "output": "[\"SELECT['yellow cube']\", \"PROJECT['objects to the right of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_3901", "input": "What shape is the object that has the same color as the large rubber cube?", "output": "[\"SELECT['objects']\", \"SELECT['large cube']\", \"FILTER['#2', 'that is rubber']\", \"PROJECT['color of #REF', '#1']\", \"PROJECT['color of #REF', '#2']\", \"COMPARATIVE['#1', '#4', 'is the same as #5']\", \"PROJECT['shape of #REF', '#6']\"]"}
{"id": "CLEVR_dev_3908", "input": "Is there a green cube present?", "output": "[\"SELECT['green cube']\", \"BOOLEAN['#1', 'is there any #REF']\"]"}
{"id": "CLEVR_dev_391", "input": "Is there a green rubber cube?", "output": "[\"SELECT['green cube']\", \"FILTER['#1', 'that is rubber']\", \"BOOLEAN['#2', 'is there any #REF']\"]"}
{"id": "CLEVR_dev_3911", "input": "Are there any similar shapes?", "output": "[\"SELECT['shapes']\", \"FILTER['#1', 'that are similar']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at least two']\"]"}
{"id": "CLEVR_dev_3914", "input": "What shape is the item located directly behind the gray ball?", "output": "[\"SELECT['gray ball']\", \"PROJECT['item directly behind #REF', '#1']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_3915", "input": "Is the blue cylinder made of the same material as the blue cube?", "output": "[\"SELECT['blue cylinder']\", \"SELECT['blue cube']\", \"PROJECT['material of #REF', '#1']\", \"PROJECT['material of #REF', '#2']\", \"BOOLEAN['#3', 'the same as #4']\"]"}
{"id": "CLEVR_dev_3916", "input": "how many cylinders are large?", "output": "[\"SELECT['cylinders']\", \"PROJECT['size of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is large']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_3918", "input": "There is a shiny gray cylinder; are there any objects to the right of it?", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'that are gray']\", \"FILTER['#2', 'that are shiny']\", \"SELECT['objects']\", \"BOOLEAN['if_exist', '#4', 'are to the right of #3']\"]"}
{"id": "CLEVR_dev_3920", "input": "How may spheres are metallic?", "output": "[\"SELECT['spheres']\", \"FILTER['#1', 'that are metallic']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_3922", "input": "What shape is hidden by the large blue object?", "output": "[\"SELECT['the large blue object']\", \"PROJECT['the object hidden by #REF', '#1']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_3924", "input": "How many more spheres are there than purple objects?", "output": "[\"SELECT['spheres']\", \"SELECT['purple objects']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "CLEVR_dev_3930", "input": "What color is the sphere farthest back?", "output": "[\"SELECT['sphere']\", \"FILTER['#1', 'that is farthest back']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_3931", "input": "In total how many cylinders and cubes are there combined?", "output": "[\"SELECT['cylinders']\", \"SELECT['cubes']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"ARITHMETIC['sum', '#3', '#4']\"]"}
{"id": "CLEVR_dev_3934", "input": "how many green cubes are also metallic?", "output": "[\"SELECT['green cubes']\", \"FILTER['#1', 'that are metallic']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_3935", "input": "Are all shapes fully visible?", "output": "[\"SELECT['shapes']\", \"BOOLEAN['#1', 'are all #REF fully visible']\"]"}
{"id": "CLEVR_dev_3937", "input": "how many shapes are red?", "output": "[\"SELECT['shapes']\", \"FILTER['#1', 'that are red']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_3939", "input": "What color is the object that is just to the left of the shiny brown sphere?", "output": "[\"SELECT['objects']\", \"SELECT['shiny sphere']\", \"FILTER['#2', 'that is brown']\", \"FILTER['#1', 'just to the left of #3']\", \"PROJECT['color of #REF', '#4']\"]"}
{"id": "CLEVR_dev_3940", "input": "What color is the object that will roll if pushed?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that will roll if pushed']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_3941", "input": "Are both purple items metallic?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that are purple']\", \"BOOLEAN['#2', 'if both #REF are metallic']\"]"}
{"id": "CLEVR_dev_3946", "input": "Which color objects have both a matte object and a shiny object?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are matte']\", \"FILTER['#1', 'that are shiny']\", \"SELECT['color']\", \"INTERSECTION['#4', '#2', '#3']\"]"}
{"id": "CLEVR_dev_3949", "input": "is there a purple cube?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that is purple']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'more than zero']\"]"}
{"id": "CLEVR_dev_3950", "input": "How many objects are the same shape as the red object?", "output": "[\"SELECT['objects']\", \"SELECT['red object']\", \"PROJECT['shapes of #REF', '#1']\", \"PROJECT['shape of #REF', '#2']\", \"COMPARATIVE['#1', '#3', 'is the same as #4']\", \"AGGREGATE['count', '#5']\"]"}
{"id": "CLEVR_dev_3951", "input": "What color is the partially hidden sphere?", "output": "[\"SELECT['sphere']\", \"FILTER['#1', 'that is partially hidden']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_3953", "input": "How many objects are the same size as the gray metal cube?", "output": "[\"SELECT['objects']\", \"SELECT['gray cube']\", \"FILTER['#2', 'that is metal']\", \"PROJECT['size of #REF', '#1']\", \"PROJECT['size of #REF', '#2']\", \"COMPARATIVE['#1', '#4', 'is the same as #5']\", \"AGGREGATE['count', '#6']\"]"}
{"id": "CLEVR_dev_3955", "input": "What color are the greatest number of objects?", "output": "[\"SELECT['objects']\", \"PROJECT['colors of #REF', '#1']\", \"GROUP['count', '#1', '#2']\", \"SUPERLATIVE['max', '#2', '#3']\"]"}
{"id": "CLEVR_dev_3957", "input": "How many more cubes are there than rubber green objects?", "output": "[\"SELECT['cubes']\", \"SELECT['rubber objects']\", \"FILTER['#2', 'that are green']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#3']\", \"ARITHMETIC['difference', '#4', '#5']\"]"}
{"id": "CLEVR_dev_3958", "input": "What color is the metallic cube farthest away?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that are metallic']\", \"FILTER['#2', 'that is farthest away']\", \"PROJECT['color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_396", "input": "how many blue objects are there?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are blue']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_3962", "input": "What is the color of the only object that is metallic?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are metallic']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_3964", "input": "How many little blocks are there?", "output": "[\"SELECT['little blocks']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_3966", "input": "how many objects are to the right as the gray sphere?", "output": "[\"SELECT['objects']\", \"SELECT['gray sphere']\", \"FILTER['#1', 'to the right of #2']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_3970", "input": "What is the shape of the object that is almost entirely obscured by another object?", "output": "[\"SELECT['object']\", \"FILTER['#1', 'that is almost entirely obscured by another object']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_3974", "input": "How many metallic colored items are there?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that are metallic colored']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_3979", "input": "is the center object red?", "output": "[\"SELECT['object']\", \"FILTER['#1', 'that is in the center']\", \"BOOLEAN['#2', 'is red']\"]"}
{"id": "CLEVR_dev_3981", "input": "is there anything behind the yellow cube?", "output": "[\"SELECT['the yellow cube']\", \"SELECT['objects']\", \"FILTER['#2', 'that are behind #1']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least one']\"]"}
{"id": "CLEVR_dev_3985", "input": "I need black spheres, can I get them on the right side?", "output": "[\"SELECT['spheres']\", \"FILTER['#1', 'that are black']\", \"BOOLEAN['#2', 'are on the right side']\"]"}
{"id": "CLEVR_dev_3988", "input": "What is the color of the largest cylinder that is matte?", "output": "[\"SELECT['largest cylinder']\", \"FILTER['#1', 'that is matte']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_3989", "input": "How many metallic spheres are there behind the red sphere?", "output": "[\"SELECT['red sphere']\", \"PROJECT['metallic spheres behind #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_3992", "input": "Are either of the cylinders matte?", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'that are matte']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at least one']\"]"}
{"id": "CLEVR_dev_3993", "input": "What is the color of the objects which are the same shape and color?", "output": "[\"SELECT['objects']\", \"PROJECT['shapes of #REF', '#1']\", \"PROJECT['colors of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'are the same']\", \"COMPARATIVE['#1', '#3', 'are the same']\", \"INTERSECTION['#1', '#4', '#5']\", \"PROJECT['the color of #REF', '#6']\"]"}
{"id": "CLEVR_dev_3998", "input": "Are all the brown cylinders made from the same material?", "output": "[\"SELECT['brown cylinders']\", \"PROJECT['materials of #REF', '#1']\", \"BOOLEAN['#2', 'all the same']\"]"}
{"id": "CLEVR_dev_40", "input": "What color object is biggest?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is the biggest']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_400", "input": "How many purple things do you see?", "output": "[\"SELECT['things']\", \"FILTER['#1', 'that are purple']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_4001", "input": "How many spheres are yellow?", "output": "[\"SELECT['spheres']\", \"FILTER['#1', 'that is yellow']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_4003", "input": "Are there more shiny objects that green objects?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are shiny']\", \"AGGREGATE['count', '#2']\", \"FILTER['#1', 'that are green']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#3', 'more than #5']\"]"}
{"id": "CLEVR_dev_4004", "input": "is a red sphere hiding behind the silver sphere?", "output": "[\"SELECT['the silver sphere']\", \"BOOLEAN['#1', 'if there is a red sphere hiding behind #REF']\"]"}
{"id": "CLEVR_dev_4005", "input": "what color is the furthest right object?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is furthest right']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_401", "input": "Are all of the yellow objects metallic or matte?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are yellow']\", \"FILTER['#2', 'that are metallic']\", \"DISCARD['#2', '#3']\", \"FILTER['#4', 'that are matte']\", \"DISCARD['#4', '#5']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'equal to zero']\"]"}
{"id": "CLEVR_dev_4020", "input": "How many purple spheres are there in the image?", "output": "[\"SELECT['purple spheres']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_4023", "input": "How many objects are metallic red?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are metallic red']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_4024", "input": "How many purple objects are here?", "output": "[\"SELECT['purple objects']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_4029", "input": "Is the large gold cube the same material as the cube closest to the yellow cylinder?", "output": "[\"SELECT['the yellow cylinder']\", \"SELECT['cubes']\", \"FILTER['#2', 'that are closest to #1']\", \"SELECT['the large gold cube']\", \"PROJECT['the material of #REF', '#3']\", \"PROJECT['the material of #REF', '#4']\", \"BOOLEAN['#5', 'and #6 are the same']\"]"}
{"id": "CLEVR_dev_4035", "input": "how many of the objects are large cubes", "output": "[\"SELECT['large cubes']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_4036", "input": "What is the color of the ball on the right?", "output": "[\"SELECT['ball']\", \"FILTER['#1', 'that is on the right']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_4038", "input": "Is the ball that is not shiny the same size as the shiny ball?", "output": "[\"SELECT['balls']\", \"FILTER['#1', 'that is not shiny']\", \"FILTER['#1', 'that is shiny']\", \"PROJECT['size of #REF', '#2']\", \"PROJECT['size of #REF', '#3']\", \"BOOLEAN['#4', 'the same as #5']\"]"}
{"id": "CLEVR_dev_4040", "input": "how many objects are not shiny", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are shiny']\", \"DISCARD['#1', '#2']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_4041", "input": "How more round shapes are there than square shapes?", "output": "[\"SELECT['shapes']\", \"FILTER['#1', 'that are round']\", \"AGGREGATE['count', '#2']\", \"FILTER['#1', 'that are square']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['difference', '#3', '#5']\"]"}
{"id": "CLEVR_dev_4042", "input": "How many items do you see that are not shiny?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that are shiny']\", \"DISCARD['#1', '#2']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_4044", "input": "Are there any green objects behind the purple cube?", "output": "[\"SELECT['purple cube']\", \"PROJECT['green objects behind #REF', '#1']\", \"BOOLEAN['#2', 'are there any #REF']\"]"}
{"id": "CLEVR_dev_405", "input": "Are all cylinders in this image the same color?", "output": "[\"SELECT['cylinders']\", \"PROJECT['colors of #REF', '#1']\", \"BOOLEAN['#2', 'are all #REF the same']\"]"}
{"id": "CLEVR_dev_4052", "input": "What is the shape of the furthest metallic red object?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are metallic']\", \"FILTER['#2', 'that are red']\", \"PROJECT['the furthest of #REF', '#3']\", \"PROJECT['the shape of #REF', '#4']\"]"}
{"id": "CLEVR_dev_4053", "input": "Are the brown objects spheres?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are brown']\", \"BOOLEAN['#2', 'are spheres']\"]"}
{"id": "CLEVR_dev_4054", "input": "What shape is most often seen here?", "output": "[\"SELECT['shape']\", \"FILTER['#1', 'that is most often seen']\"]"}
{"id": "CLEVR_dev_4055", "input": "There are two shapes in the same color, what are they?", "output": "[\"SELECT['colors']\", \"PROJECT['shapes of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#2', '#3', 'is two']\"]"}
{"id": "CLEVR_dev_4063", "input": "Are the two large cubes the same material?", "output": "[\"SELECT['large cubes']\", \"PROJECT['materials of #REF', '#1']\", \"BOOLEAN['#2', 'both the same']\"]"}
{"id": "CLEVR_dev_4066", "input": "What color item is partially hidden by the yellow cute?", "output": "[\"SELECT['yellow cute']\", \"PROJECT['item partially hidden by #REF', '#1']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_4069", "input": "What is the color of the cube shaped object?", "output": "[\"SELECT['cube shaped object']\", \"PROJECT['color of #REF', '#1']\"]"}
{"id": "CLEVR_dev_4076", "input": "how many shiny blue objects are there?", "output": "[\"SELECT['shiny blue objects']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_4078", "input": "How many purple matte items are there?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that are purple']\", \"FILTER['#2', 'that are matte']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_408", "input": "What color is the object that is most hidden?", "output": "[\"SELECT['objects']\", \"PROJECT['how hidden are #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is the highest']\", \"PROJECT['color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_4081", "input": "How many round objects are there?", "output": "[\"SELECT['round objects']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_4086", "input": "how many objects are gray?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are gray']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_4090", "input": "Are all the balls the same size and color?", "output": "[\"SELECT['balls']\", \"PROJECT['the size of #REF', '#1']\", \"PROJECT['the color of #REF', '#1']\", \"BOOLEAN['#2', 'the same']\", \"BOOLEAN['#3', 'the same']\", \"UNION['#4', '#5']\"]"}
{"id": "CLEVR_dev_4092", "input": "Are there only metallic objects?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that Are metallic']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to #4']\"]"}
{"id": "CLEVR_dev_4096", "input": "are any objects red?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are red']\", \"BOOLEAN['#2', 'are there any #REF']\"]"}
{"id": "CLEVR_dev_41", "input": "Are the number of red and blue items equal?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that are red']\", \"FILTER['#1', 'that are blue']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to #5']\"]"}
{"id": "CLEVR_dev_4100", "input": "Are there any red shapes?", "output": "[\"SELECT['shapes']\", \"FILTER['#1', 'that are red']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'higher than zero']\"]"}
{"id": "CLEVR_dev_4101", "input": "Are there six blocks?", "output": "[\"SELECT['blocks']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'equal to six']\"]"}
{"id": "CLEVR_dev_4102", "input": "how many objects are purple in color?", "output": "[\"SELECT['objects']\", \"PROJECT['colors of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is purple']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_4104", "input": "What texture is the big red thing?", "output": "[\"SELECT['big red thing']\", \"PROJECT['texture of #REF', '#1']\"]"}
{"id": "CLEVR_dev_4106", "input": "What object is behind the blue cube?", "output": "[\"SELECT['objects']\", \"SELECT['the blue cube']\", \"FILTER['#1', 'that are behind #2']\"]"}
{"id": "CLEVR_dev_4109", "input": "What color is the item behind the yellow sphere?", "output": "[\"SELECT['items']\", \"SELECT['yellow sphere']\", \"FILTER['#1', 'behind #2']\", \"PROJECT['color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_4110", "input": "how many different color objects are there?", "output": "[\"SELECT['objects']\", \"PROJECT['colors of #REF', '#1']\", \"PROJECT['different #REF', '#2']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_4115", "input": "What color is the cylinder that is not the same colr as the sphere?", "output": "[\"SELECT['cylinders']\", \"PROJECT['colors of #REF', '#1']\", \"SELECT['the sphere']\", \"PROJECT['color of #REF', '#3']\", \"COMPARATIVE['#1', '#2', 'is not the same as #4']\", \"PROJECT['color of #REF', '#5']\"]"}
{"id": "CLEVR_dev_4116", "input": "Are the largest balls the same color?", "output": "[\"SELECT['largest balls']\", \"PROJECT['colors of #REF', '#1']\", \"BOOLEAN['#2', 'the same']\"]"}
{"id": "CLEVR_dev_4117", "input": "Are two cubes the same size?", "output": "[\"SELECT['cubes']\", \"PROJECT['sizes of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'are the same']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to two']\"]"}
{"id": "CLEVR_dev_4123", "input": "How many purple objects are to the right of the yellow square?", "output": "[\"SELECT['purple objects']\", \"SELECT['yellow square']\", \"FILTER['#1', 'to the right of #2']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_4125", "input": "which shape is green in the image?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'in the image']\", \"FILTER['#2', 'that is green']\", \"PROJECT['the shape of #REF', '#3']\"]"}
{"id": "CLEVR_dev_4127", "input": "What color is the item that is closest to the back?", "output": "[\"SELECT['item']\", \"FILTER['#1', 'that is closest to the back']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_4128", "input": "Are the small purple things and the small green thing of the same material?", "output": "[\"SELECT['small things']\", \"FILTER['#1', 'that are purple']\", \"FILTER['#1', 'that is green']\", \"PROJECT['material of #REF', '#2']\", \"PROJECT['material of #REF', '#3']\", \"BOOLEAN['#4', 'the same as #5']\"]"}
{"id": "CLEVR_dev_4130", "input": "what color is the object beind the blue cube?", "output": "[\"SELECT['the blue cube']\", \"PROJECT['object beind of #REF', '#1']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_4137", "input": "what color is in front of two large gray shapes", "output": "[\"SELECT['shapes']\", \"FILTER['#1', 'that are large']\", \"FILTER['#2', 'that are gray']\", \"PROJECT['objects in front of two of #REF', '#3']\", \"PROJECT['color of #REF', '#4']\"]"}
{"id": "CLEVR_dev_4139", "input": "What color is the metallic object farthest to the right?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are metallic']\", \"FILTER['#2', 'that are farthest to the right']\", \"PROJECT['color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_414", "input": "Are the two cylinders in this image the same size?", "output": "[\"SELECT['cylinders in this image']\", \"PROJECT['sizes of #REF', '#1']\", \"BOOLEAN['#2', 'if the two of #REF are the same']\"]"}
{"id": "CLEVR_dev_4140", "input": "What material is the large square?", "output": "[\"SELECT['squares']\", \"FILTER['#1', 'that are large']\", \"PROJECT['the material of #REF', '#2']\"]"}
{"id": "CLEVR_dev_4144", "input": "How many spheres are there?", "output": "[\"SELECT['spheres']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_4146", "input": "The objects are divided into how many colors?", "output": "[\"SELECT['objects']\", \"PROJECT['colors of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_4147", "input": "How many objects have thesame shape?", "output": "[\"SELECT['objects']\", \"PROJECT['shapes of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'are thesame']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_4150", "input": "are there are only 2 spheres?", "output": "[\"SELECT['spheres']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is only two']\"]"}
{"id": "CLEVR_dev_4151", "input": "What color is the third object from the left?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is third from the left']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_4152", "input": "What material is the object in front of the metallic red cylinder?", "output": "[\"SELECT['the metallic red cylinder']\", \"SELECT['objects']\", \"FILTER['#2', 'that are in front of #1']\", \"PROJECT['the material of #REF', '#3']\"]"}
{"id": "CLEVR_dev_4153", "input": "What color is the object right of the green sphere?", "output": "[\"SELECT['the green sphere']\", \"PROJECT['the object to the right of #REF', '#1']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_4155", "input": "How many of the objects are metal?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are metal']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_4157", "input": "what color is the object closest to the blue cylinder that is also not square?", "output": "[\"SELECT['blue cylinder']\", \"PROJECT['object closest to #REF', '#1']\", \"FILTER['#2', 'that is not square']\", \"PROJECT['color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_4159", "input": "How many more shiny objects are there than matte?", "output": "[\"SELECT['shiny objects']\", \"SELECT['matte objects']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "CLEVR_dev_4160", "input": "What material is the cube all the way to the far left?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that are all the way to the far left']\", \"PROJECT['material of #REF', '#2']\"]"}
{"id": "CLEVR_dev_4165", "input": "How many cubes are positioned next to pyramids?", "output": "[\"SELECT['cubes']\", \"SELECT['pyramids']\", \"FILTER['#1', 'next to #2']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_4168", "input": "How many cylinders are the same color as the sphere?", "output": "[\"SELECT['cylinders']\", \"SELECT['sphere']\", \"PROJECT['colors of #REF', '#1']\", \"PROJECT['color of #REF', '#2']\", \"COMPARATIVE['#1', '#3', 'is the same as #4']\", \"AGGREGATE['count', '#5']\"]"}
{"id": "CLEVR_dev_417", "input": "How many cylinders are pictured here?", "output": "[\"SELECT['cylinders']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_4170", "input": "How many large objects are matte?", "output": "[\"SELECT['large objects']\", \"FILTER['#1', 'that are matte']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_4171", "input": "What is the shape of the object in the middle of the picture?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'in the middle of the picture']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_4173", "input": "Are the cubes the same color?", "output": "[\"SELECT['cubes']\", \"PROJECT['color of #REF', '#1']\", \"BOOLEAN['#2', 'the same']\"]"}
{"id": "CLEVR_dev_4175", "input": "Are all the blue shapes the same shade?", "output": "[\"SELECT['blue shapes']\", \"PROJECT['shades of #REF', '#1']\", \"BOOLEAN['#2', 'all the same']\"]"}
{"id": "CLEVR_dev_4177", "input": "The largest object shares a color with another object, what is the shape of that other object?", "output": "[\"SELECT['objects']\", \"PROJECT['size of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is the highest']\", \"DISCARD['#1', '#3']\", \"PROJECT['color of #REF', '#3']\", \"PROJECT['colors of #REF', '#4']\", \"COMPARATIVE['#4', '#6', 'is the same as #5']\", \"PROJECT['shape of #REF', '#7']\"]"}
{"id": "CLEVR_dev_4178", "input": "What shape is the partially hidden object?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is partially hidden']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_4182", "input": "How many shades of green are there?", "output": "[\"SELECT['shades']\", \"FILTER['#1', 'of green']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_4183", "input": "what color is behind the purple ball, but in front of the blue shape?", "output": "[\"SELECT['colors']\", \"SELECT['the purple ball']\", \"SELECT['the blue shape']\", \"FILTER['#1', 'that is behind #2']\", \"FILTER['#4', 'in front of #3']\"]"}
{"id": "CLEVR_dev_4189", "input": "What is the color of the shiny cube to the left of the cylinders?", "output": "[\"SELECT['the cylinders']\", \"PROJECT['the shiny cube to the left of #REF', '#1']\", \"PROJECT['the color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_4191", "input": "Is the large purple cube rubber?", "output": "[\"SELECT['cube']\", \"FILTER['#1', 'that is large']\", \"FILTER['#2', 'that is purple']\", \"BOOLEAN['#3', 'is rubber']\"]"}
{"id": "CLEVR_dev_4197", "input": "Are there 4 metal objects?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are metal']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'equal to 4']\"]"}
{"id": "CLEVR_dev_4199", "input": "What color is the large cube in the background of the photo?", "output": "[\"SELECT['large cube']\", \"FILTER['#1', 'that is in the background']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_42", "input": "What color ball is close to the small purple cylinder?", "output": "[\"SELECT['the small purple cylinder']\", \"PROJECT['balls that are close to #REF', '#1']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_420", "input": "What is the total number of spheres in this image?", "output": "[\"SELECT['spheres in this image']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_4200", "input": "What color is the largest shiny object?", "output": "[\"SELECT['largest object']\", \"FILTER['#1', 'that is shiny']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_4202", "input": "are there any spheres in front of the red cube?", "output": "[\"SELECT['spheres']\", \"SELECT['red cube']\", \"FILTER['#1', 'in front of #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is higher than zero']\"]"}
{"id": "CLEVR_dev_4203", "input": "Which object is mostly hidden by a large cylinder?", "output": "[\"SELECT['large cylinder']\", \"PROJECT['object mostly hidden by #REF', '#1']\"]"}
{"id": "CLEVR_dev_4204", "input": "What is the color of the object between the blue cube and the purple cylinder?", "output": "[\"SELECT['objects']\", \"SELECT['blue cube']\", \"SELECT['purple cylinder']\", \"FILTER['#1', 'betweenleftside #2']\", \"FILTER['#4', 'betweenrightside #3']\", \"PROJECT['color of #REF', '#5']\"]"}
{"id": "CLEVR_dev_4206", "input": "is there a purple cylinder?", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'that is purple']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'more than zero']\"]"}
{"id": "CLEVR_dev_4207", "input": "What is the shape of the matte object?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are matte']\", \"PROJECT['the shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_421", "input": "How many rubber objects?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are rubber']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_4211", "input": "What color is the large cube that is directly behind the green object?", "output": "[\"SELECT['large cube']\", \"SELECT['green object']\", \"FILTER['#1', 'directly behind #2']\", \"PROJECT['color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_4213", "input": "Are the blue cylinder and the green square the same material?", "output": "[\"SELECT['blue cylinder']\", \"SELECT['green square']\", \"PROJECT['material of #REF', '#1']\", \"PROJECT['material of #REF', '#2']\", \"BOOLEAN['#3', 'the same as #4']\"]"}
{"id": "CLEVR_dev_4220", "input": "What color is in the front?", "output": "[\"SELECT['colors']\", \"FILTER['#1', 'that is in the front']\"]"}
{"id": "CLEVR_dev_4221", "input": "Are there any balls located between cubes?", "output": "[\"SELECT['cubes']\", \"SELECT['balls']\", \"BOOLEAN['if_exist', '#2', 'are between #1']\"]"}
{"id": "CLEVR_dev_4225", "input": "Are there more cylinders then cubes?", "output": "[\"SELECT['cylinders']\", \"SELECT['cubes']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'higher than #4']\"]"}
{"id": "CLEVR_dev_4230", "input": "Are the shiny objects the same shape?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are shiny']\", \"PROJECT['the shapes of #REF', '#2']\", \"BOOLEAN['#3', 'are the same']\"]"}
{"id": "CLEVR_dev_4232", "input": "How many things are cylinders?", "output": "[\"SELECT['cylinders']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_4233", "input": "What is the shape of the single rubber brown object?", "output": "[\"SELECT['object']\", \"FILTER['#1', 'that is brown']\", \"FILTER['#2', 'that is rubbers']\", \"PROJECT['shape of #REF', '#3']\"]"}
{"id": "CLEVR_dev_4239", "input": "Is there a red cube in this scene?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'in the scene']\", \"BOOLEAN['#2', 'if any of #REF are red']\"]"}
{"id": "CLEVR_dev_4244", "input": "How many big purple cylinders are there?", "output": "[\"SELECT['big cylinders']\", \"FILTER['#1', 'that are purple']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_4245", "input": "are there more cubes or matte objects?", "output": "[\"SELECT['cubes']\", \"SELECT['matte objects']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"COMPARISON['max', '#3', '#4']\"]"}
{"id": "CLEVR_dev_4247", "input": "What shape is the orange object?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are orange']\", \"PROJECT['the shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_4251", "input": "What is the shape of the object behind the cyan cube?", "output": "[\"SELECT['the cyan cube']\", \"PROJECT['the object behind #REF', '#1']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_4254", "input": "Can you stack all the objects on top of each other?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that you Can stack on top of each other']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#3', 'is equal to #4']\"]"}
{"id": "CLEVR_dev_4255", "input": "Are there any red metallic spheres?", "output": "[\"SELECT['red spheres']\", \"FILTER['#1', 'that are metallic']\", \"BOOLEAN['#2', 'are there any #REF']\"]"}
{"id": "CLEVR_dev_4256", "input": "are there more cubes or cylinders?", "output": "[\"SELECT['cubes']\", \"SELECT['cylinders']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"COMPARISON['max', '#3', '#4']\"]"}
{"id": "CLEVR_dev_4258", "input": "What is the color of the only cube in the group?", "output": "[\"SELECT['the cube']\", \"PROJECT['the color of #REF', '#1']\"]"}
{"id": "CLEVR_dev_4262", "input": "Are all object made of the same material?", "output": "[\"SELECT['objects']\", \"PROJECT['materials of #REF', '#1']\", \"GROUP['count', '#1', '#2']\", \"AGGREGATE['max', '#3']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#4', 'is equal to #5']\"]"}
{"id": "CLEVR_dev_4264", "input": "Are there any cubes or spheres?", "output": "[\"SELECT['cubes']\", \"SELECT['spheres']\", \"UNION['#1', '#2']\", \"BOOLEAN['#3', 'are there any #REF']\"]"}
{"id": "CLEVR_dev_4266", "input": "How many matte spheres are cyan?", "output": "[\"SELECT['spheres']\", \"FILTER['#1', 'that are matte']\", \"FILTER['#2', 'that are cyan']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_4267", "input": "The smallestt green cylinder is what texture?", "output": "[\"SELECT['smallestt cylinder']\", \"FILTER['#1', 'that is green']\", \"PROJECT['texture of #REF', '#2']\"]"}
{"id": "CLEVR_dev_4269", "input": "Is the number of brown objects the same as the gray?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are brown']\", \"FILTER['#1', 'that are gray']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'the same as #5']\"]"}
{"id": "CLEVR_dev_4271", "input": "There are three similarly sized cylinders: what is the color of the one farthest back in the group?", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'that are similarly sized']\", \"FILTER['#2', 'that is the farthest back in the group']\", \"PROJECT['the color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_4273", "input": "What is behind the largest purple block?", "output": "[\"SELECT['purple blocks']\", \"FILTER['#1', 'that is the largest']\", \"PROJECT['What is behind #REF', '#2']\"]"}
{"id": "CLEVR_dev_4278", "input": "what color is the object in back of the gray shiney cylinder next to the small shiney ball", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'that are gray']\", \"FILTER['#2', 'that are shiney']\", \"FILTER['#3', 'that are next to the small shiney ball']\", \"PROJECT['the object in the back of #REF', '#4']\", \"PROJECT['color of #REF', '#5']\"]"}
{"id": "CLEVR_dev_4280", "input": "How many objects give off a reflection?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that give off a reflection']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_4285", "input": "Is the cyan sphere same shape as the yellow object?", "output": "[\"SELECT['sphere']\", \"FILTER['#1', 'that is cyan']\", \"PROJECT['shape of #REF', '#2']\", \"SELECT['object']\", \"FILTER['#4', 'that is yellow']\", \"PROJECT['shape of #REF', '#5']\", \"BOOLEAN['#3', 'is same as #6']\"]"}
{"id": "CLEVR_dev_4288", "input": "what color is the smallestt cube?", "output": "[\"SELECT['cubes']\", \"PROJECT['size of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is the lowest']\", \"PROJECT['color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_4290", "input": "How many objects imaged are partially visible?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are partially visible']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_4291", "input": "what is the material of the object on the left?", "output": "[\"SELECT['object']\", \"FILTER['#1', 'on the left']\", \"PROJECT['material of #REF', '#2']\"]"}
{"id": "CLEVR_dev_4295", "input": "What is the color of the object that is the same shape as the largest object?", "output": "[\"SELECT['objects']\", \"AGGREGATE['max', '#1']\", \"PROJECT['shape of #REF', '#2']\", \"DISCARD['#1', '#2']\", \"PROJECT['shapes of #REF', '#4']\", \"COMPARATIVE['#4', '#5', 'is the same as #3']\", \"PROJECT['the color of #REF', '#6']\"]"}
{"id": "CLEVR_dev_4297", "input": "Are there any triangles located near spheres?", "output": "[\"SELECT['triangles']\", \"FILTER['#1', 'that are located near a sphere']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at least one']\"]"}
{"id": "CLEVR_dev_4298", "input": "what shape is reflecting off the cylinder?", "output": "[\"SELECT['the cylinder']\", \"SELECT['shapes']\", \"FILTER['#2', 'that are reflecting off #1']\"]"}
{"id": "CLEVR_dev_4299", "input": "are there any red cylinders visible?", "output": "[\"SELECT['cylinders visible']\", \"FILTER['#1', 'that are red']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at least one']\"]"}
{"id": "CLEVR_dev_4300", "input": "how many small cubes are in front of the large gray cube", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that are large']\", \"FILTER['#2', 'that are gray']\", \"FILTER['#1', 'that are small']\", \"FILTER['#4', 'that are in front of #3']\", \"AGGREGATE['count', '#5']\"]"}
{"id": "CLEVR_dev_4304", "input": "What color is the only matte object?", "output": "[\"SELECT['matte object']\", \"PROJECT['color of #REF', '#1']\"]"}
{"id": "CLEVR_dev_4306", "input": "Is the cube that is behind and to the left of the matte yellow cube the same size as the one that is behind and to the right of matte yellow cube?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that are matte']\", \"FILTER['#2', 'that are yellow']\", \"FILTER['#1', 'that are behind of #3']\", \"FILTER['#4', 'that are to the left']\", \"FILTER['#4', 'that are to the right']\", \"PROJECT['size of #REF', '#5']\", \"PROJECT['size of #REF', '#6']\", \"BOOLEAN['#7', 'is the same as #8']\"]"}
{"id": "CLEVR_dev_4309", "input": "What color is seen most?", "output": "[\"SELECT['objects']\", \"PROJECT['colors of #REF', '#1']\", \"GROUP['count', '#1', '#2']\", \"SUPERLATIVE['max', '#2', '#3']\"]"}
{"id": "CLEVR_dev_431", "input": "are all three of the gray, matte items cubes?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that are gray']\", \"FILTER['#2', 'that are matte']\", \"FILTER['#3', 'that are cubes']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'equal to three']\"]"}
{"id": "CLEVR_dev_4310", "input": "Are all the small objects the same color?", "output": "[\"SELECT['small objects']\", \"PROJECT['colors of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to one']\"]"}
{"id": "CLEVR_dev_4313", "input": "What color is the item that is not rubber and not red?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that is rubber']\", \"FILTER['#1', 'that is red']\", \"DISCARD['#1', '#2']\", \"DISCARD['#4', '#3']\", \"PROJECT['color of #REF', '#5']\"]"}
{"id": "CLEVR_dev_432", "input": "What color is the smallestt metallic ball?", "output": "[\"SELECT['smallestt ball']\", \"FILTER['#1', 'that is metallic']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_4321", "input": "How many spheres are in the image?", "output": "[\"SELECT['spheres']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_4322", "input": "What color is the object up front?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are up front']\", \"PROJECT['the color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_4323", "input": "is the cyan cylinder the same size as green ball", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'that are cyan']\", \"SELECT['balls']\", \"FILTER['#3', 'that is green']\", \"PROJECT['size of #REF', '#2']\", \"PROJECT['size of #REF', '#4']\", \"BOOLEAN['#5', 'same as #6']\"]"}
{"id": "CLEVR_dev_4328", "input": "What shape is the object that does not share a color with the other objects? ", "output": "[\"SELECT['objects']\", \"PROJECT['colors of #REF', '#1']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is one']\", \"COMPARATIVE['#1', '#2', 'is #4']\", \"PROJECT['the shape of #REF', '#5']\"]"}
{"id": "CLEVR_dev_4329", "input": "Is the number of spheres equal to the number of objects that are made of the same material as the purple object?", "output": "[\"SELECT['spheres']\", \"SELECT['purple object']\", \"SELECT['objects']\", \"DISCARD['#3', '#2']\", \"PROJECT['material of #REF', '#2']\", \"PROJECT['materials of #REF', '#4']\", \"COMPARATIVE['#4', '#6', 'Is the same as #5']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'the same as #9']\"]"}
{"id": "CLEVR_dev_4332", "input": "Is anything the same size as the tan sphere?", "output": "[\"SELECT['sphere']\", \"FILTER['#1', 'that is tan']\", \"PROJECT['size of #REF', '#2']\", \"SELECT['objects']\", \"DISCARD['#4', '#2']\", \"PROJECT['sizes of #REF', '#5']\", \"COMPARATIVE['#5', '#6', 'is the same as #3']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is at least one']\"]"}
{"id": "CLEVR_dev_4334", "input": "What material are the small spheres made from?", "output": "[\"SELECT['spheres']\", \"FILTER['#1', 'that are small']\", \"PROJECT['material of #REF', '#2']\"]"}
{"id": "CLEVR_dev_4336", "input": "How many cubes are shiny and not purple?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that are shiny']\", \"FILTER['#2', 'that are purple']\", \"DISCARD['#2', '#3']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "CLEVR_dev_4338", "input": "How may items are yellow?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that are yellow']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_4341", "input": "There is a tiny green sphere; how many cylinders are the same color as the object to the left of this green sphere?", "output": "[\"SELECT['tiny sphere']\", \"FILTER['#1', 'that is green']\", \"SELECT['objects']\", \"FILTER['#3', 'to the left of #2']\", \"SELECT['cylinders']\", \"PROJECT['color of #REF', '#4']\", \"PROJECT['colors of #REF', '#5']\", \"COMPARATIVE['#5', '#6', 'is the same as #7']\", \"AGGREGATE['count', '#8']\"]"}
{"id": "CLEVR_dev_4344", "input": "what is the matte object in front?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are matte']\", \"FILTER['#2', 'in front']\"]"}
{"id": "CLEVR_dev_4345", "input": "How many shapes are there in this image?", "output": "[\"SELECT['shapes']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_4346", "input": "what color is  big ball?", "output": "[\"SELECT['balls']\", \"FILTER['#1', 'that are big']\", \"PROJECT['the color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_4351", "input": "Are the large yellow sphere and gold cube made from the same material?", "output": "[\"SELECT['yellow sphere']\", \"FILTER['#1', 'that is large']\", \"SELECT['gold cube']\", \"PROJECT['material of #REF', '#2']\", \"PROJECT['material of #REF', '#3']\", \"BOOLEAN['#4', 'the same as #5']\"]"}
{"id": "CLEVR_dev_4355", "input": "Is there more balls or cubes?", "output": "[\"SELECT['balls']\", \"SELECT['cubes']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"COMPARISON['max', '#3', '#4']\"]"}
{"id": "CLEVR_dev_4358", "input": "How many large balls?", "output": "[\"SELECT['balls']\", \"FILTER['#1', 'that are large']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_4362", "input": "What color are the largest cylinder and sphere?", "output": "[\"SELECT['cylinders']\", \"PROJECT['size of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is the highest']\", \"SELECT['spheres']\", \"PROJECT['size of #REF', '#4']\", \"COMPARATIVE['#4', '#5', 'is the highest']\", \"SELECT['color']\", \"INTERSECTION['#7', '#3', '#6']\"]"}
{"id": "CLEVR_dev_4366", "input": "how many metallic items are also balls?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that are metallic']\", \"FILTER['#2', 'that are balls']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_4375", "input": "Are all of the cylinders the same color?", "output": "[\"SELECT['cylinders']\", \"PROJECT['colors of #REF', '#1']\", \"GROUP['count', '#1', '#2']\", \"AGGREGATE['max', '#3']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#4', 'is equal to #5']\"]"}
{"id": "CLEVR_dev_4377", "input": "What shape is the object closest to the camera?", "output": "[\"SELECT['objects']\", \"PROJECT['how close to the camera are #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is the lowest']\", \"PROJECT['shape of #REF', '#3']\"]"}
{"id": "CLEVR_dev_4378", "input": "Is the large metallic cylinder the same color as the small metallic cylindrical shaped object?", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'that are metallic']\", \"FILTER['#2', 'that are large']\", \"FILTER['#2', 'that are small']\", \"PROJECT['color of #REF', '#3']\", \"PROJECT['color of #REF', '#4']\", \"BOOLEAN['#5', 'is the same as #6']\"]"}
{"id": "CLEVR_dev_4380", "input": "What color is the single object of it's only color?", "output": "[\"SELECT['objects']\", \"PROJECT['colors of #REF', '#1']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is one']\"]"}
{"id": "CLEVR_dev_4383", "input": "What material are the cylinders made of", "output": "[\"SELECT['cylinders']\", \"PROJECT['material of #REF', '#1']\"]"}
{"id": "CLEVR_dev_4384", "input": "What material is the object next to the yellow metallic object?", "output": "[\"SELECT['objects']\", \"SELECT['yellow object']\", \"FILTER['#2', 'that is metallic']\", \"FILTER['#1', 'that is next to #3']\", \"PROJECT['material of #REF', '#4']\"]"}
{"id": "CLEVR_dev_4387", "input": "How many things are made out of metal?", "output": "[\"SELECT['things']\", \"FILTER['#1', 'that are made out of metal']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_4394", "input": "How many rubber items are there?", "output": "[\"SELECT['rubber items']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_4395", "input": "What material is the gray sphere?", "output": "[\"SELECT['gray sphere']\", \"PROJECT['material of #REF', '#1']\"]"}
{"id": "CLEVR_dev_4397", "input": "What object is the biggest?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is the biggest']\"]"}
{"id": "CLEVR_dev_4399", "input": "How many large matte objects are there?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are large']\", \"FILTER['#2', 'that are matte']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_4400", "input": "what is the material of the purple sphere being partially blocked by the silver metallic cube?", "output": "[\"SELECT['purple sphere']\", \"SELECT['silver cube']\", \"FILTER['#2', 'that is metallic']\", \"FILTER['#1', 'being partially blocked by #3']\", \"PROJECT['material of #REF', '#4']\"]"}
{"id": "CLEVR_dev_4403", "input": "Can you roll all the purple objects?", "output": "[\"SELECT['purple objects']\", \"PROJECT['Can you roll all of #REF', '#1']\"]"}
{"id": "CLEVR_dev_4408", "input": "How many cylinders are the same material as any of the spheres?", "output": "[\"SELECT['cylinders']\", \"SELECT['spheres']\", \"PROJECT['materials of #REF', '#1']\", \"PROJECT['materials of #REF', '#2']\", \"COMPARATIVE['#1', '#3', 'is the same as #4']\", \"AGGREGATE['count', '#5']\"]"}
{"id": "CLEVR_dev_4410", "input": "Are there more matte or metallic objects?", "output": "[\"SELECT['matte objects']\", \"SELECT['metallic objects']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"COMPARISON['max', '#3', '#4']\"]"}
{"id": "CLEVR_dev_4411", "input": "are there any gray spheres?", "output": "[\"SELECT['spheres']\", \"FILTER['#1', 'that are gray']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at least one']\"]"}
{"id": "CLEVR_dev_4413", "input": "How many objects are there altogether?", "output": "[\"SELECT['objects']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_4414", "input": "Is there the same number of objects that are cube shaped compared to cylindrical shaped of all sizes?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are cube shaped']\", \"FILTER['#1', 'that are cylindrical shaped']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to #5']\"]"}
{"id": "CLEVR_dev_4416", "input": "What color is the cylinder at the back here?", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'at the back']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_4417", "input": "How many spheres behind the glossy blue cube?", "output": "[\"SELECT['spheres']\", \"SELECT['glossy blue cube']\", \"FILTER['#1', 'behind #2']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_4419", "input": "There are two objects of similar shape, what shape are they?", "output": "[\"SELECT['objects']\", \"PROJECT['shapes of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'are similar']\", \"PROJECT['shape of #REF', '#3']\"]"}
{"id": "CLEVR_dev_442", "input": "What color is the small object that is the same shape as the large object in front of the small yellow cube?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is small']\", \"FILTER['#1', 'that is large']\", \"SELECT['small cube']\", \"FILTER['#4', 'that is yellow']\", \"FILTER['#3', 'in front of #5']\", \"PROJECT['shape of #REF', '#2']\", \"PROJECT['shape of #REF', '#6']\", \"COMPARATIVE['#2', '#7', 'is the same as #8']\", \"PROJECT['color of #REF', '#9']\"]"}
{"id": "CLEVR_dev_4421", "input": "is the cube touching the matte or shiny sphere?", "output": "[\"SELECT['the cube']\", \"BOOLEAN['#1', 'is touching the matte sphere']\", \"BOOLEAN['#1', 'is touching the shiny sphere']\", \"UNION['#2', '#3']\"]"}
{"id": "CLEVR_dev_4423", "input": "How many of the objects to the right of the purple ball are red?", "output": "[\"SELECT['objects']\", \"SELECT['the purple ball']\", \"FILTER['#1', 'to the right of #2']\", \"FILTER['#3', 'that are red']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "CLEVR_dev_443", "input": "how many different colors are there", "output": "[\"SELECT['colors']\", \"PROJECT['different #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_4430", "input": "Is there only one cylinder in this picture?", "output": "[\"SELECT['cylinders']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is equal to one']\"]"}
{"id": "CLEVR_dev_4431", "input": "What is the object that is between the yellow cube, and the gray cylinder?", "output": "[\"SELECT['objects']\", \"SELECT['the yellow cube']\", \"SELECT['the gray cylinder']\", \"FILTER['#1', 'betweenleftside #2']\", \"FILTER['#4', 'betweenrightside #3']\"]"}
{"id": "CLEVR_dev_4432", "input": "Are the all the cubes identical?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that are identical']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#4', 'is equal to #3']\"]"}
{"id": "CLEVR_dev_4435", "input": "are all of the objects spheres?", "output": "[\"SELECT['objects']\", \"SELECT['spheres']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#4', 'is equal to #3']\"]"}
{"id": "CLEVR_dev_4439", "input": "What is the largest green metallic shape?", "output": "[\"SELECT['shapes']\", \"FILTER['#1', 'that are green']\", \"FILTER['#2', 'that are metallic']\", \"AGGREGATE['max', '#3']\"]"}
{"id": "CLEVR_dev_4440", "input": "Are there only rubber objects?", "output": "[\"SELECT['objects']\", \"SELECT['rubber objects']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'the same as #4']\"]"}
{"id": "CLEVR_dev_4441", "input": "What is the shape of the object which is in the very back?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are in the very back']\", \"PROJECT['the shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_4445", "input": "Are the metallic spheres the same size?", "output": "[\"SELECT['metallic spheres']\", \"PROJECT['sizes of #REF', '#1']\", \"BOOLEAN['#2', 'the same']\"]"}
{"id": "CLEVR_dev_4448", "input": "What color is the object with two small circles of light?", "output": "[\"SELECT['objects']\", \"PROJECT['circles of light of #REF', '#1']\", \"FILTER['#2', 'that are small']\", \"GROUP['count', '#3', '#1']\", \"COMPARATIVE['#1', '#4', 'is two']\", \"PROJECT['the color of #REF', '#5']\"]"}
{"id": "CLEVR_dev_4449", "input": "Which color is the only one of it's kind?", "output": "[\"SELECT['colors']\", \"FILTER['#1', 'that is the only one of it s kind']\"]"}
{"id": "CLEVR_dev_445", "input": "Are there more metallic small things than big metallic spheres?", "output": "[\"SELECT['spheres']\", \"FILTER['#1', 'that are metallic']\", \"FILTER['#2', 'that are big']\", \"AGGREGATE['count', '#3']\", \"SELECT['things']\", \"FILTER['#5', 'that are small']\", \"FILTER['#6', 'that are metallic']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is more than #4']\"]"}
{"id": "CLEVR_dev_4452", "input": "How many metallic shapes are there in the image?", "output": "[\"SELECT['shapes']\", \"FILTER['#1', 'that are metallic']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_4453", "input": "how many large shiny cylinders appear in the image?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are large']\", \"FILTER['#2', 'that are shiny']\", \"FILTER['#3', 'that are cylinders']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "CLEVR_dev_4454", "input": "What material is the object in front of the small matte gray object?", "output": "[\"SELECT['the small matte gray object']\", \"SELECT['objects']\", \"FILTER['#2', 'that are in front of #1']\", \"PROJECT['the material of #REF', '#3']\"]"}
{"id": "CLEVR_dev_4456", "input": "What is the color of the shiny sphere at the forefront of the picture?", "output": "[\"SELECT['shiny sphere']\", \"FILTER['#1', 'at the forefront of the picture']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_4460", "input": "Is the material of any of thre balls the same as the cube?", "output": "[\"SELECT['balls']\", \"SELECT['cube']\", \"PROJECT['materials of #REF', '#1']\", \"PROJECT['material of #REF', '#2']\", \"COMPARATIVE['#1', '#3', 'Is the same as #4']\", \"BOOLEAN['#5', 'Is there any #REF']\"]"}
{"id": "CLEVR_dev_4461", "input": "How many objects total minus one less than the number of purple objects?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are purple']\", \"AGGREGATE['count', '#2']\", \"FILTER['#3', 'minus one']\", \"AGGREGATE['count', '#1']\", \"ARITHMETIC['difference', '#5', '#4']\"]"}
{"id": "CLEVR_dev_4462", "input": "How many small cubes are matte?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that are small']\", \"FILTER['#2', 'that are matte']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_4470", "input": "How many cubes are behind the green cylinder?", "output": "[\"SELECT['cubes']\", \"SELECT['green cylinder']\", \"FILTER['#1', 'behind #2']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_4471", "input": "Are there more purple shapes than cylinders?", "output": "[\"SELECT['purple shapes']\", \"SELECT['cylinders']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'higher than #4']\"]"}
{"id": "CLEVR_dev_4478", "input": "What metallic color can be found in the back row?", "output": "[\"SELECT['metallic color']\", \"FILTER['#1', 'in the back row']\"]"}
{"id": "CLEVR_dev_4479", "input": "Is the red cylinder small?", "output": "[\"SELECT['the red cylinder']\", \"PROJECT['size of #REF', '#1']\", \"BOOLEAN['#2', 'is small']\"]"}
{"id": "CLEVR_dev_4484", "input": "What is the shape of the object that is most towards the right side?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'most towards the right side']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_4485", "input": "How many of the objects are metallic purple?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are metallic purple']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_4486", "input": "What color is the object behind the small gray cylinder?", "output": "[\"SELECT['objects']\", \"SELECT['the small gray cylinder']\", \"FILTER['#1', 'that are behind #2']\", \"PROJECT['the color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_449", "input": "How many blocks are present?", "output": "[\"SELECT['blocks']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_450", "input": "How many square objects are pictured here?", "output": "[\"SELECT['square objects']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_4507", "input": "what type of object has the same color as the shiny gray sphere?", "output": "[\"SELECT['objects']\", \"SELECT['shiny sphere']\", \"FILTER['#2', 'that is gray']\", \"PROJECT['color of #REF', '#1']\", \"PROJECT['color of #REF', '#2']\", \"COMPARATIVE['#1', '#4', 'is the same as #5']\", \"PROJECT['type of #REF', '#6']\"]"}
{"id": "CLEVR_dev_4512", "input": "how many green spheres are there?", "output": "[\"SELECT['green spheres']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_4516", "input": "What shape of the only object that wont roll if pushed?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that wont roll if pushed']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_4519", "input": "How many cubes are to the right of the cube that is to the left of the gray cube?", "output": "[\"SELECT['the gray cube']\", \"PROJECT['the cube that is to the left of #REF', '#1']\", \"PROJECT['cubes that are to the right of #REF', '#2']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_4520", "input": "What color is the closest sphere?", "output": "[\"SELECT['sphere']\", \"FILTER['#1', 'that is closest']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_4521", "input": "The only large cube is what color?", "output": "[\"SELECT['large cube']\", \"PROJECT['color of #REF', '#1']\"]"}
{"id": "CLEVR_dev_4526", "input": "What color is the sphere that is the same color as a small cube?", "output": "[\"SELECT['spheres']\", \"SELECT['small cube']\", \"PROJECT['color of #REF', '#1']\", \"PROJECT['color of #REF', '#2']\", \"COMPARATIVE['#1', '#3', 'is the same as #4']\", \"PROJECT['color of #REF', '#5']\"]"}
{"id": "CLEVR_dev_4527", "input": "how many yellow items are there?", "output": "[\"SELECT['yellow items']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_453", "input": "What shape is there two yellow ones of?", "output": "[\"SELECT['shapes']\", \"FILTER['#1', 'that are yellow']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is two']\"]"}
{"id": "CLEVR_dev_4531", "input": "Are there any purple spheres?", "output": "[\"SELECT['spheres']\", \"FILTER['#1', 'that are purple']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'at least one']\"]"}
{"id": "CLEVR_dev_4537", "input": "What is the color of the single cube?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that is single']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_4539", "input": "What color is shared by two objects?", "output": "[\"SELECT['colors']\", \"PROJECT['objects of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is two']\"]"}
{"id": "CLEVR_dev_4540", "input": "What shape is the small item to the front?", "output": "[\"SELECT['item']\", \"FILTER['#1', 'that is small']\", \"FILTER['#2', 'that is in the front']\", \"PROJECT['shape of #REF', '#3']\"]"}
{"id": "CLEVR_dev_4541", "input": "Are there two cylinders?", "output": "[\"SELECT['cylinders']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'equal to two']\"]"}
{"id": "CLEVR_dev_4543", "input": "Are the blue cubes the same size?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that are blue']\", \"PROJECT['sizes of #REF', '#2']\", \"BOOLEAN['#3', 'are the same']\"]"}
{"id": "CLEVR_dev_4549", "input": "Are there more yellow metallic objects than matte objects?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are yellow']\", \"FILTER['#2', 'that are metallic']\", \"FILTER['#1', 'that are matte']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is more than #6']\"]"}
{"id": "CLEVR_dev_4557", "input": "what color is the largest metallic object?", "output": "[\"SELECT['metallic object']\", \"FILTER['#1', 'that is largest']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_4560", "input": "What color is the cylinder furthest to the right", "output": "[\"SELECT['cylinder']\", \"PROJECT['the #REF furthest to the right', '#1']\", \"PROJECT['the color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_4563", "input": "what color is the front cube?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'in the front']\", \"PROJECT['the color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_4566", "input": "What shape is the thing behind the cube?", "output": "[\"SELECT['shapes']\", \"FILTER['#1', 'that is cube']\", \"FILTER['#1', 'that is behind #2']\"]"}
{"id": "CLEVR_dev_4567", "input": "Are there multiple purple cubes?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that are purple']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is more than one']\"]"}
{"id": "CLEVR_dev_4569", "input": "What shape is the object farthest to the left?", "output": "[\"SELECT['object']\", \"FILTER['#1', 'that is farthest to the left']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_4574", "input": "What color is the round object that is also shiny?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is round']\", \"FILTER['#2', 'that is shiny']\", \"PROJECT['color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_4575", "input": "What is the color of the shiny object behind the two balls?", "output": "[\"SELECT['balls']\", \"PROJECT['objects behind the two of #REF', '#1']\", \"FILTER['#2', 'that are shiny']\", \"PROJECT['color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_4577", "input": "How many balls are there?", "output": "[\"SELECT['balls']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_4578", "input": "Does the largest shiny sphere have the same color as the largest shiny cube?", "output": "[\"SELECT['sphere']\", \"FILTER['#1', 'that is largest']\", \"FILTER['#2', 'that is shiny']\", \"PROJECT['color of #REF', '#3']\", \"SELECT['cubes']\", \"FILTER['#5', 'that is largest']\", \"FILTER['#6', 'that is shiny']\", \"PROJECT['color of #REF', '#7']\", \"BOOLEAN['#4', 'equal to #8']\"]"}
{"id": "CLEVR_dev_4579", "input": "What shape is in the majority?", "output": "[\"SELECT['shapes']\", \"FILTER['#1', 'that is in the majority']\"]"}
{"id": "CLEVR_dev_4581", "input": "What is the most dominant color?", "output": "[\"SELECT['colors']\", \"FILTER['#1', 'that is most dominant']\"]"}
{"id": "CLEVR_dev_4584", "input": "what shape are the only two items that are touching?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that are touching']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_4585", "input": "is the blue cylinder touching the green cube?", "output": "[\"SELECT['the blue cylinder']\", \"SELECT['the green cube']\", \"BOOLEAN['#1', 'touching #2']\"]"}
{"id": "CLEVR_dev_4587", "input": "are the cubes touching the spheres?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are cubes']\", \"FILTER['#1', 'that are spheres']\", \"BOOLEAN['#2', 'are touching #3']\"]"}
{"id": "CLEVR_dev_4590", "input": "Are there any cubes on the left?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'on the left']\", \"BOOLEAN['#2', 'are there any #REF']\"]"}
{"id": "CLEVR_dev_4593", "input": "How many objects are to the right of the small metallic object?", "output": "[\"SELECT['small metallic object']\", \"PROJECT['objects to the right of #REF', '#1']\"]"}
{"id": "CLEVR_dev_4600", "input": "How many purple shapes are there?", "output": "[\"SELECT['purple shapes']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_4603", "input": "How many cubes are the same color as the large cylinder?", "output": "[\"SELECT['cubes']\", \"SELECT['large cylinder']\", \"PROJECT['color of #REF', '#1']\", \"PROJECT['color of #REF', '#2']\", \"COMPARATIVE['#1', '#3', 'is the same as #4']\", \"AGGREGATE['count', '#5']\"]"}
{"id": "CLEVR_dev_4605", "input": "Can I find a cube anywhere?", "output": "[\"SELECT['cubes']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'higher than zero']\"]"}
{"id": "CLEVR_dev_4609", "input": "How many metal spheres?", "output": "[\"SELECT['spheres']\", \"FILTER['#1', 'that are metal']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_4610", "input": "what is the color of the frontmost sphere?", "output": "[\"SELECT['sphere']\", \"FILTER['#1', 'that is frontmost']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_4613", "input": "What number of cylinders are purple", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'that are purple']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_4617", "input": "What object is the farthest to the right?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'farthest to the right']\"]"}
{"id": "CLEVR_dev_4618", "input": "What shape are the objects?", "output": "[\"SELECT['objects']\", \"PROJECT['shapes of #REF', '#1']\"]"}
{"id": "CLEVR_dev_4619", "input": "What shape do the two blue items share?", "output": "[\"SELECT['blue items']\", \"PROJECT['shape of #REF', '#1']\"]"}
{"id": "CLEVR_dev_4623", "input": "Are all the cubes made from the same material?", "output": "[\"SELECT['cubes']\", \"PROJECT['materials of #REF', '#1']\", \"BOOLEAN['#2', 'all the same']\"]"}
{"id": "CLEVR_dev_4624", "input": "How many times more cylinders are there than cubes?", "output": "[\"SELECT['cylinders']\", \"SELECT['cubes']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"ARITHMETIC['division', '#3', '#4']\"]"}
{"id": "CLEVR_dev_4625", "input": "What color is the largest shape?", "output": "[\"SELECT['largest shape']\", \"PROJECT['color of #REF', '#1']\"]"}
{"id": "CLEVR_dev_4630", "input": "Are there any matte objects here?", "output": "[\"SELECT['objects here']\", \"FILTER['#1', 'that are matte']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at least one']\"]"}
{"id": "CLEVR_dev_4631", "input": "how many shiny objects are here?", "output": "[\"SELECT['shiny objects']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_4633", "input": "Are any items partially concealed?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that are partially concealed']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at least one']\"]"}
{"id": "CLEVR_dev_4634", "input": "How many cubes are the same material as the yellow sphere?", "output": "[\"SELECT['cubes']\", \"SELECT['yellow sphere']\", \"PROJECT['materials of #REF', '#1']\", \"PROJECT['material of #REF', '#2']\", \"COMPARATIVE['#1', '#3', 'is the same as #4']\", \"AGGREGATE['count', '#5']\"]"}
{"id": "CLEVR_dev_4636", "input": "Are there any cubes that aren't purple?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that are purple']\", \"DISCARD['#1', '#2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least one']\"]"}
{"id": "CLEVR_dev_4637", "input": "How many objects are either metallic or shiny?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are metallic']\", \"FILTER['#1', 'that are shiny']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"UNION['#4', '#5']\"]"}
{"id": "CLEVR_dev_4638", "input": "is the green cube the same size as the shiney red ball?", "output": "[\"SELECT['the green cube']\", \"SELECT['the shiney red ball']\", \"PROJECT['the size of #REF', '#1']\", \"PROJECT['the size of #REF', '#2']\", \"BOOLEAN['#3', 'is the same as #4']\"]"}
{"id": "CLEVR_dev_4640", "input": "what kind of object is furthest right?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are furthest right']\", \"PROJECT['kind of object that #REF is', '#2']\"]"}
{"id": "CLEVR_dev_4642", "input": "Is there a yellow rubber cylinder?", "output": "[\"SELECT['yellow cylinder']\", \"FILTER['#1', 'that is rubber']\", \"BOOLEAN['#2', 'is there any #REF']\"]"}
{"id": "CLEVR_dev_4645", "input": "How many cylinders in this picture are metallic?", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'that are metallic']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_4649", "input": "What is the shape of the largest green rubber object?", "output": "[\"SELECT['largest green rubber object']\", \"PROJECT['shape of #REF', '#1']\"]"}
{"id": "CLEVR_dev_4656", "input": "Are there any large spheres?", "output": "[\"SELECT['large spheres']\", \"BOOLEAN['#1', 'are there any #REF']\"]"}
{"id": "CLEVR_dev_4659", "input": "Are there any metallic colored items near solid colored items?", "output": "[\"SELECT['metallic colored items']\", \"SELECT['solid colored items']\", \"FILTER['#1', 'near #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is higher than zero']\"]"}
{"id": "CLEVR_dev_4663", "input": "What is the shape of the object partially hidden behind the large matte object?", "output": "[\"SELECT['the large matte object']\", \"SELECT['objects']\", \"FILTER['#2', 'that are partially hidden behind #1']\", \"PROJECT['the shape of #REF', '#3']\"]"}
{"id": "CLEVR_dev_4665", "input": "Are there any gray matter objects behind the brown matte object?", "output": "[\"SELECT['matte objects']\", \"FILTER['#1', 'that Are gray']\", \"FILTER['#1', 'that is brown']\", \"FILTER['#2', 'behind #3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is higher than zero']\"]"}
{"id": "CLEVR_dev_4667", "input": "Are there more teal or silver objects?", "output": "[\"SELECT['teal objects']\", \"SELECT['silver objects']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"COMPARISON['max', '#3', '#4']\"]"}
{"id": "CLEVR_dev_4669", "input": "How many objects are made of blue metal?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are made of blue metal']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_4670", "input": "Is the object closest to the camera the largest?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are closest to the camera']\", \"PROJECT['size of #REF', '#1']\", \"PROJECT['size of #REF', '#2']\", \"AGGREGATE['max', '#3']\", \"BOOLEAN['#4', 'is the same as #5']\"]"}
{"id": "CLEVR_dev_468", "input": "Is the number of balls the same number as the cylinders?", "output": "[\"SELECT['balls']\", \"SELECT['cylinders']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'the same as #4']\"]"}
{"id": "CLEVR_dev_4680", "input": "what color is the object to the farthest right side?", "output": "[\"SELECT['the objects']\", \"FILTER['#1', 'to the farthest right side']\", \"PROJECT['the color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_4681", "input": "What shape is a majority of the objects?", "output": "[\"SELECT['objects']\", \"PROJECT['shapes of #REF', '#1']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is the highest']\"]"}
{"id": "CLEVR_dev_4682", "input": "what shape appears most often?", "output": "[\"SELECT['shapes']\", \"FILTER['#1', 'that appears most often']\"]"}
{"id": "CLEVR_dev_4686", "input": "How many of these objects are made from the same material?", "output": "[\"SELECT['objects']\", \"PROJECT['materials that #REF are made from', '#1']\", \"COMPARATIVE['#1', '#2', 'are the same']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_4689", "input": "Is the large blue metallic cylinder and the large rubber cylinder in front of it the same color?", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'that are large']\", \"FILTER['#2', 'that are blue']\", \"FILTER['#3', 'that are metallic']\", \"PROJECT['the color of #REF', '#4']\", \"FILTER['#2', 'that are rubber']\", \"FILTER['#6', 'that are in front of #4']\", \"PROJECT['the color of #REF', '#7']\", \"BOOLEAN['#5', 'is the same as #8']\"]"}
{"id": "CLEVR_dev_4690", "input": "What is the name of the shape directly behind the only metallic object?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are metallic']\", \"FILTER['#1', 'directly behind #2']\", \"PROJECT['the name of #REF', '#3']\"]"}
{"id": "CLEVR_dev_4693", "input": "How many objects have two sides?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that have two sides']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_4694", "input": "What color is the small matte ball?", "output": "[\"SELECT['balls']\", \"FILTER['#1', 'that are small']\", \"FILTER['#1', 'that are matte']\", \"INTERSECTION['#1', '#2', '#3']\", \"PROJECT['the color of #REF', '#4']\"]"}
{"id": "CLEVR_dev_47", "input": "are half the items shown green/", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that are green/']\", \"DISCARD['#1', '#2']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to #5']\"]"}
{"id": "CLEVR_dev_4700", "input": "What is the number of cylinders?", "output": "[\"SELECT['cylinders']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_4701", "input": "There is a small object to the right of the big cylinder, what is its shape?", "output": "[\"SELECT['small object']\", \"SELECT['big cylinder']\", \"FILTER['#1', 'to the right of #2']\", \"PROJECT['shape of #REF', '#3']\"]"}
{"id": "CLEVR_dev_4702", "input": "How many objects have four sides?", "output": "[\"SELECT['objects']\", \"PROJECT['sides of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is four']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "CLEVR_dev_4704", "input": "How many spheres are the same material as the red cube?", "output": "[\"SELECT['cube']\", \"FILTER['#1', 'that is red']\", \"PROJECT['material of #REF', '#2']\", \"SELECT['spheres']\", \"PROJECT['materials of #REF', '#4']\", \"COMPARATIVE['#4', '#5', 'are the same as #3']\", \"AGGREGATE['count', '#6']\"]"}
{"id": "CLEVR_dev_4708", "input": "what shape is the matte object?", "output": "[\"SELECT['matte object']\", \"PROJECT['shape of #REF', '#1']\"]"}
{"id": "CLEVR_dev_4711", "input": "How many objects are the same?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are the same']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_4713", "input": "Are there any shapes by themselves?", "output": "[\"SELECT['shapes']\", \"FILTER['#1', 'that are by themselves']\", \"BOOLEAN['#2', 'are there any #REF']\"]"}
{"id": "CLEVR_dev_4717", "input": "What color is the cylinder that is not the same material as the other two?", "output": "[\"SELECT['materials']\", \"PROJECT['cylinders of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#2', '#3', 'is not two']\", \"PROJECT['color of #REF', '#4']\"]"}
{"id": "CLEVR_dev_4718", "input": "How many total blue objects are present?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are blue']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_4720", "input": "How many purple objects are to the right of the small sphere?", "output": "[\"SELECT['purple objects']\", \"SELECT['small sphere']\", \"FILTER['#1', 'to the right of #2']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_4721", "input": "How many round object are there that are shiny?", "output": "[\"SELECT['round objects']\", \"FILTER['#1', 'that are shiny']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_4722", "input": "How many large cylinders?", "output": "[\"SELECT['large cylinders']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_4724", "input": "How may of the spheres are metallic and green?", "output": "[\"SELECT['spheres']\", \"FILTER['#1', 'that is metallic']\", \"FILTER['#2', 'that is green']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_4725", "input": "Is there a yellow sphere? ", "output": "[\"SELECT['sphere']\", \"FILTER['#1', 'that are yellow']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at least one']\"]"}
{"id": "CLEVR_dev_4728", "input": "how many shades of blue are there", "output": "[\"SELECT['blue']\", \"PROJECT['shades of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_4733", "input": "What color is the cylinder by the blue ball?", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'that are by the blue ball']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_4738", "input": "What color are the two large matching metallic items?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that are large']\", \"FILTER['#2', 'that are metallic']\", \"FILTER['#3', 'that are matching']\", \"PROJECT['the color of #REF', '#4']\"]"}
{"id": "CLEVR_dev_4741", "input": "What is the number of objects that are either cyan or cubes?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are cyan']\", \"AGGREGATE['count', '#2']\", \"FILTER['#1', 'that are cube']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['sum', '#4', '#5']\"]"}
{"id": "CLEVR_dev_4748", "input": "What shape is the largest silver object?", "output": "[\"SELECT['silver object']\", \"FILTER['#1', 'that is largest']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_4749", "input": "What is the color of the object in front of the large green cube?", "output": "[\"SELECT['large green cube']\", \"PROJECT['object in front of #REF', '#1']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_4752", "input": "Are all of the balls made of the same material?", "output": "[\"SELECT['balls']\", \"PROJECT['materials of #REF', '#1']\", \"BOOLEAN['#2', 'if all of #REF are the same']\"]"}
{"id": "CLEVR_dev_4758", "input": "What is the color of the item that appears twice?", "output": "[\"SELECT['item']\", \"FILTER['#1', 'that appears twice']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_4759", "input": "Are there more spheres or cube?", "output": "[\"SELECT['spheres']\", \"SELECT['cubes']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"COMPARISON['max', '#3', '#4']\"]"}
{"id": "CLEVR_dev_4763", "input": "How many metallic shapes are there in this group?", "output": "[\"SELECT['shapes']\", \"FILTER['#1', 'that are metallic']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_4765", "input": "what object is farthest to the back?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is farthest to the back']\"]"}
{"id": "CLEVR_dev_4767", "input": "What color is the object closest to the camera?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is closest to the camera']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_4769", "input": "Are there more small metal cylinders than matte cubes?", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'that are small']\", \"FILTER['#2', 'that are metal']\", \"AGGREGATE['count', '#3']\", \"SELECT['cubes']\", \"FILTER['#5', 'that are matte']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#4', 'more than #7']\"]"}
{"id": "CLEVR_dev_4771", "input": "Are there an equal number of red matte cubes and green matte cylinders?", "output": "[\"SELECT['red cubes']\", \"FILTER['#1', 'that are matte']\", \"SELECT['green cylinders']\", \"FILTER['#1', 'that are matte']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'the same as #6']\"]"}
{"id": "CLEVR_dev_4772", "input": "Is the small green object behind the brown sphere?", "output": "[\"SELECT['the brown sphere']\", \"SELECT['objects']\", \"FILTER['#2', 'that are small']\", \"FILTER['#3', 'that are green']\", \"BOOLEAN['#4', 'are behind #1']\"]"}
{"id": "CLEVR_dev_4775", "input": "Are there the same number of red small cubes as blue small cubes?", "output": "[\"SELECT['red small cubes']\", \"SELECT['blue small cubes']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'the same as #4']\"]"}
{"id": "CLEVR_dev_4779", "input": "Are there any shapes besides spheres and cylinders?", "output": "[\"SELECT['shapes']\", \"FILTER['#1', 'spheres']\", \"DISCARD['#1', '#2']\", \"FILTER['#1', 'cylinders']\", \"DISCARD['#1', '#4']\", \"INTERSECTION['#1', '#3', '#5']\", \"BOOLEAN['#6', 'are there any #REF']\"]"}
{"id": "CLEVR_dev_4783", "input": "the metal object has what shape?", "output": "[\"SELECT['metal object']\", \"PROJECT['shape of #REF', '#1']\"]"}
{"id": "CLEVR_dev_4784", "input": "Is the blue ball in the foreground?", "output": "[\"SELECT['ball']\", \"FILTER['#1', 'that is blue']\", \"BOOLEAN['#2', 'is in the foreground']\"]"}
{"id": "CLEVR_dev_4786", "input": "what object is halfway hidden behind the purple cube?", "output": "[\"SELECT['objects']\", \"SELECT['purple cube']\", \"FILTER['#1', 'halfway hidden behind #2']\"]"}
{"id": "CLEVR_dev_4787", "input": "All the matte cubes are what color?", "output": "[\"SELECT['matte cubes']\", \"PROJECT['color of #REF', '#1']\"]"}
{"id": "CLEVR_dev_4790", "input": "which object is green?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is green']\"]"}
{"id": "CLEVR_dev_4791", "input": "How many green objects are to the right of the teal cube?", "output": "[\"SELECT['teal cube']\", \"PROJECT['green objects to the right of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_4792", "input": "What is the shape of the large shiny item?", "output": "[\"SELECT['large item']\", \"FILTER['#1', 'that is shiny']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_4798", "input": "What is the shape of the matte purple object behind the cyan matte object? ", "output": "[\"SELECT['matte objects']\", \"FILTER['#1', 'that is purple']\", \"FILTER['#1', 'that is cyan']\", \"FILTER['#2', 'behind #3']\", \"PROJECT['shape of #REF', '#4']\"]"}
{"id": "CLEVR_dev_4799", "input": "I need some gold colored shapes, can I get them here?", "output": "[\"SELECT['gold colored shapes']\", \"BOOLEAN['#1', 'are there any #REF']\"]"}
{"id": "CLEVR_dev_48", "input": "Is there a purple box behind a red cylinder?", "output": "[\"SELECT['cylinders']\", \"SELECT['boxes']\", \"FILTER['#2', 'that are purple']\", \"FILTER['#3', 'behind #1']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'more than zero']\"]"}
{"id": "CLEVR_dev_4805", "input": "What color object is directly behind the purple cube?", "output": "[\"SELECT['the purple cube']\", \"PROJECT['the object directly behind of #REF', '#1']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_4808", "input": "What is the material of the object in the front?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is in the front']\", \"PROJECT['material of #REF', '#2']\"]"}
{"id": "CLEVR_dev_4810", "input": "Is there a small cube touching a large sphere?", "output": "[\"SELECT['small cube']\", \"SELECT['large sphere']\", \"FILTER['#1', 'touching #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is higher than zero']\"]"}
{"id": "CLEVR_dev_4812", "input": "What shape dominates the right side of the picture?", "output": "[\"SELECT['shapes']\", \"FILTER['#1', 'that dominates the right side']\"]"}
{"id": "CLEVR_dev_4814", "input": "What is the shape of the three shiny objects?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are shiny']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_4818", "input": "There is a large metallic cube shaped object of what color?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are cube shaped']\", \"FILTER['#2', 'that are metallic']\", \"FILTER['#3', 'that are large']\", \"PROJECT['the color of #REF', '#4']\"]"}
{"id": "CLEVR_dev_482", "input": "What is the shape of the object that is the largest metal object?", "output": "[\"SELECT['metal objects']\", \"FILTER['#1', 'that is the largest']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_4822", "input": "is there any shiny objects", "output": "[\"SELECT['shiny objects']\", \"BOOLEAN['#1', 'are there any #REF']\"]"}
{"id": "CLEVR_dev_4824", "input": "Are more cylinders  or cubes shown?", "output": "[\"SELECT['cylinders']\", \"SELECT['cubes']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"COMPARISON['max', '#3', '#4']\"]"}
{"id": "CLEVR_dev_4827", "input": "how many blue cubes are there?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that are blue']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_4835", "input": "Is there a large cyan cylinder?", "output": "[\"SELECT['large cyan cylinder']\", \"BOOLEAN['#1', 'Is there any #REF']\"]"}
{"id": "CLEVR_dev_4839", "input": "What color is most common here?", "output": "[\"SELECT['colors']\", \"FILTER['#1', 'that is most common']\"]"}
{"id": "CLEVR_dev_4841", "input": "Are there more tiny rubber things than cylinders and blue cubes?", "output": "[\"SELECT['cylinders']\", \"SELECT['cubes']\", \"FILTER['#2', 'that are blue']\", \"UNION['#1', '#3']\", \"AGGREGATE['count', '#4']\", \"SELECT['objects']\", \"FILTER['#6', 'that are rubber']\", \"FILTER['#7', 'that are tiny']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'higher than #5']\"]"}
{"id": "CLEVR_dev_4842", "input": "How many more spheres than cubes?", "output": "[\"SELECT['spheres']\", \"SELECT['cubes']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "CLEVR_dev_4852", "input": "How many of the same shape as the tiny red thing are there?", "output": "[\"SELECT['thing']\", \"FILTER['#1', 'that is tiny']\", \"FILTER['#2', 'that is red']\", \"PROJECT['shape of #REF', '#3']\", \"SELECT['objects']\", \"DISCARD['#5', '#3']\", \"PROJECT['shapes of #REF', '#6']\", \"COMPARATIVE['#6', '#7', 'are the same as #4']\", \"AGGREGATE['count', '#8']\"]"}
{"id": "CLEVR_dev_4855", "input": "What shape is between the purple cylinder and gray cube?", "output": "[\"SELECT['the purple cylinder']\", \"SELECT['the gray cube']\", \"SELECT['shapes']\", \"FILTER['#3', 'that are betweenleftside #1']\", \"FILTER['#4', 'that are betweenrightside #2']\"]"}
{"id": "CLEVR_dev_4857", "input": "is the cylinder touching a sphere or a cube?", "output": "[\"SELECT['the cylinder']\", \"SELECT['spheres']\", \"SELECT['cubes']\", \"BOOLEAN['#1', 'is touching a #2']\", \"BOOLEAN['#1', 'is touching a #3']\", \"UNION['#4', '#5']\"]"}
{"id": "CLEVR_dev_4859", "input": "How many shiny yellow things are there?", "output": "[\"SELECT['things']\", \"FILTER['#1', 'that are yellow']\", \"FILTER['#1', 'that are shiny']\", \"INTERSECTION['#1', '#2', '#3']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "CLEVR_dev_4862", "input": "How many shiny brown objects are visible?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are shiny']\", \"FILTER['#2', 'that are brown']\", \"FILTER['#3', 'that are visible']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "CLEVR_dev_4863", "input": "Are the spheres the same color?", "output": "[\"SELECT['spheres']\", \"PROJECT['colors of #REF', '#1']\", \"BOOLEAN['#2', 'the same']\"]"}
{"id": "CLEVR_dev_4866", "input": "How many objects are behind the formost cylinder?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is cylinder']\", \"FILTER['#2', 'that is formosts']\", \"FILTER['#1', 'that are behind #3']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "CLEVR_dev_4869", "input": "What color is the cylinder closest to the center of the plane?", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'that are closest to the center of the plane']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_487", "input": "Are there any small gold balls?", "output": "[\"SELECT['small balls']\", \"FILTER['#1', 'that are gold']\", \"BOOLEAN['#2', 'are there any #REF']\"]"}
{"id": "CLEVR_dev_4870", "input": "Is there a blue ball reflected in a teal cube?", "output": "[\"SELECT['balls']\", \"FILTER['#1', 'that are blue']\", \"FILTER['#2', 'that are reflected in a teal cube']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least one']\"]"}
{"id": "CLEVR_dev_4876", "input": "What color is the furthest object from the red cube?", "output": "[\"SELECT['objects']\", \"SELECT['the red cube']\", \"FILTER['#1', 'furthest from #2']\", \"PROJECT['color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_4878", "input": "Are there less spheres in this photo than cylinders?", "output": "[\"SELECT['this photo']\", \"PROJECT['spheres in #REF', '#1']\", \"PROJECT['cylinders in #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is less than #5']\"]"}
{"id": "CLEVR_dev_488", "input": "What color is the small object near the green cube?", "output": "[\"SELECT['small object']\", \"SELECT['green cube']\", \"FILTER['#1', 'near #2']\", \"PROJECT['color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_4881", "input": "how many spheres are in front of the big blue cube", "output": "[\"SELECT['spheres']\", \"SELECT['big cube']\", \"FILTER['#2', 'that is blue']\", \"FILTER['#1', 'in front of #3']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "CLEVR_dev_4885", "input": "How many green objects are there in this picutre?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'in the picutre']\", \"FILTER['#2', 'that are green']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_4887", "input": "What is the shape of the object closest to the big blue ball?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is big']\", \"FILTER['#2', 'that is blue']\", \"FILTER['#3', 'that is ball']\", \"FILTER['#1', 'that is closest to #4']\", \"PROJECT['shape of #REF', '#5']\"]"}
{"id": "CLEVR_dev_4890", "input": "What is the color of the object to the right of the purple cube?", "output": "[\"SELECT['object']\", \"SELECT['purple cube']\", \"FILTER['#1', 'to the right of #2']\", \"PROJECT['color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_4892", "input": "how many cylinders are on the right side of the image?", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'that are on the right side of the image']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_4893", "input": "which color is the largest sphere?", "output": "[\"SELECT['largest sphere']\", \"PROJECT['color of #REF', '#1']\"]"}
{"id": "CLEVR_dev_490", "input": "What color is the object that is to the left of all of the other objects?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are to the left of all other objects']\", \"PROJECT['the color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_4901", "input": "How many of the objects are not red or cylinders?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are red']\", \"FILTER['#1', 'that are cylinders']\", \"DISCARD['#3', '#2']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['sum', '#6', '#7']\", \"ARITHMETIC['difference', '#5', '#8']\"]"}
{"id": "CLEVR_dev_4903", "input": "Are all the purple cylinders made from the same material?", "output": "[\"SELECT['purple cylinders']\", \"PROJECT['materials of #REF', '#1']\", \"BOOLEAN['#2', 'all the same']\"]"}
{"id": "CLEVR_dev_4913", "input": "Are any of the large cylinders matte?", "output": "[\"SELECT['large cylinders']\", \"FILTER['#1', 'that Are matte']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is higher than zero']\"]"}
{"id": "CLEVR_dev_4914", "input": "How many objects are the same shape as the red metallic object?", "output": "[\"SELECT['objects']\", \"SELECT['metallic object']\", \"FILTER['#2', 'that is red']\", \"PROJECT['shapes of #REF', '#1']\", \"PROJECT['shape of #REF', '#3']\", \"COMPARATIVE['#1', '#4', 'is the same as #5']\", \"AGGREGATE['count', '#6']\"]"}
{"id": "CLEVR_dev_4918", "input": "Do any metallic objects share the same color as the object that is in front of the object that is in front of the purple thing?", "output": "[\"SELECT['thing']\", \"FILTER['#1', 'that is purple']\", \"SELECT['object']\", \"FILTER['#3', 'in front of #2']\", \"FILTER['#3', 'in front of #4']\", \"PROJECT['color of #REF', '#5']\", \"FILTER['#3', 'that is metallic']\", \"PROJECT['color of #REF', '#7']\", \"BOOLEAN['if_exist', '#8', 'is same as #6']\"]"}
{"id": "CLEVR_dev_492", "input": "What color is the shape to the right of the pair of brown objects?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are brown']\", \"PROJECT['the shape to the right of #REF', '#2']\", \"PROJECT['color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_4922", "input": "Are there more green cubes than silver cubes?", "output": "[\"SELECT['green cubes']\", \"SELECT['silver cubes']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'higher than #4']\"]"}
{"id": "CLEVR_dev_4926", "input": "how many spheres are large?", "output": "[\"SELECT['spheres']\", \"FILTER['#1', 'that are large']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_4927", "input": "There are three gray objects. What shape is the one closest to the blue sphere?", "output": "[\"SELECT['gray objects']\", \"SELECT['blue sphere']\", \"FILTER['#1', 'that is closest to #2']\", \"PROJECT['shape of #REF', '#3']\"]"}
{"id": "CLEVR_dev_4932", "input": "how many small shapes are hiding at the back of the picture?", "output": "[\"SELECT['shapes']\", \"FILTER['#1', 'that are hiding at the back of the picture']\", \"FILTER['#2', 'that are small']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_4933", "input": "Is the Green item metallic?", "output": "[\"SELECT['item']\", \"FILTER['#1', 'that is Green']\", \"BOOLEAN['#2', 'is metallic']\"]"}
{"id": "CLEVR_dev_4934", "input": "Are there more objects that are metallic than there are objects made of rubber?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are metallic']\", \"FILTER['#1', 'that are rubber']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is higher than #5']\"]"}
{"id": "CLEVR_dev_4936", "input": "Are there less cubes than balls?", "output": "[\"SELECT['cubes']\", \"AGGREGATE['count', '#1']\", \"SELECT['balls']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#2', 'is less than #4']\"]"}
{"id": "CLEVR_dev_4937", "input": "How many items have four sides?", "output": "[\"SELECT['items']\", \"PROJECT['sides of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is four']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "CLEVR_dev_4939", "input": "What color is the object that is behind the large yellow cube behind the blue cylinder?", "output": "[\"SELECT['the blue cylinder']\", \"PROJECT['cubes behind of #REF', '#1']\", \"FILTER['#2', 'that are large']\", \"FILTER['#3', 'that are yellow']\", \"PROJECT['object behind of #REF', '#4']\", \"PROJECT['color of #REF', '#5']\"]"}
{"id": "CLEVR_dev_4943", "input": "How many objects have a flat bottom?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that have a flat bottom']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_4944", "input": "How many other objects are the same shape as the large gold block?", "output": "[\"SELECT['objects']\", \"SELECT['large block']\", \"FILTER['#2', 'that is gold']\", \"PROJECT['shapes of #REF', '#1']\", \"PROJECT['shape of #REF', '#3']\", \"COMPARATIVE['#1', '#4', 'is the same as #5']\", \"AGGREGATE['count', '#6']\"]"}
{"id": "CLEVR_dev_4949", "input": "What is the shape of the object in front?", "output": "[\"SELECT['object']\", \"FILTER['#1', 'that is in front']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_4950", "input": "How many objects are there that are not metallic?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are not metallic']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_4953", "input": "What color is the object that is not made of the same material as the cyan cube?", "output": "[\"SELECT['the cyan cube']\", \"PROJECT['the material that #REF is made of', '#1']\", \"SELECT['objects']\", \"PROJECT['the materials that #REF are made of', '#3']\", \"COMPARATIVE['#3', '#4', 'is the same as #2']\", \"DISCARD['#3', '#5']\", \"PROJECT['the color of #REF', '#6']\"]"}
{"id": "CLEVR_dev_4954", "input": "Are there any gray spheres?", "output": "[\"SELECT['gray spheres']\", \"BOOLEAN['#1', 'are there any #REF']\"]"}
{"id": "CLEVR_dev_4956", "input": "How many Yellow Objects are there?", "output": "[\"SELECT['Yellow objects']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_4957", "input": "What is the color of the two cube shaped objects?", "output": "[\"SELECT['cube shaped objects']\", \"PROJECT['color of #REF', '#1']\"]"}
{"id": "CLEVR_dev_4962", "input": "How many matte objects are green?", "output": "[\"SELECT['matte objects']\", \"FILTER['#1', 'that are green']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_4964", "input": "Are there an equal number of large cubes and large cylinders? ", "output": "[\"SELECT['cubes']\", \"SELECT['cylinders']\", \"FILTER['#1', 'that are large']\", \"FILTER['#2', 'that are large']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to #6']\"]"}
{"id": "CLEVR_dev_4970", "input": "is the green sphere the largest sphere?", "output": "[\"SELECT['green sphere']\", \"SELECT['sphere']\", \"DISCARD['#2', '#1']\", \"BOOLEAN['#1', 'larger than #3']\"]"}
{"id": "CLEVR_dev_4972", "input": "Is there a blue circle?", "output": "[\"SELECT['blue circle']\", \"BOOLEAN['#1', 'is there any #REF']\"]"}
{"id": "CLEVR_dev_4975", "input": "how many gray shapes are there?", "output": "[\"SELECT['shapes']\", \"FILTER['#1', 'that are gray']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_4977", "input": "Are the cylinders the same color and material?", "output": "[\"SELECT['cylinders']\", \"PROJECT['colors of #REF', '#1']\", \"PROJECT['materials of #REF', '#1']\", \"BOOLEAN['#2', 'are the same']\", \"BOOLEAN['#3', 'are the same']\", \"UNION['#4', '#5']\"]"}
{"id": "CLEVR_dev_4988", "input": "how many cylinders are behind the large blue cylinder?", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'that is blue']\", \"FILTER['#2', 'that is large']\", \"FILTER['#1', 'behind #3']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "CLEVR_dev_499", "input": "How many grass colored items are there?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that are grass colored']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_4991", "input": "Alre these object all different colors?", "output": "[\"SELECT['objects']\", \"PROJECT['colors of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is more than one']\"]"}
{"id": "CLEVR_dev_4995", "input": "What is the material of the yellow sphere?", "output": "[\"SELECT['yellow sphere']\", \"PROJECT['material of #REF', '#1']\"]"}
{"id": "CLEVR_dev_5", "input": "What color is the ball to the left of the green cube?", "output": "[\"SELECT['green cube']\", \"PROJECT['ball to the left of #REF', '#1']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_500", "input": "What color is the only item that is neither a cylinder or a sphere?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that are cylinder']\", \"FILTER['#1', 'that are sphere']\", \"DISCARD['#1', '#2']\", \"DISCARD['#4', '#3']\", \"PROJECT['color of #REF', '#5']\"]"}
{"id": "CLEVR_dev_5000", "input": "What color is the object closest to the front?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is closest to the front']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_5003", "input": "How many objects are bigger than the green ball?", "output": "[\"SELECT['balls']\", \"FILTER['#1', 'that are green']\", \"SELECT['objects']\", \"DISCARD['#3', '#2']\", \"PROJECT['the size of #REF', '#2']\", \"PROJECT['the size of #REF', '#4']\", \"COMPARATIVE['#4', '#6', 'is bigger than #5']\", \"AGGREGATE['count', '#7']\"]"}
{"id": "CLEVR_dev_5004", "input": "Do the blue objects obstruct the view of anything?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is blue']\", \"BOOLEAN['#2', 'obstruct the view of anything']\"]"}
{"id": "CLEVR_dev_5005", "input": "Is the cylinder shiny?", "output": "[\"SELECT['the cylinder']\", \"BOOLEAN['#1', 'is shiny']\"]"}
{"id": "CLEVR_dev_5006", "input": "How many purple objects are matte or shiny?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are purple']\", \"FILTER['#2', 'that are matte']\", \"AGGREGATE['count', '#3']\", \"FILTER['#2', 'that are shiny']\", \"AGGREGATE['count', '#5']\", \"ARITHMETIC['sum', '#4', '#6']\"]"}
{"id": "CLEVR_dev_5008", "input": "What shapes are the small rubber cyan things in the picture", "output": "[\"SELECT['small rubber cyan things']\", \"PROJECT['shapes of #REF', '#1']\"]"}
{"id": "CLEVR_dev_5010", "input": "How many objects are blue or green?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are blue']\", \"FILTER['#1', 'that are green']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"ARITHMETIC['sum', '#4', '#5']\"]"}
{"id": "CLEVR_dev_5011", "input": "How many non cylinders are there?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are cylinders']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "CLEVR_dev_5020", "input": "What is the shape of the object that rests between two green objects?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are green']\", \"FILTER['#1', 'that rests between two #2']\", \"PROJECT['shape of #REF', '#3']\"]"}
{"id": "CLEVR_dev_5031", "input": "how many cubes are behind the cylinder?", "output": "[\"SELECT['cylinder']\", \"PROJECT['cubes behind #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_5033", "input": "Is there a tan ball in this image?", "output": "[\"SELECT['balls']\", \"FILTER['#1', 'that is tan']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'more than zero']\"]"}
{"id": "CLEVR_dev_5038", "input": "How many large gold spheres are there?", "output": "[\"SELECT['spheres']\", \"FILTER['#1', 'that are large']\", \"FILTER['#2', 'that are gold']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_5039", "input": "How many matte colored cubes are there?", "output": "[\"SELECT['matte cubes']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_5041", "input": "There are two objects that are the same material and color. What color is the object between them?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are same material']\", \"FILTER['#1', 'that are same colors']\", \"INTERSECTION['#1', '#2', '#3']\", \"FILTER['#1', 'between #4']\", \"PROJECT['color of #REF', '#5']\"]"}
{"id": "CLEVR_dev_505", "input": "Are there any small objects that have the same material as the large cyan sphere to the left of the small purple cylinder?", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'that is small']\", \"FILTER['#2', 'that is purple']\", \"SELECT['sphere']\", \"FILTER['#4', 'that is large']\", \"FILTER['#5', 'that is cyan']\", \"FILTER['#6', 'to the left of #3']\", \"SELECT['objects']\", \"FILTER['#8', 'that are small']\", \"PROJECT['the material of #REF', '#7']\", \"PROJECT['the material of #REF', '#9']\", \"COMPARATIVE['#9', '#11', 'is the same as #10']\", \"AGGREGATE['count', '#12']\", \"BOOLEAN['#13', 'more than zero']\"]"}
{"id": "CLEVR_dev_5051", "input": "What is the color of the object furthest from the others?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'furthest from the others']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_5055", "input": "Is there any other item that is the same color as the cube?", "output": "[\"SELECT['items']\", \"SELECT['cube']\", \"PROJECT['colors of #REF', '#1']\", \"PROJECT['color of #REF', '#2']\", \"COMPARATIVE['#1', '#3', 'is the same as #4']\", \"BOOLEAN['#5', 'is there any #REF']\"]"}
{"id": "CLEVR_dev_5057", "input": "what is the shape of the object furthest back in the image", "output": "[\"SELECT['objects in the image']\", \"FILTER['#1', 'that are the furthest back']\", \"PROJECT['the shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_5064", "input": "Are all the small objects the same shape?", "output": "[\"SELECT['small objects']\", \"PROJECT['shapes of #REF', '#1']\", \"BOOLEAN['#2', 'all the same']\"]"}
{"id": "CLEVR_dev_5068", "input": "What is the material of the small sphere?", "output": "[\"SELECT['small sphere']\", \"PROJECT['material of #REF', '#1']\"]"}
{"id": "CLEVR_dev_5072", "input": "Is the large cube the same color as the large rubber sphere?", "output": "[\"SELECT['large cube']\", \"SELECT['large rubber sphere']\", \"PROJECT['color of #REF', '#1']\", \"PROJECT['color of #REF', '#2']\", \"BOOLEAN['#3', 'the same as #4']\"]"}
{"id": "CLEVR_dev_508", "input": "What is the smallestt shape and also yellow?", "output": "[\"SELECT['shapes']\", \"PROJECT['size of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is the lowest']\", \"FILTER['#3', 'that are yellow']\"]"}
{"id": "CLEVR_dev_5081", "input": "What is the shape that is farthest in the background?", "output": "[\"SELECT['shapes']\", \"FILTER['#1', 'that is farthest in the background']\"]"}
{"id": "CLEVR_dev_5083", "input": "Are there any metallic objects in front of the small matte ball?", "output": "[\"SELECT['metallic objects']\", \"SELECT['small ball']\", \"FILTER['#2', 'that is matte']\", \"FILTER['#1', 'in front of #3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is higher than zero']\"]"}
{"id": "CLEVR_dev_5084", "input": "What shape is the red object that is not in front?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is red']\", \"FILTER['#2', 'that is in front']\", \"DISCARD['#2', '#3']\", \"PROJECT['shape of #REF', '#4']\"]"}
{"id": "CLEVR_dev_5092", "input": "Are there any shapes of the same color located next to one another?", "output": "[\"SELECT['shapes']\", \"PROJECT['color of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is the same']\", \"BOOLEAN['#3', 'if any #REF are located next to one another']\"]"}
{"id": "CLEVR_dev_5093", "input": "Are there many shapes here?", "output": "[\"SELECT['shapes']\", \"BOOLEAN['#1', 'are there many #REF']\"]"}
{"id": "CLEVR_dev_5095", "input": "How many objects are cube shaped and either red or cyan in color?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are cube shaped']\", \"PROJECT['colors of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is red']\", \"COMPARATIVE['#2', '#3', 'is cyan']\", \"AGGREGATE['count', '#4']\", \"AGGREGATE['count', '#5']\", \"UNION['#6', '#7']\"]"}
{"id": "CLEVR_dev_5096", "input": "What is the material of the large cube to the left?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that are large']\", \"FILTER['#2', 'that are to the left']\", \"PROJECT['material of #REF', '#3']\"]"}
{"id": "CLEVR_dev_5105", "input": "What color is the smallestt cube here?", "output": "[\"SELECT['smallestt cube']\", \"PROJECT['color of #REF', '#1']\"]"}
{"id": "CLEVR_dev_5106", "input": "The gray objects, are the behind the green ball?", "output": "[\"SELECT['the green ball']\", \"SELECT['objects']\", \"FILTER['#2', 'that are gray']\", \"BOOLEAN['#3', 'are behind #1']\"]"}
{"id": "CLEVR_dev_5109", "input": "Do the objects of the left side have anything in common?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'on the left side']\", \"PROJECT['Do #REF have anything in common', '#2']\"]"}
{"id": "CLEVR_dev_511", "input": "Are the objects all close in size?", "output": "[\"SELECT['objects']\", \"PROJECT['sizes of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is close']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#4', 'is equal to #5']\"]"}
{"id": "CLEVR_dev_5110", "input": "What color is the shiny object farthest away?", "output": "[\"SELECT['shiny objects']\", \"FILTER['#1', 'that is the farthest away']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_5111", "input": "Are all of the cubes made from the same material?", "output": "[\"SELECT['cubes']\", \"PROJECT['materials of #REF', '#1']\", \"BOOLEAN['#2', 'all the same']\"]"}
{"id": "CLEVR_dev_5113", "input": "The yellow object that is behind a brown object is what shape?", "output": "[\"SELECT['yellow object']\", \"SELECT['brown object']\", \"FILTER['#1', 'behind #2']\", \"PROJECT['shape of #REF', '#3']\"]"}
{"id": "CLEVR_dev_5115", "input": "Are there any cubes located near red spheres?", "output": "[\"SELECT['cubes']\", \"SELECT['spheres']\", \"FILTER['#2', 'that are red']\", \"FILTER['#1', 'that are located near #3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'higher than zero']\"]"}
{"id": "CLEVR_dev_5121", "input": "What shape is the larger cyan item?", "output": "[\"SELECT['cyan item']\", \"FILTER['#1', 'that is larger']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_5123", "input": "How many objects are blue in color and metallic in material?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are blue']\", \"FILTER['#2', 'that are metallic']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_5124", "input": "Which of these objects is not square?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is square']\", \"DISCARD['#1', '#2']\"]"}
{"id": "CLEVR_dev_5126", "input": "Is the number of small purple cubes equal to the number of large purple cubes?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that are purple']\", \"FILTER['#2', 'that are small']\", \"FILTER['#2', 'that are large']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to #6']\"]"}
{"id": "CLEVR_dev_513", "input": "What color is the object that is a different size?", "output": "[\"SELECT['objects']\", \"PROJECT['sizes of #REF', '#1']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is equal to one']\", \"COMPARATIVE['#1', '#2', 'is the same as #4']\", \"PROJECT['color of #REF', '#5']\"]"}
{"id": "CLEVR_dev_5131", "input": "Are all cylinders made of the same material?", "output": "[\"SELECT['cylinders']\", \"PROJECT['the materials that #REF are made of', '#1']\", \"BOOLEAN['#2', 'if all of #REF are the same']\"]"}
{"id": "CLEVR_dev_5135", "input": "Are there any shapes with the exact same shade/color?", "output": "[\"SELECT['objects']\", \"PROJECT['shade/colors of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is the exact same']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least two']\"]"}
{"id": "CLEVR_dev_5141", "input": "How many cylinders are large and metallic?", "output": "[\"SELECT['large metallic cylinders']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_5142", "input": "What color is the item between the blue cube and blue cylinder?", "output": "[\"SELECT['items']\", \"SELECT['blue cube']\", \"SELECT['blue cylinder']\", \"FILTER['#1', 'betweenleftside #2']\", \"FILTER['#4', 'betweenrightside #3']\", \"PROJECT['color of #REF', '#5']\"]"}
{"id": "CLEVR_dev_5148", "input": "Is the yellow cube metallic?", "output": "[\"SELECT['the yellow cube']\", \"BOOLEAN['#1', 'is metallic']\"]"}
{"id": "CLEVR_dev_515", "input": "what color is the object that is the only one if its shape?", "output": "[\"SELECT['objects']\", \"PROJECT['shapes of #REF', '#1']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is one']\", \"COMPARATIVE['#1', '#2', 'is #4']\", \"PROJECT['the color of #REF', '#5']\"]"}
{"id": "CLEVR_dev_5151", "input": "are the red spheres the same size?", "output": "[\"SELECT['red spheres']\", \"PROJECT['sizes of #REF', '#1']\", \"BOOLEAN['#2', 'the same']\"]"}
{"id": "CLEVR_dev_5153", "input": "What color is the small rubber sphere?", "output": "[\"SELECT['small sphere']\", \"FILTER['#1', 'that is rubber']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_5155", "input": "If I wanted a shiny sphere, could I get one here?", "output": "[\"SELECT['spheres']\", \"FILTER['#1', 'that are shiny']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at least one']\"]"}
{"id": "CLEVR_dev_5161", "input": "What is the smallestt shiny object? ", "output": "[\"SELECT['shiny objects']\", \"PROJECT['smallestt of #REF', '#1']\"]"}
{"id": "CLEVR_dev_5162", "input": "The small round item in front of the large cube of the same material; what color is the item of the same shape back and to the right of it?", "output": "[\"SELECT['large cube']\", \"PROJECT['small round item in front of #REF', '#1']\", \"FILTER['#2', 'of the same material']\", \"PROJECT['item of the same shape of #REF', '#3']\", \"FILTER['#4', 'that is to the right of #3']\", \"PROJECT['color of #REF', '#5']\"]"}
{"id": "CLEVR_dev_5166", "input": "How many objects in total are in this scene?", "output": "[\"SELECT['this scene']\", \"PROJECT['objects in #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_5167", "input": "What is the shape of the blue rubber object that is not a sphere?", "output": "[\"SELECT['objects besides a sphere']\", \"FILTER['#1', 'that is blue']\", \"FILTER['#2', 'that is rubber']\", \"PROJECT['the shape of #REF', '#3']\"]"}
{"id": "CLEVR_dev_5168", "input": "Are the two large cubes of the same color?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that are large']\", \"PROJECT['the color of #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to one']\"]"}
{"id": "CLEVR_dev_517", "input": "What shape is the most hidden object?", "output": "[\"SELECT['object']\", \"FILTER['#1', 'that is most hidden']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_5170", "input": "What is the shape of the object that has nothing in common with the other objects?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that has nothing in common with other objects']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_5177", "input": "How many of the objects are large and shiny?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that large']\", \"FILTER['#1', 'that are shiny']\", \"INTERSECTION['#1', '#2', '#3']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "CLEVR_dev_518", "input": "Which color is the item by itself?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that are by itself']\", \"PROJECT['the color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_5180", "input": "Is there an equal amount of cubes, cylinders, and spheres?", "output": "[\"SELECT['cubes']\", \"SELECT['cylinders']\", \"SELECT['spheres']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', ', #5 , #6 are equal']\"]"}
{"id": "CLEVR_dev_5183", "input": "Are the cylinders of the same material?", "output": "[\"SELECT['cylinders']\", \"PROJECT['materials of #REF', '#1']\", \"BOOLEAN['#2', 'the same']\"]"}
{"id": "CLEVR_dev_5185", "input": "How many items are there that have the most objects with the same color?", "output": "[\"SELECT['objects']\", \"PROJECT['color', '#1']\", \"GROUP['count', '#1', '#2']\", \"AGGREGATE['max', '#3']\"]"}
{"id": "CLEVR_dev_5187", "input": "What color is the ball located behind the largest cylinder?", "output": "[\"SELECT['balls']\", \"SELECT['cylinders']\", \"PROJECT['size of #REF', '#2']\", \"SUPERLATIVE['max', '#2', '#3']\", \"FILTER['#1', 'located behind #4']\", \"PROJECT['color of #REF', '#5']\"]"}
{"id": "CLEVR_dev_5193", "input": "What color is the object behind the large green block?", "output": "[\"SELECT['large green block']\", \"PROJECT['object behind #REF', '#1']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_5195", "input": "Are there any objects larger than the shiny blue cube?", "output": "[\"SELECT['cube']\", \"FILTER['#1', 'that is shiny']\", \"FILTER['#2', 'that is blue']\", \"PROJECT['size of #REF', '#3']\", \"SELECT['objects']\", \"DISCARD['#5', '#3']\", \"PROJECT['size of #REF', '#6']\", \"COMPARATIVE['#6', '#7', 'is higher than #4']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is at least one']\"]"}
{"id": "CLEVR_dev_5199", "input": "are both spheres shiny?", "output": "[\"SELECT['spheres']\", \"FILTER['#1', 'that are shiny']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to #4']\"]"}
{"id": "CLEVR_dev_5205", "input": "what is the color of the smallestt matte item?", "output": "[\"SELECT['smallestt items']\", \"FILTER['#1', 'that is matte']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_5206", "input": "Is the smaller green ball in front of the larger green ball? ", "output": "[\"SELECT['green ball']\", \"FILTER['#1', 'that is smaller']\", \"FILTER['#1', 'that is larger']\", \"BOOLEAN['#2', 'in front of #3']\"]"}
{"id": "CLEVR_dev_521", "input": "What is the color of the object that is mostly covered by the large matte sphere?", "output": "[\"SELECT['objects']\", \"SELECT['large sphere']\", \"FILTER['#2', 'that is matte']\", \"FILTER['#1', 'mostly covered by #3']\", \"PROJECT['color of #REF', '#4']\"]"}
{"id": "CLEVR_dev_5210", "input": "Are there more cylinders than there are shiny objects?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are cylinders']\", \"AGGREGATE['count', '#2']\", \"FILTER['#1', 'that are shiny']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#2', 'more than #4']\"]"}
{"id": "CLEVR_dev_5213", "input": "Are the two large squares the same shade of gray?", "output": "[\"SELECT['squares']\", \"FILTER['#1', 'that are large']\", \"PROJECT['the shades of gray of #REF', '#2']\", \"BOOLEAN['#3', 'are the same']\"]"}
{"id": "CLEVR_dev_5216", "input": "What is the color of the large object to the left of the gray cylinder?", "output": "[\"SELECT['gray cylinder']\", \"PROJECT['large object to the left of #REF', '#1']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_5218", "input": "How many chrome objects are there?", "output": "[\"SELECT['chrome objects']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_5223", "input": "are all of the yellow cylinders the same size?", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'that are yellow']\", \"PROJECT['sizes of #REF', '#2']\", \"GROUP['count', '#2', '#3']\", \"AGGREGATE['max', '#4']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#5', 'is equal to #6']\"]"}
{"id": "CLEVR_dev_5225", "input": "How many various colors are there?", "output": "[\"SELECT['objects']\", \"PROJECT['colors of #REF', '#1']\", \"PROJECT['distinct #REF', '#2']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_5226", "input": "how many large matte objects are to the left of the green matte ball? ", "output": "[\"SELECT['green matte ball']\", \"PROJECT['large matte objects to the left of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_523", "input": "What shape is the only cyan object?", "output": "[\"SELECT['cyan object']\", \"PROJECT['shape of #REF', '#1']\"]"}
{"id": "CLEVR_dev_5230", "input": "Is there a large green cylinder?", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'that is large']\", \"FILTER['#2', 'that is green']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'more than zero']\"]"}
{"id": "CLEVR_dev_5233", "input": "Are there any small metallic cylinders that are blue?", "output": "[\"SELECT['small cylinders']\", \"FILTER['#1', 'that are metallic']\", \"FILTER['#2', 'that are blue']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is higher than zero']\"]"}
{"id": "CLEVR_dev_5234", "input": "Is the blue metallic ball larger than the copper cube?", "output": "[\"SELECT['balls']\", \"FILTER['#1', 'that is blue']\", \"FILTER['#2', 'that is metallic']\", \"PROJECT['size of #REF', '#3']\", \"SELECT['cubes']\", \"FILTER['#5', 'that is copper']\", \"PROJECT['size of #REF', '#6']\", \"BOOLEAN['#4', 'larger than #7']\"]"}
{"id": "CLEVR_dev_5235", "input": "What object is not the same shape as the rest?", "output": "[\"SELECT['objects']\", \"PROJECT['the shape of #REF', '#1']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is equal to one']\", \"COMPARATIVE['#1', '#2', 'is equal to #4']\"]"}
{"id": "CLEVR_dev_5236", "input": "Are all the tiny objects the same color?", "output": "[\"SELECT['tiny objects']\", \"PROJECT['colors of #REF', '#1']\", \"BOOLEAN['#2', 'all the same']\"]"}
{"id": "CLEVR_dev_5237", "input": "What color is the largest sphere?", "output": "[\"SELECT['sphere']\", \"PROJECT['size of #REF', '#1']\", \"SUPERLATIVE['max', '#1', '#2']\", \"PROJECT['color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_5238", "input": "Is the cylinder the same color as either of the spheres?", "output": "[\"SELECT['cylinder']\", \"SELECT['spheres']\", \"PROJECT['color of #REF', '#1']\", \"PROJECT['colors of #REF', '#2']\", \"BOOLEAN['#3', 'the same as either of #4']\"]"}
{"id": "CLEVR_dev_524", "input": "How many objects would be left if all cubes were removed?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'cubes']\", \"DISCARD['#1', '#2']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#3']\", \"ARITHMETIC['difference', '#4', '#5']\"]"}
{"id": "CLEVR_dev_5240", "input": "what shape is the gold metallic object?", "output": "[\"SELECT['gold object']\", \"FILTER['#1', 'that is metallic']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_5242", "input": "What is the shape of the object behind the large blue object?", "output": "[\"SELECT['objects']\", \"SELECT['large object']\", \"FILTER['#2', 'that is blue']\", \"FILTER['#1', 'behind #3']\", \"PROJECT['shape of #REF', '#4']\"]"}
{"id": "CLEVR_dev_5245", "input": "What color is the cylinder in the foreground?", "output": "[\"SELECT['cylinder']\", \"FILTER['#1', 'in the foreground']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_5247", "input": "Are all the objects the same size and shape?", "output": "[\"SELECT['objects']\", \"PROJECT['sizes of #REF', '#1']\", \"PROJECT['shapes of #REF', '#1']\", \"BOOLEAN['#2', 'if all #REF are the same']\", \"BOOLEAN['#3', 'if all #REF are the same']\", \"UNION['#4', '#5']\"]"}
{"id": "CLEVR_dev_525", "input": "Is the green metallic sphere that is next to the red metallic sphere the same size as the yellow matte cube?", "output": "[\"SELECT['sphere']\", \"FILTER['#1', 'that is metallic']\", \"FILTER['#2', 'that is green']\", \"FILTER['#2', 'that is red']\", \"FILTER['#3', 'that is next to #4']\", \"PROJECT['size of #REF', '#5']\", \"SELECT['cube']\", \"FILTER['#7', 'that is yellow']\", \"FILTER['#8', 'that is matte']\", \"PROJECT['size of #REF', '#9']\", \"BOOLEAN['#6', 'is the same as #10']\"]"}
{"id": "CLEVR_dev_5254", "input": "How many metallic objects are there that are not purple?", "output": "[\"SELECT['metallic objects']\", \"FILTER['#1', 'that are not purple']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_5256", "input": "How many shiny metal cylinders are next to gray rubber shapes?", "output": "[\"SELECT['shiny cylinders']\", \"FILTER['#1', 'that are metal']\", \"SELECT['gray shapes']\", \"FILTER['#3', 'that are rubber']\", \"FILTER['#2', 'next to #4']\", \"AGGREGATE['count', '#5']\"]"}
{"id": "CLEVR_dev_5259", "input": "What color is the sphere?", "output": "[\"SELECT['the sphere']\", \"PROJECT['the color of #REF', '#1']\"]"}
{"id": "CLEVR_dev_5263", "input": "How many yellow objects are larger than the gray cylinder?", "output": "[\"SELECT['gray cylinder']\", \"PROJECT['yellow objects larger than #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_5264", "input": "What color do two round objects share?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are round']\", \"PROJECT['colors of #REF', '#2']\", \"GROUP['count', '#2', '#3']\", \"COMPARATIVE['#3', '#4', 'is two']\"]"}
{"id": "CLEVR_dev_5269", "input": "Is there a metallic ball?", "output": "[\"SELECT['balls']\", \"FILTER['#1', 'that are metallic']\", \"BOOLEAN['#2', 'if there is a #REF']\"]"}
{"id": "CLEVR_dev_5271", "input": "Are there more spheres or squares?", "output": "[\"SELECT['spheres']\", \"SELECT['squares']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'the same as #4']\"]"}
{"id": "CLEVR_dev_5276", "input": "How many shiny objects are to the left of the tan ball?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are shiny']\", \"FILTER['#1', 'that is tan']\", \"FILTER['#3', 'that is ball']\", \"FILTER['#2', 'that are to the left of #4']\", \"AGGREGATE['count', '#5']\"]"}
{"id": "CLEVR_dev_5277", "input": "Are there any balls that are bigger than another?", "output": "[\"SELECT['balls']\", \"FILTER['#1', 'that are bigger than another']\", \"BOOLEAN['#2', 'if there are any #REF']\"]"}
{"id": "CLEVR_dev_5282", "input": "How many objects are matte material?", "output": "[\"SELECT['objects']\", \"PROJECT['materials of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is matte']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_5285", "input": "which type of shape is in the middle of the cylinder and the cube?", "output": "[\"SELECT['shapes']\", \"FILTER['#1', 'that is in the middle of cylinder and cube']\"]"}
{"id": "CLEVR_dev_529", "input": "Are there 7 items pictured?", "output": "[\"SELECT['items']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'the same as 7']\"]"}
{"id": "CLEVR_dev_5298", "input": "How many spheres are to the right of the brown cube?", "output": "[\"SELECT['spheres']\", \"SELECT['brown cube']\", \"FILTER['#1', 'to the right of #2']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_5299", "input": "How many spherical shapes are matte?", "output": "[\"SELECT['objects']\", \"PROJECT['shapes of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is spherical']\", \"FILTER['#3', 'that are matte']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "CLEVR_dev_5303", "input": "are there more green or gold objects?", "output": "[\"SELECT['green objects']\", \"SELECT['gold objects']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"COMPARISON['max', '#3', '#4']\"]"}
{"id": "CLEVR_dev_5304", "input": "How many objects have a non metallic surface?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that have a metallic surface']\", \"DISCARD['#1', '#2']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_5306", "input": "The object that is the same shape as the metal ball is what color?", "output": "[\"SELECT['the metal ball']\", \"PROJECT['shape of #REF', '#1']\", \"SELECT['objects']\", \"DISCARD['#3', '#1']\", \"PROJECT['shapes of #REF', '#4']\", \"COMPARATIVE['#4', '#5', 'is the same as #2']\", \"PROJECT['color of #REF', '#6']\"]"}
{"id": "CLEVR_dev_5307", "input": "What is the material of the large red cube?", "output": "[\"SELECT['the large red cube']\", \"PROJECT['the material of #REF', '#1']\"]"}
{"id": "CLEVR_dev_5311", "input": "How many more silver objects than green spheres?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are silver']\", \"SELECT['spheres']\", \"FILTER['#3', 'that are green']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['difference', '#5', '#6']\"]"}
{"id": "CLEVR_dev_5321", "input": "is the Green object larger than the blue object?", "output": "[\"SELECT['Green object']\", \"SELECT['blue object']\", \"BOOLEAN['#1', 'larger than #2']\"]"}
{"id": "CLEVR_dev_5322", "input": "What color is the item farthest forward?", "output": "[\"SELECT['items']\", \"PROJECT['the farthest forward of #REF', '#1']\", \"PROJECT['the color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_5326", "input": "How many silver objects, both matte and silver, are there?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are silver']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_5329", "input": "Is there an equal number of matte objects and shiny objects?", "output": "[\"SELECT['matte objects']\", \"SELECT['shiny objects']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'equal to #4']\"]"}
{"id": "CLEVR_dev_5333", "input": "what is the largest and most dominant shape in this picture?", "output": "[\"SELECT['shapes in the picture']\", \"AGGREGATE['max', '#1']\", \"PROJECT['the most dominant #REF', '#1']\", \"INTERSECTION['#1', '#2', '#3']\"]"}
{"id": "CLEVR_dev_5334", "input": "What's the smallestt object in the picture?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'in the picture']\", \"PROJECT['the size of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is the smallestt']\"]"}
{"id": "CLEVR_dev_5338", "input": "What is the shape of the small item that is made of the same material as the purple sphere?", "output": "[\"SELECT['sphere']\", \"FILTER['#1', 'that is purple']\", \"SELECT['items']\", \"FILTER['#3', 'that are small']\", \"PROJECT['materials of #REF', '#4']\", \"PROJECT['material of #REF', '#2']\", \"COMPARATIVE['#4', '#5', 'are the same as #6']\", \"PROJECT['shape of #REF', '#7']\"]"}
{"id": "CLEVR_dev_5339", "input": "How many more green shapes than cylinders?", "output": "[\"SELECT['green shapes']\", \"SELECT['cylinders']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "CLEVR_dev_5340", "input": "what color is the object in front?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is in front']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_5344", "input": "What is the total number of metallic objects that aren't spheres?", "output": "[\"SELECT['metallic objects']\", \"FILTER['#1', 'spheres']\", \"DISCARD['#1', '#2']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_5347", "input": "How many shiny items are there that are the same color as the matte ball?", "output": "[\"SELECT['the matte ball']\", \"PROJECT['color of #REF', '#1']\", \"SELECT['items']\", \"FILTER['#3', 'that are shiny']\", \"PROJECT['colors of #REF', '#4']\", \"COMPARATIVE['#4', '#5', 'is the same as #2']\", \"AGGREGATE['count', '#6']\"]"}
{"id": "CLEVR_dev_5349", "input": "What shape are two objects that are the same color?", "output": "[\"SELECT['objects']\", \"PROJECT['colors of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'are the same']\", \"PROJECT['the shapes of #REF', '#3']\"]"}
{"id": "CLEVR_dev_5354", "input": "How many objects are sperical in shape?", "output": "[\"SELECT['objects']\", \"PROJECT['shapes of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is sperical']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_5356", "input": "What is the shape of the large green object?", "output": "[\"SELECT['large object']\", \"FILTER['#1', 'that is green']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_5361", "input": "Are there the same number of shiny small objects and matte small objects?", "output": "[\"SELECT['small objects']\", \"FILTER['#1', 'that are shiny']\", \"FILTER['#1', 'that are matte']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'the same as #5']\"]"}
{"id": "CLEVR_dev_5362", "input": "How may cylinders are the same material and size?", "output": "[\"SELECT['cylinders']\", \"PROJECT['materials of #REF', '#1']\", \"PROJECT['sizes of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'are the same']\", \"COMPARATIVE['#1', '#3', 'are the same']\", \"INTERSECTION['#1', '#4', '#5']\", \"AGGREGATE['count', '#6']\"]"}
{"id": "CLEVR_dev_5365", "input": "What is the shape of the shiny purple object?", "output": "[\"SELECT['shiny object']\", \"FILTER['#1', 'that is purple']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_5370", "input": "Is there any green cubes here?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that are green']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'more than zero']\"]"}
{"id": "CLEVR_dev_5371", "input": "Are all the cylinders made of the same material?", "output": "[\"SELECT['cylinders']\", \"PROJECT['materials of #REF', '#1']\", \"GROUP['count', '#1', '#2']\", \"AGGREGATE['max', '#3']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#4', 'is equal to #5']\"]"}
{"id": "CLEVR_dev_5373", "input": "Which green item is furthest to the right?", "output": "[\"SELECT['green item']\", \"FILTER['#1', 'that is furthest to the right']\"]"}
{"id": "CLEVR_dev_5378", "input": "Are the 2 cylinders made of the same material?", "output": "[\"SELECT['cylinders']\", \"PROJECT['materials of #REF', '#1']\", \"BOOLEAN['#2', 'the same']\"]"}
{"id": "CLEVR_dev_5379", "input": "What is the color of the shape in the minoirty?", "output": "[\"SELECT['shapes']\", \"FILTER['#1', 'in the minoirty']\", \"PROJECT['the color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_5385", "input": "how many shiny cyan objects are there?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are shiny']\", \"FILTER['#2', 'that are cyan']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_539", "input": "what is the color of the cylinders?", "output": "[\"SELECT['the cylinders']\", \"PROJECT['the color of #REF', '#1']\"]"}
{"id": "CLEVR_dev_5399", "input": "how many things are green", "output": "[\"SELECT['things']\", \"FILTER['#1', 'that are green']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_54", "input": "What number of objects are either blue objects or small gray cylinders?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are blue']\", \"SELECT['cylinders']\", \"FILTER['#3', 'that are small']\", \"FILTER['#4', 'that are gray']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#5']\", \"ARITHMETIC['sum', '#6', '#7']\"]"}
{"id": "CLEVR_dev_5400", "input": "Are both gray objects the same material?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are gray']\", \"PROJECT['the material of #REF', '#2']\", \"BOOLEAN['#3', 'the same']\"]"}
{"id": "CLEVR_dev_5402", "input": "What metallic object is the same shape as the gray object in front of the yellow cylinder?", "output": "[\"SELECT['the yellow cylinder']\", \"SELECT['objects']\", \"FILTER['#2', 'that are gray']\", \"FILTER['#3', 'that are in front of #1']\", \"FILTER['#2', 'that are metallic']\", \"PROJECT['the shape of #REF', '#4']\", \"PROJECT['shapes of #REF', '#5']\", \"COMPARATIVE['#5', '#7', 'is the same as #6']\"]"}
{"id": "CLEVR_dev_5407", "input": "are these all the same material?", "output": "[\"SELECT['these']\", \"PROJECT['materials of #REF', '#1']\", \"BOOLEAN['#2', 'all the same']\"]"}
{"id": "CLEVR_dev_5408", "input": "There is a green cube; is it the same shape as the only red object?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are red']\", \"PROJECT['the shape of #REF', '#2']\", \"SELECT['cubes']\", \"FILTER['#4', 'that are green']\", \"PROJECT['the shape of #REF', '#5']\", \"BOOLEAN['#6', 'is the same as #3']\"]"}
{"id": "CLEVR_dev_5413", "input": "What is the color of the object closest to the cyan object?", "output": "[\"SELECT['cyan object']\", \"PROJECT['object closest to #REF', '#1']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_5415", "input": "Is the small brown object the same color as the small red object?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are small']\", \"FILTER['#2', 'that are red']\", \"FILTER['#2', 'that are brown']\", \"PROJECT['color of #REF', '#4']\", \"PROJECT['color of #REF', '#3']\", \"BOOLEAN['#5', 'is the same as #6']\"]"}
{"id": "CLEVR_dev_5418", "input": "How many larger objects have the same shape?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are large']\", \"PROJECT['shapes of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'are the same']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "CLEVR_dev_542", "input": "What are the spheres all made of?", "output": "[\"SELECT['spheres']\", \"PROJECT['What are #REF made of', '#1']\"]"}
{"id": "CLEVR_dev_5424", "input": "What is the color of the cube that is in between the tan matte cylinder and the shiny purple ball?", "output": "[\"SELECT['cube']\", \"SELECT['tan cylinder']\", \"FILTER['#2', 'that is matte']\", \"SELECT['shiny ball']\", \"FILTER['#4', 'that is purple']\", \"FILTER['#1', 'betweenleftside #3']\", \"FILTER['#6', 'betweenrightside #5']\", \"PROJECT['color of #REF', '#7']\"]"}
{"id": "CLEVR_dev_5425", "input": "how many objects have the shape of a sphere?", "output": "[\"SELECT['objects']\", \"PROJECT['shapes of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is sphere']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_5426", "input": "What is the shape of the large red object?", "output": "[\"SELECT['large object']\", \"FILTER['#1', 'that is red']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_5437", "input": "Are all the yellow items Matte?", "output": "[\"SELECT['yellow items']\", \"FILTER['#1', 'that are Matte']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'the same as #4']\"]"}
{"id": "CLEVR_dev_5440", "input": "What is the shape of the matte gray object besides the green metallic cube?", "output": "[\"SELECT['cube']\", \"FILTER['#1', 'that is green']\", \"FILTER['#2', 'that is metallic']\", \"SELECT['object']\", \"FILTER['#4', 'that is matte']\", \"FILTER['#5', 'that is gray']\", \"DISCARD['#6', '#3']\", \"PROJECT['shape of #REF', '#7']\"]"}
{"id": "CLEVR_dev_5442", "input": "What is the shape of the largest object", "output": "[\"SELECT['largest object']\", \"PROJECT['shape of #REF', '#1']\"]"}
{"id": "CLEVR_dev_5443", "input": "What color is the rubber object that is the same shape and size as the yellow metal sphere?", "output": "[\"SELECT['the yellow sphere']\", \"FILTER['#1', 'that is metal']\", \"PROJECT['the size of #REF', '#2']\", \"PROJECT['the shape of #REF', '#2']\", \"SELECT['objects']\", \"FILTER['#5', 'that is rubber']\", \"PROJECT['the size of #REF', '#6']\", \"PROJECT['the shape of #REF', '#6']\", \"COMPARATIVE['#6', '#7', 'is the same as #3']\", \"COMPARATIVE['#9', '#8', 'is the same as #4']\", \"PROJECT['the color of #REF', '#10']\"]"}
{"id": "CLEVR_dev_5445", "input": "How many rubber spehres are there here?", "output": "[\"SELECT['spehres']\", \"FILTER['#1', 'that are rubber']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_5449", "input": "How many large metal balls are left fot the large blue sphere?", "output": "[\"SELECT['balls']\", \"FILTER['#1', 'that are large']\", \"FILTER['#2', 'that are metal']\", \"SELECT['sphere']\", \"FILTER['#4', 'that is large']\", \"FILTER['#5', 'that is blue']\", \"FILTER['#3', 'that is left of #6']\", \"AGGREGATE['count', '#7']\"]"}
{"id": "CLEVR_dev_5451", "input": "What's the name of the color that's different from all the others in this picture?", "output": "[\"SELECT['colors']\", \"FILTER['#1', 'in this picture']\", \"FILTER['#2', 'that are different from all the others']\", \"PROJECT['name of #REF', '#3']\"]"}
{"id": "CLEVR_dev_5454", "input": "How many objects are the same shape as the green metallic object?", "output": "[\"SELECT['objects']\", \"SELECT['green object']\", \"FILTER['#2', 'that is metallic']\", \"PROJECT['shapes of #REF', '#1']\", \"PROJECT['shape of #REF', '#3']\", \"COMPARATIVE['#1', '#4', 'is the same as #5']\", \"AGGREGATE['count', '#6']\"]"}
{"id": "CLEVR_dev_5462", "input": "Is the green object larger than the yellow object?", "output": "[\"SELECT['green object']\", \"SELECT['yellow object']\", \"BOOLEAN['#1', 'larger than #2']\"]"}
{"id": "CLEVR_dev_5464", "input": "Is there a small shiny object shown?", "output": "[\"SELECT['small shiny object']\", \"BOOLEAN['#1', 'Is there any #REF']\"]"}
{"id": "CLEVR_dev_5466", "input": "Are there an equal number of cubes and cylinders? ", "output": "[\"SELECT['cubes']\", \"SELECT['cylinders']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to #4']\"]"}
{"id": "CLEVR_dev_5469", "input": "Are the three objects closest to the camera the same shape?", "output": "[\"SELECT['objects']\", \"PROJECT['the three #REF closest to the camera', '#1']\", \"PROJECT['shapes of #REF', '#2']\", \"BOOLEAN['#3', 'if the three #REF are the same']\"]"}
{"id": "CLEVR_dev_547", "input": "What color ball is behind the gold cylinder?", "output": "[\"SELECT['gold cylinder']\", \"PROJECT['balls behind #REF', '#1']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_5473", "input": "Are there any matte spheres that are not red?", "output": "[\"SELECT['matte spheres']\", \"FILTER['#1', 'that are not red']\", \"BOOLEAN['#2', 'are there any #REF']\"]"}
{"id": "CLEVR_dev_5480", "input": "What is the shape of the farthest right object?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is farthest right']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_5482", "input": "How many different shapes of objects are there?", "output": "[\"SELECT['objects']\", \"PROJECT['the different shapes of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_5484", "input": "Is the yellow object obstructing the view of anything?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that the yellow object is obstructing']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at least one']\"]"}
{"id": "CLEVR_dev_5492", "input": "How many items are smaller than the green item?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that is green']\", \"DISCARD['#1', '#2']\", \"PROJECT['size of #REF', '#2']\", \"PROJECT['size of #REF', '#3']\", \"COMPARATIVE['#3', '#5', 'is lower than #4']\", \"AGGREGATE['count', '#6']\"]"}
{"id": "CLEVR_dev_5495", "input": "Are all the shapes metallic? ", "output": "[\"SELECT['shapes']\", \"FILTER['#1', 'that are metallic']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'the same as #4']\"]"}
{"id": "CLEVR_dev_5497", "input": "What color is the object next to the bigger cylinder?", "output": "[\"SELECT['the bigger cylinder']\", \"PROJECT['the object next to #REF', '#1']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_5498", "input": "What material is the small cylinder made of?", "output": "[\"SELECT['small cylinder']\", \"PROJECT['material of #REF', '#1']\"]"}
{"id": "CLEVR_dev_55", "input": "what is the shape of most of the objects", "output": "[\"SELECT['objects']\", \"PROJECT['shapes of #REF', '#1']\", \"GROUP['count', '#1', '#2']\", \"SUPERLATIVE['max', '#2', '#3']\"]"}
{"id": "CLEVR_dev_550", "input": "How many metal objects are round?", "output": "[\"SELECT['metal objects']\", \"FILTER['#1', 'that are round']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_5500", "input": "Is the number of rubber objects equal to the number of metal objects?", "output": "[\"SELECT['rubber objects']\", \"SELECT['metal objects']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to #4']\"]"}
{"id": "CLEVR_dev_5504", "input": "how many tall objects are here?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are tall']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_5509", "input": "What shape are the two partially hidden items of the same color?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that are partially hidden']\", \"PROJECT['the colors of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'are the same']\", \"PROJECT['the shape of #REF', '#4']\"]"}
{"id": "CLEVR_dev_5510", "input": "What is the color of the object closest to the camera?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is closest to the camera']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_5518", "input": "Are there any shiny pyramids around?", "output": "[\"SELECT['pyramids']\", \"FILTER['#1', 'that are shiny']\", \"BOOLEAN['#2', 'if there are any #REF around']\"]"}
{"id": "CLEVR_dev_5519", "input": "What is the shared color of both a cube and ball?", "output": "[\"SELECT['cubes']\", \"SELECT['balls']\", \"PROJECT['the color of #REF', '#1']\", \"PROJECT['the color of #REF', '#2']\", \"COMPARATIVE['#1', '#3', 'is the same as #4']\", \"PROJECT['the color of #REF', '#5']\"]"}
{"id": "CLEVR_dev_552", "input": "How many objects are there to the right of the object to the right of the cyan cylinder?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is cyan']\", \"FILTER['#2', 'that is cylinder']\", \"FILTER['#1', 'to the right of #3']\", \"FILTER['#1', 'to the right of #4']\", \"AGGREGATE['count', '#5']\"]"}
{"id": "CLEVR_dev_5524", "input": "what color is the only matte object?", "output": "[\"SELECT['matte object']\", \"PROJECT['color of #REF', '#1']\"]"}
{"id": "CLEVR_dev_5529", "input": "There are how many rubber shapes?", "output": "[\"SELECT['rubber shapes']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_5538", "input": "How many cubes are tiny?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that are tiny']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_5541", "input": "is there a yellow cube?", "output": "[\"SELECT['yellow cube']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is higher than zero']\"]"}
{"id": "CLEVR_dev_5545", "input": "What material is the object to the far right?", "output": "[\"SELECT['object']\", \"FILTER['#1', 'to the far right']\", \"PROJECT['material of #REF', '#2']\"]"}
{"id": "CLEVR_dev_5546", "input": "Is the rubber object in front of the yellow thing smaller than the gray object?", "output": "[\"SELECT['rubber object']\", \"SELECT['yellow thing']\", \"SELECT['gray object']\", \"FILTER['#1', 'in front of #2']\", \"BOOLEAN['#4', 'smaller than #3']\"]"}
{"id": "CLEVR_dev_555", "input": "There are two brown objects; are they the same shape?", "output": "[\"SELECT['brown objects']\", \"PROJECT['shapes of #REF', '#1']\", \"BOOLEAN['#2', 'both the same']\"]"}
{"id": "CLEVR_dev_5550", "input": "What color is that largest ball?", "output": "[\"SELECT['balls']\", \"PROJECT['the size of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is the largest']\", \"PROJECT['the color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_5553", "input": "Are there any purple object that are cubes?", "output": "[\"SELECT['purple objects']\", \"FILTER['#1', 'that are cubes']\", \"BOOLEAN['#2', 'are there any #REF']\"]"}
{"id": "CLEVR_dev_5554", "input": "is the furthest left object a purple sphere?", "output": "[\"SELECT['object']\", \"FILTER['#1', 'furthest left']\", \"SELECT['purple sphere']\", \"BOOLEAN['#2', 'the same as #3']\"]"}
{"id": "CLEVR_dev_5555", "input": "Is the purple cylinder the only purple object?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are purple']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'equal one']\"]"}
{"id": "CLEVR_dev_5556", "input": "How many spheres are rubber?", "output": "[\"SELECT['spheres']\", \"FILTER['#1', 'that are rubber']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_556", "input": "is the higher percentage of items shown in this scene shiny, or matte? ", "output": "[\"SELECT['shiny items']\", \"SELECT['matte items']\", \"PROJECT['percentage of #REF', '#1']\", \"PROJECT['percentage of #REF', '#2']\", \"COMPARISON['max', '#3', '#4']\"]"}
{"id": "CLEVR_dev_5560", "input": "Are there shiny yellow spheres?", "output": "[\"SELECT['yellow spheres']\", \"FILTER['#1', 'that are shiny']\", \"BOOLEAN['#2', 'are there any #REF']\"]"}
{"id": "CLEVR_dev_5561", "input": "How many objects are both cylinders and metallic?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are metallic cylinders']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_5563", "input": "Are there any matte yellow objects?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are matte']\", \"FILTER['#1', 'that are yellow']\", \"INTERSECTION['#1', '#2', '#3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least one']\"]"}
{"id": "CLEVR_dev_5565", "input": "How many spheres are in front of the small cylinder?", "output": "[\"SELECT['spheres']\", \"SELECT['small cylinder']\", \"FILTER['#1', 'in front of #2']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_5566", "input": "How many metallic colors are there?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are metallic']\", \"PROJECT['colors of #REF', '#2']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_557", "input": "What shape is the object that is partially not visible?", "output": "[\"SELECT['object']\", \"FILTER['#1', 'that is partially not visible']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_5574", "input": "What color object is behind the large cylinder?", "output": "[\"SELECT['objects']\", \"SELECT['large cylinder']\", \"FILTER['#1', 'behind #2']\", \"PROJECT['color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_5576", "input": "How many shades of gray are there?", "output": "[\"SELECT['gray']\", \"PROJECT['shades of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_5577", "input": "Do any of these shapes form an octagon?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that form an octagon']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at least one']\"]"}
{"id": "CLEVR_dev_5581", "input": "Does every color have the same amount of objects present?", "output": "[\"SELECT['objects']\", \"PROJECT['colors of #REF', '#1']\", \"GROUP['count', '#1', '#2']\", \"BOOLEAN['#3', 'if every #REF is the same']\"]"}
{"id": "CLEVR_dev_5585", "input": "Is there an equal number of brown and yellow objects?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are brown']\", \"FILTER['#1', 'that are yellow']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to #5']\"]"}
{"id": "CLEVR_dev_5587", "input": "Is there anything else shaped like the brown object?", "output": "[\"SELECT['the brown object']\", \"PROJECT['shape of #REF', '#1']\", \"SELECT['objects']\", \"DISCARD['#3', '#1']\", \"PROJECT['shape of #REF', '#4']\", \"BOOLEAN['if_exist', '#5', 'that are like #2']\"]"}
{"id": "CLEVR_dev_5589", "input": "Are both cylinders in this picture the same color?", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'in this picture']\", \"PROJECT['the color of #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'equal to one']\"]"}
{"id": "CLEVR_dev_559", "input": "How many cubes are metallic?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that are metallic']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_5594", "input": "Is there an equal number of cubes and cylinders?", "output": "[\"SELECT['cubes']\", \"AGGREGATE['count', '#1']\", \"SELECT['cylinders']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#2', 'is equal to #4']\"]"}
{"id": "CLEVR_dev_5596", "input": "Are all the cubes the same material as the cylinder?", "output": "[\"SELECT['cubes']\", \"SELECT['cylinder']\", \"PROJECT['material of #REF', '#1']\", \"PROJECT['material of #REF', '#2']\", \"COMPARATIVE['#1', '#3', 'is the same as #4']\", \"DISCARD['#1', '#5']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'equal to zero']\"]"}
{"id": "CLEVR_dev_5598", "input": "Are there two or three solid yellow squares?", "output": "[\"SELECT['solid squares']\", \"FILTER['#1', 'that are yellow']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'equal to two or three']\"]"}
{"id": "CLEVR_dev_56", "input": "What shape is behind the silver sphere and a cube?", "output": "[\"SELECT['silver sphere']\", \"SELECT['cube']\", \"SELECT['shape']\", \"FILTER['#3', 'behind #1 and #2']\"]"}
{"id": "CLEVR_dev_5601", "input": "How many gray objects?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are gray']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_5602", "input": "Are the blue ball and the green cylinder the same height?", "output": "[\"SELECT['blue ball']\", \"SELECT['green cylinder']\", \"PROJECT['height of #REF', '#1']\", \"PROJECT['height of #REF', '#2']\", \"BOOLEAN['#3', 'the same as #4']\"]"}
{"id": "CLEVR_dev_5604", "input": "how many cylinders in the image", "output": "[\"SELECT['cylinders']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_5606", "input": "what is the material of the farthest right object? ", "output": "[\"SELECT['object']\", \"FILTER['#1', 'that is farthest right']\", \"PROJECT['material of #REF', '#2']\"]"}
{"id": "CLEVR_dev_5607", "input": "How many matte cubes appear in this photo?", "output": "[\"SELECT['matte cubes']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_5610", "input": "How many brown shapes are there?", "output": "[\"SELECT['shapes']\", \"FILTER['#1', 'that are brown']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_5617", "input": "Which object does not have any other objects that match it?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that match']\", \"DISCARD['#1', '#2']\"]"}
{"id": "CLEVR_dev_562", "input": "if you don't count the gray metallic cylinder how many objects are there", "output": "[\"SELECT['the gray metallic cylinder']\", \"SELECT['objects']\", \"DISCARD['#2', '#1']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_5621", "input": "What object is all by itself? ", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'all by itself']\"]"}
{"id": "CLEVR_dev_5622", "input": "is the large silver thing the same shape as the other large silver object?", "output": "[\"SELECT['large thing']\", \"FILTER['#1', 'that is silver']\", \"SELECT['large object']\", \"FILTER['#3', 'that is silver']\", \"PROJECT['shape of #REF', '#2']\", \"PROJECT['shape of #REF', '#4']\", \"BOOLEAN['#5', 'the same as #6']\"]"}
{"id": "CLEVR_dev_5623", "input": "How many objects are matte or shiny?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are matte']\", \"FILTER['#1', 'that are shiny']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"ARITHMETIC['sum', '#4', '#5']\"]"}
{"id": "CLEVR_dev_5627", "input": "Are there more metallic shapes or matte shapes?", "output": "[\"SELECT['shapes']\", \"FILTER['#1', 'that are metallic']\", \"FILTER['#1', 'that are matte']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"COMPARISON['max', '#4', '#5']\"]"}
{"id": "CLEVR_dev_5632", "input": "Are the blue cylinders the same size?", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'that are blue']\", \"PROJECT['sizes of #REF', '#2']\", \"GROUP['count', '#2', '#3']\", \"AGGREGATE['max', '#4']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#5', 'is equal to #6']\"]"}
{"id": "CLEVR_dev_5636", "input": "Is there a large green sphere?", "output": "[\"SELECT['large green sphere']\", \"BOOLEAN['#1', 'Is there any #REF']\"]"}
{"id": "CLEVR_dev_5637", "input": "Besides the gray objects, how many objects are there?", "output": "[\"SELECT['gray objects']\", \"SELECT['objects']\", \"DISCARD['#2', '#1']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_5638", "input": "Is there a large green cube?", "output": "[\"SELECT['cubes']\", \"BOOLEAN['#1', 'is there #REF that is large']\", \"FILTER['#2', 'that is green']\"]"}
{"id": "CLEVR_dev_564", "input": "How many cubes in this image are yellow?", "output": "[\"SELECT['image']\", \"PROJECT['cubes in #REF', '#1']\", \"FILTER['#2', 'that are yellow']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_5640", "input": "Are all the round objects shiny?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are round']\", \"BOOLEAN['#2', 'if all #REF are shiny']\"]"}
{"id": "CLEVR_dev_5643", "input": "What color is large cylinder?", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'that is large']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_5650", "input": "Are all the small objects metallic?", "output": "[\"SELECT['small objects']\", \"FILTER['#1', 'that are metallic']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'the same as #4']\"]"}
{"id": "CLEVR_dev_5656", "input": "Are any objects here red?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are red']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is higher than zero']\"]"}
{"id": "CLEVR_dev_5658", "input": "How many objects are there of all shapes, sizes and colors?", "output": "[\"SELECT['objects']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_5661", "input": "What color is the object next to the yellow metallic object?", "output": "[\"SELECT['the yellow metallic object']\", \"SELECT['objects']\", \"FILTER['#2', 'that are next to #1']\", \"PROJECT['the color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_5662", "input": "Are there more gray objects than purple?", "output": "[\"SELECT['gray objects']\", \"SELECT['purple objects']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'higher than #4']\"]"}
{"id": "CLEVR_dev_5664", "input": "There is a small metallic cube next to a small purple rubber cube what color is it?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that are small']\", \"FILTER['#2', 'that are metallic']\", \"FILTER['#3', 'that are next to the small purple rubber cube']\", \"PROJECT['color of #REF', '#4']\"]"}
{"id": "CLEVR_dev_5665", "input": "how many red cylinders are metallic?", "output": "[\"SELECT['red cylinders']\", \"FILTER['#1', 'that are metallic']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_5669", "input": "How many cylinders are brown?", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'that are brown']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_5674", "input": "How many balls are there if you subtract the number of cylinders?", "output": "[\"SELECT['balls']\", \"AGGREGATE['count', '#1']\", \"SELECT['cylinders']\", \"AGGREGATE['count', '#3']\", \"ARITHMETIC['difference', '#2', '#4']\"]"}
{"id": "CLEVR_dev_5675", "input": "What shape is the shiny  brown object closest to the right side?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is brown']\", \"FILTER['#2', 'that is shiny']\", \"PROJECT['closeness of #REF to the right side', '#3']\", \"SUPERLATIVE['max', '#3', '#4']\", \"PROJECT['shape of #REF', '#5']\"]"}
{"id": "CLEVR_dev_5677", "input": "What object is farthest back in the picture?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is farthest back']\"]"}
{"id": "CLEVR_dev_5680", "input": "what shape is the green object?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are green']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_5683", "input": "What shape is the small object behind the blue cylinder?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is small']\", \"FILTER['#1', 'that is blue']\", \"FILTER['#3', 'that is cylinder']\", \"FILTER['#2', 'that is behind #4']\", \"PROJECT['shape of #REF', '#5']\"]"}
{"id": "CLEVR_dev_5685", "input": "How many yellow objects are round?", "output": "[\"SELECT['yellow objects']\", \"FILTER['#1', 'that are round']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_5689", "input": "What color of the other item that is the same size as the small blue cube?", "output": "[\"SELECT['the small blue cube']\", \"PROJECT['size of #REF', '#1']\", \"SELECT['items']\", \"DISCARD['#3', '#1']\", \"PROJECT['sizes of #REF', '#4']\", \"COMPARATIVE['#4', '#5', 'is the same as #2']\", \"PROJECT['color of #REF', '#6']\"]"}
{"id": "CLEVR_dev_5690", "input": "How many items are in between the gold sphere and yellow cylinder?", "output": "[\"SELECT['items']\", \"SELECT['gold sphere']\", \"SELECT['yellow cylinder']\", \"FILTER['#1', 'betweenleftside #2']\", \"FILTER['#4', 'betweenrightside #3']\", \"AGGREGATE['count', '#5']\"]"}
{"id": "CLEVR_dev_5692", "input": "how many cylinders are in the image?", "output": "[\"SELECT['cylinders']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_5694", "input": "Are there any green cylinders in the picture?", "output": "[\"SELECT['green cylinders']\", \"BOOLEAN['#1', 'are there any #REF']\"]"}
{"id": "CLEVR_dev_5697", "input": "How many objects are cylinder shaped?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are cylinder shaped']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_5699", "input": "What is the shape of the small brown object?", "output": "[\"SELECT['small brown object']\", \"PROJECT['shape of #REF', '#1']\"]"}
{"id": "CLEVR_dev_57", "input": "Which color is the sphere behind the green metal box?", "output": "[\"SELECT['green metal box']\", \"PROJECT['sphere behind #REF', '#1']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_5701", "input": "How many cubes are the same color?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that are the same color']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_5708", "input": "What color is the shape that is closest?", "output": "[\"SELECT['shapes']\", \"FILTER['#1', 'that is closest']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_5711", "input": "Is there an equal number of cubes and spheres?", "output": "[\"SELECT['cubes']\", \"SELECT['spheres']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to #4']\"]"}
{"id": "CLEVR_dev_5716", "input": "Is there any metallic squares", "output": "[\"SELECT['squares']\", \"BOOLEAN['#1', 'is there any #REF that are metallic']\"]"}
{"id": "CLEVR_dev_5718", "input": "How many objects are purple and made of rubber material?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are purple']\", \"FILTER['#2', 'that are made of rubber material']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_5719", "input": "How many cubes are to the right of the rubber sphere?", "output": "[\"SELECT['the rubber sphere']\", \"PROJECT['cubes to the right of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_5721", "input": "How many is the number of objects in this image minus five?", "output": "[\"SELECT['objects']\", \"AGGREGATE['count', '#1']\", \"PROJECT['difference of #REF and five', '#2']\"]"}
{"id": "CLEVR_dev_5724", "input": "How many cylinders are not metallic?", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'that are not metallic']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_5729", "input": "is the big square orange", "output": "[\"SELECT['big square']\", \"FILTER['#1', 'that is orange']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is higher than zero']\"]"}
{"id": "CLEVR_dev_5732", "input": "What is behind and right of the cyan cylinder?", "output": "[\"SELECT['cyan cylinder']\", \"PROJECT['What is behind and right of #REF', '#1']\"]"}
{"id": "CLEVR_dev_5733", "input": "Are all the gray items metallic?", "output": "[\"SELECT['gray items']\", \"FILTER['#1', 'that are metallic']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'the same as #4']\"]"}
{"id": "CLEVR_dev_5734", "input": "Are all the small cubes made from metal?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that are small']\", \"BOOLEAN['#2', 'if all #REF are made from metal']\"]"}
{"id": "CLEVR_dev_5735", "input": "Are the yellow and purple objects the same size?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are yellow']\", \"FILTER['#1', 'that are purple']\", \"PROJECT['the size of #REF', '#2']\", \"PROJECT['the size of #REF', '#3']\", \"BOOLEAN['#4', 'the same as #5']\"]"}
{"id": "CLEVR_dev_5738", "input": "Are there any shapes the same color as the large object to the right  of the purple sphere? ", "output": "[\"SELECT['shapes']\", \"SELECT['large object']\", \"SELECT['purple sphere']\", \"FILTER['#2', 'to the right of #3']\", \"PROJECT['color of #REF', '#1']\", \"PROJECT['color of #REF', '#4']\", \"COMPARATIVE['#1', '#5', 'is the same as #6']\", \"BOOLEAN['#7', 'are there any #REF']\"]"}
{"id": "CLEVR_dev_574", "input": "What color are the two objects that are closest to one another?", "output": "[\"SELECT['objects']\", \"PROJECT['two #REF that are closest to one another', '#1']\", \"PROJECT['colors of #REF', '#2']\"]"}
{"id": "CLEVR_dev_5741", "input": "What shape are the majority of the objects?", "output": "[\"SELECT['objects']\", \"SELECT['shapes']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is the highest']\"]"}
{"id": "CLEVR_dev_5743", "input": "What is the material of the object closest to the tiny brown sphere?", "output": "[\"SELECT['object']\", \"SELECT['tiny sphere']\", \"FILTER['#2', 'that is brown']\", \"FILTER['#1', 'closest to #3']\", \"PROJECT['material of #REF', '#4']\"]"}
{"id": "CLEVR_dev_5746", "input": "what is the color of the other object the same size as the green sphere?", "output": "[\"SELECT['the green sphere']\", \"SELECT['objects']\", \"DISCARD['#2', '#1']\", \"PROJECT['the size of #REF', '#1']\", \"PROJECT['the size of #REF', '#3']\", \"COMPARATIVE['#3', '#5', 'is the same as #4']\", \"PROJECT['the color of #REF', '#6']\"]"}
{"id": "CLEVR_dev_5748", "input": "What is the color of the big matte shape?", "output": "[\"SELECT['shapes']\", \"FILTER['#1', 'that is big']\", \"FILTER['#2', 'that is matte']\", \"PROJECT['color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_5752", "input": "Are all the balls made of rubber?", "output": "[\"SELECT['balls']\", \"FILTER['#1', 'that are made of rubber']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to #4']\"]"}
{"id": "CLEVR_dev_5753", "input": "what color is the only cylinder?", "output": "[\"SELECT['cylinder']\", \"PROJECT['color of #REF', '#1']\"]"}
{"id": "CLEVR_dev_5754", "input": "What shape is present the least?", "output": "[\"SELECT['shapes']\", \"FILTER['#1', 'that are least present']\"]"}
{"id": "CLEVR_dev_5756", "input": "Is the large red sphere rubber or metallic? ", "output": "[\"SELECT['the large red sphere']\", \"BOOLEAN['#1', 'is rubber']\", \"BOOLEAN['#1', 'is metallic']\", \"COMPARISON['true', '#2', '#3']\"]"}
{"id": "CLEVR_dev_5763", "input": "What is the shape of the object that is single?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are single']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_5765", "input": "are there any objects behind the blue square?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is blue']\", \"FILTER['#2', 'that is square']\", \"FILTER['#1', 'that are behind #3']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "CLEVR_dev_5766", "input": "Are all the metallic objects the same size?", "output": "[\"SELECT['metallic objects']\", \"PROJECT['sizes of #REF', '#1']\", \"BOOLEAN['#2', 'all the same']\"]"}
{"id": "CLEVR_dev_5768", "input": "What color has three items?", "output": "[\"SELECT['color']\", \"PROJECT['items of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is three']\"]"}
{"id": "CLEVR_dev_5770", "input": "What is the color of the small sphere that does not share a color with any other object?", "output": "[\"SELECT['objects']\", \"PROJECT['colors of #REF', '#1']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is one']\"]"}
{"id": "CLEVR_dev_5771", "input": "How many objects are made of purple metal?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'made of purple metal']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_5776", "input": "Is the purple object the same shape as the gray object?", "output": "[\"SELECT['purple object']\", \"SELECT['gray object']\", \"PROJECT['shape of #REF', '#1']\", \"PROJECT['shape of #REF', '#2']\", \"BOOLEAN['#3', 'the same as #4']\"]"}
{"id": "CLEVR_dev_5777", "input": "What is the shape of the only small item?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that are small']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_5779", "input": "Are there any objects that are the same color as the smallestt cylinder? ", "output": "[\"SELECT['cylinders']\", \"PROJECT['the smallestt #REF', '#1']\", \"PROJECT['color of #REF', '#2']\", \"SELECT['objects']\", \"SELECT['objects']\", \"DISCARD['#5', '#2']\", \"PROJECT['color of #REF', '#6']\", \"COMPARATIVE['#6', '#7', 'is the same as #3']\", \"BOOLEAN['#8', 'if there any #REF']\"]"}
{"id": "CLEVR_dev_5781", "input": "What shape is the object partially hidden by a purple cube?", "output": "[\"SELECT['objects']\", \"SELECT['cubes']\", \"FILTER['#2', 'that is purple']\", \"FILTER['#1', 'that is partially hidden by #3']\", \"PROJECT['shape of #REF', '#4']\"]"}
{"id": "CLEVR_dev_5782", "input": "How many glossy objects are to the left of the red matte cylinder?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'to the left of the red matte cylinder']\", \"FILTER['#2', 'that are glossy']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_5787", "input": "How many red objects are there?", "output": "[\"SELECT['red objects']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_5793", "input": "are the purple spheres the same size?", "output": "[\"SELECT['purple spheres']\", \"PROJECT['sizes of #REF', '#1']\", \"BOOLEAN['#2', 'the same']\"]"}
{"id": "CLEVR_dev_5794", "input": "What shape is the purple object?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are purple']\", \"PROJECT['the shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_5795", "input": "What color is the large rubber square?", "output": "[\"SELECT['squares']\", \"FILTER['#1', 'that are rubber']\", \"FILTER['#2', 'that are large']\", \"PROJECT['color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_5801", "input": "Are there more gray cubes than blue spheres?", "output": "[\"SELECT['gray cubes']\", \"SELECT['blue spheres']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'higher than #4']\"]"}
{"id": "CLEVR_dev_5802", "input": "What color is the sphere to the right of the red cylinder?", "output": "[\"SELECT['the red cylinder']\", \"SELECT['spheres']\", \"FILTER['#2', 'that are to the right of #1']\", \"PROJECT['color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_5803", "input": "Are the smallestt sphere and the object nearest the front the same color?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'nearest to the front']\", \"SELECT['the smallestt sphere']\", \"PROJECT['the color of #REF', '#3']\", \"PROJECT['the color of #REF', '#2']\", \"BOOLEAN['#4', 'and #5 are the same']\"]"}
{"id": "CLEVR_dev_5806", "input": "What is the number of spheres?", "output": "[\"SELECT['spheres']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_5807", "input": "Are the purple objects touching?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are purple']\", \"BOOLEAN['#2', 'are touching']\"]"}
{"id": "CLEVR_dev_5808", "input": "Are the two cylinders the same height?", "output": "[\"SELECT['cylinders']\", \"PROJECT['heights of #REF', '#1']\", \"BOOLEAN['#2', 'both the same']\"]"}
{"id": "CLEVR_dev_581", "input": "Which object is matte?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is matte']\"]"}
{"id": "CLEVR_dev_5811", "input": "There are two objects that do not share a color with any other objects, what is the shape of those objects?", "output": "[\"SELECT['objects']\", \"PROJECT['colors of #REF', '#1']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is two']\", \"COMPARATIVE['#1', '#2', 'is the same as #4']\", \"PROJECT['shapes of #REF', '#5']\"]"}
{"id": "CLEVR_dev_5812", "input": "Can you roll the large gray objects?", "output": "[\"SELECT['large gray objects']\", \"PROJECT['Can you roll #REF', '#1']\"]"}
{"id": "CLEVR_dev_5815", "input": "Are the small yellow cube and the big metal cube made of the same material?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that is small']\", \"FILTER['#1', 'that is big']\", \"FILTER['#2', 'that is yellow']\", \"FILTER['#3', 'that is metal']\", \"PROJECT['the material of #REF', '#4']\", \"PROJECT['the material of #REF', '#5']\", \"BOOLEAN['#6', 'the same as #7']\"]"}
{"id": "CLEVR_dev_5816", "input": "How many objects are matte that are not the same color as the thing to the right of the balls?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are matte']\", \"SELECT['things']\", \"SELECT['balls']\", \"FILTER['#3', 'to the right of #4']\", \"PROJECT['colors of #REF', '#2']\", \"PROJECT['color of #REF', '#5']\", \"COMPARATIVE['#2', '#6', 'is not the same as #7']\", \"AGGREGATE['count', '#8']\"]"}
{"id": "CLEVR_dev_5817", "input": "are there more metallic objects than matte ones?", "output": "[\"SELECT['metallic objects']\", \"SELECT['matte objects']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'higher than #4']\"]"}
{"id": "CLEVR_dev_5819", "input": "how many large spheres are there?", "output": "[\"SELECT['large spheres']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_5822", "input": "Are there any object placed to the right of the aqua metal square? ", "output": "[\"SELECT['the aqua metal square']\", \"PROJECT['objects placed to the right of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at least one']\"]"}
{"id": "CLEVR_dev_5824", "input": "Is there an object behind the purple shiny object?", "output": "[\"SELECT['objects']\", \"SELECT['the purple shiny object']\", \"FILTER['#1', 'that are behind #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least one']\"]"}
{"id": "CLEVR_dev_5826", "input": "Is the purple cube large?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that are purple']\", \"BOOLEAN['#2', 'are large']\"]"}
{"id": "CLEVR_dev_5827", "input": "are there any shapes in front of the brown cylinder", "output": "[\"SELECT['shapes']\", \"SELECT['brown cylinder']\", \"FILTER['#1', 'in front of #2']\", \"BOOLEAN['#3', 'are there any #REF']\"]"}
{"id": "CLEVR_dev_5830", "input": "What color is the cylinder that is not green?", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'that are green']\", \"DISCARD['#1', '#2']\", \"PROJECT['the color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_5835", "input": "Which shape has less in the picture?", "output": "[\"SELECT['objects']\", \"PROJECT['shapes of #REF', '#1']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is the lowest']\"]"}
{"id": "CLEVR_dev_5838", "input": "how many things are bronze?", "output": "[\"SELECT['things']\", \"FILTER['#1', 'that are bronze']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_5841", "input": "What shape is in front of the purple cube?", "output": "[\"SELECT['shapes']\", \"FILTER['#1', 'that is purple']\", \"FILTER['#2', 'that is cube']\", \"FILTER['#1', 'that is in front of #3']\"]"}
{"id": "CLEVR_dev_5843", "input": "what shape is the object behind the shiny brown cylinder in front of the red shiney square", "output": "[\"SELECT['objects']\", \"SELECT['shiny cylinder']\", \"FILTER['#2', 'that is brown']\", \"SELECT['red square']\", \"FILTER['#4', 'that is shiney']\", \"FILTER['#3', 'in front of #5']\", \"FILTER['#1', 'behind #6']\", \"PROJECT['shape of #REF', '#7']\"]"}
{"id": "CLEVR_dev_5845", "input": "What color is the object to the right of the smallestt cube? ", "output": "[\"SELECT['object']\", \"SELECT['cubes']\", \"PROJECT['size of #REF', '#2']\", \"SUPERLATIVE['min', '#2', '#3']\", \"FILTER['#1', 'to the right of #4']\", \"PROJECT['color of #REF', '#5']\"]"}
{"id": "CLEVR_dev_5852", "input": "what is the color of the cylinder?", "output": "[\"SELECT['cylinder']\", \"PROJECT['color of #REF', '#1']\"]"}
{"id": "CLEVR_dev_5854", "input": "How many objects can roll away?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that can roll away']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_5858", "input": "how many shapes are in the image?", "output": "[\"SELECT['shapes']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_5864", "input": "What color is the object next to the cyan cube?", "output": "[\"SELECT['objects']\", \"SELECT['cyan cube']\", \"FILTER['#1', 'that is next to #2']\", \"PROJECT['color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_5867", "input": "How many total cyan objects are there?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are cyan']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_5868", "input": "What shape are the 2 objects that have the same shape and color?", "output": "[\"SELECT['objects']\", \"PROJECT['shapes of #REF', '#1']\", \"PROJECT['colors of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is the same']\", \"COMPARATIVE['#1', '#3', 'is the same']\", \"INTERSECTION['#1', '#4', '#5']\", \"PROJECT['the shape of #REF', '#6']\"]"}
{"id": "CLEVR_dev_5869", "input": "What is the shape of the the largest red object?", "output": "[\"SELECT['largest object']\", \"FILTER['#1', 'that is red']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_5871", "input": "Are there three yellow cylinders?", "output": "[\"SELECT['yellow cylinders']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'equal to three']\"]"}
{"id": "CLEVR_dev_5874", "input": "Is the number of purple objects equal to the number of cylinders?", "output": "[\"SELECT['purple objects']\", \"SELECT['cylinders']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'the same as #4']\"]"}
{"id": "CLEVR_dev_5875", "input": "There are small metallic cylinders; are they both the same color?", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'that are small']\", \"FILTER['#2', 'that are metallic']\", \"PROJECT['colors of #REF', '#3']\", \"BOOLEAN['#4', 'if the two of #REF are the same']\"]"}
{"id": "CLEVR_dev_588", "input": "What color is the object that does not match the others?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that do not match the others']\", \"PROJECT['the color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_5881", "input": "Are the red objects of the same material?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are red']\", \"PROJECT['materials of #REF', '#2']\", \"BOOLEAN['#3', 'the same']\"]"}
{"id": "CLEVR_dev_5888", "input": "How many large things are there?", "output": "[\"SELECT['things']\", \"FILTER['#1', 'that are large']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_5889", "input": "How many spheres are here?", "output": "[\"SELECT['spheres']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_5897", "input": "Are the two small cylinders made from the same material?", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'that are small']\", \"PROJECT['materials of #REF', '#2']\", \"BOOLEAN['#3', 'if the two of #REF are the same']\"]"}
{"id": "CLEVR_dev_5898", "input": "What object is the same color as the cube?", "output": "[\"SELECT['the cube']\", \"PROJECT['the color of #REF', '#1']\", \"SELECT['objects']\", \"DISCARD['#3', '#1']\", \"PROJECT['the colors of #REF', '#4']\", \"COMPARATIVE['#4', '#5', 'is the same as #2']\"]"}
{"id": "CLEVR_dev_5904", "input": "How many things are blue?", "output": "[\"SELECT['things']\", \"FILTER['#1', 'that are blue']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_5907", "input": "How many Cyan cubes are pictured?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that are Cyan']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_5908", "input": "Is the cyan thing taller than the metallic cylinder?", "output": "[\"SELECT['cyan thing']\", \"SELECT['metallic cylinder']\", \"PROJECT['height of #REF', '#1']\", \"PROJECT['height of #REF', '#2']\", \"BOOLEAN['#3', 'is higher than #4']\"]"}
{"id": "CLEVR_dev_5912", "input": "how many red objects are there ?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are red']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_5923", "input": "How many spheres are blue in this picture?", "output": "[\"SELECT['spheres']\", \"FILTER['#1', 'that are blue']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_5924", "input": "how many small spheres are in the image?", "output": "[\"SELECT['image']\", \"PROJECT['small spheres in #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_5925", "input": "What color is the object partially blocked by large cylinder?", "output": "[\"SELECT['object']\", \"SELECT['large cylinder']\", \"FILTER['#1', 'partially blocked by #2']\", \"PROJECT['color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_5927", "input": "How many objects are made of rubber or matte?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are rubber']\", \"FILTER['#1', 'that are matte']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"ARITHMETIC['sum', '#4', '#5']\"]"}
{"id": "CLEVR_dev_593", "input": "Is the object found the furthest left a sphere?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is furthest to the left']\", \"BOOLEAN['#2', 'is a sphere']\"]"}
{"id": "CLEVR_dev_5931", "input": "How many of the objects are cubes?", "output": "[\"SELECT['cubes']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_5933", "input": "What color is most common in these objects?", "output": "[\"SELECT['objects']\", \"PROJECT['colors of #REF', '#1']\", \"PROJECT['What is the most common #REF', '#2']\"]"}
{"id": "CLEVR_dev_5936", "input": "Any yellow shiny objects near cubes?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are yellow']\", \"FILTER['#2', 'that are shiny']\", \"FILTER['#3', 'that are near a cube']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least one']\"]"}
{"id": "CLEVR_dev_594", "input": "Is the red cube near the blue cube?", "output": "[\"SELECT['the red cube']\", \"SELECT['the blue cube']\", \"BOOLEAN['#1', 'near #2']\"]"}
{"id": "CLEVR_dev_5942", "input": "How many objects are reflective?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are reflective']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_5950", "input": "What shape is in the front?", "output": "[\"SELECT['shapes']\", \"FILTER['#1', 'in the front']\"]"}
{"id": "CLEVR_dev_5954", "input": "How many different sizes of spheres are shown in this picture?", "output": "[\"SELECT['spheres shown']\", \"PROJECT['sizes of #REF', '#1']\", \"PROJECT['different #REF', '#2']\", \"GROUP['count', '#3', '#2']\", \"UNION['#2', '#4']\"]"}
{"id": "CLEVR_dev_5956", "input": "How many cubes are matte colored?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that are matte colored']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_5959", "input": "what is the color of the shape furthest in the back", "output": "[\"SELECT['shapes']\", \"FILTER['#1', 'that is furthest in the back']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_596", "input": "Are there more matte finished objects in this picture than there are shiny finished objects?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are matte finished']\", \"FILTER['#1', 'that are shiny finished']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is higher than #5']\"]"}
{"id": "CLEVR_dev_5962", "input": "Is the purple sphere the same material as the small gray cylinder?", "output": "[\"SELECT['purple sphere']\", \"SELECT['small cylinder']\", \"FILTER['#2', 'that is gray']\", \"PROJECT['material of #REF', '#1']\", \"PROJECT['material of #REF', '#3']\", \"BOOLEAN['#4', 'the same as #5']\"]"}
{"id": "CLEVR_dev_5966", "input": "What color is the far left cylinder?", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'that is on the far left']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_5968", "input": "is there a green sphere behind a green cylinder?", "output": "[\"SELECT['sphere']\", \"FILTER['#1', 'that is green']\", \"SELECT['cylinders']\", \"FILTER['#3', 'that is green']\", \"BOOLEAN['#2', 'behind #4']\"]"}
{"id": "CLEVR_dev_5969", "input": "How many matte spheres are yellow?", "output": "[\"SELECT['spheres']\", \"FILTER['#1', 'that are matte']\", \"FILTER['#2', 'that are yellow']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_5975", "input": "Is the ratio of cubes the same as cylinders?", "output": "[\"SELECT['cubes']\", \"SELECT['cylinders']\", \"PROJECT['ratio of #REF', '#1']\", \"PROJECT['ratio of #REF', '#2']\", \"BOOLEAN['#3', 'the same as #4']\"]"}
{"id": "CLEVR_dev_5978", "input": "what color is the biggest  square?", "output": "[\"SELECT['squares']\", \"PROJECT['the size of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is the biggest']\", \"PROJECT['the color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_5987", "input": "are any of the large cubes shiny?", "output": "[\"SELECT['large cubes']\", \"FILTER['#1', 'that are shiny']\", \"BOOLEAN['#2', 'are there any #REF']\"]"}
{"id": "CLEVR_dev_5989", "input": "Are there more matte or metallic balls?", "output": "[\"SELECT['matte balls']\", \"SELECT['metallic balls']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"COMPARISON['max', '#3', '#4']\"]"}
{"id": "CLEVR_dev_599", "input": "What shape is just left of the small red sphere?", "output": "[\"SELECT['shapes']\", \"SELECT['small sphere']\", \"FILTER['#2', 'that is red']\", \"FILTER['#1', 'left of #3']\"]"}
{"id": "CLEVR_dev_5990", "input": "What is the shape of the object to the right of the brown sphere?", "output": "[\"SELECT['the brown sphere']\", \"PROJECT['the object to the right of #REF', '#1']\", \"PROJECT['the shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_5994", "input": "What color is the sphere? ", "output": "[\"SELECT['sphere']\", \"PROJECT['color of #REF', '#1']\"]"}
{"id": "CLEVR_dev_5995", "input": "Is the large yellow shape a cube?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are large']\", \"FILTER['#2', 'that are yellow']\", \"PROJECT['shape of #REF', '#3']\", \"BOOLEAN['#4', 'is a cube']\"]"}
{"id": "CLEVR_dev_5996", "input": "What is the color of the largest sphere that is matte?", "output": "[\"SELECT['spheres']\", \"FILTER['#1', 'that are matte']\", \"PROJECT['size of #REF', '#2']\", \"SUPERLATIVE['max', '#2', '#3']\", \"PROJECT['color of #REF', '#4']\"]"}
{"id": "CLEVR_dev_6", "input": "What color is the thing behind and to the left of the purple sphere?", "output": "[\"SELECT['thing']\", \"SELECT['purple sphere']\", \"FILTER['#1', 'behind and left of #2']\", \"PROJECT['color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_6001", "input": "what shape is the largest?", "output": "[\"SELECT['shapes']\", \"FILTER['#1', 'that is the largest']\"]"}
{"id": "CLEVR_dev_6002", "input": "Is there an object the same color of the cylinder?", "output": "[\"SELECT['object']\", \"SELECT['cylinder']\", \"PROJECT['color of #REF', '#1']\", \"PROJECT['color of #REF', '#2']\", \"COMPARATIVE['#1', '#3', 'is the same as #4']\", \"BOOLEAN['#5', 'is there any #REF']\"]"}
{"id": "CLEVR_dev_6005", "input": "How many cube shaped objects of all sizes are pictured?", "output": "[\"SELECT['cube shaped objects']\", \"FILTER['#1', 'that are pictured']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_6007", "input": "Is the number of shiny objects greater than the number of objects that are not spheres?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are shiny']\", \"SELECT['spheres']\", \"DISCARD['#1', '#3']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is higher than #6']\"]"}
{"id": "CLEVR_dev_6010", "input": "How many purple balls are there", "output": "[\"SELECT['purple balls']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_6011", "input": "Are all the cylinders the same size and color?", "output": "[\"SELECT['cylinders']\", \"PROJECT['sizes of #REF', '#1']\", \"PROJECT['colors of #REF', '#1']\", \"GROUP['count', '#1', '#2']\", \"GROUP['count', '#1', '#3']\", \"AGGREGATE['max', '#4']\", \"AGGREGATE['max', '#5']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#6', 'is equal to #8']\", \"BOOLEAN['#7', 'is equal to #8']\", \"BOOLEAN['logical_and', 'true', '#9', '#10']\"]"}
{"id": "CLEVR_dev_6017", "input": "What color is the only object with four sides?", "output": "[\"SELECT['objects']\", \"PROJECT['sides of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is four']\"]"}
{"id": "CLEVR_dev_602", "input": "What is the shape of the large object that is behind the yellow rubber sphere?", "output": "[\"SELECT['large object']\", \"SELECT['yellow sphere']\", \"FILTER['#2', 'that is rubber']\", \"FILTER['#1', 'that is behind #3']\", \"PROJECT['shape of #REF', '#4']\"]"}
{"id": "CLEVR_dev_6022", "input": "what color is the smallestt cylinder?", "output": "[\"SELECT['smallestt cylinder']\", \"PROJECT['color of #REF', '#1']\"]"}
{"id": "CLEVR_dev_6025", "input": "Are there any other objects the same color as the one behind the green sphere?", "output": "[\"SELECT['objects']\", \"SELECT['green sphere']\", \"FILTER['#1', 'behind #2']\", \"PROJECT['color of #REF', '#1']\", \"PROJECT['color of #REF', '#3']\", \"COMPARATIVE['#1', '#4', 'is the same as #5']\", \"BOOLEAN['#6', 'are there any #REF']\"]"}
{"id": "CLEVR_dev_6026", "input": "Are there more objects that are matte or glossy? ", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are matte']\", \"FILTER['#1', 'that are glossy']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"COMPARISON['max', '#4', '#5']\"]"}
{"id": "CLEVR_dev_6028", "input": "Is there a object the same color as the cylinder to the left of the large green sphere?", "output": "[\"SELECT['object']\", \"SELECT['cylinder']\", \"SELECT['large sphere']\", \"FILTER['#3', 'that is green']\", \"FILTER['#2', 'to the left of #4']\", \"PROJECT['color of #REF', '#1']\", \"PROJECT['color of #REF', '#5']\", \"COMPARATIVE['#1', '#6', 'is the same as #7']\", \"BOOLEAN['#8', 'is there any #REF']\"]"}
{"id": "CLEVR_dev_6033", "input": "How many large shiny spheres are there?", "output": "[\"SELECT['large spheres']\", \"FILTER['#1', 'that are shiny']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_6035", "input": "Is the blue object smaller than all other objects shown?", "output": "[\"SELECT['blue object']\", \"SELECT['objects']\", \"DISCARD['#2', '#1']\", \"BOOLEAN['#1', 'smaller than #3']\"]"}
{"id": "CLEVR_dev_6036", "input": "Are there any cubes the same color as the largest cylinder? ", "output": "[\"SELECT['largest cylinder']\", \"SELECT['cubes']\", \"PROJECT['color of #REF', '#1']\", \"PROJECT['colors of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is the same as #4']\", \"BOOLEAN['#5', 'are there any #REF']\"]"}
{"id": "CLEVR_dev_6037", "input": "What shape is the larger green object?", "output": "[\"SELECT['the larger green object']\", \"PROJECT['the shape of #REF', '#1']\"]"}
{"id": "CLEVR_dev_6039", "input": "Are there an odd number of red objects?", "output": "[\"SELECT['object']\", \"FILTER['#1', 'that are red']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is odd']\"]"}
{"id": "CLEVR_dev_6040", "input": "What is the shape of the largest rubber item?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that are rubber']\", \"AGGREGATE['max', '#2']\", \"PROJECT['the shape of #REF', '#3']\"]"}
{"id": "CLEVR_dev_6042", "input": "What is the color of the three small cubes which share a color?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that are small']\", \"PROJECT['colors of #REF', '#2']\", \"GROUP['count', '#2', '#3']\", \"COMPARATIVE['#3', '#4', 'is three']\"]"}
{"id": "CLEVR_dev_6043", "input": "What shape is the small matte object in the middle?", "output": "[\"SELECT['object']\", \"FILTER['#1', 'that is small']\", \"FILTER['#2', 'that is matte']\", \"FILTER['#3', 'that is in the middle']\", \"PROJECT['shape of #REF', '#4']\"]"}
{"id": "CLEVR_dev_6044", "input": "what color is the middle object?", "output": "[\"SELECT['middle object']\", \"PROJECT['color of #REF', '#1']\"]"}
{"id": "CLEVR_dev_6045", "input": "Is the number of rubber objects equal to the number of objects that are to the left of the cyan sphere?", "output": "[\"SELECT['the cyan sphere']\", \"PROJECT['objects to the left of #REF', '#1']\", \"SELECT['objects']\", \"FILTER['#3', 'that are rubber']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#6', 'is equal to #5']\"]"}
{"id": "CLEVR_dev_6047", "input": "how many objects are in front of the green cube?", "output": "[\"SELECT['objects']\", \"SELECT['green cube']\", \"FILTER['#1', 'in front of #2']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_605", "input": "Can you find the black square?", "output": "[\"SELECT['black square']\", \"PROJECT['Can you find #REF', '#1']\"]"}
{"id": "CLEVR_dev_6053", "input": "Are there more balls or blocks?", "output": "[\"SELECT['balls']\", \"SELECT['blocks']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"COMPARISON['max', '#3', '#4']\"]"}
{"id": "CLEVR_dev_6055", "input": "What is the shape of the object closest to the shiny blue cube?", "output": "[\"SELECT['objects']\", \"SELECT['the shiny blue cube']\", \"FILTER['#1', 'that are closest to #2']\", \"PROJECT['the shape of #REF', '#3']\"]"}
{"id": "CLEVR_dev_6058", "input": "How many objects are the same color as the cyan ball?", "output": "[\"SELECT['objects']\", \"SELECT['cyan ball']\", \"PROJECT['colors of #REF', '#1']\", \"PROJECT['color of #REF', '#2']\", \"COMPARATIVE['#1', '#3', 'is the same as #4']\", \"AGGREGATE['count', '#5']\"]"}
{"id": "CLEVR_dev_6059", "input": "Are both of the green cylinders made of the same material as the cube in front of they cylinder", "output": "[\"SELECT['cylinder']\", \"SELECT['cube']\", \"FILTER['#2', 'in front of #1']\", \"PROJECT['material of #REF', '#3']\", \"FILTER['#1', 'that are green']\", \"PROJECT['material of both #REF', '#5']\", \"BOOLEAN['#6', 'is same as #4']\"]"}
{"id": "CLEVR_dev_606", "input": "what color cube is on the far left?", "output": "[\"SELECT['cube']\", \"FILTER['#1', 'on the far left']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_6061", "input": "are there any gray cylinders?", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'that are gray']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at least one']\"]"}
{"id": "CLEVR_dev_6063", "input": "What color is the object just left of gray object?", "output": "[\"SELECT['objects']\", \"SELECT['gray object']\", \"FILTER['#1', 'just left of #2']\", \"PROJECT['color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_6065", "input": "How many things are not shiny?", "output": "[\"SELECT['things']\", \"FILTER['#1', 'that are not shiny']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_6069", "input": "How many blue cylinders?", "output": "[\"SELECT['blue cylinders']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_6071", "input": "What color are the metallic opbjects?", "output": "[\"SELECT['metallic opbjects']\", \"PROJECT['color of #REF', '#1']\"]"}
{"id": "CLEVR_dev_6072", "input": "What is the shape of the object on the far left?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is on the far left']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_6076", "input": "Are there more purple shapes than shapes the color of the cylinder?", "output": "[\"SELECT['the cylinder']\", \"PROJECT['the color of #REF', '#1']\", \"SELECT['shapes']\", \"PROJECT['the colors of #REF', '#3']\", \"COMPARATIVE['#3', '#4', 'is purple']\", \"COMPARATIVE['#3', '#4', 'is the same as #2']\", \"AGGREGATE['count', '#5']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is more than #8']\"]"}
{"id": "CLEVR_dev_6079", "input": "How many metallic object are there in the image?", "output": "[\"SELECT['metallic objects']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_6085", "input": "What is the color of the three grouped cylinders on the right?", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'on the right']\", \"FILTER['#2', 'that are grouped']\", \"PROJECT['the color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_6092", "input": "How many rubber objects are the same color as the largest cylinder?", "output": "[\"SELECT['cylinders']\", \"PROJECT['the size of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is the largest']\", \"SELECT['objects']\", \"DISCARD['#4', '#3']\", \"FILTER['#5', 'that are rubber']\", \"PROJECT['the color of #REF', '#3']\", \"PROJECT['the color of #REF', '#6']\", \"COMPARATIVE['#6', '#8', 'is the same as #7']\", \"PROJECT['the color of #REF', '#9']\"]"}
{"id": "CLEVR_dev_6096", "input": "How many colors of objects are there?", "output": "[\"SELECT['objects']\", \"PROJECT['colors of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_6100", "input": "What is the smallestt object in volume?", "output": "[\"SELECT['objects']\", \"PROJECT['volumes of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is the lowest']\"]"}
{"id": "CLEVR_dev_6101", "input": "How many matte or shine objects are there<", "output": "[\"SELECT['matte objects']\", \"SELECT['shine objects']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"ARITHMETIC['sum', '#3', '#4']\"]"}
{"id": "CLEVR_dev_6102", "input": "Are there more purple objects than red cubes?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are purple']\", \"AGGREGATE['count', '#2']\", \"SELECT['cubes']\", \"FILTER['#4', 'that are red']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#3', 'is more than #6']\"]"}
{"id": "CLEVR_dev_6107", "input": "How many of the objects appear to be metallic?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that appear to be metallic']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_611", "input": "What color is the object that is not red?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is not red']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_6114", "input": "How many objects are either a sphere or a yellow cylinder?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are spheres']\", \"FILTER['#1', 'that are cylinders']\", \"FILTER['#3', 'that are yellow']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['sum', '#5', '#6']\"]"}
{"id": "CLEVR_dev_6117", "input": "are there more shiny or matte objects in the screen?", "output": "[\"SELECT['screen']\", \"PROJECT['shiny objects in #REF', '#1']\", \"PROJECT['matte objects in #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"COMPARISON['max', '#4', '#5']\"]"}
{"id": "CLEVR_dev_612", "input": "Are there more metallic items or rubber ones?", "output": "[\"SELECT['metallic items']\", \"SELECT['rubber items']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"COMPARISON['max', '#3', '#4']\"]"}
{"id": "CLEVR_dev_6125", "input": "what type of object is furthest to the right?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are furthest to the right']\", \"PROJECT['type of object of #REF', '#2']\"]"}
{"id": "CLEVR_dev_6138", "input": "How many large spheres are to the left of the yellow cube? ", "output": "[\"SELECT['the yellow cube']\", \"SELECT['spheres']\", \"FILTER['#2', 'that are large']\", \"FILTER['#3', 'that are to the left of #1']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "CLEVR_dev_6139", "input": "Are the two Cylindrical shaped objects of the same size also of the same color?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are Cylindrical shaped']\", \"PROJECT['sizes of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'are the same']\", \"PROJECT['colors of #REF', '#4']\", \"BOOLEAN['#5', 'are the same']\"]"}
{"id": "CLEVR_dev_6141", "input": "How many cylinders are there that are metallic?", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'that are metallic']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_6145", "input": "Which is the most common color of objects, other than purple?", "output": "[\"SELECT['colors']\", \"FILTER['#1', 'purple']\", \"DISCARD['#1', '#2']\", \"PROJECT['objects of #REF', '#3']\", \"GROUP['count', '#4', '#3']\", \"SUPERLATIVE['max', '#3', '#5']\"]"}
{"id": "CLEVR_dev_6149", "input": "Is the teal cylinder smaller than the blue cylinder?", "output": "[\"SELECT['teal cylinder']\", \"SELECT['blue cylinder']\", \"BOOLEAN['#1', 'smaller than #2']\"]"}
{"id": "CLEVR_dev_6154", "input": "Is there a large blue cylinder?", "output": "[\"SELECT['cylinder']\", \"FILTER['#1', 'that is large']\", \"FILTER['#2', 'that is blue']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is more than zero']\"]"}
{"id": "CLEVR_dev_6160", "input": "What material are the two large spheres?", "output": "[\"SELECT['spheres']\", \"FILTER['#1', 'that are large']\", \"PROJECT['the material of #REF', '#2']\"]"}
{"id": "CLEVR_dev_6161", "input": "How many purple spheres?", "output": "[\"SELECT['spheres']\", \"FILTER['#1', 'that are purple']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_6169", "input": "The shiny green shapes, are they the same size?", "output": "[\"SELECT['shiny shapes']\", \"FILTER['#1', 'that are green']\", \"PROJECT['sizes of #REF', '#2']\", \"BOOLEAN['#3', 'the same']\"]"}
{"id": "CLEVR_dev_6170", "input": "How many are objects behind the green sphere?", "output": "[\"SELECT['objects']\", \"SELECT['green sphere']\", \"FILTER['#1', 'behind #2']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_6175", "input": "What material is the blue cube made of?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that is blue']\", \"PROJECT['material of #REF', '#2']\"]"}
{"id": "CLEVR_dev_6179", "input": "How many spheres are there", "output": "[\"SELECT['spheres']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_6181", "input": "Are there any brown objects?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are brown']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at least one']\"]"}
{"id": "CLEVR_dev_6183", "input": "how many blue objects arethere?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are blue']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_6184", "input": "what color is the metallic object only shown once?", "output": "[\"SELECT['metallic object']\", \"FILTER['#1', 'shown only once']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_619", "input": "Is the square smaller than the cylinder?", "output": "[\"SELECT['the cylinder']\", \"SELECT['the square']\", \"BOOLEAN['#2', 'is smaller than #1']\"]"}
{"id": "CLEVR_dev_6192", "input": "Are there any concealed or partially hidden shapes?", "output": "[\"SELECT['shapes']\", \"FILTER['#1', 'that is concealed']\", \"AGGREGATE['count', '#2']\", \"FILTER['#1', 'that is partially hidden']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['sum', '#3', '#5']\", \"BOOLEAN['#6', 'more than zero']\"]"}
{"id": "CLEVR_dev_6193", "input": "Is the brown object and the red object the same shape?", "output": "[\"SELECT['brown object']\", \"SELECT['red object']\", \"PROJECT['shape of #REF', '#1']\", \"PROJECT['shape of #REF', '#2']\", \"BOOLEAN['#3', 'the same as #4']\"]"}
{"id": "CLEVR_dev_6197", "input": "what is the color of the large cylinder", "output": "[\"SELECT['large cylinder']\", \"PROJECT['color of #REF', '#1']\"]"}
{"id": "CLEVR_dev_6198", "input": "What is the shape of the gray matte object to the right of the glossy blue sphere?", "output": "[\"SELECT['gray object']\", \"FILTER['#1', 'that is matte']\", \"SELECT['glossy sphere']\", \"FILTER['#3', 'that is blue']\", \"FILTER['#2', 'to the right of #4']\", \"PROJECT['shape of #REF', '#5']\"]"}
{"id": "CLEVR_dev_6199", "input": "What shape is the big red thing?", "output": "[\"SELECT['big red thing']\", \"PROJECT['shape of #REF', '#1']\"]"}
{"id": "CLEVR_dev_6203", "input": "Is the blue cube made out of rubber?", "output": "[\"SELECT['blue cube']\", \"FILTER['#1', 'made of rubber']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is higher than zero']\"]"}
{"id": "CLEVR_dev_6208", "input": "What is the shape of the shiny gray object?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is shiny']\", \"FILTER['#2', 'that is gray']\", \"PROJECT['the shape of #REF', '#3']\"]"}
{"id": "CLEVR_dev_6209", "input": "How many of the items are cubes?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that are cubes']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_6213", "input": "What is the color of the glossy sphere between two yellow rubber shapes?", "output": "[\"SELECT['shapes']\", \"FILTER['#1', 'that are yellow']\", \"FILTER['#2', 'that are rubber']\", \"SELECT['the glossy sphere']\", \"FILTER['#4', 'that is between two #3']\", \"PROJECT['the color of #REF', '#5']\"]"}
{"id": "CLEVR_dev_6215", "input": "Are there any matching objects?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are matching']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at least two']\"]"}
{"id": "CLEVR_dev_6218", "input": "What shape is the object that is in front of the blue cube?", "output": "[\"SELECT['objects']\", \"SELECT['blue cube']\", \"FILTER['#1', 'in front of #2']\", \"PROJECT['shape of #REF', '#3']\"]"}
{"id": "CLEVR_dev_622", "input": "are there more large rubber spheres than any large cylinder?", "output": "[\"SELECT['large spheres']\", \"FILTER['#1', 'that are rubber']\", \"SELECT['large cylinders']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'higher than #5']\"]"}
{"id": "CLEVR_dev_6222", "input": "What is the shape of the single item that is not a cube?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that is not a cube']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_6225", "input": "Are there six balls?", "output": "[\"SELECT['balls']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is equal to six']\"]"}
{"id": "CLEVR_dev_6231", "input": "Are any of the balls identical in color?", "output": "[\"SELECT['balls']\", \"PROJECT['colors of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'are identical']\", \"BOOLEAN['#3', 'are there any #REF']\"]"}
{"id": "CLEVR_dev_6239", "input": "What color is the only cube visible?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that is visible']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_6243", "input": "what shape is the object at the back?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are at the back']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_6244", "input": "How many objects are in the scene?", "output": "[\"SELECT['scene']\", \"PROJECT['objects in #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_6247", "input": "Are all the spheres matte?", "output": "[\"SELECT['spheres']\", \"FILTER['#1', 'that are matte']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#4', 'is equal to #3']\"]"}
{"id": "CLEVR_dev_6248", "input": "Are there any small red shapes?", "output": "[\"SELECT['small shapes']\", \"FILTER['#1', 'that are red']\", \"BOOLEAN['#2', 'are there any #REF']\"]"}
{"id": "CLEVR_dev_6249", "input": "Are both of the yellow objects the same shape?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are yellow']\", \"PROJECT['shapes of #REF', '#2']\", \"BOOLEAN['#3', 'if the two of #REF are the same']\"]"}
{"id": "CLEVR_dev_625", "input": "Are any objects partially hidden?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are partially hidden']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at least one']\"]"}
{"id": "CLEVR_dev_6252", "input": "How many of  the gold objects are round?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are gold']\", \"FILTER['#2', 'that are round']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_6259", "input": "Are the large cube and the large cylinder next to the small sphere the same color?", "output": "[\"SELECT['the small sphere']\", \"PROJECT['the large cube next to #REF', '#1']\", \"PROJECT['the large cylinder next to #REF', '#1']\", \"PROJECT['the color of #REF', '#2']\", \"PROJECT['the color of #REF', '#3']\", \"BOOLEAN['#4', 'the same as #5']\"]"}
{"id": "CLEVR_dev_626", "input": "There are objects that share a material with the object that is closest to the front, what shape are they?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are closest to the front']\", \"PROJECT['the materials of #REF', '#2']\", \"DISCARD['#1', '#2']\", \"PROJECT['the materials of #REF', '#4']\", \"COMPARATIVE['#4', '#5', 'is the same as #3']\", \"PROJECT['the shape of #REF', '#6']\"]"}
{"id": "CLEVR_dev_6265", "input": "how many cylinders are large in the image?", "output": "[\"SELECT['image']\", \"PROJECT['cylinders in #REF', '#1']\", \"FILTER['#2', 'that are large']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_6271", "input": "Is the big sphere the same color as the object that is directly behind it?", "output": "[\"SELECT['big sphere']\", \"SELECT['objects']\", \"FILTER['#2', 'directly behind #1']\", \"PROJECT['color of #REF', '#1']\", \"PROJECT['color of #REF', '#3']\", \"BOOLEAN['#4', 'the same as #5']\"]"}
{"id": "CLEVR_dev_6273", "input": "What is the shape of the object behind the red cylinder?", "output": "[\"SELECT['objects']\", \"SELECT['the red cylinder']\", \"FILTER['#1', 'that are behind #2']\", \"PROJECT['the shape of #REF', '#3']\"]"}
{"id": "CLEVR_dev_6277", "input": "what is the most popular shape?", "output": "[\"SELECT['shapes']\", \"FILTER['#1', 'that is most popular']\"]"}
{"id": "CLEVR_dev_628", "input": "What color appears twice?", "output": "[\"SELECT['colors']\", \"FILTER['#1', 'that appears twice']\"]"}
{"id": "CLEVR_dev_6281", "input": "Does the sphere match the color of any cylinders?", "output": "[\"SELECT['sphere']\", \"SELECT['cylinders']\", \"PROJECT['color of #REF', '#1']\", \"PROJECT['colors of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is the same as #4']\", \"BOOLEAN['#5', 'is there any #REF']\"]"}
{"id": "CLEVR_dev_6282", "input": "Which object is red?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is red']\"]"}
{"id": "CLEVR_dev_6283", "input": "How may cubes are both the same size and material?", "output": "[\"SELECT['cubes']\", \"PROJECT['sizes of #REF', '#1']\", \"PROJECT['materials of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'are the same']\", \"COMPARATIVE['#1', '#3', 'are the same']\", \"INTERSECTION['#1', '#4', '#5']\", \"AGGREGATE['count', '#6']\"]"}
{"id": "CLEVR_dev_6288", "input": "how many total  objects are in the picture", "output": "[\"SELECT['objects']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_6290", "input": "Is there an equal number of gray objects and yellow objects?", "output": "[\"SELECT['gray objects']\", \"SELECT['yellow objects']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'equal to #4']\"]"}
{"id": "CLEVR_dev_6293", "input": "How many more big objects are there then small objects?", "output": "[\"SELECT['big objects']\", \"SELECT['small objects']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "CLEVR_dev_6294", "input": "How many total metallic items are there?", "output": "[\"SELECT['metallic items']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_6295", "input": "Are all the cubes metallic?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that are metallic']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#4', 'is equal to #3']\"]"}
{"id": "CLEVR_dev_6298", "input": "How many cylendars are gold?", "output": "[\"SELECT['cylendars']\", \"FILTER['#1', 'that are gold']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_63", "input": "is the small item, standing close to the yellow ball. made from the same material as the small item, standing  between two, tall cylinders?", "output": "[\"SELECT['the yellow ball']\", \"SELECT['cylinders']\", \"FILTER['#2', 'that are tall']\", \"SELECT['items']\", \"FILTER['#4', 'that are small']\", \"FILTER['#5', 'that are standing close to #1']\", \"FILTER['#5', 'that are standing between two #3']\", \"PROJECT['the material that #REF is made from', '#6']\", \"PROJECT['the material that #REF is made from', '#7']\", \"BOOLEAN['#8', 'and #9 are the same material']\"]"}
{"id": "CLEVR_dev_6302", "input": "What is the color of the item behind the green cylinder?", "output": "[\"SELECT['the green cylinder']\", \"PROJECT['item behind of #REF', '#1']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_6304", "input": "What is the color of the smallestt object that does not share a color with any other object?", "output": "[\"SELECT['objects']\", \"PROJECT['colors of #REF', '#1']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is one']\"]"}
{"id": "CLEVR_dev_6309", "input": "What color is the only item that can not be seen fully?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that can be fully seen']\", \"DISCARD['#1', '#2']\", \"PROJECT['the color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_631", "input": "What color is the object that is not a cylinder or sphere?", "output": "[\"SELECT['objects']\", \"SELECT['cylinders']\", \"SELECT['spheres']\", \"FILTER['#1', 'besides #2 , #3']\", \"PROJECT['color of #REF', '#4']\"]"}
{"id": "CLEVR_dev_6310", "input": "What shape is behind the red cylinder", "output": "[\"SELECT['shapes']\", \"SELECT['red cylinder']\", \"FILTER['#1', 'behind #2']\"]"}
{"id": "CLEVR_dev_6313", "input": "How many blocks are metallic here?", "output": "[\"SELECT['blocks']\", \"FILTER['#1', 'that are metallic']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_6315", "input": "How many many objects are there?", "output": "[\"SELECT['objects']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_6316", "input": "What is the shape of the object on the far right of the picture?", "output": "[\"SELECT['picture']\", \"PROJECT['objects in #REF', '#1']\", \"FILTER['#2', 'on the far right']\", \"PROJECT['shape of #REF', '#3']\"]"}
{"id": "CLEVR_dev_6319", "input": "What is in the middle of the image?", "output": "[\"SELECT['the image']\", \"PROJECT['the middle of #REF', '#1']\", \"PROJECT['What is in #REF', '#2']\"]"}
{"id": "CLEVR_dev_6321", "input": "How many matte objects are here?", "output": "[\"SELECT['matte objects']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_6324", "input": "what number of objects are gray?", "output": "[\"SELECT['gray objects']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_6325", "input": "is the block farthest to the left matte or metallic?", "output": "[\"SELECT['blocks']\", \"FILTER['#1', 'that are farthest to the left']\", \"BOOLEAN['#2', 'is matte']\", \"BOOLEAN['#2', 'is metallic']\", \"UNION['#3', '#4']\"]"}
{"id": "CLEVR_dev_6330", "input": "There are two brown cylinders. What shape is the large object directly between them?", "output": "[\"SELECT['brown cylinders']\", \"SELECT['large object']\", \"FILTER['#2', 'between #1']\", \"PROJECT['shape of #REF', '#3']\"]"}
{"id": "CLEVR_dev_6331", "input": "If none of the yellow objects are counted,is there still more than four objects left?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are yellow']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\", \"BOOLEAN['#5', 'higher than four']\"]"}
{"id": "CLEVR_dev_6336", "input": "is there a blue cylinder?", "output": "[\"SELECT['blue cylinder']\", \"BOOLEAN['#1', 'is there any #REF']\"]"}
{"id": "CLEVR_dev_6342", "input": "How many objects are red and not cubes?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are red']\", \"FILTER['#2', 'that are cubes']\", \"DISCARD['#2', '#3']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "CLEVR_dev_6344", "input": "What shape is the blue object that would roll if pushed?", "output": "[\"SELECT['blue objects']\", \"FILTER['#1', 'that would roll if pushed']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_6345", "input": "How many small objects can you see?", "output": "[\"SELECT['small objects']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_6347", "input": "how many small objects are shown?", "output": "[\"SELECT['small objects']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_6349", "input": "Which gold item is reflected in the red cube?", "output": "[\"SELECT['gold item']\", \"SELECT['red cube']\", \"FILTER['#1', 'reflected in #2']\"]"}
{"id": "CLEVR_dev_6350", "input": "What is the color of the object that is behind the closest shape?", "output": "[\"SELECT['shapes']\", \"PROJECT['the closest #REF', '#1']\", \"SELECT['objects']\", \"FILTER['#3', 'that are behind #2']\", \"PROJECT['the color of #REF', '#4']\"]"}
{"id": "CLEVR_dev_6353", "input": "how many objects are in front of the blue cylinder?", "output": "[\"SELECT['objects']\", \"SELECT['blue cylinder']\", \"FILTER['#1', 'in front of #2']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_636", "input": "What color is behind the green cylinder?", "output": "[\"SELECT['green cylinder']\", \"PROJECT['color behind #REF', '#1']\"]"}
{"id": "CLEVR_dev_6363", "input": "how man metallic spheres are there?", "output": "[\"SELECT['spheres']\", \"FILTER['#1', 'that are metallic']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_6367", "input": "Are the objects all made of the same material?", "output": "[\"SELECT['objects']\", \"PROJECT['materials of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to one']\"]"}
{"id": "CLEVR_dev_6370", "input": "how many rubber objects are present?", "output": "[\"SELECT['objects present']\", \"FILTER['#1', 'that are rubber']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_6372", "input": "What is the most common shape in the image?", "output": "[\"SELECT['objects in the image']\", \"PROJECT['shapes of #REF', '#1']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is the highest']\"]"}
{"id": "CLEVR_dev_6373", "input": "The red object next to the green sphere, what kind of object is it?", "output": "[\"SELECT['the green sphere']\", \"SELECT['objects']\", \"FILTER['#2', 'that are red']\", \"FILTER['#3', 'that are next to #1']\", \"PROJECT['the kind of #REF', '#4']\"]"}
{"id": "CLEVR_dev_6380", "input": "How many large shiny objects are there?", "output": "[\"SELECT['large shiny objects']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_6383", "input": "What color is the small cylinder directly in front of the large red ball?", "output": "[\"SELECT['the large red ball']\", \"PROJECT['the small cylinder directly in front of #REF', '#1']\", \"PROJECT['the color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_6385", "input": "How many objects are metallic and sphere shaped?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are metallic']\", \"FILTER['#1', 'that are sphere shaped']\", \"INTERSECTION['#1', '#2', '#3']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "CLEVR_dev_6393", "input": "Is the yellow object the biggest object?", "output": "[\"SELECT['objects']\", \"PROJECT['size of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is the highest']\", \"BOOLEAN['#3', 'is yellow']\"]"}
{"id": "CLEVR_dev_6394", "input": "What object is the small blue sphere hiding behind?", "output": "[\"SELECT['small blue sphere']\", \"PROJECT['object #REF is hiding behind', '#1']\"]"}
{"id": "CLEVR_dev_6397", "input": "What material are the gray objects?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are gray']\", \"PROJECT['material of #REF', '#2']\"]"}
{"id": "CLEVR_dev_64", "input": "What object is reflected in the cube?", "output": "[\"SELECT['the cube']\", \"PROJECT['the reflected object of #REF', '#1']\"]"}
{"id": "CLEVR_dev_6403", "input": "What color are a majority of the objects?", "output": "[\"SELECT['objects']\", \"PROJECT['colors of #REF', '#1']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is the highest']\"]"}
{"id": "CLEVR_dev_6404", "input": "Are there more cubes or spheres in the image?", "output": "[\"SELECT['cubes in the image']\", \"SELECT['spheres in the image']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"COMPARISON['max', '#3', '#4']\"]"}
{"id": "CLEVR_dev_6418", "input": "Are there three blue items?", "output": "[\"SELECT['blue items']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'the same as three']\"]"}
{"id": "CLEVR_dev_6419", "input": "What shape is the object furthest to the front?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is furthest to the front']\", \"PROJECT['the shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_6423", "input": "Are there any red metallic spheres in this picture?", "output": "[\"SELECT['red spheres']\", \"FILTER['#1', 'that are metallic']\", \"BOOLEAN['#2', 'are there any #REF']\"]"}
{"id": "CLEVR_dev_6424", "input": "Are the cylinders all of the same material?", "output": "[\"SELECT['cylinders']\", \"PROJECT['materials of #REF', '#1']\", \"BOOLEAN['#2', 'all the same']\"]"}
{"id": "CLEVR_dev_6429", "input": "What shape is the object that is partially hidden?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is partially hidden']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_6430", "input": "What type of object is the largest?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is the largest']\", \"PROJECT['type of #REF', '#2']\"]"}
{"id": "CLEVR_dev_6434", "input": "How many small objects are matte?", "output": "[\"SELECT['small objects']\", \"FILTER['#1', 'that are matte']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_6435", "input": "Are shadows casted from each object?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that have shadows']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is the same as #4']\"]"}
{"id": "CLEVR_dev_6439", "input": "How many large objects are present?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are large']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_6440", "input": "What is color sphere is between the red cube and the gold cube?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that are red']\", \"FILTER['#1', 'that are gold']\", \"SELECT['sphere']\", \"INTERSECTION['#4', '#2', '#3']\", \"PROJECT['color of #REF', '#5']\"]"}
{"id": "CLEVR_dev_6450", "input": "Are two of the objects the same?", "output": "[\"SELECT['objects']\", \"PROJECT['two of #REF', '#1']\", \"BOOLEAN['#2', 'are the same']\"]"}
{"id": "CLEVR_dev_6454", "input": "How many shiny cubes are this picture?", "output": "[\"SELECT['shiny cubes']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_6455", "input": "Are the small spheres all the same color?", "output": "[\"SELECT['small spheres']\", \"PROJECT['colors of #REF', '#1']\", \"BOOLEAN['#2', 'all the same']\"]"}
{"id": "CLEVR_dev_6460", "input": "Are these objects all spheres?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are sphere']\", \"DISCARD['#1', '#2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'equal to zero']\"]"}
{"id": "CLEVR_dev_6461", "input": "Are the number of rubber objects the same as metallic objects?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are rubber']\", \"FILTER['#1', 'that are metallic']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to #5']\"]"}
{"id": "CLEVR_dev_6462", "input": "Are all the large objects the same color and shape?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that Are large']\", \"PROJECT['color of #REF', '#2']\", \"PROJECT['shape of #REF', '#2']\", \"BOOLEAN['#3', 'Are all #REF the same']\", \"BOOLEAN['#4', 'Are all #REF the same']\", \"BOOLEAN['logical_and', 'true', '#5', '#6']\"]"}
{"id": "CLEVR_dev_6463", "input": "How many blue objects in the image?", "output": "[\"SELECT['objects in the image']\", \"FILTER['#1', 'that are blue']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_6467", "input": "Are the materials of the red and blue cylinders the same?", "output": "[\"SELECT['red cylinders']\", \"SELECT['blue cylinders']\", \"PROJECT['materials of #REF', '#1']\", \"PROJECT['materials of #REF', '#2']\", \"BOOLEAN['#3', 'the same as #4']\"]"}
{"id": "CLEVR_dev_6469", "input": "Is there a gray cube present?", "output": "[\"SELECT['gray cube']\", \"BOOLEAN['#1', 'is there any #REF']\"]"}
{"id": "CLEVR_dev_647", "input": "Are the two cylinders made from the same material?", "output": "[\"SELECT['cylinders']\", \"PROJECT['the material that #REF are made from', '#1']\", \"BOOLEAN['#2', 'are the same']\"]"}
{"id": "CLEVR_dev_648", "input": "What color is the closest object in this image?", "output": "[\"SELECT['objects in this image']\", \"FILTER['#1', 'that are the closest']\", \"PROJECT['the color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_6483", "input": "What is the shape of the small red object?", "output": "[\"SELECT['small red object']\", \"PROJECT['shape of #REF', '#1']\"]"}
{"id": "CLEVR_dev_6485", "input": "how many small cylinders are there?", "output": "[\"SELECT['small cylinders']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_6488", "input": "is the green cylinder larger than the yellow one?", "output": "[\"SELECT['green cylinder']\", \"SELECT['yellow cylinder']\", \"PROJECT['size of #REF', '#1']\", \"PROJECT['size of #REF', '#2']\", \"BOOLEAN['#3', 'is higher than #4']\"]"}
{"id": "CLEVR_dev_6493", "input": "What color is the tallest item?", "output": "[\"SELECT['items']\", \"PROJECT['height of #REF', '#1']\", \"SUPERLATIVE['max', '#1', '#2']\", \"PROJECT['color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_6498", "input": "Are any cylinders the same material as the large purple metallic cube?", "output": "[\"SELECT['cylinders']\", \"SELECT['large cube']\", \"FILTER['#2', 'that is purple']\", \"FILTER['#2', 'that is metallic']\", \"INTERSECTION['#2', '#3', '#4']\", \"PROJECT['material of #REF', '#1']\", \"PROJECT['material of #REF', '#5']\", \"COMPARATIVE['#1', '#6', 'is the same as #7']\", \"BOOLEAN['#8', 'are there any #REF']\"]"}
{"id": "CLEVR_dev_65", "input": "What color are most of the shiny items?", "output": "[\"SELECT['colors']\", \"PROJECT['shiny items of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"SUPERLATIVE['max', '#1', '#3']\"]"}
{"id": "CLEVR_dev_650", "input": "What color is the only shiny object", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are shiny']\", \"PROJECT['the color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_6501", "input": "What color is the large object behind the yellow object that is behind the cyan sphere?", "output": "[\"SELECT['cyan sphere']\", \"PROJECT['yellow object behind #REF', '#1']\", \"PROJECT['large object behind #REF', '#2']\", \"PROJECT['color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_6507", "input": "Are the two cylinders in the middle the same size?", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'that are in the middle']\", \"PROJECT['sizes of #REF', '#2']\", \"BOOLEAN['#3', 'are the same']\"]"}
{"id": "CLEVR_dev_6512", "input": "What color is the small sphere between two other spheres?", "output": "[\"SELECT['spheres']\", \"FILTER['#1', 'that are small']\", \"FILTER['#2', 'that are between two other spheres']\", \"PROJECT['color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_6516", "input": "Are these objects all metallic?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are metallic']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'the same as #4']\"]"}
{"id": "CLEVR_dev_6520", "input": "What is the cube that is the same size as the metallic cylinder made of?", "output": "[\"SELECT['cubes']\", \"SELECT['metallic cylinder']\", \"PROJECT['size of #REF', '#1']\", \"PROJECT['size of #REF', '#2']\", \"COMPARATIVE['#1', '#3', 'is the same as #4']\", \"PROJECT['What is #REF made of', '#5']\"]"}
{"id": "CLEVR_dev_6524", "input": "How many blue shapes are partially obscured by other objects?", "output": "[\"SELECT['blue shapes']\", \"SELECT['objects']\", \"DISCARD['#2', '#1']\", \"FILTER['#1', 'partially obscured by #3']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "CLEVR_dev_6527", "input": "Are there an equal number of shiny spheres and matte spheres?", "output": "[\"SELECT['spheres']\", \"FILTER['#1', 'that are shiny']\", \"AGGREGATE['count', '#2']\", \"FILTER['#1', 'that are matte']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#3', 'equal to #5']\"]"}
{"id": "CLEVR_dev_6528", "input": "what color is the sphere being reflected in the green cube?", "output": "[\"SELECT['sphere']\", \"SELECT['green cube']\", \"FILTER['#1', 'reflected in #2']\", \"PROJECT['color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_6530", "input": "what color is the shape closest to the blue sphere", "output": "[\"SELECT['shapes']\", \"SELECT['blue sphere']\", \"FILTER['#1', 'that is closest to #2']\", \"PROJECT['color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_6532", "input": "Is there more than one of the thing shaped like the thing two spaces ahead of the blue metallic cube?", "output": "[\"SELECT['the blue metallic cube']\", \"PROJECT['the thing two spaces ahead of #REF', '#1']\", \"PROJECT['shape of #REF', '#2']\", \"SELECT['things']\", \"DISCARD['#4', '#2']\", \"PROJECT['shape of #REF', '#5']\", \"COMPARATIVE['#5', '#6', 'is the same as #3']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is more than one']\"]"}
{"id": "CLEVR_dev_6536", "input": "What color is the metallic sphere? ", "output": "[\"SELECT['the metallic sphere']\", \"PROJECT['color of #REF', '#1']\"]"}
{"id": "CLEVR_dev_6537", "input": "There is one shiny object. How many other objects are the same shape?", "output": "[\"SELECT['shiny object']\", \"SELECT['objects']\", \"DISCARD['#2', '#1']\", \"PROJECT['shape of #REF', '#1']\", \"PROJECT['shapes of #REF', '#3']\", \"COMPARATIVE['#3', '#4', 'is the same as #5']\", \"AGGREGATE['count', '#6']\"]"}
{"id": "CLEVR_dev_6542", "input": "what shape is next to the same shape in the front?", "output": "[\"SELECT['shapes']\", \"FILTER['#1', 'in the front']\", \"FILTER['#2', 'that are next to the same shape']\"]"}
{"id": "CLEVR_dev_6544", "input": "How many objects are metallic and purple?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are metallic']\", \"FILTER['#1', 'that are purple']\", \"INTERSECTION['#1', '#2', '#3']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "CLEVR_dev_6561", "input": "What shape is the large object that's the same color as the shiny ball?", "output": "[\"SELECT['the shiny ball']\", \"PROJECT['the color of #REF', '#1']\", \"SELECT['objects']\", \"FILTER['#3', 'that are large']\", \"PROJECT['colors of #REF', '#4']\", \"COMPARATIVE['#4', '#5', 'is the same as #2']\", \"PROJECT['the shape of #REF', '#6']\"]"}
{"id": "CLEVR_dev_6567", "input": "How many dark blue objects are in the photo?", "output": "[\"SELECT['dark blue objects']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_657", "input": "Which items are clustered together?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that are clustered together']\"]"}
{"id": "CLEVR_dev_6570", "input": "Is the object to the left of the purple thing and behind the green cylinder, also green?", "output": "[\"SELECT['the purple thing']\", \"SELECT['the green cylinder']\", \"SELECT['objects']\", \"FILTER['#3', 'that are to the left of #1']\", \"FILTER['#4', 'that are behind #2']\", \"BOOLEAN['#5', 'is green']\"]"}
{"id": "CLEVR_dev_6571", "input": "What shape is the large object?", "output": "[\"SELECT['large object']\", \"PROJECT['shape of #REF', '#1']\"]"}
{"id": "CLEVR_dev_6573", "input": "Is there a large yellow sphere?", "output": "[\"SELECT['spheres']\", \"FILTER['#1', 'that are large']\", \"FILTER['#2', 'that are yellow']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least one']\"]"}
{"id": "CLEVR_dev_6577", "input": "How many larger objects are there in the scene?", "output": "[\"SELECT['larger objects']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_6582", "input": "Are all squares the same material? ", "output": "[\"SELECT['squares']\", \"PROJECT['materials of #REF', '#1']\", \"BOOLEAN['#2', 'all the same']\"]"}
{"id": "CLEVR_dev_6583", "input": "Oh what material is the blue cube generated from?", "output": "[\"SELECT['blue cube']\", \"PROJECT['material of #REF', '#1']\"]"}
{"id": "CLEVR_dev_6584", "input": "how many different colors do the spheres have?", "output": "[\"SELECT['spheres']\", \"PROJECT['colors of #REF', '#1']\", \"PROJECT['different #REF', '#2']\", \"GROUP['count', '#3', '#2']\", \"UNION['#2', '#4']\"]"}
{"id": "CLEVR_dev_6588", "input": "What color is the block between the red balls?", "output": "[\"SELECT['balls']\", \"FILTER['#1', 'that are red']\", \"SELECT['blocks']\", \"FILTER['#3', 'that is between #2']\", \"PROJECT['color of #REF', '#4']\"]"}
{"id": "CLEVR_dev_6590", "input": "are there any shapes to the right of the red sphere", "output": "[\"SELECT['red sphere']\", \"PROJECT['shapes to the right of #REF', '#1']\", \"BOOLEAN['#2', 'are there any #REF']\"]"}
{"id": "CLEVR_dev_6592", "input": "Are the red object and cyan object the same shape?", "output": "[\"SELECT['red object']\", \"SELECT['cyan object']\", \"PROJECT['shape of #REF', '#1']\", \"PROJECT['shape of #REF', '#2']\", \"BOOLEAN['#3', 'the same as #4']\"]"}
{"id": "CLEVR_dev_6596", "input": "Are there the same number of small and large shapes that are the same color as the large ball shape next to the big purple cube?", "output": "[\"SELECT['the big purple cube']\", \"SELECT['balls']\", \"FILTER['#2', 'that are large']\", \"FILTER['#3', 'that are next to #1']\", \"PROJECT['the color of #REF', '#4']\", \"SELECT['shapes']\", \"FILTER['#6', 'that are large']\", \"FILTER['#6', 'that are small']\", \"PROJECT['the colors of #REF', '#7']\", \"PROJECT['the colors of #REF', '#8']\", \"COMPARATIVE['#7', '#9', 'is the same as #5']\", \"COMPARATIVE['#8', '#10', 'is the same as #5']\", \"AGGREGATE['count', '#11']\", \"AGGREGATE['count', '#12']\", \"BOOLEAN['#13', 'and #14 are equal']\"]"}
{"id": "CLEVR_dev_6598", "input": "How many more spheres are there than green objects?", "output": "[\"SELECT['spheres']\", \"SELECT['green objects']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "CLEVR_dev_660", "input": "What color is the thing the same size as the shiny red thing?", "output": "[\"SELECT['things']\", \"SELECT['shiny thing']\", \"FILTER['#2', 'that is red']\", \"PROJECT['sizes of #REF', '#1']\", \"PROJECT['size of #REF', '#3']\", \"COMPARATIVE['#1', '#4', 'is the same as #5']\", \"PROJECT['color of #REF', '#6']\"]"}
{"id": "CLEVR_dev_6603", "input": "What's the name of the shape that dominates this picture?", "output": "[\"SELECT['shapes']\", \"FILTER['#1', 'that dominate this picture']\", \"PROJECT['name of #REF', '#2']\"]"}
{"id": "CLEVR_dev_6608", "input": "There is a tiny green metallic cube behind another larger object what is that objects shape?", "output": "[\"SELECT['cube']\", \"FILTER['#1', 'that is tiny']\", \"FILTER['#2', 'that is green']\", \"FILTER['#3', 'that is metallic']\", \"SELECT['objects']\", \"FILTER['#5', 'that #4 is behind of']\", \"PROJECT['size of #REF', '#6']\", \"PROJECT['size of #REF', '#4']\", \"COMPARATIVE['#6', '#7', 'is higher than #8']\", \"PROJECT['shape of #REF', '#9']\"]"}
{"id": "CLEVR_dev_6611", "input": "How many sides of the purple cube can be seen?", "output": "[\"SELECT['purple cube']\", \"PROJECT['sides of #REF', '#1']\", \"FILTER['#2', 'that can be seen']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_6612", "input": "Are all the items a different color?", "output": "[\"SELECT['items']\", \"PROJECT['colors of #REF', '#1']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to #4']\"]"}
{"id": "CLEVR_dev_6613", "input": "Is the number of cyan objects greater than the number of purple objects?", "output": "[\"SELECT['cyan objects']\", \"SELECT['purple objects']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is higher than #4']\"]"}
{"id": "CLEVR_dev_6617", "input": "How many yellow objects of all shapes are rubber or metallic?", "output": "[\"SELECT['yellow objects']\", \"FILTER['#1', 'that are rubber']\", \"FILTER['#1', 'that are metallic']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"ARITHMETIC['sum', '#4', '#5']\"]"}
{"id": "CLEVR_dev_6621", "input": "What is the only shiny shape shown?", "output": "[\"SELECT['shapes']\", \"FILTER['#1', 'that are shiny']\"]"}
{"id": "CLEVR_dev_6622", "input": "Is there an equal number of purple and yellow objects?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are purple']\", \"FILTER['#1', 'that are yellow']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'and #5 are equal']\"]"}
{"id": "CLEVR_dev_6625", "input": "what is the predominant shape?", "output": "[\"SELECT['objects']\", \"PROJECT['shapes of #REF', '#1']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is the highest']\"]"}
{"id": "CLEVR_dev_6626", "input": "Are the two green objects made of the same material?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are green']\", \"PROJECT['the material of #REF', '#2']\", \"BOOLEAN['#3', 'the same']\"]"}
{"id": "CLEVR_dev_6627", "input": "how many red shapes are there?", "output": "[\"SELECT['red shapes']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_6629", "input": "how many objects are to the left of the green cylinders?", "output": "[\"SELECT['objects']\", \"SELECT['green cylinders']\", \"FILTER['#1', 'to the left of #2']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_6633", "input": "If there were no cubes, how many objects would be left?", "output": "[\"SELECT['objects']\", \"SELECT['cubes']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "CLEVR_dev_6634", "input": "What color is the cylinder in front of the small blue metallic cube?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that is small']\", \"FILTER['#2', 'that is blue']\", \"FILTER['#3', 'that is metallic']\", \"SELECT['cylinders']\", \"FILTER['#5', 'that is in front of #4']\", \"PROJECT['the color of #REF', '#6']\"]"}
{"id": "CLEVR_dev_6636", "input": "How many objects are either a blue cube or a color other than yellow?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that are blue']\", \"SELECT['objects']\", \"PROJECT['colors of #REF', '#3']\", \"COMPARATIVE['#3', '#4', 'is yellow']\", \"DISCARD['#3', '#5']\", \"DISCARD['#6', '#2']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#7']\", \"ARITHMETIC['sum', '#8', '#9']\"]"}
{"id": "CLEVR_dev_6637", "input": "How many visible sides does the smallestt non spherical item have?", "output": "[\"SELECT['smallestt items']\", \"FILTER['#1', 'that is non spherical']\", \"PROJECT['sides of #REF', '#2']\", \"FILTER['#3', 'that are visible']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "CLEVR_dev_6638", "input": "Ae the more cylinders or cubes?", "output": "[\"SELECT['cylinders']\", \"SELECT['cubes']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"COMPARISON['max', '#3', '#4']\"]"}
{"id": "CLEVR_dev_6642", "input": "How many tiny green rubber spheres are there?", "output": "[\"SELECT['rubber spheres']\", \"FILTER['#1', 'that are green']\", \"FILTER['#2', 'that are tiny']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_6644", "input": "Is there a small and large object of the same shape?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are small']\", \"FILTER['#1', 'that are large']\", \"PROJECT['the shape of #REF', '#2']\", \"PROJECT['the shape of #REF', '#3']\", \"BOOLEAN['if_exist', '#4', 'the same as #5']\"]"}
{"id": "CLEVR_dev_6645", "input": "Is there a green triangle in the image?", "output": "[\"SELECT['the image']\", \"BOOLEAN['#1', 'if a green triangle is in #REF']\"]"}
{"id": "CLEVR_dev_6646", "input": "How many shades of blue are there?", "output": "[\"SELECT['blue']\", \"PROJECT['shades of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_6648", "input": "The cyan cube is what material?", "output": "[\"SELECT['cyan cube']\", \"PROJECT['material of #REF', '#1']\"]"}
{"id": "CLEVR_dev_665", "input": "What shape is the object farthest left?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are farthest to the left']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_6653", "input": "Are all the objects pictured shiny?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are shiny']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#4', 'is equal to #3']\"]"}
{"id": "CLEVR_dev_6654", "input": "are all yellow objects shiny?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are yellow']\", \"FILTER['#2', 'that is shiny']\", \"DISCARD['#2', '#3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'equal to zero']\"]"}
{"id": "CLEVR_dev_6662", "input": "Are there any blue objects here?", "output": "[\"SELECT['blue objects']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is higher than zero']\"]"}
{"id": "CLEVR_dev_6663", "input": "what is the dominant color?", "output": "[\"SELECT['color']\", \"FILTER['#1', 'that is dominant']\"]"}
{"id": "CLEVR_dev_6668", "input": "The green box is to the right of the big shiny blue box which is behind what shape?", "output": "[\"SELECT['the big shiny blue box']\", \"SELECT['the green box']\", \"FILTER['#2', 'to the right of #1']\", \"FILTER['#1', 'is behind what shape']\"]"}
{"id": "CLEVR_dev_6669", "input": "What color is the cube that sits in front of the purple cylinder? ", "output": "[\"SELECT['cubes']\", \"SELECT['the purple cylinder']\", \"FILTER['#1', 'that sit in front of #2']\", \"PROJECT['the color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_6677", "input": "What is the number of cubes?", "output": "[\"SELECT['cubes']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_668", "input": "What material is the object closest? ", "output": "[\"SELECT['object']\", \"FILTER['#1', 'that is closest']\", \"PROJECT['material of #REF', '#2']\"]"}
{"id": "CLEVR_dev_6684", "input": "how many cylindes are there in the picture that are green", "output": "[\"SELECT['cylindes in the picture']\", \"FILTER['#1', 'that are green']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_6685", "input": "which type of object is furthest to the right?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is furthest to the right']\", \"PROJECT['type of #REF', '#2']\"]"}
{"id": "CLEVR_dev_6689", "input": "Which item is made from the same material as the large purple cylinder?", "output": "[\"SELECT['the large purple cylinder']\", \"SELECT['objects']\", \"DISCARD['#2', '#1']\", \"PROJECT['material of #REF', '#1']\", \"PROJECT['materials of #REF', '#3']\", \"COMPARATIVE['#3', '#5', 'is the same as #4']\"]"}
{"id": "CLEVR_dev_669", "input": "Is the gold cube shiny?", "output": "[\"SELECT['the gold cube']\", \"BOOLEAN['#1', 'is shiny']\"]"}
{"id": "CLEVR_dev_6691", "input": "What object is directly in front of silver ball?", "output": "[\"SELECT['silver ball']\", \"PROJECT['object in front of #REF', '#1']\"]"}
{"id": "CLEVR_dev_6693", "input": "what color is the shape to the right of the yellow sphere", "output": "[\"SELECT['yellow sphere']\", \"PROJECT['shape to the right of #REF', '#1']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_6695", "input": "how many of these shapes are green", "output": "[\"SELECT['shapes']\", \"FILTER['#1', 'that are green']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_6699", "input": "How many small objects?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are small']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_670", "input": "Are there two objects the same color and the same material?", "output": "[\"SELECT['objects']\", \"PROJECT['colors of #REF', '#1']\", \"PROJECT['materials of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'are the same']\", \"COMPARATIVE['#1', '#3', 'are the same']\", \"INTERSECTION['#1', '#4', '#5']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is two']\"]"}
{"id": "CLEVR_dev_6700", "input": "Are the large cubes the same material?", "output": "[\"SELECT['large cubes']\", \"PROJECT['materials of #REF', '#1']\", \"BOOLEAN['#2', 'the same']\"]"}
{"id": "CLEVR_dev_6703", "input": "What is the shape of the object between the two cubes?", "output": "[\"SELECT['cubes']\", \"PROJECT['object between #REF', '#1']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_6709", "input": "The purple object appears to be made out of a different material; what is it?", "output": "[\"SELECT['purple object']\", \"PROJECT['material of #REF', '#1']\"]"}
{"id": "CLEVR_dev_6715", "input": "How many objects are not a metal ball?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are metal']\", \"FILTER['#1', 'that are balls']\", \"INTERSECTION['#1', '#2', '#3']\", \"DISCARD['#1', '#4']\", \"AGGREGATE['count', '#5']\"]"}
{"id": "CLEVR_dev_6719", "input": "Are there more big objects than small spheres?", "output": "[\"SELECT['big objects']\", \"SELECT['small spheres']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'higher than #4']\"]"}
{"id": "CLEVR_dev_672", "input": "What color is the only rubber object?", "output": "[\"SELECT['rubber object']\", \"PROJECT['color of #REF', '#1']\"]"}
{"id": "CLEVR_dev_6720", "input": "What is in front of the red ball?", "output": "[\"SELECT['red ball']\", \"PROJECT['What is in front of #REF', '#1']\"]"}
{"id": "CLEVR_dev_6721", "input": "Is there a red ball in the image?", "output": "[\"SELECT['red ball']\", \"BOOLEAN['#1', 'Is there any #REF']\"]"}
{"id": "CLEVR_dev_6724", "input": "What is the color of the sphere that is not matte, and there are not two the same?", "output": "[\"SELECT['sphere']\", \"FILTER['#1', 'that is matte']\", \"DISCARD['#1', '#2']\", \"FILTER['#3', 'where there are not two the same']\", \"PROJECT['color of #REF', '#4']\"]"}
{"id": "CLEVR_dev_6727", "input": "Is there another object like the one behind the metallic blue thing?", "output": "[\"SELECT['the metallic blue thing']\", \"SELECT['objects']\", \"FILTER['#2', 'that are behind #1']\", \"BOOLEAN['if_exist', '#2', 'that is like #3']\"]"}
{"id": "CLEVR_dev_6728", "input": "are there any red cubes?", "output": "[\"SELECT['red cubes']\", \"BOOLEAN['#1', 'are there any #REF']\"]"}
{"id": "CLEVR_dev_6729", "input": "Is the item closest to the front the same as the item closest to the back?", "output": "[\"SELECT['items']\", \"PROJECT['how close to the front are #REF', '#1']\", \"PROJECT['how close to the back are #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is the lowest']\", \"COMPARATIVE['#1', '#3', 'is the lowest']\", \"BOOLEAN['#4', 'is the same as #5']\"]"}
{"id": "CLEVR_dev_6733", "input": "What rubber shape is partially hidden by two large rubber objects?", "output": "[\"SELECT['large rubber objects']\", \"PROJECT['rubber shape partially hidden by two #REF', '#1']\"]"}
{"id": "CLEVR_dev_6738", "input": "What is the shape of the item between the two cyan objects?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are cyan']\", \"FILTER['#1', 'that are in between #2']\", \"PROJECT['shape of #REF', '#3']\"]"}
{"id": "CLEVR_dev_6740", "input": "How many cubes are the same size as the gold sphere?", "output": "[\"SELECT['cubes']\", \"SELECT['sphere']\", \"FILTER['#2', 'that is gold']\", \"PROJECT['size of #REF', '#3']\", \"COMPARATIVE['#1', '#4', '']\", \"AGGREGATE['count', '#5']\"]"}
{"id": "CLEVR_dev_6746", "input": "How many flat surfaces are visible in this picture?", "output": "[\"SELECT['flat surfaces']\", \"FILTER['#1', 'that are visible']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_6748", "input": "what shape is the largest blue object?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are blue']\", \"PROJECT['size of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is the highest']\", \"PROJECT['shape of #REF', '#4']\"]"}
{"id": "CLEVR_dev_6754", "input": "are there more cubes behind the blue sphere or the silver one?", "output": "[\"SELECT['the blue sphere']\", \"SELECT['the silver sphere']\", \"PROJECT['cubes behind of #REF', '#1']\", \"PROJECT['cubes behind of #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"COMPARISON['max', '#5', '#6']\"]"}
{"id": "CLEVR_dev_6756", "input": "Which has more volume the blue ball or the blue cube?", "output": "[\"SELECT['blue ball']\", \"SELECT['blue cube']\", \"PROJECT['volume of #REF', '#1']\", \"PROJECT['volume of #REF', '#2']\", \"COMPARISON['max', '#3', '#4']\"]"}
{"id": "CLEVR_dev_6761", "input": "what object is to the right of the gold cube?", "output": "[\"SELECT['gold cube']\", \"PROJECT['object to the right of #REF', '#1']\"]"}
{"id": "CLEVR_dev_6762", "input": "How many objects are either red spheres or blue cubes?", "output": "[\"SELECT['spheres']\", \"FILTER['#1', 'that are red']\", \"SELECT['cubes']\", \"FILTER['#3', 'that are blue']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['sum', '#5', '#6']\"]"}
{"id": "CLEVR_dev_6763", "input": "What shape are the small objects?", "output": "[\"SELECT['small objects']\", \"PROJECT['shapes of #REF', '#1']\"]"}
{"id": "CLEVR_dev_6765", "input": "Can I find a sphere/ball up front?", "output": "[\"SELECT['sphere/balls']\", \"BOOLEAN['#1', 'if any #REF are up front']\"]"}
{"id": "CLEVR_dev_6766", "input": "What items have light casted on them?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that have light casted on them']\"]"}
{"id": "CLEVR_dev_6772", "input": "What color is reflected in the large metal cube?", "output": "[\"SELECT['the large metal cube']\", \"SELECT['colors']\", \"FILTER['#2', 'that are reflected in #1']\"]"}
{"id": "CLEVR_dev_6773", "input": "Is the large green object sphere shaped?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are large']\", \"FILTER['#2', 'that are green']\", \"BOOLEAN['#3', 'is sphere shaped']\"]"}
{"id": "CLEVR_dev_6777", "input": "How many objects are between big yellow ball and the big yellow cube?", "output": "[\"SELECT['the big yellow ball']\", \"SELECT['the big yellow cube']\", \"SELECT['objects']\", \"FILTER['#3', 'betweenleftside #1']\", \"FILTER['#4', 'betweenrightside #2']\", \"AGGREGATE['count', '#5']\"]"}
{"id": "CLEVR_dev_6779", "input": "What shape is the matte object that is farthest forward?", "output": "[\"SELECT['matte object']\", \"FILTER['#1', 'that is farthest forward']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_6793", "input": "What shape is the small item beside the closest large object?", "output": "[\"SELECT['the closest large object']\", \"PROJECT['the small item beside #REF', '#1']\", \"PROJECT['the shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_6795", "input": "What color is the sphere that has a matching cube and cylinder?", "output": "[\"SELECT['the spheres']\", \"FILTER['#1', 'that has a matching cube']\", \"FILTER['#2', 'that has a matching cylinder']\", \"PROJECT['the color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_6797", "input": "Are all made of the same material?", "output": "[\"SELECT['all']\", \"PROJECT['materials of #REF', '#1']\", \"BOOLEAN['#2', 'all the same']\"]"}
{"id": "CLEVR_dev_68", "input": "What object is in front of the gray object?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is gray']\", \"FILTER['#1', 'in front of #2']\"]"}
{"id": "CLEVR_dev_680", "input": "What color is the object of a different finish than the rest?", "output": "[\"SELECT['objects']\", \"PROJECT['finishes of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is different than the rest']\", \"PROJECT['the color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_6803", "input": "What is the number of yellow cylinders in the picture?", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'that are yellow']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_6805", "input": "which shape appears most frequently in the image?", "output": "[\"SELECT['objects']\", \"PROJECT['shapes of #REF', '#1']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is the highest']\"]"}
{"id": "CLEVR_dev_6810", "input": "How many red objects of metallic material?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are red']\", \"PROJECT['materials of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is metallic']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "CLEVR_dev_6811", "input": "are there any red shapes?", "output": "[\"SELECT['red shapes']\", \"BOOLEAN['#1', 'are there any #REF']\"]"}
{"id": "CLEVR_dev_6817", "input": "Which color ball is closer to the brown cube?", "output": "[\"SELECT['balls']\", \"FILTER['#1', 'closer to the brown cube']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_6819", "input": "Is the light reflecting off the purple cube?", "output": "[\"SELECT['cube']\", \"FILTER['#1', 'that is purple']\", \"BOOLEAN['#2', 'if light is reflecting off of #REF']\"]"}
{"id": "CLEVR_dev_6822", "input": "What is the shape of the closest green metallic object?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are green']\", \"FILTER['#2', 'that are metallic']\", \"PROJECT['the closest #REF', '#3']\", \"PROJECT['the shape of #REF', '#4']\"]"}
{"id": "CLEVR_dev_6823", "input": "Are there any shapes that are not shiny?", "output": "[\"SELECT['shapes']\", \"FILTER['#1', 'that are shiny']\", \"DISCARD['#1', '#2']\", \"BOOLEAN['#3', 'if there are any #REF']\"]"}
{"id": "CLEVR_dev_6828", "input": "Are all the large cubes the same color?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that are large']\", \"PROJECT['colors of #REF', '#2']\", \"BOOLEAN['#3', 'if all #REF are the same']\"]"}
{"id": "CLEVR_dev_6829", "input": "How many of the items aren't shiny?", "output": "[\"SELECT['the items']\", \"FILTER['#1', 'that are shiny']\", \"DISCARD['#1', '#2']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_6831", "input": "Are all the objects blocks?", "output": "[\"SELECT['objects']\", \"SELECT['blocks']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#4', 'is equal to #3']\"]"}
{"id": "CLEVR_dev_6833", "input": "Are there any cylinders located next to cubes?", "output": "[\"SELECT['cylinders']\", \"SELECT['cubes']\", \"FILTER['#1', 'that are next to #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is more than zero']\"]"}
{"id": "CLEVR_dev_6835", "input": "Is the cube the same material as the cylinder closest to the front?", "output": "[\"SELECT['cube']\", \"SELECT['cylinder']\", \"FILTER['#2', 'that is closest to the front']\", \"PROJECT['material of #REF', '#1']\", \"PROJECT['material of #REF', '#3']\", \"BOOLEAN['#4', 'the same as #5']\"]"}
{"id": "CLEVR_dev_6836", "input": "What color is the largests cylinder?", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'that is largest']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_6837", "input": "What is the shape of the smallestt object on the right?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are on the right']\", \"PROJECT['size of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is the lowest']\", \"PROJECT['shape of #REF', '#4']\"]"}
{"id": "CLEVR_dev_6838", "input": "Which object has two of the same color?", "output": "[\"SELECT['objects']\", \"PROJECT['colors of #REF', '#1']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#1', '#3', 'is two']\"]"}
{"id": "CLEVR_dev_684", "input": "how many spheres are the same color?", "output": "[\"SELECT['spheres']\", \"PROJECT['colors of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is the same']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_685", "input": "How many cylinders are shiny?", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'that are shiny']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_6855", "input": "What shape is up front?", "output": "[\"SELECT['shape']\", \"FILTER['#1', 'that is up front']\"]"}
{"id": "CLEVR_dev_6857", "input": "What color is represented the most?", "output": "[\"SELECT['colors']\", \"FILTER['#1', 'that is represented the most']\"]"}
{"id": "CLEVR_dev_6858", "input": "how many different colors are the spheres?", "output": "[\"SELECT['spheres']\", \"PROJECT['different colors of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_6859", "input": "How many shiny objects are shown?", "output": "[\"SELECT['shiny objects']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_686", "input": "Are the tan cube and the green cube the same size?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that is tan']\", \"FILTER['#1', 'that is green']\", \"PROJECT['the size of #REF', '#2']\", \"PROJECT['the size of #REF', '#3']\", \"BOOLEAN['#4', 'is the same as #5']\"]"}
{"id": "CLEVR_dev_6863", "input": "Is the purple object the same shape as the others/", "output": "[\"SELECT['the purple object']\", \"PROJECT['the shape of #REF', '#1']\", \"SELECT['objects']\", \"DISCARD['#3', '#1']\", \"PROJECT['the shapes of #REF', '#4']\", \"BOOLEAN['#2', 'is the same as #5']\"]"}
{"id": "CLEVR_dev_6866", "input": "What number of objects are either purple or blue?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are purple']\", \"FILTER['#1', 'that are blue']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"ARITHMETIC['sum', '#4', '#5']\"]"}
{"id": "CLEVR_dev_6868", "input": "How many yellow balls are there?", "output": "[\"SELECT['yellow balls']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_6873", "input": "Does the yellow object and the red object have the same material?", "output": "[\"SELECT['yellow object']\", \"SELECT['red object']\", \"PROJECT['material of #REF', '#1']\", \"PROJECT['material of #REF', '#2']\", \"BOOLEAN['#3', 'is the same as #4']\"]"}
{"id": "CLEVR_dev_6875", "input": "How many large metallic cubes are of the same color?", "output": "[\"SELECT['metallic cubes']\", \"FILTER['#1', 'of the same color']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_6876", "input": "What is the number of small objects?", "output": "[\"SELECT['small objects']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_6877", "input": "is the cylinder touching the sphere?", "output": "[\"SELECT['cylinder']\", \"SELECT['sphere']\", \"BOOLEAN['#1', 'touching #2']\"]"}
{"id": "CLEVR_dev_688", "input": "What shape object is partially hidden by a ball?", "output": "[\"SELECT['ball']\", \"PROJECT['object partially hidden by #REF', '#1']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_6880", "input": "What is the shape of the object that is smaller than two of the smallestt blocks?", "output": "[\"SELECT['blocks']\", \"PROJECT['the size of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is the smallestt']\", \"SELECT['objects']\", \"PROJECT['the size of #REF', '#4']\", \"PROJECT['the size of #REF', '#3']\", \"COMPARATIVE['#4', '#5', 'is smaller than #6']\", \"PROJECT['the shape of #REF', '#7']\"]"}
{"id": "CLEVR_dev_6881", "input": "What is the number of small metallic spheres?", "output": "[\"SELECT['small metallic spheres']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_6882", "input": "How many cylinders are larger than the shiny green ball?", "output": "[\"SELECT['cylinders']\", \"SELECT['shiny ball']\", \"FILTER['#2', 'that is green']\", \"PROJECT['size of #REF', '#1']\", \"PROJECT['size of #REF', '#3']\", \"COMPARATIVE['#1', '#4', 'is higher than #5']\", \"AGGREGATE['count', '#6']\"]"}
{"id": "CLEVR_dev_6884", "input": "Is there anything else that has the same material as the large greenobject?", "output": "[\"SELECT['the large greenobject']\", \"PROJECT['the material of #REF', '#1']\", \"SELECT['objects']\", \"DISCARD['#3', '#1']\", \"PROJECT['the materials of #REF', '#4']\", \"COMPARATIVE['#4', '#5', 'is the same as #2']\", \"BOOLEAN['#6', 'if there are any #REF']\"]"}
{"id": "CLEVR_dev_6888", "input": "How many non cube items are there?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that are non cubes']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_6890", "input": "how many cylinders are behind the blue sphere", "output": "[\"SELECT['cylinders']\", \"SELECT['blue sphere']\", \"FILTER['#1', 'behind #2']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_6894", "input": "What color is the ball that is closest?", "output": "[\"SELECT['ball']\", \"FILTER['#1', 'that is closest']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_6895", "input": "How many objects are blue in color?", "output": "[\"SELECT['objects']\", \"PROJECT['colors of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is blue']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_6896", "input": "how many different size cylinders are there", "output": "[\"SELECT['cylinders']\", \"PROJECT['sizes of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_6898", "input": "There is a small cube behind a green metallic sphere; what is it's color?", "output": "[\"SELECT['small cube']\", \"SELECT['green sphere']\", \"FILTER['#2', 'that is metallic']\", \"FILTER['#1', 'behind #3']\", \"PROJECT['color of #REF', '#4']\"]"}
{"id": "CLEVR_dev_690", "input": "How many purple spheres are metallic?", "output": "[\"SELECT['purple spheres']\", \"FILTER['#1', 'that are metallic']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_6901", "input": "Are all the shiny objects the same color?", "output": "[\"SELECT['shiny objects']\", \"PROJECT['colors of #REF', '#1']\", \"BOOLEAN['#2', 'all the same']\"]"}
{"id": "CLEVR_dev_6903", "input": "How many more cubes than spheres?", "output": "[\"SELECT['cubes']\", \"SELECT['spheres']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "CLEVR_dev_6905", "input": "How many shapes are the same size in this group?", "output": "[\"SELECT['group']\", \"PROJECT['shapes in #REF', '#1']\", \"PROJECT['sizes of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'are the same']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "CLEVR_dev_6906", "input": "What material is the smallestt cube made out of?", "output": "[\"SELECT['cubes']\", \"PROJECT['size of #REF', '#1']\", \"SUPERLATIVE['min', '#1', '#2']\", \"PROJECT['material of #REF', '#3']\"]"}
{"id": "CLEVR_dev_6907", "input": "Are the cylinders the same size?", "output": "[\"SELECT['cylinders']\", \"PROJECT['the sizes of #REF', '#1']\", \"BOOLEAN['#2', 'are the same']\"]"}
{"id": "CLEVR_dev_6908", "input": "Is the gray cube attached to the cyan cylinder?", "output": "[\"SELECT['the gray cube']\", \"SELECT['the cyan cylinder']\", \"BOOLEAN['#1', 'is attached to #2']\"]"}
{"id": "CLEVR_dev_6912", "input": "Are all the blocks metallic?", "output": "[\"SELECT['blocks']\", \"FILTER['#1', 'that are metallic']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#4', 'is equal to #3']\"]"}
{"id": "CLEVR_dev_6913", "input": "is there a green cylinder behind the silver cube?", "output": "[\"SELECT['green cylinder']\", \"SELECT['silver cube']\", \"FILTER['#1', 'behind #2']\", \"BOOLEAN['#3', 'is there any #REF']\"]"}
{"id": "CLEVR_dev_6917", "input": "All the large spheres are what color?", "output": "[\"SELECT['large spheres']\", \"PROJECT['color of #REF', '#1']\"]"}
{"id": "CLEVR_dev_6918", "input": "What color are the two small balls?", "output": "[\"SELECT['small balls']\", \"PROJECT['color of #REF', '#1']\"]"}
{"id": "CLEVR_dev_6919", "input": "What color is the item that is mostly hidden?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that is mostly hidden']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_6924", "input": "How many cubes are not gray and not matte?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that are gray']\", \"FILTER['#1', 'that are matte']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"ARITHMETIC['sum', '#5', '#6']\", \"ARITHMETIC['difference', '#4', '#7']\"]"}
{"id": "CLEVR_dev_6928", "input": "what is the shape of the furthest right object?", "output": "[\"SELECT['object']\", \"FILTER['#1', 'that is the furthest to the right']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_6935", "input": "how many objects are green in the image?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are green']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_6938", "input": "what is the furthest left shape", "output": "[\"SELECT['shapes']\", \"FILTER['#1', 'that is furthest left']\"]"}
{"id": "CLEVR_dev_6941", "input": "Will the direction of the shadows of the spheres change if I roll them to the right", "output": "[\"SELECT['the spheres']\", \"PROJECT['the shadows of #REF', '#1']\", \"PROJECT['the directions of #REF', '#2']\", \"BOOLEAN['#3', 'Will change if #1 are roll to the right']\"]"}
{"id": "CLEVR_dev_6947", "input": "how many large cylinders are shiny?", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'that are large']\", \"FILTER['#2', 'that are shiny']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_6951", "input": "What color is the object to the right of the large metallic cube?", "output": "[\"SELECT['objects']\", \"SELECT['large cube']\", \"FILTER['#2', 'that is metallic']\", \"FILTER['#1', 'to the right of #3']\", \"PROJECT['color of #REF', '#4']\"]"}
{"id": "CLEVR_dev_6954", "input": "How many golden squares are there?", "output": "[\"SELECT['squares']\", \"FILTER['#1', 'that are golden']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_6959", "input": "Is the blue metallic box smaller than the red metallic box?", "output": "[\"SELECT['boxes']\", \"FILTER['#1', 'that are metallic']\", \"FILTER['#2', 'that are blue']\", \"FILTER['#2', 'that are red']\", \"PROJECT['size of #REF', '#3']\", \"PROJECT['size of #REF', '#4']\", \"BOOLEAN['#5', 'is smaller than #6']\"]"}
{"id": "CLEVR_dev_696", "input": "What color is the largest square block?", "output": "[\"SELECT['blocks']\", \"FILTER['#1', 'that are square']\", \"AGGREGATE['max', '#2']\", \"PROJECT['the color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_6960", "input": "Is the number of gray objects less than the number of spheres?", "output": "[\"SELECT['gray objects']\", \"SELECT['spheres']\", \"PROJECT['number #REF', '#1']\", \"PROJECT['number #REF', '#2']\", \"BOOLEAN['#3', 'lower than #4']\"]"}
{"id": "CLEVR_dev_6961", "input": "How many shades of red are there?", "output": "[\"SELECT['red']\", \"PROJECT['shades of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_6963", "input": "what is the color of the furthest right object", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is furthest right']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_6968", "input": "Is there a cylinder the same color as the cube?", "output": "[\"SELECT['the cube']\", \"PROJECT['the color of #REF', '#1']\", \"SELECT['cylinders']\", \"PROJECT['the colors of #REF', '#3']\", \"COMPARATIVE['#3', '#4', 'is the same as #2']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is at least one']\"]"}
{"id": "CLEVR_dev_6970", "input": "Are there any yellow objects here?", "output": "[\"SELECT['yellow objects']\", \"BOOLEAN['#1', 'are there any #REF']\"]"}
{"id": "CLEVR_dev_6976", "input": "How many items are cyan?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that are cyan']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_698", "input": "Are the two cyan cubes the same size?", "output": "[\"SELECT['cyan cubes']\", \"PROJECT['sizes of #REF', '#1']\", \"BOOLEAN['#2', 'both the same']\"]"}
{"id": "CLEVR_dev_6984", "input": "how many balls are brown?", "output": "[\"SELECT['balls']\", \"FILTER['#1', 'that are brown']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_6991", "input": "What is the only color which covers more than one item?", "output": "[\"SELECT['colors']\", \"PROJECT['items of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is higher than one']\"]"}
{"id": "CLEVR_dev_6992", "input": "What color is the tallest shiny cylinder?", "output": "[\"SELECT['shiny cylinder']\", \"FILTER['#1', 'that is tallest']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_6994", "input": "What is the color of the large cubes?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that are large']\", \"PROJECT['the color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_6996", "input": "Is there a cyan rubber cube?", "output": "[\"SELECT['cyan cube']\", \"FILTER['#1', 'that is rubber']\", \"BOOLEAN['#2', 'is there any #REF']\"]"}
{"id": "CLEVR_dev_6999", "input": "There is a red object to the left of a green sphere; what is its shape?", "output": "[\"SELECT['red object']\", \"SELECT['green sphere']\", \"FILTER['#1', 'to the left of #2']\", \"PROJECT['shape of #REF', '#3']\"]"}
{"id": "CLEVR_dev_7000", "input": "What material is the yellow cube?", "output": "[\"SELECT['the yellow cube']\", \"PROJECT['the material of #REF', '#1']\"]"}
{"id": "CLEVR_dev_7002", "input": "What shape is the item behind the large blue sphere?", "output": "[\"SELECT['items']\", \"SELECT['large sphere']\", \"FILTER['#2', 'that is blue']\", \"FILTER['#1', 'behind #3']\", \"PROJECT['shape of #REF', '#4']\"]"}
{"id": "CLEVR_dev_7007", "input": "How many different colors are there?", "output": "[\"SELECT['colors']\", \"PROJECT['different #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"UNION['#1', '#3']\"]"}
{"id": "CLEVR_dev_7008", "input": "what shape is furthest to the right?", "output": "[\"SELECT['shapes']\", \"FILTER['#1', 'that is furthest to the right']\"]"}
{"id": "CLEVR_dev_7011", "input": "There is a small object to the left of the blue cube; what shape is it?", "output": "[\"SELECT['small object']\", \"SELECT['blue cube']\", \"FILTER['#1', 'to the left of #2']\", \"PROJECT['shape of #REF', '#3']\"]"}
{"id": "CLEVR_dev_7015", "input": "Which object cannot roll?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that can not roll']\"]"}
{"id": "CLEVR_dev_7016", "input": "What color is the sphere on the back left?", "output": "[\"SELECT['spheres']\", \"FILTER['#1', 'that are on the back left']\", \"PROJECT['the color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_7017", "input": "Is there a purple metallic cube?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that is purple']\", \"FILTER['#2', 'that is metallic']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'more than zero']\"]"}
{"id": "CLEVR_dev_7022", "input": "Are all materials identical?", "output": "[\"SELECT['objects']\", \"PROJECT['materials of #REF', '#1']\", \"BOOLEAN['#2', 'if all of #REF are identical']\"]"}
{"id": "CLEVR_dev_7030", "input": "It the tiny blue cube the same material as the tiny purple ball?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that is tiny']\", \"FILTER['#2', 'that is blue']\", \"PROJECT['material of #REF', '#3']\", \"SELECT['balls']\", \"FILTER['#5', 'that is tiny']\", \"FILTER['#6', 'that is purple']\", \"PROJECT['material of #REF', '#7']\", \"BOOLEAN['#4', 'equal to #8']\"]"}
{"id": "CLEVR_dev_7036", "input": "What is the shape of the small objects to the right of the large gold metallic object?", "output": "[\"SELECT['large gold metallic object']\", \"PROJECT['small objects to the right of #REF', '#1']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_7038", "input": "How many shiny cubes are in this picture?", "output": "[\"SELECT['shiny cubes']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_7042", "input": "How many small objects are there?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are small']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_7043", "input": "What is the shape of the two shiny objects?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are shiny']\", \"PROJECT['the shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_7045", "input": "How many objects here would roll if pushed?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that would roll if pushed']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_7046", "input": "How many objects of all sizes and colors are cube shaped?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are cube shaped']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_7047", "input": "Is the tiny item behind the two shiny cylinders made of metal?", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'that are shiny']\", \"PROJECT['items behind the two of #REF', '#2']\", \"FILTER['#3', 'that are tiny']\", \"BOOLEAN['#4', 'is made of metal']\"]"}
{"id": "CLEVR_dev_7049", "input": "what color is the object reflecting to the left off the cyan ball?", "output": "[\"SELECT['object']\", \"SELECT['cyan ball']\", \"FILTER['#1', 'to the left of #2']\", \"PROJECT['color #REF is reflecting', '#3']\"]"}
{"id": "CLEVR_dev_7051", "input": "What color is not a cylinder? ", "output": "[\"SELECT['objects']\", \"SELECT['cylinders']\", \"PROJECT['colors of #REF', '#1']\", \"PROJECT['colors of #REF', '#2']\", \"DISCARD['#3', '#4']\"]"}
{"id": "CLEVR_dev_7053", "input": "how many green objects are there?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are green']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_7055", "input": "Is the brown cube closer to the gold thing than the green cube?", "output": "[\"SELECT['brown cube']\", \"SELECT['gold thing']\", \"SELECT['green cube']\", \"BOOLEAN['#1', 'closer to #2 than #3']\"]"}
{"id": "CLEVR_dev_7057", "input": "What color is the object that is not the same shape as the other objects?", "output": "[\"SELECT['objects']\", \"PROJECT['shapes of #REF', '#1']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is equal to one']\", \"COMPARATIVE['#1', '#2', 'is the same as #4']\", \"PROJECT['color of #REF', '#5']\"]"}
{"id": "CLEVR_dev_706", "input": "Which is bigger, the square or the cylinders?", "output": "[\"SELECT['the square']\", \"SELECT['the cylinders']\", \"PROJECT['size of #REF', '#1']\", \"PROJECT['size of #REF', '#2']\", \"COMPARISON['max', '#3', '#4']\"]"}
{"id": "CLEVR_dev_7060", "input": "What color is the cube closest to the camera?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'closest to the camera']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_7064", "input": "Which shape is shown the most?", "output": "[\"SELECT['objects']\", \"PROJECT['shapes of #REF', '#1']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is the highest']\"]"}
{"id": "CLEVR_dev_7068", "input": "what is the shape of the purple thing being partially blocked by the red matte cube?", "output": "[\"SELECT['purple thing']\", \"SELECT['red cube']\", \"FILTER['#2', 'that is matte']\", \"FILTER['#1', 'being partially blocked by #3']\", \"PROJECT['shape of #REF', '#4']\"]"}
{"id": "CLEVR_dev_707", "input": "How many purple squares are there?", "output": "[\"SELECT['purple squares']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_7077", "input": "What shape item is furthest towards the back?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that are furthest towards the back']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_7079", "input": "What color is the metallic sphere shaped object?", "output": "[\"SELECT['the metallic sphere shaped object']\", \"PROJECT['the color of #REF', '#1']\"]"}
{"id": "CLEVR_dev_7081", "input": "What material is the small sphere behind the brown shiny cylinder made from?", "output": "[\"SELECT['small sphere']\", \"SELECT['brown cylinder']\", \"FILTER['#2', 'that is shiny']\", \"FILTER['#1', 'behind #3']\", \"PROJECT['material of #REF', '#4']\"]"}
{"id": "CLEVR_dev_7082", "input": "What color is the rubber cube here?", "output": "[\"SELECT['rubber cube']\", \"PROJECT['color of #REF', '#1']\"]"}
{"id": "CLEVR_dev_7083", "input": "Are there four items here?", "output": "[\"SELECT['items']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is equal to four']\"]"}
{"id": "CLEVR_dev_7088", "input": "What shape is to the left of the green cylinder?", "output": "[\"SELECT['objects']\", \"SELECT['green cylinder']\", \"FILTER['#1', 'to the left of #2']\", \"PROJECT['shape of #REF', '#3']\"]"}
{"id": "CLEVR_dev_7093", "input": "How many solid purple spheres are there?", "output": "[\"SELECT['spheres']\", \"FILTER['#1', 'that are solid']\", \"FILTER['#2', 'that are purple']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_7094", "input": "What object is the color of grass?", "output": "[\"SELECT['objects']\", \"PROJECT['colors of #REF', '#1']\", \"SELECT['the color of grass']\", \"COMPARATIVE['#1', '#2', 'is the same as #3']\"]"}
{"id": "CLEVR_dev_7098", "input": "what shape is to the left of the blue sphere?", "output": "[\"SELECT['sphere']\", \"FILTER['#1', 'that is blue']\", \"SELECT['objects']\", \"FILTER['#3', 'that is left of #2']\", \"PROJECT['shape of #REF', '#4']\"]"}
{"id": "CLEVR_dev_7108", "input": "Are the spheres all matte?", "output": "[\"SELECT['spheres']\", \"FILTER['#1', 'that are matte']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'the same as #4']\"]"}
{"id": "CLEVR_dev_7109", "input": "how many shapes are not shiny", "output": "[\"SELECT['shapes']\", \"FILTER['#1', 'that are shiny']\", \"DISCARD['#1', '#2']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_7110", "input": "how many items are in a line behind the red cylinder?", "output": "[\"SELECT['red cylinder']\", \"PROJECT['items in a line behind #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_7114", "input": "What color is the sphere to the left of the red square?", "output": "[\"SELECT['the red square']\", \"PROJECT['the sphere to the left of #REF', '#1']\", \"PROJECT['the color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_7117", "input": "Is the red cube behind the blue cube?", "output": "[\"SELECT['red cube']\", \"SELECT['blue cube']\", \"BOOLEAN['#1', 'behind #2']\"]"}
{"id": "CLEVR_dev_7119", "input": "What shape is next to the green square.", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are next to the green square']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_7120", "input": "How many cyan matte objects are there in this image?", "output": "[\"SELECT['image']\", \"PROJECT['cyan objects in #REF', '#1']\", \"FILTER['#2', 'that are matte']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_7121", "input": "Are the objects all the same ?", "output": "[\"SELECT['objects']\", \"BOOLEAN['#1', 'all the same']\"]"}
{"id": "CLEVR_dev_713", "input": "Is the purple the largest item?", "output": "[\"SELECT['items']\", \"PROJECT['size of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is the highest']\", \"BOOLEAN['#3', 'is purple']\"]"}
{"id": "CLEVR_dev_7134", "input": "is there a green sphere behind the gold sphere?", "output": "[\"SELECT['gold sphere']\", \"PROJECT['green sphere behind #REF', '#1']\", \"BOOLEAN['#2', 'is there any #REF']\"]"}
{"id": "CLEVR_dev_7136", "input": "How many small blue spheres are pictured?", "output": "[\"SELECT['small spheres']\", \"FILTER['#1', 'that are blue']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_7138", "input": "What shape is the object that is reflecting in the large purple cylinder?", "output": "[\"SELECT['the large purple cylinder']\", \"PROJECT['the reflecting object of #REF', '#1']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_714", "input": "is the purple cylinder in front of the other objects?", "output": "[\"SELECT['the purple cylinder']\", \"SELECT['objects']\", \"DISCARD['#2', '#1']\", \"BOOLEAN['#1', 'is in front of #3']\"]"}
{"id": "CLEVR_dev_7140", "input": "How many shiny items are there?", "output": "[\"SELECT['shiny items']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_7142", "input": "How many matted shapes are there in this group?", "output": "[\"SELECT['shapes']\", \"FILTER['#1', 'that are matted']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_7144", "input": "What color is the big block behind the big matte block?", "output": "[\"SELECT['blocks']\", \"FILTER['#1', 'that are big']\", \"FILTER['#2', 'that are matte']\", \"FILTER['#2', 'that are behind of #3']\", \"PROJECT['color of #REF', '#4']\"]"}
{"id": "CLEVR_dev_7146", "input": "What shape is the rubber object next to the tall, shiny cylinder?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are rubber']\", \"SELECT['cylinders']\", \"FILTER['#3', 'that is shiny']\", \"FILTER['#4', 'that is tall']\", \"FILTER['#2', 'that is next to #5']\", \"PROJECT['shape of #REF', '#6']\"]"}
{"id": "CLEVR_dev_7147", "input": "Are there more metallic cylinders then matte cylinders?", "output": "[\"SELECT['metallic cylinders']\", \"SELECT['matte cylinders']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'higher than #4']\"]"}
{"id": "CLEVR_dev_7148", "input": "Are all the small shapes the same color", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are small']\", \"PROJECT['colors of #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'equal one']\"]"}
{"id": "CLEVR_dev_715", "input": "How many blue balls do you see?", "output": "[\"SELECT['balls']\", \"FILTER['#1', 'that are blue']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_7156", "input": "What is the color of the item in the back of all the others?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'in the back']\", \"PROJECT['the color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_7158", "input": "Are the small objects the same color?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are small']\", \"PROJECT['the colors of #REF', '#2']\", \"BOOLEAN['#3', 'are the same']\"]"}
{"id": "CLEVR_dev_7163", "input": "What is the total number of cylinders in this photo?", "output": "[\"SELECT['cylinders']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_7167", "input": "is the green ball slightly behind the cylender?", "output": "[\"SELECT['the cylender']\", \"SELECT['the green ball']\", \"BOOLEAN['#2', 'is slightly behind #1']\"]"}
{"id": "CLEVR_dev_7170", "input": "Which object is reflected?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are reflected']\"]"}
{"id": "CLEVR_dev_7172", "input": "Is the smallestt sphere and the largest cube made out of the same material?", "output": "[\"SELECT['sphere']\", \"PROJECT['size of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is the smallestt']\", \"PROJECT['the material that #REF is made out of', '#3']\", \"SELECT['cubes']\", \"PROJECT['size of #REF', '#5']\", \"COMPARATIVE['#5', '#6', 'is the largest']\", \"PROJECT['the material that #REF is made out of', '#7']\", \"BOOLEAN['#4', 'is the same as #8']\"]"}
{"id": "CLEVR_dev_7174", "input": "How many metallic blue cubes are in front of the red rubber cylinder?", "output": "[\"SELECT['cylinder']\", \"FILTER['#1', 'that is red']\", \"FILTER['#2', 'that is rubber']\", \"SELECT['cubes']\", \"FILTER['#4', 'that are blue']\", \"FILTER['#5', 'that are metallic']\", \"FILTER['#6', 'in front of #3']\", \"AGGREGATE['count', '#7']\"]"}
{"id": "CLEVR_dev_7177", "input": "are the cubes in a straight line?", "output": "[\"SELECT['the cubes']\", \"BOOLEAN['#1', 'are in a straight line']\"]"}
{"id": "CLEVR_dev_7179", "input": "Are the gray ball and the brown ball the same size?", "output": "[\"SELECT['gray ball']\", \"SELECT['brown ball']\", \"PROJECT['size of #REF', '#1']\", \"PROJECT['size of #REF', '#2']\", \"BOOLEAN['#3', 'the same as #4']\"]"}
{"id": "CLEVR_dev_718", "input": "Is there a yellow rubber sphere?", "output": "[\"SELECT['yellow sphere']\", \"FILTER['#1', 'that is rubber']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is higher than zero']\"]"}
{"id": "CLEVR_dev_7180", "input": "What is the color of the large Metallic sphere?", "output": "[\"SELECT['large Metallic sphere']\", \"PROJECT['color of #REF', '#1']\"]"}
{"id": "CLEVR_dev_7184", "input": "how many cubes are pictured?", "output": "[\"SELECT['cubes']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_7187", "input": "What color is the matte thing in the back?", "output": "[\"SELECT['things']\", \"FILTER['#1', 'in the back']\", \"FILTER['#2', 'that are matte']\", \"PROJECT['the color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_7188", "input": "Are all the objects balls?", "output": "[\"SELECT['objects']\", \"BOOLEAN['#1', 'if all #REF are balls']\"]"}
{"id": "CLEVR_dev_7190", "input": "Are most of the items cubes or spheres?", "output": "[\"SELECT['cubes']\", \"SELECT['spheres']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"COMPARISON['max', '#3', '#4']\"]"}
{"id": "CLEVR_dev_7196", "input": "What is the color of the smallestt ball?", "output": "[\"SELECT['smallestt ball']\", \"PROJECT['color of #REF', '#1']\"]"}
{"id": "CLEVR_dev_7197", "input": "What object shape is most represented in this image?", "output": "[\"SELECT['shapes']\", \"PROJECT['objects of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"SUPERLATIVE['max', '#1', '#3']\"]"}
{"id": "CLEVR_dev_72", "input": "What shape are most of the shiny items?", "output": "[\"SELECT['shapes']\", \"PROJECT['shiny items of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"SUPERLATIVE['max', '#1', '#3']\"]"}
{"id": "CLEVR_dev_7200", "input": "What color is the cylinder farthest in back?", "output": "[\"SELECT['cylinder']\", \"FILTER['#1', 'farthest in back']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_724", "input": "what is the color of the object farthest right ", "output": "[\"SELECT['object']\", \"FILTER['#1', 'that is farthest right']\", \"PROJECT['the color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_729", "input": "What color cube is in the back?", "output": "[\"SELECT['cube']\", \"FILTER['#1', 'in the back']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_732", "input": "How many purple objects are pictured?", "output": "[\"SELECT['purple objects']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_737", "input": "Are the two smallestt objects the same color?", "output": "[\"SELECT['objects']\", \"PROJECT['size of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is the lowest']\", \"DISCARD['#1', '#3']\", \"PROJECT['size of #REF', '#4']\", \"COMPARATIVE['#4', '#5', 'is the lowest']\", \"PROJECT['color of #REF', '#3']\", \"PROJECT['color of #REF', '#6']\", \"BOOLEAN['#7', 'is the same as #8']\"]"}
{"id": "CLEVR_dev_74", "input": "Is the purple square behind te red cylinder?", "output": "[\"SELECT['the purple square']\", \"SELECT['the red cylinder']\", \"BOOLEAN['#1', 'is behind #2']\"]"}
{"id": "CLEVR_dev_741", "input": "How many blue items are there?", "output": "[\"SELECT['blue items']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_743", "input": "What color is the biggest b object?", "output": "[\"SELECT['biggest object']\", \"PROJECT['color of #REF', '#1']\"]"}
{"id": "CLEVR_dev_746", "input": "What is the combined number of flat surfaces for these objects?", "output": "[\"SELECT['objects']\", \"SELECT['flat surfaces']\", \"GROUP['count', '#2', '#1']\", \"PROJECT['combined #REF', '#3']\"]"}
{"id": "CLEVR_dev_747", "input": "How many cyan objects are there in this photo?", "output": "[\"SELECT['cyan objects']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_753", "input": "How many objects have visible shadows?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'with visible shadows']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_757", "input": "What shape of objects is dominate in this setting? ", "output": "[\"SELECT['objects']\", \"PROJECT['shapes of #REF', '#1']\", \"FILTER['#2', 'that is dominate']\"]"}
{"id": "CLEVR_dev_758", "input": "What shape is the object that is next to the green object?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are green']\", \"FILTER['#1', 'that are next to #2']\", \"PROJECT['shape of #REF', '#3']\"]"}
{"id": "CLEVR_dev_769", "input": "how many objects are small and green?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are small']\", \"FILTER['#1', 'that are green']\", \"INTERSECTION['#1', '#2', '#3']\"]"}
{"id": "CLEVR_dev_77", "input": "What color is the object that is the same shape as the big gray thing?", "output": "[\"SELECT['big gray thing']\", \"SELECT['objects']\", \"DISCARD['#2', '#1']\", \"PROJECT['shape of #REF', '#1']\", \"PROJECT['shape of #REF', '#3']\", \"COMPARATIVE['#3', '#4', 'is the same as #5']\", \"PROJECT['color of #REF', '#6']\"]"}
{"id": "CLEVR_dev_779", "input": "Are the two big things made of the same material?", "output": "[\"SELECT['big things']\", \"PROJECT['material of #REF', '#1']\", \"PROJECT['distinct #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is one']\"]"}
{"id": "CLEVR_dev_783", "input": "What shape is the red object behind the cylinder?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is red']\", \"FILTER['#1', 'that is cylinder']\", \"FILTER['#2', 'behind #3']\", \"PROJECT['shape of #REF', '#4']\"]"}
{"id": "CLEVR_dev_788", "input": "What shape is shown the most?", "output": "[\"SELECT['shape']\", \"FILTER['#1', 'that is shown the most']\"]"}
{"id": "CLEVR_dev_789", "input": "How many square blocks are there?", "output": "[\"SELECT['blocks']\", \"FILTER['#1', 'that are square']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_795", "input": "what is the shape of the item that is the same color as the item obstructing two spheres?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that are obstructing two spheres']\", \"PROJECT['the color of #REF', '#2']\", \"DISCARD['#1', '#2']\", \"PROJECT['the colors of #REF', '#4']\", \"COMPARATIVE['#4', '#5', 'is the same as #3']\", \"PROJECT['the shape of #REF', '#6']\"]"}
{"id": "CLEVR_dev_801", "input": "What is the color of the item with the largest circumference?", "output": "[\"SELECT['items']\", \"PROJECT['circumferences of #REF', '#1']\", \"SUPERLATIVE['max', '#1', '#2']\", \"PROJECT['color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_805", "input": "What color occurs most frequently?", "output": "[\"SELECT['objects']\", \"PROJECT['colors of #REF', '#1']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is the highest']\"]"}
{"id": "CLEVR_dev_808", "input": "is the green cylinder the same size as the purple cylinder?", "output": "[\"SELECT['green cylinder']\", \"SELECT['purple cylinder']\", \"PROJECT['size of #REF', '#1']\", \"PROJECT['size of #REF', '#2']\", \"BOOLEAN['#3', 'the same as #4']\"]"}
{"id": "CLEVR_dev_81", "input": "What is the shape of the two largest items that are also closest together?", "output": "[\"SELECT['largest items']\", \"FILTER['#1', 'that are closest together']\", \"PROJECT['shapes of #REF', '#2']\"]"}
{"id": "CLEVR_dev_810", "input": "How many small spheres are shiny?", "output": "[\"SELECT['small spheres']\", \"FILTER['#1', 'that are shiny']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_811", "input": "How many red object are there?", "output": "[\"SELECT['red objects']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_813", "input": "How many yellow objects do you see", "output": "[\"SELECT['yellow objects']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_814", "input": "Is there a metallic blue block next to the yellow cylinder?", "output": "[\"SELECT['metallic block']\", \"FILTER['#1', 'that is blue']\", \"SELECT['yellow cylinder']\", \"FILTER['#2', 'next to #3']\", \"BOOLEAN['#4', 'is there any #REF']\"]"}
{"id": "CLEVR_dev_820", "input": "Are there more metal objects than small gray objects?", "output": "[\"SELECT['metal objects']\", \"SELECT['small objects']\", \"FILTER['#2', 'that are gray']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'higher than #5']\"]"}
{"id": "CLEVR_dev_825", "input": "What shape is the thing behind the brown thing?", "output": "[\"SELECT['things']\", \"SELECT['brown thing']\", \"FILTER['#1', 'behind #2']\", \"PROJECT['shape of #REF', '#3']\"]"}
{"id": "CLEVR_dev_83", "input": "Which collective group of items is of the greatest volume, the cubical ones or the non cubical ones?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that are cubical']\", \"FILTER['#1', 'that are non cubical']\", \"PROJECT['volume of #REF', '#2']\", \"PROJECT['volume of #REF', '#3']\", \"AGGREGATE['sum', '#4']\", \"AGGREGATE['sum', '#5']\", \"COMPARISON['max', '#6', '#7']\"]"}
{"id": "CLEVR_dev_832", "input": "is the smallestt item shown made from the same material as the object that is standing between two cubes?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are standing between two cubes']\", \"PROJECT['material of #REF', '#2']\", \"PROJECT['size of #REF', '#1']\", \"COMPARATIVE['#1', '#4', 'is the lowest']\", \"PROJECT['material of #REF', '#5']\", \"BOOLEAN['#6', 'is the same as #3']\"]"}
{"id": "CLEVR_dev_836", "input": "Which items are closest to the front?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that are closest to the front']\"]"}
{"id": "CLEVR_dev_839", "input": "Are the two green objects the same shape?", "output": "[\"SELECT['green objects']\", \"PROJECT['shapes of #REF', '#1']\", \"BOOLEAN['#2', 'both the same']\"]"}
{"id": "CLEVR_dev_840", "input": "how many shapes are metallic", "output": "[\"SELECT['shapes']\", \"FILTER['#1', 'that are metallic']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_843", "input": "How many sides does the cube have?", "output": "[\"SELECT['the cube']\", \"PROJECT['sides of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_844", "input": "what is the shape of the object that is obscuring another object", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is obscuring another one']\", \"PROJECT['shape of #REF', '#2']\"]"}
{"id": "CLEVR_dev_845", "input": "How many shapes are present?", "output": "[\"SELECT['shapes']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_85", "input": "What color is the biggest circular object?", "output": "[\"SELECT['circular objects']\", \"FILTER['#1', 'that is the biggest']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_851", "input": "Are any of the cubes identical?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that are identical']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at least two']\"]"}
{"id": "CLEVR_dev_852", "input": "What is the color of the smallestt item in the back?", "output": "[\"SELECT['smallestt item']\", \"FILTER['#1', 'that is in the back']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_854", "input": "Is the top of the purple box glossy or matte?", "output": "[\"SELECT['box']\", \"FILTER['#1', 'that is purple']\", \"PROJECT['top of #REF', '#2']\", \"BOOLEAN['#3', 'is glossy or matte']\"]"}
{"id": "CLEVR_dev_855", "input": "Is the object that is closest to the purple object of the same shape as the purple object?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that is purple']\", \"FILTER['#1', 'that is closest to #2']\", \"PROJECT['shape of #REF', '#2']\", \"PROJECT['shape of #REF', '#4']\", \"BOOLEAN['#4', 'equal to #5']\"]"}
{"id": "CLEVR_dev_857", "input": "How many of these objects can you stack up on each other?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that you can stack up on each other']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_858", "input": "are more than half of the shiny items shown also the same shape?", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that are shiny']\", \"PROJECT['shapes of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'are the same']\", \"DISCARD['#2', '#4']\", \"AGGREGATE['count', '#4']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is higher than #7']\"]"}
{"id": "CLEVR_dev_876", "input": "What color is the smallestt shape in the group?", "output": "[\"SELECT['shapes']\", \"PROJECT['size of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is the smallestt']\", \"PROJECT['the color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_877", "input": "What color is the two small circular shapes?", "output": "[\"SELECT['small circular shapes']\", \"PROJECT['color of #REF', '#1']\"]"}
{"id": "CLEVR_dev_878", "input": "How many flat surfaces do all of the objects have combined?", "output": "[\"SELECT['objects']\", \"PROJECT['flat surfaces of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"AGGREGATE['sum', '#3']\"]"}
{"id": "CLEVR_dev_881", "input": "How many matte objects are there in total?", "output": "[\"SELECT['matte objects']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_885", "input": "Are any of the cylinders matte?", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'that are matte']\", \"BOOLEAN['#2', 'are there any #REF']\"]"}
{"id": "CLEVR_dev_887", "input": "How many big spheres are green?", "output": "[\"SELECT['big spheres']\", \"FILTER['#1', 'that are green']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_888", "input": "What color object is partially hidden by the blue ball?", "output": "[\"SELECT['the blue ball']\", \"SELECT['objects']\", \"FILTER['#2', 'that are partially hidden by #1']\", \"PROJECT['the color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_896", "input": "What color is the object behind the big red cube?", "output": "[\"SELECT['the big red cube']\", \"PROJECT['the object behind of #REF', '#1']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_897", "input": "Is the tiny red object and the tiny silver object the same material?", "output": "[\"SELECT['tiny objects']\", \"FILTER['#1', 'that is red']\", \"FILTER['#1', 'that is silver']\", \"PROJECT['material of #REF', '#2']\", \"PROJECT['material of #REF', '#3']\", \"BOOLEAN['#4', 'is the same as #5']\"]"}
{"id": "CLEVR_dev_9", "input": "what color is the metallic cylinder in front of the silver cylinder?", "output": "[\"SELECT['the silver cylinder']\", \"SELECT['cylinders']\", \"FILTER['#2', 'that are metallic']\", \"FILTER['#3', 'that are in front of #1']\", \"PROJECT['the color of #REF', '#4']\"]"}
{"id": "CLEVR_dev_901", "input": "How many green objects are in the photo?", "output": "[\"SELECT['green objects']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_904", "input": "Are the matte cylinders bigger than the metallic cylinders?", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'that are matte']\", \"FILTER['#1', 'that are metallic']\", \"BOOLEAN['#2', 'are bigger than #3']\"]"}
{"id": "CLEVR_dev_91", "input": "is the yellow cube closer to the yellow cylinder than the purple sphere?", "output": "[\"SELECT['yellow cube']\", \"SELECT['yellow cylinder']\", \"SELECT['purple sphere']\", \"BOOLEAN['#1', 'closer to #2 than #3']\"]"}
{"id": "CLEVR_dev_910", "input": "Are the shapes all the same?", "output": "[\"SELECT['the shapes']\", \"BOOLEAN['#1', 'all the same']\"]"}
{"id": "CLEVR_dev_911", "input": "What color of objects is found here most often?", "output": "[\"SELECT['colors']\", \"PROJECT['objects of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"SUPERLATIVE['max', '#1', '#3']\"]"}
{"id": "CLEVR_dev_917", "input": "Which shape is closest to the camera?", "output": "[\"SELECT['objects']\", \"PROJECT['how close to the camera are #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is the lowest']\", \"PROJECT['shape of #REF', '#3']\"]"}
{"id": "CLEVR_dev_925", "input": "Are there more large shiny cylinders than small matte cylinders?", "output": "[\"SELECT['cylinders']\", \"FILTER['#1', 'that are large']\", \"FILTER['#1', 'that are small']\", \"FILTER['#2', 'that are shiny']\", \"FILTER['#3', 'that are matte']\", \"AGGREGATE['count', '#4']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is more than #7']\"]"}
{"id": "CLEVR_dev_927", "input": "What shape is the object that is both matte and small?", "output": "[\"SELECT['object']\", \"FILTER['#1', 'that is matte']\", \"FILTER['#2', 'that is small']\", \"PROJECT['shape of #REF', '#3']\"]"}
{"id": "CLEVR_dev_928", "input": "are the number of spheres the same as the number of cubes?", "output": "[\"SELECT['spheres']\", \"SELECT['cubes']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is the same as #4']\"]"}
{"id": "CLEVR_dev_929", "input": "What color is the object that is closest the the largest thing?", "output": "[\"SELECT['object']\", \"SELECT['largest thing']\", \"FILTER['#1', 'that is closest to #2']\", \"PROJECT['color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_93", "input": "Is that a circle next to the brown box?", "output": "[\"SELECT['circle']\", \"SELECT['brown box']\", \"FILTER['#1', 'next to #2']\", \"BOOLEAN['#3', 'Is there any #REF']\"]"}
{"id": "CLEVR_dev_936", "input": "Are any of the purple objects shiny?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are purple']\", \"FILTER['#2', 'that are shiny']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least one']\"]"}
{"id": "CLEVR_dev_94", "input": "How many different colors of shapes are there?", "output": "[\"SELECT['shapes']\", \"PROJECT['colors of #REF', '#1']\", \"PROJECT['different #REF', '#2']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_940", "input": "What object is in the rear?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'in the rear']\"]"}
{"id": "CLEVR_dev_941", "input": "What color cube is behind the largest ball?", "output": "[\"SELECT['cube']\", \"SELECT['largest ball']\", \"FILTER['#1', 'behind #2']\", \"PROJECT['color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_946", "input": "What color is the smallestt object in this photo?", "output": "[\"SELECT['object']\", \"FILTER['#1', 'that is the smallestt']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "CLEVR_dev_950", "input": "what is behind the matte cube but in front of the metallic cube?", "output": "[\"SELECT['cubes']\", \"FILTER['#1', 'that are matte']\", \"FILTER['#1', 'that are metallic']\", \"PROJECT['what is behind #REF', '#2']\", \"FILTER['#4', 'that is in front of #3']\"]"}
{"id": "CLEVR_dev_957", "input": "Are there more shiny gold objects than yellow objects?", "output": "[\"SELECT['shiny gold objects']\", \"SELECT['yellow objects']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'higher than #4']\"]"}
{"id": "CLEVR_dev_964", "input": "How many of the big things are the same color?", "output": "[\"SELECT['big things']\", \"FILTER['#1', 'that are the same color']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_97", "input": "What color is the center object?", "output": "[\"SELECT['center object']\", \"PROJECT['color of #REF', '#1']\"]"}
{"id": "CLEVR_dev_972", "input": "What number of objects are blue?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are blue']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "CLEVR_dev_973", "input": "How many objects are in the shape of a cube?", "output": "[\"SELECT['objects']\", \"PROJECT['shape of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is a cube']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "CLEVR_dev_974", "input": "what color is the mostly occluded object, behind the tall, gray cylinder? ", "output": "[\"SELECT['the tall , gray cylinder']\", \"PROJECT['objects behind #REF', '#1']\", \"FILTER['#2', 'that are mostly occluded']\", \"PROJECT['color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_975", "input": "How many red balls do you see?", "output": "[\"SELECT['red balls']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "CLEVR_dev_98", "input": "What material is the large yellow sphere made out of?", "output": "[\"SELECT['large sphere']\", \"FILTER['#1', 'that is yellow']\", \"PROJECT['material of #REF', '#2']\"]"}
{"id": "CLEVR_dev_980", "input": "Is the shape to the left of the yellow object the same shape as the yellow object?", "output": "[\"SELECT['the yellow object']\", \"PROJECT['object to the left of #REF', '#1']\", \"PROJECT['shape of #REF', '#1']\", \"PROJECT['shape of #REF', '#2']\", \"BOOLEAN['#3', 'is the same as #4']\"]"}
{"id": "CLEVR_dev_988", "input": "What color is the object obscured by the red ball?", "output": "[\"SELECT['object']\", \"SELECT['red ball']\", \"FILTER['#1', 'obscured by #2']\", \"PROJECT['color of #REF', '#3']\"]"}
{"id": "CLEVR_dev_990", "input": "How many objects share the same color as the object that does not share a shape with any other object?", "output": "[\"SELECT['objects']\", \"PROJECT['shapes of #REF', '#1']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is equal to one']\", \"COMPARATIVE['#1', '#2', 'is the same as #4']\", \"DISCARD['#1', '#5']\", \"PROJECT['color of #REF', '#5']\", \"PROJECT['colors of #REF', '#6']\", \"COMPARATIVE['#6', '#8', 'is the same as #7']\", \"AGGREGATE['count', '#9']\"]"}
{"id": "CLEVR_dev_991", "input": "What shape are the two not shiny objects?", "output": "[\"SELECT['objects']\", \"FILTER['#1', 'that are shiny']\", \"DISCARD['#1', '#2']\", \"PROJECT['shape of two #REF', '#3']\"]"}
{"id": "CLEVR_dev_993", "input": "What shape is in the photo?", "output": "[\"SELECT['shape']\"]"}
{"id": "CLEVR_dev_995", "input": "Are there any small matte cylinders that are of the same color as the large cube that is behind the purple matte cylinder?", "output": "[\"SELECT['cube']\", \"FILTER['#1', 'that is large']\", \"SELECT['cylinder']\", \"FILTER['#3', 'that is purple']\", \"FILTER['#4', 'that is matte']\", \"FILTER['#2', 'behind #5']\", \"PROJECT['color of #REF', '#6']\", \"FILTER['#3', 'that is matte']\", \"FILTER['#8', 'that is small']\", \"PROJECT['color of #REF', '#9']\", \"COMPARATIVE['#9', '#10', 'is same as #7']\", \"AGGREGATE['count', '#11']\", \"BOOLEAN['#12', 'is more than zero']\"]"}
{"id": "CLEVR_dev_999", "input": "what is the color of the only block that is not matte?", "output": "[\"SELECT['blocks']\", \"FILTER['#1', 'that is not matte']\", \"PROJECT['color of #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-1005-1", "input": "when did chris bention die?", "output": "[\"SELECT['chris bention die']\", \"PROJECT['date of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-1007-1", "input": "what is the population of india 2011?", "output": "[\"SELECT['india']\", \"PROJECT['population of #REF', '#1']\", \"FILTER['#2', 'in 2011']\"]"}
{"id": "COMQA_dev_cluster-1007-2", "input": "population of india in 2011?", "output": "[\"SELECT['india']\", \"PROJECT['population of #REF', '#1']\", \"FILTER['#2', 'in 2011']\"]"}
{"id": "COMQA_dev_cluster-1007-3", "input": "what is the population of india in 2011?", "output": "[\"SELECT['india']\", \"PROJECT['population of #REF', '#1']\", \"FILTER['#2', 'in 2011']\"]"}
{"id": "COMQA_dev_cluster-1013-1", "input": "who was the second indian women climbed mount everest?", "output": "[\"SELECT['mount everest']\", \"PROJECT['women who climbed #REF', '#1']\", \"FILTER['#2', 'that are indian']\", \"PROJECT['second of #REF', '#3']\"]"}
{"id": "COMQA_dev_cluster-1016-1", "input": "the highest point of kansa's elevation?", "output": "[\"SELECT['kansas']\", \"PROJECT['points of #REF', '#1']\", \"PROJECT['elevation of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is the highest']\"]"}
{"id": "COMQA_dev_cluster-1018-1", "input": "what instruments do antonio vivaldi play?", "output": "[\"SELECT['antonio vivaldi']\", \"PROJECT['instruments that #REF did play', '#1']\"]"}
{"id": "COMQA_dev_cluster-1023-1", "input": "who wrote the book brown bear brown bear what did you see?", "output": "[\"SELECT['books']\", \"FILTER['#1', 'that is brown bear brown bear what did you see']\", \"PROJECT['who wrote #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-1025-1", "input": "who is the present chief justice of supreme court?", "output": "[\"SELECT['supreme court']\", \"PROJECT['chief justice of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-1029-1", "input": "who did john edwards marry?", "output": "[\"SELECT['john edwards']\", \"PROJECT['who did #REF marry', '#1']\"]"}
{"id": "COMQA_dev_cluster-1034-1", "input": "name the senators from louisisana?", "output": "[\"SELECT['louisisana']\", \"PROJECT['senators of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-1034-2", "input": "who are the senators representing louisiana?", "output": "[\"SELECT['louisiana']\", \"PROJECT['senators of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-1036-1", "input": "what band did steve winwood sing for?", "output": "[\"SELECT['steve winwood']\", \"PROJECT['for what band did #REF sing', '#1']\"]"}
{"id": "COMQA_dev_cluster-1038-1", "input": "when did jean armour and robert burns get married?", "output": "[\"SELECT['jean armour and robert burns get married']\", \"PROJECT['date of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-1039-1", "input": "who was the first person to develop the theory of evolution?", "output": "[\"SELECT['the theory of evolution']\", \"PROJECT['people who develop #REF', '#1']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "COMQA_dev_cluster-104-1", "input": "what political party did abraham lincoln represent in 1860?", "output": "[\"SELECT['abraham lincoln']\", \"PROJECT['political party of #REF', '#1']\", \"FILTER['#2', 'in 1860']\"]"}
{"id": "COMQA_dev_cluster-104-2", "input": "what party supported abraham lincoln in 1860?", "output": "[\"SELECT['abraham lincoln']\", \"PROJECT['party that supported #REF', '#1']\", \"FILTER['#2', 'in 1860']\"]"}
{"id": "COMQA_dev_cluster-1047-1", "input": "who was the first black woman to win a nobel prize in 1993 in literature?", "output": "[\"SELECT['the nobel prize in literature']\", \"PROJECT['who win #REF', '#1']\", \"FILTER['#2', 'in 1993']\", \"FILTER['#3', 'that was black']\", \"FILTER['#4', 'that was a woman']\"]"}
{"id": "COMQA_dev_cluster-1048-1", "input": "when did desi arnaz die?", "output": "[\"SELECT['desi arnaz']\", \"PROJECT['when did #REF die', '#1']\"]"}
{"id": "COMQA_dev_cluster-1051-1", "input": "when was michael jackson first hit?", "output": "[\"SELECT['michael jackson']\", \"PROJECT['hits of #REF', '#1']\", \"PROJECT['date of #REF', '#2']\", \"AGGREGATE['min', '#3']\"]"}
{"id": "COMQA_dev_cluster-1055-1", "input": "what is the language in burkina faso?", "output": "[\"SELECT['burkina faso']\", \"PROJECT['language of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-1057-1", "input": "what year did the first setters arrive in australia?", "output": "[\"SELECT['australia']\", \"SELECT['setters']\", \"FILTER['#2', 'that arrive in #1']\", \"AGGREGATE['min', '#3']\", \"PROJECT['when was #REF', '#4']\", \"PROJECT['the year of #REF', '#5']\"]"}
{"id": "COMQA_dev_cluster-1061-1", "input": "what jay-z's newest album?", "output": "[\"SELECT['jay-z']\", \"PROJECT['albums of #REF', '#1']\", \"FILTER['#2', 'that is the newest']\"]"}
{"id": "COMQA_dev_cluster-1065-1", "input": "what is the population of cobb county georgia?", "output": "[\"SELECT['cobb county georgia']\", \"PROJECT['population of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-109-1", "input": "who was nelson mandela first wife?", "output": "[\"SELECT['nelson mandela']\", \"PROJECT['wives of #REF', '#1']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "COMQA_dev_cluster-1093-1", "input": "what was the title of philip pullmans first book?", "output": "[\"SELECT['philip pullman']\", \"PROJECT['books of #REF', '#1']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "COMQA_dev_cluster-1097-1", "input": "prime minister who took command during the battle of britain?", "output": "[\"SELECT['the battle of britain']\", \"SELECT['prime ministers']\", \"FILTER['#2', 'that took command during #1']\"]"}
{"id": "COMQA_dev_cluster-1097-2", "input": "british prime minister during the battle of britain?", "output": "[\"SELECT['battle of britain']\", \"SELECT['britain']\", \"PROJECT['prime minister of #REF', '#2']\", \"FILTER['#3', 'in #1']\"]"}
{"id": "COMQA_dev_cluster-1104-1", "input": "which mountain peak is the tallest in the united state and which of the 50 states is it located?", "output": "[\"SELECT['united states']\", \"PROJECT['mountain peaks of #REF', '#1']\", \"PROJECT['height of #REF', '#2']\", \"SUPERLATIVE['max', '#2', '#3']\", \"PROJECT['state of #REF', '#4']\", \"UNION['#4', '#5']\"]"}
{"id": "COMQA_dev_cluster-111-1", "input": "what type of instruments does cody simpson play?", "output": "[\"SELECT['cody simpson']\", \"PROJECT['instruments that #REF plays', '#1']\", \"PROJECT['what type of instruments are #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-1113-1", "input": "what year did martin luther king receive his doctorate degree from boston university?", "output": "[\"SELECT['martin luther king receive his doctorate degree from boston university']\", \"PROJECT['year of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-1117-1", "input": "who is adobe ceo?", "output": "[\"SELECT['adobe']\", \"PROJECT['the ceo of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-1128-1", "input": "when did wylie drapers die?", "output": "[\"SELECT['wylie drapers']\", \"PROJECT['when did #REF die', '#1']\"]"}
{"id": "COMQA_dev_cluster-1130-1", "input": "what was the name of ben franklin wifes name?", "output": "[\"SELECT['ben franklin']\", \"PROJECT['wifes of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-1133-1", "input": "what country is on the north of china and separates it from russia?", "output": "[\"SELECT['countries']\", \"SELECT['china']\", \"FILTER['#1', 'that is north of #2']\", \"SELECT['russia']\", \"FILTER['#3', 'that separates #2 from #4']\"]"}
{"id": "COMQA_dev_cluster-1137-1", "input": "where was george lopez born?", "output": "[\"SELECT['george lopez']\", \"PROJECT['where was #REF born', '#1']\"]"}
{"id": "COMQA_dev_cluster-1138-1", "input": "what are the major cities of bahrain?", "output": "[\"SELECT['bahrain']\", \"PROJECT['the major cities of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-1145-1", "input": "what country is bordered by colmbia in the north and peru in the south?", "output": "[\"SELECT['country']\", \"SELECT['colmbia']\", \"SELECT['peru']\", \"FILTER['#1', 'that is bordered in the north by #2']\", \"FILTER['#1', 'that is bordered in the south by #3']\", \"INTERSECTION['#1', '#4', '#5']\"]"}
{"id": "COMQA_dev_cluster-1147-1", "input": "who did holly marie combs marry?", "output": "[\"SELECT['holly marie combs']\", \"PROJECT['who marries #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-1154-1", "input": "what is edgar allan poe's cousin that he married name?", "output": "[\"SELECT['edgar allan poe']\", \"PROJECT['cousin of #REF', '#1']\", \"FILTER['#2', 'that he married']\", \"PROJECT['name of #REF', '#3']\"]"}
{"id": "COMQA_dev_cluster-1157-1", "input": "what is jason derulo's culture?", "output": "[\"SELECT['jason derulo']\", \"PROJECT['culture of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-1158-1", "input": "georgia currently has how many state senators?", "output": "[\"SELECT['georgia']\", \"PROJECT['state senators of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "COMQA_dev_cluster-116-1", "input": "what years did micky mantle play for the yankees?", "output": "[\"SELECT['micky mantle did play for the yankees']\", \"PROJECT['years of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-1163-1", "input": "which country is bujmbura in?", "output": "[\"SELECT['bujmbura']\", \"PROJECT['country of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-1171-1", "input": "what major rivers cuts through egypt?", "output": "[\"SELECT['major rivers']\", \"SELECT['egypt']\", \"FILTER['#1', 'that cuts through #2']\"]"}
{"id": "COMQA_dev_cluster-1171-2", "input": "what major river runs through eygpt?", "output": "[\"SELECT['eygpt']\", \"PROJECT['major river of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-1173-1", "input": "who was chris benoits wife?", "output": "[\"SELECT['chris benoit']\", \"PROJECT['wife of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-1173-2", "input": "what was chris benoit wife name?", "output": "[\"SELECT['chris benoit']\", \"PROJECT['wife of #REF', '#1']\", \"PROJECT['name of #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-1180-1", "input": "who was penelope and odysseus' son?", "output": "[\"SELECT['penelope']\", \"SELECT['odysseus']\", \"SELECT['son']\", \"INTERSECTION['#3', '#1', '#2']\"]"}
{"id": "COMQA_dev_cluster-1180-2", "input": "who was odysseus and penelope's son?", "output": "[\"SELECT['odysseus']\", \"SELECT['penelope']\", \"SELECT['son']\", \"INTERSECTION['#3', '#1', '#2']\"]"}
{"id": "COMQA_dev_cluster-118-1", "input": "who was the sculptor that created the merlion in singapore?", "output": "[\"SELECT['singapore']\", \"PROJECT['merlion of #REF', '#1']\", \"PROJECT['sculptor that created #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-1183-1", "input": "what is the capital city of venezuela?", "output": "[\"SELECT['venezuela']\", \"PROJECT['the capital city of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-1189-1", "input": "what was jim carrey's first film?", "output": "[\"SELECT['jim carrey']\", \"PROJECT['films of #REF', '#1']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "COMQA_dev_cluster-1196-1", "input": "when did kobe bryant win his first mvp?", "output": "[\"SELECT['kobe bryant']\", \"PROJECT['mvps #REF did win', '#1']\", \"PROJECT['when was #REF', '#2']\", \"AGGREGATE['min', '#3']\"]"}
{"id": "COMQA_dev_cluster-120-2", "input": "what age did alexander graham ball die at?", "output": "[\"SELECT['alexander graham ball']\", \"PROJECT['at what age did #REF die', '#1']\"]"}
{"id": "COMQA_dev_cluster-1202-1", "input": "who was the first african american mlb player in the world?", "output": "[\"SELECT['mlb players']\", \"FILTER['#1', 'that are african american']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "COMQA_dev_cluster-1206-1", "input": "when was the 17th amendment passed?", "output": "[\"SELECT['amendments']\", \"PROJECT['17th of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-1206-2", "input": "what year was 17th amendment passed?", "output": "[\"SELECT['17th amendment']\", \"PROJECT['year that #REF passed', '#1']\"]"}
{"id": "COMQA_dev_cluster-1212-1", "input": "what are england's three biggest cities?", "output": "[\"SELECT['england']\", \"PROJECT['cities of #REF', '#1']\", \"PROJECT['size of #REF', '#2']\", \"AGGREGATE['max', '#3']\", \"COMPARATIVE['#2', '#3', 'is in #4']\"]"}
{"id": "COMQA_dev_cluster-1229-1", "input": "where is drew seeley from?", "output": "[\"SELECT['drew seeley']\", \"PROJECT['where is #REF from', '#1']\"]"}
{"id": "COMQA_dev_cluster-1232-1", "input": "who replaced nikita khrushchev as general secretary of the soviet union?", "output": "[\"SELECT['the soviet union']\", \"PROJECT['general secretary of #REF', '#1']\", \"SELECT['nikita khrushchev']\", \"FILTER['#2', 'that replaced #3']\"]"}
{"id": "COMQA_dev_cluster-1232-2", "input": "who replaced nikita khrushchev general secretary of soviet union?", "output": "[\"SELECT['the soviet union']\", \"PROJECT['general secretary of #REF', '#1']\", \"SELECT['nikita khrushchev']\", \"FILTER['#2', 'that replaced #3']\"]"}
{"id": "COMQA_dev_cluster-1234-1", "input": "who was the highest goal scorer in the 2002 world cup?", "output": "[\"SELECT['the world cup']\", \"FILTER['#1', 'in 2002']\", \"PROJECT['goals of #REF', '#2']\", \"PROJECT['scorers of #REF', '#3']\", \"GROUP['count', '#3', '#4']\", \"COMPARATIVE['#4', '#5', 'is the highest']\"]"}
{"id": "COMQA_dev_cluster-1238-1", "input": "who is the first president winner in india?", "output": "[\"SELECT['india']\", \"PROJECT['president winners of #REF', '#1']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "COMQA_dev_cluster-1238-2", "input": "who is the first president of republic of india?", "output": "[\"SELECT['the republic of india']\", \"PROJECT['presidents of #REF', '#1']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "COMQA_dev_cluster-1248-1", "input": "where did the president william taft go to college?", "output": "[\"SELECT['president william taft']\", \"PROJECT['college of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-1248-2", "input": "where did william howard taft go to college?", "output": "[\"SELECT['william howard taft']\", \"PROJECT['college of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-125-1", "input": "what is michael jackson's oldest son name?", "output": "[\"SELECT['michael jackson']\", \"PROJECT['sons of #REF', '#1']\", \"FILTER['#2', 'that is oldest']\", \"PROJECT['name of #REF', '#3']\"]"}
{"id": "COMQA_dev_cluster-1251-2", "input": "what awards and honours did john steinbeck receive?", "output": "[\"SELECT['john steinbeck']\", \"PROJECT['awards of #REF', '#1']\", \"PROJECT['honours of #REF', '#1']\", \"UNION['#2', '#3']\"]"}
{"id": "COMQA_dev_cluster-1255-1", "input": "who did chris perez marry after selena quintanilla died?", "output": "[\"SELECT['chris perez']\", \"SELECT['selena quintanilla']\", \"PROJECT['who did #REF marry', '#1']\", \"FILTER['#3', 'after #2']\"]"}
{"id": "COMQA_dev_cluster-1259-1", "input": "what is the airport in sydney australia called?", "output": "[\"SELECT['sydney australia']\", \"PROJECT['airport of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-1259-2", "input": "what is the name of the airport in sydney australia?", "output": "[\"SELECT['sydney australia']\", \"PROJECT['airport of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-1263-1", "input": "what is a country in africa that borders sedan and kenya?", "output": "[\"SELECT['sedan']\", \"SELECT['kenya']\", \"SELECT['border country']\", \"INTERSECTION['#3', '#1', '#2']\"]"}
{"id": "COMQA_dev_cluster-1263-2", "input": "what country in africa that borders sudan and kenya?", "output": "[\"SELECT['africa']\", \"PROJECT['countries of #REF', '#1']\", \"FILTER['#2', 'that borders sudan']\", \"FILTER['#2', 'that borders kenya']\", \"SELECT['country']\", \"INTERSECTION['#5', '#3', '#4']\"]"}
{"id": "COMQA_dev_cluster-1269-1", "input": "who is the first minister of scotland?", "output": "[\"SELECT['scotland']\", \"PROJECT['ministers of #REF', '#1']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "COMQA_dev_cluster-1269-2", "input": "name of the current first minister of scotland?", "output": "[\"SELECT['scotland']\", \"PROJECT['current first minister of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-1280-1", "input": "who does the voice of carl on phineas and ferb?", "output": "[\"SELECT['phineas and ferb']\", \"PROJECT['carl of #REF', '#1']\", \"PROJECT['who does the voice of #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-1282-1", "input": "when did william webb ellis die?", "output": "[\"SELECT['william webb ellis']\", \"PROJECT['when did #REF die', '#1']\"]"}
{"id": "COMQA_dev_cluster-1285-1", "input": "who are sarah palins mom and dad?", "output": "[\"SELECT['sarah palin']\", \"PROJECT['mom of #REF', '#1']\", \"PROJECT['dad of #REF', '#1']\", \"UNION['#2', '#3']\"]"}
{"id": "COMQA_dev_cluster-1286-1", "input": "who plays marty from life with derek?", "output": "[\"SELECT['life with derek']\", \"PROJECT['marty of #REF', '#1']\", \"PROJECT['who plays #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-1286-2", "input": "who plays marty on life with derek?", "output": "[\"SELECT['life with derek']\", \"PROJECT['marty of #REF', '#1']\", \"PROJECT['who plays #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-1287-1", "input": "which city is the louisiana university in?", "output": "[\"SELECT['louisiana university']\", \"PROJECT['city of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-1288-1", "input": "who plays as jake ryan in hannah montana?", "output": "[\"SELECT['hannah montana']\", \"PROJECT['jake ryan in #REF', '#1']\", \"PROJECT['who plays as #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-1288-2", "input": "who plays jake ryan in hannah montana?", "output": "[\"SELECT['hannah montana']\", \"PROJECT['jake ryan of #REF', '#1']\", \"PROJECT['who plays #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-1289-1", "input": "what state did crispus attucks die in?", "output": "[\"SELECT['crispus attucks']\", \"PROJECT['state die in of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-1305-1", "input": "from where did dr ben carson graduate?", "output": "[\"SELECT['dr ben carson']\", \"PROJECT['where did #REF graduate from', '#1']\"]"}
{"id": "COMQA_dev_cluster-1313-1", "input": "which lake borders ohio pennsylvania and new york?", "output": "[\"SELECT['lake']\", \"FILTER['#1', 'that borders ohio']\", \"FILTER['#1', 'that borders pennsylvania']\", \"FILTER['#1', 'that borders new york']\", \"INTERSECTION['#1', '#2', '#3']\", \"INTERSECTION['#1', '#4', '#5']\"]"}
{"id": "COMQA_dev_cluster-1321-1", "input": "when was tony romo first year to play for the cowboys?", "output": "[\"SELECT['tony romo play for the cowboys']\", \"PROJECT['years of #REF', '#1']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "COMQA_dev_cluster-1323-1", "input": "whose mariah carey's husband?", "output": "[\"SELECT['mariah carey']\", \"PROJECT['husband of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-1324-1", "input": "what movie did bryan singer direct patrick stewart and halle berry?", "output": "[\"SELECT['patrick stewart']\", \"SELECT['halle berry']\", \"SELECT['movies']\", \"INTERSECTION['#3', '#1', '#2']\", \"PROJECT['who direct #REF', '#4']\", \"COMPARATIVE['#4', '#5', 'is bryan singer']\"]"}
{"id": "COMQA_dev_cluster-1325-1", "input": "first female athlete on wheatis box?", "output": "[\"SELECT['wheatis box']\", \"PROJECT['athletes on #REF', '#1']\", \"FILTER['#2', 'that are female']\", \"AGGREGATE['min', '#3']\"]"}
{"id": "COMQA_dev_cluster-1330-1", "input": "what is the neighbouring states for south carolina?", "output": "[\"SELECT['south carolina']\", \"PROJECT['neighbouring states of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-1336-1", "input": "who was the dominican republic first president?", "output": "[\"SELECT['the dominican republic']\", \"PROJECT['presidents of #REF', '#1']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "COMQA_dev_cluster-1337-1", "input": "what were leonardo da vinci's art styles?", "output": "[\"SELECT['leonardo da vinci']\", \"PROJECT['art styles of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-1337-2", "input": "what art style did leonardo da vinci do?", "output": "[\"SELECT['leonardo da vinci']\", \"PROJECT['art of #REF', '#1']\", \"PROJECT['style of #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-1338-1", "input": "what was the names of mariah carey twins?", "output": "[\"SELECT['mariah carey']\", \"PROJECT['twins of #REF', '#1']\", \"PROJECT['names of #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-1338-2", "input": "what didmariah carey name her twins?", "output": "[\"SELECT['didmariah carey']\", \"PROJECT['twins of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-1342-1", "input": "second women to climb mount everest?", "output": "[\"SELECT['mount everest']\", \"PROJECT['women to climb #REF', '#1']\", \"PROJECT['second of #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-1346-1", "input": "what did emily bronte die of?", "output": "[\"SELECT['emily bronte']\", \"PROJECT['how did #REF die', '#1']\"]"}
{"id": "COMQA_dev_cluster-1350-1", "input": "who is prime minister of canada and what party does he belong to?", "output": "[\"SELECT['canada']\", \"PROJECT['prime minister of #REF', '#1']\", \"PROJECT['party of #REF', '#2']\", \"UNION['#2', '#3']\"]"}
{"id": "COMQA_dev_cluster-1350-2", "input": "what is the prime minister of canada and what is his party?", "output": "[\"SELECT['canada']\", \"PROJECT['the prime minister of #REF', '#1']\", \"PROJECT['party of #REF', '#2']\", \"UNION['#2', '#3']\"]"}
{"id": "COMQA_dev_cluster-135-1", "input": "what does estonia speak?", "output": "[\"SELECT['estonia']\", \"PROJECT['what does #REF speak', '#1']\"]"}
{"id": "COMQA_dev_cluster-1359-2", "input": "when did berlie dorhety write street child?", "output": "[\"SELECT['berlie dorhety write street child']\", \"PROJECT['date of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-1374-1", "input": "which mountain range separates europe from asia?", "output": "[\"SELECT['mountain range']\", \"SELECT['europe']\", \"SELECT['asia']\", \"FILTER['#1', 'that separates #2 from #3']\"]"}
{"id": "COMQA_dev_cluster-1375-1", "input": "where did larry bird coach?", "output": "[\"SELECT['larry bird']\", \"PROJECT['where did #REF coach', '#1']\"]"}
{"id": "COMQA_dev_cluster-1379-1", "input": "in drake and josh who played mindy crenshaw?", "output": "[\"SELECT['drake and josh']\", \"PROJECT['mindy crenshaw of #REF', '#1']\", \"PROJECT['who played #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-1386-1", "input": "who was the first manager for liverpool fc?", "output": "[\"SELECT['liverpool fc']\", \"PROJECT['managers of #REF', '#1']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "COMQA_dev_cluster-139-1", "input": "what is the country that borders colombia and costa rica?", "output": "[\"SELECT['colombia']\", \"SELECT['costa rica']\", \"SELECT['border country']\", \"INTERSECTION['#3', '#1', '#2']\"]"}
{"id": "COMQA_dev_cluster-1408-1", "input": "where did brandon marshall go to college?", "output": "[\"SELECT['brandon marshall']\", \"PROJECT['college of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-14-1", "input": "who won the popular vote in 2000 presidential election?", "output": "[\"SELECT['presidential election']\", \"FILTER['#1', 'in 2000']\", \"PROJECT['popular vote of #REF', '#2']\", \"PROJECT['who won #REF', '#3']\"]"}
{"id": "COMQA_dev_cluster-1410-1", "input": "what are shaquilles kids names?", "output": "[\"SELECT['shaquilles']\", \"PROJECT['kids of #REF', '#1']\", \"PROJECT['names of #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-141-1", "input": "what is the highest elevation of massachusetts?", "output": "[\"SELECT['massachusetts']\", \"PROJECT['elevations of #REF', '#1']\", \"AGGREGATE['max', '#2']\"]"}
{"id": "COMQA_dev_cluster-142-1", "input": "terms of woodward wilson?", "output": "[\"SELECT['woodward wilson']\", \"PROJECT['terms of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-1428-1", "input": "the amazon river in south america flows in what direction?", "output": "[\"SELECT['south america']\", \"PROJECT['amazon river of #REF', '#1']\", \"PROJECT['direction of flow of #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-1432-1", "input": "what musicians have died in 2007?", "output": "[\"SELECT['musicians']\", \"FILTER['#1', 'that died in 2007']\"]"}
{"id": "COMQA_dev_cluster-144-1", "input": "who did frank sinatra marry?", "output": "[\"SELECT['frank sinatra']\", \"PROJECT['who did #REF marry', '#1']\"]"}
{"id": "COMQA_dev_cluster-1441-1", "input": "where did nadia comaneci go to elementary school?", "output": "[\"SELECT['nadia comaneci']\", \"PROJECT['elementary school of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-1446-1", "input": "population of students at yale university?", "output": "[\"SELECT['yale university']\", \"PROJECT['students of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "COMQA_dev_cluster-1446-2", "input": "what is the students population at yale university?", "output": "[\"SELECT['yale university']\", \"PROJECT['student population of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-1448-1", "input": "who was liz talyor's second husband?", "output": "[\"SELECT['liz talyor']\", \"PROJECT['husbands of #REF', '#1']\", \"PROJECT['the second of #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-1454-1", "input": "when did emily dickinsons father die?", "output": "[\"SELECT['emily dickinson']\", \"PROJECT['father of #REF', '#1']\", \"PROJECT['when did #REF die', '#2']\"]"}
{"id": "COMQA_dev_cluster-1459-1", "input": "what is only country to border portugal?", "output": "[\"SELECT['portugal']\", \"SELECT['countries']\", \"FILTER['#2', 'that border #1']\"]"}
{"id": "COMQA_dev_cluster-1492-1", "input": "what is the zip code of san francisco ca?", "output": "[\"SELECT['san francisco ca']\", \"PROJECT['zip code of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-1504-1", "input": "what is the biggest mountain?", "output": "[\"SELECT['mountains']\", \"PROJECT['biggest of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-1506-1", "input": "when did ww1 take place?", "output": "[\"SELECT['ww1']\", \"PROJECT['when did #REF take place', '#1']\"]"}
{"id": "COMQA_dev_cluster-1509-1", "input": "who were first people to land on moon?", "output": "[\"SELECT['people']\", \"SELECT['the moon']\", \"FILTER['#1', 'that did land on #2']\", \"AGGREGATE['min', '#3']\"]"}
{"id": "COMQA_dev_cluster-1514-1", "input": "name two countries that border china on the northeast?", "output": "[\"SELECT['countries']\", \"SELECT['china']\", \"FILTER['#1', 'that border #2']\", \"FILTER['#3', 'that are northeast of #2']\", \"PROJECT['two of #REF', '#4']\"]"}
{"id": "COMQA_dev_cluster-1514-2", "input": "what countries border china on the northeast?", "output": "[\"SELECT['china']\", \"PROJECT['border countries of #REF', '#1']\", \"FILTER['#2', 'on the northeast']\"]"}
{"id": "COMQA_dev_cluster-1515-1", "input": "what was the second song taylor swift wrote?", "output": "[\"SELECT['taylor swift']\", \"PROJECT['songs that #REF wrote', '#1']\", \"PROJECT['second of #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-1515-2", "input": "what was taylor swifts second song?", "output": "[\"SELECT['taylor swifts']\", \"PROJECT['songs of #REF', '#1']\", \"FILTER['#2', 'that was second']\"]"}
{"id": "COMQA_dev_cluster-1517-1", "input": "when was st maria goretti born?", "output": "[\"SELECT['st maria goretti was born']\", \"PROJECT['date of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-1518-1", "input": "which country borders the gulf of california?", "output": "[\"SELECT['gulf of california']\", \"PROJECT['country that borders #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-1526-1", "input": "who played shirley on the show shirley?", "output": "[\"SELECT['the show shirley']\", \"PROJECT['shirley of #REF', '#1']\", \"PROJECT['who played #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-1529-1", "input": "what position does rooney play for england football team?", "output": "[\"SELECT['rooney']\", \"PROJECT['position of #REF', '#1']\", \"FILTER['#2', 'for the england football team']\"]"}
{"id": "COMQA_dev_cluster-1544-1", "input": "what river forms part of the border between texas and oklahoma?", "output": "[\"SELECT['river']\", \"SELECT['texas']\", \"SELECT['oklahoma']\", \"SELECT['the border']\", \"INTERSECTION['#4', '#2', '#3']\", \"FILTER['#1', 'that forms part of #5']\"]"}
{"id": "COMQA_dev_cluster-1549-1", "input": "what is the postal code for surulere in nigeria?", "output": "[\"SELECT['surulere nigeria']\", \"PROJECT['postal code of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-1562-1", "input": "what continents are in both eastern and southern hemisphere?", "output": "[\"SELECT['the eastern hemisphere']\", \"SELECT['the southern hemisphere']\", \"SELECT['continents']\", \"INTERSECTION['#3', '#1', '#2']\"]"}
{"id": "COMQA_dev_cluster-1565-1", "input": "where is the religion of islam start?", "output": "[\"SELECT['religion of islam']\", \"PROJECT['where #REF did start', '#1']\"]"}
{"id": "COMQA_dev_cluster-1576-1", "input": "what is the name of the sea separating denmark and sweden?", "output": "[\"SELECT['sea']\", \"SELECT['denmark']\", \"SELECT['sweden']\", \"FILTER['#1', 'that is separating #2 from #3']\"]"}
{"id": "COMQA_dev_cluster-1580-1", "input": "what song was given the grammy award for best song of 1988?", "output": "[\"SELECT['the grammy award for best song of 1988']\", \"PROJECT['song that #REF was given', '#1']\"]"}
{"id": "COMQA_dev_cluster-1583-1", "input": "what was george w bush's political career before he was president?", "output": "[\"SELECT['george w bush']\", \"PROJECT['political career of #REF', '#1']\", \"FILTER['#2', 'that was before president']\"]"}
{"id": "COMQA_dev_cluster-1585-1", "input": "what song did india arie perform on the bernie mac show?", "output": "[\"SELECT['india arie']\", \"PROJECT['song that #REF performs', '#1']\", \"FILTER['#2', 'on the bernie mac show']\"]"}
{"id": "COMQA_dev_cluster-1588-1", "input": "who led the american nation during the great depression?", "output": "[\"SELECT['the american nation']\", \"PROJECT['who led #REF', '#1']\", \"FILTER['#2', 'during the great depression']\"]"}
{"id": "COMQA_dev_cluster-1591-1", "input": "what makes michaelv jackson interested in music?", "output": "[\"SELECT['michaelv jackson']\", \"PROJECT['what makes #REF interested in music', '#1']\"]"}
{"id": "COMQA_dev_cluster-1593-1", "input": "when did henry 8th marry cathrin of aragon?", "output": "[\"SELECT['henry the 8th did marry cathrin of aragon']\", \"PROJECT['when was #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-1594-1", "input": "this movie included denzel washington morgan freeman cary elwes and matthew broderick?", "output": "[\"SELECT['denzel washington']\", \"SELECT['morgan freeman']\", \"SELECT['cary elwes']\", \"SELECT['matthew broderick']\", \"SELECT['movies']\", \"INTERSECTION['#5', '#1', '#2']\", \"SELECT['movies']\", \"INTERSECTION['#7', '#3', '#4']\", \"SELECT['movies']\", \"INTERSECTION['#9', '#6', '#8']\"]"}
{"id": "COMQA_dev_cluster-1594-2", "input": "what movie did denzel washington and morgan freeman star together in?", "output": "[\"SELECT['denzel washington']\", \"SELECT['morgan freeman']\", \"PROJECT['movies of #REF', '#1']\", \"PROJECT['movies of #REF', '#2']\", \"SELECT['movie']\", \"INTERSECTION['#5', '#3', '#4']\"]"}
{"id": "COMQA_dev_cluster-1597-1", "input": "explain the origin of indus river?", "output": "[\"SELECT['indus river']\", \"PROJECT['origin of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-1598-1", "input": "what sea is between england and norway?", "output": "[\"SELECT['sea']\", \"SELECT['england']\", \"SELECT['norway']\", \"INTERSECTION['#1', '#2', '#3']\"]"}
{"id": "COMQA_dev_cluster-1598-2", "input": "what body of water was between england and norway?", "output": "[\"SELECT['bodies of water']\", \"SELECT['england']\", \"SELECT['norway']\", \"FILTER['#1', 'that is betweenleftside #2']\", \"FILTER['#4', 'that is betweenrightside #3']\"]"}
{"id": "COMQA_dev_cluster-1598-3", "input": "body of water between norway and england?", "output": "[\"SELECT['body of water']\", \"SELECT['norway']\", \"SELECT['england']\", \"INTERSECTION['#1', '#2', '#3']\"]"}
{"id": "COMQA_dev_cluster-1603-1", "input": "what is orlando blooms date of birth?", "output": "[\"SELECT['orlando bloom']\", \"PROJECT['date of birth of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-1608-1", "input": "when did arkansas becomes the twenty-fifth state?", "output": "[\"SELECT['arkansas becomes the twenty-fifth state']\", \"PROJECT['date of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-1617-1", "input": "who was louis armstrong's children?", "output": "[\"SELECT['louis armstrong']\", \"PROJECT['children of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-1622-1", "input": "what three countries were major allied during ww2?", "output": "[\"SELECT['major allied countries']\", \"SELECT['ww2']\", \"FILTER['#1', 'during #2']\"]"}
{"id": "COMQA_dev_cluster-1624-1", "input": "led china in the second sino-japanese war?", "output": "[\"SELECT['sino-japanese wars']\", \"PROJECT['second of #REF', '#1']\", \"PROJECT['who led china in #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-1629-1", "input": "on the mary tyler moore show what was murrays wife name?", "output": "[\"SELECT['mary tyler moore show']\", \"PROJECT['murrays of #REF', '#1']\", \"PROJECT['wife of #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-1640-1", "input": "what was willow smith first song?", "output": "[\"SELECT['willow smith']\", \"PROJECT['song of #REF', '#1']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "COMQA_dev_cluster-1641-1", "input": "who was the american naval leader during world war ii?", "output": "[\"SELECT['world war ii']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['american naval leader in #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-1647-1", "input": "when did canada join the unite nations?", "output": "[\"SELECT['canada']\", \"SELECT['unite nations']\", \"FILTER['#1', 'did join #2']\", \"PROJECT['when was #REF', '#3']\"]"}
{"id": "COMQA_dev_cluster-1651-1", "input": "when did jane seymour die in tudor times?", "output": "[\"SELECT['jane seymour die']\", \"PROJECT['date of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-1654-1", "input": "who was us president during the 14 amendment?", "output": "[\"SELECT['the us']\", \"PROJECT['presidents of #REF', '#1']\", \"FILTER['#2', 'during the 14 amendment']\"]"}
{"id": "COMQA_dev_cluster-1654-2", "input": "who was president of the us for 14th amendment?", "output": "[\"SELECT['the us']\", \"PROJECT['president of #REF', '#1']\", \"FILTER['#2', 'for the 14th amendment']\"]"}
{"id": "COMQA_dev_cluster-1655-1", "input": "who was the first person to climb the mckinley denali?", "output": "[\"SELECT['the mckinley denali']\", \"PROJECT['people that climb #REF', '#1']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "COMQA_dev_cluster-1660-1", "input": "what is the capitol of the country whose northern border is poland and germany?", "output": "[\"SELECT['countries']\", \"SELECT['poland']\", \"SELECT['germany']\", \"PROJECT['northern borders of #REF', '#1']\", \"COMPARATIVE['#1', '#4', 'is #2']\", \"COMPARATIVE['#1', '#4', 'is #3']\", \"INTERSECTION['#1', '#5', '#6']\", \"PROJECT['capitol of #REF', '#7']\"]"}
{"id": "COMQA_dev_cluster-1669-1", "input": "what year was the toilet invented and who invented it?", "output": "[\"SELECT['the toilet']\", \"PROJECT['year invented of #REF', '#1']\", \"PROJECT['who invented #REF', '#1']\", \"UNION['#2', '#3']\"]"}
{"id": "COMQA_dev_cluster-1673-1", "input": "when did harry truman was married?", "output": "[\"SELECT['harry truman was married']\", \"PROJECT['date of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-1674-1", "input": "japan third largest city?", "output": "[\"SELECT['japan']\", \"PROJECT['cities of #REF', '#1']\", \"PROJECT['size of #REF', '#2']\", \"SUPERLATIVE['max', '#2', '#3']\", \"DISCARD['#2', '#4']\", \"SUPERLATIVE['max', '#5', '#3']\", \"DISCARD['#5', '#6']\", \"SUPERLATIVE['max', '#7', '#3']\"]"}
{"id": "COMQA_dev_cluster-1676-1", "input": "when did david beckham play for manchester united?", "output": "[\"SELECT['david beckham did play for manchester united']\", \"PROJECT['when was #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-1677-1", "input": "what was chris browns first album?", "output": "[\"SELECT['chris brown']\", \"PROJECT['album of #REF', '#1']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "COMQA_dev_cluster-1678-1", "input": "who played hogan in 'hogans heroes'?", "output": "[\"SELECT['hogan']\", \"FILTER['#1', 'in hogans heroes']\", \"PROJECT['who played #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-169-1", "input": "which austalian city is most populous?", "output": "[\"SELECT['austalian']\", \"PROJECT['cities of #REF', '#1']\", \"PROJECT['population of #REF', '#2']\", \"SUPERLATIVE['max', '#2', '#3']\"]"}
{"id": "COMQA_dev_cluster-1695-1", "input": "what was charles dickens first novel?", "output": "[\"SELECT['charles dickens']\", \"PROJECT['novel of #REF', '#1']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "COMQA_dev_cluster-1697-1", "input": "largest organ of the digestive system?", "output": "[\"SELECT['the digestive system']\", \"PROJECT['organs of #REF', '#1']\", \"PROJECT['size of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is the largest']\"]"}
{"id": "COMQA_dev_cluster-1702-1", "input": "what number of counties is there in colorado?", "output": "[\"SELECT['colorado']\", \"PROJECT['counties of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "COMQA_dev_cluster-1705-1", "input": "who were king john's children?", "output": "[\"SELECT['king john']\", \"PROJECT['children of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-1708-1", "input": "what is the small country that is located between brazil and argentina name?", "output": "[\"SELECT['country']\", \"FILTER['#1', 'that is small']\", \"SELECT['brazil']\", \"SELECT['argentina']\", \"FILTER['#2', '#REF that is located']\", \"INTERSECTION['#5', '#3', '#4']\"]"}
{"id": "COMQA_dev_cluster-1710-1", "input": "zip code of sta rosa laguna?", "output": "[\"SELECT['sta rosa laguna']\", \"PROJECT['zip code of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-1711-1", "input": "where was prince royce born?", "output": "[\"SELECT['prince royce']\", \"PROJECT['where was #REF born', '#1']\"]"}
{"id": "COMQA_dev_cluster-1711-2", "input": "where is prince royce originally from?", "output": "[\"SELECT['prince royce']\", \"PROJECT['where is #REF originally from', '#1']\"]"}
{"id": "COMQA_dev_cluster-1713-1", "input": "which movies has clint eastwood appeared?", "output": "[\"SELECT['clint eastwood']\", \"PROJECT['movies of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-1715-1", "input": "when did the movie shrek come out?", "output": "[\"SELECT['the movie shrek']\", \"PROJECT['when did #REF come out', '#1']\"]"}
{"id": "COMQA_dev_cluster-1716-1", "input": "what schools did justin bieber go to?", "output": "[\"SELECT['justin bieber']\", \"PROJECT['schools of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-1733-1", "input": "what instrument does adam sandler play?", "output": "[\"SELECT['adam sandler']\", \"PROJECT['instrument that #REF plays', '#1']\"]"}
{"id": "COMQA_dev_cluster-1734-1", "input": "who is dating victoria justice?", "output": "[\"SELECT['victoria justice']\", \"PROJECT['who is dating #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-1735-1", "input": "which world company has the most employees?", "output": "[\"SELECT['companies']\", \"PROJECT['employees of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is the highest']\"]"}
{"id": "COMQA_dev_cluster-174-1", "input": "what river forms the border of arkansas and tennessee?", "output": "[\"SELECT['rivers']\", \"SELECT['arkansas']\", \"SELECT['tennessee']\", \"FILTER['#1', 'that forms border of #2']\", \"FILTER['#1', 'that forms border of #3']\", \"INTERSECTION['#1', '#4', '#5']\"]"}
{"id": "COMQA_dev_cluster-1744-1", "input": "three countries were major allied power during ww2?", "output": "[\"SELECT['countries']\", \"FILTER['#1', 'that were major allied powers']\", \"FILTER['#2', 'during ww2']\"]"}
{"id": "COMQA_dev_cluster-1749-1", "input": "where was johnny wilkinson born?", "output": "[\"SELECT['johnny wilkinson']\", \"PROJECT['where was #REF born', '#1']\"]"}
{"id": "COMQA_dev_cluster-1751-1", "input": "in which state did the chickasaw indians settled?", "output": "[\"SELECT['the chickasaw indians']\", \"PROJECT['state settled in of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-1755-1", "input": "who did lucille ball marry after the divorce with desi arnaz?", "output": "[\"SELECT['lucille ball']\", \"SELECT['desi arnaz']\", \"PROJECT['who did #REF marry', '#1']\", \"FILTER['#3', 'after #2']\"]"}
{"id": "COMQA_dev_cluster-1755-2", "input": "who did lucille ball marry after her divorce?", "output": "[\"SELECT['lucille ball']\", \"PROJECT['who did #REF marry', '#1']\", \"FILTER['#2', 'after her divorce']\"]"}
{"id": "COMQA_dev_cluster-1756-1", "input": "what is capital of new york?", "output": "[\"SELECT['new york']\", \"PROJECT['capital of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-1771-1", "input": "who played indiana jones in the raiders of lost ark?", "output": "[\"SELECT['indiana jones']\", \"PROJECT['who played #REF', '#1']\", \"FILTER['#2', 'in the raiders of lost ark']\"]"}
{"id": "COMQA_dev_cluster-1776-1", "input": "what state shares sault ste marie canal with canada?", "output": "[\"SELECT['state']\", \"SELECT['ste marie canal']\", \"SELECT['canada']\", \"FILTER['#1', 'that shares #2 with #3']\"]"}
{"id": "COMQA_dev_cluster-1787-1", "input": "what is the capital city of the african nation of cameroon?", "output": "[\"SELECT['the african nation of cameroon']\", \"PROJECT['capital city of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-1790-1", "input": "which is the first movie of amitabh bachchan?", "output": "[\"SELECT['amitabh bachchan']\", \"PROJECT['movies of #REF', '#1']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "COMQA_dev_cluster-1790-2", "input": "name amitabh bachchan's first film?", "output": "[\"SELECT['amitabh bachchan']\", \"PROJECT['films of #REF', '#1']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "COMQA_dev_cluster-179-1", "input": "what is the river that borders texas?", "output": "[\"SELECT['texas']\", \"PROJECT['river that borders #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-1792-2", "input": "what is the capital of a state that borders california and nevada and has coast line on the pacific?", "output": "[\"SELECT['california']\", \"SELECT['nevada']\", \"SELECT['border state']\", \"INTERSECTION['#3', '#1', '#2']\", \"PROJECT['coast line of #REF', '#4']\", \"COMPARATIVE['#4', '#5', 'is on the pacific']\", \"PROJECT['capital of #REF', '#6']\"]"}
{"id": "COMQA_dev_cluster-1800-1", "input": "what language do the peolpe in poland speak?", "output": "[\"SELECT['poland']\", \"PROJECT['language of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-1800-2", "input": "what language do poland people speak?", "output": "[\"SELECT['poland']\", \"PROJECT['people of #REF', '#1']\", \"PROJECT['the language of #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-1809-1", "input": "what age is justin bieber parents?", "output": "[\"SELECT['justin bieber']\", \"PROJECT['parents of #REF', '#1']\", \"PROJECT['ages of #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-182-1", "input": "what country is switzerland next to?", "output": "[\"SELECT['country']\", \"SELECT['switzerland']\", \"FILTER['#1', 'that is next to #2']\"]"}
{"id": "COMQA_dev_cluster-1824-1", "input": "who won the coca championship 2010?", "output": "[\"SELECT['the coca championship 2010']\", \"PROJECT['who won #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-1826-1", "input": "what schools did clara barton go to?", "output": "[\"SELECT['clara barton']\", \"PROJECT['schools #REF did go to', '#1']\"]"}
{"id": "COMQA_dev_cluster-1826-2", "input": "schools clara barton attend during her childhood?", "output": "[\"SELECT['clara barton']\", \"PROJECT['schools of #REF', '#1']\", \"FILTER['#2', 'during her childhood']\"]"}
{"id": "COMQA_dev_cluster-1836-1", "input": "what year rosa parks mom was born?", "output": "[\"SELECT['rosa parks']\", \"PROJECT['mom of #REF', '#1']\", \"PROJECT['when was #REF born', '#2']\", \"PROJECT['year of #REF', '#3']\"]"}
{"id": "COMQA_dev_cluster-1837-1", "input": "what films were nominated for best picture in 2009?", "output": "[\"SELECT['best picture']\", \"FILTER['#1', 'in 2009']\", \"PROJECT['films nominated for #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-1842-1", "input": "what is the currency in new mexico?", "output": "[\"SELECT['new mexico']\", \"PROJECT['currency of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-1849-1", "input": "when did canada become a commonwealth country?", "output": "[\"SELECT['canada become a commonwealth country']\", \"PROJECT['date of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-1860-1", "input": "who was the first to colonize vietnam?", "output": "[\"SELECT['vietnam']\", \"PROJECT['who did colonize #REF', '#1']\", \"FILTER['#2', 'that is the first']\"]"}
{"id": "COMQA_dev_cluster-1860-2", "input": "what was the colony that first colonized vietnam?", "output": "[\"SELECT['vietnam']\", \"PROJECT['colonies that colonized #REF', '#1']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "COMQA_dev_cluster-1868-1", "input": "who played shmuel in the boy in the striped pajamas?", "output": "[\"SELECT['the boy in the striped pajamas']\", \"PROJECT['shmuel of #REF', '#1']\", \"PROJECT['who played #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-1871-1", "input": "what are zachary taylor's children's name?", "output": "[\"SELECT['zachary taylor']\", \"PROJECT['children of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-1875-1", "input": "what was william clinton occupation before being elected president?", "output": "[\"SELECT['william clinton']\", \"PROJECT['occupations of #REF', '#1']\", \"FILTER['#2', 'before being elected president']\"]"}
{"id": "COMQA_dev_cluster-1875-2", "input": "what was bill clinton's job before he became president?", "output": "[\"SELECT['bill clinton']\", \"PROJECT['jobs of #REF', '#1']\", \"FILTER['#2', 'before president']\"]"}
{"id": "COMQA_dev_cluster-1876-1", "input": "who is zeus's oldest sister?", "output": "[\"SELECT['zeus']\", \"PROJECT['sisters of #REF', '#1']\", \"PROJECT['oldness of #REF', '#2']\", \"SUPERLATIVE['max', '#2', '#3']\"]"}
{"id": "COMQA_dev_cluster-1879-1", "input": "which is the largest ethnic group in nigeria today?", "output": "[\"SELECT['nigeria']\", \"PROJECT['ethnic groups of #REF', '#1']\", \"PROJECT['the size of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is the largest']\"]"}
{"id": "COMQA_dev_cluster-1883-1", "input": "what the biggest city in scotland?", "output": "[\"SELECT['scotland']\", \"PROJECT['cities of #REF', '#1']\", \"PROJECT['size of #REF', '#2']\", \"SUPERLATIVE['max', '#2', '#3']\"]"}
{"id": "COMQA_dev_cluster-1885-1", "input": "what is dog is the tallest dog in the world?", "output": "[\"SELECT['dogs']\", \"PROJECT['tallness of #REF', '#1']\", \"SUPERLATIVE['max', '#1', '#2']\"]"}
{"id": "COMQA_dev_cluster-1885-2", "input": "who is the tallest dog in the whole world?", "output": "[\"SELECT['dogs']\", \"PROJECT['height of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is the highest']\"]"}
{"id": "COMQA_dev_cluster-1886-1", "input": "what mountain range separates georgia from russia?", "output": "[\"SELECT['mountain ranges']\", \"SELECT['georgia']\", \"SELECT['russia']\", \"FILTER['#1', 'that separates #2 from #3']\"]"}
{"id": "COMQA_dev_cluster-1892-1", "input": "who were the first 2 astronauts on the moon?", "output": "[\"SELECT['astronauts']\", \"SELECT['the moon']\", \"FILTER['#1', 'that were on #2']\", \"PROJECT['the first 2 of #REF', '#3']\"]"}
{"id": "COMQA_dev_cluster-1894-1", "input": "which british players have played for barcelona?", "output": "[\"SELECT['british players']\", \"SELECT['barcelona']\", \"FILTER['#1', 'that played for #2']\"]"}
{"id": "COMQA_dev_cluster-192-1", "input": "what currency used in denmark?", "output": "[\"SELECT['denmark']\", \"PROJECT['currency of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-1924-1", "input": "at what age did van gogh live until he died?", "output": "[\"SELECT['van gogh']\", \"PROJECT['at what age did #REF die', '#1']\"]"}
{"id": "COMQA_dev_cluster-1929-1", "input": "which layer of earth is the coolest temperature?", "output": "[\"SELECT['earth']\", \"PROJECT['layers of #REF', '#1']\", \"PROJECT['temperature of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is the lowest']\"]"}
{"id": "COMQA_dev_cluster-1934-1", "input": "where did ella fitgerald go to school?", "output": "[\"SELECT['ella fitgerald']\", \"PROJECT['school of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-1936-1", "input": "who is sebastian applewhite in danis house?", "output": "[\"SELECT['sebastian applewhite']\", \"FILTER['#1', 'in danis house']\", \"PROJECT['who is #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-1937-1", "input": "which river flows through the cities of smolensk and kiev and empties into black sea?", "output": "[\"SELECT['river']\", \"SELECT['smolensk']\", \"SELECT['kiev']\", \"FILTER['#1', 'that flows through #2']\", \"FILTER['#1', 'that flows through #3']\", \"INTERSECTION['#1', '#4', '#5']\", \"SELECT['the black sea']\", \"FILTER['#6', 'that empties into #7']\"]"}
{"id": "COMQA_dev_cluster-1940-1", "input": "when was the first gas-powered motorcycle invented?", "output": "[\"SELECT['motorcycles']\", \"FILTER['#1', 'that are gas-powered']\", \"AGGREGATE['min', '#2']\", \"PROJECT['date invented of #REF', '#3']\"]"}
{"id": "COMQA_dev_cluster-1946-1", "input": "where did george washinton grow up?", "output": "[\"SELECT['george washinton']\", \"PROJECT['where did #REF grow up', '#1']\"]"}
{"id": "COMQA_dev_cluster-1949-1", "input": "who played dumbledore in the first harry potter movie?", "output": "[\"SELECT['dumbledore']\", \"PROJECT['who played #REF', '#1']\", \"FILTER['#2', 'in the first harry potter movie']\"]"}
{"id": "COMQA_dev_cluster-1950-1", "input": "john travolta and jamie lee curtis starred in the movie?", "output": "[\"SELECT['movies']\", \"SELECT['john travolta']\", \"SELECT['jamie lee curtis']\", \"FILTER['#1', 'that #2 starred in']\", \"FILTER['#1', 'that #3 starred in']\", \"INTERSECTION['#1', '#4', '#5']\"]"}
{"id": "COMQA_dev_cluster-1955-1", "input": "what part of new york was kareem abdul-jabbar born?", "output": "[\"SELECT['new york']\", \"PROJECT['parts of #REF', '#1']\", \"SELECT['kareem abdul-jabbar']\", \"COMPARATIVE['#2', '#3', 'was born']\"]"}
{"id": "COMQA_dev_cluster-1955-2", "input": "where was karrem abdul-jabbar born?", "output": "[\"SELECT['karrem abdul-jabbar']\", \"PROJECT['where was #REF born', '#1']\"]"}
{"id": "COMQA_dev_cluster-1968-1", "input": "what school does ryan butler go to?", "output": "[\"SELECT['ryan butler']\", \"PROJECT['school of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-1979-1", "input": "where was robert e lees first battle?", "output": "[\"SELECT['robert e lee']\", \"PROJECT['battles of #REF', '#1']\", \"AGGREGATE['min', '#2']\", \"PROJECT['where was #REF', '#3']\"]"}
{"id": "COMQA_dev_cluster-1987-1", "input": "what happen to robert todd lincoln?", "output": "[\"SELECT['robert todd lincoln']\", \"PROJECT['what happen to #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-1992-1", "input": "which country is in both asia and africa?", "output": "[\"SELECT['asia']\", \"SELECT['africa']\", \"PROJECT['countries of #REF', '#1']\", \"PROJECT['countries of #REF', '#2']\", \"SELECT['country']\", \"INTERSECTION['#5', '#3', '#4']\"]"}
{"id": "COMQA_dev_cluster-2002-1", "input": "what 2 states border tennessee to the west?", "output": "[\"SELECT['tennessee']\", \"PROJECT['border states of #REF', '#1']\", \"FILTER['#2', 'to the west']\"]"}
{"id": "COMQA_dev_cluster-2013-1", "input": "the mississippi creates boundaries for what state?", "output": "[\"SELECT['mississippi']\", \"SELECT['states']\", \"FILTER['#2', 'where #1 creates boundaries']\"]"}
{"id": "COMQA_dev_cluster-2020-1", "input": "what was rick riordain's first book he had write?", "output": "[\"SELECT['rick riordain']\", \"PROJECT['books of #REF', '#1']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "COMQA_dev_cluster-2022-1", "input": "what is population in timbuctu today?", "output": "[\"SELECT['timbuctu']\", \"PROJECT['population today of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-2022-2", "input": "what is the total population of timbuktu today?", "output": "[\"SELECT['timbuktu']\", \"PROJECT['population today of #REF', '#1']\", \"GROUP['sum', '#2', '#1']\", \"UNION['#1', '#3']\"]"}
{"id": "COMQA_dev_cluster-2035-1", "input": "what was the prophet muhammed first job?", "output": "[\"SELECT['prophet muhammed']\", \"PROJECT['jobs of #REF', '#1']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "COMQA_dev_cluster-2035-2", "input": "what was the first job of the prophet muhammed?", "output": "[\"SELECT['the prophet muhammed']\", \"PROJECT['jobs of #REF', '#1']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "COMQA_dev_cluster-2049-1", "input": "which country has the most population?", "output": "[\"SELECT['countries']\", \"PROJECT['populations of #REF', '#1']\", \"SUPERLATIVE['max', '#1', '#2']\"]"}
{"id": "COMQA_dev_cluster-2049-2", "input": "which country has the most population in the whole wide world?", "output": "[\"SELECT['countries']\", \"PROJECT['population of #REF', '#1']\", \"SUPERLATIVE['max', '#1', '#2']\"]"}
{"id": "COMQA_dev_cluster-2054-1", "input": "what is the name of michael jacson new album?", "output": "[\"SELECT['michael jacson']\", \"PROJECT['album of #REF', '#1']\", \"FILTER['#2', 'that is new']\"]"}
{"id": "COMQA_dev_cluster-2060-1", "input": "what is the slogan for north dakota?", "output": "[\"SELECT['north dakota']\", \"PROJECT['slogan of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-206-1", "input": "what are the names of ron weasley's and hermione granger's children?", "output": "[\"SELECT['ron weasley']\", \"SELECT['hermione granger']\", \"SELECT['children']\", \"INTERSECTION['#3', '#1', '#2']\"]"}
{"id": "COMQA_dev_cluster-2063-1", "input": "who played james in harry potter?", "output": "[\"SELECT['harry potter']\", \"PROJECT['who played james in #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-2065-1", "input": "what was the year that gunsmoke was first broadcasted?", "output": "[\"SELECT['gunsmoke was first broadcasted']\", \"PROJECT['year of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-2070-1", "input": "who was the leader of the north vietnam during the time of the vietnam war?", "output": "[\"SELECT['north vietnam']\", \"PROJECT['the leader of #REF', '#1']\", \"SELECT['vietnam war']\", \"FILTER['#2', 'that is during #3']\"]"}
{"id": "COMQA_dev_cluster-2076-1", "input": "which island has over 60 percent of indonesia's population?", "output": "[\"SELECT['indonesia']\", \"PROJECT['islands of #REF', '#1']\", \"PROJECT['population of #REF', '#1']\", \"FILTER['#2', 'that has over 60 percent of #3']\"]"}
{"id": "COMQA_dev_cluster-2077-1", "input": "what team does wayne rooney play for?", "output": "[\"SELECT['wayne rooney']\", \"PROJECT['team of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-2080-1", "input": "who has played for manchester city and manchester united and liverpool?", "output": "[\"SELECT['manchester city']\", \"SELECT['manchester united']\", \"SELECT['liverpool']\", \"PROJECT['who played for #REF', '#1']\", \"PROJECT['who played for #REF', '#2']\", \"PROJECT['who played for #REF', '#3']\", \"SELECT['who is']\", \"INTERSECTION['#7', '#4', '#5']\", \"SELECT['who is']\", \"INTERSECTION['#9', '#6', '#8']\"]"}
{"id": "COMQA_dev_cluster-2084-1", "input": "who is prince williams mom called?", "output": "[\"SELECT['prince william']\", \"PROJECT['mom of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-2091-1", "input": "who was the first actress to win back to back in oscars?", "output": "[\"SELECT['actresses']\", \"FILTER['#1', 'that did win back to back oscars']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "COMQA_dev_cluster-2092-1", "input": "when did isaac newton die?", "output": "[\"SELECT['isaac newton']\", \"PROJECT['when did #REF die', '#1']\"]"}
{"id": "COMQA_dev_cluster-2100-1", "input": "what is the highest mountain in the us?", "output": "[\"SELECT['the us']\", \"PROJECT['mountains of #REF', '#1']\", \"PROJECT['elevation of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is the highest']\"]"}
{"id": "COMQA_dev_cluster-210-1", "input": "what language do people speak in the us?", "output": "[\"SELECT['the us']\", \"PROJECT['languages of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-2102-1", "input": "who wrote the song 'i believe' performed by brooks and dunn?", "output": "[\"SELECT['the song i believe']\", \"SELECT['brooks and dunn']\", \"FILTER['#1', 'performed by #2']\", \"PROJECT['who wrote #REF', '#3']\"]"}
{"id": "COMQA_dev_cluster-2109-1", "input": "what landform is made up of finland norway and sweden?", "output": "[\"SELECT['finland']\", \"SELECT['norway']\", \"SELECT['sweden']\", \"PROJECT['landform of #REF', '#1']\", \"PROJECT['landform of #REF', '#2']\", \"PROJECT['landform of #REF', '#3']\", \"SELECT['landform']\", \"INTERSECTION['#7', '#4', '#5']\", \"SELECT['landform']\", \"INTERSECTION['#9', '#6', '#8']\"]"}
{"id": "COMQA_dev_cluster-2113-1", "input": "what were the four wars that israel was in?", "output": "[\"SELECT['israel']\", \"PROJECT['wars of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-212-1", "input": "where is trinidad and toboago located?", "output": "[\"SELECT['trinidad and toboago']\", \"PROJECT['where is #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-2124-1", "input": "when did john booth get married?", "output": "[\"SELECT['john booth did get married']\", \"PROJECT['when was #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-2132-1", "input": "what is the population of las vegas neveda?", "output": "[\"SELECT['las vegas neveda']\", \"PROJECT['population of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-2139-1", "input": "what movies does kristen play in?", "output": "[\"SELECT['kristen']\", \"PROJECT['movies of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-2139-2", "input": "what films does kristen stewart star in?", "output": "[\"SELECT['kristen stewart']\", \"PROJECT['films that #REF stars in', '#1']\"]"}
{"id": "COMQA_dev_cluster-2139-3", "input": "what movies has kristen stewar been in?", "output": "[\"SELECT['kristen stewar']\", \"PROJECT['movies of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-2142-1", "input": "what year did the first men on the moon?", "output": "[\"SELECT['men on the moon']\", \"PROJECT['years of #REF', '#1']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "COMQA_dev_cluster-2143-1", "input": "which country borders china?", "output": "[\"SELECT['china']\", \"PROJECT['country that borders #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-2147-1", "input": "what are the names of randy ortons children?", "output": "[\"SELECT['randy orton']\", \"PROJECT['children of #REF', '#1']\", \"PROJECT['names of #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-2150-1", "input": "what was henrys age when he got married to catherine of aragon?", "output": "[\"SELECT['henrys']\", \"SELECT['catherine of aragon']\", \"PROJECT['age of #REF', '#1']\", \"FILTER['#3', 'when he married #2']\"]"}
{"id": "COMQA_dev_cluster-2156-1", "input": "what are the three biggest cities in rhode island?", "output": "[\"SELECT['rhode island']\", \"PROJECT['cities of #REF', '#1']\", \"PROJECT['size of #REF', '#2']\", \"AGGREGATE['max', '#3']\", \"COMPARATIVE['#2', '#3', 'is in #4']\"]"}
{"id": "COMQA_dev_cluster-2156-2", "input": "what are three biggest cities in rhode island?", "output": "[\"SELECT['rhode island']\", \"PROJECT['cities of #REF', '#1']\", \"PROJECT['size of #REF', '#2']\", \"SUPERLATIVE['max', '#2', '#3']\", \"DISCARD['#2', '#4']\", \"SUPERLATIVE['max', '#5', '#3']\", \"DISCARD['#5', '#6']\", \"FILTER['#7', 'where #3 islands highest']\", \"UNION['#4', '#6', '#8']\"]"}
{"id": "COMQA_dev_cluster-2168-1", "input": "duke is from blank city north carolina?", "output": "[\"SELECT['north carolina']\", \"PROJECT['cities of #REF', '#1']\", \"FILTER['#2', 'that duke is from']\"]"}
{"id": "COMQA_dev_cluster-2179-1", "input": "which country in europe touches france to the south?", "output": "[\"SELECT['europe']\", \"PROJECT['country of #REF', '#1']\", \"SELECT['france']\", \"FILTER['#2', 'that touches #3']\", \"FILTER['#4', 'to the south']\"]"}
{"id": "COMQA_dev_cluster-2181-1", "input": "who is the father of diana ross children?", "output": "[\"SELECT['diana ross']\", \"PROJECT['children of #REF', '#1']\", \"PROJECT['father of #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-219-1", "input": "who was the american first president?", "output": "[\"SELECT['american presidents']\", \"AGGREGATE['min', '#1']\"]"}
{"id": "COMQA_dev_cluster-2205-2", "input": "what role did hernan cortes play in he fall of tenochtitlan?", "output": "[\"SELECT['fall of tenochtitlan']\", \"PROJECT['role of hernan cortes in #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-2206-1", "input": "what is sidney crosby's mother's name?", "output": "[\"SELECT['sidney crosby']\", \"PROJECT['mother of #REF', '#1']\", \"PROJECT['name of #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-2208-1", "input": "what was diggy simmons first song?", "output": "[\"SELECT['diggy simmons']\", \"PROJECT['song of #REF', '#1']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "COMQA_dev_cluster-221-1", "input": "who was the first astronaut to land on the moon?", "output": "[\"SELECT['astronauts']\", \"FILTER['#1', 'that did land on the moon']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "COMQA_dev_cluster-221-2", "input": "who were the first astronauts of the moon landing of 1969?", "output": "[\"SELECT['the moon landing']\", \"FILTER['#1', 'in 1969']\", \"PROJECT['astronauts of #REF', '#2']\", \"AGGREGATE['min', '#3']\"]"}
{"id": "COMQA_dev_cluster-2215-1", "input": "who was the king or troy during the trojan war?", "output": "[\"SELECT['troy']\", \"PROJECT['the king of #REF', '#1']\", \"FILTER['#2', 'during the trojan war']\"]"}
{"id": "COMQA_dev_cluster-2237-1", "input": "american city to have first skyscraper was?", "output": "[\"SELECT['american cities']\", \"PROJECT['skyscrapers of #REF', '#1']\", \"AGGREGATE['min', '#2']\", \"FILTER['#1', 'that has #3']\"]"}
{"id": "COMQA_dev_cluster-2240-1", "input": "when did the first movie of star wars come out?", "output": "[\"SELECT['star wars movies']\", \"AGGREGATE['min', '#1']\", \"PROJECT['date of #REF come out', '#2']\"]"}
{"id": "COMQA_dev_cluster-2241-1", "input": "when did denzel washington win his first oscar?", "output": "[\"SELECT['denzel washington']\", \"PROJECT['oscar win of #REF', '#1']\", \"PROJECT['date of #REF', '#2']\", \"AGGREGATE['min', '#3']\"]"}
{"id": "COMQA_dev_cluster-2243-1", "input": "what is the deepest lake in the united states?", "output": "[\"SELECT['the united states']\", \"PROJECT['lakes of #REF', '#1']\", \"PROJECT['deepness of #REF', '#2']\", \"SUPERLATIVE['max', '#2', '#3']\"]"}
{"id": "COMQA_dev_cluster-2250-1", "input": "where did arthur conan doyle die?", "output": "[\"SELECT['arthur conan doyle']\", \"PROJECT['where did #REF die', '#1']\"]"}
{"id": "COMQA_dev_cluster-2253-1", "input": "what city is located on the north saskatchewan river is the capital of the canadian province of alberta?", "output": "[\"SELECT['the canadian province of alberta']\", \"PROJECT['capital city of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-2254-1", "input": "what did penelope cruz win an oscar for?", "output": "[\"SELECT['penelope cruz']\", \"PROJECT['oscar of #REF', '#1']\", \"PROJECT['what was #REF for', '#2']\"]"}
{"id": "COMQA_dev_cluster-2258-1", "input": "what is the name of the highest mountain in nepal?", "output": "[\"SELECT['nepal']\", \"PROJECT['mountains of #REF', '#1']\", \"PROJECT['height of #REF', '#2']\", \"SUPERLATIVE['max', '#2', '#3']\", \"PROJECT['name of #REF', '#4']\"]"}
{"id": "COMQA_dev_cluster-2260-1", "input": "what was hans holbein's children called?", "output": "[\"SELECT['hans holbein']\", \"PROJECT['children of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-2265-1", "input": "a counting of the people living in the us?", "output": "[\"SELECT['us']\", \"PROJECT['population of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-2299-1", "input": "what teams did paul bear byrant coached?", "output": "[\"SELECT['paul bear byrant']\", \"PROJECT['teams that #REF coached', '#1']\"]"}
{"id": "COMQA_dev_cluster-2303-2", "input": "what is the french second biggest city?", "output": "[\"SELECT['french cities']\", \"PROJECT['size of #REF', '#1']\", \"AGGREGATE['max', '#2']\", \"DISCARD['#2', '#3']\", \"AGGREGATE['max', '#4']\", \"COMPARATIVE['#1', '#2', 'is equal to #5']\"]"}
{"id": "COMQA_dev_cluster-23-1", "input": "who is the first chairman of sbi?", "output": "[\"SELECT['sbi']\", \"PROJECT['chairmen of #REF', '#1']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "COMQA_dev_cluster-2315-1", "input": "lady gaga's latest cd title was?", "output": "[\"SELECT['lady gaga']\", \"PROJECT['cd of #REF', '#1']\", \"PROJECT['the title of #REF', '#2']\", \"PROJECT['the latest of #REF', '#3']\"]"}
{"id": "COMQA_dev_cluster-2318-1", "input": "what civilization was the first to build an irrigation system of ditches?", "output": "[\"SELECT['irrigation system of ditches']\", \"PROJECT['civilizations that build #REF', '#1']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "COMQA_dev_cluster-232-1", "input": "when is jason earls birthday?", "output": "[\"SELECT['jason earl']\", \"PROJECT['birthday of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-2321-1", "input": "what is africas largest mountain ranges?", "output": "[\"SELECT['africas']\", \"PROJECT['mountain ranges of #REF', '#1']\", \"PROJECT['size of #REF', '#2']\", \"SUPERLATIVE['max', '#2', '#3']\"]"}
{"id": "COMQA_dev_cluster-2323-1", "input": "what team won back to back nba championships in 1989 and 1990?", "output": "[\"SELECT['the nba']\", \"PROJECT['championships of #REF', '#1']\", \"FILTER['#2', 'in 1989']\", \"FILTER['#2', 'in 1990']\", \"SELECT['team']\", \"INTERSECTION['#5', '#3', '#4']\"]"}
{"id": "COMQA_dev_cluster-2343-1", "input": "where was hinduism begin?", "output": "[\"SELECT['hinduism']\", \"PROJECT['where was #REF begin', '#1']\"]"}
{"id": "COMQA_dev_cluster-2345-1", "input": "which city was rebuilt after 1871 fire?", "output": "[\"SELECT['cities']\", \"FILTER['#1', 'that was rebuilt after 1871 fire']\"]"}
{"id": "COMQA_dev_cluster-2351-1", "input": "when will bioshock infinit come out?", "output": "[\"SELECT['bioshock infinit']\", \"PROJECT['when will #REF come out', '#1']\"]"}
{"id": "COMQA_dev_cluster-2353-1", "input": "what sea separates atlaska and russia?", "output": "[\"SELECT['sea']\", \"SELECT['atlaska']\", \"SELECT['russia']\", \"FILTER['#1', 'that separates #2 from #3']\"]"}
{"id": "COMQA_dev_cluster-2353-2", "input": "which sea separates southwestern alaska from russia?", "output": "[\"SELECT['seas']\", \"SELECT['southwestern alaska']\", \"SELECT['russia']\", \"FILTER['#1', 'that separates #2 from #3']\"]"}
{"id": "COMQA_dev_cluster-2354-1", "input": "what is trinidad and tobagos official language?", "output": "[\"SELECT['trinidad and tobagos']\", \"PROJECT['official language of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-2366-1", "input": "what is the largest city in alaska?", "output": "[\"SELECT['alaska']\", \"PROJECT['cities of #REF', '#1']\", \"PROJECT['size of #REF', '#2']\", \"SUPERLATIVE['max', '#2', '#3']\"]"}
{"id": "COMQA_dev_cluster-2367-1", "input": "this country separates pakistan and russia?", "output": "[\"SELECT['country']\", \"SELECT['pakistan']\", \"SELECT['russia']\", \"FILTER['#1', 'that separates #2 from #3']\"]"}
{"id": "COMQA_dev_cluster-2374-1", "input": "who was all the men in the reform party candidate in the 1996 election?", "output": "[\"SELECT['the election']\", \"FILTER['#1', 'in 1996']\", \"PROJECT['candidates of #REF', '#2']\", \"PROJECT['party of #REF', '#3']\", \"COMPARATIVE['#3', '#4', 'is the reform party']\"]"}
{"id": "COMQA_dev_cluster-2374-2", "input": "which men were the reform party candidate in the 1996 election?", "output": "[\"SELECT['election']\", \"FILTER['#1', 'in 1996']\", \"PROJECT['reform party candidates in #REF', '#2']\", \"FILTER['#3', 'that were men']\"]"}
{"id": "COMQA_dev_cluster-2374-3", "input": "which of these men was the reform candidate in the 1996 elections?", "output": "[\"SELECT['1996 elections']\", \"PROJECT['reform candidate of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-2374-4", "input": "which men was the reform party candidate in the 1996 election?", "output": "[\"SELECT['the election']\", \"FILTER['#1', 'in 1996']\", \"PROJECT['candidates of #REF', '#2']\", \"PROJECT['party of #REF', '#3']\", \"COMPARATIVE['#3', '#4', 'is the reform party']\"]"}
{"id": "COMQA_dev_cluster-2382-1", "input": "what is the name of john mccain real daughter?", "output": "[\"SELECT['john mccain']\", \"PROJECT['real daughter of #REF', '#1']\", \"PROJECT['name of #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-2385-1", "input": "what was anne franks' grandmother's name?", "output": "[\"SELECT['anne franks']\", \"PROJECT['grandmother of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-2397-1", "input": "when did adolf hitler's power end?", "output": "[\"SELECT['adolf hitler s power ends']\", \"PROJECT['date of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-240-1", "input": "what religions are commonly practiced in argentina?", "output": "[\"SELECT['argentina']\", \"PROJECT['religions of #REF', '#1']\", \"FILTER['#2', 'that are commonly practiced']\"]"}
{"id": "COMQA_dev_cluster-2401-1", "input": "who was the first governor of connecticut?", "output": "[\"SELECT['connecticut']\", \"PROJECT['governors of #REF', '#1']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "COMQA_dev_cluster-2406-1", "input": "what is the name of real madrids manager?", "output": "[\"SELECT['real madrid']\", \"PROJECT['manager of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-2424-1", "input": "where does the orange river flow into?", "output": "[\"SELECT['the orange river']\", \"PROJECT['into where does #REF flow', '#1']\"]"}
{"id": "COMQA_dev_cluster-2431-2", "input": "what country is bordered by poland and germany?", "output": "[\"SELECT['poland']\", \"SELECT['germany']\", \"SELECT['country bordered']\", \"INTERSECTION['#3', '#1', '#2']\"]"}
{"id": "COMQA_dev_cluster-2435-1", "input": "who is tamela j mann married to?", "output": "[\"SELECT['tamela j mann']\", \"PROJECT['who #REF is married to', '#1']\"]"}
{"id": "COMQA_dev_cluster-244-1", "input": "where was the 2010 world cup held?", "output": "[\"SELECT['2010 world cup']\", \"PROJECT['where was #REF held', '#1']\"]"}
{"id": "COMQA_dev_cluster-2441-1", "input": "what state borders colorado and kansas?", "output": "[\"SELECT['state']\", \"SELECT['colorado']\", \"SELECT['kansas']\", \"FILTER['#1', 'that borders #2']\", \"FILTER['#1', 'that borders #3']\", \"INTERSECTION['#1', '#4', '#5']\"]"}
{"id": "COMQA_dev_cluster-244-2", "input": "where was the fifa world cup 2010 held?", "output": "[\"SELECT['fifa world cup 2010']\", \"PROJECT['where was #REF held', '#1']\"]"}
{"id": "COMQA_dev_cluster-245-1", "input": "when did mount vesuvius erupted for the first time?", "output": "[\"SELECT['mount vesuvius erupted']\", \"PROJECT['when was #REF', '#1']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "COMQA_dev_cluster-2454-1", "input": "what do the madagascar people wear?", "output": "[\"SELECT['madagascar']\", \"PROJECT['people of #REF', '#1']\", \"PROJECT['what do #REF wear', '#2']\"]"}
{"id": "COMQA_dev_cluster-2464-1", "input": "who won the battle of saratoga freemans farm?", "output": "[\"SELECT['the battle of saratoga freemans farm']\", \"PROJECT['who won #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-247-1", "input": "which narrow body of water goes through sicily and italy?", "output": "[\"SELECT['bodies of water']\", \"FILTER['#1', 'that are narrow']\", \"SELECT['sicily']\", \"SELECT['italy']\", \"FILTER['#2', 'that goes through #3']\", \"FILTER['#2', 'that goes through #4']\", \"INTERSECTION['#2', '#5', '#6']\"]"}
{"id": "COMQA_dev_cluster-2478-1", "input": "who was the king in thailand?", "output": "[\"SELECT['thailand']\", \"PROJECT['the king of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-2483-1", "input": "where is escape from scorpion island 4 being filmed?", "output": "[\"SELECT['escape from scorpion island 4']\", \"PROJECT['where is #REF being filmed', '#1']\"]"}
{"id": "COMQA_dev_cluster-2485-1", "input": "what are hilary duff's siblings?", "output": "[\"SELECT['hilary duff']\", \"PROJECT['siblings of #REF', '#1']\", \"PROJECT['what are #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-2486-1", "input": "the largest 3 cities in georgia?", "output": "[\"SELECT['georgia']\", \"PROJECT['cities of #REF', '#1']\", \"AGGREGATE['max', '#2']\", \"DISCARD['#2', '#3']\", \"AGGREGATE['max', '#4']\", \"DISCARD['#2', '#5']\", \"AGGREGATE['max', '#6']\", \"UNION['#3', '#5']\", \"UNION['#8', '#7']\"]"}
{"id": "COMQA_dev_cluster-2488-1", "input": "first lady governor of india?", "output": "[\"SELECT['india']\", \"PROJECT['governors of #REF', '#1']\", \"FILTER['#2', 'that are lady']\", \"AGGREGATE['min', '#3']\"]"}
{"id": "COMQA_dev_cluster-2498-1", "input": "what was the city and country of where saint elizbeth ann seton was born?", "output": "[\"SELECT['saint elizbeth ann seton']\", \"PROJECT['where was #REF born', '#1']\", \"PROJECT['city of #REF', '#2']\", \"PROJECT['country of #REF', '#2']\", \"UNION['#3', '#4']\"]"}
{"id": "COMQA_dev_cluster-2506-1", "input": "what was ben stiller's first movie?", "output": "[\"SELECT['ben stiller']\", \"PROJECT['movies of #REF', '#1']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "COMQA_dev_cluster-2507-1", "input": "prime minister in canada?", "output": "[\"SELECT['canada']\", \"PROJECT['prime minister of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-2522-1", "input": "who is the first secretary us?", "output": "[\"SELECT['secretary us']\", \"AGGREGATE['min', '#1']\"]"}
{"id": "COMQA_dev_cluster-2522-2", "input": "what was the name of the first secretary of the us?", "output": "[\"SELECT['the us']\", \"PROJECT['secretaries of #REF', '#1']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "COMQA_dev_cluster-2529-1", "input": "what was selena gomez first album called?", "output": "[\"SELECT['selena gomez']\", \"PROJECT['album of #REF', '#1']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "COMQA_dev_cluster-2534-1", "input": "where did albert namatjira get born?", "output": "[\"SELECT['albert namatjira']\", \"PROJECT['where did #REF get born', '#1']\"]"}
{"id": "COMQA_dev_cluster-254-1", "input": "who is the second indian to get oscar?", "output": "[\"SELECT['oscar']\", \"PROJECT['indian to get #REF', '#1']\", \"PROJECT['second of #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-2541-1", "input": "who played dumbledore in the 5th harry potter film?", "output": "[\"SELECT['harry potter films']\", \"PROJECT['5th of #REF', '#1']\", \"PROJECT['dumbledore of #REF', '#2']\", \"PROJECT['who played #REF', '#3']\"]"}
{"id": "COMQA_dev_cluster-2541-2", "input": "who played albus dumbledore in harry potter and the order of phoenix?", "output": "[\"SELECT['harry potter and the order of phoenix']\", \"PROJECT['albus dumbledore of #REF', '#1']\", \"PROJECT['who played #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-254-2", "input": "who is the second indian oscar winner?", "output": "[\"SELECT['oscar winners']\", \"FILTER['#1', 'that are indian']\", \"PROJECT['second of #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-255-1", "input": "what is the name of bruce wills first movie?", "output": "[\"SELECT['bruce wills']\", \"PROJECT['movies of #REF', '#1']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "COMQA_dev_cluster-2552-1", "input": "what was king henry viii religious views?", "output": "[\"SELECT['king henry viii']\", \"PROJECT['religious views of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-2555-1", "input": "what day was harry truman married?", "output": "[\"SELECT['harry truman was married']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['day of #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-2555-2", "input": "when did henry s truman get married?", "output": "[\"SELECT['henry truman get married']\", \"PROJECT['date of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-2564-1", "input": "which country invaded poland in september 1939 setting off world war two?", "output": "[\"SELECT['poland']\", \"PROJECT['country that invaded #REF', '#1']\", \"FILTER['#2', 'in september 1939']\"]"}
{"id": "COMQA_dev_cluster-2566-1", "input": "who is the thirteenth president of the us?", "output": "[\"SELECT['us']\", \"PROJECT['presidents of #REF', '#1']\", \"PROJECT['the thirteenth of #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-2570-1", "input": "interesting facts on edgar allan poes death?", "output": "[\"SELECT['edgar allan poes']\", \"PROJECT['death of #REF', '#1']\", \"PROJECT['facts on #REF', '#2']\", \"FILTER['#3', 'that are interesting']\"]"}
{"id": "COMQA_dev_cluster-2573-1", "input": "what gender is wendy williams?", "output": "[\"SELECT['wendy williams']\", \"PROJECT['the gender of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-2579-1", "input": "when did the genocide in rwanda begin?", "output": "[\"SELECT['the genocide in rwanda begins']\", \"PROJECT['date of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-2579-2", "input": "when did rwanda genocide start?", "output": "[\"SELECT['rwanda genocide']\", \"PROJECT['when did #REF start', '#1']\"]"}
{"id": "COMQA_dev_cluster-2587-1", "input": "when did us go to war on iraq?", "output": "[\"SELECT['the us go to war on iraq']\", \"PROJECT['date of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-2597-1", "input": "what year did abraham likin die in?", "output": "[\"SELECT['abraham likin die']\", \"PROJECT['year of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-2597-2", "input": "what year did president lincoln die?", "output": "[\"SELECT['president lincoln die']\", \"PROJECT['year of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-260-1", "input": "what is washingtons highest mountain?", "output": "[\"SELECT['washingtons']\", \"PROJECT['mountains of #REF', '#1']\", \"PROJECT['height of #REF', '#2']\", \"SUPERLATIVE['max', '#2', '#3']\"]"}
{"id": "COMQA_dev_cluster-2607-1", "input": "who was the prime minister who drowned in 1967?", "output": "[\"SELECT['prime minister']\", \"FILTER['#1', 'that drowned']\", \"FILTER['#2', 'in 1967']\"]"}
{"id": "COMQA_dev_cluster-2608-1", "input": "when did allama iqbal die and born?", "output": "[\"SELECT['allama iqbal']\", \"PROJECT['when did #REF die', '#1']\", \"PROJECT['when did #REF born', '#1']\", \"UNION['#2', '#3']\"]"}
{"id": "COMQA_dev_cluster-2609-1", "input": "what earned tom hanks his third movie oscar?", "output": "[\"SELECT['tom hanks']\", \"PROJECT['oscars of #REF', '#1']\", \"PROJECT['third of #REF', '#2']\", \"PROJECT['movie of #REF', '#3']\"]"}
{"id": "COMQA_dev_cluster-2609-2", "input": "what was tom hanks 3rd oscar nomination?", "output": "[\"SELECT['tom hanks']\", \"PROJECT['oscar nominations of #REF', '#1']\", \"PROJECT['3rd of #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-2611-1", "input": "what time zone is phoenix arizona?", "output": "[\"SELECT['phoenix arizona']\", \"PROJECT['time zone of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-262-1", "input": "worlds highest mountain peak?", "output": "[\"SELECT['mountains']\", \"PROJECT['elevation of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is the highest']\"]"}
{"id": "COMQA_dev_cluster-262-2", "input": "what is the worlds highest mountain peak?", "output": "[\"SELECT['mountains']\", \"PROJECT['elevation of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is the highest']\"]"}
{"id": "COMQA_dev_cluster-2628-1", "input": "which famous sailor discovered the americas?", "output": "[\"SELECT['the americas']\", \"SELECT['famous sailors']\", \"FILTER['#2', 'that discovered #1']\"]"}
{"id": "COMQA_dev_cluster-263-1", "input": "when did napoleon become dead?", "output": "[\"SELECT['napoleon become dead']\", \"PROJECT['when was #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-2647-1", "input": "which state borders tennessee on the west?", "output": "[\"SELECT['tennessee']\", \"PROJECT['the west of #REF', '#1']\", \"SELECT['state']\", \"FILTER['#3', 'that borders #2']\"]"}
{"id": "COMQA_dev_cluster-2650-1", "input": "what river flows through mali niger and nigeria?", "output": "[\"SELECT['river']\", \"SELECT['mali']\", \"SELECT['niger']\", \"SELECT['nigeria']\", \"FILTER['#1', 'that flows through #2']\", \"FILTER['#1', 'that flows through #3']\", \"FILTER['#1', 'that flows through #4']\", \"INTERSECTION['#1', '#5', '#6']\", \"INTERSECTION['#1', '#8', '#7']\"]"}
{"id": "COMQA_dev_cluster-2656-1", "input": "who is the winner of first filmfare best actor award?", "output": "[\"SELECT['filmfare best actor awards']\", \"AGGREGATE['min', '#1']\", \"PROJECT['winner of #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-2665-1", "input": "when will the 8th book of the house of night series come out?", "output": "[\"SELECT['the house of night series']\", \"PROJECT['books of #REF', '#1']\", \"PROJECT['8th of #REF', '#2']\", \"PROJECT['date that #REF will come out', '#3']\"]"}
{"id": "COMQA_dev_cluster-2673-1", "input": "what is the principal religion of russia?", "output": "[\"SELECT['russia']\", \"PROJECT['principal religion of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-2681-1", "input": "when did the first super man come out?", "output": "[\"SELECT['super man did come out']\", \"PROJECT['when was #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-2687-1", "input": "what was neil armstrong's wife?", "output": "[\"SELECT['neil armstrong']\", \"PROJECT['wife of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-2696-1", "input": "what day did albert namatjira die?", "output": "[\"SELECT['albert namatjira die']\", \"PROJECT['day of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-2700-1", "input": "what is the name of macaulay culkin character in home alone?", "output": "[\"SELECT['macaulay culkin']\", \"PROJECT['characters of #REF', '#1']\", \"FILTER['#2', 'in home alone']\", \"PROJECT['name of #REF', '#3']\"]"}
{"id": "COMQA_dev_cluster-2700-2", "input": "macaulay culkin's character in home alone?", "output": "[\"SELECT['macaulay culkin']\", \"PROJECT['character of #REF', '#1']\", \"FILTER['#2', 'in home alone']\"]"}
{"id": "COMQA_dev_cluster-2711-1", "input": "when did brazil gain it's independence?", "output": "[\"SELECT['brazil gain it s independence']\", \"PROJECT['date of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-2720-1", "input": "what was vera lynn's husband called?", "output": "[\"SELECT['vera lynn']\", \"PROJECT['husband of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-2721-1", "input": "when did cristiano ronaldo last play for manchester?", "output": "[\"SELECT['cristiano ronaldo plays for manchester']\", \"PROJECT['date of #REF', '#1']\", \"AGGREGATE['max', '#2']\"]"}
{"id": "COMQA_dev_cluster-2724-1", "input": "when did firework by katy perry come out?", "output": "[\"SELECT['firework by katy perry come out']\", \"PROJECT['date of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-2728-1", "input": "which country produces the most rice?", "output": "[\"SELECT['countries']\", \"PROJECT['rice that #REF produces', '#1']\", \"SUPERLATIVE['max', '#1', '#2']\"]"}
{"id": "COMQA_dev_cluster-273-1", "input": "what areas of california have the greatest population?", "output": "[\"SELECT['california']\", \"PROJECT['areas of #REF', '#1']\", \"PROJECT['population of #REF', '#2']\", \"SUPERLATIVE['max', '#2', '#3']\"]"}
{"id": "COMQA_dev_cluster-2731-1", "input": "richard grenville when was he born?", "output": "[\"SELECT['richard grenville was born']\", \"PROJECT['date of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-2736-1", "input": "what the smallest state in the united states?", "output": "[\"SELECT['the united states']\", \"PROJECT['states of #REF', '#1']\", \"PROJECT['size of #REF', '#2']\", \"SUPERLATIVE['min', '#2', '#3']\"]"}
{"id": "COMQA_dev_cluster-2745-1", "input": "what is colombia next to?", "output": "[\"SELECT['colombia']\", \"PROJECT['what is #REF next to', '#1']\"]"}
{"id": "COMQA_dev_cluster-2748-1", "input": "when did crispus he die?", "output": "[\"SELECT['crispus die']\", \"PROJECT['date of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-2750-1", "input": "what year was peyton born in?", "output": "[\"SELECT['peyton was born']\", \"PROJECT['year of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-275-1", "input": "what river originates in the himalayan mountains?", "output": "[\"SELECT['the himalayan mountains']\", \"PROJECT['river that originates in #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-2757-1", "input": "what is the second highest mountain in britain?", "output": "[\"SELECT['britain']\", \"PROJECT['mountains of #REF', '#1']\", \"PROJECT['height of #REF', '#2']\", \"SUPERLATIVE['max', '#2', '#3']\", \"DISCARD['#2', '#4']\", \"SUPERLATIVE['max', '#5', '#3']\"]"}
{"id": "COMQA_dev_cluster-2757-2", "input": "what is the 2nd highest mountain in britain?", "output": "[\"SELECT['britain']\", \"PROJECT['mountains of #REF', '#1']\", \"AGGREGATE['max', '#2']\", \"DISCARD['#2', '#3']\", \"AGGREGATE['max', '#4']\"]"}
{"id": "COMQA_dev_cluster-2760-1", "input": "what language does the myanmars speak?", "output": "[\"SELECT['myanmar']\", \"PROJECT['language of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-2799-1", "input": "what is the most recent wars in israel?", "output": "[\"SELECT['israel']\", \"PROJECT['wars of #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is the highest']\"]"}
{"id": "COMQA_dev_cluster-2804-1", "input": "what is the population of erie county in new york state?", "output": "[\"SELECT['the state new york']\", \"PROJECT['erie county of #REF', '#1']\", \"PROJECT['population of #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-28-1", "input": "what european country touches portugal and france?", "output": "[\"SELECT['european country']\", \"SELECT['portugal']\", \"SELECT['france']\", \"FILTER['#1', 'that touches #2']\", \"FILTER['#1', 'that touches #3']\", \"INTERSECTION['#1', '#4', '#5']\"]"}
{"id": "COMQA_dev_cluster-2810-1", "input": "which team won the 2010 f1 world championship?", "output": "[\"SELECT['the 2010 f1 world championship']\", \"PROJECT['team that won #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-281-1", "input": "where did king lowis xiv die?", "output": "[\"SELECT['king lowis xiv']\", \"PROJECT['where did #REF die', '#1']\"]"}
{"id": "COMQA_dev_cluster-2815-1", "input": "what year was the 25th amendment used?", "output": "[\"SELECT['the 25th amendment was used']\", \"PROJECT['year of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-28-2", "input": "which european country that starts with an s touches portugal and france?", "output": "[\"SELECT['european country']\", \"FILTER['#1', 'that starts with an s']\", \"SELECT['portugal']\", \"SELECT['france']\", \"FILTER['#2', 'that touches #3']\", \"FILTER['#2', 'that touches #4']\", \"INTERSECTION['#2', '#5', '#6']\"]"}
{"id": "COMQA_dev_cluster-282-1", "input": "what is the largest city in romania?", "output": "[\"SELECT['romania']\", \"PROJECT['cities of #REF', '#1']\", \"PROJECT['size of #REF', '#2']\", \"SUPERLATIVE['max', '#2', '#3']\"]"}
{"id": "COMQA_dev_cluster-282-2", "input": "what is the biggest city in romania?", "output": "[\"SELECT['romania']\", \"PROJECT['cities of #REF', '#1']\", \"PROJECT['size of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is the highest']\"]"}
{"id": "COMQA_dev_cluster-2827-1", "input": "what are major lakes in new mexico?", "output": "[\"SELECT['new mexico']\", \"PROJECT['major lakes of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-2829-1", "input": "who was the first person who invented the phone?", "output": "[\"SELECT['the phone']\", \"PROJECT['people that invented #REF', '#1']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "COMQA_dev_cluster-28-3", "input": "what european country borders portrugal and france?", "output": "[\"SELECT['european country']\", \"SELECT['portrugal']\", \"SELECT['france']\", \"FILTER['#1', 'that borders #2']\", \"FILTER['#1', 'that borders #3']\", \"INTERSECTION['#1', '#4', '#5']\"]"}
{"id": "COMQA_dev_cluster-283-1", "input": "which nba team did blake griffin go to?", "output": "[\"SELECT['blake griffin']\", \"PROJECT['nba team of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-283-2", "input": "what team does blake griffin play for?", "output": "[\"SELECT['blake griffin']\", \"PROJECT['team of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-2835-1", "input": "what country was ferdinand magellan born in?", "output": "[\"SELECT['ferdinand magellan']\", \"PROJECT['country born in of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-2835-2", "input": "ferdinand magellan born in which country?", "output": "[\"SELECT['ferdinand magellan']\", \"PROJECT['country born in of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-2835-3", "input": "what is home country of ferdinand magellan?", "output": "[\"SELECT['ferdinand magellan']\", \"PROJECT['home country of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-2843-1", "input": "what was one of thomas edisons great inventions?", "output": "[\"SELECT['thomas edison']\", \"PROJECT['great inventions of #REF', '#1']\", \"PROJECT['one of #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-2845-1", "input": "what was ozzy osbournes first job?", "output": "[\"SELECT['ozzy osbourne']\", \"PROJECT['jobs of #REF', '#1']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "COMQA_dev_cluster-2853-1", "input": "when was ashley risdale born?", "output": "[\"SELECT['ashley risdale']\", \"PROJECT['when was #REF born', '#1']\"]"}
{"id": "COMQA_dev_cluster-2874-1", "input": "what other state or oceans border georgia?", "output": "[\"SELECT['georgia']\", \"SELECT['states']\", \"SELECT['oceans']\", \"FILTER['#2', 'that border #1']\", \"FILTER['#3', 'that border #1']\", \"UNION['#4', '#5']\"]"}
{"id": "COMQA_dev_cluster-2883-1", "input": "what is india population at present?", "output": "[\"SELECT['india']\", \"PROJECT['population of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-2885-1", "input": "what is the sea between sweden and russia?", "output": "[\"SELECT['sea']\", \"SELECT['sweden']\", \"SELECT['russia']\", \"INTERSECTION['#1', '#2', '#3']\"]"}
{"id": "COMQA_dev_cluster-2904-1", "input": "what is the largest mountain range in the united states?", "output": "[\"SELECT['the united states']\", \"PROJECT['mountain ranges of #REF', '#1']\", \"PROJECT['size of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is the largest']\"]"}
{"id": "COMQA_dev_cluster-2916-1", "input": "who was abigail adams's father?", "output": "[\"SELECT['abigail adams']\", \"PROJECT['father of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-2919-1", "input": "what is robert pattisons first film?", "output": "[\"SELECT['robert pattison']\", \"PROJECT['films of #REF', '#1']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "COMQA_dev_cluster-2919-2", "input": "what was robert patisons 1st film?", "output": "[\"SELECT['robert patison']\", \"PROJECT['films of #REF', '#1']\", \"PROJECT['1st of #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-2920-1", "input": "what actor played the role of luigi in the live action version of the super mario brothers?", "output": "[\"SELECT['super mario brothers']\", \"PROJECT['the live action version of #REF', '#1']\", \"PROJECT['luigi in #REF', '#2']\", \"PROJECT['actor of #REF', '#3']\"]"}
{"id": "COMQA_dev_cluster-2935-1", "input": "which river is in northern india?", "output": "[\"SELECT['northern india']\", \"PROJECT['river of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-2960-1", "input": "what was the first space shuttle to fly?", "output": "[\"SELECT['space shuttles']\", \"AGGREGATE['min', '#1']\"]"}
{"id": "COMQA_dev_cluster-2966-1", "input": "witch country is located on the border between france and spain?", "output": "[\"SELECT['country']\", \"SELECT['france']\", \"SELECT['spain']\", \"FILTER['#1', '#REF that is located on the border']\", \"INTERSECTION['#4', '#2', '#3']\"]"}
{"id": "COMQA_dev_cluster-297-1", "input": "where was janice joplin when she died?", "output": "[\"SELECT['janice joplin']\", \"PROJECT['where did #REF die', '#1']\"]"}
{"id": "COMQA_dev_cluster-2971-1", "input": "what language do icelanders speak?", "output": "[\"SELECT['icelanders']\", \"PROJECT['language of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-2999-1", "input": "what was his first wife's name dr seuss?", "output": "[\"SELECT['dr seuss']\", \"PROJECT['wives of #REF', '#1']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "COMQA_dev_cluster-3008-1", "input": "what planet has the second hottest temperature?", "output": "[\"SELECT['planets']\", \"PROJECT['temperatures of #REF', '#1']\", \"SUPERLATIVE['max', '#1', '#2']\", \"DISCARD['#1', '#3']\", \"PROJECT['temperature of #REF', '#4']\", \"SUPERLATIVE['max', '#4', '#5']\"]"}
{"id": "COMQA_dev_cluster-30-1", "input": "which actor plays jason carmens boyfriend on goerge lopez?", "output": "[\"SELECT['goerge lopez']\", \"PROJECT['jason carmen of #REF', '#1']\", \"PROJECT['boyfriend of #REF', '#2']\", \"PROJECT['actor that plays #REF', '#3']\"]"}
{"id": "COMQA_dev_cluster-301-1", "input": "who was mariah carey married to?", "output": "[\"SELECT['mariah carey']\", \"PROJECT['who was #REF married to', '#1']\"]"}
{"id": "COMQA_dev_cluster-3025-1", "input": "what state is alabama university in?", "output": "[\"SELECT['alabama university']\", \"PROJECT['the state of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-3028-1", "input": "what year did white revolution of india start?", "output": "[\"SELECT['the white revolution of india starts']\", \"PROJECT['year of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-3028-2", "input": "in which year the white revolution in india started?", "output": "[\"SELECT['india']\", \"PROJECT['white revolution of #REF', '#1']\", \"PROJECT['when #REF started', '#2']\", \"PROJECT['year of #REF', '#3']\"]"}
{"id": "COMQA_dev_cluster-3039-1", "input": "where was the soccer world cup held in 1998?", "output": "[\"SELECT['the soccer world cup']\", \"PROJECT['where was #REF held in 1998', '#1']\"]"}
{"id": "COMQA_dev_cluster-3057-1", "input": "what is the desert that crosses botswana and south africa?", "output": "[\"SELECT['botswana']\", \"SELECT['south africa']\", \"PROJECT['desert that crosses #REF', '#1']\", \"PROJECT['desert that crosses #REF', '#2']\", \"SELECT['desert']\", \"INTERSECTION['#5', '#3', '#4']\"]"}
{"id": "COMQA_dev_cluster-3058-1", "input": "what does the currency of greenland look like?", "output": "[\"SELECT['greenland']\", \"PROJECT['currency of #REF', '#1']\", \"PROJECT['what does #REF look like', '#2']\"]"}
{"id": "COMQA_dev_cluster-3058-2", "input": "what is greenland currency?", "output": "[\"SELECT['greenland']\", \"PROJECT['currency of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-3083-1", "input": "what was the first film julie andrews starred in?", "output": "[\"SELECT['julie andrews']\", \"PROJECT['films of #REF', '#1']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "COMQA_dev_cluster-3089-1", "input": "who is frank lucas son mother?", "output": "[\"SELECT['frank lucas']\", \"PROJECT['son of #REF', '#1']\", \"PROJECT['mother of #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-3-1", "input": "capital city of the european country portugal?", "output": "[\"SELECT['portugal']\", \"PROJECT['capital city of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-31-1", "input": "who is ron howards brother?", "output": "[\"SELECT['ron howard']\", \"PROJECT['brother of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-3120-1", "input": "richard gere and julia roberts starred in pretty woman and?", "output": "[\"SELECT['richard gere']\", \"SELECT['julia roberts']\", \"PROJECT['what did #REF star in', '#1']\", \"PROJECT['what did #REF star in', '#2']\", \"SELECT['what']\", \"INTERSECTION['#5', '#3', '#4']\", \"SELECT['pretty woman']\", \"DISCARD['#6', '#7']\"]"}
{"id": "COMQA_dev_cluster-312-1", "input": "what is the official language of the netherland?", "output": "[\"SELECT['netherland']\", \"PROJECT['official language of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-312-2", "input": "languages of netherlands?", "output": "[\"SELECT['netherlands']\", \"PROJECT['languages of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-3166-1", "input": "which brother died out of jackson 6?", "output": "[\"SELECT['jackson 6']\", \"PROJECT['brother of #REF', '#1']\", \"FILTER['#2', 'that died']\"]"}
{"id": "COMQA_dev_cluster-3176-1", "input": "what type of saxophone does lisa simpson play?", "output": "[\"SELECT['lisa simpson']\", \"PROJECT['type of saxophone that #REF plays', '#1']\"]"}
{"id": "COMQA_dev_cluster-3189-1", "input": "when did charles darwin die and be born?", "output": "[\"SELECT['charles darwin']\", \"PROJECT['when did #REF die', '#1']\", \"PROJECT['when did #REF born', '#1']\", \"UNION['#2', '#3']\"]"}
{"id": "COMQA_dev_cluster-3-2", "input": "what is the capital of portugal?", "output": "[\"SELECT['portugal']\", \"PROJECT['capital of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-32-1", "input": "where in germany was the composer ludwig van beethoven born?", "output": "[\"SELECT['the composer ludwig van beethoven']\", \"PROJECT['where in germany was #REF born', '#1']\"]"}
{"id": "COMQA_dev_cluster-321-1", "input": "what part of canadia is justin bieber?", "output": "[\"SELECT['justin bieber']\", \"PROJECT['what part of canadia is #REF from', '#1']\"]"}
{"id": "COMQA_dev_cluster-3214-1", "input": "when did sebastian viscaino die?", "output": "[\"SELECT['sebastian viscaino die']\", \"PROJECT['date of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-32-2", "input": "where was ludwig beethoven born?", "output": "[\"SELECT['ludwig beethoven was born']\", \"PROJECT['where was #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-3222-1", "input": "what school did eli manning graduate high school from?", "output": "[\"SELECT['eli manning']\", \"PROJECT['high school that #REF graduate from', '#1']\"]"}
{"id": "COMQA_dev_cluster-3222-2", "input": "which high school did eli manning go to?", "output": "[\"SELECT['eli manning']\", \"PROJECT['high school of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-3227-1", "input": "what is the smallest country in the greater antilles?", "output": "[\"SELECT['the greater antilles']\", \"PROJECT['countries of #REF', '#1']\", \"PROJECT['size of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is the smallest']\"]"}
{"id": "COMQA_dev_cluster-3232-1", "input": "current names of nigeria ministers?", "output": "[\"SELECT['nigeria']\", \"PROJECT['ministers of #REF', '#1']\", \"PROJECT['names of #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-326-1", "input": "where did diana and prince charles marry?", "output": "[\"SELECT['diana and prince charles marry']\", \"PROJECT['where was #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-3265-1", "input": "first battle between the us and germany?", "output": "[\"SELECT['the us']\", \"SELECT['germany']\", \"SELECT['battles']\", \"INTERSECTION['#3', '#1', '#2']\", \"PROJECT['date of #REF', '#4']\", \"COMPARATIVE['#4', '#5', 'is the lowest']\"]"}
{"id": "COMQA_dev_cluster-3266-1", "input": "who is the president of south africa?", "output": "[\"SELECT['south africa']\", \"PROJECT['the president of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-3267-1", "input": "when did bing crosby die in?", "output": "[\"SELECT['bing crosby']\", \"PROJECT['when did #REF die', '#1']\"]"}
{"id": "COMQA_dev_cluster-3275-3", "input": "what borders brazil argentina and bolivia?", "output": "[\"SELECT['brazil']\", \"SELECT['argentina']\", \"SELECT['bolivia']\", \"PROJECT['what borders #REF', '#1']\", \"PROJECT['what borders #REF', '#2']\", \"PROJECT['what borders #REF', '#3']\", \"SELECT['what is']\", \"INTERSECTION['#7', '#4', '#5']\", \"SELECT['what is']\", \"INTERSECTION['#9', '#6', '#8']\"]"}
{"id": "COMQA_dev_cluster-3284-1", "input": "what is sean paul?", "output": "[\"SELECT['sean paul']\", \"PROJECT['who is #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-3289-1", "input": "who was the first vice president of india?", "output": "[\"SELECT['india']\", \"PROJECT['vice presidents of #REF', '#1']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "COMQA_dev_cluster-329-1", "input": "what is the place of worship for daoism and what is a sacred place?", "output": "[\"SELECT['daoism']\", \"PROJECT['place of worship of #REF', '#1']\", \"PROJECT['sacred place of #REF', '#1']\", \"UNION['#2', '#3']\"]"}
{"id": "COMQA_dev_cluster-3303-1", "input": "for what film did marlon brando win his first oscar?", "output": "[\"SELECT['marlon brando']\", \"PROJECT['oscars of #REF', '#1']\", \"AGGREGATE['min', '#2']\", \"PROJECT['film of #REF', '#3']\"]"}
{"id": "COMQA_dev_cluster-3320-1", "input": "who was first governor of india?", "output": "[\"SELECT['india']\", \"PROJECT['governor of #REF', '#1']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "COMQA_dev_cluster-3326-1", "input": "what large body of water surrounds the east side of texas?", "output": "[\"SELECT['texas']\", \"PROJECT['east side of #REF', '#1']\", \"SELECT['body of water']\", \"FILTER['#3', 'that is large']\", \"FILTER['#4', 'that surrounds #2']\"]"}
{"id": "COMQA_dev_cluster-3327-1", "input": "when did the nz all blacks first play?", "output": "[\"SELECT['nz all blacks play']\", \"PROJECT['when was #REF', '#1']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "COMQA_dev_cluster-3329-1", "input": "what was michael jacksons first album out?", "output": "[\"SELECT['michael jackson']\", \"PROJECT['album of #REF', '#1']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "COMQA_dev_cluster-3338-1", "input": "who is the first african american to win nobel prize?", "output": "[\"SELECT['the nobel prize']\", \"PROJECT['who win #REF', '#1']\", \"FILTER['#2', 'that is african american']\", \"AGGREGATE['min', '#3']\"]"}
{"id": "COMQA_dev_cluster-3343-1", "input": "which ocean is on the us eastern border?", "output": "[\"SELECT['us']\", \"PROJECT['eastern border of #REF', '#1']\", \"PROJECT['ocean on #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-3350-1", "input": "what mountain range separates the siberian peninsula from the rest of europe?", "output": "[\"SELECT['mountain range']\", \"SELECT['the siberian peninsula']\", \"SELECT['europe']\", \"DISCARD['#3', '#2']\", \"FILTER['#1', 'that separates #2 from #4']\"]"}
{"id": "COMQA_dev_cluster-3350-3", "input": "which mountain range isolates the siberian peninsula from europe?", "output": "[\"SELECT['mountain ranges']\", \"SELECT['the siberian peninsula']\", \"SELECT['europe']\", \"FILTER['#1', 'that isolates #2 from #3']\"]"}
{"id": "COMQA_dev_cluster-335-1", "input": "what is the name of james maslow's mother?", "output": "[\"SELECT['james maslow']\", \"PROJECT['the mother of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-3353-1", "input": "what was the ship charles darwin took?", "output": "[\"SELECT['charles darwin']\", \"PROJECT['ship that #REF took', '#1']\"]"}
{"id": "COMQA_dev_cluster-336-1", "input": "what was mahatma gandhi occupation?", "output": "[\"SELECT['mahatma gandhi']\", \"PROJECT['occupation of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-3362-1", "input": "what other languages does spain speak besides spanish?", "output": "[\"SELECT['spain']\", \"PROJECT['languages of #REF', '#1']\", \"SELECT['spanish']\", \"DISCARD['#2', '#3']\"]"}
{"id": "COMQA_dev_cluster-337-1", "input": "what books did theodore roosevelt publish?", "output": "[\"SELECT['theodore roosevelt']\", \"PROJECT['books of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-3377-1", "input": "what state is the west of new hampshire and east of new york?", "output": "[\"SELECT['states']\", \"SELECT['new hampshire']\", \"SELECT['new york']\", \"FILTER['#1', 'west of #2']\", \"FILTER['#1', 'east of #3']\", \"INTERSECTION['#1', '#4', '#5']\"]"}
{"id": "COMQA_dev_cluster-338-1", "input": "which ocean borders kenya?", "output": "[\"SELECT['kenya']\", \"PROJECT['ocean that borders #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-3382-1", "input": "who was born in california that is famous?", "output": "[\"SELECT['california']\", \"PROJECT['who was born in #REF', '#1']\", \"FILTER['#2', 'that is famous']\"]"}
{"id": "COMQA_dev_cluster-3439-1", "input": "what year did settlers arrive to australia?", "output": "[\"SELECT['settlers arrive to australia']\", \"PROJECT['year of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-345-1", "input": "what country has the largest area in the western north america?", "output": "[\"SELECT['the western north america']\", \"PROJECT['countries of #REF', '#1']\", \"PROJECT['areas of #REF', '#2']\", \"PROJECT['size of #REF', '#3']\", \"SUPERLATIVE['max', '#2', '#4']\"]"}
{"id": "COMQA_dev_cluster-345-2", "input": "what country has the largest land area in western land area?", "output": "[\"SELECT['countries']\", \"PROJECT['land area of #REF', '#1']\", \"FILTER['#2', 'that is western']\", \"COMPARATIVE['#1', '#3', 'is the largest']\"]"}
{"id": "COMQA_dev_cluster-3454-1", "input": "when is justine jones simmons birthday?", "output": "[\"SELECT['justine jones simmons']\", \"PROJECT['birthday of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-346-1", "input": "what city in regarded as the capital of the eu?", "output": "[\"SELECT['the eu']\", \"PROJECT['capital city of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-3476-1", "input": "who are jason aldean's stepbrothers and sister?", "output": "[\"SELECT['jason aldean']\", \"PROJECT['stepbrothers of #REF', '#1']\", \"PROJECT['sister of #REF', '#1']\", \"UNION['#2', '#3']\"]"}
{"id": "COMQA_dev_cluster-3497-1", "input": "who was brazil's independence declared by in 1822?", "output": "[\"SELECT['brazil']\", \"PROJECT['independence of #REF', '#1']\", \"FILTER['#2', 'in 1822']\", \"PROJECT['who declared #REF', '#3']\"]"}
{"id": "COMQA_dev_cluster-351-1", "input": "what city in illinois does michael jordan?", "output": "[\"SELECT['illinois']\", \"PROJECT['city of #REF', '#1']\", \"FILTER['#2', 'that michael jordan is in']\"]"}
{"id": "COMQA_dev_cluster-3522-1", "input": "when was the first melbourne cup ever held?", "output": "[\"SELECT['melbourne cups']\", \"PROJECT['date of #REF', '#1']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "COMQA_dev_cluster-3530-1", "input": "what are dave matthews album names?", "output": "[\"SELECT['dave matthews']\", \"PROJECT['album of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-3548-1", "input": "where did bo jackson go to college?", "output": "[\"SELECT['bo jackson']\", \"PROJECT['college of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-355-1", "input": "who were george bush sr children?", "output": "[\"SELECT['george bush sr']\", \"PROJECT['children of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-355-2", "input": "who are the kids of george w bush?", "output": "[\"SELECT['george w bush']\", \"PROJECT['kids of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-355-3", "input": "what is george w bush's children?", "output": "[\"SELECT['george w bush']\", \"PROJECT['children of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-3565-1", "input": "what is the current human population of japan?", "output": "[\"SELECT['japan']\", \"PROJECT['human population of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-3565-2", "input": "what was the current population of japan?", "output": "[\"SELECT['japan']\", \"PROJECT['population of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-3577-1", "input": "what is north las vegas population?", "output": "[\"SELECT['north las vegas']\", \"PROJECT['population of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-3577-2", "input": "what is the population of north las vegas nevada?", "output": "[\"SELECT['north las vegas nevada']\", \"PROJECT['population of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-3580-1", "input": "what movies has anthony hopkins starred in?", "output": "[\"SELECT['anthony hopkins']\", \"PROJECT['movies of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-3584-1", "input": "what country is fred perry's headquarters?", "output": "[\"SELECT['fred perry']\", \"PROJECT['headquarters of #REF', '#1']\", \"PROJECT['country of #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-359-1", "input": "what is jackie kennedy's daughters name?", "output": "[\"SELECT['jackie kennedy']\", \"PROJECT['daughters of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-3597-1", "input": "when was roberto clemente drafted to the pirates?", "output": "[\"SELECT['roberto clemente']\", \"PROJECT['date that #REF drafted to the pirates', '#1']\"]"}
{"id": "COMQA_dev_cluster-3597-2", "input": "when did roberto join the pirates?", "output": "[\"SELECT['roberto']\", \"SELECT['the pirates']\", \"FILTER['#1', 'did join #2']\", \"PROJECT['when was #REF', '#3']\"]"}
{"id": "COMQA_dev_cluster-3597-3", "input": "when did roberto clemente get drafted on the pittsburgh pirates?", "output": "[\"SELECT['roberto clemente was drafted to the pittsburgh pirates']\", \"PROJECT['date of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-3605-1", "input": "what year was david robinson basketball player born?", "output": "[\"SELECT['david robinson basketball player']\", \"PROJECT['year that #REF was born', '#1']\"]"}
{"id": "COMQA_dev_cluster-3605-2", "input": "when was dave robinson born?", "output": "[\"SELECT['dave robinson was born']\", \"PROJECT['date of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-36-1", "input": "win did the cowboys win a superbowl?", "output": "[\"SELECT['the cowboys']\", \"PROJECT['superbowl wins of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at least one']\"]"}
{"id": "COMQA_dev_cluster-361-1", "input": "what was singer buddy holly's hometown?", "output": "[\"SELECT['singer']\", \"FILTER['#1', 'that is buddy holly']\", \"PROJECT['hometown of #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-36-2", "input": "when did the dalles cowboys win the super bowl?", "output": "[\"SELECT['the dalles cowboys win the super bowl']\", \"PROJECT['date of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-3623-1", "input": "when did karl friedrich benz invent the first car?", "output": "[\"SELECT['karl friedrich benz invents the first car']\", \"PROJECT['date of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-3627-1", "input": "when did neil armstrong and his wife divorce?", "output": "[\"SELECT['neil armstrong and his wife divorce']\", \"PROJECT['when was #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-3652-1", "input": "what age did jane seymour die?", "output": "[\"SELECT['jane seymour']\", \"PROJECT['what age did #REF die', '#1']\"]"}
{"id": "COMQA_dev_cluster-3668-1", "input": "who was the 1 born in the jackson 5?", "output": "[\"SELECT['jackson 5']\", \"PROJECT['date born of #REF', '#1']\", \"SUPERLATIVE['min', '#1', '#2']\"]"}
{"id": "COMQA_dev_cluster-3686-1", "input": "which films are nominated for the oscar for best picture in 2009?", "output": "[\"SELECT['the oscar for best picture']\", \"PROJECT['nominated films of #REF', '#1']\", \"FILTER['#2', 'in 2009']\"]"}
{"id": "COMQA_dev_cluster-370-1", "input": "what was harry s truman job before becoming president?", "output": "[\"SELECT['harry s truman']\", \"PROJECT['job of #REF', '#1']\", \"PROJECT['when did #REF become president', '#1']\", \"FILTER['#2', 'before #3']\"]"}
{"id": "COMQA_dev_cluster-370-2", "input": "what did harry s truman job before president?", "output": "[\"SELECT['harry s truman']\", \"PROJECT['jobs of #REF', '#1']\", \"FILTER['#2', 'before president']\"]"}
{"id": "COMQA_dev_cluster-37-2", "input": "russia's three biggest cities?", "output": "[\"SELECT['russia']\", \"PROJECT['cities of #REF', '#1']\", \"PROJECT['size of #REF', '#2']\", \"SUPERLATIVE['max', '#2', '#3']\", \"DISCARD['#2', '#4']\", \"SUPERLATIVE['max', '#5', '#3']\", \"DISCARD['#5', '#6']\", \"SUPERLATIVE['max', '#7', '#3']\", \"UNION['#4', '#6', '#8']\"]"}
{"id": "COMQA_dev_cluster-372-2", "input": "which two states border georgia virginia and the atlantic ocean?", "output": "[\"SELECT['georgia']\", \"SELECT['virginia']\", \"SELECT['border states']\", \"INTERSECTION['#3', '#1', '#2']\", \"SELECT['the atlantic ocean']\", \"FILTER['#4', 'that border #5']\"]"}
{"id": "COMQA_dev_cluster-3728-1", "input": "who helps miley cyrus write her songs?", "output": "[\"SELECT['miley cyrus']\", \"PROJECT['songs of #REF', '#1']\", \"PROJECT['who helps to write #REF', '#2']\", \"DISCARD['#3', '#1']\"]"}
{"id": "COMQA_dev_cluster-373-1", "input": "who was janet jackson's first husband?", "output": "[\"SELECT['janet jackson']\", \"PROJECT['husbands of #REF', '#1']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "COMQA_dev_cluster-375-1", "input": "what element is named after niels bohr?", "output": "[\"SELECT['niels bohr']\", \"PROJECT['element that is named after #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-3765-1", "input": "what was the first battle between the us and the germans in world war 2?", "output": "[\"SELECT['the us']\", \"SELECT['the germans']\", \"SELECT['battles']\", \"INTERSECTION['#3', '#1', '#2']\", \"FILTER['#4', 'in world war 2']\", \"AGGREGATE['min', '#5']\"]"}
{"id": "COMQA_dev_cluster-3775-1", "input": "designer of the american flag?", "output": "[\"SELECT['the american flag']\", \"PROJECT['designer of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-3779-1", "input": "what team does wayne rooney play 4?", "output": "[\"SELECT['wayne rooney']\", \"PROJECT['team of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-381-1", "input": "who was the character robert shaw played in the film jaws?", "output": "[\"SELECT['the film jaws']\", \"SELECT['robert shaw']\", \"PROJECT['characters of #REF', '#1']\", \"FILTER['#3', 'that #2 played']\"]"}
{"id": "COMQA_dev_cluster-3811-2", "input": "who was on the 1988 university of arizona basketball roster?", "output": "[\"SELECT['university of arizona']\", \"FILTER['#1', 'in 1988']\", \"PROJECT['basketball roster of #REF', '#2']\", \"PROJECT['who was on #REF', '#3']\"]"}
{"id": "COMQA_dev_cluster-3811-3", "input": "roster for university of arizona mens basketball team in 1988?", "output": "[\"SELECT['university of arizona']\", \"PROJECT['mens basketball roster of #REF', '#1']\", \"FILTER['#2', 'in 1988']\"]"}
{"id": "COMQA_dev_cluster-381-2", "input": "robert shaw portrayed what colorful charter in jaws?", "output": "[\"SELECT['robert shaw']\", \"PROJECT['charter of #REF', '#1']\", \"FILTER['#2', 'in jaws']\", \"FILTER['#3', 'that is colorful']\"]"}
{"id": "COMQA_dev_cluster-382-1", "input": "where alfred wegener was born?", "output": "[\"SELECT['alfred wegener']\", \"PROJECT['where was #REF born', '#1']\"]"}
{"id": "COMQA_dev_cluster-382-2", "input": "where was alfred wegener born?", "output": "[\"SELECT['alfred wegener']\", \"PROJECT['where was #REF born', '#1']\"]"}
{"id": "COMQA_dev_cluster-3857-1", "input": "us president's during vietnam war?", "output": "[\"SELECT['us']\", \"PROJECT['presidents of #REF', '#1']\", \"SELECT['vietnam war']\", \"FILTER['#2', 'that are during #3']\"]"}
{"id": "COMQA_dev_cluster-3861-1", "input": "in what year did jane addams win the nobel peace prize?", "output": "[\"SELECT['jane addams win the nobel peace prize']\", \"PROJECT['year of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-3861-2", "input": "when did jane addams receive the noble peace prize?", "output": "[\"SELECT['jane addams']\", \"PROJECT['when did #REF receive the noble peace prize', '#1']\"]"}
{"id": "COMQA_dev_cluster-3862-1", "input": "what are the five major cities of poland?", "output": "[\"SELECT['poland']\", \"PROJECT['the five major cities of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-387-1", "input": "what was george h w bush's education?", "output": "[\"SELECT['george h w bush']\", \"PROJECT['education of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-3881-1", "input": "who launched the first space station?", "output": "[\"SELECT['space stations']\", \"AGGREGATE['min', '#1']\", \"PROJECT['who launched #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-3904-1", "input": "what kind of food turkey europe eats?", "output": "[\"SELECT['turkey']\", \"PROJECT['kinds of foods of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-3922-1", "input": "what is the longest river in northern ireland?", "output": "[\"SELECT['northern ireland']\", \"PROJECT['rivers of #REF', '#1']\", \"PROJECT['the size of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is the longest']\"]"}
{"id": "COMQA_dev_cluster-3953-1", "input": "who did george hw bush go against during his election?", "output": "[\"SELECT['george hw bush']\", \"PROJECT['who did #REF go against', '#1']\", \"FILTER['#2', 'during his election']\"]"}
{"id": "COMQA_dev_cluster-3966-1", "input": "who was the first president to run against a woman?", "output": "[\"SELECT['president']\", \"FILTER['#1', 'that did run against a woman']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "COMQA_dev_cluster-3967-1", "input": "what are india's largest cities and towns?", "output": "[\"SELECT['india']\", \"PROJECT['cities of #REF', '#1']\", \"PROJECT['towns of #REF', '#1']\", \"PROJECT['size of #REF', '#2']\", \"PROJECT['size of #REF', '#3']\", \"SUPERLATIVE['max', '#2', '#4']\", \"SUPERLATIVE['max', '#3', '#5']\", \"UNION['#6', '#7']\"]"}
{"id": "COMQA_dev_cluster-3968-1", "input": "what year was marmion by sir walter scott written?", "output": "[\"SELECT['marmion was written by sir walter scott']\", \"PROJECT['year of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-3969-1", "input": "who was the first african american woman to win the nobel peace prize?", "output": "[\"SELECT['the nobel peace prize']\", \"PROJECT['women that win #REF', '#1']\", \"FILTER['#2', 'that are african american']\", \"AGGREGATE['min', '#3']\"]"}
{"id": "COMQA_dev_cluster-3971-1", "input": "who invent jordan brand?", "output": "[\"SELECT['the jordan brand']\", \"PROJECT['who invent #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-3972-1", "input": "what was ike and tina turners first hit?", "output": "[\"SELECT['ike and tina turner']\", \"PROJECT['hit of #REF', '#1']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "COMQA_dev_cluster-3973-1", "input": "what is tenacious d first album?", "output": "[\"SELECT['tenacious d']\", \"PROJECT['album of #REF', '#1']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "COMQA_dev_cluster-3974-1", "input": "what country is sir richard grenville born?", "output": "[\"SELECT['sir richard grenville']\", \"PROJECT['where was #REF born', '#1']\", \"PROJECT['country of #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-3976-1", "input": "what is the latitude and latitude of port albany?", "output": "[\"SELECT['port albany']\", \"PROJECT['latitude of #REF', '#1']\", \"PROJECT['latitude of #REF', '#1']\", \"UNION['#2', '#3']\"]"}
{"id": "COMQA_dev_cluster-3977-1", "input": "what city was first capital of the us?", "output": "[\"SELECT['us']\", \"PROJECT['capitals of #REF', '#1']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "COMQA_dev_cluster-3977-2", "input": "what city was the first capital of the us?", "output": "[\"SELECT['the us']\", \"PROJECT['capital cities of #REF', '#1']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "COMQA_dev_cluster-3978-1", "input": "who did king arthur get married to?", "output": "[\"SELECT['king arthur']\", \"PROJECT['who married #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-3980-1", "input": "what years did henry ford's siblings live?", "output": "[\"SELECT['henry ford']\", \"PROJECT['siblings of #REF', '#1']\", \"PROJECT['when did #REF live', '#2']\", \"PROJECT['years of #REF', '#3']\"]"}
{"id": "COMQA_dev_cluster-3981-1", "input": "who is ella fitzgerald?", "output": "[\"SELECT['ella fitzgerald']\", \"PROJECT['who is #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-3982-1", "input": "who were demeter's brothers and sisters oldest to the youngest?", "output": "[\"SELECT['demeter']\", \"PROJECT['brothers of #REF', '#1']\", \"PROJECT['sisters of #REF', '#1']\", \"UNION['#2', '#3']\", \"PROJECT['youngness of #REF', '#4']\", \"SORT['#4', '#5']\"]"}
{"id": "COMQA_dev_cluster-3983-1", "input": "which actress is in movie sweet home alabama?", "output": "[\"SELECT['sweet home alabama']\", \"PROJECT['actress in #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-3984-1", "input": "the third largest island in japan?", "output": "[\"SELECT['japan']\", \"PROJECT['islands of #REF', '#1']\", \"PROJECT['size of #REF', '#2']\", \"AGGREGATE['max', '#3']\", \"COMPARATIVE['#2', '#3', 'is equal to #4']\"]"}
{"id": "COMQA_dev_cluster-3985-1", "input": "who was the first sbi manager?", "output": "[\"SELECT['sbi']\", \"PROJECT['managers of #REF', '#1']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "COMQA_dev_cluster-3986-1", "input": "who was frank lucas mother?", "output": "[\"SELECT['frank lucas']\", \"PROJECT['mother of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-3987-1", "input": "who won the asian cup in 2007?", "output": "[\"SELECT['asian cup']\", \"FILTER['#1', 'of 2007']\", \"PROJECT['who won #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-3989-1", "input": "who was the third party candidate from texas?", "output": "[\"SELECT['texas']\", \"PROJECT['candidates of #REF', '#1']\", \"FILTER['#2', 'that are third party']\"]"}
{"id": "COMQA_dev_cluster-3990-1", "input": "what was the name of adam and eve's son and daughter?", "output": "[\"SELECT['adam and eve']\", \"PROJECT['son of #REF', '#1']\", \"PROJECT['daughter of #REF', '#1']\", \"UNION['#2', '#3']\"]"}
{"id": "COMQA_dev_cluster-3991-1", "input": "with whom is nathan kress going out?", "output": "[\"SELECT['nathan kress']\", \"PROJECT['whom is #REF going out with', '#1']\"]"}
{"id": "COMQA_dev_cluster-3992-1", "input": "who did fabio capello manage before england?", "output": "[\"SELECT['fabio capello']\", \"SELECT['england']\", \"PROJECT['who did #REF manage', '#1']\", \"FILTER['#3', 'before #2']\"]"}
{"id": "COMQA_dev_cluster-3994-1", "input": "what is kenny chesneys wifes name?", "output": "[\"SELECT['kenny chesney']\", \"PROJECT['wifes of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-3995-1", "input": "when was the first orbiting space station?", "output": "[\"SELECT['orbiting space stations']\", \"AGGREGATE['min', '#1']\", \"PROJECT['when was #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-3996-1", "input": "who became president of south africa in 1889?", "output": "[\"SELECT['south africa']\", \"PROJECT['who became president of #REF', '#1']\", \"FILTER['#2', 'in 1889']\"]"}
{"id": "COMQA_dev_cluster-3997-1", "input": "what was the greatest prophet of islam?", "output": "[\"SELECT['islam']\", \"PROJECT['prophet of #REF', '#1']\", \"FILTER['#2', 'that is the greatest']\"]"}
{"id": "COMQA_dev_cluster-3998-1", "input": "according to the census of 1991 what was india's population?", "output": "[\"SELECT['india']\", \"PROJECT['population of #REF', '#1']\", \"FILTER['#2', 'in 1991']\"]"}
{"id": "COMQA_dev_cluster-3999-1", "input": "when did nebuchadnezzar the second die?", "output": "[\"SELECT['nebuchadnezzar the second die']\", \"PROJECT['date of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4000-1", "input": "where did elie wiesles father die?", "output": "[\"SELECT['elie wiesle']\", \"PROJECT['father of #REF', '#1']\", \"PROJECT['where did #REF die', '#2']\"]"}
{"id": "COMQA_dev_cluster-4001-1", "input": "what is the 2nd most largest mountain in the world?", "output": "[\"SELECT['the world']\", \"PROJECT['mountains of #REF', '#1']\", \"PROJECT['size of #REF', '#2']\", \"SUPERLATIVE['max', '#2', '#3']\", \"DISCARD['#2', '#4']\", \"PROJECT['size of #REF', '#5']\", \"SUPERLATIVE['max', '#5', '#6']\"]"}
{"id": "COMQA_dev_cluster-4002-1", "input": "who was the grandmother of lee's wife mary custis?", "output": "[\"SELECT['lee']\", \"PROJECT['wife of #REF', '#1']\", \"FILTER['#2', 'that was mary custis']\", \"PROJECT['grandmother of #REF', '#3']\"]"}
{"id": "COMQA_dev_cluster-4003-1", "input": "when was julian opie born?", "output": "[\"SELECT['julian opie']\", \"PROJECT['when was #REF born', '#1']\"]"}
{"id": "COMQA_dev_cluster-4003-2", "input": "what month was julian opie born?", "output": "[\"SELECT['julian opie']\", \"PROJECT['month born in of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4004-1", "input": "what address does jordan jansen live at?", "output": "[\"SELECT['jordan jansen']\", \"PROJECT['address of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4008-1", "input": "what is one of the mountains in washington state?", "output": "[\"SELECT['washington state']\", \"PROJECT['mountains of #REF', '#1']\", \"PROJECT['one of #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-4009-1", "input": "who was the third party candidate in 1992?", "output": "[\"SELECT['candidates']\", \"FILTER['#1', 'in 1992']\", \"FILTER['#2', 'that are third party']\"]"}
{"id": "COMQA_dev_cluster-4009-2", "input": "who ran for president in 1992 and 1996 as a third-party candidate?", "output": "[\"SELECT['who ran for president']\", \"FILTER['#1', 'as a third-party candidate']\", \"FILTER['#2', 'in 1992']\", \"FILTER['#2', 'in 1996']\", \"INTERSECTION['#2', '#3', '#4']\"]"}
{"id": "COMQA_dev_cluster-4010-1", "input": "who was king of england in 1782?", "output": "[\"SELECT['england']\", \"PROJECT['king of #REF', '#1']\", \"FILTER['#2', 'in 1782']\"]"}
{"id": "COMQA_dev_cluster-4011-1", "input": "what caused richard harris death?", "output": "[\"SELECT['richard harris']\", \"PROJECT['death of #REF', '#1']\", \"PROJECT['what caused #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-4012-1", "input": "what are the two major bodies of water in new mexico?", "output": "[\"SELECT['new mexico']\", \"PROJECT['major bodies of water of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4013-1", "input": "where did martin luther graduated from?", "output": "[\"SELECT['martin luther']\", \"PROJECT['from where did #REF graduated', '#1']\"]"}
{"id": "COMQA_dev_cluster-4015-1", "input": "what does danielle cambell star in?", "output": "[\"SELECT['danielle cambell']\", \"PROJECT['in what does #REF star', '#1']\"]"}
{"id": "COMQA_dev_cluster-4016-1", "input": "what is the second x men the movie called?", "output": "[\"SELECT['x men']\", \"PROJECT['movies of #REF', '#1']\", \"PROJECT['second of #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-4017-1", "input": "what movie did ben stiller direct?", "output": "[\"SELECT['ben stiller']\", \"PROJECT['movies #REF did direct', '#1']\"]"}
{"id": "COMQA_dev_cluster-4018-1", "input": "who is jason scot lee?", "output": "[\"SELECT['jason scot lee']\", \"PROJECT['who is #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4020-1", "input": "what is david beckham's profession?", "output": "[\"SELECT['david beckham']\", \"PROJECT['profession of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4021-1", "input": "what is the tallest masonry structure in the us?", "output": "[\"SELECT['us']\", \"PROJECT['masonry structures of #REF', '#1']\", \"PROJECT['tallness of #REF', '#2']\", \"SUPERLATIVE['max', '#2', '#3']\"]"}
{"id": "COMQA_dev_cluster-4022-1", "input": "what country is the most rice eaten?", "output": "[\"SELECT['countries']\", \"PROJECT['rice eaten of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"SUPERLATIVE['max', '#1', '#3']\"]"}
{"id": "COMQA_dev_cluster-4023-1", "input": "who is henrys viii second wife?", "output": "[\"SELECT['henrys viii']\", \"PROJECT['wives of #REF', '#1']\", \"PROJECT['second of #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-4024-1", "input": "what college did laurie halse anderson graduate from?", "output": "[\"SELECT['laurie halse anderson']\", \"PROJECT['college of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4025-1", "input": "who was the the first ever tudor king of england?", "output": "[\"SELECT['england']\", \"PROJECT['kings of #REF', '#1']\", \"FILTER['#2', 'that was tudor']\", \"AGGREGATE['min', '#3']\"]"}
{"id": "COMQA_dev_cluster-4026-1", "input": "what year was robert burns born?", "output": "[\"SELECT['robert burns was born']\", \"PROJECT['year of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4028-1", "input": "what is the money in the maldives?", "output": "[\"SELECT['the maldives']\", \"PROJECT['the money of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4029-1", "input": "what are the heaviest organs in the human body?", "output": "[\"SELECT['human body']\", \"PROJECT['organs of #REF', '#1']\", \"PROJECT['heaviness of #REF', '#2']\", \"SUPERLATIVE['max', '#2', '#3']\"]"}
{"id": "COMQA_dev_cluster-4031-1", "input": "when did elvis wife divorce him?", "output": "[\"SELECT['elvis wife divorces him']\", \"PROJECT['date of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4032-1", "input": "what nationality is richard harris?", "output": "[\"SELECT['richard harris']\", \"PROJECT['nationality of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4033-1", "input": "hatshepsut was a female?", "output": "[\"SELECT['hatshepsut']\", \"PROJECT['was #REF a female', '#1']\"]"}
{"id": "COMQA_dev_cluster-4034-1", "input": "where did egar allen poe go to high school?", "output": "[\"SELECT['egar allen poe']\", \"PROJECT['high school of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4034-2", "input": "what high school did edgar allen poe go to?", "output": "[\"SELECT['edgar allen poe']\", \"PROJECT['high school of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4035-1", "input": "what is the first city of the us?", "output": "[\"SELECT['us']\", \"PROJECT['cities of #REF', '#1']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "COMQA_dev_cluster-4038-1", "input": "what is obamas second daughter birthday?", "output": "[\"SELECT['obamas']\", \"PROJECT['daughters of #REF', '#1']\", \"PROJECT['second of #REF', '#2']\", \"PROJECT['birthday of #REF', '#3']\"]"}
{"id": "COMQA_dev_cluster-4039-1", "input": "what is thomas jefferson's kids name?", "output": "[\"SELECT['thomas jefferson']\", \"PROJECT['kids of #REF', '#1']\", \"PROJECT['name of #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-4040-1", "input": "what is the heaviest organ in body?", "output": "[\"SELECT['body']\", \"PROJECT['organ of #REF', '#1']\", \"FILTER['#2', 'that is the heaviest']\"]"}
{"id": "COMQA_dev_cluster-4041-1", "input": "who was the first secretary of the treasury?", "output": "[\"SELECT['secretaries of the treasury']\", \"AGGREGATE['min', '#1']\"]"}
{"id": "COMQA_dev_cluster-4042-1", "input": "what is an coordnate from manchester?", "output": "[\"SELECT['manchester']\", \"PROJECT['coordnates of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4043-1", "input": "what is jamie lee curtis gender?", "output": "[\"SELECT['jamie lee curtis']\", \"PROJECT['gender of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4044-1", "input": "who is lydia marie francis child husbands name?", "output": "[\"SELECT['lydia marie francis']\", \"PROJECT['child of #REF', '#1']\", \"PROJECT['husband of #REF', '#2']\", \"PROJECT['name of #REF', '#3']\"]"}
{"id": "COMQA_dev_cluster-4045-1", "input": "who played in north london and merseyside derby?", "output": "[\"SELECT['north london']\", \"SELECT['merseyside derby']\", \"PROJECT['who played in #REF', '#1']\", \"PROJECT['who played in #REF', '#2']\", \"SELECT['who is']\", \"INTERSECTION['#5', '#3', '#4']\"]"}
{"id": "COMQA_dev_cluster-4046-1", "input": "when did andy hurley's father die?", "output": "[\"SELECT['andy hurley']\", \"PROJECT['father of #REF', '#1']\", \"PROJECT['when did #REF die', '#2']\"]"}
{"id": "COMQA_dev_cluster-4047-1", "input": "which state is due southwest of south carolina?", "output": "[\"SELECT['state']\", \"SELECT['south carolina']\", \"FILTER['#1', 'that is due southwest of #2']\"]"}
{"id": "COMQA_dev_cluster-4048-1", "input": "when did sir arthur conan doyle's mom die?", "output": "[\"SELECT['sir arthur conan doyle']\", \"PROJECT['mom of #REF', '#1']\", \"PROJECT['when did #REF die', '#2']\"]"}
{"id": "COMQA_dev_cluster-4049-1", "input": "when was justin bieber's parents born?", "output": "[\"SELECT['justin bieber']\", \"PROJECT['parents of #REF', '#1']\", \"PROJECT['when was #REF born', '#2']\"]"}
{"id": "COMQA_dev_cluster-4049-2", "input": "what year was justin bieber's parents born in?", "output": "[\"SELECT['justin bieber']\", \"PROJECT['parents of #REF', '#1']\", \"PROJECT['when was #REF born', '#2']\", \"PROJECT['year of #REF', '#3']\"]"}
{"id": "COMQA_dev_cluster-4050-1", "input": "when john xxiii died?", "output": "[\"SELECT['john xxiii']\", \"PROJECT['when did #REF die', '#1']\"]"}
{"id": "COMQA_dev_cluster-405-1", "input": "george washington was commander and chief of what army?", "output": "[\"SELECT['army']\", \"PROJECT['commander and chief of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is george washington']\"]"}
{"id": "COMQA_dev_cluster-4051-2", "input": "when ashley michelle tisdale was born?", "output": "[\"SELECT['ashley michelle tisdale was born']\", \"PROJECT['date of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4052-1", "input": "in which years did new zealand hosted in the olympic games?", "output": "[\"SELECT['new zealand hosted the olympic games']\", \"PROJECT['years of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4054-1", "input": "where is the most extensive mountain system in the world?", "output": "[\"SELECT['mountain systems']\", \"PROJECT['how extensive are #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is the highest']\", \"PROJECT['where are #REF', '#3']\"]"}
{"id": "COMQA_dev_cluster-4055-1", "input": "who is constace marie married to?", "output": "[\"SELECT['constace marie']\", \"PROJECT['who is married to #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4056-1", "input": "what was roald dahls wife and children?", "output": "[\"SELECT['roald dahls']\", \"PROJECT['wife of #REF', '#1']\", \"PROJECT['children of #REF', '#1']\", \"UNION['#2', '#3']\"]"}
{"id": "COMQA_dev_cluster-4057-1", "input": "what was south carolina state capital?", "output": "[\"SELECT['south carolina state']\", \"PROJECT['capital of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4058-1", "input": "who is jason scott lee's dad?", "output": "[\"SELECT['jason scott lee']\", \"PROJECT['dad of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-406-1", "input": "the largest city in new mexico?", "output": "[\"SELECT['new mexico']\", \"PROJECT['cities of #REF', '#1']\", \"PROJECT['size of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is the largest']\"]"}
{"id": "COMQA_dev_cluster-4062-1", "input": "where is selfridges in manchester?", "output": "[\"SELECT['manchester']\", \"PROJECT['selfridges of #REF', '#1']\", \"PROJECT['where is #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-4063-1", "input": "what is erin andrews religion?", "output": "[\"SELECT['erin andrews']\", \"PROJECT['religion of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4064-1", "input": "when was marilyn monroe first married?", "output": "[\"SELECT['marilyn monroe was married']\", \"PROJECT['date of #REF', '#1']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "COMQA_dev_cluster-4065-1", "input": "when did alexander die on?", "output": "[\"SELECT['alexander']\", \"PROJECT['when did #REF die', '#1']\"]"}
{"id": "COMQA_dev_cluster-4066-1", "input": "what was louis xvi background?", "output": "[\"SELECT['louis xvi']\", \"PROJECT['background of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4068-1", "input": "what age is luke bailey?", "output": "[\"SELECT['luke bailey']\", \"PROJECT['age of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4069-1", "input": "what is kenny chesneys parents name?", "output": "[\"SELECT['kenny chesney']\", \"PROJECT['parents of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4070-1", "input": "what was yogi berras wifes name before she got married?", "output": "[\"SELECT['yogi berras']\", \"PROJECT['wifes of #REF', '#1']\", \"PROJECT['name of #REF', '#2']\", \"FILTER['#3', 'before she got married']\"]"}
{"id": "COMQA_dev_cluster-4071-1", "input": "what paintings did cezanne paint?", "output": "[\"SELECT['cezanne']\", \"PROJECT['paintings of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4072-1", "input": "what is the highest mountain in north america and in what state is it located?", "output": "[\"SELECT['north america']\", \"PROJECT['mountains of #REF', '#1']\", \"PROJECT['height of #REF', '#2']\", \"SUPERLATIVE['max', '#2', '#3']\", \"PROJECT['state of #REF', '#4']\", \"UNION['#4', '#5']\"]"}
{"id": "COMQA_dev_cluster-4073-1", "input": "who is the environment minister of 2010 in india?", "output": "[\"SELECT['india']\", \"PROJECT['the environment minister of #REF', '#1']\", \"FILTER['#2', 'in 2010']\"]"}
{"id": "COMQA_dev_cluster-4074-1", "input": "the biggest island in britain?", "output": "[\"SELECT['britain']\", \"PROJECT['islands of #REF', '#1']\", \"PROJECT['size of #REF', '#2']\", \"SUPERLATIVE['max', '#2', '#3']\"]"}
{"id": "COMQA_dev_cluster-4076-1", "input": "which nation was a founding member of nato and seato?", "output": "[\"SELECT['nato']\", \"SELECT['seato']\", \"SELECT['founding member']\", \"INTERSECTION['#3', '#1', '#2']\"]"}
{"id": "COMQA_dev_cluster-4077-1", "input": "when did michael jackson write leave you alone?", "output": "[\"SELECT['michael jackson did write leave you alone']\", \"PROJECT['when was #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4079-1", "input": "what is andy hurleys address?", "output": "[\"SELECT['andy hurley']\", \"PROJECT['address of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4082-1", "input": "who wrote the song beautiful by christina aguilera?", "output": "[\"SELECT['the song beautiful by christina aguilera']\", \"PROJECT['who wrote #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4083-1", "input": "what city hosted the 1980 winter olympics?", "output": "[\"SELECT['the winter olympics']\", \"FILTER['#1', 'in 1980']\", \"PROJECT['city that hosted #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-4084-1", "input": "what was the major religion of india under the gupta rulers?", "output": "[\"SELECT['india']\", \"FILTER['#1', 'under the gupta rulers']\", \"PROJECT['major religion of #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-4085-1", "input": "where did albert abraham michelson live?", "output": "[\"SELECT['albert abraham michelson']\", \"PROJECT['where did #REF live', '#1']\"]"}
{"id": "COMQA_dev_cluster-4087-1", "input": "what nation shares a southern border with china?", "output": "[\"SELECT['nation']\", \"PROJECT['southern border of #REF', '#1']\", \"FILTER['#1', 'where #2 borders china']\"]"}
{"id": "COMQA_dev_cluster-4088-1", "input": "which side won the first battle of bull run?", "output": "[\"SELECT['battle of bull run']\", \"AGGREGATE['min', '#1']\", \"PROJECT['which side won #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-4089-1", "input": "what state is east of new hampshire and east of new york?", "output": "[\"SELECT['states']\", \"SELECT['new hampshire']\", \"SELECT['new york']\", \"FILTER['#1', 'that is east of #2']\", \"FILTER['#1', 'that is east of #3']\", \"INTERSECTION['#1', '#4', '#5']\"]"}
{"id": "COMQA_dev_cluster-4090-1", "input": "which county in georgia has the least black population?", "output": "[\"SELECT['georgia']\", \"PROJECT['counties of #REF', '#1']\", \"PROJECT['black population of #REF', '#2']\", \"SUPERLATIVE['min', '#2', '#3']\"]"}
{"id": "COMQA_dev_cluster-4091-1", "input": "when did bear bryant coach kentucky?", "output": "[\"SELECT['bear bryant coaches kentucky']\", \"PROJECT['date of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4092-1", "input": "what is the first animal that was sent to space?", "output": "[\"SELECT['animals']\", \"SELECT['space']\", \"FILTER['#1', 'that was sent to #2']\", \"AGGREGATE['min', '#3']\"]"}
{"id": "COMQA_dev_cluster-4093-1", "input": "when was george bernard born?", "output": "[\"SELECT['george bernard was born']\", \"PROJECT['date of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4094-1", "input": "who was married to michael jackson?", "output": "[\"SELECT['michael jackson']\", \"PROJECT['who was married to #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4095-1", "input": "when did mahalia jackson got buried?", "output": "[\"SELECT['mahalia jackson was buried']\", \"PROJECT['date of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4096-1", "input": "when did the civil war break out?", "output": "[\"SELECT['the civil war breaks out']\", \"PROJECT['date of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4097-1", "input": "adam sandlers acting school is?", "output": "[\"SELECT['adam sandler']\", \"PROJECT['acting school of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4098-1", "input": "political party abraham lincoln into?", "output": "[\"SELECT['abraham lincoln']\", \"PROJECT['political party of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4099-1", "input": "what house was george harrison born in?", "output": "[\"SELECT['george harrison']\", \"PROJECT['in what house was #REF born', '#1']\"]"}
{"id": "COMQA_dev_cluster-4100-1", "input": "what year was the first spongebob squarepants made?", "output": "[\"SELECT['spongebob squarepants was first made']\", \"PROJECT['year of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4101-1", "input": "who was america at war with in the 70's?", "output": "[\"SELECT['america']\", \"PROJECT['wars of #REF', '#1']\", \"FILTER['#2', 'in the 70 s']\", \"PROJECT['who was in #REF', '#3']\", \"DISCARD['#4', '#1']\"]"}
{"id": "COMQA_dev_cluster-4102-1", "input": "what kenny chesney albums hit the charts?", "output": "[\"SELECT['kenny chesney']\", \"PROJECT['albums of #REF', '#1']\", \"FILTER['#2', 'that hit the charts']\"]"}
{"id": "COMQA_dev_cluster-4103-1", "input": "first 3 moon visitors in the world?", "output": "[\"SELECT['the moon']\", \"PROJECT['visitors of #REF', '#1']\", \"PROJECT['the first 3 of #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-4104-1", "input": "what is the name of nicole kidman daughter?", "output": "[\"SELECT['nicole kidman']\", \"PROJECT['daughter of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4105-1", "input": "what is dmx best selling albums?", "output": "[\"SELECT['dmx']\", \"PROJECT['albums of #REF', '#1']\", \"FILTER['#2', 'that are the best selling']\"]"}
{"id": "COMQA_dev_cluster-4106-1", "input": "who is paul rodriguez jr's mom?", "output": "[\"SELECT['paul rodriguez jr']\", \"PROJECT['mom of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4108-1", "input": "what oceans does iceland border?", "output": "[\"SELECT['iceland']\", \"SELECT['oceans']\", \"FILTER['#2', 'that #1 border']\"]"}
{"id": "COMQA_dev_cluster-4108-2", "input": "what oceans border iceland?", "output": "[\"SELECT['iceland']\", \"PROJECT['oceans that border #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4109-1", "input": "what is the major river in sri lanka?", "output": "[\"SELECT['sri lanka']\", \"PROJECT['the major river of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-41-1", "input": "country that borders honduras in the west?", "output": "[\"SELECT['countries']\", \"SELECT['honduras']\", \"FILTER['#1', 'that borders #2']\", \"FILTER['#3', 'that is west of #2']\"]"}
{"id": "COMQA_dev_cluster-4110-1", "input": "when was lyndon johnsons term?", "output": "[\"SELECT['lyndon johnson']\", \"PROJECT['term of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4112-1", "input": "where woodrow wilson came from?", "output": "[\"SELECT['woodrow wilson']\", \"PROJECT['where #REF came from', '#1']\"]"}
{"id": "COMQA_dev_cluster-4113-1", "input": "who is billy ray cyrus wife and kids?", "output": "[\"SELECT['billy ray cyrus']\", \"PROJECT['the wife of #REF', '#1']\", \"PROJECT['kids of #REF', '#1']\", \"UNION['#2', '#3']\"]"}
{"id": "COMQA_dev_cluster-4114-1", "input": "what are zimbabwe's leaders?", "output": "[\"SELECT['zimbabwe']\", \"PROJECT['leaders of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4115-1", "input": "what is the name of the airport in australia?", "output": "[\"SELECT['australia']\", \"PROJECT['airport of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4116-1", "input": "what are the four names of the neighbours of the south central states?", "output": "[\"SELECT['south central states']\", \"PROJECT['neighbours of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4118-1", "input": "what religion was dany thomas?", "output": "[\"SELECT['dany thomas']\", \"PROJECT['religion of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4119-1", "input": "who was the leader of the mickey mouse club band?", "output": "[\"SELECT['mickey mouse club band']\", \"PROJECT['leader of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4120-1", "input": "who did johnny depp play in pirate caribbean?", "output": "[\"SELECT['johnny depp']\", \"PROJECT['who did #REF play', '#1']\", \"FILTER['#2', 'in pirate caribbean']\"]"}
{"id": "COMQA_dev_cluster-4121-1", "input": "what is the official language of netherlands antilles?", "output": "[\"SELECT['the netherlands antilles']\", \"PROJECT['the official language of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4123-1", "input": "who is the first malyalee governor in kerala?", "output": "[\"SELECT['kerala']\", \"PROJECT['governors of #REF', '#1']\", \"FILTER['#2', 'that are malyalee']\", \"AGGREGATE['min', '#3']\"]"}
{"id": "COMQA_dev_cluster-4124-1", "input": "who plays ben in dani's house?", "output": "[\"SELECT['danis house']\", \"PROJECT['who plays ben in #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4125-1", "input": "where can death valley be found?", "output": "[\"SELECT['death valley']\", \"PROJECT['where is #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4126-1", "input": "when fa cup final 2010?", "output": "[\"SELECT['fa cup final 2010']\", \"PROJECT['date of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4127-1", "input": "when is ti's birthday?", "output": "[\"SELECT['ti']\", \"PROJECT['the birthday of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4128-1", "input": "who was the japenese naval leader during world war 2?", "output": "[\"SELECT['the japenese']\", \"PROJECT['naval leader of #REF', '#1']\", \"FILTER['#2', 'during world war 2']\"]"}
{"id": "COMQA_dev_cluster-4129-1", "input": "what is the horse power on a 2000 honda civic si?", "output": "[\"SELECT['2000 honda civic si']\", \"PROJECT['horse power of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4130-1", "input": "where is the wife of bruce lee?", "output": "[\"SELECT['bruce lee']\", \"PROJECT['wife of #REF', '#1']\", \"PROJECT['where is #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-4132-1", "input": "what was the full name of andrew jackson?", "output": "[\"SELECT['andrew jackson']\", \"PROJECT['full name of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4134-1", "input": "what was the world series in 1994?", "output": "[\"SELECT['world series']\", \"FILTER['#1', 'in 1994']\"]"}
{"id": "COMQA_dev_cluster-4135-1", "input": "what was the first award that julia roberts won?", "output": "[\"SELECT['julia roberts']\", \"PROJECT['awards of #REF', '#1']\", \"PROJECT['date won of #REF', '#2']\", \"SUPERLATIVE['min', '#2', '#3']\"]"}
{"id": "COMQA_dev_cluster-4136-1", "input": "what are finlands largest rivers?", "output": "[\"SELECT['finlands']\", \"PROJECT['rivers of #REF', '#1']\", \"PROJECT['size of #REF', '#2']\", \"SUPERLATIVE['max', '#2', '#3']\"]"}
{"id": "COMQA_dev_cluster-4137-1", "input": "who was ella fitzgerald influenced by?", "output": "[\"SELECT['ella fitzgerald']\", \"PROJECT['who influenced #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4138-1", "input": "when did the beatles get there first album?", "output": "[\"SELECT['beatles']\", \"PROJECT['album of #REF', '#1']\", \"AGGREGATE['min', '#2']\", \"PROJECT['when was #REF', '#3']\"]"}
{"id": "COMQA_dev_cluster-4139-1", "input": "what countries share a border with the united arab emirates?", "output": "[\"SELECT['the united arab emirates']\", \"PROJECT['countries that border #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-414-2", "input": "largest cities in washington?", "output": "[\"SELECT['washington']\", \"PROJECT['cities of #REF', '#1']\", \"PROJECT['size of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is the largest']\"]"}
{"id": "COMQA_dev_cluster-4142-1", "input": "what college did de marcus spears attend?", "output": "[\"SELECT['de marcus spears']\", \"PROJECT['college of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4143-1", "input": "what character was christopher plummer in the national treasure?", "output": "[\"SELECT['the national treasure']\", \"PROJECT['characters of #REF', '#1']\", \"SELECT['christopher plummer']\", \"FILTER['#2', 'that was #3']\"]"}
{"id": "COMQA_dev_cluster-4144-1", "input": "what year was the 25th amendment ratified?", "output": "[\"SELECT['the 25th amendment']\", \"PROJECT['year that #REF was ratified', '#1']\"]"}
{"id": "COMQA_dev_cluster-4146-1", "input": "what disease did shirley chishlom die from?", "output": "[\"SELECT['shirley chishlom']\", \"PROJECT['from what disease did #REF die', '#1']\"]"}
{"id": "COMQA_dev_cluster-4147-1", "input": "who were the scorers in the brazil vs england game 2002?", "output": "[\"SELECT['the brazil vs england game 2002']\", \"PROJECT['scorers of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4148-1", "input": "what us president was the first born in ohio?", "output": "[\"SELECT['us']\", \"PROJECT['presidents of #REF', '#1']\", \"FILTER['#2', 'born in ohio']\", \"AGGREGATE['min', '#3']\"]"}
{"id": "COMQA_dev_cluster-4149-1", "input": "what year did roberto clemente join major league baseball?", "output": "[\"SELECT['roberto clemente']\", \"PROJECT['year that #REF join major league baseball', '#1']\"]"}
{"id": "COMQA_dev_cluster-4152-1", "input": "who is martin lawrence first wife?", "output": "[\"SELECT['martin lawrence']\", \"PROJECT['wives of #REF', '#1']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "COMQA_dev_cluster-4153-1", "input": "when did alexander mackenzi die?", "output": "[\"SELECT['alexander mackenzi die']\", \"PROJECT['date of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4154-1", "input": "what is the 2nd biggest mountain in africa?", "output": "[\"SELECT['africa']\", \"PROJECT['mountains in #REF', '#1']\", \"PROJECT['size of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is the highest']\", \"DISCARD['#2', '#4']\", \"PROJECT['size of #REF', '#5']\", \"COMPARATIVE['#5', '#6', 'is the highest']\"]"}
{"id": "COMQA_dev_cluster-4155-1", "input": "who was johnny copeland's wife?", "output": "[\"SELECT['johnny copeland']\", \"PROJECT['wife of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4157-1", "input": "country and place of death for marco polo?", "output": "[\"SELECT['marco polo']\", \"PROJECT['place of death of #REF', '#1']\", \"PROJECT['country of #REF', '#2']\", \"UNION['#2', '#3']\"]"}
{"id": "COMQA_dev_cluster-4159-1", "input": "where was jude watson born?", "output": "[\"SELECT['jude watson']\", \"PROJECT['where was #REF born', '#1']\"]"}
{"id": "COMQA_dev_cluster-4160-1", "input": "where did curtis jackson go to school?", "output": "[\"SELECT['curtis jackson']\", \"PROJECT['school of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4161-1", "input": "what public company has the most employees in the world?", "output": "[\"SELECT['public companies']\", \"PROJECT['employees of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"SUPERLATIVE['max', '#1', '#3']\"]"}
{"id": "COMQA_dev_cluster-4162-1", "input": "what state is joe biden a senator for?", "output": "[\"SELECT['joe biden']\", \"SELECT['states']\", \"COMPARATIVE['#2', '#1', 'is a senator for']\"]"}
{"id": "COMQA_dev_cluster-4163-1", "input": "what is the jackson five second album?", "output": "[\"SELECT['jackson five']\", \"PROJECT['albums of #REF', '#1']\", \"PROJECT['second of #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-4164-1", "input": "what films has sam elliott acted in?", "output": "[\"SELECT['sam elliott']\", \"PROJECT['films in which #REF acted', '#1']\"]"}
{"id": "COMQA_dev_cluster-4165-1", "input": "who was edna st vincent millay married to?", "output": "[\"SELECT['edna st vincent millay']\", \"PROJECT['who married #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4166-1", "input": "who wrote brown bears wedding?", "output": "[\"SELECT['brown bears wedding']\", \"PROJECT['who wrote #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4167-1", "input": "where did michael jackson get married the first time?", "output": "[\"SELECT['michael jackson']\", \"PROJECT['where did #REF get married', '#1']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "COMQA_dev_cluster-4168-1", "input": "what are dorothy hamill's parents names?", "output": "[\"SELECT['dorothy hamill']\", \"PROJECT['parents of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4169-1", "input": "what was the first movie produced in 1903?", "output": "[\"SELECT['movies']\", \"FILTER['#1', 'produced in 1903']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "COMQA_dev_cluster-4170-1", "input": "when did janice joplin die?", "output": "[\"SELECT['janice joplin die']\", \"PROJECT['date of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-417-1", "input": "what was george bush before politics?", "output": "[\"SELECT['george bush']\", \"PROJECT['what was #REF before politics', '#1']\"]"}
{"id": "COMQA_dev_cluster-4171-1", "input": "when did michael jackson sang you are not alone?", "output": "[\"SELECT['michael jackson sang you are not alone']\", \"PROJECT['date of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4172-1", "input": "who is micheal jacksons oldest kids?", "output": "[\"SELECT['micheal jackson']\", \"PROJECT['kids of #REF', '#1']\", \"FILTER['#2', 'that are oldest']\"]"}
{"id": "COMQA_dev_cluster-4173-1", "input": "highest point of the tour de france?", "output": "[\"SELECT['the tour de france']\", \"PROJECT['points of #REF', '#1']\", \"PROJECT['elevation of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is the highest']\"]"}
{"id": "COMQA_dev_cluster-4175-1", "input": "what was the name of david pelzer's last brother?", "output": "[\"SELECT['david pelzer']\", \"PROJECT['brothers of #REF', '#1']\", \"AGGREGATE['max', '#2']\"]"}
{"id": "COMQA_dev_cluster-4176-1", "input": "who is the first lady governor of maharashtra?", "output": "[\"SELECT['maharashtra']\", \"PROJECT['governor of #REF', '#1']\", \"FILTER['#2', 'that is a lady']\", \"AGGREGATE['min', '#3']\"]"}
{"id": "COMQA_dev_cluster-4177-1", "input": "who was the former president of us that was an ffa member?", "output": "[\"SELECT['the us']\", \"PROJECT['former president of #REF', '#1']\", \"FILTER['#2', 'that was an ffa member']\"]"}
{"id": "COMQA_dev_cluster-4177-2", "input": "what us presidents spoke at national ffa conventions?", "output": "[\"SELECT['the us']\", \"PROJECT['presidents of #REF', '#1']\", \"SELECT['national ffa conventions']\", \"FILTER['#2', 'that spoke at #3']\"]"}
{"id": "COMQA_dev_cluster-4178-1", "input": "who was the youngest son of joe jackson?", "output": "[\"SELECT['joe jackson']\", \"PROJECT['sons of #REF', '#1']\", \"PROJECT['the youngest of #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-4179-1", "input": "what is the main language for chile?", "output": "[\"SELECT['chile']\", \"PROJECT['main language of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4181-1", "input": "what school did henry ford go to?", "output": "[\"SELECT['henry ford']\", \"PROJECT['school of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4182-1", "input": "what is the post code of ibadan in oyo state of nigeria?", "output": "[\"SELECT['nigeria']\", \"PROJECT['states of #REF', '#1']\", \"FILTER['#2', 'that is oyo']\", \"PROJECT['ibadan in #REF', '#3']\", \"PROJECT['post code of #REF', '#4']\"]"}
{"id": "COMQA_dev_cluster-4183-1", "input": "what are the 7 albums michael jackson sung?", "output": "[\"SELECT['michael jackson']\", \"PROJECT['albums of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4184-1", "input": "what were the name of jane austens books that she wrote?", "output": "[\"SELECT['jane austen']\", \"PROJECT['books that #REF wrote', '#1']\"]"}
{"id": "COMQA_dev_cluster-4185-1", "input": "what was mahatma gandhi sister name?", "output": "[\"SELECT['mahatma gandhi']\", \"PROJECT['sister of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4186-1", "input": "when did ben stiller make his first film?", "output": "[\"SELECT['ben stiller']\", \"PROJECT['films of #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"AGGREGATE['min', '#3']\"]"}
{"id": "COMQA_dev_cluster-4187-1", "input": "what are the two newest member countries of the united nations?", "output": "[\"SELECT['united nations']\", \"PROJECT['member countries of #REF', '#1']\", \"PROJECT['newest of #REF', '#2']\", \"DISCARD['#2', '#3']\", \"PROJECT['newest of #REF', '#4']\", \"UNION['#3', '#5']\"]"}
{"id": "COMQA_dev_cluster-4188-1", "input": "who george h bush marry?", "output": "[\"SELECT['george h bush']\", \"PROJECT['who marries #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4189-1", "input": "where did robert e lee live when he was little?", "output": "[\"SELECT['robert e lee']\", \"PROJECT['where did #REF live', '#1']\", \"FILTER['#2', 'when he was little']\"]"}
{"id": "COMQA_dev_cluster-4190-1", "input": "who is andy hurley's girfriend?", "output": "[\"SELECT['andy hurley']\", \"PROJECT['girfriend of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4191-1", "input": "what was the name of the city dr martin luther king killed in?", "output": "[\"SELECT['dr martin luther king']\", \"PROJECT['city killed in of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4192-1", "input": "whose parents were leah and jacob?", "output": "[\"SELECT['leah']\", \"SELECT['jacob']\", \"PROJECT['whose parent is #REF', '#1']\", \"PROJECT['whose parent is #REF', '#2']\", \"SELECT['who is']\", \"INTERSECTION['#5', '#3', '#4']\"]"}
{"id": "COMQA_dev_cluster-4193-1", "input": "what is england's population and capital city?", "output": "[\"SELECT['england']\", \"PROJECT['the population of #REF', '#1']\", \"PROJECT['the capital city of #REF', '#1']\", \"UNION['#2', '#3']\"]"}
{"id": "COMQA_dev_cluster-4194-1", "input": "what is the government and leader of algeria?", "output": "[\"SELECT['algeria']\", \"PROJECT['government of #REF', '#1']\", \"PROJECT['leader of #REF', '#1']\", \"UNION['#2', '#3']\"]"}
{"id": "COMQA_dev_cluster-4195-1", "input": "who was the youngest brother of micheal jackson?", "output": "[\"SELECT['micheal jackson']\", \"PROJECT['brothers of #REF', '#1']\", \"FILTER['#2', 'that is youngest']\"]"}
{"id": "COMQA_dev_cluster-4197-1", "input": "what is the second largest state of south canada?", "output": "[\"SELECT['south canada']\", \"PROJECT['states of #REF', '#1']\", \"PROJECT['size of #REF', '#2']\", \"AGGREGATE['max', '#3']\", \"DISCARD['#3', '#4']\", \"AGGREGATE['max', '#5']\", \"COMPARATIVE['#2', '#3', 'is equal to #6']\"]"}
{"id": "COMQA_dev_cluster-4199-1", "input": "which contiguous states border the pacific ocean?", "output": "[\"SELECT['contiguous states']\", \"SELECT['the pacific ocean']\", \"FILTER['#1', 'that border #2']\"]"}
{"id": "COMQA_dev_cluster-4201-1", "input": "what male actors won an oscar in 1990's?", "output": "[\"SELECT['oscars']\", \"PROJECT['actors that won #REF', '#1']\", \"FILTER['#2', 'in the 1990 s']\", \"FILTER['#3', 'that are male']\"]"}
{"id": "COMQA_dev_cluster-4202-1", "input": "what are the main products in saudi arabia?", "output": "[\"SELECT['saudi arabia']\", \"PROJECT['main products of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4203-1", "input": "when did james cooke die?", "output": "[\"SELECT['james cooke']\", \"PROJECT['when did #REF die', '#1']\"]"}
{"id": "COMQA_dev_cluster-4204-1", "input": "where did anna nichole smith die?", "output": "[\"SELECT['anna nichole smith']\", \"PROJECT['where did #REF die', '#1']\"]"}
{"id": "COMQA_dev_cluster-4205-1", "input": "what is the largest city on australias north coast?", "output": "[\"SELECT['australias']\", \"PROJECT['north coast of #REF', '#1']\", \"PROJECT['cities of #REF', '#2']\", \"PROJECT['size of #REF', '#3']\", \"SUPERLATIVE['max', '#3', '#4']\"]"}
{"id": "COMQA_dev_cluster-4207-1", "input": "what year did mary ingalls die?", "output": "[\"SELECT['mary ingalls']\", \"PROJECT['year that #REF die', '#1']\"]"}
{"id": "COMQA_dev_cluster-4208-1", "input": "who was the first president in asia?", "output": "[\"SELECT['asia']\", \"PROJECT['presidents of #REF', '#1']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "COMQA_dev_cluster-4209-1", "input": "when islam religion start?", "output": "[\"SELECT['islam religion']\", \"PROJECT['when did #REF start', '#1']\"]"}
{"id": "COMQA_dev_cluster-4210-1", "input": "what was adam's 3rd son's name?", "output": "[\"SELECT['adam']\", \"PROJECT['sons of #REF', '#1']\", \"PROJECT['3rd of #REF', '#2']\", \"PROJECT['name of #REF', '#3']\"]"}
{"id": "COMQA_dev_cluster-4211-1", "input": "what are john cabot's 3 sons names?", "output": "[\"SELECT['john cabot']\", \"PROJECT['sons of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4212-1", "input": "who won heisman award the years peyton manning was nominated?", "output": "[\"SELECT['peyton manning was nominated in heisman award']\", \"PROJECT['years of #REF', '#1']\", \"SELECT['heisman award']\", \"PROJECT['who won #REF', '#3']\", \"FILTER['#4', 'in #2']\"]"}
{"id": "COMQA_dev_cluster-4214-1", "input": "what was julius caesar's mums name?", "output": "[\"SELECT['julius caesar']\", \"PROJECT['mum of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4215-1", "input": "david beckhams school life?", "output": "[\"SELECT['david beckhams']\", \"PROJECT['school life of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4216-1", "input": "what countries was not an enemy of the us during world war 2?", "output": "[\"SELECT['world war 2']\", \"PROJECT['countries of #REF', '#1']\", \"SELECT['the us']\", \"FILTER['#2', 'that was enemies of #3']\", \"DISCARD['#2', '#4']\"]"}
{"id": "COMQA_dev_cluster-4217-1", "input": "who was john wilkes booth married to?", "output": "[\"SELECT['john wilkes booth']\", \"PROJECT['who married #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4218-1", "input": "when did andrew clement's first book come out?", "output": "[\"SELECT['andrew clement']\", \"PROJECT['books of #REF', '#1']\", \"AGGREGATE['min', '#2']\", \"PROJECT['when did #REF come out', '#3']\"]"}
{"id": "COMQA_dev_cluster-4218-2", "input": "when did andrew clements publish his first book?", "output": "[\"SELECT['andrew clements']\", \"PROJECT['books of #REF', '#1']\", \"PROJECT['publish date of #REF', '#2']\", \"AGGREGATE['min', '#3']\"]"}
{"id": "COMQA_dev_cluster-4219-1", "input": "first president in maine?", "output": "[\"SELECT['maine']\", \"PROJECT['presidents of #REF', '#1']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "COMQA_dev_cluster-4220-1", "input": "who was elected president in 2000 in russia?", "output": "[\"SELECT['russia']\", \"PROJECT['who was elected president of #REF', '#1']\", \"FILTER['#2', 'in 2000']\"]"}
{"id": "COMQA_dev_cluster-422-1", "input": "what is the least populated county in the state of georgia?", "output": "[\"SELECT['states']\", \"FILTER['#1', 'that is georgia']\", \"PROJECT['counties of #REF', '#2']\", \"PROJECT['population of #REF', '#3']\", \"SUPERLATIVE['min', '#3', '#4']\"]"}
{"id": "COMQA_dev_cluster-4221-1", "input": "what season did leonardo dicaprio come on growing pains?", "output": "[\"SELECT['growing pains']\", \"PROJECT['season of #REF', '#1']\", \"FILTER['#2', 'that leonardo dicaprio come in on']\"]"}
{"id": "COMQA_dev_cluster-4222-1", "input": "what are the names of all the black eyed peas albums?", "output": "[\"SELECT['the black eyed peas']\", \"PROJECT['albums of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4223-1", "input": "what did marcus garvey think of society?", "output": "[\"SELECT['marcus garvey']\", \"PROJECT['what did #REF think of society', '#1']\"]"}
{"id": "COMQA_dev_cluster-4224-1", "input": "what is the name of the bay on the spainsh north coast?", "output": "[\"SELECT['spainsh north coast']\", \"PROJECT['bay on #REF', '#1']\", \"PROJECT['name of #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-4225-1", "input": "when diana ross was born?", "output": "[\"SELECT['diana ross']\", \"PROJECT['when was #REF born', '#1']\"]"}
{"id": "COMQA_dev_cluster-4229-1", "input": "what show are aislinn paul and munro chambers on?", "output": "[\"SELECT['aislinn paul']\", \"SELECT['munro chambers']\", \"SELECT['show']\", \"INTERSECTION['#3', '#1', '#2']\"]"}
{"id": "COMQA_dev_cluster-4230-1", "input": "who is congress of louisisana?", "output": "[\"SELECT['louisisana']\", \"PROJECT['congress of #REF', '#1']\", \"PROJECT['who is on #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-4231-1", "input": "when was lilly depp born?", "output": "[\"SELECT['lilly depp was born']\", \"PROJECT['date of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4232-1", "input": "what war missions did england fight in world war 2?", "output": "[\"SELECT['england']\", \"PROJECT['war missions of #REF', '#1']\", \"FILTER['#2', 'in world war 2']\"]"}
{"id": "COMQA_dev_cluster-4233-1", "input": "what largest us state is closer canada?", "output": "[\"SELECT['the us']\", \"PROJECT['states of #REF', '#1']\", \"PROJECT['size of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is the largest']\", \"SELECT['canada']\", \"FILTER['#4', 'that are closer to #5']\"]"}
{"id": "COMQA_dev_cluster-4234-1", "input": "what is the capital of new york before albani?", "output": "[\"SELECT['new york']\", \"PROJECT['capitals of #REF', '#1']\", \"SELECT['albani']\", \"FILTER['#2', 'before #3']\"]"}
{"id": "COMQA_dev_cluster-4237-1", "input": "great britain past leader?", "output": "[\"SELECT['great britain']\", \"PROJECT['past leader of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4238-1", "input": "who was the first african-american yankee?", "output": "[\"SELECT['the yankees']\", \"PROJECT['who was on #REF', '#1']\", \"FILTER['#2', 'that was african-american']\", \"AGGREGATE['min', '#3']\"]"}
{"id": "COMQA_dev_cluster-4240-1", "input": "what 2 cities is on the west coast of australia?", "output": "[\"SELECT['australia']\", \"PROJECT['the west coast of #REF', '#1']\", \"PROJECT['cities of #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-4242-1", "input": "who won the second rugby world cup?", "output": "[\"SELECT['rugby world cups']\", \"PROJECT['the second of #REF', '#1']\", \"PROJECT['who won #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-4244-1", "input": "when is eric the red's birthday?", "output": "[\"SELECT['eric the red']\", \"PROJECT['birthday of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-4245-1", "input": "who is sean connery married to?", "output": "[\"SELECT['sean connery']\", \"PROJECT['who married #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-434-1", "input": "what is william henry harrison children names?", "output": "[\"SELECT['william henry harrison']\", \"PROJECT['children of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-436-1", "input": "where did john f kennedy get married?", "output": "[\"SELECT['john f kennedy']\", \"PROJECT['where did #REF get married', '#1']\"]"}
{"id": "COMQA_dev_cluster-44-1", "input": "what is the size of saudi arabia?", "output": "[\"SELECT['saudi arabia']\", \"PROJECT['size of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-445-1", "input": "what secondary school did alexandra burke go to?", "output": "[\"SELECT['alexandra burke']\", \"PROJECT['secondary school of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-455-1", "input": "which us president is a former ffa member?", "output": "[\"SELECT['us presidents']\", \"FILTER['#1', 'that is a former ffa member']\"]"}
{"id": "COMQA_dev_cluster-456-1", "input": "what year was jonathan swifts guliver travels first published?", "output": "[\"SELECT['jonathan swifts guliver travels was published']\", \"PROJECT['years of #REF', '#1']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "COMQA_dev_cluster-456-2", "input": "when was jonathan swifts book gullivers travel first published?", "output": "[\"SELECT['jonathan swifts book gullivers travel was published']\", \"PROJECT['date of #REF', '#1']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "COMQA_dev_cluster-462-1", "input": "what team did nani play for in 2007?", "output": "[\"SELECT['nani']\", \"PROJECT['team that #REF play for in 2007', '#1']\"]"}
{"id": "COMQA_dev_cluster-469-1", "input": "what date die abraham lincoln die?", "output": "[\"SELECT['abraham lincoln']\", \"PROJECT['when did #REF die', '#1']\", \"PROJECT['date of #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-470-1", "input": "when did london become the uk capital?", "output": "[\"SELECT['london']\", \"PROJECT['when did #REF become uk capital', '#1']\"]"}
{"id": "COMQA_dev_cluster-474-1", "input": "what province is salzburg in?", "output": "[\"SELECT['salzburg']\", \"PROJECT['province of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-477-1", "input": "what country is located between venezuela and suriname?", "output": "[\"SELECT['countries']\", \"SELECT['venezuela']\", \"SELECT['suriname']\", \"FILTER['#1', 'that is located betweenleftside #2']\", \"FILTER['#4', 'that is located betweenrightside #3']\"]"}
{"id": "COMQA_dev_cluster-479-1", "input": "who have played cricket for both the countries india and pakistan?", "output": "[\"SELECT['india']\", \"SELECT['pakistan']\", \"PROJECT['who played cricket for #REF', '#1']\", \"PROJECT['who played cricket for #REF', '#2']\", \"SELECT['who is']\", \"INTERSECTION['#5', '#3', '#4']\"]"}
{"id": "COMQA_dev_cluster-481-1", "input": "who is the first woman chief minister of india?", "output": "[\"SELECT['india']\", \"PROJECT['chief ministers of #REF', '#1']\", \"FILTER['#2', 'that was a woman']\", \"AGGREGATE['min', '#3']\"]"}
{"id": "COMQA_dev_cluster-481-2", "input": "who is the first chief minister woman of india?", "output": "[\"SELECT['india']\", \"PROJECT['chief ministers of #REF', '#1']\", \"FILTER['#2', 'that are women']\", \"AGGREGATE['min', '#3']\"]"}
{"id": "COMQA_dev_cluster-484-1", "input": "who is president of great britain?", "output": "[\"SELECT['great britain']\", \"PROJECT['president of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-485-1", "input": "who was the government in charge of the first fleet?", "output": "[\"SELECT['the first fleet']\", \"PROJECT['government in charge of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-488-1", "input": "what sea is on the border of croatia?", "output": "[\"SELECT['seas']\", \"SELECT['croatia']\", \"FILTER['#1', 'that is on the border of #2']\"]"}
{"id": "COMQA_dev_cluster-490-1", "input": "what is the highest mountain in the swiss alp?", "output": "[\"SELECT['swiss alps']\", \"PROJECT['mountains of #REF', '#1']\", \"PROJECT['height of #REF', '#2']\", \"SUPERLATIVE['max', '#2', '#3']\"]"}
{"id": "COMQA_dev_cluster-491-2", "input": "what did jett travolta die of?", "output": "[\"SELECT['jett travolta']\", \"PROJECT['what did #REF die of', '#1']\"]"}
{"id": "COMQA_dev_cluster-496-1", "input": "who was the first women to run for president?", "output": "[\"SELECT['women to run for president']\", \"AGGREGATE['min', '#1']\"]"}
{"id": "COMQA_dev_cluster-500-1", "input": "what country is between tanzania and zaire?", "output": "[\"SELECT['countries']\", \"SELECT['tanzania']\", \"SELECT['zaire']\", \"FILTER['#1', 'that is betweenleftside #2']\", \"FILTER['#4', 'that is betweenrightside #3']\"]"}
{"id": "COMQA_dev_cluster-510-1", "input": "what is the largest city of india according to area?", "output": "[\"SELECT['india']\", \"PROJECT['cities of #REF', '#1']\", \"PROJECT['area of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is the highest']\"]"}
{"id": "COMQA_dev_cluster-515-1", "input": "who is the president of botswana today?", "output": "[\"SELECT['botswana']\", \"PROJECT['president today of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-516-1", "input": "what is the 2nd biggest mountain the world?", "output": "[\"SELECT['mountains']\", \"PROJECT['size of #REF', '#1']\", \"SUPERLATIVE['max', '#1', '#2']\", \"DISCARD['#1', '#3']\", \"PROJECT['size of #REF', '#4']\", \"SUPERLATIVE['max', '#4', '#5']\"]"}
{"id": "COMQA_dev_cluster-517-1", "input": "who was president bill cliton's vice president?", "output": "[\"SELECT['president bill cliton']\", \"PROJECT['vice president of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-520-1", "input": "who made the first flag of the us?", "output": "[\"SELECT['the us']\", \"PROJECT['flags of #REF', '#1']\", \"AGGREGATE['min', '#2']\", \"PROJECT['who made #REF', '#3']\"]"}
{"id": "COMQA_dev_cluster-520-2", "input": "who designed the first american flag?", "output": "[\"SELECT['american flag']\", \"FILTER['#1', 'that is first']\", \"PROJECT['who designed #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-524-1", "input": "when was war of the worlds published?", "output": "[\"SELECT['war of the worlds published']\", \"PROJECT['when was #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-532-1", "input": "who is the 2009 president of poland?", "output": "[\"SELECT['poland']\", \"FILTER['#1', 'in 2009']\", \"PROJECT['president of #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-544-1", "input": "when did adolfo hitler become chancellor of germany?", "output": "[\"SELECT['adolfo hitler did become chancellor of germany']\", \"PROJECT['when was #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-549-1", "input": "where any president from new hampshire?", "output": "[\"SELECT['presidents']\", \"SELECT['new hampshire']\", \"FILTER['#1', 'that are from #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least one']\"]"}
{"id": "COMQA_dev_cluster-55-1", "input": "where is the largest country in the world located?", "output": "[\"SELECT['countries']\", \"PROJECT['size of #REF', '#1']\", \"SUPERLATIVE['max', '#1', '#2']\", \"PROJECT['where is #REF located', '#3']\"]"}
{"id": "COMQA_dev_cluster-551-1", "input": "what is saint anastasia's feast day?", "output": "[\"SELECT['saint anastasia']\", \"PROJECT['feast day of #REF', '#1']\", \"PROJECT['what is #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-553-1", "input": "what language do people in alaska speak?", "output": "[\"SELECT['alaska']\", \"PROJECT['people of #REF', '#1']\", \"PROJECT['language of #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-557-1", "input": "which language do people from zurich in switzerland speak?", "output": "[\"SELECT['zurich']\", \"FILTER['#1', 'in switzerland']\", \"PROJECT['language of #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-559-1", "input": "who was the first team win in the nba finals?", "output": "[\"SELECT['nba finals']\", \"PROJECT['teams that did win in #REF', '#1']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "COMQA_dev_cluster-560-1", "input": "what is the capital of greece?", "output": "[\"SELECT['greece']\", \"PROJECT['capital of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-563-1", "input": "when did prince william and kate get married?", "output": "[\"SELECT['prince william and kate get married']\", \"PROJECT['date of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-567-1", "input": "what did kandinsky paint?", "output": "[\"SELECT['kandinsky']\", \"PROJECT['what did #REF paint', '#1']\"]"}
{"id": "COMQA_dev_cluster-57-1", "input": "what ocean separates denmark from sweden?", "output": "[\"SELECT['ocean']\", \"SELECT['denmark']\", \"SELECT['sweden']\", \"FILTER['#1', 'that separates #2 from #3']\"]"}
{"id": "COMQA_dev_cluster-571-1", "input": "where is the headquarter of saarc?", "output": "[\"SELECT['saarc']\", \"PROJECT['headquarter of #REF', '#1']\", \"PROJECT['where is #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-575-1", "input": "what is largest city in us by population?", "output": "[\"SELECT['the us']\", \"PROJECT['cities of #REF', '#1']\", \"PROJECT['population of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is the highest']\"]"}
{"id": "COMQA_dev_cluster-580-1", "input": "what lands did bernardo de galvez in north america?", "output": "[\"SELECT['bernardo de galvez']\", \"PROJECT['lands of #REF', '#1']\", \"FILTER['#2', 'in north america']\"]"}
{"id": "COMQA_dev_cluster-582-1", "input": "what language spoken in saudi arabia?", "output": "[\"SELECT['saudi arabia']\", \"SELECT['languages']\", \"FILTER['#2', 'spoken in #1']\"]"}
{"id": "COMQA_dev_cluster-583-1", "input": "who is king julian's voice from penguins of madagascar?", "output": "[\"SELECT['penguins of madagascar']\", \"PROJECT['king julian of #REF', '#1']\", \"PROJECT['voice of #REF', '#2']\", \"PROJECT['who is #REF', '#3']\"]"}
{"id": "COMQA_dev_cluster-587-1", "input": "who was zimbabwe's first president?", "output": "[\"SELECT['zimbabwe']\", \"PROJECT['presidents of #REF', '#1']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "COMQA_dev_cluster-588-1", "input": "when did mariah and nick get married?", "output": "[\"SELECT['mariah and nick did get married']\", \"PROJECT['when was #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-594-1", "input": "first beatles album in us?", "output": "[\"SELECT['the beatles']\", \"PROJECT['album of #REF', '#1']\", \"FILTER['#2', 'in the us']\", \"AGGREGATE['min', '#3']\"]"}
{"id": "COMQA_dev_cluster-60-1", "input": "who played ellie may clampett in movie the beverly hillbillies?", "output": "[\"SELECT['the movie beverly hillbillies']\", \"PROJECT['who played ellie may clampett in #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-606-1", "input": "where was brian johnson born?", "output": "[\"SELECT['brian johnson']\", \"PROJECT['where was #REF born', '#1']\"]"}
{"id": "COMQA_dev_cluster-608-1", "input": "what was the first ever james bond movie made?", "output": "[\"SELECT['james bond']\", \"PROJECT['movies of #REF', '#1']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "COMQA_dev_cluster-611-1", "input": "what were the names of zachary taylor siblings?", "output": "[\"SELECT['zachary taylor']\", \"PROJECT['siblings of #REF', '#1']\", \"PROJECT['names of #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-611-2", "input": "what were the names of zachary taylor's siblings?", "output": "[\"SELECT['zachary taylor']\", \"PROJECT['siblings of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-611-3", "input": "zachary taylor's siblings?", "output": "[\"SELECT['zachary taylor']\", \"PROJECT['siblings of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-615-1", "input": "who was judy garlins first husband?", "output": "[\"SELECT['judy garlin']\", \"PROJECT['husbands of #REF', '#1']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "COMQA_dev_cluster-618-1", "input": "what was the name of alexander gramham daughter?", "output": "[\"SELECT['alexander gramham']\", \"PROJECT['daughter of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-633-1", "input": "what movies has jack black been in?", "output": "[\"SELECT['jack black']\", \"PROJECT['movies of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-650-1", "input": "what sea is in between greece and italy?", "output": "[\"SELECT['sea']\", \"SELECT['greece']\", \"SELECT['italy']\", \"FILTER['#1', 'that is between #2']\", \"FILTER['#1', 'that is between #3']\", \"INTERSECTION['#1', '#4', '#5']\"]"}
{"id": "COMQA_dev_cluster-652-1", "input": "who was elected president of the us in 1860?", "output": "[\"SELECT['the us']\", \"PROJECT['who was elected president of #REF', '#1']\", \"FILTER['#2', 'in 1860']\"]"}
{"id": "COMQA_dev_cluster-653-1", "input": "which religion came first judaism or islam?", "output": "[\"SELECT['judaism came']\", \"SELECT['islam came']\", \"PROJECT['date of #REF', '#1']\", \"PROJECT['date of #REF', '#2']\", \"COMPARISON['min', '#3', '#4']\"]"}
{"id": "COMQA_dev_cluster-655-1", "input": "who is bosnia leader?", "output": "[\"SELECT['bosnia']\", \"PROJECT['leader of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-658-1", "input": "what is the time zone of honolulu hawaii?", "output": "[\"SELECT['honolulu hawaii']\", \"PROJECT['time zone of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-659-1", "input": "what are the current senators of georgia?", "output": "[\"SELECT['georgia']\", \"PROJECT['current senators of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-663-1", "input": "what countries speak french as their first language?", "output": "[\"SELECT['countries']\", \"PROJECT['languages of #REF', '#1']\", \"FILTER['#2', 'that is first']\", \"COMPARATIVE['#1', '#3', 'is french']\"]"}
{"id": "COMQA_dev_cluster-663-2", "input": "countries that speak french", "output": "[\"SELECT['countries']\", \"FILTER['#1', 'that speak french']\"]"}
{"id": "COMQA_dev_cluster-664-1", "input": "major rivers of new zealand?", "output": "[\"SELECT['new zealand']\", \"PROJECT['rivers of #REF', '#1']\", \"FILTER['#2', 'that are major']\"]"}
{"id": "COMQA_dev_cluster-669-1", "input": "who became president in 1989 of south africa?", "output": "[\"SELECT['south africa']\", \"PROJECT['who became president of #REF', '#1']\", \"FILTER['#2', 'in 1989']\"]"}
{"id": "COMQA_dev_cluster-669-2", "input": "who was the president of south africa in 1989?", "output": "[\"SELECT['south africa']\", \"PROJECT['president of #REF', '#1']\", \"FILTER['#2', 'in 1989']\"]"}
{"id": "COMQA_dev_cluster-669-3", "input": "president of south africa in 1989?", "output": "[\"SELECT['south africa']\", \"PROJECT['presidents of #REF', '#1']\", \"FILTER['#2', 'that is in 1989']\"]"}
{"id": "COMQA_dev_cluster-67-1", "input": "what were 2 early influences on einstein's life?", "output": "[\"SELECT['einstein']\", \"PROJECT['life of #REF', '#1']\", \"PROJECT['two early influences of #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-671-1", "input": "what are the 5 cities in alaska with the highest population?", "output": "[\"SELECT['alaska']\", \"PROJECT['cities of #REF', '#1']\", \"PROJECT['population of #REF', '#2']\", \"AGGREGATE['max', '#3']\", \"COMPARATIVE['#2', '#3', 'is in #4']\"]"}
{"id": "COMQA_dev_cluster-677-1", "input": "who was president truman's successor?", "output": "[\"SELECT['president truman']\", \"PROJECT['successor of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-678-1", "input": "the largest city in the great lakes region?", "output": "[\"SELECT['great lakes region']\", \"PROJECT['cities of #REF', '#1']\", \"PROJECT['size of #REF', '#2']\", \"SUPERLATIVE['max', '#2', '#3']\"]"}
{"id": "COMQA_dev_cluster-678-2", "input": "what is the greatest city in the great lakes region?", "output": "[\"SELECT['great lakes region']\", \"PROJECT['city of #REF', '#1']\", \"FILTER['#2', 'that is the greatest']\"]"}
{"id": "COMQA_dev_cluster-680-1", "input": "what are the main languages spoken in wales?", "output": "[\"SELECT['wales']\", \"PROJECT['main languages of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-68-1", "input": "what is president andrew jackson's parents name?", "output": "[\"SELECT['president andrew jackson']\", \"PROJECT['parents of #REF', '#1']\", \"PROJECT['names of #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-68-2", "input": "what was president andrew jackson's parents names?", "output": "[\"SELECT['president andrew jackson']\", \"PROJECT['the parents of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-69-1", "input": "what jehovah witnesses believe in?", "output": "[\"SELECT['jehovah witnesses']\", \"PROJECT['what #REF believe in', '#1']\"]"}
{"id": "COMQA_dev_cluster-692-1", "input": "fifth president born in ohio?", "output": "[\"SELECT['presidents']\", \"FILTER['#1', 'that are born in ohio']\", \"PROJECT['the fifth of #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-692-2", "input": "name a president born in ohio?", "output": "[\"SELECT['presidents']\", \"FILTER['#1', 'that are born in ohio']\"]"}
{"id": "COMQA_dev_cluster-696-1", "input": "where can belize be found in the world?", "output": "[\"SELECT['belize']\", \"PROJECT['where is #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-700-1", "input": "what is trinidad and tobago zip code?", "output": "[\"SELECT['trinidad and tobago']\", \"PROJECT['zip code of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-700-2", "input": "trinidad and tobago zip code?", "output": "[\"SELECT['trinidad and tobago']\", \"PROJECT['zip code of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-702-1", "input": "when the birthday of albie cansino?", "output": "[\"SELECT['albie cansino']\", \"PROJECT['birthday of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-702-2", "input": "when albie casino birthday?", "output": "[\"SELECT['albie casino']\", \"PROJECT['birthday of #REF', '#1']\", \"PROJECT['when is #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-704-1", "input": "what are david ortizs siblings names?", "output": "[\"SELECT['david ortizs']\", \"PROJECT['siblings of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-718-1", "input": "which state is the largest lake of okeechobee in?", "output": "[\"SELECT['okeechobee']\", \"PROJECT['lakes of #REF', '#1']\", \"PROJECT['size of #REF', '#2']\", \"SUPERLATIVE['max', '#2', '#3']\", \"PROJECT['state of #REF', '#4']\"]"}
{"id": "COMQA_dev_cluster-732-1", "input": "what was toni morrison's childrens names?", "output": "[\"SELECT['toni morrison']\", \"PROJECT['childrens of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-737-1", "input": "when was mark dean born and where was he born at?", "output": "[\"SELECT['mark dean']\", \"PROJECT['when was #REF born', '#1']\", \"PROJECT['where was #REF born at', '#1']\", \"UNION['#2', '#3']\"]"}
{"id": "COMQA_dev_cluster-742-1", "input": "who was before elizabeth ii?", "output": "[\"SELECT['elizabeth ii']\", \"PROJECT['who was before #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-745-1", "input": "what capital city of australia and singapore?", "output": "[\"SELECT['australia']\", \"SELECT['singapore']\", \"PROJECT['capital city of #REF', '#1']\", \"PROJECT['capital city of #REF', '#2']\", \"UNION['#3', '#4']\"]"}
{"id": "COMQA_dev_cluster-748-1", "input": "who is avi married to now?", "output": "[\"SELECT['avi']\", \"PROJECT['who is #REF married to', '#1']\"]"}
{"id": "COMQA_dev_cluster-749-1", "input": "what was george orwell's wifes name?", "output": "[\"SELECT['george orwell']\", \"PROJECT['the wifes of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-750-1", "input": "what is the religions of finland?", "output": "[\"SELECT['finland']\", \"PROJECT['religions of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-75-1", "input": "what 4 players have played for manchester united and leeds united?", "output": "[\"SELECT['manchester united']\", \"SELECT['leeds united']\", \"SELECT['players']\", \"INTERSECTION['#3', '#1', '#2']\"]"}
{"id": "COMQA_dev_cluster-751-1", "input": "where was drew seeley form?", "output": "[\"SELECT['drew seeley']\", \"PROJECT['where was #REF from', '#1']\"]"}
{"id": "COMQA_dev_cluster-759-1", "input": "who is jocasta's first husband in the play 'oedipus tyrannus'?", "output": "[\"SELECT['jocasta']\", \"FILTER['#1', 'in the play oedipus tyrannus']\", \"PROJECT['husbands of #REF', '#2']\", \"AGGREGATE['min', '#3']\"]"}
{"id": "COMQA_dev_cluster-759-2", "input": "who is jocasta's 1st husband in 'oedipus tyrannus'?", "output": "[\"SELECT['oedipus tyrannus']\", \"PROJECT['jocasta in #REF', '#1']\", \"PROJECT['husbands of #REF', '#2']\", \"PROJECT['the 1st of #REF', '#3']\"]"}
{"id": "COMQA_dev_cluster-76-1", "input": "address and post code of sainsburys head office?", "output": "[\"SELECT['sainsburys head office']\", \"PROJECT['address of #REF', '#1']\", \"PROJECT['post code of #REF', '#1']\", \"UNION['#2', '#3']\"]"}
{"id": "COMQA_dev_cluster-781-1", "input": "what were the gained territories in the six day war?", "output": "[\"SELECT['the six day war']\", \"PROJECT['gained territories of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-781-2", "input": "what territories did israel gain in the six day war?", "output": "[\"SELECT['israel']\", \"PROJECT['territories that #REF gains', '#1']\", \"SELECT['the six day war']\", \"FILTER['#2', 'in #3']\"]"}
{"id": "COMQA_dev_cluster-786-1", "input": "what asian country which touches india and china?", "output": "[\"SELECT['asian country']\", \"SELECT['india']\", \"SELECT['china']\", \"FILTER['#1', 'that touches #2']\", \"FILTER['#1', 'that touches #3']\", \"INTERSECTION['#1', '#4', '#5']\"]"}
{"id": "COMQA_dev_cluster-787-1", "input": "what was the first satellite to land on mars?", "output": "[\"SELECT['satellites']\", \"SELECT['mars']\", \"FILTER['#1', 'that land on #2']\", \"AGGREGATE['min', '#3']\"]"}
{"id": "COMQA_dev_cluster-787-2", "input": "which is the first satellite to land on mars?", "output": "[\"SELECT['mars']\", \"PROJECT['satellites that did land on #REF', '#1']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "COMQA_dev_cluster-794-1", "input": "who was the english prime minister durning the french revolution?", "output": "[\"SELECT['the english']\", \"PROJECT['prime minister of #REF', '#1']\", \"FILTER['#2', 'durning the french revolution']\"]"}
{"id": "COMQA_dev_cluster-795-1", "input": "what was the capital of germany in 1914?", "output": "[\"SELECT['germany']\", \"PROJECT['the capital of #REF', '#1']\", \"FILTER['#2', 'in 1914']\"]"}
{"id": "COMQA_dev_cluster-799-1", "input": "what mountain range separates india from china?", "output": "[\"SELECT['mountain range']\", \"SELECT['india']\", \"SELECT['china']\", \"FILTER['#1', 'that separates #2 from #3']\"]"}
{"id": "COMQA_dev_cluster-801-1", "input": "what year did elvis record his first song?", "output": "[\"SELECT['elvis']\", \"PROJECT['songs of #REF', '#1']\", \"PROJECT['years of #REF', '#2']\", \"AGGREGATE['min', '#3']\"]"}
{"id": "COMQA_dev_cluster-81-1", "input": "which president graduated from harvard and from yale?", "output": "[\"SELECT['presidents']\", \"SELECT['harvard']\", \"SELECT['yale']\", \"FILTER['#1', 'that graduated from #2']\", \"FILTER['#1', 'that graduated from #3']\", \"INTERSECTION['#1', '#4', '#5']\"]"}
{"id": "COMQA_dev_cluster-811-1", "input": "what president was in office when veterans day became a holiday?", "output": "[\"SELECT['veterans day became a holiday']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['president in #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-817-1", "input": "which side won during first battle of bull run?", "output": "[\"SELECT['first battle of bull run']\", \"PROJECT['sides of #REF', '#1']\", \"FILTER['#2', 'that won']\"]"}
{"id": "COMQA_dev_cluster-829-1", "input": "where is the highest point in st lucia?", "output": "[\"SELECT['st lucia']\", \"PROJECT['points of #REF', '#1']\", \"PROJECT['height of #REF', '#2']\", \"SUPERLATIVE['max', '#2', '#3']\"]"}
{"id": "COMQA_dev_cluster-835-1", "input": "who starred as paul drake on tv show perry mason?", "output": "[\"SELECT['tv show perry mason']\", \"PROJECT['paul drake of #REF', '#1']\", \"PROJECT['who starred #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-837-2", "input": "what is the largest mountain region in south america?", "output": "[\"SELECT['south america']\", \"PROJECT['mountain regions of #REF', '#1']\", \"AGGREGATE['max', '#2']\"]"}
{"id": "COMQA_dev_cluster-838-1", "input": "what is the name of barbara windsors eastenders character?", "output": "[\"SELECT['barbara windsor']\", \"PROJECT['characters of #REF', '#1']\", \"FILTER['#2', 'on eastenders']\", \"PROJECT['name of #REF', '#3']\"]"}
{"id": "COMQA_dev_cluster-840-1", "input": "what is the 2nd smallest country in the world?", "output": "[\"SELECT['countries']\", \"PROJECT['size of #REF', '#1']\", \"SUPERLATIVE['min', '#1', '#2']\", \"DISCARD['#1', '#3']\", \"SUPERLATIVE['min', '#4', '#2']\"]"}
{"id": "COMQA_dev_cluster-840-2", "input": "the 2nd smallest country in the world?", "output": "[\"SELECT['the world']\", \"PROJECT['countries of #REF', '#1']\", \"PROJECT['size of #REF', '#2']\", \"SUPERLATIVE['min', '#2', '#3']\", \"DISCARD['#2', '#4']\", \"PROJECT['size of #REF', '#5']\", \"SUPERLATIVE['min', '#5', '#6']\"]"}
{"id": "COMQA_dev_cluster-854-1", "input": "who does the donna part in mama mia?", "output": "[\"SELECT['mama mia']\", \"PROJECT['donna in #REF', '#1']\", \"PROJECT['who does #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-856-1", "input": "which country is larger than australia?", "output": "[\"SELECT['countries']\", \"SELECT['australia']\", \"PROJECT['size of #REF', '#1']\", \"PROJECT['size of #REF', '#2']\", \"COMPARATIVE['#1', '#3', 'is higher than #4']\"]"}
{"id": "COMQA_dev_cluster-86-1", "input": "who won the oscar for the best movie actress in 1999?", "output": "[\"SELECT['oscar for best movie actress']\", \"PROJECT['who won #REF', '#1']\", \"FILTER['#2', 'in 1999']\"]"}
{"id": "COMQA_dev_cluster-864-1", "input": "who was maya angelou first husband?", "output": "[\"SELECT['maya angelou']\", \"PROJECT['husbands of #REF', '#1']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "COMQA_dev_cluster-864-2", "input": "who is maya angelou 1st husband?", "output": "[\"SELECT['maya angelou']\", \"PROJECT['husbands of #REF', '#1']\", \"PROJECT['1st of #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-867-1", "input": "what is joseph bidens home state?", "output": "[\"SELECT['joseph biden']\", \"PROJECT['the home state of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-867-2", "input": "what is joe biddens state?", "output": "[\"SELECT['joe bidden']\", \"PROJECT['state of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-874-1", "input": "what movie got tom hanks his 3rd oscar nomination?", "output": "[\"SELECT['tom hanks']\", \"PROJECT['oscar nominations of #REF', '#1']\", \"PROJECT['3rd of #REF', '#2']\", \"PROJECT['movies of #REF', '#3']\"]"}
{"id": "COMQA_dev_cluster-874-2", "input": "what movie garnered tom hanks his third oscar nomination?", "output": "[\"SELECT['tom hanks']\", \"PROJECT['oscar nominations of #REF', '#1']\", \"PROJECT['the third of #REF', '#2']\", \"PROJECT['movie of #REF', '#3']\"]"}
{"id": "COMQA_dev_cluster-878-1", "input": "when did eli win the superbowl?", "output": "[\"SELECT['eli win the superbowl']\", \"PROJECT['date of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-879-1", "input": "what is the smallest country in the uk?", "output": "[\"SELECT['uk']\", \"PROJECT['countries of #REF', '#1']\", \"PROJECT['size of #REF', '#2']\", \"SUPERLATIVE['min', '#2', '#3']\"]"}
{"id": "COMQA_dev_cluster-879-2", "input": "what uk country is the smallest?", "output": "[\"SELECT['uk']\", \"PROJECT['countries of #REF', '#1']\", \"PROJECT['size of #REF', '#2']\", \"SUPERLATIVE['min', '#2', '#3']\"]"}
{"id": "COMQA_dev_cluster-88-1", "input": "which florida county has the lowest population?", "output": "[\"SELECT['florida']\", \"PROJECT['county of #REF', '#1']\", \"PROJECT['population of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is the lowest']\"]"}
{"id": "COMQA_dev_cluster-882-1", "input": "what nationality does henri rousseau?", "output": "[\"SELECT['henri rousseau']\", \"PROJECT['nationality of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-883-1", "input": "what movies was bon jovi in?", "output": "[\"SELECT['bon jovi']\", \"PROJECT['movies that #REF was in', '#1']\"]"}
{"id": "COMQA_dev_cluster-884-1", "input": "what is the major religions in ghana?", "output": "[\"SELECT['ghana']\", \"PROJECT['major religions of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-887-1", "input": "where does justin bieber's dad live?", "output": "[\"SELECT['justin bieber']\", \"PROJECT['dad of #REF', '#1']\", \"PROJECT['where does #REF live', '#2']\"]"}
{"id": "COMQA_dev_cluster-890-1", "input": "what place was jackie robinson born in?", "output": "[\"SELECT['jackie robinson born']\", \"PROJECT['place of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-894-1", "input": "what was polands first winner of the nobel prize in literature?", "output": "[\"SELECT['poland']\", \"PROJECT['winners of the nobel prize in literature of #REF', '#1']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "COMQA_dev_cluster-894-2", "input": "who was polands first nobel prize winner in literature?", "output": "[\"SELECT['the nobel prize in literature']\", \"PROJECT['winners of #REF', '#1']\", \"FILTER['#2', 'that are from poland']\", \"AGGREGATE['min', '#3']\"]"}
{"id": "COMQA_dev_cluster-897-1", "input": "who won the battle of yorktown in 1781?", "output": "[\"SELECT['the battle of yorktown']\", \"FILTER['#1', 'in 1781']\", \"PROJECT['who won #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-898-1", "input": "where did captain james cook go to school?", "output": "[\"SELECT['captain james cook']\", \"PROJECT['school of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-898-2", "input": "what college did captain james cook go to?", "output": "[\"SELECT['captain james cook']\", \"PROJECT['college of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-904-1", "input": "which countries touch both the atlantic and the pacific oceans?", "output": "[\"SELECT['countries']\", \"SELECT['atlantic ocean']\", \"SELECT['pacific ocean']\", \"FILTER['#1', 'that touch #2']\", \"FILTER['#1', 'that touch #3']\", \"INTERSECTION['#1', '#4', '#5']\"]"}
{"id": "COMQA_dev_cluster-906-1", "input": "what is rihanna's current song on the radio?", "output": "[\"SELECT['rihanna']\", \"PROJECT['song of #REF', '#1']\", \"FILTER['#2', 'that is current on the radio']\"]"}
{"id": "COMQA_dev_cluster-907-1", "input": "when was spongebob first aired?", "output": "[\"SELECT['spongebob']\", \"PROJECT['date that #REF first aired', '#1']\"]"}
{"id": "COMQA_dev_cluster-908-1", "input": "what song was given an award for best song in 1988?", "output": "[\"SELECT['songs']\", \"FILTER['#1', 'that was given an award for best song in 1988']\"]"}
{"id": "COMQA_dev_cluster-908-2", "input": "what song was awarded the grammy award in 1988 for best song?", "output": "[\"SELECT['the grammy award for best song']\", \"PROJECT['song that was awarded #REF', '#1']\", \"FILTER['#2', 'in 1988']\"]"}
{"id": "COMQA_dev_cluster-908-3", "input": "which song was awarded the grammy for the best song of 1988?", "output": "[\"SELECT['the grammy for best song']\", \"PROJECT['song that was awarded #REF', '#1']\", \"FILTER['#2', 'in 1988']\"]"}
{"id": "COMQA_dev_cluster-917-1", "input": "what country is the jura mountains?", "output": "[\"SELECT['jura mountains']\", \"PROJECT['country of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-917-2", "input": "what country are the jura mountains located in?", "output": "[\"SELECT['the jura mountains']\", \"PROJECT['country of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-920-1", "input": "where did dale sr go to collage?", "output": "[\"SELECT['dale sr']\", \"PROJECT['collage of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-922-1", "input": "what sea separates the scandinavia peninsula from britain?", "output": "[\"SELECT['sea']\", \"SELECT['the scandinavia peninsula']\", \"SELECT['britain']\", \"FILTER['#1', 'that separates #2 from #3']\"]"}
{"id": "COMQA_dev_cluster-933-1", "input": "what is the largest mountain system in the world?", "output": "[\"SELECT['world']\", \"PROJECT['mountain system of #REF', '#1']\", \"FILTER['#2', 'that is the largest']\"]"}
{"id": "COMQA_dev_cluster-933-2", "input": "what is the largest mountain chain on the world?", "output": "[\"SELECT['world']\", \"PROJECT['mountain chain of #REF', '#1']\", \"PROJECT['the size of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is the largest']\"]"}
{"id": "COMQA_dev_cluster-939-1", "input": "famous singers who were born in california?", "output": "[\"SELECT['singers']\", \"FILTER['#1', 'that are famous']\", \"FILTER['#2', 'that are born in california']\"]"}
{"id": "COMQA_dev_cluster-943-1", "input": "what is the name of the king in thailand in 2009?", "output": "[\"SELECT['thailand']\", \"PROJECT['king of #REF', '#1']\", \"FILTER['#2', 'in 2009']\"]"}
{"id": "COMQA_dev_cluster-944-1", "input": "what instrument did frank sinatra play?", "output": "[\"SELECT['frank sinatra']\", \"PROJECT['instrument that #REF play', '#1']\"]"}
{"id": "COMQA_dev_cluster-948-1", "input": "who is manager of wigan football club?", "output": "[\"SELECT['wigan football club']\", \"PROJECT['manager of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-955-1", "input": "what are the school colors of miami university?", "output": "[\"SELECT['miami university']\", \"PROJECT['school colors of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-959-1", "input": "in the twilight series what is the third book called?", "output": "[\"SELECT['twilight series']\", \"PROJECT['books of #REF', '#1']\", \"PROJECT['third of #REF', '#2']\"]"}
{"id": "COMQA_dev_cluster-96-1", "input": "who was the first american female to go to space?", "output": "[\"SELECT['american']\", \"FILTER['#1', 'that did go to space']\", \"FILTER['#2', 'that was female']\", \"AGGREGATE['min', '#3']\"]"}
{"id": "COMQA_dev_cluster-961-1", "input": "what movies has kathy bates starred in?", "output": "[\"SELECT['kathy bates']\", \"PROJECT['movies of #REF', '#1']\"]"}
{"id": "COMQA_dev_cluster-963-1", "input": "who was the first yankees manager?", "output": "[\"SELECT['yankees']\", \"PROJECT['managers of #REF', '#1']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "COMQA_dev_cluster-965-1", "input": "which states border virginia the west?", "output": "[\"SELECT['virginia']\", \"PROJECT['border states of #REF', '#1']\", \"FILTER['#2', 'to the west']\"]"}
{"id": "COMQA_dev_cluster-977-1", "input": "who won champion league most?", "output": "[\"SELECT['champions league']\", \"PROJECT['who is in #REF', '#1']\", \"PROJECT['champion league win of #REF', '#2']\", \"GROUP['count', '#3', '#2']\", \"COMPARATIVE['#2', '#4', 'is the highest']\"]"}
{"id": "COMQA_dev_cluster-979-1", "input": "who was the commander of the union army of the battle of gettysburg?", "output": "[\"SELECT['the union']\", \"PROJECT['army of #REF', '#1']\", \"PROJECT['the commander of #REF', '#2']\", \"FILTER['#3', 'in the battle of gettysburg']\"]"}
{"id": "COMQA_dev_cluster-979-2", "input": "who was the commander of the union forces at the battle of gettysburg?", "output": "[\"SELECT['the union']\", \"PROJECT['forces of #REF', '#1']\", \"PROJECT['commander of #REF', '#2']\", \"FILTER['#3', 'at the battle of gettysburg']\"]"}
{"id": "COMQA_dev_cluster-980-1", "input": "what country of latin america has the region's highest population?", "output": "[\"SELECT['latin america']\", \"PROJECT['countries of #REF', '#1']\", \"PROJECT['population of #REF', '#2']\", \"SUPERLATIVE['max', '#2', '#3']\"]"}
{"id": "COMQA_dev_cluster-980-2", "input": "highest population distribution in latin america?", "output": "[\"SELECT['latin america']\", \"PROJECT['population distributions of #REF', '#1']\", \"AGGREGATE['max', '#2']\"]"}
{"id": "COMQA_dev_cluster-991-1", "input": "this president is the first african american elected president?", "output": "[\"SELECT['presidents']\", \"FILTER['#1', 'that are african american']\", \"PROJECT['elected date of #REF', '#2']\", \"SUPERLATIVE['min', '#2', '#3']\"]"}
{"id": "COMQA_dev_cluster-992-1", "input": "who plays albus dumbledore in harry potter 6?", "output": "[\"SELECT['harry potter 6']\", \"PROJECT['albus dumbledore in #REF', '#1']\", \"PROJECT['who plays #REF', '#2']\"]"}
{"id": "GEO_dev_0", "input": "what is the biggest city in arizona ", "output": "[\"SELECT['cities']\", \"FILTER['#1', 'in arizona']\", \"PROJECT['size of #REF', '#2']\", \"SUPERLATIVE['max', '#2', '#3']\"]"}
{"id": "GEO_dev_1", "input": "which rivers run through the state with the largest city in the us ? ", "output": "[\"SELECT['state']\", \"PROJECT['cities in #REF', '#1']\", \"PROJECT['size of #REF', '#2']\", \"SUPERLATIVE['max', '#1', '#3']\", \"PROJECT['rivers in #REF', '#4']\"]"}
{"id": "GEO_dev_10", "input": "which states do colorado river flow through ", "output": "[\"SELECT['states']\", \"FILTER['#1', 'that the colorado river flows through']\"]"}
{"id": "GEO_dev_11", "input": "what state has the largest population ", "output": "[\"SELECT['states']\", \"PROJECT['populations of #REF', '#1']\", \"SUPERLATIVE['max', '#1', '#2']\"]"}
{"id": "GEO_dev_12", "input": "what is the lowest elevation in pennsylvania ", "output": "[\"SELECT['pennsylvania']\", \"PROJECT['lowest elevation in #REF', '#1']\"]"}
{"id": "GEO_dev_13", "input": "what is the highest point in each state whose lowest point is sea level ", "output": "[\"SELECT['states']\", \"FILTER['#1', 'whose lowest point is sea level']\", \"PROJECT['the highest point in each #REF', '#2']\"]"}
{"id": "GEO_dev_14", "input": "what is the length of the longest river in the usa ", "output": "[\"SELECT['rivers']\", \"FILTER['#1', 'in the usa']\", \"PROJECT['lengths of #REF', '#2']\", \"SUPERLATIVE['max', '#2', '#3']\", \"PROJECT['length of #REF', '#4']\"]"}
{"id": "GEO_dev_15", "input": "what is the longest river flowing through new york ", "output": "[\"SELECT['rivers']\", \"FILTER['#1', 'flowing through new york']\", \"PROJECT['longness of #REF', '#2']\", \"SUPERLATIVE['max', '#2', '#3']\"]"}
{"id": "GEO_dev_16", "input": "how many rivers are in new york ", "output": "[\"SELECT['rivers']\", \"FILTER['#1', 'in new york']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "GEO_dev_17", "input": "what states neighbor maine ", "output": "[\"SELECT['states']\", \"FILTER['#1', 'that neighbor maine']\"]"}
{"id": "GEO_dev_18", "input": "what texas city has the largest population ", "output": "[\"SELECT['cities']\", \"FILTER['#1', 'of texas']\", \"PROJECT['population of #REF', '#2']\", \"SUPERLATIVE['max', '#2', '#3']\"]"}
{"id": "GEO_dev_19", "input": "what are major rivers in texas ", "output": "[\"SELECT['texas']\", \"PROJECT['rivers in #REF', '#1']\", \"FILTER['#2', 'that are major']\"]"}
{"id": "GEO_dev_2", "input": "how big is texas ", "output": "[\"SELECT['size of texas']\"]"}
{"id": "GEO_dev_20", "input": "how many states border the state that borders the most states ", "output": "[\"SELECT['states']\", \"PROJECT['states that border #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"SUPERLATIVE['max', '#1', '#3']\", \"PROJECT['states that border #REF', '#4']\", \"AGGREGATE['count', '#5']\"]"}
{"id": "GEO_dev_21", "input": "what state is dallas in ", "output": "[\"SELECT['states']\", \"FILTER['#1', 'that dallas is in']\"]"}
{"id": "GEO_dev_22", "input": "how big is new mexico ", "output": "[\"SELECT['size of new mexico']\"]"}
{"id": "GEO_dev_23", "input": "what is the population of the state with the largest area ", "output": "[\"SELECT['states']\", \"PROJECT['area of #REF', '#1']\", \"SUPERLATIVE['max', '#1', '#2']\", \"PROJECT['population of #REF', '#3']\"]"}
{"id": "GEO_dev_24", "input": "how many people live in chicago ", "output": "[\"SELECT['people']\", \"FILTER['#1', 'that live in chicago']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "GEO_dev_25", "input": "what is the smallest city in arkansas ", "output": "[\"SELECT['cities']\", \"FILTER['#1', 'in arkansas']\", \"PROJECT['smallness of #REF', '#2']\", \"SUPERLATIVE['max', '#2', '#3']\"]"}
{"id": "GEO_dev_26", "input": "which states lie on the largest river in the united states ? ", "output": "[\"SELECT['the united states']\", \"PROJECT['rivers of #REF', '#1']\", \"PROJECT['size of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is the highest']\", \"PROJECT['states of #REF', '#4']\"]"}
{"id": "GEO_dev_27", "input": "which states border iowa ", "output": "[\"SELECT['iowa']\", \"PROJECT['states that border #REF', '#1']\"]"}
{"id": "GEO_dev_28", "input": "what is the population density of the state with the smallest area ", "output": "[\"SELECT['states']\", \"PROJECT['areas of #REF', '#1']\", \"SUPERLATIVE['min', '#1', '#2']\", \"PROJECT['population density of #REF', '#3']\"]"}
{"id": "GEO_dev_29", "input": "which states have points higher than the highest point in colorado ", "output": "[\"SELECT['colorado']\", \"PROJECT['points of #REF', '#1']\", \"PROJECT['elevation of #REF', '#2']\", \"AGGREGATE['max', '#3']\", \"SELECT['states']\", \"DISCARD['#5', '#1']\", \"PROJECT['points of #REF', '#6']\", \"PROJECT['elevation of #REF', '#7']\", \"COMPARATIVE['#6', '#8', 'is higher than #4']\"]"}
{"id": "GEO_dev_3", "input": "how many people live in washington ", "output": "[\"SELECT['washington']\", \"PROJECT['people that live in #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "GEO_dev_30", "input": "where is san diego ", "output": "[\"SELECT['san diego']\", \"PROJECT['where is #REF', '#1']\"]"}
{"id": "GEO_dev_31", "input": "what is the highest elevation in new mexico ", "output": "[\"SELECT['new mexico']\", \"PROJECT['the highest elevation in #REF', '#1']\"]"}
{"id": "GEO_dev_32", "input": "give me the longest river that passes through the us ", "output": "[\"SELECT['rivers']\", \"FILTER['#1', 'that passes through the us']\", \"PROJECT['size of #REF', '#2']\", \"SUPERLATIVE['max', '#2', '#3']\"]"}
{"id": "GEO_dev_33", "input": "what states border delaware ", "output": "[\"SELECT['states']\", \"FILTER['#1', 'that border delaware']\"]"}
{"id": "GEO_dev_34", "input": "what is the population of atlanta ga ", "output": "[\"SELECT['atlanta ga']\", \"PROJECT['the population of #REF', '#1']\"]"}
{"id": "GEO_dev_35", "input": "what state has the city with the largest population ", "output": "[\"SELECT['cities']\", \"PROJECT['population of #REF', '#1']\", \"SUPERLATIVE['max', '#1', '#2']\", \"PROJECT['state of #REF', '#3']\"]"}
{"id": "GEO_dev_36", "input": "what is the smallest city in the largest state ", "output": "[\"SELECT['states']\", \"PROJECT['size of #REF', '#1']\", \"SUPERLATIVE['max', '#1', '#2']\", \"PROJECT['cities of #REF', '#3']\", \"PROJECT['size of #REF', '#4']\", \"SUPERLATIVE['min', '#4', '#5']\"]"}
{"id": "GEO_dev_37", "input": "what state is the biggest ", "output": "[\"SELECT['states']\", \"PROJECT['biggest of #REF', '#1']\"]"}
{"id": "GEO_dev_38", "input": "what are the highest points of states surrounding mississippi ", "output": "[\"SELECT['states']\", \"FILTER['#1', 'surrounding mississippi']\", \"PROJECT['highest points of #REF', '#2']\"]"}
{"id": "GEO_dev_39", "input": "what states does the colorado river run through ", "output": "[\"SELECT['the colorado river']\", \"PROJECT['state of #REF', '#1']\"]"}
{"id": "GEO_dev_4", "input": "what state has the smallest population ", "output": "[\"SELECT['states']\", \"PROJECT['the populations of #REF', '#1']\", \"SUPERLATIVE['min', '#1', '#2']\"]"}
{"id": "GEO_dev_40", "input": "what is the state with the lowest population density ", "output": "[\"SELECT['states']\", \"PROJECT['population density of #REF', '#1']\", \"SUPERLATIVE['min', '#1', '#2']\"]"}
{"id": "GEO_dev_41", "input": "what is the longest river that passes the states that border the state that borders the most states ", "output": "[\"SELECT['states']\", \"PROJECT['border states of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is the highest']\", \"PROJECT['border states of #REF', '#4']\", \"PROJECT['rivers of #REF', '#5']\", \"PROJECT['how long are #REF', '#6']\", \"COMPARATIVE['#6', '#7', 'is the highest']\"]"}
{"id": "GEO_dev_42", "input": "how high is the highest point of florida ", "output": "[\"SELECT['points']\", \"FILTER['#1', 'in florida']\", \"PROJECT['elevation of #REF', '#2']\", \"AGGREGATE['max', '#3']\"]"}
{"id": "GEO_dev_43", "input": "what states border the mississippi river ? ", "output": "[\"SELECT['states']\", \"FILTER['#1', 'that border mississippi river']\"]"}
{"id": "GEO_dev_44", "input": "what is the population of dallas ", "output": "[\"SELECT['dallas']\", \"PROJECT['population of #REF', '#1']\"]"}
{"id": "GEO_dev_45", "input": "what is the largest city in missouri ", "output": "[\"SELECT['city']\", \"FILTER['#1', 'in missouri']\", \"PROJECT['size of #REF', '#2']\", \"SUPERLATIVE['max', '#2', '#3']\"]"}
{"id": "GEO_dev_46", "input": "where is the highest point in montana ", "output": "[\"SELECT['montana']\", \"PROJECT['highest point in #REF', '#1']\", \"PROJECT['where #REF is', '#2']\"]"}
{"id": "GEO_dev_47", "input": "what states have no bordering state ? ", "output": "[\"SELECT['states']\", \"FILTER['#1', 'that have no bordering state']\"]"}
{"id": "GEO_dev_48", "input": "which state borders most states ? ", "output": "[\"SELECT['states']\", \"PROJECT['states that border #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"SUPERLATIVE['max', '#1', '#3']\"]"}
{"id": "GEO_dev_49", "input": "what is the area of the state with the smallest population density ", "output": "[\"SELECT['states']\", \"FILTER['#1', 'with smallest population density']\", \"PROJECT['area of #REF', '#2']\"]"}
{"id": "GEO_dev_5", "input": "give me the cities in virginia ", "output": "[\"SELECT['cities']\", \"FILTER['#1', 'in virginia']\"]"}
{"id": "GEO_dev_6", "input": "what is the area of california ", "output": "[\"SELECT['california']\", \"PROJECT['the area of #REF', '#1']\"]"}
{"id": "GEO_dev_7", "input": "what is the area of the state with the capital albany ", "output": "[\"SELECT['state']\", \"FILTER['#1', 'with capital of albany']\", \"PROJECT['area of #REF', '#2']\"]"}
{"id": "GEO_dev_8", "input": "give me the lakes in california ", "output": "[\"SELECT['lakes']\", \"FILTER['#1', 'in california']\"]"}
{"id": "GEO_dev_9", "input": "what are the states ", "output": "[\"SELECT['states']\"]"}
{"id": "CWQ_dev_WebQTest-1011_c0be4f76a5397ba6d0d06f53905e504b", "input": "What Tibetan speaking countries have a population of less than 993885000?", "output": "[\"SELECT['countries']\", \"FILTER['#1', 'that are Tibetan speaking']\", \"PROJECT['populations of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is less than 993885000']\"]"}
{"id": "CWQ_dev_WebQTest-1011_edc922a0faa1e47614eb7e6effe2d1a1", "input": "What country uses Tibetan that has Anren Town , Sichuan?", "output": "[\"SELECT['Anren Town , Sichuan']\", \"PROJECT['country of #REF', '#1']\", \"FILTER['#2', 'that uses Tibetan']\"]"}
{"id": "CWQ_dev_WebQTest-1036_0b5333d98ef87008aa02d1fbc1554b05", "input": "What is the most common language in the country where Jamaican English is spoken?", "output": "[\"SELECT['Jamaican English']\", \"PROJECT['country where #REF is spoken', '#1']\", \"PROJECT['most common language in #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTest-1036_4e73509d14bda62590480b655eee8751", "input": "What language is spoken in the country that uses the Jamacian Dollar?", "output": "[\"SELECT['the Jamacian Dollar']\", \"PROJECT['country of #REF', '#1']\", \"PROJECT['language of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTest-1081_1ecabf57357cb4abd089a4af52154854", "input": "Where did George Washington Carver go to school with the largest number of postgraduates?", "output": "[\"SELECT['George Washington Carver']\", \"PROJECT['school of #REF', '#1']\", \"FILTER['#2', 'with the largest number of postgraduates']\"]"}
{"id": "CWQ_dev_WebQTest-1081_5b4d5fab18650207b4309c46bb516b3a", "input": "What university, with 1979 undergrads, was the alma mater of George Washington Carver?", "output": "[\"SELECT['George Washington Carver']\", \"PROJECT['university of #REF', '#1']\", \"PROJECT['undergrads of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is 1979']\"]"}
{"id": "CWQ_dev_WebQTest-1081_6118bd42202be020c123831a76c283c6", "input": "What college did the President who attended Minneapolis High School go to?", "output": "[\"SELECT['Minneapolis High School']\", \"PROJECT['President who attended #REF', '#1']\", \"PROJECT['college of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTest-1081_b0169639ff9b79386fb174d6d68395b9", "input": "What educational institution that has a men's basketball sports team  named Iowa State Cyclones did George Washington Carver go to college?", "output": "[\"SELECT['educational institutions']\", \"PROJECT['men s basketball sports teams of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is Iowa State Cyclones']\", \"FILTER['#3', 'where George Washington Carver go to college']\"]"}
{"id": "CWQ_dev_WebQTest-1137_2556f08f589714ccae48884d43d5641e", "input": "Which state houses the body of water under McClugage Bridge?", "output": "[\"SELECT['the McClugage Bridge']\", \"PROJECT['body of water under #REF', '#1']\", \"PROJECT['state that houses #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTest-1148_85916ec94a9f581ac4e0cb0cb51d84ea", "input": "What University did the author who published editions for, That was then, this is now, attend?", "output": "[\"SELECT['That was then , this is now']\", \"PROJECT['published editions of #REF', '#1']\", \"PROJECT['author of #REF', '#2']\", \"PROJECT['University of #REF', '#3']\"]"}
{"id": "CWQ_dev_WebQTest-1311_961ed72ec3b6b067aff322b7bf4a2a5a", "input": "What inspired the architect who designed Casa Vicens?", "output": "[\"SELECT['Casa Vicens']\", \"PROJECT['architect of #REF', '#1']\", \"PROJECT['what inspired #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTest-1359_8d7168bb778d9fc51f7b0659dedac7a9", "input": "What did Nicolas Cage named his son, and is the actor that played in the film, Lord of War?", "output": "[\"SELECT['Nicolas Cage']\", \"PROJECT['sons of #REF', '#1']\", \"FILTER['#2', 'who is played in the Lord of War']\"]"}
{"id": "CWQ_dev_WebQTest-1361_8f8e6bf5fcc19e4390b3949c9f46244b", "input": "What currency is used in the place were the Chihuahua breed originated?", "output": "[\"SELECT['places']\", \"FILTER['#1', 'where the Chihuahua breed originated']\", \"PROJECT['currency that is used in #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTest-1361_f1a91a5f994078bfd3452ce0b551bd8c", "input": "What currency does the place that the Federal government of Mexico is located at use?", "output": "[\"SELECT['the Federal government of Mexico']\", \"PROJECT['where is #REF', '#1']\", \"PROJECT['currency of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTest-1362_216d1f5d4149f19d634e237698c6d43e", "input": "Provide the name of the governor of the state where the 1848 Tampa Bay hurricane hit.?", "output": "[\"SELECT['the 1848 Tampa Bay hurricane']\", \"PROJECT['hit state of #REF', '#1']\", \"PROJECT['governor of #REF', '#2']\", \"PROJECT['name of #REF', '#3']\"]"}
{"id": "CWQ_dev_WebQTest-1364_0d3a714fa15cd2c51263642f23353a62", "input": "What language is spoken in the place where the Scottish Fold breed originated?", "output": "[\"SELECT['the Scottish Fold breed']\", \"PROJECT['originated place of #REF', '#1']\", \"PROJECT['spoken language of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTest-1370_ac58dde2a9a27704de508ef3ede7a9e1", "input": "Where was the home of the author of \"Leviathan (Audio Classics Series)?", "output": "[\"SELECT['Leviathan ( Audio Classics Series )']\", \"PROJECT['author of #REF', '#1']\", \"PROJECT['home of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTest-1370_e731a83ada913958daee14bdc7ecec63", "input": "Where does Leviathan's author reside?", "output": "[\"SELECT['Leviathan']\", \"PROJECT['the author of #REF', '#1']\", \"PROJECT['Where #REF does reside', '#2']\"]"}
{"id": "CWQ_dev_WebQTest-1382_0cf1031fcb74817dc13720bf87a54fc7", "input": "What countries neighboring Argentina have a country calling code higher than 591?", "output": "[\"SELECT['Argentina']\", \"PROJECT['neighboring countries of #REF', '#1']\", \"PROJECT['country calling codes of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is higher than 591']\"]"}
{"id": "CWQ_dev_WebQTest-1382_2ee819ba474253fdefba8cf094f02553", "input": "Which of the countries bordering Argentina have a country calling code higher than 55?", "output": "[\"SELECT['Argentina']\", \"PROJECT['countries bordering #REF', '#1']\", \"FILTER['#2', 'that have a country calling code higher than 55']\"]"}
{"id": "CWQ_dev_WebQTest-1382_47c68c12c2afd9ae65f31a10982c43db", "input": "Which country includes Nova Roma and share a border with Argentina?", "output": "[\"SELECT['Nova Roma']\", \"PROJECT['countries of #REF', '#1']\", \"FILTER['#2', 'that share a border with Argentina']\"]"}
{"id": "CWQ_dev_WebQTest-1382_6b6f19d9abc98d7eda3c6da9a66f1176", "input": "Which countries border the location where the Cordoba Fighting Dog breed originated at?", "output": "[\"SELECT['the Cordoba Fighting Dog']\", \"PROJECT['location where #REF originated at', '#1']\", \"PROJECT['countries that border #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTest-1382_ce0d4e864020f94cb6ba262eb64a975e", "input": "What country bordering Argentina has Brasilia as its capital?", "output": "[\"SELECT['Argentina']\", \"PROJECT['country bordering #REF', '#1']\", \"FILTER['#2', 'that has Brasilia as its capital']\"]"}
{"id": "CWQ_dev_WebQTest-1382_ed31f9dd431831dbd32a06b958c7c97c", "input": "Which countries includes the region of Goias and shares a border with Argentina?", "output": "[\"SELECT['region']\", \"FILTER['#1', 'that is Goias']\", \"PROJECT['countries that include #REF', '#2']\", \"FILTER['#3', 'that share a border with Argentina']\"]"}
{"id": "CWQ_dev_WebQTest-1383_12aaa127b4f5373235d0730cc3ec55f3", "input": "What Icelandic language is spoken in Icelandic countries?", "output": "[\"SELECT['Icelandic languages']\", \"FILTER['#1', 'that is spoken in Icelandic countries']\"]"}
{"id": "CWQ_dev_WebQTest-1383_1798e1bd7dcf136069d805e4e520f1b8", "input": "Does anyone know what language is spoken where the Althing is the body of governance?", "output": "[\"SELECT['the Althing']\", \"PROJECT['where is #REF', '#1']\", \"PROJECT['spoken language of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTest-1383_26d763fd8c0c980d2c3c8db05f0fa266", "input": "What language does the people in the location where the Icelandic Sheepdog originated?", "output": "[\"SELECT['the Icelandic Sheepdog']\", \"PROJECT['originated location of #REF', '#1']\", \"PROJECT['language of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTest-1405_16ca6ba9175be9a3dc6f3f80597079f3", "input": "What  attraction in Salt Lake City has 1012563 visitors annually?", "output": "[\"SELECT['Salt Lake City']\", \"PROJECT['attraction of #REF', '#1']\", \"PROJECT['visitors annually of #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"COMPARATIVE['#2', '#4', 'is 1012563']\"]"}
{"id": "CWQ_dev_WebQTest-1405_2d76b908c7f1f4508244e8c6efc34a24", "input": "What are attractions in the location where \"The Life of Nephi\" takes place?", "output": "[\"SELECT['The Life of Nephi']\", \"PROJECT['location where #REF takes place', '#1']\", \"PROJECT['attractions of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTest-1405_61ca90ad093e6c03dd5adfab01d7f9c8", "input": "What popular attraction in Salt Lake City, Utah, has 2.6 million visitors annually?", "output": "[\"SELECT['Salt Lake City , Utah']\", \"PROJECT['popular attractions of #REF', '#1']\", \"PROJECT['visitors annually of #REF', '#2']\", \"GROUP['count', '#3', '#2']\", \"COMPARATIVE['#2', '#4', 'is 2.6 million']\"]"}
{"id": "CWQ_dev_WebQTest-1441_36a8b390b228b423efdeb7906e40dba7", "input": "Where did the visual artist live that created \"Three Musicians\"?", "output": "[\"SELECT['Three Musicians']\", \"PROJECT['visual artist that created #REF', '#1']\", \"PROJECT['Where did #REF live', '#2']\"]"}
{"id": "CWQ_dev_WebQTest-1441_37d68ad3c2720a3fccdabd4e33f3bfbd", "input": "Where did Picasso live with a capital called Paris?", "output": "[\"SELECT['Picasso']\", \"PROJECT['Where did #REF live', '#1']\", \"PROJECT['capitals of #REF', '#2']\", \"FILTER['#2', 'Where #3 is Paris']\"]"}
{"id": "CWQ_dev_WebQTest-1441_a3b2db46dae148f34af3cf3725a860d8", "input": "What city was the birthplace of Bernard Berrian and the home of Pablo Picasso?", "output": "[\"SELECT['Pablo Picasso']\", \"PROJECT['home cities of #REF', '#1']\", \"FILTER['#2', 'that was the birthplace of Bernard Berrian']\"]"}
{"id": "CWQ_dev_WebQTest-1441_ab7950cab6c0ff35ce9aa6b41d98c2db", "input": "Which country in which Picasso lived held the First Valls Government?", "output": "[\"SELECT['Picasso']\", \"PROJECT['countries lived in of #REF', '#1']\", \"FILTER['#2', 'that held the First Valls Government']\"]"}
{"id": "CWQ_dev_WebQTest-1441_e6a542ce7b518b8f58626e3e75d72732", "input": "Where did Picasso live that appointed Louis-EugÃ¨ne Cavaignac to a governmental position?", "output": "[\"SELECT['Picasso']\", \"PROJECT['where did #REF live', '#1']\", \"FILTER['#2', 'which is where Louis-EugÃ¨ne was appointed to a governmental position']\"]"}
{"id": "CWQ_dev_WebQTest-1441_f614533b22c8b22bfac2500555a726ab", "input": "Also the location where pro athlete started his 2003 career, where did Picasso live?", "output": "[\"SELECT['Picasso']\", \"PROJECT['where did #REF live', '#1']\", \"FILTER['#2', 'that was the location where a pro athlete started his career in 2003']\"]"}
{"id": "CWQ_dev_WebQTest-1447_4aa435573cd9f302509836c4b42ed582", "input": "On the Star Wars Episode I: The Phantom Menace soundtrack, who plays Anakin Skywalker?", "output": "[\"SELECT['Star Wars Episode I The Phantom Menace']\", \"PROJECT['soundtrack of #REF', '#1']\", \"PROJECT['who plays Anakin Skywalker on #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTest-1462_4c56262d6806c8bd5c0fadb75177520a", "input": "Which Director of Multilateral Affairs from 2012 has run for Vice President?", "output": "[\"SELECT['Multilateral Affairs']\", \"PROJECT['Director in 2012 of #REF', '#1']\", \"FILTER['#2', 'that has run for Vice President']\"]"}
{"id": "CWQ_dev_WebQTest-1462_b50634fcb022c0a649341ed319148244", "input": "Who ran as Vice President in 2012 and once held the Undersecretary position?", "output": "[\"SELECT['the Undersecretary position']\", \"PROJECT['who has once held #REF', '#1']\", \"FILTER['#2', 'that ran as Vice President in 2012']\"]"}
{"id": "CWQ_dev_WebQTest-147_1ea47d20e7599a246b03c33fb0804ca5", "input": "Who is the Governor of the state of circulation for Brownlow's Whig?", "output": "[\"SELECT['Brownlow s Whig']\", \"PROJECT['state of circulation of #REF', '#1']\", \"PROJECT['Governor of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTest-147_644d8b10e41eb2694964c46b85083b9e", "input": "A state held the 2008 United States Senate Election in Tennessee; what is its governor?", "output": "[\"SELECT['the 2008 United States Election in Tennessee']\", \"PROJECT['state of #REF', '#1']\", \"PROJECT['governor of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTest-1475_d308486ebfad93a99cf9618ca1c17603", "input": "The composer of Sands Theme plays what type of guitar?", "output": "[\"SELECT['Sands Theme']\", \"PROJECT['composer of #REF', '#1']\", \"PROJECT['type of guitar of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTest-1508_6a84ab6bb16c8ec640608733b4177366", "input": "Which university where Bill Clinton was educated has a mascot with the moniker Handsome Dan?", "output": "[\"SELECT['Bill Clinton']\", \"PROJECT['universities of #REF', '#1']\", \"PROJECT['mascots of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is Handsome Dan']\"]"}
{"id": "CWQ_dev_WebQTest-1508_87f2309c33a86e13ce73f341a6f1dc46", "input": "Where did the person who went to St. John's Catholic Elementary School attend college?", "output": "[\"SELECT['St. John s Catholic Elementary School']\", \"PROJECT['the person that went to #REF', '#1']\", \"PROJECT['the college #REF did attend', '#2']\"]"}
{"id": "CWQ_dev_WebQTest-1508_93912908b875ac41bfb5d02dface3787", "input": "What college did the actor that starred in the film Bill Clinton: Speeches of the Presidential Years, 1993-2001 attend?", "output": "[\"SELECT['the film Bill Clinton Speeches of the Presidential Years , 1993-2001']\", \"PROJECT['actor of #REF', '#1']\", \"PROJECT['college of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTest-1591_8c4cd2a8dd5064dcd1e88389796138c7", "input": "What was the former occupation of the Associate Director of White House Office of Public Liaison?", "output": "[\"SELECT['the White House Office of Public Liaison']\", \"PROJECT['the Associate Director of #REF', '#1']\", \"PROJECT['the former occupation of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTest-1591_af331f33579006dfcc57fbac05c58c9c", "input": "A person who once lived in the White House would have what prior occupation?", "output": "[\"SELECT['the White House']\", \"PROJECT['once lived in person of #REF', '#1']\", \"PROJECT['prior occupation of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTest-1638_c8b99bb380a7f157039bdf6c7b8df764", "input": "Poeple from the country that has the national anthem BrabanÃ§onne most commonly speak what language?", "output": "[\"SELECT['countries']\", \"PROJECT['national anthems of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is BrabanÃ§onne']\", \"PROJECT['Poeple of #REF', '#3']\", \"PROJECT['languages of #REF', '#4']\", \"GROUP['count', '#4', '#5']\", \"SUPERLATIVE['max', '#5', '#6']\"]"}
{"id": "CWQ_dev_WebQTest-1643_8c0755c22dcb8dd8bf445ab0721f047b", "input": "Chucky's voice is provided by which actors in the film starring Tommy Gerard?", "output": "[\"SELECT['Tommy Gerard']\", \"PROJECT['film of #REF', '#1']\", \"PROJECT['actors of #REF', '#2']\", \"FILTER['#3', 'that provided the voice of Chucky']\"]"}
{"id": "CWQ_dev_WebQTest-1680_5f797b78d674502fb6ec9dfe332fc2f4", "input": "When was the last World Series won by the team whose mascot is The Oriole Bird?", "output": "[\"SELECT['the mascot The Oriole Bird']\", \"PROJECT['team of #REF', '#1']\", \"PROJECT['World Series won by #REF', '#2']\", \"PROJECT['when was #REF', '#3']\", \"AGGREGATE['max', '#4']\"]"}
{"id": "CWQ_dev_WebQTest-1680_fe7307f6c664979a4a0b35113c50bc2c", "input": "When did the sports team playing out of Ed Smith Stadium arena win the World Series?", "output": "[\"SELECT['Ed Smith Stadium arena']\", \"PROJECT['sports team playing out of #REF', '#1']\", \"PROJECT['when did #REF win the World Series', '#2']\"]"}
{"id": "CWQ_dev_WebQTest-1684_80ae273e64eef1bc5956f2cfba3256c1", "input": "What was the contributing factor to the film Metamorphoses that William Shakespeare was influenced by?", "output": "[\"SELECT['the film Metamorphoses']\", \"PROJECT['contributing factors of #REF', '#1']\", \"FILTER['#2', 'that William Shakespeare was influenced by']\"]"}
{"id": "CWQ_dev_WebQTest-1694_cfd118807ce64912996343c2b9b042b2", "input": "Who is the wife of the writer of Standup Shakespeare?", "output": "[\"SELECT['Standup Shakespeare']\", \"PROJECT['writer of #REF', '#1']\", \"PROJECT['wife of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTest-1740_d4e751166dca0559713cf38bac98a9f9", "input": "Who is the brother of the actor that played in Salt 2?", "output": "[\"SELECT['Salt 2']\", \"PROJECT['actor that played in #REF', '#1']\", \"PROJECT['brother of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTest-1752_7908752e63d4926a1c38cc60236acad1", "input": "What was F. Scott Fitzgerald's occupation?", "output": "[\"SELECT['F. Scott Fitzgerald']\", \"PROJECT['occupation of #REF', '#1']\"]"}
{"id": "CWQ_dev_WebQTest-1782_f4440609f5cecb091bf8e86adb47be25", "input": "The country that has the national anthem Bilady, Bilady, Bilady exports to what country?", "output": "[\"SELECT['national anthem']\", \"FILTER['#1', 'that is Bilady , Bilady , Bilady']\", \"PROJECT['country of #REF', '#1']\", \"PROJECT['country that #REF exports to', '#3']\"]"}
{"id": "CWQ_dev_WebQTest-1792_324f0ff9176003570d081f09a51698a3", "input": "Where is the Scottish Government and Midlothian located?", "output": "[\"SELECT['the Scottish Government']\", \"SELECT['Midlothian']\", \"SELECT['where']\", \"INTERSECTION['#3', '#1', '#2']\"]"}
{"id": "CWQ_dev_WebQTest-1819_4dbb23937c062d0f3a3496d2fbf26a12", "input": "What religion in Canada that worships at St. Mary's Cathedral, Batticoloa?", "output": "[\"SELECT['Canada']\", \"PROJECT['religion of #REF', '#1']\", \"FILTER['#2', 'that worships at St. Mary s Cathedral in Batticoloa']\"]"}
{"id": "CWQ_dev_WebQTest-1819_89edf96a303451c5ed92ef344d69e7c3", "input": "What religion followed in Canadian has a religious text named Book of Nehemiah?", "output": "[\"SELECT['Canadian']\", \"PROJECT['religion followed in #REF', '#1']\", \"FILTER['#2', 'that has a religious text named Book of Nehemiah']\"]"}
{"id": "CWQ_dev_WebQTest-1819_9be8c18e016b713cbb7f7feb6badebc7", "input": "What religion does Canada follow with a religious text called The Bible?", "output": "[\"SELECT['Canada']\", \"PROJECT['religion of #REF', '#1']\", \"FILTER['#2', 'with a religious text called The Bible']\"]"}
{"id": "CWQ_dev_WebQTest-196_c093231fe2a83541cf05e721b6fad5b5", "input": "What Daedalus language do the Navajo people speak?", "output": "[\"SELECT['Daedalus languages']\", \"FILTER['#1', 'that the Navajo people speak']\"]"}
{"id": "CWQ_dev_WebQTest-2015_0513ae5213a4f69739cdef9e7c160e2b", "input": "In the area where they use Argentina peso ley as currency, what type of government is used today?", "output": "[\"SELECT['the Argentina peso ley currency']\", \"PROJECT['area of #REF', '#1']\", \"PROJECT['type of government used today of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTest-2015_5bf6906c26a34660ad81a9e0506d36fc", "input": "What type of governmental system is currently run in the place where the movie \"La hora de la siesta\" occurs?", "output": "[\"SELECT['the movie']\", \"FILTER['#1', 'that is la hora de La siesta']\", \"PROJECT['place where #REF occurs', '#2']\", \"PROJECT['type of governmental system of #REF', '#3']\"]"}
{"id": "CWQ_dev_WebQTest-2015_6b6f19d9abc98d7eda3c6da9a66f1176", "input": "Which form of government is there in the place that is the home of the Cordoba Fighting Dog?", "output": "[\"SELECT['the Cordoba Fighting Dog']\", \"PROJECT['home of #REF', '#1']\", \"PROJECT['form of government in #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTest-310_2945752f3c92dbdddaf2ae179c5f6e12", "input": "How much many should I bring with me to the second level division Cartago?", "output": "[\"SELECT['the second level division Cartago']\", \"PROJECT['how much should I bring with me to #REF', '#1']\"]"}
{"id": "CWQ_dev_WebQTest-310_be3d335c63904299f0103e947254a9f7", "input": "What kind of money do they use where the Government of Costa Rica is located?", "output": "[\"SELECT['the Government of Costa Rica']\", \"PROJECT['where is #REF', '#1']\", \"PROJECT['kind of money of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTest-395_4420dc6a68ebd6b5cd6330ffface9ebb", "input": "In which state does the sports team that plays at Three Rivers Stadium located?", "output": "[\"SELECT['the Three Rivers Stadium']\", \"PROJECT['sports team of #REF', '#1']\", \"PROJECT['state of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTest-395_f44adc4947a59c150317bb5923cf1c9b", "input": "Which state is the one where the athletic team whose fight song is Steelers Polka is located?", "output": "[\"SELECT['the fight song Steelers Polka']\", \"PROJECT['athletic team of #REF', '#1']\", \"PROJECT['state located in of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTest-418_af2b17d82c312c155dde75a5ce24621d", "input": "What sports league does the team owned by Jim Irsay play in?", "output": "[\"SELECT['Jim Irsay']\", \"PROJECT['team owned by #REF', '#1']\", \"PROJECT['sports league of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTest-426_906ad6be7bec9d208f4dde4f7721c261", "input": "Where were the co2 emissions per capita once 2009 metric ton and where the Giza Pyramids are located?", "output": "[\"SELECT['the Giza Pyramids']\", \"PROJECT['where are #REF', '#1']\", \"PROJECT['co2 emissions per capita in metric tons of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'was once 2009 metric tons']\"]"}
{"id": "CWQ_dev_WebQTest-472_3bade34690f94a435d217ffbe1a726b0", "input": "For what sports team founded in 1914 did Ronaldo play in 2003?", "output": "[\"SELECT['sports teams']\", \"FILTER['#1', 'founded in 1914']\", \"FILTER['#2', 'that Ronaldo play in 2003']\"]"}
{"id": "CWQ_dev_WebQTest-472_bc5cf8cd59582d4a1c8f4c416c010e71", "input": "What team did Ronaldo play for in 2003 used the MaracanÃ£ Stadium as their arena?", "output": "[\"SELECT['Ronaldo']\", \"PROJECT['teams in 2003 of #REF', '#1']\", \"PROJECT['arenas of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is the MaracanÃ£ Stadium']\"]"}
{"id": "CWQ_dev_WebQTest-472_deb498674439879541db12bd74b06368", "input": "What team, founded after March 6, 1902, did Ronaldo play for in 2003?", "output": "[\"SELECT['Ronaldo']\", \"PROJECT['teams in 2003 of #REF', '#1']\", \"PROJECT['when was #REF founded', '#2']\", \"COMPARATIVE['#2', '#3', 'is higher than March 6 , 1902']\"]"}
{"id": "CWQ_dev_WebQTest-49_5664110c14c11cbfe165fc3cd86c8845", "input": "Which religions are practiced by those who worship in Masjid Hamza and Valley Stream?", "output": "[\"SELECT['Masjid Hamza in Valley Stream']\", \"PROJECT['those who worship in of #REF', '#1']\", \"PROJECT['practiced religions of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTest-49_81c61082f456be82a6dae73b7e492b2a", "input": "What does the religion who worships at Yavuz Sultan Selim Mosque believe in?", "output": "[\"SELECT['religions']\", \"FILTER['#1', 'who worships at Yavuz Sultan Selim Mosque']\", \"PROJECT['what does #REF believe in', '#2']\"]"}
{"id": "CWQ_dev_WebQTest-527_5e7f2ddc862adf547cf031bf067e6af0", "input": "Which country whose religious organization is led by the Ukrainian Orthodox Church of the Kyivan Patriarchate borders Slovakia?", "output": "[\"SELECT['Slovakia']\", \"PROJECT['border countries of #REF', '#1']\", \"PROJECT['religious organizations of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is led by the Ukrainian Orthodox Church of the Kyivan Patriarchate']\"]"}
{"id": "CWQ_dev_WebQTest-527_6a539428bbc2156f7dfa5599bc76b554", "input": "What country has been run by a religious organization since 1995-07 and borders the country of Slovakia?", "output": "[\"SELECT['Slovakia']\", \"PROJECT['country that borders #REF', '#1']\", \"FILTER['#2', 'that has been run by a religious organization since 1995-07']\"]"}
{"id": "CWQ_dev_WebQTest-527_7865ae8622c80b09d6569005c0397496", "input": "What Slovakian border country has a govermental body named Verkhovna Rada?", "output": "[\"SELECT['Verkhovna Rada']\", \"PROJECT['country with #REF', '#1']\", \"FILTER['#2', 'with Slovakian border']\"]"}
{"id": "CWQ_dev_WebQTest-527_b29f05247d8bace580362572c5c491c0", "input": "What European country sharing borders with Slovakia used  the Hungarian Forint as domestic currency?", "output": "[\"SELECT['Slovakia']\", \"PROJECT['European border countries of #REF', '#1']\", \"PROJECT['domestic currencies used of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is the Hungarian Forint']\"]"}
{"id": "CWQ_dev_WebQTest-527_c1e97cdbacfb105cce6899c709ed2f60", "input": "Which country bordering Slovakia has has had religious organization leadership since March 27, 2011?", "output": "[\"SELECT['countries']\", \"FILTER['#1', 'that are bordering Slovakia']\", \"FILTER['#2', 'that has had religious organization leadership']\", \"FILTER['#3', 'since March 27 , 2011']\"]"}
{"id": "CWQ_dev_WebQTest-577_3771bfa9dc45de4216d5a1671bc91713", "input": "What university has more than 15,835 undergraduates and is the university Derek Fisher attended?", "output": "[\"SELECT['Derek Fisher']\", \"PROJECT['university of #REF', '#1']\", \"PROJECT['undergraduates of #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"COMPARATIVE['#2', '#4', 'is higher than 15 , 835']\"]"}
{"id": "CWQ_dev_WebQTest-577_7f36f7ebaa2370a85d5f2f0ba39ca66f", "input": "Where did Derek Fisher go to school with the earliest founding date?", "output": "[\"SELECT['Derek Fisher']\", \"PROJECT['school of #REF', '#1']\", \"FILTER['#2', 'with the earliest founding date']\"]"}
{"id": "CWQ_dev_WebQTest-583_0818b36d353ffb39f85b4606b1230866", "input": "What school did the speaker of March on Washington for Jobs and Freedom receive a doctorate from?", "output": "[\"SELECT['March on Washington for Jobs and Freedom']\", \"PROJECT['speaker of #REF', '#1']\", \"PROJECT['doctorate of #REF', '#2']\", \"PROJECT['school of #REF', '#3']\"]"}
{"id": "CWQ_dev_WebQTest-583_693b01b24a8f9603a580d83fd80d39c1", "input": "From which university did the person who said Nothing pains some people more than having to think.\" receive his doctorate?", "output": "[\"SELECT['person']\", \"FILTER['#1', 'who said Nothing pains some people more than having to think']\", \"PROJECT['doctorate of #REF', '#2']\", \"PROJECT['university of #REF', '#3']\"]"}
{"id": "CWQ_dev_WebQTest-638_e720f6c51fa9762bbf53cde50a3a8542", "input": "What language with the initials \"EO\" is used in Japan?", "output": "[\"SELECT['Japan']\", \"PROJECT['languages of #REF', '#1']\", \"PROJECT['initials of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is EO']\"]"}
{"id": "CWQ_dev_WebQTest-652_0221fbe445d2329cd914c556d410ebfe", "input": "What was the ethnicity of the Hispanic artist who went on a tour titled the Stars Dance Tour?", "output": "[\"SELECT['tour']\", \"FILTER['#1', 'that was titled the Stars Dance tour']\", \"PROJECT['Hispanic artist of #REF', '#2']\", \"PROJECT['ethnicity of #REF', '#3']\"]"}
{"id": "CWQ_dev_WebQTest-701_d99e2c7456806016b31d24a2fab13faf", "input": "Which football organization that claimed victory in Super Bowl VII did Reggie Bush play for in 2011?", "output": "[\"SELECT['Reggie Bush']\", \"PROJECT['football organizations in 2011 of #REF', '#1']\", \"FILTER['#2', 'that claimed victory in Super Bowl VII']\"]"}
{"id": "CWQ_dev_WebQTest-723_0b42e146002f3c196d3de57d91983232", "input": "Which venue in Sydney has a capacity of 10,000 people?", "output": "[\"SELECT['Sydney']\", \"PROJECT['venue in #REF', '#1']\", \"FILTER['#2', 'that has a capacity of 10 , 000 people']\"]"}
{"id": "CWQ_dev_WebQTest-723_70d60d89645ca457b0db95faca47e4bf", "input": "What's there to see in Sydney, Australia, with the venue capacity of 5738?", "output": "[\"SELECT['Sydney , Australia']\", \"PROJECT['what is there to see of #REF', '#1']\", \"PROJECT['venue capacities of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is 5738']\"]"}
{"id": "CWQ_dev_WebQTest-723_9e457911e56fb0e6564dff89d6fed958", "input": "What's there to see in Sydney, Australia, where the zoo that opened in 2006?", "output": "[\"SELECT['Sydney , Australia']\", \"PROJECT['what is there to see of #REF', '#1']\", \"FILTER['#2', 'that is a zoo']\", \"PROJECT['when did #REF open', '#3']\", \"COMPARATIVE['#3', '#4', 'is 2006']\"]"}
{"id": "CWQ_dev_WebQTest-723_c347ec428b9ea88040fb00f78ac12cd2", "input": "What zoo in Sydney, Australia opened after 1972?", "output": "[\"SELECT['Sydney , Australia']\", \"PROJECT['zoos of #REF', '#1']\", \"PROJECT['when did #REF open', '#2']\", \"COMPARATIVE['#2', '#3', 'is higher than 1972']\"]"}
{"id": "CWQ_dev_WebQTest-723_fd1e409bdd418457ccd4ce4978ba22f2", "input": "What event takes places in Sydney Australia and started reoccuring after 1954-06-11?", "output": "[\"SELECT['Sydney Australia']\", \"PROJECT['events of #REF', '#1']\", \"FILTER['#2', 'that started reoccuring after 1954-06-11']\"]"}
{"id": "CWQ_dev_WebQTest-775_9ba5a54d6d5247349a875b12c7523479", "input": "If I take my kids to Manchester this weekend, what structures that opened prior to 27 June 2002 should we visit?", "output": "[\"SELECT['Manchester']\", \"PROJECT['structures to visit of #REF', '#1']\", \"PROJECT['when did #REF open', '#2']\", \"COMPARATIVE['#2', '#3', 'is lower than 27 June 2002']\"]"}
{"id": "CWQ_dev_WebQTest-801_839fa68cda37e890bb3eed45714fcc43", "input": "What form of government is used in the place where the Chausie breed originated?", "output": "[\"SELECT['places']\", \"FILTER['#1', 'where the Chausie breed originated']\", \"PROJECT['form of government of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTest-810_12f714783be901012e7fa202551f74e2", "input": "The people who use Greek drachma as a currency, what language do they speak?", "output": "[\"SELECT['the Greek drachma currency']\", \"PROJECT['people of #REF', '#1']\", \"PROJECT['language of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTest-810_5ff5b8826574b331ba342518d1c1bb34", "input": "Which languages are spoken by the people, from the location, where the breed, Molossus, originated at?", "output": "[\"SELECT['the breed']\", \"FILTER['#1', 'that is Molossus']\", \"PROJECT['location where #REF originated', '#2']\", \"PROJECT['people of #REF', '#3']\", \"PROJECT['languages spoken by #REF', '#4']\"]"}
{"id": "CWQ_dev_WebQTest-810_cfcb8ee843e79059ec902e53426d5d04", "input": "People from the location that appointed Antonis Samaras to governmental position speak what languages?", "output": "[\"SELECT['Antonis Samaras']\", \"PROJECT['governmental position of #REF', '#1']\", \"PROJECT['location of #REF', '#2']\", \"PROJECT['languages of #REF', '#3']\"]"}
{"id": "CWQ_dev_WebQTest-820_2286dadfd2cdf92e46f7ff875b0a1461", "input": "Find the harry potter movies that feature Richard Harris, list them in chronological order.?", "output": "[\"SELECT['the harry potter movies']\", \"FILTER['#1', 'that feature Richard Harris']\", \"PROJECT['when was #REF', '#2']\", \"SORT['#2', '#3']\"]"}
{"id": "CWQ_dev_WebQTest-820_e4b8cc2902be555d609610b698dae3f0", "input": "Which of the Harry Potter films had a prequel called Harry Potter and the Philosopher's Stone?", "output": "[\"SELECT['Harry Potter films']\", \"PROJECT['prequels of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is Harry Potter and the Philosopher s Stone']\"]"}
{"id": "CWQ_dev_WebQTest-823_21ca1d6edc5a012358fa509ec10b19d4", "input": "Also the location that appointed Ollanta Humala to govermental position, what country does Bolivia border?", "output": "[\"SELECT['Ollanta Humala']\", \"PROJECT['govermental positions of #REF', '#1']\", \"PROJECT['countries of #REF', '#2']\", \"FILTER['#3', 'that border Bolivia']\"]"}
{"id": "CWQ_dev_WebQTest-823_33e218389f51ddc009fd64547c2037a1", "input": "What country with religious leader Pope Francis does Bolivia border?", "output": "[\"SELECT['countries']\", \"PROJECT['religious leaders of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is Pope Francis']\", \"FILTER['#3', 'where Bolivia border']\"]"}
{"id": "CWQ_dev_WebQTest-823_71550f233e235825483f2bdb07be8e35", "input": "Buenos Aires is the capital of what country bordering Bolivia?", "output": "[\"SELECT['Bolivia']\", \"PROJECT['bordering countries of #REF', '#1']\", \"PROJECT['capitals of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is Buenos Aires']\"]"}
{"id": "CWQ_dev_WebQTest-823_a76789b8ce2997717823546a677a5411", "input": "What countries border the country where Ayacucho Quechua is the spoken language?", "output": "[\"SELECT['spoken language']\", \"FILTER['#1', 'that is Ayacucho Quechua']\", \"PROJECT['country of #REF', '#1']\", \"PROJECT['countries that border #REF', '#3']\"]"}
{"id": "CWQ_dev_WebQTest-823_bdacf138255062db67423400f77d711a", "input": "What countries border the country whose capital is Sucre?", "output": "[\"SELECT['countries']\", \"PROJECT['capitals of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is Sucre']\", \"PROJECT['border countries of #REF', '#3']\"]"}
{"id": "CWQ_dev_WebQTest-823_c9f03583d41b06a69af03c37bbd7b556", "input": "What countries does the nation that uses the Pauserna language border?", "output": "[\"SELECT['the Pauserna language']\", \"PROJECT['nation that uses #REF', '#1']\", \"PROJECT['countries that #REF border', '#2']\"]"}
{"id": "CWQ_dev_WebQTest-823_ed31f9dd431831dbd32a06b958c7c97c", "input": "What country borders Bolivia and contains GoiÃ¡s?", "output": "[\"SELECT['Bolivia']\", \"PROJECT['countries that border #REF', '#1']\", \"FILTER['#2', 'that contains GoiÃ¡s']\"]"}
{"id": "CWQ_dev_WebQTest-823_f79dbc0d5546ea7aece95f6f4d04fc98", "input": "Which country that borders Bolivia has a calling code of 51?", "output": "[\"SELECT['Bolivia']\", \"PROJECT['border countries of #REF', '#1']\", \"PROJECT['calling codes of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is 51']\"]"}
{"id": "CWQ_dev_WebQTest-833_74c5edd9a79d51772446ff4746bd318f", "input": "What is th main language of the country who uses the Renminbi?", "output": "[\"SELECT['countries']\", \"FILTER['#1', 'who uses the Renminbi']\", \"PROJECT['main language of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTest-833_ef0862827cfcebdc3733734f32cf5470", "input": "What is the main language of the country in which Harbin Beer is made?", "output": "[\"SELECT['Harbin Beer']\", \"PROJECT['country of #REF', '#1']\", \"PROJECT['main language of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTest-833_fbb250d577dae6a4255a0a693c10fb6d", "input": "What is the most commonly spoken language in the country of origin for Guangzhou Zhu Jiang Brewery Co.Ltd. Zhu Jiang Beer?", "output": "[\"SELECT['Guangzhou Zhu Jiang Brewery Co.Ltd Zhu Jiang Beer']\", \"PROJECT['country of origin of #REF', '#1']\", \"PROJECT['the most commonly spoken language of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTest-838_9d539de3db5f1699f782ae7397a7c864", "input": "For what team did the subject of the film, \"Golden Shoes,\" play in 2011?", "output": "[\"SELECT['the film Golden Shoes']\", \"PROJECT['subject of #REF', '#1']\", \"PROJECT['team in 2011 of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTest-936_25c5584da286a22ff9a9ae67a986f11b", "input": "At what place where Greek temples built, and is home to the fictional character Heraclitus?", "output": "[\"SELECT['Greek temples']\", \"PROJECT['place where #REF built', '#1']\", \"FILTER['#2', 'that is home to the fictional character Heraclitus']\"]"}
{"id": "CWQ_dev_WebQTest-936_415a0c92907cbcb00269e10677869727", "input": "In what location of a greek temple did the fictional character Herakleitos of Ephesos live?", "output": "[\"SELECT['the fictional character Herakleitos of Ephesos']\", \"PROJECT['where did #REF live', '#1']\", \"FILTER['#2', 'that was the location of a greek temple']\"]"}
{"id": "CWQ_dev_WebQTest-937_060135e66e84cbaa29a73145435c5457", "input": "What country is the fictional setting of the JoJo's Bizarre Adventure universe and is where Arabic is spoken?", "output": "[\"SELECT['JoJo s Bizarre Adventure']\", \"PROJECT['fictional universe of #REF', '#1']\", \"PROJECT['countries of #REF', '#2']\", \"FILTER['#3', 'in which Arabic is spoken']\"]"}
{"id": "CWQ_dev_WebQTest-937_2e991f987f05f0605b1aac3223d4007f", "input": "What Arabic speaking country that was involved in the military conflict of the Iran-Iraq War?", "output": "[\"SELECT['the Iran-Iraq War']\", \"PROJECT['the military conflict of #REF', '#1']\", \"PROJECT['country involved in #REF', '#2']\", \"FILTER['#3', 'that is Arabic speaking']\"]"}
{"id": "CWQ_dev_WebQTest-937_728f2b94d88fcb2f487d0c89a5914c47", "input": "Where was Jeanne Favret-Saada born that is also where people who speak Arabic are from?", "output": "[\"SELECT['people who speak Arabic']\", \"PROJECT['from where are #REF', '#1']\", \"FILTER['#2', 'which is where Jeanne Favret-Saada was born']\"]"}
{"id": "CWQ_dev_WebQTest-937_8522c7ba5c04db4b2c8c8b6b4cc8ad84", "input": "What Arabic-speaking country also has Azerbaijani as a spoken language?", "output": "[\"SELECT['countries']\", \"FILTER['#1', 'that are Arabic-speaking']\", \"PROJECT['spoken languages of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is Azerbaijani']\"]"}
{"id": "CWQ_dev_WebQTest-937_9b3e7d4b0dea8af8bcb572e90bd6d0fb", "input": "What country that has a Minister of Women in the Presidency do people speak Arabic?", "output": "[\"SELECT['Minister of Women in the Presidency']\", \"PROJECT['country of #REF', '#1']\", \"FILTER['#2', 'where people speak Arabic']\"]"}
{"id": "CWQ_dev_WebQTest-937_9c30227e437d561a395bf8370530b6e6", "input": "in what  country is it where people speak arabic and compatible power plugs are type f?", "output": "[\"SELECT['arabic']\", \"PROJECT['country where people speak #REF', '#1']\", \"FILTER['#2', 'where compatible power plugs are type f']\"]"}
{"id": "CWQ_dev_WebQTest-952_9e19cd35ac0f9f451b954f414de9aa31", "input": "What country held theUnited States Senate election in Alaska, 2008?", "output": "[\"SELECT['countries']\", \"FILTER['#1', 'that held theUnited States Senate election in Alaska']\", \"FILTER['#2', 'in 2008']\"]"}
{"id": "CWQ_dev_WebQTest-952_e5c8e1d12c542cd1cd60af2a14f62392", "input": "Which country is the Koyukuk River in?", "output": "[\"SELECT['countries']\", \"FILTER['#1', 'where the Koyukuk River is in']\"]"}
{"id": "CWQ_dev_WebQTest-952_e8dd276816ed3239b3aae574d2abd9df", "input": "Which country does the state of Alaska belong to?", "output": "[\"SELECT['the state of Alaska']\", \"PROJECT['country of #REF', '#1']\"]"}
{"id": "CWQ_dev_WebQTest-967_399c19436cbc08af46c892b88346ab2b", "input": "What killed both Hitler and actor Michael Angelis?", "output": "[\"SELECT['Hitler']\", \"PROJECT['what killed #REF', '#1']\", \"SELECT['Michael Angelis']\", \"PROJECT['what killed #REF', '#3']\", \"SELECT['what']\", \"INTERSECTION['#5', '#2', '#4']\"]"}
{"id": "CWQ_dev_WebQTrn-1026_1bafd58654f3d2862f46da7ce57cdf2d", "input": "What are the best sites to see and the population in madrid?", "output": "[\"SELECT['madrid']\", \"PROJECT['best sites to see of #REF', '#1']\", \"PROJECT['population of #REF', '#1']\", \"UNION['#2', '#3']\"]"}
{"id": "CWQ_dev_WebQTrn-1026_3a85d52d11c8bd001585c382b960a434", "input": "What sights can we see in Pinar de Chamarin?", "output": "[\"SELECT['Pinar de Chamarin']\", \"PROJECT['sights to see of #REF', '#1']\"]"}
{"id": "CWQ_dev_WebQTrn-1026_b0615bb0ab6c234eca9558c39de1ba69", "input": "What sights in Madrid are exhibition venues that opened before 3 February 2009?", "output": "[\"SELECT['Madrid']\", \"PROJECT['sights of #REF', '#1']\", \"FILTER['#2', 'that are exhibition venues']\", \"PROJECT['when did #REF open', '#3']\", \"COMPARATIVE['#3', '#4', 'is lower than 3 February 2009']\"]"}
{"id": "CWQ_dev_WebQTrn-1036_2f26ec4b991b438ba16cb381afbf3fa0", "input": "Who is the leader of France 2012 and was born on 1954-08-12?", "output": "[\"SELECT['France']\", \"PROJECT['leader in 2012 of #REF', '#1']\", \"FILTER['#2', 'that was born on 1954-08-12']\"]"}
{"id": "CWQ_dev_WebQTrn-1036_347ac41770c5607a59919e07e21f5626", "input": "Who is the leader of the government where Michel Goudchax was an office holder in 2012?", "output": "[\"SELECT['Michel Goudchax']\", \"PROJECT['office of #REF', '#1']\", \"PROJECT['where was #REF', '#2']\", \"PROJECT['government in 2012 of #REF', '#3']\", \"PROJECT['leader of #REF', '#4']\"]"}
{"id": "CWQ_dev_WebQTrn-1036_6c19bc1fe78f2c0015bfd29e5c12767c", "input": "Who is the Leader of Country where the First Valls 2012 legislative session was held?", "output": "[\"SELECT['First Valls 2012 legislative session']\", \"PROJECT['Country where #REF was held', '#1']\", \"PROJECT['the Leader of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-1036_b96b735d1d754f27bc8986b614669f7b", "input": "Find the location of the film Amen, who was the leader of that location in 2012?", "output": "[\"SELECT['the film Amen']\", \"PROJECT['location of #REF', '#1']\", \"PROJECT['leader of #REF', '#2']\", \"FILTER['#3', 'in 2012']\"]"}
{"id": "CWQ_dev_WebQTrn-1036_c7964000752a9a34f003045075f0deb4", "input": "Who as leader of France in 2012 was in Office until 2012-05-16?", "output": "[\"SELECT['France']\", \"PROJECT['leader in 2012 of #REF', '#1']\", \"FILTER['#2', 'that was in Office until 2012-05-16']\"]"}
{"id": "CWQ_dev_WebQTrn-1036_f30448fb592924eb90b421396e13a587", "input": "Which 2012 leader of France started his tenure earliest?", "output": "[\"SELECT['France']\", \"PROJECT['leader of #REF', '#1']\", \"FILTER['#2', 'in 2012']\", \"FILTER['#3', 'that started his tenure earliest']\"]"}
{"id": "CWQ_dev_WebQTrn-1079_9018dcd6c34ff89707630fa9d6e5266c", "input": "What various dialects does the ethinic group Black Irish speak?", "output": "[\"SELECT['Black Irish']\", \"PROJECT['dialects of #REF', '#1']\"]"}
{"id": "CWQ_dev_WebQTrn-1080_1f69facb9679fb780b4743e589156f1d", "input": "Which type of cancer, did the actor that played the character ,Jo Stockton die of?", "output": "[\"SELECT['character']\", \"FILTER['#1', 'that is Jo Stockton']\", \"PROJECT['actor that played #REF', '#2']\", \"PROJECT['type of cancer of #REF', '#3']\"]"}
{"id": "CWQ_dev_WebQTrn-1080_37fb506a56557fe0852849c7a7a44ade", "input": "What type of cancer did the woman who played Rachel Zachary die of?", "output": "[\"SELECT['Rachel Zachary']\", \"PROJECT['woman of #REF', '#1']\", \"PROJECT['type of cancer died from of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-1108_3d155f3ef97f36c48cca17d7443418c4", "input": "What is the name of the mascot of the Yale Bulldogs Men's Basketball team?", "output": "[\"SELECT['Yale Bulldogs Men s Basketball team']\", \"PROJECT['mascot of #REF', '#1']\", \"PROJECT['name of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-1108_6ecdb08357169578baaa2205fd1a423c", "input": "What is the mascot of the Yale Anglers journal?", "output": "[\"SELECT['Yale Anglers journal']\", \"PROJECT['mascot of #REF', '#1']\"]"}
{"id": "CWQ_dev_WebQTrn-1109_11ff41d4e7a4786018b253237538ceb3", "input": "What is the type of currency used where Moncef Marzouki holds a government position?", "output": "[\"SELECT['Moncef Marzouki']\", \"PROJECT['government position of #REF', '#1']\", \"PROJECT['where is #REF', '#2']\", \"PROJECT['type of currency of #REF', '#3']\"]"}
{"id": "CWQ_dev_WebQTrn-1109_5706a9f49af8b58fe906d96a0490edb6", "input": "What type of currency can be found in the location that is used in the film Justine?", "output": "[\"SELECT['the film']\", \"FILTER['#1', 'that is Justine']\", \"PROJECT['location used in #REF', '#2']\", \"PROJECT['currency that can be found in #REF', '#3']\"]"}
{"id": "CWQ_dev_WebQTrn-1119_2072e5fee980d50272952c62aa8504f6", "input": "Name the place of birth of the author who published The Wealth of Nation editions .?", "output": "[\"SELECT['the Wealth of Nation editions']\", \"PROJECT['author who published #REF', '#1']\", \"PROJECT['place of birth of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-1121_3a191ed551bbb51cef857b5ba43d23b0", "input": "Which city is home to the author of \"The Prince?\"?", "output": "[\"SELECT['The Prince']\", \"PROJECT['author of #REF', '#1']\", \"PROJECT['home city of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-1121_c4013ee704411335d82361eee6eaa23b", "input": "In what city did the person who stated \"Hatred is gained as much by good works as by evil.\"  reside?", "output": "[\"SELECT['person']\", \"FILTER['#1', 'who stated Hatred is gained as much by good works as by evil']\", \"PROJECT['city resides in of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-116_86357fc301df73754877cf3af70e0406", "input": "What countries are subject to the reign of the political appointee whose title is Sheriff of Monmouthshire?", "output": "[\"SELECT['political appointees']\", \"PROJECT['titles of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is Sheriff of Monmouthshire']\", \"PROJECT['countries subject to the reign of #REF', '#3']\"]"}
{"id": "CWQ_dev_WebQTrn-1167_675e2a842506fdbbcf3ccdec8f51cee3", "input": "Who plays Lois in the TV show with the Family Guy Theme Song?", "output": "[\"SELECT['the Family Guy Theme Song']\", \"PROJECT['TV show of #REF', '#1']\", \"PROJECT['who plays Lois in #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-1173_570beed44432b583e62cbcd9988619ef", "input": "Who is the author who wrote A Doll's House and influenced Arthur Miller?", "output": "[\"SELECT['A Doll s House']\", \"PROJECT['author of #REF', '#1']\", \"FILTER['#2', 'who influenced Arthur Miller']\"]"}
{"id": "CWQ_dev_WebQTrn-1173_facdb34c7e72f264190bc9926fc5c4de", "input": "What member of Order of St. Olav that influenced Arthur Miller?", "output": "[\"SELECT['the Order of St. Olav']\", \"PROJECT['member of #REF', '#1']\", \"FILTER['#2', 'who influenced Arthur Miller']\"]"}
{"id": "CWQ_dev_WebQTrn-1178_16097e3e8de303ab0669a75b99540894", "input": "What are some places to visit in the area where the film \"The Passenger\" is set?", "output": "[\"SELECT['the film The Passenger']\", \"PROJECT['area of #REF', '#1']\", \"PROJECT['places to visit of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-1178_7854d8a4f7269d3d0c7bf8cfef702046", "input": "Where is a good place to visit in Barcelona that also happens to be where the Catalonia national football team plays?", "output": "[\"SELECT['the Catalonia national football team']\", \"PROJECT['place in Barcelona of #REF', '#1']\", \"FILTER['#2', 'that is a good place to visit']\"]"}
{"id": "CWQ_dev_WebQTrn-1178_8d0db19646b3de28eb2a001fefd3510e", "input": "What are the places in Barcelona with elevation 512.0 to visit?", "output": "[\"SELECT['Barcelona']\", \"PROJECT['places to visit of #REF', '#1']\", \"PROJECT['elevations of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'equal 512.0']\"]"}
{"id": "CWQ_dev_WebQTrn-1178_b9f558e606a3cf16271346c8152fd8bb", "input": "Where in Barcelona does the Catalonia National Football team play?", "output": "[\"SELECT['the Catalonia National Football team']\", \"PROJECT['where in Barcelona does #REF play', '#1']\"]"}
{"id": "CWQ_dev_WebQTrn-1183_2ec12a06ceff1fc38dbfabc809aba1ea", "input": "Where did the person who academically advised Vincenzo Viviani get an education?", "output": "[\"SELECT['Vincenzo Viviani']\", \"PROJECT['person who academically advised #REF', '#1']\", \"PROJECT['Where did #REF get an education', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-1183_9feec7b85d9fba5c263cd3dfbb9e8626", "input": "Where did the person who lived in Grand Duchy of Tuscany attend college?", "output": "[\"SELECT['the Grand Duchy of Tuscany']\", \"PROJECT['person who lived in #REF', '#1']\", \"PROJECT['college of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-1212_a6da51fcd89e451b7c9eaccc1b7690bf", "input": "What political system does the jurisdiction of Yury Chaika's office use?", "output": "[\"SELECT['Yury Chaika']\", \"PROJECT['office of #REF', '#1']\", \"PROJECT['jurisdiction of #REF', '#2']\", \"PROJECT['political system of #REF', '#3']\"]"}
{"id": "CWQ_dev_WebQTrn-1223_f6e9279987679c87848dd986115327af", "input": "Which team(s) were owned by the subject of the documentary 'The House of Steinbrenner'?", "output": "[\"SELECT['the documentary The House of Steinbrenner']\", \"PROJECT['subject of #REF', '#1']\", \"PROJECT['teams owned by #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-1247_0086d2537f89176e0be67746d2047d84", "input": "What character is Mila Kinus in the show which includes the episodes \"Stewie Kills Lois\" and \"Lois Kills Stewie'?", "output": "[\"SELECT['the episode Stewie Kills Lois']\", \"SELECT['the episode Lois Kills Stewie']\", \"SELECT['show']\", \"INTERSECTION['#3', '#1', '#2']\", \"PROJECT['characters of #REF', '#4']\", \"FILTER['#5', 'that is the character of Mila Kinus']\"]"}
{"id": "CWQ_dev_WebQTrn-1274_8fe5ec39e992465249b6b75c971057ed", "input": "Where did the person that stated, \"College isn't the place to go for ideas.\", attend school?", "output": "[\"SELECT['person']\", \"FILTER['#1', 'that stated College is nt the place to go for ideas']\", \"PROJECT['school of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-1351_402552b61d68fcf116111585da32583b", "input": "What was the birth place of the person that said \"a good GI bill would increase the recruit pool\"?", "output": "[\"SELECT['person']\", \"FILTER['#1', 'that said a good GI bill would increase the recruit pool']\", \"PROJECT['birth place of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-1355_05d28aa0a61e386be88f662f8efa90d8", "input": "In the jurisdiction where the government office holder was Wu Xioland in 2011, who runs that jurisdiction?", "output": "[\"SELECT['Wu Xioland']\", \"PROJECT['government office of #REF', '#1']\", \"FILTER['#2', 'in 2011']\", \"PROJECT['jurisdiction of #REF', '#3']\", \"PROJECT['who runs #REF', '#4']\"]"}
{"id": "CWQ_dev_WebQTrn-1355_ef0862827cfcebdc3733734f32cf5470", "input": "In 2011, who was the leader of the nation where Harbin Beer is made?", "output": "[\"SELECT['Harbin Beer']\", \"PROJECT['nation where #REF is made', '#1']\", \"PROJECT['leader of #REF', '#2']\", \"FILTER['#3', 'In 2011']\"]"}
{"id": "CWQ_dev_WebQTrn-1363_d5901712a11bf12fad01b2dbf35bdc7a", "input": "The person who used to live in Burr Oak also lived where?", "output": "[\"SELECT['Burr Oak']\", \"PROJECT['person used to live in of #REF', '#1']\", \"PROJECT['where did #REF live', '#2']\", \"DISCARD['#3', '#1']\"]"}
{"id": "CWQ_dev_WebQTrn-1363_d7d303efc1f901f14e6aae2bb469743c", "input": "Where did Laura Ingalls Wilder live in the Mountain Time Zone?", "output": "[\"SELECT['Laura Ingalls Wilder']\", \"PROJECT['Where did #REF live', '#1']\", \"FILTER['#2', 'that is in the Mountain Time Zone']\"]"}
{"id": "CWQ_dev_WebQTrn-1363_e61667194d3ce9b58fd868cc0fb9f9ae", "input": "What country was both home to Laura Ingalls Wilder and a county named Kingsbury?", "output": "[\"SELECT['Laura Ingalls Wilder']\", \"PROJECT['country of #REF', '#1']\", \"FILTER['#2', 'that was home to a county named Kingsbury']\"]"}
{"id": "CWQ_dev_WebQTrn-1373_0e72c20ed3b2f3433a44ba4c78a4d894", "input": "What language spoken in Finland has the initials se?", "output": "[\"SELECT['Finland']\", \"SELECT['language spoken in Finland']\", \"PROJECT['initials of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is se']\"]"}
{"id": "CWQ_dev_WebQTrn-1373_827770e3b0435563fa1afb84f50ff598", "input": "What languge is used where Oulu is located?", "output": "[\"SELECT['Oulu']\", \"PROJECT['where is #REF located', '#1']\", \"PROJECT['languge of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-1386_2d9ee86b602c5e7b7a18f53ffa10f1ee", "input": "What is the cause of death of the author of the lyrics for Down Deep Inside?", "output": "[\"SELECT['Down Deep Inside']\", \"PROJECT['lyrics of #REF', '#1']\", \"PROJECT['author of #REF', '#2']\", \"PROJECT['cause of death of #REF', '#3']\"]"}
{"id": "CWQ_dev_WebQTrn-1386_ffef8e9812a1ba730308eb606944b3b0", "input": "What was the cause of death for the artist who was award nominated for \"Hot Stuff\"?", "output": "[\"SELECT['Hot Stuff']\", \"PROJECT['award nominated artist of #REF', '#1']\", \"PROJECT['cause of death of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-1418_b879082beef213f7c7c500b82636fbc1", "input": "What actor both played the infamous Captain Kirk in the Star Trek series, and was executive producer of The Captains?", "output": "[\"SELECT['The Captains']\", \"PROJECT['executive producers of #REF', '#1']\", \"FILTER['#2', 'that played the infamous Captain Kirk in the Star Trek series']\"]"}
{"id": "CWQ_dev_WebQTrn-1447_d7747ff97c79143eb98bc6fbe2d9c8ff", "input": "What player was born in Tyler and drafted by the Cleveland Browns?", "output": "[\"SELECT['Tyler']\", \"PROJECT['player born in #REF', '#1']\", \"FILTER['#2', 'who was drafted by the Cleveland Browns']\"]"}
{"id": "CWQ_dev_WebQTrn-1481_0e39f66c6fc07e486a39a8de2a59f022", "input": "What Maryland senator is the politician that ended their position in the government earliest?", "output": "[\"SELECT['Maryland']\", \"PROJECT['senator of #REF', '#1']\", \"FILTER['#2', 'that ended their politician position in the government earliest']\"]"}
{"id": "CWQ_dev_WebQTrn-1503_a406df76513fc1faf79c5a2950933ae9", "input": "In the country where Cerveceria Bucanero Mayabe beer is made is brewed, what form of currency is used?", "output": "[\"SELECT['beer']\", \"FILTER['#1', 'that is Cerveceria Bucanero Mayabe']\", \"PROJECT['country of #REF', '#2']\", \"PROJECT['form of currency of #REF', '#3']\"]"}
{"id": "CWQ_dev_WebQTrn-1522_40f6d578621b52925575fb300af36889", "input": "What works did of Charles Darwin write on Biology?", "output": "[\"SELECT['Charles Darwin']\", \"PROJECT['works of #REF', '#1']\", \"FILTER['#2', 'on Biology']\"]"}
{"id": "CWQ_dev_WebQTrn-1522_48006ffcc458af664781bb4ed6bea1c3", "input": "What work of Charles Darwin's work belongs to the biography genre?", "output": "[\"SELECT['Charles Darwin']\", \"PROJECT['works of #REF', '#1']\", \"PROJECT['genres of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is biography']\"]"}
{"id": "CWQ_dev_WebQTrn-1529_17dce559f069bbd76f045192423e1ce0", "input": "Which language is used in both Guyana and Buffyverse?", "output": "[\"SELECT['Guyana']\", \"SELECT['Buffyverse']\", \"SELECT['languages']\", \"INTERSECTION['#3', '#1', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-1529_cdf693e51b436b4f14fa06028a74d963", "input": "East Berbice-Corentyne is part of the country where people speak what languages?", "output": "[\"SELECT['East Berbice-Corentyne']\", \"PROJECT['country of #REF', '#1']\", \"PROJECT['languages of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-1536_49e567b7faaa40c62e7322de05102c3c", "input": "Who is the topic of the movie,The Private Lives of Elizabeth and Essex, father?", "output": "[\"SELECT['movie']\", \"FILTER['#1', 'that is The Private Lives of Elizabeth and Essex']\", \"PROJECT['topic of #REF', '#2']\", \"PROJECT['father of #REF', '#3']\"]"}
{"id": "CWQ_dev_WebQTrn-1538_bc5cf8cd59582d4a1c8f4c416c010e71", "input": "Who is the sports team that uses the Maracana Stadium who Ronaldinho plays for?", "output": "[\"SELECT['the Maracana Stadium']\", \"PROJECT['sports teams of #REF', '#1']\", \"FILTER['#2', 'that Ronaldinho plays for']\"]"}
{"id": "CWQ_dev_WebQTrn-1542_5a6ff4d04a675a1faca2c42267554795", "input": "What type of government did both Sparta Greece and the country ruled by Manuel I of Portugal have?", "output": "[\"SELECT['Manuel I of Portugal']\", \"PROJECT['country ruled by #REF', '#1']\", \"SELECT['Sparta Greece']\", \"SELECT['type of government']\", \"INTERSECTION['#4', '#2', '#3']\"]"}
{"id": "CWQ_dev_WebQTrn-1542_b0c49fd8fdb5779bd62406ebb134084b", "input": "What type of government does that country with Sparta as its capital have?", "output": "[\"SELECT['Sparta']\", \"PROJECT['country with #REF as its capital', '#1']\", \"PROJECT['type of government of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-1542_cafa7eef130748bfa1a8d35b02769a62", "input": "What type of government did Sparta Greece have with Rio de Janeiro as capital?", "output": "[\"SELECT['Sparta Greece']\", \"PROJECT['type of government of #REF', '#1']\", \"FILTER['#2', 'that did have Rio de Janeiro as capital']\"]"}
{"id": "CWQ_dev_WebQTrn-1563_9589fa0cb928db083a8c27074313e0b7", "input": "Which time zone is in both Texas and Boonville Township, Cooper County, Missouri?", "output": "[\"SELECT['Texas']\", \"PROJECT['time zone in #REF', '#1']\", \"SELECT['Boonville Township , Cooper County , Missouri']\", \"PROJECT['time zone in #REF', '#3']\", \"SELECT['time zone']\", \"INTERSECTION['#5', '#2', '#4']\"]"}
{"id": "CWQ_dev_WebQTrn-1563_cab1228be4e8c16ee35a67b7ac63b264", "input": "In which timezone is the state of Texas located, more specifically Strathmore Airport and its environs?", "output": "[\"SELECT['timezones']\", \"FILTER['#1', 'of the state of Texas']\", \"FILTER['#2', 'of Strathmore Airport and its environs']\"]"}
{"id": "CWQ_dev_WebQTrn-1625_22837422e25cf0a05cb0efba9aa80402", "input": "Alyson Stoner played in which movie that involved the organization National Film Board of Canada?", "output": "[\"SELECT['Alyson Stoner']\", \"PROJECT['movies of #REF', '#1']\", \"FILTER['#2', 'that involved the organization National Film Board of Canada']\"]"}
{"id": "CWQ_dev_WebQTrn-1625_35808d5c3b6a527fc5d78d0b0fc6d27a", "input": "What is the movie that is 103 minutes long that Alyson Stoner starred in?", "output": "[\"SELECT['Alyson Stoner']\", \"PROJECT['movie of #REF', '#1']\", \"PROJECT['the #REF that is 103 minutes long', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-1625_404a6acab61e0a618448f9baf6ea523c", "input": "What films released after October 19, 2004 feature Alyson Stoner?", "output": "[\"SELECT['Alyson Stoner']\", \"PROJECT['films of #REF', '#1']\", \"FILTER['#2', 'released after October 19 2004']\"]"}
{"id": "CWQ_dev_WebQTrn-1625_5f5da3e1d4ca7df9f19ce3fdfc5790e2", "input": "What Alyson Stoner movies involve the organization toonexplainers?", "output": "[\"SELECT['Alyson Stoner']\", \"PROJECT['movies of #REF', '#1']\", \"FILTER['#2', 'that involve the organization toonexplainers']\"]"}
{"id": "CWQ_dev_WebQTrn-1625_cf7026962ad130bd7297384520f6e43b", "input": "What Step Up movie features Alyson Stoner?", "output": "[\"SELECT['Step Up']\", \"PROJECT['movies of #REF', '#1']\", \"FILTER['#2', 'that feature Alyson Stoner']\"]"}
{"id": "CWQ_dev_WebQTrn-1631_2326103f221042f024262b19814ee9d3", "input": "In the country that has the national anthem Ee Mungu Nguvu Yetu, who are the famous athletes?", "output": "[\"SELECT['the national anthem Ee Mungu Nguvu Yetu']\", \"PROJECT['country of #REF', '#1']\", \"PROJECT['famous athletes of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-1631_80de580930b8478336145199b0c820b3", "input": "What famous athletes come from the jurisdiction of Moody Awori?", "output": "[\"SELECT['Moody Awori']\", \"PROJECT['jurisdiction of #REF', '#1']\", \"PROJECT['famous athletes of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-1631_8c50e30ac5163e6dabfc999a7129a4ea", "input": "Who are famous athletes from where the Rift Valley Province is?", "output": "[\"SELECT['the Rift Valley Province']\", \"PROJECT['where is #REF', '#1']\", \"PROJECT['famous athletes of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-1632_55881f911c82274c9bea7fe00b3b6793", "input": "What are things to see in Staten Island, New York and New York City?", "output": "[\"SELECT['Staten Island , New York']\", \"SELECT['New York City']\", \"SELECT['things to see']\", \"INTERSECTION['#3', '#1', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-1641_6723fd9d2b2e1f112e1699cf3a931c64", "input": "What train station serves as the setting for the movie \"Tales of the City?\"?", "output": "[\"SELECT['Tales of the City']\", \"FILTER['#1', 'that is movie']\", \"PROJECT['settings of #REF', '#2']\", \"FILTER['#3', 'that is train station']\"]"}
{"id": "CWQ_dev_WebQTrn-1641_d8be4cbbc6e3dbcb16f7a2b9fb7fa5ac", "input": "What is the name of the main train station that is featured in the film \"Fleet Week 2\"?", "output": "[\"SELECT['Fleet Week 2']\", \"PROJECT['main train station featured in #REF', '#1']\", \"PROJECT['the name of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-1657_135c576c85060d076311cb5bbd9b68b0", "input": "What movie featuring Miley Cyrus was decorated by Nancy Haigh?", "output": "[\"SELECT['Miley Cyrus']\", \"PROJECT['movies of #REF', '#1']\", \"FILTER['#2', 'decorated by Nancy Haigh']\"]"}
{"id": "CWQ_dev_WebQTrn-1657_2d077323191d349225d8f3719925c777", "input": "What movie did the person who went to Heritage Elementary School starred in?", "output": "[\"SELECT['Heritage Elementary School']\", \"PROJECT['person of #REF', '#1']\", \"PROJECT['movie of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-1657_2de8034b7964e62cbfb68e23ba300615", "input": "Elliott Glick directed what movies that starred Miley Cyrus?", "output": "[\"SELECT['Miley Cyrus']\", \"PROJECT['movies of #REF', '#1']\", \"FILTER['#2', 'that Elliott Glick directed']\"]"}
{"id": "CWQ_dev_WebQTrn-1657_306f327a2508b5627dd0bec7032432b0", "input": "In what movies did Miley Cyrus play, and in what film was Dennis Sands a crew member?", "output": "[\"SELECT['Miley Cyrus']\", \"PROJECT['movies of #REF', '#1']\", \"SELECT['Dennis Sands']\", \"PROJECT['film that #REF was a crew member', '#3']\", \"UNION['#2', '#4']\"]"}
{"id": "CWQ_dev_WebQTrn-1657_4e9c47a2fdd065e939fe0da5b782f120", "input": "Which movies did Miley Cyrus act in, and the film casting director was Denise Chamian?", "output": "[\"SELECT['Miley Cyrus']\", \"PROJECT['movies of #REF', '#1']\", \"PROJECT['casting directors of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is Denise Chamian']\"]"}
{"id": "CWQ_dev_WebQTrn-1657_a90c08a839ac4d0ac22ebbf436bb578b", "input": "What movie directed by Tom Vaughan was Miley Cyrus in?", "output": "[\"SELECT['Tom Vaughan']\", \"PROJECT['movie directed by #REF', '#1']\", \"PROJECT['the #REF that Miley Cyrus was in', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-1657_d9747364839478e833903b5540a0e2e6", "input": "What movie starred Miley Cyrus and was released in december of 2003?", "output": "[\"SELECT['Miley Cyrus']\", \"PROJECT['movies of #REF', '#1']\", \"FILTER['#2', 'that was released in december of 2003']\"]"}
{"id": "CWQ_dev_WebQTrn-1657_da5b416f0db337d4911c15c1ed5aa0e7", "input": "In which Miley Cyrus film was the production designed by Nelson Coates?", "output": "[\"SELECT['Miley Cyrus']\", \"PROJECT['films of #REF', '#1']\", \"FILTER['#2', 'in which the production was designed by Nelson Coates']\"]"}
{"id": "CWQ_dev_WebQTrn-1657_ed3a18cb79e33b1c2a13d67593ed189c", "input": "What movies did the singer of Come Get It Bae play in?", "output": "[\"SELECT['Come Get It Bae']\", \"PROJECT['singer of #REF', '#1']\", \"PROJECT['movies that #REF did play in', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-1688_7ecd2e240f353965762db4f5ebf4f0d1", "input": "Who voiced Darth Vader in the movie that also featured Rebecca Jackson Mendoza?", "output": "[\"SELECT['Rebecca Jackson Mendoza']\", \"PROJECT['movies with #REF', '#1']\", \"PROJECT['Darth Vader of #REF', '#2']\", \"PROJECT['who voiced #REF', '#3']\"]"}
{"id": "CWQ_dev_WebQTrn-1744_5c3a608fb44a9825e6ba6d2b62f4e051", "input": "What speculative fiction book was written by Emily Dickinson?", "output": "[\"SELECT['Emily Dickinson']\", \"PROJECT['books of #REF', '#1']\", \"FILTER['#2', 'that are speculative fiction books']\"]"}
{"id": "CWQ_dev_WebQTrn-1744_a2e696ac3d11b22f2a4c7038b5c3a2e2", "input": "What other books did the author of \"I Felt a Funeral\" write?", "output": "[\"SELECT['I Felt a Funeral']\", \"PROJECT['author of #REF', '#1']\", \"PROJECT['books of #REF', '#2']\", \"DISCARD['#3', '#1']\"]"}
{"id": "CWQ_dev_WebQTrn-1754_90b157810bb6f4b71e3286400ee83fb8", "input": "Who influenced both Andy Warhol and Nam June Paik?", "output": "[\"SELECT['Andy Warhol']\", \"SELECT['Nam June Paik']\", \"PROJECT['who influenced #REF', '#1']\", \"PROJECT['who influenced #REF', '#2']\", \"SELECT['who']\", \"INTERSECTION['#5', '#3', '#4']\"]"}
{"id": "CWQ_dev_WebQTrn-1754_ae689802d8dfd5e32e50c9fe2271038f", "input": "Which person who influenced the work of Andy Warhol also influence Carl Andre?", "output": "[\"SELECT['Andy Warhol']\", \"SELECT['Carl Andre']\", \"SELECT['who influenced']\", \"INTERSECTION['#3', '#1', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-1754_af10d0488ff2013fe6dda4e23d10f09c", "input": "Who was a man who influenced Andy Warhol's work and who died of heart failure?", "output": "[\"SELECT['Andy Warhol']\", \"PROJECT['work of #REF', '#1']\", \"PROJECT['influenced men of #REF', '#2']\", \"FILTER['#3', 'that died of heart failure']\"]"}
{"id": "CWQ_dev_WebQTrn-1754_bb8a718dff3b86f05f54d53caf461a56", "input": "Which artist who was an influence on Andy Warhol was also nominated for a Grammy in the 26th Grammy Awards?", "output": "[\"SELECT['Andy Warhol']\", \"PROJECT['artist that was an influence on #REF', '#1']\", \"FILTER['#2', 'who was nominated for a Grammy in the 26th Grammy Awards']\"]"}
{"id": "CWQ_dev_WebQTrn-1784_9d422f19ab24972365b32f78f455c1c6", "input": "What country that has an ISO alpha 3 of AUT, speaks German?", "output": "[\"SELECT['countries']\", \"FILTER['#1', 'that speak German']\", \"PROJECT['ISO alpha 3 of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is AUT']\"]"}
{"id": "CWQ_dev_WebQTrn-1784_c9e872cc90fbd095ba0d25b029bc6143", "input": "What is the name of the country with the ISO numeric 056 where German is spoken?", "output": "[\"SELECT['countries']\", \"FILTER['#1', 'where German is spoken']\", \"PROJECT['ISO numeric of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'equal 056']\"]"}
{"id": "CWQ_dev_WebQTrn-1784_d08336daa754523cf13934359b794632", "input": "Which nation has a capital of Brussels and includes German as a language?", "output": "[\"SELECT['nations']\", \"PROJECT['capitals of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is Brussels']\", \"PROJECT['languages of #REF', '#3']\", \"COMPARATIVE['#3', '#4', 'includes German']\"]"}
{"id": "CWQ_dev_WebQTrn-1784_f3a1c6675eb8bb236b049311dc760eaf", "input": "Which German speaking country was Thomas Lechner born in?", "output": "[\"SELECT['Thomas Lechner']\", \"PROJECT['country #REF was born in', '#1']\", \"FILTER['#2', 'that is German speaking']\"]"}
{"id": "CWQ_dev_WebQTrn-1793_1f3f7417b06d43f14600e1091c60a934", "input": "Which sports club did Santi Cazorla play for that was nominated for an award at the 2013 Laureus World Sports Awards Ceremony?", "output": "[\"SELECT['the 2013 Laureus World Sports Awards Ceremony']\", \"PROJECT['awards of #REF', '#1']\", \"PROJECT['nominated sports clubs of #REF', '#2']\", \"FILTER['#3', 'that Santi Cazorla plays for']\"]"}
{"id": "CWQ_dev_WebQTrn-1804_4cff52ee00d48c443727778efb01c77a", "input": "What coutry is currently led by an acting prime minister and is a part of NATO?", "output": "[\"SELECT['NATO']\", \"PROJECT['coutries of #REF', '#1']\", \"FILTER['#2', 'that are currently led by an acting prime minister']\"]"}
{"id": "CWQ_dev_WebQTrn-1804_e0133b074487245b89f042f1b8e39568", "input": "What country is a member of NATO and home to V Bird airline?", "output": "[\"SELECT['NATO']\", \"PROJECT['countries of #REF', '#1']\", \"FILTER['#2', 'that are home to the V Bird airline']\"]"}
{"id": "CWQ_dev_WebQTrn-1816_9f8b39da7c3f621417a7bb2a708495b3", "input": "In the Family Guy what parts are played by Seth Macfarlane and Artturi Laakso?", "output": "[\"SELECT['Family Guy']\", \"PROJECT['parts In #REF', '#1']\", \"FILTER['#2', 'played by Seth Macfarlane']\", \"FILTER['#2', 'played by Artturi Laakso']\", \"UNION['#3', '#4']\"]"}
{"id": "CWQ_dev_WebQTrn-1816_add926a35447f633156c3f6f5d6929f0", "input": "What Mexican-born Family Guy character was played my Seth Macfarlane?", "output": "[\"SELECT['Family Guy']\", \"PROJECT['characters of #REF', '#1']\", \"FILTER['#2', 'that Seth Macfarlane played']\", \"FILTER['#3', 'that are Mexican-born']\"]"}
{"id": "CWQ_dev_WebQTrn-1816_d924c0e2ecd8ee8289e86c845eff324b", "input": "In Family Guy, Seth Macfarlane plays the parent of Chris Griffin. What is his character's name?", "output": "[\"SELECT['characters in Family Guy']\", \"FILTER['#1', 'who is the parent of Chris Griffin']\", \"FILTER['#2', 'who Seth Macfarlane plays']\"]"}
{"id": "CWQ_dev_WebQTrn-1861_0c4b8853b2bb4bc2a5b6b813eb499445", "input": "On what continent is the country where Hans Enoksen holds a governmental office?", "output": "[\"SELECT['Hans Enoksen']\", \"PROJECT['country where #REF holds a governmental office', '#1']\", \"PROJECT['continent of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-1861_7c1e3372d16b45dddb65cda9c6f886ff", "input": "On which continent does \"Beyond the Pole\" take place?", "output": "[\"SELECT['Beyond the Pole']\", \"PROJECT['where is #REF', '#1']\", \"PROJECT['continent of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-1871_ae466d1b65d4519cfc39b992275f7a99", "input": "What is the language spoken in the country where there is a position of Chairman of the Communist party of China?", "output": "[\"SELECT['position']\", \"FILTER['#1', 'that is Chairman of the Communist party of China']\", \"PROJECT['country of #REF', '#2']\", \"PROJECT['language of #REF', '#3']\"]"}
{"id": "CWQ_dev_WebQTrn-1907_29e8712a41a77a19dd75d10ea746040e", "input": "Which university with 5185 postgraduates did David Duke attend?", "output": "[\"SELECT['David Duke']\", \"PROJECT['university of #REF', '#1']\", \"FILTER['#2', 'with 5185 postgraduates']\"]"}
{"id": "CWQ_dev_WebQTrn-1907_9aee5423fd1fb29bfc9e3485f7cbce5e", "input": "At what educational institution with a sports team called LSU Tigers men's basketball team was David Duke educated?", "output": "[\"SELECT['David Duke']\", \"PROJECT['educational institutions of #REF', '#1']\", \"PROJECT['sports teams of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is called LSU Tigers men s basketball team']\"]"}
{"id": "CWQ_dev_WebQTrn-191_28397577e32e26956013dc763dd8fdd8", "input": "Which is the European country where the Pilsner Urquell beer is produced?", "output": "[\"SELECT['Pilsner Urquell beer']\", \"PROJECT['country where #REF is produced', '#1']\", \"FILTER['#2', 'that is European']\"]"}
{"id": "CWQ_dev_WebQTrn-191_5ca5e76911345c6ca44a0e8ea3e1764f", "input": "Where is the goverment jurisdiction that has Jens Nilsson in office?", "output": "[\"SELECT['Jens Nilsson']\", \"PROJECT['goverment jurisdiction with #REF', '#1']\", \"PROJECT['where is #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-191_5cb49417d744150fabe3bf8a60f0625e", "input": "What is the EU country that Alexander Mintz spoke about?", "output": "[\"SELECT['Alexander Mintz']\", \"PROJECT['country that #REF spoke about', '#1']\", \"FILTER['#2', 'that is in the EU']\"]"}
{"id": "CWQ_dev_WebQTrn-191_6a0e75033345508e8eadd5a47b0ad6b5", "input": "Which European country has 1,000 people in its army?", "output": "[\"SELECT['European countries']\", \"PROJECT['armies of #REF', '#1']\", \"PROJECT['people in #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"COMPARATIVE['#1', '#4', 'is 1 , 000']\"]"}
{"id": "CWQ_dev_WebQTrn-191_8521fba28d6284ab9b52e0f6894174e8", "input": "What are the name(s) of the EU countries that were ruled by Joseph II, Holy Roman emperor?", "output": "[\"SELECT['Joseph II , Holy Roman emperor']\", \"PROJECT['countries ruled by #REF', '#1']\", \"FILTER['#2', 'that are in the EU']\", \"PROJECT['names of #REF', '#3']\"]"}
{"id": "CWQ_dev_WebQTrn-191_b11130a15ecd39ba201d7798a184fda1", "input": "What EU Countries that have Lejre Municipality as a second level division?", "output": "[\"SELECT['the second level division Lejre Municipality']\", \"PROJECT['Countries of #REF', '#1']\", \"FILTER['#2', 'that are in the EU']\"]"}
{"id": "CWQ_dev_WebQTrn-191_cf6cc4cc9ed790243a390f155ae72256", "input": "What EU country has a nominal gdp of 279500000000.0?", "output": "[\"SELECT['the EU']\", \"PROJECT['countries of #REF', '#1']\", \"PROJECT['nominal gdp of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is 279500000000.0']\"]"}
{"id": "CWQ_dev_WebQTrn-1915_60a10cef29995c25a7c6801089c86f20", "input": "In what time zone is the Honolulu Record circulated?", "output": "[\"SELECT['Honolulu Record']\", \"PROJECT['where #REF is circulated', '#1']\", \"PROJECT['the time zone of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-1915_aa46b5c3f817142c19f990881289b352", "input": "What is the time zone of the Tropical Storm Fabio afflicted locations?", "output": "[\"SELECT['Tropical Storm Fabio']\", \"PROJECT['locations afflicted of #REF', '#1']\", \"PROJECT['the time zone of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-1929_6b8c780bd704ec35aa7663d1d5d55d64", "input": "Team Owner George Steinbrenner last won the World Series in what year?", "output": "[\"SELECT['Team Owner George Steinbrenner']\", \"PROJECT['when did #REF win the World Series', '#1']\", \"AGGREGATE['max', '#2']\", \"PROJECT['year of #REF', '#3']\"]"}
{"id": "CWQ_dev_WebQTrn-1941_1b19fc1a0f9a02115594348e3cb27ceb", "input": "Where is Coors Light produced and houses Downtown Littleton?", "output": "[\"SELECT['Coors Light']\", \"PROJECT['Where is #REF produced', '#1']\", \"FILTER['#2', 'that houses Downtown Littleton']\"]"}
{"id": "CWQ_dev_WebQTrn-1941_e4c1f23f4024d07238ee571d286c3cd4", "input": "Which state has the official state symbol of a Fossil and has Littleton in downtown?", "output": "[\"SELECT['states']\", \"PROJECT['official state symbols of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is a Fossil']\", \"FILTER['#3', 'that have Littleton in downtown']\"]"}
{"id": "CWQ_dev_WebQTrn-1941_fd966741033f502e192f3fd9f54f3184", "input": "Where is the city known as Littleton that has co2 emissions of 0.382244483?", "output": "[\"SELECT['the city known as Littleton']\", \"PROJECT['where is #REF', '#1']\", \"PROJECT['co2 emissions of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is 0.382244483']\"]"}
{"id": "CWQ_dev_WebQTrn-1948_0f7ed9d5620cd27daca9903c682529bf", "input": "Who was the President in 2010 of the governmental jurisdiction in which Zeng Peiyan was a governmental office holder?", "output": "[\"SELECT['Zeng Peiyan']\", \"PROJECT['governmental office of #REF', '#1']\", \"PROJECT['governmental jurisdiction of #REF', '#2']\", \"PROJECT['President of #REF', '#3']\", \"FILTER['#4', 'in 2010']\"]"}
{"id": "CWQ_dev_WebQTrn-1948_fbb250d577dae6a4255a0a693c10fb6d", "input": "Who is 2010 president of where Guangzhou Zhu Jiang Brewery Co.Ltd. Zhu Jiang Beer beer is made?", "output": "[\"SELECT['Guangzhou Zhu Jiang Brewery Co.Ltd Zhu Jiang Beer beer']\", \"PROJECT['where is #REF made', '#1']\", \"PROJECT['presidents of #REF', '#2']\", \"FILTER['#3', 'in 2010']\"]"}
{"id": "CWQ_dev_WebQTrn-1949_d952e8e8b8f0da8fa51e38b5560ed7b6", "input": "What are the ruling bodies in the US state whose capital is named Jefferson City?", "output": "[\"SELECT['US states']\", \"PROJECT['capitals of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is Jefferson City']\", \"PROJECT['ruling bodies in #REF', '#3']\"]"}
{"id": "CWQ_dev_WebQTrn-1977_9d539de3db5f1699f782ae7397a7c864", "input": "For what teams did the person portrayed in \"Golden Shoes\" play?", "output": "[\"SELECT['Golden Shoes']\", \"PROJECT['person portrayed in #REF', '#1']\", \"PROJECT['teams of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-1977_f085fa4c2b6c7af6fd1f07e269a418de", "input": "What team won the 1956 PequeÃ±a Copa del Mundo de Clubes championship and Cristiano Ronald plays for?", "output": "[\"SELECT['PequeÃ±a Copa del Mundo de Clubes championship']\", \"FILTER['#1', 'that was in 1956']\", \"SELECT['teams']\", \"FILTER['#3', 'that won #2']\", \"FILTER['#4', 'with Cristiano Ronald']\"]"}
{"id": "CWQ_dev_WebQTrn-1987_bb1ccdafd1be536d6b0f5cb8a0a3eba7", "input": "What county is The Sacramento Union newspaper circulated in?", "output": "[\"SELECT['The Sacramento Union newspaper']\", \"PROJECT['where #REF is circulated', '#1']\", \"PROJECT['the county of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-2094_339eebcb3fc48e1dd023df1eb6523445", "input": "Find the artist who was nominated for an award for How Great Thou Art, what is their hometown?", "output": "[\"SELECT['How Great Thou Art']\", \"PROJECT['artist who was nominated for an award for #REF', '#1']\", \"PROJECT['hometown of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-2095_07bc2732f3f01630b27a86518ac7a539", "input": "The country that contains Stann Creek District is located in what continent?", "output": "[\"SELECT['countries']\", \"FILTER['#1', 'that contains Stann Creek District']\", \"PROJECT['continent of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-2095_1bccdeea331cc743f4e756c21aac69e8", "input": "On what continent is the governmental jurisdiction that has a governmental office holder named George Cadle Price located?", "output": "[\"SELECT['the governmental jurisdictions']\", \"PROJECT['governmental office holders offices #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is George Cadle Price']\", \"PROJECT['continent of #REF', '#3']\"]"}
{"id": "CWQ_dev_WebQTrn-2095_8f00c2959923258d4289c1c8ce58a26c", "input": "What continent is home to the country that has an anthem that contains the phrase \"Land of the Free\"?", "output": "[\"SELECT['phrase']\", \"FILTER['#1', 'that is Land of the Free']\", \"PROJECT['anthem of #REF', '#2']\", \"PROJECT['country of #REF', '#3']\", \"PROJECT['continent of #REF', '#4']\"]"}
{"id": "CWQ_dev_WebQTrn-2095_e3fbed937bc5d8ccb6fb5f5bac912e31", "input": "Belmopan is capital of a country in what Continent?", "output": "[\"SELECT['Belmopan']\", \"PROJECT['country where #REF is capital of', '#1']\", \"PROJECT['Continent of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-2108_581ac098af1edbcc3d96a126843bb703", "input": "What character does the artist of the concert tour The Best Damn World Tour play in the film Over the Hedge?", "output": "[\"SELECT['the concert tour The Best Damn World Tour']\", \"PROJECT['artist of #REF', '#1']\", \"PROJECT['characters played of #REF', '#2']\", \"FILTER['#3', 'in the film Over the Hedge']\"]"}
{"id": "CWQ_dev_WebQTrn-2108_85be57e1d51fc4ce310c120cba0e6e64", "input": "Which character in Over the Hedge is played by the recording artist for Best Years of Our Lives?", "output": "[\"SELECT['Best Years of Our Lives']\", \"PROJECT['recording artist of #REF', '#1']\", \"PROJECT['character in Over the Hedge played by #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-2108_e852443b88aebb56535c3fb8390109ca", "input": "In the movie over the hedge what character is played by the person who wrote the song \"Unwanted\"?", "output": "[\"SELECT['the song Unwanted']\", \"PROJECT['person of #REF', '#1']\", \"PROJECT['character in the movie over the hedge played by #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-2150_473c0dd1e422495b8fa57aa6c3f25cc3", "input": "What three countries neighbor the nation in which Cerveceria Modelo Corona Light beer is made?", "output": "[\"SELECT['Cerveceria Modelo Corona Light beer']\", \"PROJECT['nation of #REF', '#1']\", \"PROJECT['the three neighbor countries of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-2150_4d5eab1706e2b7dedc4af89682ff67a2", "input": "WHat three countries border the nation where the Purepecha langiage is spoken?", "output": "[\"SELECT['the Purepecha langiage']\", \"PROJECT['nation where #REF is spoken', '#1']\", \"PROJECT['countries that border #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-2177_e296550bdbe5592272f3980a755ff750", "input": "What school with headquarters in New York City did Caroline Kennedy attend?", "output": "[\"SELECT['New York City']\", \"PROJECT['school with headquarters in #REF', '#1']\", \"FILTER['#2', 'that Caroline Kennedy did attend']\"]"}
{"id": "CWQ_dev_WebQTrn-2181_8c90d5499a627a3478313407b1404ecf", "input": "Who is the coach of the 2001 AFC Champions?", "output": "[\"SELECT['AFC Champions']\", \"FILTER['#1', 'in 2001']\", \"PROJECT['coach of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-2181_c4e06c3a9e4b4f10bd1ae97f1742c198", "input": "The head coach of the football organization that claimed victory in the 2013 AFC Championship game is which man?", "output": "[\"SELECT['the 2013 AFC Championship game']\", \"PROJECT['football organization that claimed victory of #REF', '#1']\", \"PROJECT['head coach of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-2190_058203c22235854bf96557ab2b7c383e", "input": "In what Chamorro Time Zone country does Sam Shepard live?", "output": "[\"SELECT['Sam Shepard']\", \"PROJECT['country #REF lives In', '#1']\", \"FILTER['#2', 'that is In the Chamorro Time Zone']\"]"}
{"id": "CWQ_dev_WebQTrn-2190_13f8b2b536d44fb9a3548685dac28721", "input": "Where does Sam Shepard live with the largest location GNIS feature ID?", "output": "[\"SELECT['Sam Shepard']\", \"PROJECT['where does #REF live', '#1']\", \"PROJECT['location GNIS feature ID of #REF', '#2']\", \"SUPERLATIVE['max', '#2', '#3']\"]"}
{"id": "CWQ_dev_WebQTrn-2190_5069841743291a3625b51f8191da770d", "input": "Where does Sam Shepard live where the fictional Juliet Van Heuson also lived?", "output": "[\"SELECT['Sam Shepard']\", \"SELECT['the fictional Juliet Van Heuson']\", \"PROJECT['where does #REF live', '#1']\", \"PROJECT['where did #REF live', '#2']\", \"SELECT['where']\", \"INTERSECTION['#5', '#3', '#4']\"]"}
{"id": "CWQ_dev_WebQTrn-2190_711100bb410a8455025ab024c3b6164f", "input": "What State with Tallahassee where Sam Shepard live?", "output": "[\"SELECT['Tallahassee']\", \"PROJECT['State of #REF', '#1']\", \"FILTER['#2', 'where Sam Shepard lives']\"]"}
{"id": "CWQ_dev_WebQTrn-2190_cd1ca7de1c2bd1d5d04c8c4a806241fb", "input": "In which city did Sam Shepard live, that the 2007 Gotham Screen Film Festival & Screenplay Contest, occurred?", "output": "[\"SELECT['Sam Shepard']\", \"PROJECT['city that #REF did live In', '#1']\", \"FILTER['#2', 'that the 2007 Gotham Screen Film Festival & Screenplay Contest occurred In']\"]"}
{"id": "CWQ_dev_WebQTrn-2207_2b92bda9c5571b3e333f77374b311129", "input": "What character in \"Shrek\" was played by the artist who was award-nominated for \"Broadway: The Music of Richard Rodgers\"?", "output": "[\"SELECT['Broadway The Music of Richard Rodgers']\", \"PROJECT['award-nominated artist of #REF', '#1']\", \"PROJECT['characters played by #REF', '#2']\", \"FILTER['#3', 'in Shrek']\"]"}
{"id": "CWQ_dev_WebQTrn-2207_53d78200041f2c84c9db497bbd37ffca", "input": "Who did the author of \"The Last of the Really Great Whangdoodles\" play in \"Shrek\"?", "output": "[\"SELECT['The Last of the Really Great Whangdoodles']\", \"PROJECT['author of #REF', '#1']\", \"PROJECT['who was played in Shrek of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-2211_38841ff2afbb1d4b2bc54f51fe1245af", "input": "What episode has the smallest thetvdb ID and feature the debut of Eric Northman?", "output": "[\"SELECT['Eric Northman']\", \"PROJECT['debut episodes of #REF', '#1']\", \"PROJECT['thetvdb ID of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is the smallest']\"]"}
{"id": "CWQ_dev_WebQTrn-2238_f6f88507d5841c18f44c9dc7c15999c7", "input": "What sports team, founded in 1966, includes Reggie Bush on it's roster?", "output": "[\"SELECT['sports teams']\", \"FILTER['#1', 'that founded in 1966']\", \"FILTER['#2', 'that includes Reggie Bush on it s roster']\"]"}
{"id": "CWQ_dev_WebQTrn-2259_167aff228b273413c548eb151281b97f", "input": "What entity did Rupert Murdoch own in 2012 that owned the radio station Fox News Talk?", "output": "[\"SELECT['Rupert Murdoch']\", \"PROJECT['entities owned of #REF', '#1']\", \"FILTER['#2', 'in 2012']\", \"FILTER['#3', 'that owned the radio station Fox News Talk']\"]"}
{"id": "CWQ_dev_WebQTrn-2282_ea2ebb70f3bbf125f6abc008b4b71344", "input": "Of those that influenced Roy Lichtenstein's artwork, with the earliest person's date of death?", "output": "[\"SELECT['Roy Lichtenstein']\", \"PROJECT['artwork of #REF', '#1']\", \"PROJECT['person that influenced #REF', '#2']\", \"PROJECT['date of deaths of #REF', '#3']\", \"SUPERLATIVE['min', '#3', '#4']\"]"}
{"id": "CWQ_dev_WebQTrn-2289_550f6a0ca850b4998124070c299ff048", "input": "What city was the place of death for the Architect who was credited for designing the Charlotte County Courthouse?", "output": "[\"SELECT['the Charlotte County Courthouse']\", \"PROJECT['the Architect of #REF', '#1']\", \"PROJECT['the city that was the place of death of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-23_9392f3f06e288ee4e3437a74f6bf5a37", "input": "What is the name of the high school that the president who went to Ramble Elementary attended?", "output": "[\"SELECT['presidents']\", \"FILTER['#1', 'that went to Ramble Elementary']\", \"PROJECT['high school of #REF', '#2']\", \"PROJECT['name of #REF', '#3']\"]"}
{"id": "CWQ_dev_WebQTrn-2325_e4c3db35dfb56855fbf2d1936c595f6e", "input": "Who did the actor that played the character Molly Pruitt married?", "output": "[\"SELECT['character']\", \"FILTER['#1', 'that is Molly Pruitt']\", \"PROJECT['actor of #REF', '#2']\", \"PROJECT['who did #REF marry', '#3']\"]"}
{"id": "CWQ_dev_WebQTrn-233_dd11343b9c28a21731d2ce4bbdc2630d", "input": "In the country where the currency is the Afghan afghani, what languages do people speak?", "output": "[\"SELECT['the Afghan afghani']\", \"PROJECT['country of #REF', '#1']\", \"PROJECT['languages people speak In #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-2346_28493f74e4691113c9a8fa3dd1f12cf9", "input": "What languages are used in the birthplace of the Formosan Mountain Dog breed?", "output": "[\"SELECT['breed']\", \"FILTER['#1', 'that is the Formosan Mountain Dog']\", \"PROJECT['birthplace of #REF', '#2']\", \"PROJECT['languages of #REF', '#3']\"]"}
{"id": "CWQ_dev_WebQTrn-2346_331a3fa4e65e5b914162bb6790f34126", "input": "What Language identified by the initials ZH do the Taiwanese people speak?", "output": "[\"SELECT['Taiwanese people']\", \"PROJECT['Language of #REF', '#1']\", \"FILTER['#2', 'that is identified by the initials ZH']\"]"}
{"id": "CWQ_dev_WebQTrn-2346_82c47c7560603b9f2bf6641c4008d9e2", "input": "What spoken languages are used in the country with national anthem of the Republic of China?", "output": "[\"SELECT['the national anthem of the Republic of China']\", \"PROJECT['country of #REF', '#1']\", \"PROJECT['spoken languages of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-2346_87ae8c56f0cac4fb100a7237096b9109", "input": "Find the country that speaks Taiwanese Hokkien, what other languages are spoken there?", "output": "[\"SELECT['the Pistons did play against the Magic']\", \"PROJECT['month of #REF', '#1']\"]"}
{"id": "CWQ_dev_WebQTrn-2401_1ad2d84ababa47e6d24a8dd6eb2b7943", "input": "What is the currency where the Ukrainian Greek Catholic Church is a religious organization leadership?", "output": "[\"SELECT['the Ukrainian Greek Catholic Church']\", \"PROJECT['where is #REF a religious organization leadership', '#1']\", \"PROJECT['currency of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-2401_cdbcc6b35919272e53e514bfd6285ea8", "input": "What currency is used in the jurisdiction of the Acting Prime Minister of Ukraine?", "output": "[\"SELECT['the Acting Prime Minister of Ukraine']\", \"PROJECT['jurisdiction of #REF', '#1']\", \"PROJECT['currency of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-2401_e9de608a162453baa77b7972ae3beb40", "input": "Which currency is utilized in the country, that includes the location Kiev?", "output": "[\"SELECT['the location']\", \"FILTER['#1', 'that is Kiev']\", \"PROJECT['country of #REF', '#2']\", \"PROJECT['currency of #REF', '#3']\"]"}
{"id": "CWQ_dev_WebQTrn-2411_6a69589b94f4e404c1a535c0a309d10f", "input": "In what year the did the team that won the 1987 NBA Finals win their first championship?", "output": "[\"SELECT['the 1987 NBA Finals']\", \"PROJECT['win team of #REF', '#1']\", \"PROJECT['championship win of #REF', '#2']\", \"PROJECT['years of #REF', '#3']\", \"AGGREGATE['min', '#4']\"]"}
{"id": "CWQ_dev_WebQTrn-243_2b37d8202380ac0219fe3057efe4693d", "input": "What artistic pursuit did Salvador Dali share as a hobby with Walid Berrazeg?", "output": "[\"SELECT['Salvador Dali']\", \"SELECT['Walid Berrazeg']\", \"SELECT['artistic pursuits']\", \"INTERSECTION['#3', '#1', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-243_5f78750dea4e29874a3859c78a55377c", "input": "What style of art is Salvador Dali and Mikil Elango?", "output": "[\"SELECT['Salvador Dali']\", \"SELECT['Mikil Elango']\", \"PROJECT['art style of #REF', '#1']\", \"PROJECT['art style of #REF', '#2']\", \"SELECT['art style']\", \"INTERSECTION['#5', '#3', '#4']\"]"}
{"id": "CWQ_dev_WebQTrn-243_795a73033e05acd1cf12a23f49e99f1b", "input": "Nicephore Niecpe created what style of art that was later used by Salvador Dali?", "output": "[\"SELECT['Salvador Dali']\", \"PROJECT['styles of art used by #REF', '#1']\", \"FILTER['#2', 'that Nicephore Niecpe created']\"]"}
{"id": "CWQ_dev_WebQTrn-2458_7e386deae563f6bc0093c448343b6807", "input": "On what continent would you find the location where the movie \"The Carbon Collective\" is set?", "output": "[\"SELECT['movie']\", \"FILTER['#1', 'that is The Carbon Collective']\", \"PROJECT['location where #REF is set', '#2']\", \"PROJECT['continent of #REF', '#3']\"]"}
{"id": "CWQ_dev_WebQTrn-2458_f53b7962c4dfca88044f3c0a89ac0290", "input": "What is the continent that has the Puntarenas Province within its borders?", "output": "[\"SELECT['the Puntarenas Province']\", \"PROJECT['continent of #REF', '#1']\"]"}
{"id": "CWQ_dev_WebQTrn-2494_12a8120ebbe8094300976a263cbfc8ab", "input": "In which city, did the actor that is in the movie, The Fiction Makers, live?", "output": "[\"SELECT['movie']\", \"FILTER['#1', 'that is The Fiction Makers']\", \"PROJECT['actor of #REF', '#2']\", \"PROJECT['city of #REF', '#3']\"]"}
{"id": "CWQ_dev_WebQTrn-2494_471b83eade9707a4dba68e201bf29d73", "input": "What location in the Greenwich Mean timezone did Roger Moore live?", "output": "[\"SELECT['locations']\", \"FILTER['#1', 'that are in the Greenwich Mean timezone']\", \"FILTER['#2', 'where Roger Moore did live']\"]"}
{"id": "CWQ_dev_WebQTrn-2494_9e9233e016c980617758cbbbbc6c374e", "input": "Where did the actor who played in the movie \"Secret KGB UFO Files\" live?", "output": "[\"SELECT['the movie Secret KGB UFO Files']\", \"PROJECT['actor of #REF', '#1']\", \"PROJECT['where did #REF live', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-2513_0fe2ee1f56e6c9e99eea39af139f1d2a", "input": "What sporting organization that earned the 2014 FA Cup Final championship title has triumphed most frequently for the FA Cup?", "output": "[\"SELECT['FA Cup championship titles']\", \"PROJECT['sporting organizations of #REF', '#1']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is the highest']\", \"FILTER['#4', 'that earned the 2014 FA Cup Final championship title']\"]"}
{"id": "CWQ_dev_WebQTrn-2513_819b9e3f172c518f22c5a42be967bc59", "input": "Which football team award nominee with the most FA Cups wins was featured in the Laureus World Sports Awards ceremony in the 2000?", "output": "[\"SELECT['the 2000 Laureus World Sports Awards ceremony']\", \"PROJECT['football team award nominees of #REF', '#1']\", \"PROJECT['FA Cups wins of #REF', '#2']\", \"GROUP['count', '#3', '#2']\", \"COMPARATIVE['#2', '#4', 'is the highest']\"]"}
{"id": "CWQ_dev_WebQTrn-2513_89c9aefa34fd75dbb624d2d910edf16f", "input": "What team won the FA Cup and the 1968 European Cup Final?", "output": "[\"SELECT['teams']\", \"FILTER['#1', 'that won the FA Cup']\", \"FILTER['#1', 'that won the 1968 European Cup Final']\", \"INTERSECTION['#1', '#2', '#3']\"]"}
{"id": "CWQ_dev_WebQTrn-2513_98c99e27d70cd9819c546038edcc177c", "input": "Which team founded in 1878 has the most FA cups?", "output": "[\"SELECT['teams']\", \"FILTER['#1', 'that are founded in 1878']\", \"PROJECT['FA cups of #REF', '#2']\", \"GROUP['count', '#3', '#2']\", \"COMPARATIVE['#2', '#4', 'is the highest']\"]"}
{"id": "CWQ_dev_WebQTrn-2513_b15bd6fb0438c023ff85e29d05de2300", "input": "Which sports team was the latest founded, and has won the most FA cups?", "output": "[\"SELECT['sports teams']\", \"PROJECT['FA cups won of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is the highest']\"]"}
{"id": "CWQ_dev_WebQTrn-2525_1019287adbb3054033f0b7ee9bb002fd", "input": "What college did the artist who had \"Maniac Magee\" nominated for an award go to?", "output": "[\"SELECT['Maniac Magee']\", \"PROJECT['award nominated artist of #REF', '#1']\", \"PROJECT['college of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-2525_405c8b5bd83551a50c45836241923cca", "input": "Where did Jerry Spinelli attend college, where the education institution has a sports team titled, Temple Owls men's basketball team?", "output": "[\"SELECT['colleges']\", \"FILTER['#1', 'that Jerry Spinelli attend']\", \"FILTER['#2', 'with Temple Owls men s basketball team']\"]"}
{"id": "CWQ_dev_WebQTrn-2525_fc9860150c81706ebf57bd3d47df5760", "input": "Which college did Jerry Spinelli attend and publishes the Bologna Center Journal of International Affairs?", "output": "[\"SELECT['Jerry Spinelli']\", \"PROJECT['colleges of #REF', '#1']\", \"FILTER['#2', 'that publishes Bologna Center Journal of International Affairs']\"]"}
{"id": "CWQ_dev_WebQTrn-2542_11a5331d844fbb039ac6e921b6900292", "input": "What home of Kaka has the smallest population?", "output": "[\"SELECT['Kaka']\", \"PROJECT['homes of #REF', '#1']\", \"PROJECT['populations of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is the smallest']\"]"}
{"id": "CWQ_dev_WebQTrn-2544_15a0067c4a6eb819232fc74c5daac57d", "input": "What venues opened before 2008 in Seattle, WA that have fun things to do?", "output": "[\"SELECT['Seattle , WA']\", \"PROJECT['venues of #REF', '#1']\", \"PROJECT['when did #REF open', '#2']\", \"COMPARATIVE['#2', '#3', 'is lower than 2008']\", \"FILTER['#4', 'that have fun things to do']\"]"}
{"id": "CWQ_dev_WebQTrn-2544_217a71f695097c3f705bfdfe8403d606", "input": "After I'm done visiting my cousin at Seattle Grace Mercy West Hospital, what fun things can I go see?", "output": "[\"SELECT['Seattle Grace Mercy West Hospital']\", \"PROJECT['where is #REF', '#1']\", \"PROJECT['fun things to see of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-2544_3e5734c6c04b02fcd1d3b1bc442f9fea", "input": "What zoo that opened in 1899 is a fun thing to do in Seattle, WA?", "output": "[\"SELECT['zoos']\", \"FILTER['#1', 'that is opened in 1899']\", \"FILTER['#2', 'that is a fun thing to do in Seattle , WA']\"]"}
{"id": "CWQ_dev_WebQTrn-2597_16044e3b13118db04cd6ac080c5ac7fc", "input": "If a person is in the state where the 1994 MIssouri US senate election was held, which time zone were they in?", "output": "[\"SELECT['the 1994 MIssouri US senate election']\", \"PROJECT['state where #REF was held', '#1']\", \"PROJECT['time zone of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-2597_e2633d0ba6ea2a1c452a4ab16b07e0a1", "input": "If I'm in the governmental jurisdiction where the government includes a position called Missouri Attorney General, what time zone am I in?", "output": "[\"SELECT['government position']\", \"FILTER['#1', 'that is Missouri Attorney General']\", \"PROJECT['governmental jurisdiction of #REF', '#2']\", \"PROJECT['time zone of #REF', '#3']\"]"}
{"id": "CWQ_dev_WebQTrn-2601_201314aa8824d0802c2f9a8e22c55848", "input": "What team owned by Paul G. Allen Family Foundation did Warren Moon play for?", "output": "[\"SELECT['the Paul G. Allen Family Foundation']\", \"PROJECT['owned teams of #REF', '#1']\", \"FILTER['#2', 'that Warren Moon plays for']\"]"}
{"id": "CWQ_dev_WebQTrn-2603_b883db0c5c325b6bb62ec325f97e3b24", "input": "Find the location that the breed Mudi originated from, what language is spoken there?", "output": "[\"SELECT['the breed Mudi']\", \"PROJECT['location that #REF originated from', '#1']\", \"PROJECT['language of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-2611_162e0e450fa8156ecb9927c4aa6d5b78", "input": "What National People's Congress location appointed Samuel Pepys to a governmental position?", "output": "[\"SELECT['National People s Congress']\", \"PROJECT['location of #REF', '#1']\", \"FILTER['#2', 'that appointed Samuel Pepys to a governmental position']\"]"}
{"id": "CWQ_dev_WebQTrn-263_eec6702de79ba2ae926f6bf3be14e6f9", "input": "Where country was James Cook from as well as having the Norn language as a dialect?", "output": "[\"SELECT['James Cook']\", \"PROJECT['countries of #REF', '#1']\", \"PROJECT['dialects of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is the Norn language']\"]"}
{"id": "CWQ_dev_WebQTrn-2631_0652d8b1cb95848c9630860c92e38e6f", "input": "What country is a part of the mediterranian region and is a part of the Western European Time zone?", "output": "[\"SELECT['the mediterranian region']\", \"SELECT['the Western European Time zone']\", \"SELECT['country']\", \"INTERSECTION['#3', '#1', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-2631_0d0b507c443b11e065c3dbf208eefbea", "input": "What nation in the Mediterranean is the administrative division where Zonguldak Province is a second level region?", "output": "[\"SELECT['the second level region Zonguldak Province']\", \"PROJECT['the administrative division of #REF', '#1']\", \"FILTER['#2', 'that is a nation in the Mediterranean']\"]"}
{"id": "CWQ_dev_WebQTrn-2631_56fc3d324b31062278669012623dcabc", "input": "What country is in the mediterranean and has emissions per capita in dated metric ton of 0.600921?", "output": "[\"SELECT['the mediterranean']\", \"PROJECT['countries of #REF', '#1']\", \"FILTER['#2', 'that has emissions per capita in dated metric ton of 0.600921']\"]"}
{"id": "CWQ_dev_WebQTrn-2631_9b4d7c0ec000102095998b32aa6b534a", "input": "Which mediterranean country has a country calling code of 90?", "output": "[\"SELECT['the mediterranean']\", \"PROJECT['countries of #REF', '#1']\", \"PROJECT['country calling codes of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is 90']\"]"}
{"id": "CWQ_dev_WebQTrn-2631_a1edafe051cb7bc171f2beb523d3a90c", "input": "What Mediterranean country that uses CFP Franc?", "output": "[\"SELECT['the Mediterranean']\", \"PROJECT['countries of #REF', '#1']\", \"FILTER['#2', 'that use the CFP Franc']\"]"}
{"id": "CWQ_dev_WebQTrn-2674_d7d361bd6269242aee2efa81a5f8997d", "input": "Where is the location of the college where Justin Bamberg is a grad student?", "output": "[\"SELECT['the grad student Justin Bamberg']\", \"PROJECT['college of #REF', '#1']\", \"PROJECT['location of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-2674_f72cb6b1904d83f8a0ca1dea005baf76", "input": "From which country containing Richland County is USC from?", "output": "[\"SELECT['Richland County']\", \"PROJECT['country containing #REF', '#1']\", \"FILTER['#2', 'where USC is from']\"]"}
{"id": "CWQ_dev_WebQTrn-2686_0bdb54e1789b986077ea14d790a218eb", "input": "The governmental jurisdiction that held the 16th Cabinet of Puerto Rico legislative session used what type of currency?", "output": "[\"SELECT['the 16th Cabinet of Puerto Rico legislative session']\", \"PROJECT['governmental jurisdiction of #REF', '#1']\", \"PROJECT['type of currency of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-2686_dd671314e0796c2422178f2b965e7a90", "input": "What is the type of currency used in the area that has Coqui as an official seal?", "output": "[\"SELECT['Coqui']\", \"PROJECT['area that has #REF as any official seal', '#1']\", \"PROJECT['type of currency of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-2711_6a27420dcf0528ae017dd74e40cfd38a", "input": "What main Eastern European religion has a religious organization named Tamil Nadu Thowheed Jamath?", "output": "[\"SELECT['Eastern European religion']\", \"PROJECT['religious organization of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is named Tamil Nadu Jamath']\"]"}
{"id": "CWQ_dev_WebQTrn-2711_75e46121bded1ab4f276d4ec24bb366e", "input": "What main religion with places of worship called Chapels is in Eastern Europe?", "output": "[\"SELECT['places of worship']\", \"FILTER['#1', 'that are called Chapels']\", \"PROJECT['main religion of #REF', '#2']\", \"FILTER['#3', 'in Eastern Europe']\"]"}
{"id": "CWQ_dev_WebQTrn-2711_7c9253b843680f5db5a4e5f5e1055f88", "input": "What religion in Eastern Europe that uses the text Shulchan Aruch?", "output": "[\"SELECT['Eastern Europe']\", \"PROJECT['religion of #REF', '#1']\", \"FILTER['#2', 'that uses the text Shulchan Aruch']\"]"}
{"id": "CWQ_dev_WebQTrn-2711_be64d515debe3029f7c0fb2af05bfe7e", "input": "What is the religion that believe in Virgin birth of Jesus?", "output": "[\"SELECT['religions']\", \"FILTER['#1', 'that believe in Virgin birth of Jesus']\"]"}
{"id": "CWQ_dev_WebQTrn-2730_479332275fb2963324885cad3ea4e15e", "input": "What movies in which Lucy Hale played have been released later than 6 August 2008?", "output": "[\"SELECT['Lucy Hale']\", \"PROJECT['movies of #REF', '#1']\", \"PROJECT['when was #REF released', '#2']\", \"COMPARATIVE['#2', '#3', 'is higher than 6 August 2008']\"]"}
{"id": "CWQ_dev_WebQTrn-2730_57d053a98e6ea120ee1c94a506efd9af", "input": "What movie produced by Gae S. Buckley starred Lucy Hale?", "output": "[\"SELECT['Lucy Hale']\", \"PROJECT['movies of #REF', '#1']\", \"FILTER['#2', 'produced by Gae S. Buckley']\"]"}
{"id": "CWQ_dev_WebQTrn-2730_87deda135e48fdbc80ef86a95018f5c9", "input": "What Fantasy film did Lucy Hale starred in?", "output": "[\"SELECT['Lucy Hale']\", \"PROJECT['films of #REF', '#1']\", \"FILTER['#2', 'that are Fantasy films']\"]"}
{"id": "CWQ_dev_WebQTrn-2730_885eb8bdb55dee38945b53efa1c7e8cc", "input": "What else has Lucy Hale played in that has a sequel named Tinker Bell and the Pirate Fairy?", "output": "[\"SELECT['Lucy Hale']\", \"PROJECT['what has #REF played in', '#1']\", \"FILTER['#2', 'that has a sequel named Tinker Bell and the Pirate Fairy']\"]"}
{"id": "CWQ_dev_WebQTrn-2730_975c720a86c22e9cb7a19dc6af97c2f6", "input": "What movie did Lucy Hale act in that had the casting director Avy Kaufman?", "output": "[\"SELECT['Lucy Hale']\", \"PROJECT['movies of #REF', '#1']\", \"FILTER['#2', 'that had casting director Avy Kaufman']\"]"}
{"id": "CWQ_dev_WebQTrn-2730_f4911e93c40f00f8c256e3ccf42422c1", "input": "What film released to Blu-Ray disc has Lucy Hale played in?", "output": "[\"SELECT['films']\", \"FILTER['#1', 'that released to Blu-Ray disc']\", \"FILTER['#2', 'that Lucy Hale played in']\"]"}
{"id": "CWQ_dev_WebQTrn-2736_87dd9d055714312b5c01c6a998699ace", "input": "What is the Eastern Berber language that is spoken in Egypt?", "output": "[\"SELECT['Egypt']\", \"PROJECT['language spoken in #REF', '#1']\", \"PROJECT['the #REF that is Eastern Berber', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-2736_d487d2c548ad11737f8ed1c5a01c07d3", "input": "What language with the initials ar do people speak in Egypt?", "output": "[\"SELECT['Egypt']\", \"PROJECT['languages of #REF', '#1']\", \"FILTER['#2', 'that have the initials ar']\"]"}
{"id": "CWQ_dev_WebQTrn-275_2f5c84ea5c89af49f421799989558f43", "input": "What country is the person who wrote the lyrics for the \"Poem to a Horse\" from?", "output": "[\"SELECT['Poem to a Horse']\", \"PROJECT['lyrics of #REF', '#1']\", \"PROJECT['person who wrote #REF', '#2']\", \"PROJECT['country of #REF', '#3']\"]"}
{"id": "CWQ_dev_WebQTrn-275_faae751f31fbd659ef866c7252c19019", "input": "What is the homeland of the artist who recorded \"Mi Verdad\"/?", "output": "[\"SELECT['Mi Verdad']\", \"PROJECT['artist of #REF', '#1']\", \"PROJECT['homeland of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-2759_72ce675be82a5655a30547169d8008e9", "input": "Which time zone includes both Texas and the Tulsa International Airport?", "output": "[\"SELECT['Texas']\", \"SELECT['the Tulsa International Airport']\", \"SELECT['time zone']\", \"INTERSECTION['#3', '#1', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-2774_0b6c8b855d0d8f13946340117a21517a", "input": "What genres of music are performed by the actor who portrayed Super Ghoul?", "output": "[\"SELECT['Super Ghoul']\", \"PROJECT['actor of #REF', '#1']\", \"PROJECT['genres of music performed of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-2774_b0a904c6b97775f60d54cc96d31d5ea7", "input": "Find the producer or Sometimes Late at Night, what genre did he sing in?", "output": "[\"SELECT['Sometimes Late at Night']\", \"PROJECT['producer of #REF', '#1']\", \"PROJECT['genre sang in of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-2774_c9376472c73ec3b81359b14a66d26c53", "input": "What genres of music are performed by the actor who appeared in \"Motown 25: Yesterday, Today, Forever?\"?", "output": "[\"SELECT['Motown 25 Yesterday , Today , Forever']\", \"PROJECT['actor of #REF', '#1']\", \"PROJECT['genres of music performed of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-2798_7903891d19864552d2e6a3803b2ed95b", "input": "In whcih NBA season did the Detroit Pistons defeat the Portland Trailblazers in the championship?", "output": "[\"SELECT['the Detroit Pistons']\", \"PROJECT['NBA championships of #REF', '#1']\", \"FILTER['#2', 'in which the Portland Trailblazers are defeated']\", \"PROJECT['NBA seasons of #REF', '#3']\"]"}
{"id": "CWQ_dev_WebQTrn-2798_afa15f6b9dc58ac550f7e43be659229c", "input": "Team owner Tom Gores won the Championship in what year?", "output": "[\"SELECT['Tom Gores']\", \"PROJECT['Team of #REF', '#1']\", \"PROJECT['Championship won of #REF', '#2']\", \"PROJECT['year of #REF', '#3']\"]"}
{"id": "CWQ_dev_WebQTrn-2808_3f36019d62b1889a82002929b5e58887", "input": "What is the currency of the country where South African English is spoken?", "output": "[\"SELECT['South African English']\", \"PROJECT['country where #REF is spoken', '#1']\", \"PROJECT['currency of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-2873_29dcdbf33c29eb80d1c5450e7d993b3b", "input": "What city has a population of 1426006 and has Hector Camacho as a resident?", "output": "[\"SELECT['Hector Camacho']\", \"PROJECT['cities of #REF', '#1']\", \"PROJECT['populations of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is equal to 1426006']\"]"}
{"id": "CWQ_dev_WebQTrn-2873_720f43eec78fddd01957e98aca29e29f", "input": "Where does Hector Camacho live that contains the neighborhood Hell's Kitchen?", "output": "[\"SELECT['Hector Camacho']\", \"PROJECT['where does #REF live', '#1']\", \"PROJECT['neighborhoods of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is Hell s Kitchen']\"]"}
{"id": "CWQ_dev_WebQTrn-2936_ffef8e9812a1ba730308eb606944b3b0", "input": "Which type of cancer, did the artist that was award nominated for Hot Stuff, die from?", "output": "[\"SELECT['Hot Stuff']\", \"PROJECT['award nominated artist of #REF', '#1']\", \"PROJECT['type of cancer died from of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-2944_91fbb9146e3addbb313ff7ead5eb51f8", "input": "What is the native country for the celebrity who is an alumni of State Elementary School Menteng 01?", "output": "[\"SELECT['State Elementary School Menteng 01']\", \"PROJECT['celebrity alumni of #REF', '#1']\", \"PROJECT['native country of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-2944_e56e856592a9a57b9e331b718adc1b75", "input": "Where is the author who wrote the Audacity of Hope from?", "output": "[\"SELECT['the Audacity of Hope']\", \"PROJECT['author of #REF', '#1']\", \"PROJECT['Where is #REF from', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-2944_f627c1bb9cdbcf6a029c816631a982b2", "input": "What country is the famous person who went to Neolani Elementary School from?", "output": "[\"SELECT['the Neolani Elementary School']\", \"PROJECT['famous person of #REF', '#1']\", \"PROJECT['country of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-2947_a40e0ddd52921eadf204cfb431400b5f", "input": "What character in Lord of the Rings is portrayed by the actor from The Side Effect?", "output": "[\"SELECT['The Side Effect']\", \"PROJECT['actor of #REF', '#1']\", \"PROJECT['characters portrayed by #REF', '#2']\", \"FILTER['#3', 'in Lord of the Rings']\"]"}
{"id": "CWQ_dev_WebQTrn-2948_7a6f53fd5aca1b595bb228bf8a4b0932", "input": "Which actress is noted for having bipolar disorder and portraying Princess Leia in the Star Wars films?", "output": "[\"SELECT['the Star Wars films']\", \"PROJECT['actresses of #REF', '#1']\", \"FILTER['#2', 'that portray Princess Leia']\", \"FILTER['#3', 'that are noted for having bipolar disorder']\"]"}
{"id": "CWQ_dev_WebQTrn-295_01ff9d06fcaf31662fceb007df3615bb", "input": "Who was Liz Taylor married too that died on 1958-03-22?", "output": "[\"SELECT['Liz Taylor']\", \"PROJECT['who was married to #REF', '#1']\", \"FILTER['#2', 'that died 1958-03-22']\"]"}
{"id": "CWQ_dev_WebQTrn-295_1464ecb910873adfd8203d248f922419", "input": "Which celebrity held a governmental position and political office on January 2nd 1979 and was once married to Liz Taylor?", "output": "[\"SELECT['celebrities']\", \"FILTER['#1', 'who held a governmental position and political office once January 2nd 1979']\", \"FILTER['#2', 'who was once married to Liz Taylor']\"]"}
{"id": "CWQ_dev_WebQTrn-295_29e585c6120fcbe0224ca0072c2fb7f3", "input": "Who is Liza Taylor's husband who was nominated for the 18th Annual Grammy Award?", "output": "[\"SELECT['Liza Taylor']\", \"PROJECT['husbands of #REF', '#1']\", \"FILTER['#2', 'that was nominated for the 18th Annual Grammy Award']\"]"}
{"id": "CWQ_dev_WebQTrn-295_cd35056ad2548eb94d95cced29a60cb8", "input": "Who was the actor in Butterfield 8 that was married to Liz Taylor?", "output": "[\"SELECT['Butterfield 8']\", \"PROJECT['actor in #REF', '#1']\", \"FILTER['#2', 'that was married to Liz Taylor']\"]"}
{"id": "CWQ_dev_WebQTrn-295_dece4ddacc57788e31bf70edc99f1f37", "input": "who has both been married to liz taylor and held a governmental position?", "output": "[\"SELECT['liz taylor']\", \"PROJECT['who has been married to #REF', '#1']\", \"FILTER['#2', 'that has held a governmental position']\"]"}
{"id": "CWQ_dev_WebQTrn-2986_2dc0a662213b327801918808306aab0a", "input": "What is the University of Michigan sports team that tom Brady played for?", "output": "[\"SELECT['University of Michigan']\", \"PROJECT['sports team of #REF', '#1']\", \"FILTER['#2', 'that tom Brady played for']\"]"}
{"id": "CWQ_dev_WebQTrn-2986_819eadc025b66a7f2dd252ec3e135881", "input": "The actor that played the Computer Geek #1 also played for what teams?", "output": "[\"PROJECT['the Computer Geek #REF', '#1']\", \"PROJECT['actor of #REF', '#1']\", \"PROJECT['teams of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-300_13b6280827e3e9d96b077c0ec1e865f5", "input": "What location is the Kurus currency used in?", "output": "[\"SELECT['the Kurus currency']\", \"PROJECT['location of #REF', '#1']\"]"}
{"id": "CWQ_dev_WebQTrn-300_8d301ba3f2a6a79337929dd43bb19a35", "input": "Where is the country with Imperial national Anthems of the Ottoman Empire located?", "output": "[\"SELECT['Imperial national Anthems of the Ottoman Empire']\", \"PROJECT['country of #REF', '#1']\", \"PROJECT['where is #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-300_ddab514e25728c4beb30b85f7be219d0", "input": "Bursa is the capital of the country located where?", "output": "[\"SELECT['Bursa']\", \"PROJECT['country that #REF is capital of', '#1']\", \"PROJECT['where is #REF located', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-3012_01926f229c4e65721e4f37043326f1a2", "input": "Bishkek is the capital of what country sharing a border with China?", "output": "[\"SELECT['China']\", \"PROJECT['border countries of #REF', '#1']\", \"PROJECT['capitals of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is Bishkek']\"]"}
{"id": "CWQ_dev_WebQTrn-3064_0281ead9c42fde29e92269a2ccf10495", "input": "Can you name the province of the neighboring Harbourfront, Canada?", "output": "[\"SELECT['Harbourfront , Canada']\", \"PROJECT['the neighboring province of #REF', '#1']\"]"}
{"id": "CWQ_dev_WebQTrn-3064_1f2fc1ee00d1bd5714265c4651a700ad", "input": "In what Canadian province is the fictional universe ReGenesis?", "output": "[\"SELECT['ReGenesis']\", \"PROJECT['the fictional universe of #REF', '#1']\", \"FILTER['#2', 'that is a Canadian province']\"]"}
{"id": "CWQ_dev_WebQTrn-3064_9bff9b3325534dae4908b820d4364101", "input": "In what province does the movie \"Shoot 'Em Up\" take place?", "output": "[\"SELECT['the movie Shoot Em Up']\", \"PROJECT['province of #REF', '#1']\"]"}
{"id": "CWQ_dev_WebQTrn-3215_0b579b43c5c13202f21268987ba710b0", "input": "Name the hometown of the gymnast who is sponsored by Circuit City.?", "output": "[\"SELECT['Circuit City']\", \"PROJECT['gymnast that is sponsored by #REF', '#1']\", \"PROJECT['hometown of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-3252_5a6c4d964bbcc247347c13197fa08fcb", "input": "What Western African country is at once home to the Niger river and the capital city of Conakry?", "output": "[\"SELECT['the Niger river']\", \"SELECT['the capital city of Conakry']\", \"SELECT['Western African country']\", \"INTERSECTION['#3', '#1', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-3252_83db7f44b529d45718cc97f5e1a70a99", "input": "The river Bamako flows through what countries?", "output": "[\"SELECT['river Bamako']\", \"PROJECT['countries that #REF flows through', '#1']\"]"}
{"id": "CWQ_dev_WebQTrn-3252_bde48b8fcd994264496aae4133e373f0", "input": "What country, which the Niger River flows through, also exports to the United States of America?", "output": "[\"SELECT['the Niger River']\", \"PROJECT['countries of #REF', '#1']\", \"FILTER['#2', 'that export to the United States of America']\"]"}
{"id": "CWQ_dev_WebQTrn-3271_c4cb89dfae8793bedbe134ad40d07af9", "input": "People from the country with the Chilean Peso currency speak what language?", "output": "[\"SELECT['the Chilean Peso currency']\", \"PROJECT['country of #REF', '#1']\", \"PROJECT['language of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-3287_c0ebf14656701dfcb57acec712c98d4a", "input": "What currency is used in the country where the deaf use Swedish Sign Language?", "output": "[\"SELECT['Swedish Sign Language']\", \"PROJECT['country where the deaf use #REF', '#1']\", \"PROJECT['currency of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-3319_b4835b1af41bed9fd4e77df24395dc36", "input": "Who played the character Dorothy in the movie that also  featured the actress Margaret Pellegrini?", "output": "[\"SELECT['movies']\", \"FILTER['#1', 'that featured the actress Margaret Pellegrini']\", \"PROJECT['the character Dorothy in #REF', '#2']\", \"PROJECT['who played #REF', '#3']\"]"}
{"id": "CWQ_dev_WebQTrn-3346_2d0611451d35c6185b3e83e45311fe49", "input": "What building located in Dubai has 163 floors?", "output": "[\"SELECT['Dubai']\", \"PROJECT['buildings of #REF', '#1']\", \"PROJECT['floors of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'equal 163']\"]"}
{"id": "CWQ_dev_WebQTrn-3358_23b055b19da513d2651226356225081a", "input": "Who held a position in the Illinois House of Representatives and was also the influence behind Whitman's poetry?", "output": "[\"SELECT['Whitman']\", \"PROJECT['poetry of #REF', '#1']\", \"PROJECT['who was the influence of #REF', '#2']\", \"FILTER['#3', 'that held a position in the Illinois House of Representatives']\"]"}
{"id": "CWQ_dev_WebQTrn-3358_3a627cb875a24b19213af0b9a1cf8999", "input": "Who influenced Whitman's poetry that held his government position form 12-1-1834?", "output": "[\"SELECT['Whitman']\", \"PROJECT['poetry of #REF', '#1']\", \"PROJECT['who influenced #REF', '#2']\", \"FILTER['#3', 'that held his government position from 12-1-1834']\"]"}
{"id": "CWQ_dev_WebQTrn-3358_3cac2b09772035a206330b2cdf175f81", "input": "What politician in office since 1834 influenced Walt Whitman's poetry?", "output": "[\"SELECT['Walt Whitman']\", \"PROJECT['poetry of #REF', '#1']\", \"PROJECT['influenced politicians of #REF', '#2']\", \"FILTER['#3', 'that are in office since 1834']\"]"}
{"id": "CWQ_dev_WebQTrn-3358_44699ac957d24af4a6cd1699e12e28b2", "input": "What influencer of Whitman's poetry ended their governmental position earliest?", "output": "[\"SELECT['Whitman']\", \"PROJECT['poetry of #REF', '#1']\", \"PROJECT['influencer of #REF', '#2']\", \"FILTER['#3', 'that ended their governmental position earliest']\"]"}
{"id": "CWQ_dev_WebQTrn-3358_66fd2ddbb895bc9a64c4d0b0e160c13a", "input": "Who influenced Whitman's poetry that started his governmental position after March 7, 1861?", "output": "[\"SELECT['Whitman']\", \"PROJECT['poetry of #REF', '#1']\", \"PROJECT['who influenced #REF', '#2']\", \"FILTER['#3', 'that started his governmental position after March 7 1861']\"]"}
{"id": "CWQ_dev_WebQTrn-3358_6896c7ff81e791758b432de809951e04", "input": "Who participated in the Third Joint Debate at Jonesboro and influenced Walt Whitman's poetry?", "output": "[\"SELECT['Walt Whitman']\", \"PROJECT['poetry of #REF', '#1']\", \"PROJECT['who influenced #REF', '#2']\", \"FILTER['#3', 'that participated in the Third Joint Debate at Jonesboro']\"]"}
{"id": "CWQ_dev_WebQTrn-3358_c7e8bf0bc3e418c1ab1882470402c41c", "input": "Which peer of Friedrich HÃ¶lderlin inspired the work of Walt Whitman?", "output": "[\"SELECT['Friedrich HÃ¶lderlin']\", \"PROJECT['peers of #REF', '#1']\", \"FILTER['#2', 'that inspired the work of Walt Whitman']\"]"}
{"id": "CWQ_dev_WebQTrn-3358_dbd194a5a0966321733c045394fa781e", "input": "Who influenced Whitman 's poetry, and is the politician that held his/her government position until 1842?", "output": "[\"SELECT['Whitman']\", \"PROJECT['poetry of #REF', '#1']\", \"PROJECT['who influenced #REF', '#2']\", \"FILTER['#3', 'that held his/her government position until 1842']\"]"}
{"id": "CWQ_dev_WebQTrn-3358_e5aea1aa88616780e2949918ad27c0b9", "input": "Which of the politicians who influenced Whitman's poetry ended his political career last?", "output": "[\"SELECT['Whitman']\", \"PROJECT['poetry of #REF', '#1']\", \"PROJECT['politicians who influenced #REF', '#2']\", \"FILTER['#3', 'that ended his political career last']\"]"}
{"id": "CWQ_dev_WebQTrn-3395_c914b0ca5bf68616cc936d2a9a5c8f26", "input": "Dominica has this government along with Mongolia.?", "output": "[\"SELECT['Dominica']\", \"SELECT['Mongolia']\", \"SELECT['government']\", \"INTERSECTION['#3', '#1', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-3437_060135e66e84cbaa29a73145435c5457", "input": "What character in JoJo's bizarre Adventure speaks Arabic?", "output": "[\"SELECT['JoJo s bizarre Adventure']\", \"PROJECT['characters in #REF', '#1']\", \"FILTER['#2', 'that speaks Arabic']\"]"}
{"id": "CWQ_dev_WebQTrn-3437_49ad837ba878f7830b213cc9d6f00283", "input": "What country is home to Adana Procince as a second level and speaks arabic?", "output": "[\"SELECT['the second level Adana Procince']\", \"PROJECT['countries of #REF', '#1']\", \"FILTER['#2', 'that speak arabic']\"]"}
{"id": "CWQ_dev_WebQTrn-3437_59d8b3295daf039542637add629c038e", "input": "What country uses power plugs type c and speaks Arabic?", "output": "[\"SELECT['countries']\", \"FILTER['#1', 'that uses power plug type c']\", \"FILTER['#2', 'that speaks Arabic']\"]"}
{"id": "CWQ_dev_WebQTrn-3437_6eb4909a184ab0aac83d44471fb5bd49", "input": "Which ISO 012 numbered country speaks Arabic?", "output": "[\"SELECT['countries']\", \"FILTER['#1', 'that speak Arabic']\", \"PROJECT['ISO numbers of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is 012']\"]"}
{"id": "CWQ_dev_WebQTrn-3448_2ed103f665a4516a22cebcf5d383af70", "input": "What fictional character is the parent of Coop's Power?", "output": "[\"SELECT['Coop s Power']\", \"PROJECT['fictional character that is the parent of #REF', '#1']\"]"}
{"id": "CWQ_dev_WebQTrn-3466_3a3a861fe35922a25bb5991497496887", "input": "What city was the president, who Leonard Bernstein dedicated his work to, killed in?", "output": "[\"SELECT['presidents']\", \"FILTER['#1', 'that Leonard Bernstein dedicated his work to']\", \"PROJECT['city killed in of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-3466_56e8d2e51ce1a46013d0176a58f8d5b3", "input": "In what city was the President, the subject of the film \"An American Affair,\" killed?", "output": "[\"SELECT['the film An American Affair']\", \"PROJECT['the subject of #REF', '#1']\", \"PROJECT['city killed in of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-3475_20c0eba253c55529f9842b40b5a54ac5", "input": "What is the region where Helle Thorning-Schmidt was placed into a governmental position?", "output": "[\"SELECT['Helle Thorning-Schmidt']\", \"PROJECT['governmental position of #REF', '#1']\", \"PROJECT['where was #REF', '#2']\", \"PROJECT['region of #REF', '#3']\"]"}
{"id": "CWQ_dev_WebQTrn-3488_03cf6abd16a825e4e4a6a01fb3f41f80", "input": "Which author published \"Sidereus Nuncius\" and what professions is he famous for?", "output": "[\"SELECT['Sidereus Nuncius']\", \"PROJECT['author of #REF', '#1']\", \"PROJECT['famous professions of #REF', '#2']\", \"UNION['#2', '#3']\"]"}
{"id": "CWQ_dev_WebQTrn-3488_2ec12a06ceff1fc38dbfabc809aba1ea", "input": "What is the academic advisor of Vincenzo Viviani famous for?", "output": "[\"SELECT['Vincenzo Viviani']\", \"PROJECT['academic advisor of #REF', '#1']\", \"PROJECT['what is #REF famous for', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-3507_879158d15e797aa9412c8d83f06333f1", "input": "Stephe Regelous was a crew member on a movie with a character called Saruman, who played Saurman?", "output": "[\"SELECT['Stephe Regelous']\", \"PROJECT['movies of #REF', '#1']\", \"PROJECT['characters of #REF', '#2']\", \"FILTER['#3', 'that is called Saruman']\", \"PROJECT['who played #REF', '#4']\"]"}
{"id": "CWQ_dev_WebQTrn-3507_f0cddbfe8cbc12b1439beff6b530c17d", "input": "Who plays Saruman in The Lord of the Rings: The Fellowship of the Ring, a film with a soundtrack?", "output": "[\"SELECT['The Lord of the Rings The Fellowship of the Ring']\", \"PROJECT['Saruman of #REF', '#1']\", \"PROJECT['who plays #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-3517_79d6b6faae5d827b400b623688bc96da", "input": "At the University of Phoenix stadium, what are the sports team uniform colors?", "output": "[\"SELECT['University of Phoenix']\", \"PROJECT['stadium of #REF', '#1']\", \"PROJECT['sports team of #REF', '#2']\", \"PROJECT['uniforms of #REF', '#3']\", \"PROJECT['colors of #REF', '#4']\"]"}
{"id": "CWQ_dev_WebQTrn-3529_672902a00b25f005ed3c211f1688c718", "input": "What movie was part of the Independence Day series and features Liam Hensworth as an actor?", "output": "[\"SELECT['the Independence Day series']\", \"PROJECT['movies of #REF', '#1']\", \"FILTER['#2', 'that feature Liam Hensworth as an actor']\"]"}
{"id": "CWQ_dev_WebQTrn-3529_6f57c24c495306fcf0cbe66c6e79560e", "input": "Of the movies is Liam Hemsworth in, which has Netflix_id of more than 70118364?", "output": "[\"SELECT['Liam Hemsworth']\", \"PROJECT['movies of #REF', '#1']\", \"PROJECT['Netflix_id of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is higher than 70118364']\"]"}
{"id": "CWQ_dev_WebQTrn-3529_a776583092dae132378825445eb44488", "input": "Which film starring Liam Hemsworth is 100 minutes in length?", "output": "[\"SELECT['Liam Hemsworth']\", \"PROJECT['films of #REF', '#1']\", \"PROJECT['length in minutes of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is 100 minutes']\"]"}
{"id": "CWQ_dev_WebQTrn-3529_ae7350d8b7de870308057cb68e876919", "input": "Of Liam Hemsworth's movies, which film has the smallest netflix_id?", "output": "[\"SELECT['Liam Hemsworth']\", \"PROJECT['movies of #REF', '#1']\", \"PROJECT['netflix_ids of #REF', '#2']\", \"SUPERLATIVE['min', '#2', '#3']\"]"}
{"id": "CWQ_dev_WebQTrn-3529_b10bde702bb6c68ce3cdced85d5aff02", "input": "What films has Liam Hemsworth acted in and whose casting director was Cathy Sandrich?", "output": "[\"SELECT['Liam Hemsworth']\", \"PROJECT['films of #REF', '#1']\", \"PROJECT['casting directors of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is Cathy Sandrich']\"]"}
{"id": "CWQ_dev_WebQTrn-3537_819eadc025b66a7f2dd252ec3e135881", "input": "In what year was the actor who portrayed Computer Geek #1 drafted?", "output": "[\"SELECT['actors']\", \"FILTER['#1', 'who portrayed Computer Geek 1']\", \"PROJECT['year that #REF drafted', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-3563_0140828f99d9423f910ccf28ded8780f", "input": "Where can you go to vacation in the US with a capital named Tallahassee?", "output": "[\"SELECT['the US']\", \"PROJECT['Where can you vacation in #REF', '#1']\", \"FILTER['#2', 'that has a capital named Tallahassee']\"]"}
{"id": "CWQ_dev_WebQTrn-3563_e511509bda00918a2bacad4106357461", "input": "What attraction opened in 1971 and is located in the state of Florida?", "output": "[\"SELECT['the state of Florida']\", \"PROJECT['attraction of #REF', '#1']\", \"FILTER['#2', 'that opened in 1971']\"]"}
{"id": "CWQ_dev_WebQTrn-3647_bfb16d956224f4ff7df39609f2a84210", "input": "Where did the politician appointed to their position by Paul von Hindenburg die?", "output": "[\"SELECT['Paul von Hindenburg']\", \"PROJECT['appointed politician of #REF', '#1']\", \"PROJECT['where did #REF die', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-3681_4d5eab1706e2b7dedc4af89682ff67a2", "input": "Who is the 2011 president of the country that speaks the Purepecha language?", "output": "[\"SELECT['the Purepecha language']\", \"PROJECT['country that speaks #REF', '#1']\", \"PROJECT['president of #REF', '#2']\", \"FILTER['#3', 'in 2011']\"]"}
{"id": "CWQ_dev_WebQTrn-3709_7f42e6cf00b704d63971600cead27fea", "input": "There is a religious which has a diety called \"Zhang Guolao\"; what is this religion's holy book called?", "output": "[\"SELECT['Zhang Guolao']\", \"FILTER['#1', 'that is diety']\", \"PROJECT['religion with #REF', '#2']\", \"PROJECT['holy book of #REF', '#3']\"]"}
{"id": "CWQ_dev_WebQTrn-3709_c0228581809788c617b45f1c43535436", "input": "What holy book is used in the religion Zhuang Zhou?", "output": "[\"SELECT['the religion Zhuang Zhou']\", \"PROJECT['holy book of #REF', '#1']\"]"}
{"id": "CWQ_dev_WebQTrn-3709_ea3041d859476a701c044da9d666212e", "input": "What is the religious text in the religion that Zhuang Zhou helped found?", "output": "[\"SELECT['religions']\", \"FILTER['#1', 'that Zhuang Zhou helped to found']\", \"PROJECT['religious text of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-3709_eec12f71d62f9e0c87f9b05e82829d9d", "input": "What Taoism holy book is part of the Chinese classics?", "output": "[\"SELECT['Taoism']\", \"PROJECT['holy books of #REF', '#1']\", \"FILTER['#2', 'that are part of the Chinese classics']\"]"}
{"id": "CWQ_dev_WebQTrn-3772_79ee4c5d31170a2a4638a4fa603f0b52", "input": "What currency is used in the region where the newspaper Zhivoye Dyelo is circulated?", "output": "[\"SELECT['the newspaper']\", \"FILTER['#1', 'that is Zhivoye Dyelo']\", \"PROJECT['region where #REF is circulated', '#2']\", \"PROJECT['currency of #REF', '#3']\"]"}
{"id": "CWQ_dev_WebQTrn-3772_c304fd0564b819c2863dfebd8391dea1", "input": "What is the currency of the jurisdiction with the governing body called the government of Russia?", "output": "[\"SELECT['governing body']\", \"FILTER['#1', 'that is called the government of Russia']\", \"PROJECT['the jurisdiction of #REF', '#2']\", \"PROJECT['the currency of #REF', '#3']\"]"}
{"id": "CWQ_dev_WebQTrn-3772_f81b2d3ee250e8503f128923a79d3c5a", "input": "What currency is used in the country where the Tsakhur Language is spoken?", "output": "[\"SELECT['the Tsakhur Language']\", \"PROJECT['country of #REF', '#1']\", \"PROJECT['currency of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-400_e5633caf1cfa2daedc2e6e8e7c7217ae", "input": "In which state is the organization that has Evelynn M. Hammonds among its leaders located?", "output": "[\"SELECT['Evelynn M. Hammonds']\", \"PROJECT['organizations of #REF', '#1']\", \"PROJECT['leaders of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is #1']\", \"PROJECT['state of #REF', '#4']\"]"}
{"id": "CWQ_dev_WebQTrn-400_ecabe9a3fb01aad9253431aab39beff3", "input": "What state is the college that Sampson Salter Blowers is a grad student of located?", "output": "[\"SELECT['Sampson Salter Blowers']\", \"FILTER['#1', 'that is a grad student']\", \"PROJECT['college with #REF', '#2']\", \"PROJECT['state of #REF', '#3']\"]"}
{"id": "CWQ_dev_WebQTrn-404_498797c759f6119ac48af1f70b11e2c1", "input": "What are the cause of death of the artist that went on tour I'm your Baby Tonight World Tour?", "output": "[\"SELECT['artists']\", \"PROJECT['tours of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is I m your Baby Tonight World Tour']\", \"PROJECT['cause of death of #REF', '#3']\"]"}
{"id": "CWQ_dev_WebQTrn-404_5c1c0bb27d69cefb9a304520f17790af", "input": "What did the actor that played in the film Whitney Houston:  The Greatest Hits died from?", "output": "[\"SELECT['film']\", \"FILTER['#1', 'that is Whitney Houston The Greatest Hits']\", \"PROJECT['actor that played in #REF', '#2']\", \"PROJECT['what did #REF die from', '#3']\"]"}
{"id": "CWQ_dev_WebQTrn-408_37e7e25202838c08eca7f37ad587ff95", "input": "What airport is close to Sandals Grande in the country with national anthem Sons and daughters of St. Lucia?", "output": "[\"SELECT['the national anthem Sons and daughters of St. Lucia']\", \"PROJECT['country of #REF', '#1']\", \"PROJECT['airports of #REF', '#2']\", \"FILTER['#3', 'that are close to Sandals Grande']\"]"}
{"id": "CWQ_dev_WebQTrn-408_cbf8e530928cbb43e83996e62999aabb", "input": "Which airport is closest to Sandals Grande, in the country that includes the location Vieux Fort Quarter?", "output": "[\"SELECT['the location Vieux Fort Quarter']\", \"PROJECT['country of #REF', '#1']\", \"PROJECT['airports of #REF', '#2']\", \"FILTER['#3', 'that is the closest to Sandals Grande']\"]"}
{"id": "CWQ_dev_WebQTrn-421_7ecd2e240f353965762db4f5ebf4f0d1", "input": "In the movie featuring Rebecca Jackson Mendoza, who voiced Darth Vader's character?", "output": "[\"SELECT['Rebecca Jackson Mendoza']\", \"PROJECT['movie of #REF', '#1']\", \"PROJECT['characters of #REF', '#2']\", \"FILTER['#3', 'that is Darth Vader']\", \"PROJECT['who voiced #REF', '#4']\"]"}
{"id": "CWQ_dev_WebQTrn-441_45779a2cf25506125b56819f01177655", "input": "Which Canadian sport was honored at the 2010 ESPY award ceremony?", "output": "[\"SELECT['the 2010 ESPY award ceremony']\", \"PROJECT['honored Canadian sport of #REF', '#1']\"]"}
{"id": "CWQ_dev_WebQTrn-441_f48019bbd11999c3779c7b90b60350e3", "input": "What Canadian team won the 2000 CONCACAF Gold Cup Final?", "output": "[\"SELECT['Canadian teams']\", \"FILTER['#1', 'that won the 2000 CONCACAF Gold Cup Final']\"]"}
{"id": "CWQ_dev_WebQTrn-441_fbac0d7b6fd3ab4248a4d7ccf4b91fe1", "input": "What Japanese sport was nominated for a Laureus World Sports Award in 2003?", "output": "[\"SELECT['Laureus World Sports Award']\", \"PROJECT['nominated sports in 2003 of #REF', '#1']\", \"FILTER['#2', 'that is a Japanese sport']\"]"}
{"id": "CWQ_dev_WebQTrn-442_ade734803aa90931641d9f89cedf866d", "input": "Who died in Dallas and was the first leader of the AFL?", "output": "[\"SELECT['the AFL']\", \"PROJECT['the first leader of #REF', '#1']\", \"FILTER['#2', 'that died in Dallas']\"]"}
{"id": "CWQ_dev_WebQTrn-470_2ed273e1ef71275dba971b59c747ff69", "input": "Which Jonas brother had a romantic relationship that ended in October of 2008?", "output": "[\"SELECT['Jonas brothers']\", \"PROJECT['romantic relationship of #REF', '#1']\", \"PROJECT['when #REF ended', '#2']\", \"COMPARATIVE['#1', '#3', 'is October of 2008']\"]"}
{"id": "CWQ_dev_WebQTrn-470_8632ca063cf9f5cf9260f82da8ac9014", "input": "What are the names of the subjects in the image \"The Jonas Brothers with Singer Celine Dion?\"?", "output": "[\"SELECT['the image The Jonas Brothers with Singer Celine Dion']\", \"PROJECT['subjects of #REF', '#1']\", \"PROJECT['names of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-470_e1866ddb432fa90359080d98900d0cfc", "input": "What are the names of the artists who recorded \"We Got the Party?\"?", "output": "[\"SELECT['We Got the Party']\", \"PROJECT['artists of #REF', '#1']\", \"PROJECT['names of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-470_edb8e611b4e0e2819b94cdf92374370e", "input": "What Jonas Brother played the character Shane Gray?", "output": "[\"SELECT['the character Shane Gray']\", \"PROJECT['Jonas Brother of #REF', '#1']\"]"}
{"id": "CWQ_dev_WebQTrn-470_f0509f64305de2683f5b5a6c5e7d5d81", "input": "Who were the artists who had a tour When You Look Me in the Eyes?", "output": "[\"SELECT['artists']\", \"PROJECT['tours of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is When You Look Me in the Eyes']\"]"}
{"id": "CWQ_dev_WebQTrn-531_31c94b951f3d708ac503327d7979da93", "input": "What Australian religion has a place of worship named Candi Laras?", "output": "[\"SELECT['place of worship']\", \"FILTER['#1', 'that is named Candi Laras']\", \"PROJECT['religion that has #REF', '#2']\", \"FILTER['#3', 'that is Australian']\"]"}
{"id": "CWQ_dev_WebQTrn-531_61efa0b17cc53c2187422d88bf670f22", "input": "What religions are found in Australia, which Gautama Buddha is a founding figure of?", "output": "[\"SELECT['Australia']\", \"PROJECT['religions of #REF', '#1']\", \"FILTER['#2', 'that Gautama Buddha is founding figure of']\"]"}
{"id": "CWQ_dev_WebQTrn-538_3b521e4133132fe5c032a9946f9616c9", "input": "Which countries does Russia border, which country has the capital of Baku?", "output": "[\"SELECT['the capital Baku']\", \"PROJECT['countries of #REF', '#1']\", \"FILTER['#2', 'that Russia borders']\"]"}
{"id": "CWQ_dev_WebQTrn-538_5e7f2ddc862adf547cf031bf067e6af0", "input": "Which country with the religious organization Ukrainian Orthodox Church of the Kyivan Patriarchate does Russia border?", "output": "[\"SELECT['the religious organization Ukrainian Orthodox Church of the Kyivan Patriarchate']\", \"PROJECT['countries of #REF', '#1']\", \"FILTER['#2', 'that Russia borders']\"]"}
{"id": "CWQ_dev_WebQTrn-538_8b034a64d61ccf9b732e9314a1df67be", "input": "Which country that borders Russia has the smallest ISO?", "output": "[\"SELECT['Russia']\", \"PROJECT['country that borders #REF', '#1']\", \"FILTER['#2', 'that has the smallest ISO']\"]"}
{"id": "CWQ_dev_WebQTrn-538_def00c56c0fb0b672cfa80c66694be13", "input": "What country borders Russia and has an ISO Alpha 3 of CHN?", "output": "[\"SELECT['Russia']\", \"PROJECT['border countries of #REF', '#1']\", \"PROJECT['ISO Alpha 3 of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is CHN']\"]"}
{"id": "CWQ_dev_WebQTrn-538_edc922a0faa1e47614eb7e6effe2d1a1", "input": "What country that borders Russia is Anren Town, Sichuan in?", "output": "[\"SELECT['Anren Town , Sichuan']\", \"PROJECT['countries of #REF', '#1']\", \"FILTER['#2', 'that border Russia']\"]"}
{"id": "CWQ_dev_WebQTrn-538_edf538d65cbd0df3c44e9639aed1d945", "input": "What country has Nynorsk as an official language and is bordered by Russia?", "output": "[\"SELECT['Russia']\", \"PROJECT['countries bordered by #REF', '#1']\", \"PROJECT['official languages of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is Nynorsk']\"]"}
{"id": "CWQ_dev_WebQTrn-577_2a51c1a579bcd08b5bbd610634b1af60", "input": "Find the country that is home to Cerveza Colonos Del Llanquihue Lager Premium Artesanal Beer, what type of government do they use?", "output": "[\"SELECT['Cerveza Colonos Del Llanquihue Lager Premium Artesanal Beer']\", \"PROJECT['country of #REF', '#1']\", \"PROJECT['type of government of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-577_755bf60e299967df7b265e22e1ac2367", "input": "What kind of government does the area that contains the second level division of Eastern Island currently have?", "output": "[\"SELECT['second level division']\", \"FILTER['#1', 'that is Eastern Island']\", \"PROJECT['area that contains #REF', '#2']\", \"PROJECT['kind of government of #REF', '#3']\"]"}
{"id": "CWQ_dev_WebQTrn-577_7f9ae201cca433d26ab1ea95fea47844", "input": "Find the country the breed Araucana comes from, what form of government do they use?", "output": "[\"SELECT['the breed Araucana']\", \"PROJECT['country of #REF', '#1']\", \"PROJECT['form of government of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-577_b352385481a660e410c383fc45d816be", "input": "The area that gets the Aurora de Chile newspaper today, has what type of government?", "output": "[\"SELECT['newspaper']\", \"FILTER['#1', 'that is Aurora de Chile']\", \"PROJECT['area that gets #REF', '#2']\", \"PROJECT['type of government of #REF', '#3']\"]"}
{"id": "CWQ_dev_WebQTrn-577_ca1508e2ef993ab45c97cfdacb149658", "input": "What form of government is used in the governmental jurisdiction where Augusto Pinochet holds a governmental office?", "output": "[\"SELECT['Augusto Pinochet']\", \"PROJECT['governmental office of #REF', '#1']\", \"PROJECT['governmental jurisdiction of #REF', '#2']\", \"PROJECT['form of government of #REF', '#3']\"]"}
{"id": "CWQ_dev_WebQTrn-577_cf3638075fd9204c82c8adf9ae47925e", "input": "What kind of government is run in the country that includes the Supreme Court of Chile and part of its governmental structure?", "output": "[\"SELECT['the Supreme Court of Chile']\", \"PROJECT['country of #REF', '#1']\", \"PROJECT['kind of government of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-63_5a1a688f44243d711cce8c47969dc50e", "input": "Which member of the band Bush was born in Newport Wales?", "output": "[\"SELECT['the band Bush']\", \"PROJECT['members of #REF', '#1']\", \"PROJECT['where was #REF born', '#2']\", \"COMPARATIVE['#2', '#3', 'is Newport Wales']\"]"}
{"id": "CWQ_dev_WebQTrn-63_66b0cad0e1fa978a6817055bc70f5f88", "input": "What artists were members of the band that recieved a nominated for the award for the album Machinehead?", "output": "[\"SELECT['the album Machinehead']\", \"PROJECT['award nominated band of #REF', '#1']\", \"PROJECT['members of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-63_743f22fa42ed4ffec94a3839fc243c5f", "input": "Actor that played the role of Balthazar and is also in the band Bush?", "output": "[\"SELECT['the role of Balthazar']\", \"PROJECT['Actors of #REF', '#1']\", \"FILTER['#2', 'that was in the band Bush']\"]"}
{"id": "CWQ_dev_WebQTrn-63_f1cf0646827575b26f2c01d64b05ad95", "input": "Who was in the band Bush and also wrote a screenplay for Henry's Crime?", "output": "[\"SELECT['the band Bush']\", \"PROJECT['who was in #REF', '#1']\", \"FILTER['#2', 'who wrote a screenplay for Henry s Crime']\"]"}
{"id": "CWQ_dev_WebQTrn-648_1beae13077eb05db9b853a9c74e3aec8", "input": "Which continent is the country that makes Goldstar beer on?", "output": "[\"SELECT['Goldstar beer']\", \"PROJECT['the country that makes #REF', '#1']\", \"PROJECT['the continent of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-648_563b401a13e5a2b9bc3c9ec4bbe58962", "input": "What continent includes the country with the national anthem Hatikvah?", "output": "[\"SELECT['national anthem']\", \"FILTER['#1', 'that is Hatikvah']\", \"PROJECT['country of #REF', '#2']\", \"PROJECT['continent of #REF', '#3']\"]"}
{"id": "CWQ_dev_WebQTrn-648_ae0ef655e304be3e017fd9cd4955fd62", "input": "In which continent, is the location where the movie, \"Defamation\", occurs?", "output": "[\"SELECT['the movie Defamation']\", \"PROJECT['location of #REF', '#1']\", \"PROJECT['continent of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-659_465277909580bd5bd79e9a6bca3d7ed6", "input": "In which city with a GNIS feature ID greater than 847388 does Joey King live?", "output": "[\"SELECT['Joey King']\", \"PROJECT['city that #REF lives In', '#1']\", \"FILTER['#2', 'that has a GNIS feature ID greater than 847388']\"]"}
{"id": "CWQ_dev_WebQTrn-659_92cd88da247f06a2a19f25b5d45c8d9c", "input": "Where does Joey King live that is also the place where the Hall of Fame induction was born?", "output": "[\"SELECT['Joey King']\", \"PROJECT['Where does #REF live', '#1']\", \"FILTER['#2', 'that is the place Where the Hall of Fame induction was born']\"]"}
{"id": "CWQ_dev_WebQTrn-659_9e23cfd67cc478f1dd0942be05f97881", "input": "Where does Joey King live with the largest GNIS feature ID?", "output": "[\"SELECT['Joey King']\", \"PROJECT['where does #REF live', '#1']\", \"PROJECT['GNIS feature ID of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is the largest']\"]"}
{"id": "CWQ_dev_WebQTrn-659_c32736bc2120c8c423e1f9825b03fb9d", "input": "In what city, where the 2011 Pan African Film Festival took place, does Joey King live?", "output": "[\"SELECT['the 2011 Pan African Film Festival']\", \"PROJECT['cities of #REF', '#1']\", \"FILTER['#2', 'that Joey King lives in']\"]"}
{"id": "CWQ_dev_WebQTrn-659_d1fc3947ed4865e2143cf7690cbb5220", "input": "Where does the actor who played the character Gina Fineman live?", "output": "[\"SELECT['actor']\", \"PROJECT['the #REF that played Gina Fineman', '#1']\", \"PROJECT['Where #REF does live', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-659_e2cc7bfdd3ce0acb1cfd8158d4e09384", "input": "Find the name of the actress who played Miss Quentin, where does this person reside?", "output": "[\"SELECT['Miss Quentin']\", \"PROJECT['actress who played #REF', '#1']\", \"PROJECT['where does #REF reside', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-686_22837422e25cf0a05cb0efba9aa80402", "input": "Which film starring Rhianna involved the National Film Board of Canada?", "output": "[\"SELECT['Rhianna']\", \"PROJECT['films of #REF', '#1']\", \"FILTER['#2', 'that involved the National Film Board of Canada']\"]"}
{"id": "CWQ_dev_WebQTrn-686_8f888bb5da4fd47af3e8d299ba8399be", "input": "Which movie written by Seth Rogan did Rihanna star in?", "output": "[\"SELECT['Seth Rogan']\", \"PROJECT['movies written by #REF', '#1']\", \"FILTER['#2', 'that Rihanna stars in']\"]"}
{"id": "CWQ_dev_WebQTrn-686_9b9b953bf3d29e3e18a55ad8d159b4cc", "input": "Which movie decorated by Larry Dias did Rihanna play in?", "output": "[\"SELECT['Larry Dias']\", \"PROJECT['movie decorated by #REF', '#1']\", \"FILTER['#2', 'that Rihanna did play in']\"]"}
{"id": "CWQ_dev_WebQTrn-686_d7f03ff5a50f06214024939dc9db9033", "input": "Which movie with music by Henry Jackman did Rihanna play in?", "output": "[\"SELECT['Rihanna']\", \"PROJECT['movies of #REF', '#1']\", \"FILTER['#2', 'that have music by Henry Jackman']\"]"}
{"id": "CWQ_dev_WebQTrn-69_0041be7f9b354e8ece87d54d4edec736", "input": "Which show did the actor appear on who played Louis 'Pipes' Pepitone?", "output": "[\"SELECT['Louis Pipes Pepitone']\", \"PROJECT['actor of #REF', '#1']\", \"PROJECT['show appeared on of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-69_5108577c7d962fd122e31547fb1b5f47", "input": "What tv program with more than 19 episodes did Joey Lawrence play on?", "output": "[\"SELECT['Joey Lawrence']\", \"PROJECT['tv programs of #REF', '#1']\", \"FILTER['#2', 'with more than 19 episodes']\"]"}
{"id": "CWQ_dev_WebQTrn-73_77c420382ba6d010795aca544a34bd60", "input": "What was the form of government in both Sparta and the Kingdom of Portugal?", "output": "[\"SELECT['forms of government']\", \"FILTER['#1', 'in Sparta']\", \"FILTER['#1', 'in the Kingdom of Portugal']\", \"INTERSECTION['#1', '#2', '#3']\"]"}
{"id": "CWQ_dev_WebQTrn-786_c79e703ecbfb4226ba2041f923f19585", "input": "Which actress played the fictional character who was the parent of another character named Sophie Cuckoo?", "output": "[\"SELECT['the character named Sophie Cuckoo']\", \"PROJECT['fictional character that was the parent of #REF', '#1']\", \"PROJECT['actress of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-806_0a916dec206a3acd8d31f5d05db8d82f", "input": "Where are the pyramids of Giza located and was also a place where the French Revolutionary Wars took place?", "output": "[\"SELECT['pyramids of Giza']\", \"PROJECT['Where are #REF located', '#1']\", \"FILTER['#2', 'Where the French Revolutionary Wars took place']\"]"}
{"id": "CWQ_dev_WebQTrn-806_7a8da06c34ec7303bb218c5f9fd7c3df", "input": "Which government has a position of Consul General and is where the Pyramids of Giza are located?", "output": "[\"SELECT['the position Consul General']\", \"PROJECT['governments of #REF', '#1']\", \"PROJECT['where are #REF', '#2']\", \"FILTER['#3', 'that is where the Pyramids of Giza are located']\"]"}
{"id": "CWQ_dev_WebQTrn-806_ae64704cb347aa76764b4232059b8823", "input": "What country that contains Cairo Governorate is where the Pyramids of Giza are located?", "output": "[\"SELECT['the Pyramids of Giza']\", \"PROJECT['countries of #REF', '#1']\", \"FILTER['#2', 'that contain the Cairo Governorate']\"]"}
{"id": "CWQ_dev_WebQTrn-823_ff15a8fdbc70c6898db760ce1cf001a0", "input": "Which university was attended by the actor from Magic & Bird: A Courtship of Rivals?", "output": "[\"SELECT['Magic & Bird A Courtship of Rivals']\", \"PROJECT['actor of #REF', '#1']\", \"PROJECT['university of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-836_31702484b07d87096be4da15bf70f5d6", "input": "What major UK Religion has a notable figure named Eve?", "output": "[\"SELECT['UK']\", \"PROJECT['major Religion of #REF', '#1']\", \"PROJECT['notable figure of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is Eve']\"]"}
{"id": "CWQ_dev_WebQTrn-836_33335d298ed09243d0a1f54336cf4333", "input": "What religion with the sacred site Harmandir Sahib is in the UK?", "output": "[\"SELECT['the UK']\", \"PROJECT['religions of #REF', '#1']\", \"PROJECT['sacred sites of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is Harmandir Sahib']\"]"}
{"id": "CWQ_dev_WebQTrn-836_9a69191735636d5c80ee0a6dd1153086", "input": "What major religion in the UK has a place of worship named Yanina Synagogue?", "output": "[\"SELECT['major religions']\", \"FILTER['#1', 'that are in the UK']\", \"FILTER['#2', 'that has a place of worship named Yanina Synagogue']\"]"}
{"id": "CWQ_dev_WebQTrn-860_89196c459fb8a465bb797f3be5d5e5b2", "input": "What other cars does the organization that acquired the McLaughlin automobile company make?", "output": "[\"SELECT['organizations']\", \"FILTER['#1', 'that acquired the McLaughlin automobile company']\", \"PROJECT['other cars made of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-909_2f842739addc0c55fb26b31fefb43184", "input": "What city has a GNS feature ID of less of 661145 and is the home of Bob Dylan?", "output": "[\"SELECT['Bob Dylan']\", \"PROJECT['home cities of #REF', '#1']\", \"PROJECT['GNS feature ID of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is less than 661145']\"]"}
{"id": "CWQ_dev_WebQTrn-909_5a1d57fe3f9b64b56911d2857fa20a62", "input": "Where did the music producer who produced \"Before the Flood\" live?", "output": "[\"SELECT['Before the Flood']\", \"PROJECT['music producer of #REF', '#1']\", \"PROJECT['Where did #REF live', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-909_7b370e7ac17bdbde1f9e5b82df501d75", "input": "What Locality home to Bob Dylan has a jurisdiction identified as Los Angeles County?", "output": "[\"SELECT['Bob Dylan']\", \"PROJECT['home of #REF', '#1']\", \"FILTER['#2', 'that has a jurisdiction identified as Los Angeles County']\"]"}
{"id": "CWQ_dev_WebQTrn-909_d4365c56c0eda71b0415a72b7a925955", "input": "Where did the author that published, The Definitive Bob Dylan Songbook, live?", "output": "[\"SELECT['The Definitive Bob Dylan Songbook']\", \"PROJECT['author of #REF', '#1']\", \"PROJECT['where did #REF live', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-909_e12c930fa07dfba5a0fc3f9d71dd9800", "input": "In what cities did the composer of \"Country Pie\" reside?", "output": "[\"SELECT['Country Pie']\", \"PROJECT['composer of #REF', '#1']\", \"PROJECT['cities of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-909_f07b2dccc5ff21182a1d76f70333afcc", "input": "What cities have the artist that reiceved the nomination for \"Down in the flood\" live in?", "output": "[\"SELECT['Down in the flood']\", \"PROJECT['artist of #REF', '#1']\", \"PROJECT['cities live in of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-909_f66713bae9ae81f5d4a02e13239639bf", "input": "In what cities did the recording artist of Like a Rolling Stone (instrumental) reside?", "output": "[\"SELECT['Like a Rolling Stone ( instrumental )']\", \"PROJECT['recording artist of #REF', '#1']\", \"PROJECT['cities reside in of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-970_538a7b35067a537bfa6c692fab856ba0", "input": "Find the place whwer Fiji Hindi is spoken, what form of government is used there?", "output": "[\"SELECT['Fiji Hindi']\", \"PROJECT['place where #REF is spoken', '#1']\", \"PROJECT['form of government of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-970_936ac874cf9393903f70f3e1035b1bf0", "input": "What is the government system of the government where the title of President of Fiji is held?", "output": "[\"SELECT['the title of President of Fiji']\", \"PROJECT['government of #REF', '#1']\", \"PROJECT['government system of #REF', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-983_4c4a97c6e5587907f52b33361f29ceb8", "input": "Where in Oregon was the movie depicted in the image \"Stand.By.Me.1986.720p.BluRay.x264-SiNNERS.torrent? filmed?", "output": "[\"SELECT['the image Stand.By.Me.1986.720p.BluRay.x264-SiNNERS.torrent']\", \"PROJECT['movie of #REF', '#1']\", \"PROJECT['where in Oregon was #REF filmed', '#2']\"]"}
{"id": "CWQ_dev_WebQTrn-985_b529fa4b7c5a34e81b9f2f63ecf02c45", "input": "What work did the writers of the Harlem Renaissance wrote about that was published on 8-26-2011?", "output": "[\"SELECT['Harlem Renaissance']\", \"PROJECT['writers of #REF', '#1']\", \"PROJECT['work that #REF wrote about', '#2']\", \"FILTER['#3', 'that was published on 8-26-2011']\"]"}
{"id": "DROP_dev_history_10_778cc4f0-4264-4780-9a05-571746de447d", "input": "Which side suffered more casualties, the Federales or the Americans?", "output": "[\"SELECT['the Federales']\", \"SELECT['the Americans']\", \"PROJECT['casualties suffered of #REF', '#1']\", \"PROJECT['casualties suffered of #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"COMPARISON['max', '#5', '#6']\"]"}
{"id": "DROP_dev_history_10_a0c02482-0031-400d-b6f0-aa089bcf1424", "input": "How many total people were killed, captured and were listed as casualties?", "output": "[\"SELECT['people']\", \"FILTER['#1', 'that were killed']\", \"FILTER['#1', 'that were captured']\", \"FILTER['#1', 'that were listed as casualties']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['sum', '#5', '#6', '#7']\"]"}
{"id": "DROP_dev_history_10_b4a57b06-bcd2-4ed5-82de-48c5bc95b0a9", "input": "What happened first: Battle of Carrizal or prisoners were repatriated?", "output": "[\"SELECT['the Battle of Carrizal']\", \"SELECT['prisoners were repatriated']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"COMPARISON['min', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1002_45be3d97-6563-4ac3-a107-dda9d12eb39d", "input": "How many years after Nyaungyan captured Nyaungshwe did the capture Mone?", "output": "[\"SELECT['Nyaungyan captured Nyaungshwe']\", \"SELECT['Nyaungyan did capture Mone']\", \"PROJECT['year of #REF', '#1']\", \"PROJECT['year of #REF', '#2']\", \"ARITHMETIC['difference', '#4', '#3']\"]"}
{"id": "DROP_dev_history_1002_79bd0ad5-b0a9-4a6b-947e-8ff97f5fa00e", "input": "How many years after capturing Nyaungshwe did Nyaungyan capture the large strategic Shan state of Mone?", "output": "[\"SELECT['Nyaungyan capturing Nyaungshwe']\", \"SELECT['Nyaungyan did capture the large strategic Shan state of Mone']\", \"PROJECT['year of #REF', '#1']\", \"PROJECT['year of #REF', '#2']\", \"ARITHMETIC['difference', '#4', '#3']\"]"}
{"id": "DROP_dev_history_1002_8a2400c9-5987-4979-af5d-38c54cb92e6d", "input": "How many years passed between Nyaungyan consolidating his holdings and his declaring of himself king?", "output": "[\"SELECT['Nyaungyan consolidating his holdings']\", \"SELECT['Nyaungyan declaring himself king']\", \"PROJECT['year of #REF', '#1']\", \"PROJECT['year of #REF', '#2']\", \"ARITHMETIC['difference', '#4', '#3']\"]"}
{"id": "DROP_dev_history_1002_b1514967-60df-485a-bceb-1813f3c19380", "input": "How many cities did Nyaungyan try to reclaim?", "output": "[\"SELECT['cities']\", \"FILTER['#1', 'that Nyaungyan try to reclaim']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_history_1002_d8ee2dcc-91d9-4e9b-914c-f1dbd2b504e0", "input": "How many years after Pegu fell did the king die?", "output": "[\"SELECT['Pegu fell']\", \"SELECT['the king dies']\", \"PROJECT['year of #REF', '#1']\", \"PROJECT['year of #REF', '#2']\", \"ARITHMETIC['difference', '#4', '#3']\"]"}
{"id": "DROP_dev_history_1002_db540314-ad8e-4e87-bed8-d57ae991d26a", "input": "When did  Naresuan of Siam die?", "output": "[\"SELECT['Naresuan of Siam did die']\", \"PROJECT['when was #REF', '#1']\"]"}
{"id": "DROP_dev_history_1002_e9ae0bd8-9a5d-4809-8ce8-ace215b971c2", "input": "How many months after Nyaungyan sent a force to reclaim Mohnyin, Mogaung, and Bhamo did he declare himself king?", "output": "[\"SELECT['Nyaungyan sent a force to reclaim Mohnyin , Mogaung and Bhamo']\", \"SELECT['height did declare himself king']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1002_f0267c1d-8c7c-475a-8557-5e5b66eb71cd", "input": "What states did Nyaungyan recapture in 1601 and 1603 after he became king?", "output": "[\"SELECT['Nyaungyan']\", \"PROJECT['states recaptured of #REF', '#1']\", \"FILTER['#2', 'in 1601']\", \"FILTER['#2', 'in 1603']\", \"UNION['#3', '#4']\"]"}
{"id": "DROP_dev_history_1012_31182c98-e949-4810-9a61-f65bfc460210", "input": "How many years was the time span where China launched four invasions of Burma?", "output": "[\"SELECT['China launched four invasions of Burma']\", \"PROJECT['years of #REF', '#1']\", \"AGGREGATE['max', '#2']\", \"AGGREGATE['min', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1012_4f4b79ac-d230-4065-bdeb-b769351fdadc", "input": "How many years did the second invasion of the Burmese Troops  1766-1767 last?", "output": "[\"SELECT['the second invasion of the Burmese Troops 1766-1767']\", \"PROJECT['years of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_history_1012_8dbd6237-2843-43d1-8752-6dc71a8382f5", "input": "After how many Chinese invasions did the conflict escalate from a regional conflict into a major war?", "output": "[\"SELECT['Chinese invasions']\", \"FILTER['#1', 'After which the conflict escalates from a regional conflict into a major war']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_history_1012_8e34a961-c660-4a5c-8ec1-5166b9dac698", "input": "What happened first: China launched four invasions or a truce?", "output": "[\"SELECT['China launched four invasions']\", \"SELECT['a truce']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"COMPARISON['min', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1012_9f060bf9-ae4a-49ac-933a-8a4fb52620ce", "input": "Which event happened first, the invasion of Burma, or a truce?", "output": "[\"SELECT['the invasion of Burma']\", \"SELECT['a truce']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"COMPARISON['min', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1012_a2f25486-e034-4532-b28e-e80ce8555c0f", "input": "Which Chinese invasion got the furthest into Burma?", "output": "[\"SELECT['Burma']\", \"PROJECT['Chinese invasions of #REF', '#1']\", \"PROJECT['how far into Burma was #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is the highest']\"]"}
{"id": "DROP_dev_history_1012_c0d41f72-4986-4073-8580-e25e317d2ec6", "input": "What happened second: China launched four invasions or a truce?", "output": "[\"SELECT['China launched four invasions']\", \"SELECT['there was a truce']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"COMPARISON['max', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1019_72407857-72ac-480e-bc2d-0e4ce3781f10", "input": "Which year saw a smaller Siamese invasion force, 1852 or 1854?", "output": "[\"SELECT['Siamese invasion force']\", \"FILTER['#1', 'in 1852']\", \"FILTER['#1', 'in 1854']\", \"PROJECT['size of #REF', '#2']\", \"PROJECT['size of #REF', '#3']\", \"COMPARISON['min', '#4', '#5']\"]"}
{"id": "DROP_dev_history_1019_7d68bc90-8b3d-4fb4-89a8-6a0f125e1286", "input": "How many did it fail to dislodge the Burmese from?", "output": "[\"SELECT['the Burmese']\", \"PROJECT['from where did it fail to dislodge #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_history_1019_95f79bf5-8b0d-448c-bdf7-b811476be64d", "input": "Where did Mindon get the troops he sent to Kentung to fight the Siamese in 1853?", "output": "[\"SELECT['Mindon']\", \"PROJECT['troops of #REF', '#1']\", \"FILTER['#2', 'that he sent to Kentung to fight the Siamese']\", \"FILTER['#3', 'in 1853']\", \"PROJECT['where did Mindon get #REF', '#4']\"]"}
{"id": "DROP_dev_history_1019_e38a3a71-b665-49bf-9007-5fb6c9a78d4b", "input": "How many years passed between the raiding of Kengtung and the Siamese forces withdrawing to the border?", "output": "[\"SELECT['the raiding of Kengtung']\", \"SELECT['the Siamese forces withdrawing to the border']\", \"PROJECT['year of #REF', '#1']\", \"PROJECT['year of #REF', '#2']\", \"ARITHMETIC['difference', '#4', '#3']\"]"}
{"id": "DROP_dev_history_103_1522737a-aac8-4d6e-9994-723d9b997a70", "input": "Which happened first, the Battle of Kosovo or the Battle of Deçiq?", "output": "[\"SELECT['the Battle of Kosovo']\", \"SELECT['the Battle of Deçiq']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"COMPARISON['min', '#3', '#4']\"]"}
{"id": "DROP_dev_history_103_40020cae-57f6-4a0d-95ff-1f61f65d6678", "input": "Where was Mehmed V visiting when many Albanians boycotted the event?", "output": "[\"SELECT['Mehmed V']\", \"PROJECT['Where was #REF visiting', '#1']\", \"FILTER['#2', 'when many Albanians boycotted the event']\"]"}
{"id": "DROP_dev_history_103_53d1c44c-363f-49a6-9acb-cef3a39d9e9f", "input": "Where did Mehmed V visit first, the site of the historical battle or Kosovo vilayet?", "output": "[\"SELECT['Mehmed V did visit the site of the historical battle']\", \"SELECT['Mehmed V did visit Kosovo vilayet']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"COMPARISON['min', '#3', '#4']\"]"}
{"id": "DROP_dev_history_103_69738a63-9436-4228-ad0b-4c8cc09ca225", "input": "Which group of Albanian leaders were pacified first?", "output": "[\"SELECT['Albanian leaders']\", \"PROJECT['groups of #REF', '#1']\", \"PROJECT['when were #REF pacified', '#2']\", \"COMPARATIVE['#2', '#3', 'is the lowest']\"]"}
{"id": "DROP_dev_history_103_8e69e590-5608-4850-8023-a60d5beef76e", "input": "How many Albanian revolts did Mehmed V sign general amnesty for all participants during his visit to Kosovo vilayet?", "output": "[\"SELECT['Mehmed V']\", \"PROJECT['visit to Kosovo vilayet of #REF', '#1']\", \"PROJECT['Albanian revolts sign general amnesty for all participants of #REF', '#2']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_history_103_be8d3c59-5e04-4f35-b36d-0f6ad095ca13", "input": "How many days after Mehmed V visited Skopje visit the site of the Battle of Kosovo?", "output": "[\"SELECT['Mehmed V visited Skopje']\", \"SELECT['Mehmed V visited the site of the Battle of Kosovo']\", \"PROJECT['day of #REF', '#1']\", \"PROJECT['day of #REF', '#2']\", \"ARITHMETIC['difference', '#4', '#3']\"]"}
{"id": "DROP_dev_history_104_49b5b4dd-1c74-4f80-8630-b270b4b40448", "input": "How many years were between Gosiewski gaining power over Smolensk and becoming Field Quartermaster of Lithuania?", "output": "[\"SELECT['Gosiewski gaining power over Smolensk']\", \"SELECT['becoming Field Quartermaster of Lithuania']\", \"PROJECT['year of #REF', '#1']\", \"PROJECT['year of #REF', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "DROP_dev_history_104_6ab00b85-b405-49bf-ab29-97b5266b82de", "input": "Which job did Aleksander hold first, Palatine-Governor of Smolensk or Lithuanian Field-Quartermaster?", "output": "[\"SELECT['Aleksander was Palatine-Governor of Smolensk']\", \"SELECT['Aleksander was Lithuanian Field-Quartermaster']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"COMPARISON['min', '#3', '#4']\"]"}
{"id": "DROP_dev_history_104_96590b11-eb05-4e81-99e5-58366c63d764", "input": "How many years did Aleksander Korwin Gosiewski de armis Ślepowron act as Speaker of Parliament?", "output": "[\"SELECT['Aleksander Korwin Gosiewski de armis Ślepowron did act as Speaker of Parliament']\", \"PROJECT['years of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_history_104_96d19098-478d-4c14-a33f-cd8a45966f16", "input": "How many year was Aleksander Korwin Gosiewski de armis Ślepowron the Governor?", "output": "[\"SELECT['Aleksander Korwin Gosiewski de armis Ślepowron was the Governor']\", \"PROJECT['years of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_history_104_b8c6894d-fa6f-4b2d-8ca6-26bcdd5899ad", "input": "How many areas was Lithuanian Aleksander Korwin Gosiewski de armis Ślepowron the District-Governor of?", "output": "[\"SELECT['areas']\", \"PROJECT['District-Governor of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is Aleksander Korwin Gosiewski de armis Ślepowron']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_history_104_ed58d302-72fe-41c3-b01f-03bd783cd6a1", "input": "Which was he first, a Lithuanian Field-Quartermaster or Palatine-Governor of Smolensk?", "output": "[\"SELECT['he was a Lithuanian Field-Quartermaster']\", \"SELECT['he was Palatine-Governor of Smolensk']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"COMPARISON['min', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1042_1236769b-479b-4adc-bf2c-cbbc25733cc9", "input": "How many cities did Ottomon attack to retaliate for Polijica?", "output": "[\"SELECT['Ottomon']\", \"PROJECT['cities attacked to retaliate for Polijica of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_history_1042_22c82b78-75f9-46a0-a9f8-b070e15b0960", "input": "How many days did the siege of Herceg Novi last?", "output": "[\"SELECT['the siege of Herceg Novi']\", \"PROJECT['days of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_history_1042_270c5a01-4971-498a-a1e8-08a6b13264aa", "input": "How many years were there between the siege of Herceg Novi and Venice taking Vrgorac?", "output": "[\"SELECT['the siege of Herceg Novi']\", \"SELECT['Venice taking Vrgorac']\", \"PROJECT['year of #REF', '#1']\", \"PROJECT['year of #REF', '#2']\", \"ARITHMETIC['difference', '#4', '#3']\"]"}
{"id": "DROP_dev_history_1042_71446d50-bab4-42a8-b8b5-ba3e4cf99035", "input": "How many areas north of the Republic of Ragusa did Venice take over in 1694?", "output": "[\"SELECT['the Republic of Ragusa']\", \"PROJECT['areas north of #REF', '#1']\", \"FILTER['#2', 'that Venice take over']\", \"FILTER['#3', 'in 1694']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "DROP_dev_history_1042_8d1d1067-668e-47c9-9c68-4047b59b178b", "input": "How many cities did Venice try to take?", "output": "[\"SELECT['cities']\", \"FILTER['#1', 'that Venice try to take']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_history_1042_dd044a3f-2503-4651-a2cc-112d81852352", "input": "What happened second: the siege of Herceg Novi or Knin being taken over?", "output": "[\"SELECT['the siege of Herceg Novi']\", \"SELECT['Knin being taken over']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"COMPARISON['max', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1043_16cf3a20-1c2d-4782-a498-cd77377ddf4c", "input": "How many less people were in the peninsula during the first census compared to the pre-war population?", "output": "[\"SELECT['people']\", \"FILTER['#1', 'that were in the peninsula']\", \"FILTER['#2', 'during the first census']\", \"AGGREGATE['count', '#3']\", \"FILTER['#1', 'in the pre-war population']\", \"AGGREGATE['count', '#5']\", \"ARITHMETIC['difference', '#6', '#4']\"]"}
{"id": "DROP_dev_history_1043_24227b88-1f91-459d-8a6d-3c34eb113759", "input": "How many years after the Treaty of Karlowitz was signed did the population allegedly rise to 250000?", "output": "[\"SELECT['the Treaty of Karlowitz was signed']\", \"SELECT['the population allegedly rise to 250000']\", \"PROJECT['year of #REF', '#1']\", \"PROJECT['year of #REF', '#2']\", \"ARITHMETIC['difference', '#4', '#3']\"]"}
{"id": "DROP_dev_history_1043_620840b6-98e8-445b-925f-825de189621d", "input": "Give the population difference before and after the war?", "output": "[\"SELECT['population']\", \"FILTER['#1', 'before the war']\", \"FILTER['#1', 'after the war']\", \"PROJECT['size of #REF', '#2']\", \"PROJECT['size of #REF', '#3']\", \"ARITHMETIC['difference', '#4', '#5']\"]"}
{"id": "DROP_dev_history_1043_a3955c6f-472d-449c-908f-895ca04a3fc3", "input": "Who were subjects under the Treat of Karlowitz?", "output": "[\"SELECT['the Treat of Karlowitz']\", \"PROJECT['subjects of #REF', '#1']\"]"}
{"id": "DROP_dev_history_1043_a932ccae-ac70-4d48-98db-d46c12d2b029", "input": "How many people did the Peloponnese lose from their population during the war?", "output": "[\"SELECT['the Peloponnese']\", \"PROJECT['people lost during the war of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_history_1043_c7d698e8-41bc-434a-8658-f83763b678db", "input": "What was the makeup of the Kingdom of Morea?", "output": "[\"SELECT['the Kingdom of Morea']\", \"PROJECT['the makeup of #REF', '#1']\"]"}
{"id": "DROP_dev_history_1043_cc0b58bc-aedb-4c3a-9bb7-111b67f8f384", "input": "How many more people lived in Peloponnese pre-war compared to the population after the war?", "output": "[\"SELECT['Peloponnese']\", \"PROJECT['people of #REF', '#1']\", \"FILTER['#2', 'pre-war']\", \"FILTER['#2', 'after the war']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['difference', '#5', '#6']\"]"}
{"id": "DROP_dev_history_1043_f0ec5ecc-40ac-407a-8f60-7becd6fa2741", "input": "What was one thing done by the Venetians?", "output": "[\"SELECT['the Venetians']\", \"PROJECT['the one thing done by #REF', '#1']\"]"}
{"id": "DROP_dev_history_1043_f772b0f3-bab4-497b-b8c3-0ecd4f06bb5c", "input": "How many people  less were there in the peninsula after the war?", "output": "[\"SELECT['the peninsula']\", \"PROJECT['people of #REF', '#1']\", \"FILTER['#2', 'after the war']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"ARITHMETIC['difference', '#5', '#4']\"]"}
{"id": "DROP_dev_history_1048_1003bb6f-c368-40c6-9b07-5008ffac6038", "input": "How many people was the maximum estimate of people who died in the riot?", "output": "[\"SELECT['people']\", \"FILTER['#1', 'who died in the riot']\", \"PROJECT['estimates of #REF', '#2']\", \"AGGREGATE['max', '#3']\"]"}
{"id": "DROP_dev_history_1048_29379a7f-fd0a-4e1f-a892-7be8bfeca740", "input": "Who gave up Leontii Pleshcheyev to the rioters?", "output": "[\"SELECT['Leontii Pleshcheyev']\", \"PROJECT['who gave up #REF', '#1']\", \"FILTER['#2', 'to the rioters']\"]"}
{"id": "DROP_dev_history_1048_60dd759f-b4a3-4513-b539-0e072a7a4db4", "input": "How did the rioters execute Pleshceyev?", "output": "[\"SELECT['rioters']\", \"PROJECT['How did #REF execute Pleshceyev', '#1']\"]"}
{"id": "DROP_dev_history_1048_950bdee5-ce90-475f-8bc8-cdefd1817660", "input": "How many people did the insurgents demand the surrender of?", "output": "[\"SELECT['the insurgents']\", \"PROJECT['people demand to surrender of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_history_1048_cc1b975e-374f-435e-8977-f10fb9458c72", "input": "How many days after Alexei I's return was Pleshceyev surrendered?", "output": "[\"SELECT['Alexei I s return']\", \"SELECT['Pleshceyev surrendered']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"ARITHMETIC['difference', '#4', '#3']\"]"}
{"id": "DROP_dev_history_1065_051483b6-0852-4afb-b26d-a50ec3872348", "input": "How many years after the Battle of Nieuwpoort ocurred did the area obtain city rights from County Philip of Flanders?", "output": "[\"SELECT['the Battle of Nieuwpoort ocurred']\", \"SELECT['the area did obtain city rights from County Philip of Flanders']\", \"PROJECT['year of #REF', '#1']\", \"PROJECT['year of #REF', '#2']\", \"ARITHMETIC['difference', '#4', '#3']\"]"}
{"id": "DROP_dev_history_1065_4a93ad6e-dbd7-41d6-ba8a-7f30904db698", "input": "How many years after the city obtained their rights did the Battle of Nieuwpoort happen?", "output": "[\"SELECT['city obtained their rights']\", \"SELECT['Battle of Nieuwpoort']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"PROJECT['the year of #REF', '#3']\", \"PROJECT['the year of #REF', '#4']\", \"ARITHMETIC['difference', '#6', '#5']\"]"}
{"id": "DROP_dev_history_1065_bd1b14d6-4264-4c02-837d-f34f227bb7ae", "input": "How many countries signed the Second Treaty of Versailles?", "output": "[\"SELECT['the Second Treaty of Versailles']\", \"PROJECT['countries that signed #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_history_1065_ee23be57-a1c1-41c1-8a7a-524171c142f8", "input": "What happened to the city in 1757?", "output": "[\"SELECT['the city']\", \"PROJECT['what happened in 1757 of #REF', '#1']\"]"}
{"id": "DROP_dev_history_1065_f652afd8-e4e3-441b-9cfb-2e2d170df2d4", "input": "Who was part of the treaty that allowed the French to occupy the city?", "output": "[\"SELECT['treaties']\", \"FILTER['#1', 'that allowed the French to occupy the city']\", \"PROJECT['who was part of #REF', '#2']\"]"}
{"id": "DROP_dev_history_1069_044d83bf-2cd2-4285-b6a5-fcb78394c643", "input": "Who were not part of the most powerful navies in 1688?", "output": "[\"SELECT['navies']\", \"FILTER['#1', 'in 1688']\", \"PROJECT['how powerful were #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is the highest']\", \"PROJECT['who were not part of #REF', '#4']\"]"}
{"id": "DROP_dev_history_1069_2bcbb94d-8866-49b9-a964-0ef6e8d998c2", "input": "How many navies suffered serious declines in the 17th century?", "output": "[\"SELECT['navies']\", \"FILTER['#1', 'that suffered serious declines']\", \"FILTER['#2', 'in the 17th century']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_history_1069_4846be15-ad6c-46fb-b795-069429a22c07", "input": "Which ship was destroyed at La Hogue?", "output": "[\"SELECT['La Hogue']\", \"PROJECT['destroyed ship of #REF', '#1']\"]"}
{"id": "DROP_dev_history_1069_899faf5f-73b3-475d-87d2-582cec427732", "input": "Which country had the largest ships in their Navy?", "output": "[\"SELECT['countries']\", \"PROJECT['Navy of #REF', '#1']\", \"PROJECT['ships of #REF', '#2']\", \"PROJECT['size of #REF', '#3']\", \"COMPARATIVE['#1', '#4', 'is the highest']\"]"}
{"id": "DROP_dev_history_107_3ca4effd-18f9-48fe-8645-fd07301676f0", "input": "The book Three Black Pennys was published how many years after Knopf was founded?", "output": "[\"SELECT['the book Three Black Pennys was published']\", \"SELECT['Knopf was founded']\", \"PROJECT['year of #REF', '#1']\", \"PROJECT['year of #REF', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "DROP_dev_history_107_5373d098-e6de-4160-8985-2154e888b345", "input": "Who funded Knopf to be founded?", "output": "[\"SELECT['Knopf']\", \"PROJECT['who funded #REF to besides founded', '#1']\"]"}
{"id": "DROP_dev_history_107_549e85ad-bdd0-4ad4-95e3-3d4fd7faf422", "input": "How many years were there between the founding of Knopf and their first best seller?", "output": "[\"SELECT['the founding of Knopf']\", \"SELECT['the first best seller of Knopf']\", \"PROJECT['year of #REF', '#1']\", \"PROJECT['year of #REF', '#2']\", \"ARITHMETIC['difference', '#4', '#3']\"]"}
{"id": "DROP_dev_history_107_cb4f8363-5782-4e2c-aaa2-727d3e7748b1", "input": "How many years after Knopf was founded was it officiaully incorporated?", "output": "[\"SELECT['Knopf was founded']\", \"SELECT['Knopf was officiaully incorporated']\", \"PROJECT['year of #REF', '#1']\", \"PROJECT['year of #REF', '#2']\", \"ARITHMETIC['difference', '#4', '#3']\"]"}
{"id": "DROP_dev_history_1074_31c0acc5-851f-4452-87e3-a99a1086a53c", "input": "Who died second, Edward's son or Edward's father?", "output": "[\"SELECT['Edward s son died']\", \"SELECT['Edward s father died']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"COMPARISON['max', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1074_431cdf77-e97a-4869-9946-16c86d3cf33f", "input": "Who died first, Edward or John?", "output": "[\"SELECT['Edward died']\", \"SELECT['John died']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"COMPARISON['min', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1074_65ffb850-3999-48bd-992f-475cf7db4dc7", "input": "How many years did Edward stay in Sicily?", "output": "[\"SELECT['Edward did stay in Sicily']\", \"PROJECT['years of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_history_1074_a83c925c-6bf8-45a1-b567-bc8b181539bc", "input": "How many months after departing for Sicily was Edward crowned King of England?", "output": "[\"SELECT['Edward departing for Sicily']\", \"SELECT['Edward was crowned King of England']\", \"PROJECT['month of #REF', '#1']\", \"PROJECT['month of #REF', '#2']\", \"ARITHMETIC['difference', '#4', '#3']\"]"}
{"id": "DROP_dev_history_1074_ce8cdee7-0004-4084-8531-978e670062c8", "input": "When Edward went to Sicily after recovering from his wound, which two family members of his died?", "output": "[\"SELECT['Edward']\", \"PROJECT['family members of #REF', '#1']\", \"PROJECT['when did #REF die', '#2']\", \"SELECT['Edward went to Sicily after recovering from his wound']\", \"PROJECT['when was #REF', '#4']\", \"COMPARATIVE['#2', '#3', 'is the same as #5']\"]"}
{"id": "DROP_dev_history_1074_e444e95d-e3e0-47b0-a5a8-38f99430f3cc", "input": "What month of 1272 was an attempt to assassinate Edward made?", "output": "[\"SELECT['an attempt to assassinate Edward was made']\", \"PROJECT['month in 1272 of #REF', '#1']\"]"}
{"id": "DROP_dev_history_1082_7fc77120-c308-4204-9b11-6487589aa7df", "input": "What happened first: fleet fired on the Swedish or war was declared?", "output": "[\"SELECT['fleet fired on the Swedish']\", \"SELECT['war was declared']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"COMPARISON['min', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1082_8495dc04-40c3-413f-86ee-f2f90a8150fa", "input": "What happened last, the king's departure from the army, or Charley de Mornays stepping in as the commanding officer?", "output": "[\"SELECT['the king s departure from the army']\", \"SELECT['Charley de Mornays stepping in as the commanding officer']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"COMPARISON['max', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1082_8fd1e5f3-e0dc-4996-aeb4-63f90f76e771", "input": "When did Danish king Fredrik II attack Älvsborg?", "output": "[\"SELECT['Danish king Fredrik II did attack Älvsborgs']\", \"PROJECT['when was #REF', '#1']\"]"}
{"id": "DROP_dev_history_1082_bf6818df-7092-4f18-9116-057f582ab324", "input": "What happened second: fleet fired on the Swedish or war was declared?", "output": "[\"SELECT['fleet fired on the Swedish']\", \"SELECT['war was declared']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"COMPARISON['max', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1082_cb321f89-4f0d-4b62-bf75-873d1b012a23", "input": "Who commanded the Danish in May of 1563??", "output": "[\"SELECT['the Danish']\", \"PROJECT['who commanded #REF', '#1']\", \"FILTER['#2', 'in May of 1563']\"]"}
{"id": "DROP_dev_history_1082_dbdf36f7-a935-4b91-9cea-8f2942831ab7", "input": "How many days passed between the Danish fleet firing on the Swedish navy and the declaration of war?", "output": "[\"SELECT['the Danish fleet firing on the Swedish navy']\", \"SELECT['the declaration of war']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"ARITHMETIC['difference', '#4', '#3']\"]"}
{"id": "DROP_dev_history_1092_2b3e75ef-871f-4d1b-b682-32f19616f1ef", "input": "What happened first: government ventured to eliminate hierarchy or the Cheka was created?", "output": "[\"SELECT['government ventured to eliminate hierarchy']\", \"SELECT['the Cheka was created']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"COMPARISON['min', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1092_48c48b6d-7e51-442f-96c0-9f58415a01cd", "input": "How many delegates were women from both the Bolshevik delegates and the Socialist Revolutionary delegates?", "output": "[\"SELECT['the Bolshevik delegates']\", \"SELECT['the Socialist Revolutionary delegates']\", \"FILTER['#1', 'that were women']\", \"FILTER['#2', 'that were women']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['sum', '#5', '#6']\"]"}
{"id": "DROP_dev_history_1092_53b02aa7-df92-41f0-9388-b7629c4b09d8", "input": "Who had more women as delegates, the Socialist Revolutionaries or the Bolsheviks?", "output": "[\"SELECT['the Socialist Revolutionaries']\", \"SELECT['the Bolsheviks']\", \"PROJECT['women delegates of #REF', '#1']\", \"PROJECT['women delegates of #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"COMPARISON['max', '#5', '#6']\"]"}
{"id": "DROP_dev_history_1092_628fc601-b5ca-4a8b-8ffc-65f1544665cb", "input": "How many days took place between the elimination of hierarchy in the army and the creation of Cheka?", "output": "[\"SELECT['the elimination of hierarchy in the army']\", \"SELECT['the creation of Cheka']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1092_6bb88e32-e5dc-45db-ad5f-f7b5fe8f3dc4", "input": "Which happened first, the failed assassination attempt on Lenin, or the Red Terror?", "output": "[\"SELECT['the failed assassination attempt on Lenin']\", \"SELECT['the Red Terror']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"COMPARISON['min', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1092_920531b5-0c47-4f5b-9288-a6858c2ebbf3", "input": "What happened second: government ventured to eliminate hierarchy or the Cheka was created?", "output": "[\"SELECT['the government ventured to eliminate hierarchy']\", \"SELECT['the Cheka was created']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"COMPARISON['max', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1092_bce995bb-9595-4f6e-bad5-4ffdc763d132", "input": "How many total mandatory delegates were proposed by both the Bolshevik Central Committee and the Socialist Revolutionaries?", "output": "[\"SELECT['the Bolshevik Central Committee']\", \"SELECT['the Socialist Revolutionaries']\", \"PROJECT['mandatory delegates proposed by #REF', '#1']\", \"PROJECT['mandatory delegates proposed by #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['sum', '#5', '#6']\"]"}
{"id": "DROP_dev_history_1092_ce7ee2ad-946e-4db5-a2b7-5de955aa97a0", "input": "How many mandatory candidates in total were there for the election?", "output": "[\"SELECT['the election']\", \"PROJECT['mandatory candidates of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_history_1092_e44f4ea8-b8b8-4b03-93b3-76456f0dc2cb", "input": "How many months before the Red Terror was started did Bolsheviks dissolve the Constituent Assembly?", "output": "[\"SELECT['the Red Terror was started']\", \"SELECT['Bolsheviks dissolve the Constituent Assembly']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1125_1128cd7a-9e1f-4bc3-b83a-96bcd74efad9", "input": "How long did it take for military expeditions to consume £50,000?", "output": "[\"SELECT['military expeditions consume £50 , 000']\", \"PROJECT['how long was #REF', '#1']\"]"}
{"id": "DROP_dev_history_1125_781b563a-163a-4029-aa6a-072490987f00", "input": "How many £ was the cost for a year of the garrisons in Calais and Brest and what military expeditions could consume?", "output": "[\"SELECT['the garrisons in Calais and Brest']\", \"PROJECT['cost for a year in £S of #REF', '#1']\", \"SELECT['military expeditions']\", \"PROJECT['£S could consume of #REF', '#3']\", \"ARITHMETIC['sum', '#2', '#4']\"]"}
{"id": "DROP_dev_history_1125_a4895c12-513f-4499-96a4-a8f4e2453ee3", "input": "How many years after Edward III of England pressed his claims to the French throne was his grandson, Richard II, born?", "output": "[\"SELECT['Edward III of England pressed his claims to the French throne']\", \"SELECT['Richard II was born']\", \"PROJECT['year of #REF', '#1']\", \"PROJECT['year of #REF', '#2']\", \"ARITHMETIC['difference', '#4', '#3']\"]"}
{"id": "DROP_dev_history_1125_a60c72cb-1c2b-414a-b102-9be1f24c4ac1", "input": "How many years before the revolt of 1381 did Charles V of France become more active in the conflict?", "output": "[\"SELECT['the revolt of 1381']\", \"SELECT['Charles V of France did become more active in the conflict']\", \"PROJECT['year of #REF', '#1']\", \"PROJECT['year of #REF', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1125_aec1c769-2e5a-4212-ae05-4d5413a6802f", "input": "Who ruled first, Edward III or Richard II?", "output": "[\"SELECT['when did Edward III rule']\", \"SELECT['when did Richard II rule']\", \"COMPARISON['min', '#1', '#2']\"]"}
{"id": "DROP_dev_history_1125_e7de6d9f-1700-4649-b926-5ca6606d0c17", "input": "How many years before Edward III of England had pressed for the French throne until his death?", "output": "[\"SELECT['Edward III of England pressed for the French throne']\", \"SELECT['the death of Edward III of England']\", \"PROJECT['year of #REF', '#1']\", \"PROJECT['year of #REF', '#2']\", \"ARITHMETIC['difference', '#4', '#3']\"]"}
{"id": "DROP_dev_history_115_414253a7-15cf-44aa-b205-045c39299d95", "input": "At it's lowest average surface temperature in February, how many degrees C warmer is it in May?", "output": "[\"SELECT['average surface temperatures']\", \"FILTER['#1', 'that are in degrees C']\", \"FILTER['#2', 'that is in February']\", \"FILTER['#2', 'that is in May']\", \"ARITHMETIC['difference', '#4', '#3']\"]"}
{"id": "DROP_dev_history_1151_5085088f-14c6-4522-8255-a3d78a629066", "input": "How many days did it take after approval of the Foch Line for the Lithuanians to be informed about it?", "output": "[\"SELECT['approval of the Foch Line']\", \"SELECT['the Lithuanians are informed about it']\", \"PROJECT['day of #REF', '#1']\", \"PROJECT['day of #REF', '#2']\", \"ARITHMETIC['difference', '#4', '#3']\"]"}
{"id": "DROP_dev_history_1151_94625e23-01be-411e-af34-34a93bfcbbea", "input": "How many days after Foch proposed his line was it approved?", "output": "[\"SELECT['Foch proposed his line']\", \"SELECT['it approved']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"ARITHMETIC['difference', '#4', '#3']\"]"}
{"id": "DROP_dev_history_1151_dbf61567-8597-4d2c-a79a-64066c33f5af", "input": "How many days did it take the Ente to approve the Foch Line?", "output": "[\"SELECT['the Ente did approve the Foch Line']\", \"PROJECT['days of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_history_1151_eaa88ab7-e8f6-4038-8918-c9a13d6c5256", "input": "How many days after Foch's proposal was it approved by the Entente?", "output": "[\"SELECT['Foch s proposal']\", \"SELECT['it was approved by the Entente']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1167_04413034-93b3-4988-a9d0-a9ac74c2dd7d", "input": "How many more men did Ibrahim Pasha have compared to Sobieski's 16,000 men?", "output": "[\"SELECT['Ibrahim Pasha']\", \"PROJECT['men of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"PROJECT['the difference of #REF and 16 , 000', '#3']\"]"}
{"id": "DROP_dev_history_1167_04f6c2d5-9d02-4c13-8de1-f91932a3c1e6", "input": "What happened first, the battle of Lwow or the Treaty of Żurawno?", "output": "[\"SELECT['the battle of Lwow']\", \"SELECT['the Treaty of Żurawno']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"COMPARISON['min', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1167_4f1919d2-12ac-477d-a2d1-2b39623c81d2", "input": "What happened first: Commonwealth resumed the offensive or Treaty of Żurawno?", "output": "[\"SELECT['Commonwealth resumed the offensive']\", \"SELECT['the Treaty of Żurawno']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"COMPARISON['min', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1167_532fb2d0-6912-42e6-98a5-3af190d13bd2", "input": "How many was the difference beween Sobieski's force and the Turks and Tatars?", "output": "[\"SELECT['Sobieski']\", \"PROJECT['the force of #REF', '#1']\", \"PROJECT['size of #REF', '#2']\", \"SELECT['the Turks and Tatars']\", \"PROJECT['the force of #REF', '#4']\", \"PROJECT['size of #REF', '#5']\", \"ARITHMETIC['difference', '#6', '#3']\"]"}
{"id": "DROP_dev_history_1167_f7cbde06-0f50-46fc-9146-aa0968af570f", "input": "How many more forces were under the Turks than in Sobieski's forces?", "output": "[\"SELECT['the Turks']\", \"PROJECT['forces of #REF', '#1']\", \"SELECT['Sobieski']\", \"PROJECT['forces of #REF', '#3']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['difference', '#5', '#6']\"]"}
{"id": "DROP_dev_history_1169_14213da5-f1ac-46dd-a3bc-9bf635b7879c", "input": "How many years was the Polish-Soviet War?", "output": "[\"SELECT['the Polish-Soviet War']\", \"PROJECT['years of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_history_1169_1d7c2ba8-d719-496c-949c-5354517f3813", "input": "Which happened first, the occupation of Kiev on May 7 or the treaty ending the war?", "output": "[\"SELECT['the occupation of Kiev on May 7']\", \"SELECT['the treaty ending the war']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"COMPARISON['min', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1169_8f4bba77-19d7-49bb-ba92-63a0ae909905", "input": "How many years did the Polish-Soviet War last?", "output": "[\"SELECT['the Polish-Soviet War']\", \"PROJECT['years of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_history_1169_93957280-c977-46cf-a2c4-362de4399d4a", "input": "How many names does the Polish-Soviet War have?", "output": "[\"SELECT['the Polish-Soviet War']\", \"PROJECT['names of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_history_1196_16080b37-4cf0-4067-a5f9-640a5620be88", "input": "Which wave had fewer soldiers total, the first or second?", "output": "[\"SELECT['the first wave']\", \"SELECT['the second wave']\", \"PROJECT['soldiers of #REF', '#1']\", \"PROJECT['soldiers of #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"AGGREGATE['sum', '#5']\", \"AGGREGATE['sum', '#6']\", \"COMPARISON['min', '#7', '#8']\"]"}
{"id": "DROP_dev_history_1196_67399240-5604-4387-a6fc-52da0824c1ad", "input": "About how many soldiers did the military campaign start with?", "output": "[\"SELECT['the military campaign']\", \"PROJECT['soldiers to start with of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_history_1196_a4c53844-bf73-4758-a4c0-0b7c5f21909f", "input": "How many soldiers were in the first wave to reach land?", "output": "[\"SELECT['soldiers']\", \"FILTER['#1', 'that were in the first wave to reach land']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_history_1212_3b8309be-ac03-4e6b-a263-4ade862e1782", "input": "What happened last Islam was brought to the region or Alexander invaded the region?", "output": "[\"SELECT['Islam was brought to the region']\", \"SELECT['Alexander invaded the region']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"COMPARISON['max', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1212_77e53e7b-2354-4112-aa89-d57ae4d71b34", "input": "How many years after Alexander the Great invaded Pauravas and defeated King Prous was the area fuled by the Maurya Empire?", "output": "[\"SELECT['Alexander the Great invaded Pauravas and defeated King Prous']\", \"SELECT['the area was fuled by the Maurya Empire']\", \"PROJECT['year of #REF', '#1']\", \"PROJECT['year of #REF', '#2']\", \"ARITHMETIC['difference', '#4', '#3']\"]"}
{"id": "DROP_dev_history_1212_ab3c0d5e-de51-464c-90c7-a63cd534b693", "input": "How many years after Alexander the great defeated King Porus during his invasion of Pauravas did the Indo-Greek Kingdom form?", "output": "[\"SELECT['Alexander the great defeated King Porus during his invasion of Pauravas']\", \"SELECT['the Indo-Greek Kingdom did form']\", \"PROJECT['year of #REF', '#1']\", \"PROJECT['year of #REF', '#2']\", \"ARITHMETIC['difference', '#4', '#3']\"]"}
{"id": "DROP_dev_history_1233_0f2c1862-c1eb-44c4-852e-357cc0ece6f6", "input": "Who all joined the Duke of Savoy in invading territories of the dominion on Genoa in 1625?", "output": "[\"SELECT['territories of the dominion on Genoa']\", \"PROJECT['who was invading in 1625 of #REF', '#1']\", \"FILTER['#2', 'the Duke of Savoy']\", \"DISCARD['#2', '#3']\"]"}
{"id": "DROP_dev_history_1233_30c4acad-427e-41b4-a076-326e0da2e210", "input": "How many more men larger was the army that began operations against Genoa than the reinforcements from Spain that were captured?", "output": "[\"SELECT['the army that began operations against Genoa']\", \"SELECT['the reinforcements from Spain that were captured']\", \"PROJECT['men of #REF', '#1']\", \"PROJECT['men of #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['difference', '#5', '#6']\"]"}
{"id": "DROP_dev_history_1237_03368542-1574-4350-a827-cd0138957ebc", "input": "How many years after the Anglo-Irish Treaty did Northern Ireland rejoin the United Kingdom?", "output": "[\"SELECT['Anglo-Irish Treaty']\", \"SELECT['Northern Ireland rejoin the United Kingdom']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"ARITHMETIC['difference', '#4', '#3']\"]"}
{"id": "DROP_dev_history_1237_11a86d1d-2ff0-47ef-a631-4cce8706eb27", "input": "Over how many months did the Irtish delegates negotiate the Anglo-Irish Treaty in London?", "output": "[\"SELECT['the Irtish delegates did negotiate the Anglo-Irish Treaty in London']\", \"PROJECT['months of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_history_1237_2e29475a-c7fd-495c-8ae4-f0f841350dd2", "input": "How many months was the Anglo-Irish Treaty negotiated for?", "output": "[\"SELECT['the Anglo-Irish Treaty was negotiated for']\", \"PROJECT['months of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_history_1237_3cd9adbe-5b11-4629-95fa-97963111df53", "input": "According to the treaty, how many years after negotiation would the entire island of Ireland become a self-governing Dominion known as the Irish Free State?", "output": "[\"SELECT['negotiations of the treaty']\", \"SELECT['the entire island of Ireland would become a self-governing Dominion known as the Irish Free State']\", \"PROJECT['year of #REF', '#1']\", \"PROJECT['year of #REF', '#2']\", \"ARITHMETIC['difference', '#4', '#3']\"]"}
{"id": "DROP_dev_history_1237_85ef7d66-ce05-44db-9405-08cf211f95cf", "input": "How many days after the negotiating of the Anglo-Irish Treaty did the entire island of Ireland become the Irish Free State?", "output": "[\"SELECT['the negotiating of the Anglo-Irish Treaty']\", \"SELECT['the entire island of Ireland become the Irish Free State']\", \"PROJECT['day of #REF', '#1']\", \"PROJECT['day of #REF', '#2']\", \"ARITHMETIC['difference', '#4', '#3']\"]"}
{"id": "DROP_dev_history_1237_87ca0aad-2581-4d09-80a4-e383f6edf1e7", "input": "How many days before the end of the negotiating of the Anglo-Irish Treaty was a decision taken to recommend the treaty to Dáil Éireann?", "output": "[\"SELECT['the end of the negotiating of the Anglo-Irish treaty']\", \"SELECT['a decision was taken to recommend the treaty to Dáil Éireann']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1237_daec607e-3554-4ebc-913e-2eac19c82338", "input": "How many months after the truce of the War of Independence was called did the entire island of Ireland become the Irish Free State?", "output": "[\"SELECT['the truce of the War of Independence was called']\", \"SELECT['the entire island of Ireland become the Irish Free State']\", \"PROJECT['month of #REF', '#1']\", \"PROJECT['month of #REF', '#2']\", \"ARITHMETIC['difference', '#4', '#3']\"]"}
{"id": "DROP_dev_history_124_1ff5e8e3-0255-43dd-af8a-f9273a61cc7d", "input": "What happened first: the Indian Wars or the colony ordered the construction?", "output": "[\"SELECT['the Indian Wars']\", \"SELECT['the colony ordered the construction']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"COMPARISON['min', '#3', '#4']\"]"}
{"id": "DROP_dev_history_124_b0eb745d-95a3-4502-be8d-d7680f9e719c", "input": "What happened second: Indian Wars or Anglo-Powhatan War?", "output": "[\"SELECT['Indian Wars']\", \"SELECT['Anglo-Powhatan War']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"COMPARISON['min', '#3', '#4']\"]"}
{"id": "DROP_dev_history_124_b19dc021-b39d-46a2-a7b7-c5dcfd6dfe8a", "input": "What happened first: Indian Wars or Anglo-Powhatan War?", "output": "[\"SELECT['Indian Wars']\", \"SELECT['Anglo-Powhatan War']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"COMPARISON['min', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1250_09caacad-a7ac-45c9-97de-77953711feb5", "input": "How many years passed from when Armenia gave way to communist power to when Drastamat Kanayan sent a telegram to Njdeh?", "output": "[\"SELECT['Armenia gave way to communist power']\", \"SELECT['Drastamat Kanayan sent a telegram to Njdeh']\", \"PROJECT['year of #REF', '#1']\", \"PROJECT['year of #REF', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1250_0b67cac8-bbe9-46a1-9646-a2e6bcc9b9d7", "input": "How many days passed from when the invasion of the First Republic of Armenia started to when Syunik was declared as a self-governing region", "output": "[\"SELECT['the invasion of the First Republic of Armenia started']\", \"SELECT['Syunik was declared as a self-governing region']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"ARITHMETIC['difference', '#4', '#3']\"]"}
{"id": "DROP_dev_history_1250_1054b945-7a9f-4ef0-950c-89131e5c650f", "input": "How many days after the Soviet 11th Red Army's invasion of the First Republic of Armenia started did the actual transfer of power take place in Yerevan?", "output": "[\"SELECT['the Soviet 11th Red Army s invasion of the First Republic of Armenia started']\", \"SELECT['the actual transfer of power did take place invasions Yerevan']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"ARITHMETIC['difference', '#4', '#3']\"]"}
{"id": "DROP_dev_history_1250_c4ce3dc6-d231-4496-bbd7-031d9a7745d2", "input": "How many days after the Soviet 11th Red Army's invasion of the First Republic of Armenia started did  Garegin Nzhdeh declare Syunik as a self-governing region?", "output": "[\"SELECT['the Soviet 11th Red Army s invasion of the First Republic of Armenia started']\", \"SELECT['Garegin Nzhdeh did declare Syunik as a self-governing region']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1258_06ddbb40-8f15-4ee6-98a0-93da477abddd", "input": "How many more of the 293 comuneros who were excluded from pardon were executed compared to those that died in prison?", "output": "[\"SELECT['the comuneros']\", \"FILTER['#1', 'that were excluded from pardon']\", \"FILTER['#2', 'that were executed']\", \"FILTER['#2', 'that died in prison']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['difference', '#5', '#6']\"]"}
{"id": "DROP_dev_history_1258_0711bebd-38ac-482f-878e-1f5aa9382897", "input": "How many of the 293 prisoners were not pardoned, purchased amnesty or were executed?", "output": "[\"SELECT['prisoners']\", \"FILTER['#1', 'that were pardoned']\", \"FILTER['#1', 'that purchased amnesty']\", \"FILTER['#1', 'that were executed']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['sum', '#5', '#6', '#7']\", \"PROJECT['the difference of 293 and #REF', '#8']\"]"}
{"id": "DROP_dev_history_1259_c323389b-e07c-4235-9ce7-3c2e955397b0", "input": "What day celebrates Juan de Padilla and María Pacheco in Spain?", "output": "[\"SELECT['Spain']\", \"PROJECT['day that celebrates Juan de Padilla in #REF', '#1']\", \"FILTER['#2', 'that celebrates María Pacheco in #1']\"]"}
{"id": "DROP_dev_history_1259_dfb70b82-048c-421c-9b1c-c3e2cfad5eb4", "input": "How many years after a small ceremony was held clandestinely was it recognized as an official holiday?", "output": "[\"SELECT['a small ceremony was held clandestinely']\", \"SELECT['it was recognized as an official holiday']\", \"PROJECT['year of #REF', '#1']\", \"PROJECT['year of #REF', '#2']\", \"ARITHMETIC['difference', '#4', '#3']\"]"}
{"id": "DROP_dev_history_1262_1a8712d1-c95d-4da6-ad04-4113c3a0eeb6", "input": "Who ended up being quite fascinated by the Chinese troops?", "output": "[\"SELECT['the Chinese troops']\", \"PROJECT['who ended up being quite fascinated by #REF', '#1']\"]"}
{"id": "DROP_dev_history_1262_7d691a21-5c46-4e91-9af2-4438367754a8", "input": "How many brothers died?", "output": "[\"SELECT['brothers']\", \"FILTER['#1', 'that died']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_history_1262_904ccf30-1b74-4bd6-9682-6b7be3114fff", "input": "How many years did several Ming princes accompanied Koxinga Tawain?", "output": "[\"SELECT['several Ming princes accompanied Koxinga Tawain']\", \"PROJECT['years of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_history_1262_db5918c1-1e6e-4f76-bc57-6b9412d60176", "input": "How many brothers did Zhixin lose?", "output": "[\"SELECT['Zhixin']\", \"PROJECT['brothers of #REF', '#1']\", \"FILTER['#2', 'that Zhixin lose']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_history_1275_3fd2f999-1c12-467b-996f-34ff63aa44c6", "input": "Where is the city that Abd el-Krim ordered his forces not to attack?", "output": "[\"SELECT['cities']\", \"FILTER['#1', 'that Abd el-Krim ordered his forces to not attack']\", \"PROJECT['where is #REF', '#2']\"]"}
{"id": "DROP_dev_history_1275_7728f949-f615-4bca-8173-4a93673bddd2", "input": "Which was the Spanish military first suffered losses at sea, Jaun de Joanes or Espana?", "output": "[\"SELECT['the Jaun de Joanes suffered losses']\", \"SELECT['the Espana suffered losses']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"COMPARISON['min', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1275_a544b7c0-5e1f-4731-9d32-e166022c4a99", "input": "What happened first: had retaken their major fort or España ran aground?", "output": "[\"SELECT['had retaken their major fort']\", \"SELECT['España ran aground']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"COMPARISON['min', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1275_c0792d21-03b5-46f9-a52a-ec9a0cf917a1", "input": "When did the Spanish have the largest forces, late August or end of August?", "output": "[\"SELECT['the Spanish']\", \"PROJECT['forces of #REF', '#1']\", \"PROJECT['size of #REF', '#2']\", \"FILTER['#3', 'in late August']\", \"FILTER['#3', 'in end of August']\", \"COMPARISON['max', '#4', '#5']\"]"}
{"id": "DROP_dev_history_1275_df7d80d5-5c58-40f9-a462-3040c78f8fe3", "input": "What event happened first, Spain loosing all territories it had gained since 1909, or the Spanish retaking their major fort at Monte Arruit.", "output": "[\"SELECT['Spain loosing all territories it had gained since 1909']\", \"SELECT['the Spanish retaking their major fort at Monte Arruit']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"COMPARISON['min', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1276_10fed83a-a5cf-402e-a792-c7039553657f", "input": "How many French casualties were killed, wounded and missing in total after the Rifians attacked the line?", "output": "[\"SELECT['French']\", \"FILTER['#1', 'after the Rifians attacked the line']\", \"FILTER['#2', 'that were killed']\", \"FILTER['#2', 'that were wounded']\", \"FILTER['#2', 'that were missing']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"AGGREGATE['count', '#5']\", \"ARITHMETIC['sum', '#6', '#7', '#8']\"]"}
{"id": "DROP_dev_history_1276_156183fd-2af3-42f5-8053-47401abf9bd0", "input": "How many French casualties were there?", "output": "[\"SELECT['the French']\", \"PROJECT['casualties of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_history_1276_3cf695a7-f48c-4a59-93a6-1475962ee4c8", "input": "How many French out-posts were still there?", "output": "[\"SELECT['French out-posts']\", \"FILTER['#1', 'that were still there']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_history_1276_58b0b58a-e8e9-4528-a223-039f36f217a2", "input": "What group was the French army fighting on April 12th, 1925?", "output": "[\"SELECT['groups']\", \"FILTER['#1', 'that the French army was fighting']\", \"FILTER['#2', 'on April 12th , 1925']\"]"}
{"id": "DROP_dev_history_1276_ca3d6bc7-27e1-45d0-b83f-2435b40cff16", "input": "Which army had less troops?", "output": "[\"SELECT['armies']\", \"PROJECT['troops of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"SUPERLATIVE['min', '#1', '#3']\"]"}
{"id": "DROP_dev_history_1276_cf0ec933-6789-4145-ab5c-c32bb3d6d34c", "input": "Which areas of casualties resulted in the same amount of numbers for the French in April 1925?", "output": "[\"SELECT['the French']\", \"PROJECT['casualties of #REF', '#1']\", \"FILTER['#2', 'in April 1925']\", \"PROJECT['areas of #REF', '#3']\", \"GROUP['count', '#3', '#4']\", \"COMPARATIVE['#4', '#5', 'is the same']\"]"}
{"id": "DROP_dev_history_1284_744d68be-014c-40f5-b3e0-f824ab1ac2a5", "input": "At least, how many groups of men did Couceiro take with him in 1911?", "output": "[\"SELECT['Couceiro']\", \"PROJECT['groups of men of #REF', '#1']\", \"FILTER['#2', 'in 1911']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['min', '#4']\"]"}
{"id": "DROP_dev_history_1284_a8a498a5-f024-4b71-ae88-4a70c54ebe42", "input": "What did Couceiro have more of, ancient rifles, or Winchester rifles?", "output": "[\"SELECT['Couceiro']\", \"PROJECT['ancient rifles of #REF', '#1']\", \"PROJECT['Winchester rifles of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"COMPARISON['max', '#4', '#5']\"]"}
{"id": "DROP_dev_history_1298_65816218-01c4-4071-b10e-32018bf3555f", "input": "How many countries were Circassian refugees thought to be fleeing to?", "output": "[\"SELECT['countries']\", \"FILTER['#1', 'where Circassian refugees thought to be fleeing to']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_history_1298_989273e3-6d57-46d1-bbac-08932bce8dd2", "input": "How many countries resettled on Circassian lands?", "output": "[\"SELECT['Circassian lands']\", \"PROJECT['resettled countries of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_history_1298_e913bb4e-7dfd-43a4-bab2-eb8de3e19289", "input": "How many percent of people of Circassian descent live in Russia?", "output": "[\"SELECT['people of Circassian descent']\", \"FILTER['#1', 'that live in Russia']\", \"PROJECT['percent of #REF', '#2']\"]"}
{"id": "DROP_dev_history_13_3680fe67-1794-47a9-b04c-64bb9d0b94bf", "input": "How many years after the 1st Squadron, 10th Cavalry went to the Republic of South did it received its first Valorous Unit Award?", "output": "[\"SELECT['the 1st Squadron 10th Cavalry went to the Republic of South']\", \"SELECT['it received its first Valorous Unit Award']\", \"PROJECT['year of #REF', '#1']\", \"PROJECT['year of #REF', '#2']\", \"ARITHMETIC['difference', '#4', '#3']\"]"}
{"id": "DROP_dev_history_13_8e8e69da-bc00-452f-9f62-a5412015ee28", "input": "Which happened first, the Paris Peace Accords or the 1st Squadron, 10th Cavalry receiving its first Valorous Unit Award?", "output": "[\"SELECT['the Paris Peace Accords']\", \"SELECT['the 1st Squadron 10th Cavalry receiving its first Valorous Unit Award']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"COMPARISON['min', '#3', '#4']\"]"}
{"id": "DROP_dev_history_130_26ef2b3e-c1f1-4629-b7e8-ec1efbd9641d", "input": "Did France or the Ottoman Empire offer to send more galleys?", "output": "[\"SELECT['France']\", \"SELECT['the Ottoman Empire']\", \"PROJECT['galleys offer to send of #REF', '#1']\", \"PROJECT['galleys offer to send of #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"COMPARISON['max', '#5', '#6']\"]"}
{"id": "DROP_dev_history_130_3d7b585b-2013-491b-a7ab-8a237e6244dd", "input": "How many more galleys did the Ottoman Empire promise than France?", "output": "[\"SELECT['galleys']\", \"FILTER['#1', 'of the Ottoman Empire']\", \"FILTER['#1', 'of France']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"ARITHMETIC['difference', '#4', '#5']\"]"}
{"id": "DROP_dev_history_130_6301f49b-d798-4650-a525-1b6da163878b", "input": "Which country in the Franco-Ottoman Alliance sent more troops?", "output": "[\"SELECT['the Franco-Ottoman Alliance']\", \"PROJECT['countries of #REF', '#1']\", \"PROJECT['troops sent of #REF', '#2']\", \"GROUP['count', '#3', '#2']\", \"COMPARATIVE['#2', '#4', 'is the highest']\"]"}
{"id": "DROP_dev_history_130_9f2384d5-f8b0-4d70-87d3-6cf9f83917b6", "input": "Which country offered its naval services?", "output": "[\"SELECT['naval services offered']\", \"PROJECT['the country of #REF', '#1']\"]"}
{"id": "DROP_dev_history_130_c3dd4124-47d5-417d-bf42-216116cf9f99", "input": "How many years would pass between Polin becoming the ambassador in Constantinople before the Siege of Nice?", "output": "[\"SELECT['Polin becoming the ambassador in Constantinople']\", \"SELECT['the Siege of Nice']\", \"PROJECT['year of #REF', '#1']\", \"PROJECT['year of #REF', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "DROP_dev_history_130_fd0797d0-7852-4e93-aaa2-6d7a8d54716f", "input": "Which country would both the Ottoman Empire and France attack directly?", "output": "[\"SELECT['the Ottoman Empire']\", \"SELECT['France']\", \"SELECT['country attacked directly']\", \"INTERSECTION['#3', '#1', '#2']\"]"}
{"id": "DROP_dev_history_1306_cf084a28-2e17-4b61-a65b-95fb1afff749", "input": "By 2014, how many Georgians were actually able to return to their homes?", "output": "[\"SELECT['Georgians']\", \"FILTER['#1', 'that were actually able to return to their homes']\", \"FILTER['#2', 'By 2014']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_history_1308_448feacf-a245-4b03-ab0b-7be6e7c8e3e4", "input": "How many planes did Russia lose in total according to Russia?", "output": "[\"SELECT['Russia']\", \"PROJECT['planes lost of #REF', '#1']\", \"FILTER['#2', 'according to Russia']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_history_1308_60a3dce8-5c9d-4828-aceb-ebb184b618b3", "input": "How many pieces of Russian ground equipment were estimated to be lost?", "output": "[\"SELECT['Russian ground equipment']\", \"PROJECT['pieces of #REF', '#1']\", \"FILTER['#2', 'estimated to be lost']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_history_1308_890c83a8-4c11-45bd-a641-e650d537b3cf", "input": "How many was the combined Su-25 strike aircraft and Tu-22M3 long-range bomber were lost?", "output": "[\"SELECT['Su-25 strike aircraft']\", \"SELECT['Tu-22M3 long-range bombers']\", \"FILTER['#1', 'that were lost']\", \"FILTER['#2', 'that were lost']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['sum', '#5', '#6']\"]"}
{"id": "DROP_dev_history_1308_f36bae23-6b4b-46de-bc9a-7fcc233905da", "input": "How many tanks, armoured and non-armoured loses were estimated to have been lost?", "output": "[\"SELECT['tanks']\", \"FILTER['#1', 'that are armoured']\", \"FILTER['#1', 'that are non-armoured']\", \"FILTER['#2', 'that were lost']\", \"FILTER['#3', 'that were lost']\", \"AGGREGATE['count', '#4']\", \"AGGREGATE['count', '#5']\", \"ARITHMETIC['sum', '#6', '#7']\"]"}
{"id": "DROP_dev_history_1308_f38b1fcc-2e23-4e3f-9d24-541e6f4c7a30", "input": "How many aircraft loses did Moscow Defence Brief estimate?", "output": "[\"SELECT['the Moscow Defence Brief']\", \"PROJECT['estimate of aircraft loses of #REF', '#1']\"]"}
{"id": "DROP_dev_history_131_54dde962-9113-431c-be42-112a9cfbddbe", "input": "Where did the French fleet go first, Italy of Constantinople?", "output": "[\"SELECT['the French fleet go to Italy']\", \"SELECT['the French fleet go to Constantinople']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"COMPARISON['min', '#3', '#4']\"]"}
{"id": "DROP_dev_history_131_64918f8e-6a66-4579-984d-b978aee999a6", "input": "On his way to Constantinople, how many cities did Polin laid waste to?", "output": "[\"SELECT['Polin']\", \"PROJECT['cities that #REF laid waste to', '#1']\", \"FILTER['#2', 'on his way to Constantinople']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_history_131_768b1525-26ab-4aff-b112-3b0e5612f0b1", "input": "Who attacked on west coast Italy?", "output": "[\"SELECT['Italy']\", \"PROJECT['west coast of #REF', '#1']\", \"PROJECT['who attacked on #REF', '#2']\"]"}
{"id": "DROP_dev_history_131_ccaa6255-bc55-4ee9-bc4e-daa657ceddb6", "input": "How many cities did Barbarossa destroy?", "output": "[\"SELECT['Barbarossa']\", \"PROJECT['cities #REF did destroy', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_history_131_ded5dbb8-447f-4030-8704-78c8092301db", "input": "What happened first, Polin arriving in Constantinople or Polin back to Toulon?", "output": "[\"SELECT['Polin arriving in Constantinople']\", \"SELECT['Polin back to Toulon']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"COMPARISON['min', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1313_1638a290-f1dd-4cd7-bb7a-227d900b18e8", "input": "what was this seen as for the Romanov autocracy", "output": "[\"SELECT['the Romanov autocracy']\", \"PROJECT['what was this seen as for #REF', '#1']\"]"}
{"id": "DROP_dev_history_1313_797e963c-52f2-4f8e-ba70-5a382cda0d85", "input": "How many revolutions did Russia suffer in the early 20th century?", "output": "[\"SELECT['Russia']\", \"PROJECT['revolutions of #REF', '#1']\", \"FILTER['#2', 'in the early 20th century']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_history_1313_ba522776-2428-4a77-b794-2268c578d5ec", "input": "Which army had the least soldiers, Russian or Japanese?", "output": "[\"SELECT['soldiers']\", \"FILTER['#1', 'in the Russian army']\", \"FILTER['#1', 'in the Japanese army']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"COMPARISON['min', '#4', '#5']\"]"}
{"id": "DROP_dev_history_1316_20e698e1-9c93-4524-a5fd-08c7cc9b51a8", "input": "How many years did the Russo-Swedish war go on?", "output": "[\"SELECT['the Russo-Swedish war']\", \"PROJECT['years of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_history_1316_59abb4d4-0e9e-4a5c-9653-44b06eaa2113", "input": "What country did King Charles X rule over in 1655?", "output": "[\"SELECT['King Charles X']\", \"PROJECT['countries rule over of #REF', '#1']\", \"FILTER['#2', 'in 1655']\"]"}
{"id": "DROP_dev_history_1316_f548401d-a665-42b2-b20f-2ee88cc01872", "input": "What happened first: kingdom of Sweden invading Poland or Vyhovsky defeating Trubetskoy's army?", "output": "[\"SELECT['the kingdom of Sweden invading Poland']\", \"SELECT['Vyhovsky defeating Trubetskoy s army']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"COMPARISON['min', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1340_8293caf0-5c95-44ef-8c22-11ad5fd7595e", "input": "How many years after the Protestation at Speyer did the Lutheran Augsburg Confession take place?", "output": "[\"SELECT['the Protestation at Speyer']\", \"SELECT['the Lutheran Augsburg Confession did take place']\", \"PROJECT['year of #REF', '#1']\", \"PROJECT['year of #REF', '#2']\", \"ARITHMETIC['difference', '#4', '#3']\"]"}
{"id": "DROP_dev_history_1340_8cc1ddae-fc57-452f-8bc9-e5f03b5b2146", "input": "How many years did it take to sign the Treaty of Crépy after the Lutheran Augsburg Confession?", "output": "[\"SELECT['the Lutheran Augsburg Confession']\", \"SELECT['the Treaty of Crépy was signed']\", \"PROJECT['year of #REF', '#1']\", \"PROJECT['year of #REF', '#2']\", \"ARITHMETIC['difference', '#4', '#3']\"]"}
{"id": "DROP_dev_history_1340_bcb2b367-f09b-4610-831e-973ba02c833d", "input": "Which happened first, the establishment of the Schmalkaldic League, or the Treaty of Crépy?", "output": "[\"SELECT['the establishment of the Schmalkaldic League']\", \"SELECT['the Treaty of Crépy']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"COMPARISON['min', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1340_f0cb13ce-b5c9-4a59-9335-c87bf5bc011a", "input": "Whose Apology was rejected by Charles V?", "output": "[\"SELECT['Charles V']\", \"PROJECT['Whose Apology was rejected by #REF', '#1']\"]"}
{"id": "DROP_dev_history_1352_7b83ff8b-36c8-4b85-80e0-40e3ad25d010", "input": "How many more troops did Grey de Wilton have when he arrived in Smerwick compared to Sebastiano di San Giuseppe?", "output": "[\"SELECT['Grey de Wilton']\", \"SELECT['Sebastiano di San Giuseppe']\", \"PROJECT['troops of #REF', '#1']\", \"PROJECT['troops of #REF', '#2']\", \"FILTER['#3', 'when he arrived in Smerwick']\", \"FILTER['#4', 'when he arrived in Smerwick']\", \"AGGREGATE['count', '#5']\", \"AGGREGATE['count', '#6']\", \"ARITHMETIC['difference', '#7', '#8']\"]"}
{"id": "DROP_dev_history_1352_d1397441-2f73-4c7b-8ad5-0cbef7a35ea9", "input": "Who landed in Smerwick later, Fitzmaurice or Sebastiano di San Giuseppe?", "output": "[\"SELECT['Fitzmaurice landed in Smerwick']\", \"SELECT['Sebastiano di San Giuseppe landed in Smerwick']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"COMPARISON['max', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1352_e4d11a90-2b7e-47c0-a1c8-901c885ff5ea", "input": "How many months into the year of 1580 did commander Di san Giuseppe surrender?", "output": "[\"SELECT['commander Di san Giuseppe surrenders']\", \"PROJECT['months into the year of 1580 of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_history_1356_d9144b3d-faaf-49dd-8189-5cc3ffeb19fa", "input": "Where did the Spanish defeat happen second, Melilla or Lobo Canyon?", "output": "[\"SELECT['Spanish defeats']\", \"FILTER['#1', 'in Melilla']\", \"FILTER['#1', 'in Lobo Canyon']\", \"PROJECT['when was #REF', '#2']\", \"PROJECT['when was #REF', '#3']\", \"COMPARISON['max', '#4', '#5']\"]"}
{"id": "DROP_dev_history_1356_de7546a7-717a-4e90-bbe1-c50cf0144fde", "input": "How many men died if Colonel Cabrera and 26 men were killed?", "output": "[\"SELECT['Colonel Cabrera and 26 men were killed']\", \"PROJECT['men that died of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_history_1373_18607572-dd53-4db5-9aee-2e24acc7324a", "input": "How many months passed between the Battle of Changde and the Allied attack in Italy?", "output": "[\"SELECT['the Battle of Changde']\", \"SELECT['the Allied attack in Italy']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1373_3994c80e-788b-4bdf-a34c-ba1a44dbca5f", "input": "The Allies launched a series of attacks in Italy against the line at Monte Cassino how many years after the Chinese forces besieged Japanese troops in Myitkyina.?", "output": "[\"SELECT['the Allies launched a series of attacks in Italy against The line at Monte Cassino']\", \"SELECT['Chinese forces besieged Japanese troops in Myitkyina']\", \"PROJECT['year of #REF', '#1']\", \"PROJECT['year of #REF', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1373_7369cb1e-e329-45eb-a2ea-c689e68e6a78", "input": "In what month did the Battle of Cahngde end?", "output": "[\"SELECT['the Battle of Cahngde']\", \"PROJECT['months of #REF', '#1']\", \"AGGREGATE['max', '#2']\"]"}
{"id": "DROP_dev_history_1373_98e5fe66-50b1-4801-8cf9-e5a28678a47c", "input": "Which happened first in 1944, allies attacking at Monte Cassino or the British counteroffensive against the Japanese?", "output": "[\"SELECT['allies attacking at Monte Cassino in 1944']\", \"SELECT['the British counteroffensive against the Japanese in 1944']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"COMPARISON['min', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1373_9a566b07-49d7-4f49-b062-557aec51d7d6", "input": "Which happened first in 1944, the allies attacking at Monte Cassino or the Soviets liberating Crimea?", "output": "[\"SELECT['the allies attacking at Monte Cassino in 1944']\", \"SELECT['the Soviets liberating Crimea in 1944']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"COMPARISON['min', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1373_b7dfb97b-9654-4856-b3e0-c0bbc78d2dff", "input": "What happened first, The German forces were expelled from the Leningrad region or the Japanese launched the first of two invasions?", "output": "[\"SELECT['the German forces were expelled from the Leningrad region']\", \"SELECT['the Japanese launched the first of two invasions']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"COMPARISON['min', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1401_2500b5ab-4b76-454a-8a03-01873e6bffd1", "input": "What was built with the approval of King Narai?", "output": "[\"SELECT['King Narai']\", \"PROJECT['what was built with the approval of #REF', '#1']\"]"}
{"id": "DROP_dev_history_1401_25e390dd-4b69-4a92-b50a-ee918038abd9", "input": "Which happened first, the building of the hospital in Thailand, or Pallu's trip to France?", "output": "[\"SELECT['the building of the hospital in Thailand']\", \"SELECT['Pallu s trip to France']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"COMPARISON['min', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1401_b50bf6f4-6892-4baf-9833-71f4bc7ddce5", "input": "How many years did it take after arriving for the seminary to be built in Ayutthaya?", "output": "[\"SELECT['arriving']\", \"SELECT['the seminary to be built in Ayutthaya']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"ARITHMETIC['difference', '#4', '#3']\"]"}
{"id": "DROP_dev_history_1401_c306ad76-1573-4adb-95d6-482d6e8c844a", "input": "How many Christian communities did the mission take care of in Thailand?", "output": "[\"SELECT['Christian communities']\", \"FILTER['#1', 'that the mission take care of in Thailand']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_history_1408_26056c37-6347-4593-83de-4e0ba620d507", "input": "Which fort was not at the entrance of the bay?", "output": "[\"SELECT['forts']\", \"FILTER['#1', 'at the entrance of the bay']\", \"DISCARD['#1', '#2']\"]"}
{"id": "DROP_dev_history_1408_7b6e7625-a8ba-4cde-8496-1f6c222b2bc9", "input": "How many years were the Dutch at war over the Pescadores?", "output": "[\"SELECT['the Dutch were at war over the Pescadores']\", \"PROJECT['years of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_history_1408_9e7c6934-6115-4c31-80dd-2908cec2e281", "input": "How many years passed between the beginning of the war over the Pescadores and the Battle of Liaoluo Bay?", "output": "[\"SELECT['the beginning of the war over the Pescadores']\", \"SELECT['the Battle of Liaoluo Bay']\", \"PROJECT['year of #REF', '#1']\", \"PROJECT['year of #REF', '#2']\", \"ARITHMETIC['difference', '#4', '#3']\"]"}
{"id": "DROP_dev_history_1408_b0e976b4-4b36-4553-aa26-1fd95eaf24ba", "input": "How many years was the Dutch at war over the Pescadores?", "output": "[\"SELECT['the Dutch was at war over the Pescadores']\", \"PROJECT['years of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_history_1414_41b6dc7f-b458-43c8-8be6-af0b94247ff8", "input": "What happened first, the Siege of Vienna or the Battle of Vienna?", "output": "[\"SELECT['the Siege of Vienna']\", \"SELECT['the Battle of Vienna']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"COMPARISON['min', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1414_45c95f84-92e4-4d83-b426-894687613da0", "input": "When did the Great Turkish War end?", "output": "[\"SELECT['the Great Turkish War did end']\", \"PROJECT['when was #REF', '#1']\"]"}
{"id": "DROP_dev_history_1414_8b2fb816-ef2b-4615-bc2b-26bc3db390eb", "input": "What happened last, the annexation of Central Hungary or the Siege of Vienna?", "output": "[\"SELECT['the annexation of Central Hungary']\", \"SELECT['the Siege of Vienna']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"COMPARISON['max', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1415_46dc098d-a5cc-4ec0-92ed-376a4a5ca13f", "input": "What battle started last: Battle of Vienna or Battle of Mohács?", "output": "[\"SELECT['the Battle of Vienna started']\", \"SELECT['the Battle of Mohács started']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"COMPARISON['max', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1415_6629ae4d-99a4-4786-a8e8-4c0d723dc231", "input": "What year did the Great Turkish War end?", "output": "[\"SELECT['Great Turkish War']\", \"PROJECT['years of #REF', '#1']\", \"AGGREGATE['max', '#2']\"]"}
{"id": "DROP_dev_history_1415_da327876-e93a-4559-954c-ccf4ebc8c340", "input": "What battle started first: Battle of Vienna or Battle of Mohács?", "output": "[\"SELECT['the Battle of Vienna started']\", \"SELECT['the Battle of Mohács started']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"COMPARISON['min', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1416_00aea763-fa4c-4ed2-b06f-07a72a8b2674", "input": "Which were there less of, scholars or scribes?", "output": "[\"SELECT['scholars']\", \"SELECT['scribes']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"COMPARISON['min', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1416_8b5b7708-d985-4aa1-b929-824bb6585c7f", "input": "Who the smallest group of people, 3,826 scribes or 361 scholars?", "output": "[\"SELECT['scribes']\", \"SELECT['scholars']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"COMPARISON['min', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1416_9794f852-dd26-404f-94f4-40712929bdd8", "input": "How many more scribes than scholars were in the editorial board created in march of 1773?", "output": "[\"SELECT['editorial boards']\", \"FILTER['#1', 'that were created in march of 1773']\", \"PROJECT['scribes of #REF', '#2']\", \"PROJECT['scholars of #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['difference', '#5', '#6']\"]"}
{"id": "DROP_dev_history_1418_10cde81d-e30c-4b05-97fb-a45bbeaa2f08", "input": "How many years after the 1537 inheritance treaty did Frederick William lay claim to the Silesian principalities?", "output": "[\"SELECT['the 1537 inheritance treaty']\", \"SELECT['Frederick William lay claim to the Silesian principalities']\", \"PROJECT['year of #REF', '#1']\", \"PROJECT['year of #REF', '#2']\", \"ARITHMETIC['difference', '#4', '#3']\"]"}
{"id": "DROP_dev_history_1418_420b781d-2cc5-4ddc-a7d2-6359f39c50be", "input": "which war took place last?", "output": "[\"SELECT['wars']\", \"PROJECT['when was #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is the highest']\"]"}
{"id": "DROP_dev_history_1418_4c3efdfd-2782-4b9c-8322-8e11bd3c165b", "input": "How many duchies were to pass to the Electorate of Brandenburg?", "output": "[\"SELECT['the Electorate of Brandenburg']\", \"PROJECT['duchies that were to pass to #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_history_1418_8c68be67-a833-4e13-8e5e-fff173e4b59f", "input": "How many years passed from the inheritance treat to when the Emperor took back control of Schwiebus?", "output": "[\"SELECT['the inheritance treat']\", \"SELECT['the Emperor took back control of Schwiebus']\", \"PROJECT['year of #REF', '#1']\", \"PROJECT['year of #REF', '#2']\", \"ARITHMETIC['difference', '#4', '#3']\"]"}
{"id": "DROP_dev_history_1418_8ca5f85e-087c-42a9-8c0e-31bb3fee3fb2", "input": "How many years before Austria was engaged in the Great Turkish War was the battle of white mountain won?", "output": "[\"SELECT['Austria was engaged in the Great Turkish War']\", \"SELECT['the battle of white mountain was won']\", \"PROJECT['year of #REF', '#1']\", \"PROJECT['year of #REF', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1418_9b1e4b5e-e298-45f1-96cf-784fb666780f", "input": "What event happened second, the Battle of White Mountain or Joachim III Frederick inheriting the Silesian Duchy of Jägerndorf?", "output": "[\"SELECT['the Battle of White Mountain']\", \"SELECT['Joachim III Frederick inheriting the Silesian Duchy of Jägerndorf']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"COMPARISON['max', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1418_aead5484-e92d-4a0c-971e-cb6db8d38e39", "input": "Which two wars are mentioned?", "output": "[\"SELECT['the two wars mentioned']\"]"}
{"id": "DROP_dev_history_1418_d76fe77e-d674-4cab-a8f1-fd18e5bf66a8", "input": "How many years passed of the inheritance treaty being signed and the Emperor taking back control of Schwiebus?", "output": "[\"SELECT['the inheritance treaty was signed']\", \"SELECT['the Emperor did take back control of Schwiebus']\", \"PROJECT['year of #REF', '#1']\", \"PROJECT['year of #REF', '#2']\", \"ARITHMETIC['difference', '#4', '#3']\"]"}
{"id": "DROP_dev_history_1418_da95efc1-0a9d-4232-9af5-68dc6e3e69df", "input": "How many wars are mentioned?", "output": "[\"SELECT['wars mentioned']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "DROP_dev_history_1423_20222a55-434f-4fc2-93c4-4b44f2fd228e", "input": "What changed the tides for China?", "output": "[\"SELECT['China']\", \"PROJECT['what changed the tides of #REF', '#1']\"]"}
{"id": "DROP_dev_history_1423_2ca4b84c-1253-4e85-8758-450a633de9b7", "input": "What came first, Mind Dynasty conquering Yunnan borderlands or Burmese control of the Shan States?", "output": "[\"SELECT['Mind Dynasty conquering Yunnan borderlands']\", \"SELECT['Burmese control of the Shan States']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"COMPARISON['min', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1423_467fef33-4114-4469-b674-6f7ef714ba06", "input": "How many years did the Ming dynasty first conquered Yunnan borderlands between?", "output": "[\"SELECT['the Ming dynasty first conquered Yunnan borderlands']\", \"PROJECT['years of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_history_1423_52aa6668-87a0-45a0-a8e6-c754f06f9386", "input": "How many years after the Burmese took control of the Shan States did the situation turn to China's favor?", "output": "[\"SELECT['the Burmese took control of the Shan States']\", \"SELECT['the situation did turn to China s favor']\", \"PROJECT['year of #REF', '#1']\", \"PROJECT['year of #REF', '#2']\", \"ARITHMETIC['difference', '#4', '#3']\"]"}
{"id": "DROP_dev_history_1423_931672d5-04e7-4b5e-8038-dd21baec7be0", "input": "What title of the Toungoo dynasty did Bayinnaung have?", "output": "[\"SELECT['Bayinnaung']\", \"PROJECT['title of the Toungoo dynasty of #REF', '#1']\"]"}
{"id": "DROP_dev_history_1423_95c75894-c71e-4ad5-8499-ea587b1a0986", "input": "What helped Qing decide to impose tighter control of the border regions?", "output": "[\"SELECT['Qing']\", \"PROJECT['what helped #REF', '#1']\", \"FILTER['#2', 'to decide to impose tighter control of the border regions']\"]"}
{"id": "DROP_dev_history_1423_bf92136c-f7b3-443b-92df-d6d38d58a1a1", "input": "Which two countries were the borderlands between?", "output": "[\"SELECT['countries']\", \"FILTER['#1', 'that the borderlands were between']\"]"}
{"id": "DROP_dev_history_1423_d983e75f-fa60-4072-9b05-fde8771cb731", "input": "What event happened first, the Ming dynasty first conquering Yunnan borderlands, or The Burmese control of the Shan States?", "output": "[\"SELECT['the Ming dynasty first conquering Yunnan borderlands']\", \"SELECT['The Burmese control of the Shan States']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"COMPARISON['min', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1423_def573d3-68e4-411c-81e0-327ef19ffec3", "input": "How many years was the time span when the Ming dynasty first conquered the Yunnan borderlands?", "output": "[\"SELECT['the Ming dynasty first conquered the Yunnan borderlands']\", \"PROJECT['time span of #REF', '#1']\", \"PROJECT['years of #REF', '#2']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_history_1425_4e54b444-97a2-46f6-b7ba-2c37b7ff0bad", "input": "Who joined the Green Standard troops to besiege Kengtung?", "output": "[\"SELECT['the Green Standard troops']\", \"PROJECT['who joined #REF', '#1']\", \"FILTER['#2', 'to besiege Kengtung']\"]"}
{"id": "DROP_dev_history_1425_761fe680-9e36-4b78-968e-e89e5fe779dc", "input": "Where was the 20,000 strong Burmese army when Kentung was invaded by Liu in December 1765?", "output": "[\"SELECT['the 20 , 000 strong Burmese army']\", \"PROJECT['where was #REF', '#1']\", \"FILTER['#2', 'when Kentung was invaded by Liu in December 1765']\"]"}
{"id": "DROP_dev_history_1425_83d7a306-12c9-44db-815d-dfa2559158f1", "input": "Which did Ne Myo Sithu do first, returned to Ava or left Kengtung?", "output": "[\"SELECT['Ne Myo Sithu returned to Ava']\", \"SELECT['Ne Myo Sithu left Kengtung']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"COMPARISON['min', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1450_315f385f-77dd-4c14-b7fd-410acdc605aa", "input": "What did  AjK'ixaw become?", "output": "[\"SELECT['AjKixaw']\", \"PROJECT['what did #REF become', '#1']\"]"}
{"id": "DROP_dev_history_1450_684416af-6cbf-44ee-8fd8-82c1a4f887f3", "input": "How many of the 150 men were not sick?", "output": "[\"SELECT['the 150 men']\", \"PROJECT['those that were sick of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"PROJECT['the difference of 150 and #REF', '#3']\"]"}
{"id": "DROP_dev_history_1450_778e9761-1bc6-4233-b711-8d2a85ef58e8", "input": "How many days after Amésqueta marched his men through torrential rain from Cahabón to Mopán did they set out from Mopán leaving sick soldiers behind?", "output": "[\"SELECT['Amésqueta marched his men through torrential rain from Cahabón to Mopán']\", \"SELECT['they set out from Mopán leaving sick soldiers behind']\", \"PROJECT['day of #REF', '#1']\", \"PROJECT['day of #REF', '#2']\", \"ARITHMETIC['difference', '#4', '#3']\"]"}
{"id": "DROP_dev_history_1450_7a2dc15d-dad5-4886-96f1-5d67686bad09", "input": "How many fighters did Diaz have with 49 soldiers and 34 porters and archers?", "output": "[\"SELECT['Diaz']\", \"PROJECT['soldiers of #REF', '#1']\", \"PROJECT['porters and archers of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"ARITHMETIC['sum', '#4', '#5']\"]"}
{"id": "DROP_dev_history_1450_86724d12-e859-41b5-bea2-4b2d2441a21d", "input": "How many months after harsh criticism of Juan Diaz de Velasco's retreat from near Lake Petén Itzá did Barrios die?", "output": "[\"SELECT['harsh criticism of Juan Diaz de Velasco s retreat from near Lake Petén Itzá']\", \"SELECT['Barrios did die']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1450_8be3e663-e0a6-41c6-9f2b-55f9a60bc54d", "input": "How many men of the twenty-five of his 150 men that were sick are still healthy?", "output": "[\"SELECT['men']\", \"FILTER['#1', 'that were sick']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1450_cf455cf1-0221-45c3-88ed-b0c768ed82c5", "input": "How many different military forces combined did Diaz have?", "output": "[\"SELECT['Diaz']\", \"PROJECT['different military forces of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_history_1456_43297e2b-a90e-4011-beca-ec20d02a7407", "input": "How many years after the uprising in 1536 where many natives were killed did Archaeologists find their remains near Lima?", "output": "[\"SELECT['the uprising in 1536 where many natives were killed']\", \"SELECT['Archaeologists did find their remains near Lima']\", \"PROJECT['year of #REF', '#1']\", \"PROJECT['year of #REF', '#2']\", \"ARITHMETIC['difference', '#4', '#3']\"]"}
{"id": "DROP_dev_history_1456_5c1c7fd1-4b12-4cad-b2de-0dfacbfe6725", "input": "Who did Tupac Huallpa succeed as Inca ruler?", "output": "[\"SELECT['Inca rulers']\", \"FILTER['#1', 'that Tupac Huallpa succeed']\"]"}
{"id": "DROP_dev_history_1456_eb895e62-5303-497c-83c9-2b496ca5429a", "input": "What happened second, the remains of about 70 men, women, and adolescents were found in the path of a planned expressway or evidence showing natives were killed with European weapons?", "output": "[\"SELECT['the remains of about 70 men women and adolescents were found in the path of a planned expressway']\", \"SELECT['evidence showing natives were killed with European weapons']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"COMPARISON['max', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1459_41f62cab-b500-47d4-bcd2-c362916072e0", "input": "What were the settlements the Spanish established called?", "output": "[\"SELECT['the Spanish']\", \"PROJECT['established settlements of #REF', '#1']\", \"PROJECT['what were #REF called', '#2']\"]"}
{"id": "DROP_dev_history_1459_c2115e30-fe10-428d-8e9f-81765a5feec6", "input": "How many more people lived in Acalan in 1525 compared to 1553?", "output": "[\"SELECT['Acalan']\", \"PROJECT['people lived in #REF', '#1']\", \"FILTER['#2', 'in 1525']\", \"FILTER['#2', 'in 1553']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['difference', '#5', '#6']\"]"}
{"id": "DROP_dev_history_148_a8caa28a-01ba-40a3-8e14-b396260afe00", "input": "How many years after the revolution of 1890 did the next revolution follow for the Radical Civic Union?", "output": "[\"SELECT['the revolution of 1890']\", \"SELECT['the next revolution for the Radical Civic Union']\", \"PROJECT['year of #REF', '#1']\", \"PROJECT['year of #REF', '#2']\", \"ARITHMETIC['difference', '#4', '#3']\"]"}
{"id": "DROP_dev_history_148_c10dc4e4-5959-4ae6-b2e7-7a497d540b5f", "input": "what happened first, the crisis deepened or they defeats suffered in the revolutions?", "output": "[\"SELECT['the crisis deepened']\", \"SELECT['they suffered defeats in the revolutions']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"COMPARISON['min', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1498_387319a4-c482-452d-8574-9af49198cc2b", "input": "How many years after founding of Hughes/Donahue Gallery was Art Euphoric founded?", "output": "[\"SELECT['the founding of Hughes/Donahue Gallery']\", \"SELECT['Art Euphoric was founded']\", \"PROJECT['year of #REF', '#1']\", \"PROJECT['year of #REF', '#2']\", \"ARITHMETIC['difference', '#4', '#3']\"]"}
{"id": "DROP_dev_history_1498_50e0fabb-6321-47ec-8fd1-bd131fd84b1f", "input": "How many years between the first art gallery and the last one?", "output": "[\"SELECT['the first art gallery']\", \"SELECT['the last art gallery']\", \"PROJECT['year of #REF', '#1']\", \"PROJECT['year of #REF', '#2']\", \"ARITHMETIC['difference', '#4', '#3']\"]"}
{"id": "DROP_dev_history_1498_89fe8219-b100-4200-beff-e803747f2eb4", "input": "Which art gallery came up last, Trescott Street Gallery or Art Euphoric?", "output": "[\"SELECT['Trescott Street Gallery came up']\", \"SELECT['Art Euphoric came up']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"COMPARISON['min', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1498_ba577294-3be8-40b8-9c9b-7f10373cdf19", "input": "Which gallery was founded first, Hughes/Donahue Gallery or Art Euphoric?", "output": "[\"SELECT['Hughes/Donahue Gallery was founded']\", \"SELECT['Art Euphoric was founded']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"COMPARISON['min', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1517_297f8e75-0278-4c15-99dd-2d5a1539fc76", "input": "How many times did the Liao dynasty have violent conflict between 1000 and 1010?", "output": "[\"SELECT['the Liao dynasty']\", \"PROJECT['violent conflicts of #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is  betweenleftside 1000']\", \"COMPARATIVE['#4', '#3', 'is  betweenrightside 1010']\", \"AGGREGATE['count', '#5']\"]"}
{"id": "DROP_dev_history_1517_459ec315-291d-4530-8e31-717998430478", "input": "How many years past since Khitans first invaded Korea to when they built a bridge over the Yalu River?", "output": "[\"SELECT['Khitans first invaded Korea']\", \"SELECT['Khitans built a bridge over the Yalu River']\", \"PROJECT['year of #REF', '#1']\", \"PROJECT['year of #REF', '#2']\", \"ARITHMETIC['difference', '#4', '#3']\"]"}
{"id": "DROP_dev_history_1517_4f0bf230-1adf-4973-bacb-41c3200e06f3", "input": "How many times was Korea attacked?", "output": "[\"SELECT['Korea']\", \"PROJECT['times #REF was attacked', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_history_1517_6cbe18a5-09e1-4eed-a56a-9cab4b240bea", "input": "Which two nations established friendly relations in 993?", "output": "[\"SELECT['nations']\", \"FILTER['#1', 'that established friendly relations']\", \"FILTER['#2', 'in 993']\"]"}
{"id": "DROP_dev_history_1517_8c21d069-f785-4209-8614-60b19141afeb", "input": "What dynasty repulsed Song China?", "output": "[\"SELECT['dynasties']\", \"FILTER['#1', 'that repulsed Song China']\"]"}
{"id": "DROP_dev_history_1517_ab90ed9f-624c-4ebe-b5a2-e775565a0323", "input": "How many years passed since the Kitans invaded Korea to when the alliance was broken?", "output": "[\"SELECT['the Kitans invaded Korea']\", \"SELECT['the alliance was broken']\", \"PROJECT['year of #REF', '#1']\", \"PROJECT['year of #REF', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "DROP_dev_history_154_55197c09-fea5-4e8b-8303-9cd7d221dc35", "input": "How many months did the Republic of Aras last?", "output": "[\"SELECT['the Republic of Aras']\", \"PROJECT['months of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_history_154_b1f8f71a-bf7f-4332-a0d2-dd57fb4aa7a7", "input": "What happened first the city of Nakhchivan being captured, or a cease-fire being signed.", "output": "[\"SELECT['city of Nakhchivan is captured']\", \"SELECT['cease-fire is signed']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"COMPARISON['min', '#3', '#4']\"]"}
{"id": "DROP_dev_history_154_bce165b9-b457-4886-948a-5c4464a133ce", "input": "About how many months after the capture of Nakhchivan was the cease-fire signed?", "output": "[\"SELECT['the capture of Nakhchivan']\", \"SELECT['the cease-fire was signed']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"ARITHMETIC['difference', '#4', '#3']\"]"}
{"id": "DROP_dev_history_154_fe8a7760-6e36-4976-b223-84757163c032", "input": "How many months after Armenian troops captured the city of Nakhchivan and destroyed the Republic of Aras was a cease-fire signed?", "output": "[\"SELECT['Armenian troops captured the city of Nakhchivan and destroyed the Republic of Aras']\", \"SELECT['a cease-fire was signed']\", \"PROJECT['month of #REF', '#1']\", \"PROJECT['month of #REF', '#2']\", \"ARITHMETIC['difference', '#4', '#3']\"]"}
{"id": "DROP_dev_history_1542_09af6e09-38f2-47f7-a3d5-055a779204a2", "input": "Who were King Amangkurat I two sons?", "output": "[\"SELECT['King Amangkurat I']\", \"PROJECT['sons of #REF', '#1']\"]"}
{"id": "DROP_dev_history_1542_4d93ff5f-d1c5-4fb3-ad99-5692cd2aac70", "input": "Who was Pangeran Puger's father?", "output": "[\"SELECT['Pangeran Puger']\", \"PROJECT['father of #REF', '#1']\"]"}
{"id": "DROP_dev_history_1542_5433745b-d0d5-4dcd-bfc6-d94b36185234", "input": "How many years after Pangeran Puger took Plered did he surrender?", "output": "[\"SELECT['Pangeran Puger took Plered']\", \"SELECT['he did surrender']\", \"PROJECT['year of #REF', '#1']\", \"PROJECT['year of #REF', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1542_c8a637e5-6bb7-4d1d-91d2-d799b731b120", "input": "What was captured first: Plered or Trunajaya?", "output": "[\"SELECT['Plered']\", \"SELECT['Trunajaya']\", \"PROJECT['when was #REF captured', '#1']\", \"PROJECT['when was #REF captured', '#2']\", \"COMPARISON['min', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1542_d3f893f0-b871-4da3-8bd5-ed11f4604c63", "input": "Who was born first: Amangkurat I or Amangkurat II?", "output": "[\"SELECT['Amangkurat I']\", \"SELECT['Amangkurat II']\", \"PROJECT['when was #REF born', '#1']\", \"PROJECT['when was #REF born', '#2']\", \"COMPARISON['min', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1542_ed3e7bd3-78f5-4ad3-b0af-cadcdacf99d6", "input": "Who was born last: Amangkurat I or Amangkurat II?", "output": "[\"SELECT['Amangkurat I was born']\", \"SELECT['Amangkurat II was born']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"COMPARISON['max', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1542_f143393e-1a89-4dd8-aae0-e5c102b1001a", "input": "Which happened first, the defeat of the royal army at Gegodog, or the death of King Amangkurat?", "output": "[\"SELECT['the defeat of the royal army at Gegodog']\", \"SELECT['the death of King Amangkurat']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"COMPARISON['min', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1542_fe492d92-0945-4627-9f1f-c48eee07da55", "input": "Who died later, Amangkurat I or Amangkurat II?", "output": "[\"SELECT['Amangkurat I']\", \"SELECT['Amangkurat II']\", \"PROJECT['when did #REF die', '#1']\", \"PROJECT['when did #REF die', '#2']\", \"COMPARISON['max', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1552_cee3e6f4-ee7d-4611-9095-cc9af7b96a3f", "input": "Who was a prince first, Dmitry Donskoy or Alexander Vasilyevich?", "output": "[\"SELECT['Dmitry Donskoy was a prince']\", \"SELECT['Alexander Vasilyevich was a prince']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"COMPARISON['min', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1578_b4230db9-a914-4172-9489-c0f6ea85d583", "input": "How many years after becoming king did Baldwin get captured by Balak of Mardin?", "output": "[\"SELECT['Baldwin did become king']\", \"SELECT['Baldwin did get captured by Balak of Mardin']\", \"PROJECT['year of #REF', '#1']\", \"PROJECT['year of #REF', '#2']\", \"ARITHMETIC['difference', '#4', '#3']\"]"}
{"id": "DROP_dev_history_1578_d3bc4a55-84c8-4379-a2df-610e30794d1a", "input": "How many years after Baldwin de Burg became Count of Edessa did he become King Baldwin II of Jerusalem?", "output": "[\"SELECT['Baldwin de Burg became Count of Edessa']\", \"SELECT['Baldwin de Burg became King Baldwin II of Jerusalem']\", \"PROJECT['year of #REF', '#1']\", \"PROJECT['year of #REF', '#2']\", \"ARITHMETIC['difference', '#4', '#3']\"]"}
{"id": "DROP_dev_history_159_6055719c-1250-4962-97c1-270f66105e69", "input": "What kind of mines did Amiandos have?", "output": "[\"SELECT['Amiandos']\", \"PROJECT['mines of #REF', '#1']\", \"PROJECT['kind of #REF', '#2']\"]"}
{"id": "DROP_dev_history_159_6cdd230c-51c4-49db-9720-e322a57f1d46", "input": "Where was the secondary school?", "output": "[\"SELECT['the secondary school']\", \"PROJECT['Where was #REF', '#1']\"]"}
{"id": "DROP_dev_history_159_a59f511c-2912-4089-b2b4-f2a47cd3c404", "input": "Where were the copper mines, Mavrovouni and Skouriotissa or Amiandos?", "output": "[\"SELECT['the copper mines']\", \"PROJECT['where were #REF', '#1']\", \"BOOLEAN['#2', 'is Mavrovouni and Skouriotissa']\", \"BOOLEAN['#2', 'is Amiandos']\", \"COMPARISON['true', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1601_53469cfb-7516-4de2-80dd-6d8e496cedca", "input": "Where did the Portuguese army go after leaving Mérida?", "output": "[\"SELECT['the Portuguese army']\", \"PROJECT['where did #REF go', '#1']\", \"FILTER['#2', 'after leaving Mérida']\"]"}
{"id": "DROP_dev_history_1601_841d8b22-68ec-450e-a6a9-17d23665d7e8", "input": "How many more Knights were in Portuguese army than the Isabellian army?", "output": "[\"SELECT['Knights']\", \"FILTER['#1', 'in the Portuguese army']\", \"FILTER['#1', 'in the Isabellian army']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"ARITHMETIC['difference', '#4', '#5']\"]"}
{"id": "DROP_dev_history_1601_fd0ab58b-8ad0-4408-915b-1cbf3d8bda0e", "input": "How many more Portuguese Knights were killed than Isabellian Knights?", "output": "[\"SELECT['Portuguese Knights']\", \"SELECT['Isabellian Knights']\", \"FILTER['#1', 'that were killed']\", \"FILTER['#2', 'that were killed']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['difference', '#5', '#6']\"]"}
{"id": "DROP_dev_history_1650_2a7434bc-8b5e-4670-8ab4-e2068d5eb24b", "input": "How many months after the Siege of Derry did the encounter at Dromore County Down take place?", "output": "[\"SELECT['the Siege of Derry']\", \"SELECT['the encounter at Dromore County Down']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1650_729cba0a-fdee-4af3-902f-23d32937d503", "input": "Who did Derry close the gates against on December 7th, 1688?", "output": "[\"SELECT['Derry']\", \"PROJECT['against who did #REF close the gates', '#1']\", \"FILTER['#2', 'on December 7th , 1688']\"]"}
{"id": "DROP_dev_history_1665_08df1bd0-67b7-4c99-aa78-a436da6963d4", "input": "who agreed to end the war?", "output": "[\"SELECT['the war']\", \"PROJECT['who agreed to end #REF', '#1']\"]"}
{"id": "DROP_dev_history_1665_0e654ddb-d39f-45fc-982e-1b0bba2e2862", "input": "What government owned control of passages in the Carpathian Mountains before the end of the War?", "output": "[\"SELECT['Carpathian Mountains']\", \"PROJECT['passages in #REF', '#1']\", \"PROJECT['which government owned control of #REF', '#2']\", \"FILTER['#3', 'before the end of the War']\"]"}
{"id": "DROP_dev_history_1665_134b6269-766a-4f73-be62-f0106ffae212", "input": "Who abandoned the province", "output": "[\"SELECT['the province']\", \"PROJECT['who abandoned #REF', '#1']\"]"}
{"id": "DROP_dev_history_1665_22ecbde3-dbc5-4092-a7fc-a9a5f657ea43", "input": "How many months into the year of 1918 did they re-enter the war?", "output": "[\"SELECT['they re-enter the war']\", \"PROJECT['months into the year of 1918 of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_history_1665_5473e162-5f44-4d32-bdb4-3ad76b4b0c6a", "input": "How many months after Romanian forces established control over Bessarabia did Romania formally attach Bessarabia?", "output": "[\"SELECT['Romanian forces established controls over Bessarabia']\", \"SELECT['Romania did formally attach Bessarabia']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1665_5ab575f6-0664-4e04-80c7-d7b38b5142b2", "input": "What part of the treaty benefited the Romanians?", "output": "[\"SELECT['the treaty']\", \"PROJECT['parts of #REF', '#1']\", \"FILTER['#2', 'that benefited the Romanians']\"]"}
{"id": "DROP_dev_history_1665_6cbf41ba-ca0e-4fb6-b056-2eb0b29a5725", "input": "How many years passed while 748,000 Romanians died?", "output": "[\"SELECT['748 , 000 Romanians died']\", \"PROJECT['years of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_history_1665_8c0cbfc6-298b-4347-b15c-2b8fcae61d69", "input": "How many months was the Treaty of Bucharest in effect before it was renounced?", "output": "[\"SELECT['the Treaty of Bucharest']\", \"PROJECT['months that #REF was in effect', '#1']\", \"FILTER['#2', 'before it was renounced']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_history_1665_b64fd54b-5d21-4f17-aab1-389d089c4a70", "input": "How long did talk last before a treaty was signed between Romanian and Bolshevik governments?", "output": "[\"SELECT['talks between Romanian and Bolshevik governments']\", \"SELECT['a treaty was signed between Romanian and Bolshevik governments']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"AGGREGATE['min', '#3']\", \"ARITHMETIC['difference', '#4', '#5']\"]"}
{"id": "DROP_dev_history_1665_d6089739-9950-4c32-86a2-d64fbef8cbdf", "input": "How many days did the talks between Russians and Romanians last?", "output": "[\"SELECT['the talks between Russians and Romanians']\", \"PROJECT['days of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_history_1665_e65c08c2-7bd7-40dd-9762-7c7b946b8ced", "input": "How were the Romanians able to control Bessarabi?", "output": "[\"SELECT['Bessarabi']\", \"PROJECT['how were the Romanians able to control #REF', '#1']\"]"}
{"id": "DROP_dev_history_1665_f452e8c4-5eb3-48e9-9cfc-927c2b03ff5d", "input": "For how many days did the Romanian and Bolshevik governments talk in March 1918?", "output": "[\"SELECT['the Romanian and Bolshevik governments did talk in March 1918']\", \"PROJECT['days of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_history_1665_f9551685-930b-4434-83d1-87a378ed0397", "input": "Who granted oil concessions to Germany?", "output": "[\"SELECT['Germany']\", \"PROJECT['oil concessions of #REF', '#1']\", \"PROJECT['who granted #REF', '#2']\"]"}
{"id": "DROP_dev_history_1708_2b959aed-f25f-4b71-88e4-7bbcb999fd49", "input": "How many Korean immigrants were more men than woman and children?", "output": "[\"SELECT['Korean immigrants']\", \"FILTER['#1', 'that were men']\", \"AGGREGATE['count', '#2']\", \"FILTER['#1', 'that were women']\", \"FILTER['#1', 'that were children']\", \"UNION['#4', '#5']\", \"AGGREGATE['count', '#6']\", \"ARITHMETIC['difference', '#3', '#7']\"]"}
{"id": "DROP_dev_history_1708_602e3b17-9b42-4fe4-968c-2c11fc26807e", "input": "Which port did the Korean immigrants leave later Chemulpo or Veracruz?", "output": "[\"SELECT['Korean immigrants did leave Chemulpo']\", \"SELECT['Korean immigrants did leave Veracruz']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"COMPARISON['max', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1708_a20c5d22-4168-420b-8b4e-d634cdb3b468", "input": "How many more men were there than women and children who departed from the port of Chemulpo, Incheon aboard the ship Ilford to Salina Cruz, Oaxaca, Mexico?", "output": "[\"SELECT['men']\", \"SELECT['women and children']\", \"FILTER['#1', 'that departed from the port of Chemulpo , Incheon aboard the ship Ilford']\", \"FILTER['#3', 'to Salina Cruz , Oaxaca , Mexico']\", \"FILTER['#2', 'that departed from the port of Chemulpo , Incheon aboard the ship Ilford']\", \"FILTER['#5', 'to Salina Cruz , Oaxaca , Mexico']\", \"AGGREGATE['count', '#4']\", \"AGGREGATE['count', '#6']\", \"ARITHMETIC['difference', '#7', '#8']\"]"}
{"id": "DROP_dev_history_1708_db5e9e76-c8a1-4eb4-8314-f3c1bfda9f19", "input": "Where did the immigrants arrive first, Salina Cruz or Coatzacoalcos?", "output": "[\"SELECT['the immigrants did arrive in Salina Cruz']\", \"SELECT['the immigrants did arrive in Coatzacoalcos']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"COMPARISON['min', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1720_708405cf-096e-43b3-baa3-0eeeeec1f135", "input": "Which group had more active military personnel, the military specialists or the civil servants?", "output": "[\"SELECT['the military specialists group']\", \"SELECT['the civil servants group']\", \"PROJECT['active military personnel of #REF', '#1']\", \"PROJECT['active military personnel of #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"COMPARISON['max', '#5', '#6']\"]"}
{"id": "DROP_dev_history_1720_a5a47d9f-e175-485c-8cc2-b0665e05ec53", "input": "Which personnel were there more of in the Croatian Armed Forces, officers or non-commissioned officers?", "output": "[\"SELECT['the Croatian Armed Forces']\", \"PROJECT['personnel of #REF', '#1']\", \"FILTER['#2', 'that were officers']\", \"FILTER['#2', 'that were non-commissioned officers']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"COMPARISON['max', '#5', '#6']\"]"}
{"id": "DROP_dev_history_1720_b23e4c0a-0ab9-4f35-bc3b-f3f89a31105a", "input": "In May 2016, how many members of the Armed Forces were not active military personnel?", "output": "[\"SELECT['the Armed Forces']\", \"PROJECT['members of #REF', '#1']\", \"FILTER['#2', 'that were active military personnel']\", \"FILTER['#3', 'In May 2016']\", \"DISCARD['#2', '#4']\", \"AGGREGATE['count', '#5']\"]"}
{"id": "DROP_dev_history_1720_d9d38b53-2dca-4304-9650-1820086a5a8e", "input": "How many of the personnel were not officers?", "output": "[\"SELECT['personnel']\", \"FILTER['#1', 'that were officers']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1723_2acc9cfc-ed29-43f4-acd5-d5dcd0af75fd", "input": "How many more people ended up homeless because of the bombing raids compared to being killed?", "output": "[\"SELECT['the bombing raids']\", \"PROJECT['people that ended up homeless because of #REF', '#1']\", \"PROJECT['people that ended up being killed because of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"ARITHMETIC['difference', '#4', '#5']\"]"}
{"id": "DROP_dev_history_1723_e2f5edf8-5cf9-4f05-ad46-c3de65a1eba4", "input": "What was the largest air raid during the war called?", "output": "[\"SELECT['the war']\", \"PROJECT['air raids of #REF', '#1']\", \"FILTER['#2', 'that was the largest']\", \"PROJECT['what was #REF called', '#3']\"]"}
{"id": "DROP_dev_history_1723_ea2c7f1c-45f5-4f01-9158-4342211a8a5e", "input": "How many bombers were used in \"Operation Millennium?\"", "output": "[\"SELECT['Operation Millennium']\", \"PROJECT['bombers of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_history_1731_06804db8-816a-4591-bf58-9b3aa6096d72", "input": "Which country had the smallest number of people born outside of the EU?", "output": "[\"SELECT['countries']\", \"PROJECT['people of #REF', '#1']\", \"FILTER['#2', 'that was born in the EU']\", \"DISCARD['#2', '#3']\", \"GROUP['count', '#4', '#1']\", \"SUPERLATIVE['min', '#1', '#5']\"]"}
{"id": "DROP_dev_history_1731_129e212a-a305-48e3-8438-c8cc52c88cf8", "input": "How many more millions of people living in the EU we're born in Germany than in Italy?", "output": "[\"SELECT['people living in the EU']\", \"PROJECT['millions of people born in Germany of #REF', '#1']\", \"PROJECT['millions of people born in Italy of #REF', '#1']\", \"ARITHMETIC['difference', '#2', '#3']\"]"}
{"id": "DROP_dev_history_1731_5e974684-1e46-4fc2-8523-71845b41626e", "input": "Were more people born in Spain or France?", "output": "[\"SELECT['people']\", \"FILTER['#1', 'that are born in Spain']\", \"FILTER['#1', 'that are born in France']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"COMPARISON['max', '#4', '#5']\"]"}
{"id": "DROP_dev_history_1731_65b66a61-6eb9-43e8-b245-8dd333be4fa3", "input": "How many millions of people living in the EU in 2010 were born in another EU member state?", "output": "[\"SELECT['people']\", \"FILTER['#1', 'living in the EU']\", \"FILTER['#2', 'in 2010']\", \"FILTER['#3', 'that were born in another EU member state']\", \"AGGREGATE['count', '#4']\", \"PROJECT['division of #REF and one million', '#5']\"]"}
{"id": "DROP_dev_history_1731_69f93831-4081-44ea-b212-31e475092207", "input": "Which countries had less than 4.5 million people who were born outside the EU?", "output": "[\"SELECT['countries']\", \"PROJECT['people of #REF', '#1']\", \"FILTER['#2', 'who were born outside the EU']\", \"GROUP['count', '#3', '#1']\", \"COMPARATIVE['#1', '#4', 'is lower than 4.5 million']\"]"}
{"id": "DROP_dev_history_1731_7522f5cf-390e-4bfa-a477-42f22562aa74", "input": "How many more percent were born outside the EU than were born in another EU member state?", "output": "[\"SELECT['the EU']\", \"SELECT['another EU member state']\", \"PROJECT['percent born outside of #REF', '#1']\", \"PROJECT['percent born in of #REF', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1731_81d5237a-97d2-45bc-ab7f-69906890c7f0", "input": "How many more millions of people living in the EU we're born in France than in the Netherlands?", "output": "[\"SELECT['people living in the EU']\", \"FILTER['#1', 'that are born in France']\", \"FILTER['#1', 'that are born in the Netherlands']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"ARITHMETIC['difference', '#4', '#5']\"]"}
{"id": "DROP_dev_history_1731_8a7254c4-c79c-444a-bd07-e9c2eacd19fe", "input": "How many millions of people residing in France and Italy were born outside of the EU?", "output": "[\"SELECT['people born outside of the EU']\", \"FILTER['#1', 'that are residing in France']\", \"FILTER['#1', 'that are residing in Italy']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"ARITHMETIC['sum', '#4', '#5']\"]"}
{"id": "DROP_dev_history_1731_a28d736c-4b32-44f3-b24a-987775399f4f", "input": "In 2010, how many percent of the total EU population were not born outside their resident country?", "output": "[\"SELECT['the EU']\", \"PROJECT['population of #REF', '#1']\", \"FILTER['#2', 'in 2010']\", \"FILTER['#3', 'that were born outside their resident country']\", \"PROJECT['percent of #REF', '#4']\", \"PROJECT['the difference of 100 percent and #REF', '#5']\"]"}
{"id": "DROP_dev_history_1731_c149b2a4-f11e-4303-bfb3-d64a419aa22f", "input": "How many more millions of people living in the EU we're born in Germany than in France?", "output": "[\"SELECT['people living in the EU']\", \"PROJECT['millions of people born in Germany of #REF', '#1']\", \"PROJECT['millions of people born in France of #REF', '#1']\", \"ARITHMETIC['difference', '#2', '#3']\"]"}
{"id": "DROP_dev_history_1731_d1d9687f-0cf4-4c5a-81b0-65cb09dec3e7", "input": "How many more millions of people living in the EU we're born in France than in the Italy?", "output": "[\"SELECT['people living in the EU']\", \"FILTER['#1', 'that are born in France']\", \"FILTER['#1', 'that are born in Italy']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"ARITHMETIC['difference', '#4', '#5']\"]"}
{"id": "DROP_dev_history_1731_e5906c91-1127-4b90-8965-b2a93c715f71", "input": "How many more millions of people were born outside of the EU than were born in another EU member state?", "output": "[\"SELECT['the EU']\", \"PROJECT['millions of people born outside of #REF', '#1']\", \"SELECT['EU member states']\", \"PROJECT['millions of people born of #REF', '#3']\", \"ARITHMETIC['difference', '#2', '#4']\"]"}
{"id": "DROP_dev_history_1731_f20d56dc-7860-4fd3-a94e-d193722ae53d", "input": "How many more millions of people living in the EU we're born in Germany than in Spain?", "output": "[\"SELECT['the EU']\", \"PROJECT['millions of people of #REF', '#1']\", \"FILTER['#2', 'that are born in Germany']\", \"FILTER['#2', 'that are born in Spain']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1744_32f17dd1-cc10-432a-bdc5-d483c8de229e", "input": "How many days after the Spanish Republican Air Force attacked off Ibiza did the Admiral Scheer Bombardment of Almería occur in retaliation?", "output": "[\"SELECT['the Spanish Republican Air Force attacked off Ibiza']\", \"SELECT['the Admiral Scheer Bombardment of Almería did occur in retaliation']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"ARITHMETIC['difference', '#4', '#3']\"]"}
{"id": "DROP_dev_history_1744_7572789f-3881-4340-997d-ef6bb206a44e", "input": "How many refugees were not German citizens?", "output": "[\"SELECT['refugees']\", \"FILTER['#1', 'that were German citizens']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1744_8d12a97f-27a2-4de6-b319-a33b28567c67", "input": "Which suffered more deaths in the Deutschland incident, Germany or Spanish?", "output": "[\"SELECT['Germany']\", \"SELECT['the Spanish']\", \"PROJECT['deaths suffered of #REF', '#1']\", \"PROJECT['deaths suffered of #REF', '#2']\", \"FILTER['#3', 'in the Spanish incident']\", \"FILTER['#4', 'in the Spanish incident']\", \"AGGREGATE['count', '#5']\", \"AGGREGATE['count', '#6']\", \"COMPARISON['max', '#7', '#8']\"]"}
{"id": "DROP_dev_history_1744_b60f3871-a9d9-481f-8c50-e4d775a8a5a5", "input": "How many days after the Deutschland incident did Germany retaliate?", "output": "[\"SELECT['the Deutschland incident']\", \"SELECT['Germany retaliate']\", \"PROJECT['day of #REF', '#1']\", \"PROJECT['day of #REF', '#2']\", \"ARITHMETIC['difference', '#4', '#3']\"]"}
{"id": "DROP_dev_history_1746_17b647b7-dade-44e6-b075-8c60e8b97b38", "input": "Did the army have less tank battalions or Infantry battalions?", "output": "[\"SELECT['the army']\", \"PROJECT['tank battalions of #REF', '#1']\", \"PROJECT['Infantry battalions of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"COMPARISON['min', '#4', '#5']\"]"}
{"id": "DROP_dev_history_1746_7dd8ce0e-90f6-4d16-8504-cb398f0d43e5", "input": "Which battalions in the army had the smallest number?", "output": "[\"SELECT['the army']\", \"PROJECT['battalions in #REF', '#1']\", \"PROJECT['numbers of #REF', '#2']\", \"SUPERLATIVE['min', '#2', '#3']\"]"}
{"id": "DROP_dev_history_1746_ac69efde-0cb6-4dff-9a67-847be390eecc", "input": "How many combined Mechanized Infantry Battalions and Infantry Battalions were part of the Libyan Army in 2009?", "output": "[\"SELECT['the Libyan Army']\", \"PROJECT['Mechanized Infantry Battalions of #REF', '#1']\", \"PROJECT['Infantry Battalions of #REF', '#1']\", \"FILTER['#2', 'in 2009']\", \"FILTER['#3', 'in 2009']\", \"AGGREGATE['count', '#4']\", \"AGGREGATE['count', '#5']\", \"ARITHMETIC['sum', '#6', '#7']\"]"}
{"id": "DROP_dev_history_1746_cd96f9c9-db17-445e-885c-cc7dabba1aa9", "input": "Which battalions in the Libyan Army was the largest?", "output": "[\"SELECT['the Libyan Army']\", \"PROJECT['battalions of #REF', '#1']\", \"PROJECT['size of #REF', '#2']\", \"SUPERLATIVE['max', '#2', '#3']\"]"}
{"id": "DROP_dev_history_1748_435366d2-3547-4adc-9419-d268336e47a1", "input": "How many people are in Chişinău, Bălţi, and Ungheni combined?", "output": "[\"SELECT['people']\", \"FILTER['#1', 'in Chişinău']\", \"FILTER['#1', 'in Bălţi']\", \"FILTER['#1', 'in Ungheni']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['sum', '#5', '#6']\", \"ARITHMETIC['sum', '#7', '#8']\"]"}
{"id": "DROP_dev_history_1748_507ba50b-d137-4f0f-9e80-92bbc8890a8b", "input": "How many more people are in Chişinău and Bălţi combined compared to Cahul, Soroca, and Orhei combined?", "output": "[\"SELECT['people']\", \"FILTER['#1', 'in Chişinău']\", \"FILTER['#1', 'in Bălţi']\", \"UNION['#2', '#3']\", \"AGGREGATE['count', '#4']\", \"FILTER['#1', 'in Cahul']\", \"FILTER['#1', 'in Soroca']\", \"FILTER['#1', 'in Orhei']\", \"UNION['#5', '#6', '#7']\", \"AGGREGATE['count', '#9']\", \"ARITHMETIC['difference', '#5', '#10']\"]"}
{"id": "DROP_dev_history_1748_5e671a33-e94b-4711-a097-e12b1b6fbc51", "input": "Which city from the census is larger: Ungheni or  Cahul?", "output": "[\"SELECT['the census']\", \"PROJECT['cities from #REF', '#1']\", \"PROJECT['size of #REF', '#2']\", \"COMPARATIVE['#3', '#2', 'is Ungheni']\", \"COMPARATIVE['#3', '#2', 'is Cahul']\", \"COMPARISON['max', '#4', '#5']\"]"}
{"id": "DROP_dev_history_1748_7167e544-08eb-4aa3-a570-e51759d67f53", "input": "How many more people are in Chişinău compared to Soroca and Orhei combined?", "output": "[\"SELECT['people']\", \"FILTER['#1', 'in Chişinău']\", \"FILTER['#1', 'in Soroca']\", \"FILTER['#1', 'in Orhei']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['sum', '#6', '#7']\", \"ARITHMETIC['difference', '#5', '#8']\"]"}
{"id": "DROP_dev_history_1748_733e0c71-9f04-411b-8fd1-5064b8dd8137", "input": "How many from the census were in Ungheni and Orhei?", "output": "[\"SELECT['the census']\", \"PROJECT['those in Ungheni of #REF', '#1']\", \"PROJECT['those in Orhei of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"ARITHMETIC['sum', '#4', '#5']\"]"}
{"id": "DROP_dev_history_1748_749d41be-3488-483b-bb8f-89b25dfc95aa", "input": "How many more residents were in Ungheni and Cahul than in Soroca and Orhei?", "output": "[\"SELECT['Ungheni']\", \"SELECT['Cahul']\", \"SELECT['Soroca']\", \"SELECT['Orhei']\", \"PROJECT['residents in #REF', '#1']\", \"PROJECT['residents in #REF', '#2']\", \"PROJECT['residents in #REF', '#3']\", \"PROJECT['residents in #REF', '#4']\", \"AGGREGATE['count', '#5']\", \"AGGREGATE['count', '#6']\", \"AGGREGATE['count', '#7']\", \"AGGREGATE['count', '#8']\", \"ARITHMETIC['sum', '#9', '#10']\", \"ARITHMETIC['sum', '#11', '#12']\", \"ARITHMETIC['difference', '#13', '#14']\"]"}
{"id": "DROP_dev_history_1748_800f33a4-297d-4c84-b711-8d089093270d", "input": "Which city from the census is smaller: Cahul or Orhei?", "output": "[\"SELECT['the census']\", \"PROJECT['cities from #REF', '#1']\", \"PROJECT['size of #REF', '#2']\", \"COMPARATIVE['#3', '#2', 'is Cahul']\", \"COMPARATIVE['#3', '#2', 'is Orhei']\", \"COMPARISON['min', '#4', '#5']\"]"}
{"id": "DROP_dev_history_1748_89f3558f-3dd2-41a7-9f0a-65846acf01f1", "input": "Which city from the census is smaller: Ungheni or Cahul?", "output": "[\"SELECT['Ungheni']\", \"SELECT['Cahul']\", \"PROJECT['size of #REF', '#1']\", \"PROJECT['size of #REF', '#2']\", \"COMPARISON['min', '#3', '#4']\"]"}
{"id": "DROP_dev_history_175_17f59db4-794b-4cc4-9036-b6f0ccd9789c", "input": "How many years old was Louis II when he died?", "output": "[\"SELECT['Louis II']\", \"FILTER['#1', 'when he died']\", \"PROJECT['How many years old was #REF', '#2']\"]"}
{"id": "DROP_dev_history_175_4037af37-ee87-499d-b0b2-2da2c5835547", "input": "Who became the king of Hungary following Louis II's death?", "output": "[\"SELECT['Hungary']\", \"PROJECT['king of #REF', '#1']\", \"FILTER['#2', 'following the death of Louis II']\"]"}
{"id": "DROP_dev_history_175_626792ad-5b62-4461-8bef-7e603f7a3bd9", "input": "How many years after Maximilian I signed the Peace of Pressburg was Vladislaus son Louis II born?", "output": "[\"SELECT['Maximilian I signed the Peace of Pressburg']\", \"SELECT['Vladislaus son Louis II was born']\", \"PROJECT['year of #REF', '#1']\", \"PROJECT['year of #REF', '#2']\", \"ARITHMETIC['difference', '#4', '#3']\"]"}
{"id": "DROP_dev_history_175_79356317-3eb0-4b26-8267-f0da7e519a2b", "input": "How many years after Vladislaus' son Louis II was born did Habsburgs exert pressure on the Jagiellonians in which they arragned two royal weddings of Vladislaus' daughter with Maximilian's grandson and Maximilian's granddaughter Mary with Louis II?", "output": "[\"SELECT['Vladislaus s son Louis II was born']\", \"SELECT['Habsburgs did exert pressure on the Jagiellonians in which they arragned two royal weddings of Vladislaus daughter with Maximilian s grandson and Maximilian s granddaughter Mary with Louis II']\", \"PROJECT['year of #REF', '#1']\", \"PROJECT['year of #REF', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "DROP_dev_history_175_98730f0d-df02-4e56-982d-2b56f08ae253", "input": "What happened first: First Congress of Vienna or the double wedding?", "output": "[\"SELECT['first Congress of Vienna']\", \"SELECT['the double wedding']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"COMPARISON['min', '#3', '#4']\"]"}
{"id": "DROP_dev_history_175_a276d73c-0685-43e4-990d-b89d58a13070", "input": "How many years after Peace of Pressburg was Vladislaus' son born?", "output": "[\"SELECT['the Peace of Pressburg']\", \"SELECT['Vladislaus sons was born']\", \"PROJECT['year of #REF', '#1']\", \"PROJECT['year of #REF', '#2']\", \"ARITHMETIC['difference', '#4', '#3']\"]"}
{"id": "DROP_dev_history_175_ba141618-4caa-48bf-b53f-928dd4049b84", "input": "Who was King Maximilian I's father?", "output": "[\"SELECT['King Maximilian I']\", \"PROJECT['the father of #REF', '#1']\"]"}
{"id": "DROP_dev_history_175_c2a3909c-69a8-457a-a447-85185a34c7f1", "input": "Who was Maximilian's father?", "output": "[\"SELECT['Maximilian']\", \"PROJECT['father of #REF', '#1']\"]"}
{"id": "DROP_dev_history_175_d3b994da-6a2a-4792-9caa-38c6497c4db0", "input": "How many years after Matthias Corvinus died did his son, King Maximilian I sign the Peace of Pressburg with Vladislaus Jagiellon?", "output": "[\"SELECT['Matthias Corvinus died']\", \"SELECT['King Maximilian I did sign the Peace of Pressburg with Vladislaus Jagiellon']\", \"PROJECT['year of #REF', '#1']\", \"PROJECT['year of #REF', '#2']\", \"ARITHMETIC['difference', '#4', '#3']\"]"}
{"id": "DROP_dev_history_175_d3f7065a-8eb3-416a-9241-9855c857f2cc", "input": "What was Ferdinand of Austria's relation to Emperor Charles V?", "output": "[\"SELECT['Ferdinand of Austria']\", \"PROJECT['relation of #REF to Emperor Charles V', '#1']\"]"}
{"id": "DROP_dev_history_175_e78bd046-1df8-4191-8645-1baf57255d48", "input": "Who is the father of King Maximilian I?", "output": "[\"SELECT['King Maximilian I']\", \"PROJECT['father of #REF', '#1']\"]"}
{"id": "DROP_dev_history_1773_88a1f5eb-167c-4eb9-96ea-4a3b4ae54e90", "input": "How many in percent of the economically active were employed?", "output": "[\"SELECT['the economically active']\", \"FILTER['#1', 'that were employed']\", \"PROJECT['percent of #REF', '#2']\"]"}
{"id": "DROP_dev_history_1773_947307cd-6428-44c1-af51-55a7d2802496", "input": "How many in percent of those aged 15 and over weren't economically active?", "output": "[\"SELECT['those aged 15 and over']\", \"FILTER['#1', 'that were economically active']\", \"PROJECT['percent of #REF', '#2']\", \"PROJECT['difference of 100 and #REF', '#3']\"]"}
{"id": "DROP_dev_history_1773_c2b99dcd-f6a3-4928-ac83-8a88518e7fc1", "input": "How many in percent of those aged 15 and over weren't students?", "output": "[\"SELECT['those aged at least 15']\", \"FILTER['#1', 'that were students']\", \"PROJECT['percent of #REF', '#2']\", \"PROJECT['difference of 100 and #REF', '#3']\"]"}
{"id": "DROP_dev_history_1773_ed3fdd8e-bab1-437c-a2c9-9e1a54ae41ef", "input": "How many people total made up homemaking, students and those unable to work?", "output": "[\"SELECT['people']\", \"FILTER['#1', 'that made up homemaking']\", \"FILTER['#1', 'that made up students']\", \"FILTER['#1', 'that made up those unable to work']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['sum', '#5', '#6']\", \"ARITHMETIC['sum', '#7', '#8']\"]"}
{"id": "DROP_dev_history_1782_0dec7ec5-e8eb-46fe-9756-fc132750ca60", "input": "How many points were the Cowboys winning by at the end of the half?", "output": "[\"SELECT['the Cowboys']\", \"PROJECT['points that #REF were winning by', '#1']\", \"FILTER['#2', 'at the end of the half']\"]"}
{"id": "DROP_dev_history_1782_4f85554d-9421-4435-a543-97b3b0dfe55e", "input": "How many points were scored at the end of the game?", "output": "[\"SELECT['points']\", \"FILTER['#1', 'at the end of the game']\", \"AGGREGATE['sum', '#2']\"]"}
{"id": "DROP_dev_history_1782_71e42ee0-7e91-4a1a-bf61-ce7d03c259e4", "input": "Who started the game at quarterback for the Cowboys, Aikmen or Kosar?", "output": "[\"SELECT['the Cowboys']\", \"PROJECT['who started the game at quarterback for #REF', '#1']\", \"BOOLEAN['#2', 'Aikmen']\", \"BOOLEAN['#2', 'Kosar']\", \"COMPARISON['true', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1782_97fb52fe-0314-4d30-97cd-58e4813db267", "input": "Who scored first in the second half of the game, Cowboys or 49ers?", "output": "[\"SELECT['the second half of the game']\", \"PROJECT['scores of #REF', '#1']\", \"AGGREGATE['min', '#2']\", \"BOOLEAN['#3', 'if the Cowboys scored #REF']\", \"BOOLEAN['#3', 'if the 49ers scored #REF']\", \"COMPARISON['true', '#4', '#5']\"]"}
{"id": "DROP_dev_history_1782_aec757e7-1807-4b63-b8de-2ec49edbed44", "input": "How many passes did Aikman not complete in the first half?", "output": "[\"SELECT['Aikman']\", \"PROJECT['passes of #REF', '#1']\", \"FILTER['#2', 'in the first half']\", \"FILTER['#3', 'that Aikman completes']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['difference', '#5', '#6']\"]"}
{"id": "DROP_dev_history_1793_33f8a455-0779-4c19-9309-703e3210f6f6", "input": "Which household had a higher median income, those with single adults with no dependent children or those who were couples with no dependent children?", "output": "[\"SELECT['households']\", \"FILTER['#1', 'that were single adults with no dependent children']\", \"FILTER['#1', 'that were couples with no dependent children']\", \"PROJECT['the median income of #REF', '#2']\", \"PROJECT['the median income of #REF', '#3']\", \"COMPARISON['max', '#4', '#5']\"]"}
{"id": "DROP_dev_history_1793_ed11e092-ed66-49a9-a3c1-d611b9f4d1ad", "input": "How many £ difference is the poverty line of a single adult with no dependent children  compared to couples with no dependent children?", "output": "[\"SELECT['a single adult with no dependent children']\", \"SELECT['couples with no dependent children']\", \"PROJECT['poverty line in £ of #REF', '#1']\", \"PROJECT['poverty line in £ of #REF', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1802_a20bf4cc-7db6-4a58-862b-759b51a06024", "input": "How many more dollars did the V-22 Total cost of ownership per hour in 2013 compared to Sikorsky CH-53E Super Stallion cost per flight hour in 2007?", "output": "[\"SELECT['the V-22']\", \"SELECT['the Sikorsky CH-53E Super Stallion']\", \"PROJECT['Total cost of ownership per hour in dollars of #REF', '#1']\", \"FILTER['#3', 'in 2013']\", \"PROJECT['cost per flight hour in dollars of #REF', '#2']\", \"FILTER['#5', 'in 2007']\", \"ARITHMETIC['difference', '#4', '#6']\"]"}
{"id": "DROP_dev_history_1802_b0840ae1-87f7-4396-b8d1-2661d91bd9a5", "input": "How many of the 200 reports did not have improperly recorded information?", "output": "[\"SELECT['the reports']\", \"FILTER['#1', 'that have improperly recorded information']\", \"AGGREGATE['count', '#2']\", \"PROJECT['the difference of 200 and #REF', '#3']\"]"}
{"id": "DROP_dev_history_1802_fac208a2-5081-49a4-8e15-6cf8cde1ee78", "input": "Which cost more, the Sikorsky CH-53E Super Stallion cost per flight hour in 2007 or V-22 total cost of ownership per hour in 2013?", "output": "[\"SELECT['the Sikorsky CH-53E Super Stallion']\", \"SELECT['the V-22']\", \"PROJECT['cost per flight hour in 2007 of #REF', '#1']\", \"PROJECT['cost of ownership per hour in 2013 of #REF', '#2']\", \"GROUP['sum', '#4', '#2']\", \"COMPARISON['max', '#3', '#5']\"]"}
{"id": "DROP_dev_history_1811_1748ad77-26e5-4a8b-9881-40b7151d99e0", "input": "Which year was family allowances were increased by 44% for families with 3 children?", "output": "[\"SELECT['family allowances']\", \"FILTER['#1', 'for families with 3 children']\", \"PROJECT['year that #REF were increased by 44 %', '#2']\"]"}
{"id": "DROP_dev_history_1811_279e8fd5-6a85-441f-9344-03f446765370", "input": "how many francs is the combined total pension for a single person and a couple prior to the raise?", "output": "[\"SELECT['a single person']\", \"SELECT['a couple']\", \"PROJECT['pension in francs of #REF', '#1']\", \"PROJECT['pension in francs of #REF', '#2']\", \"FILTER['#3', 'prior to the raise']\", \"FILTER['#4', 'prior to the raise']\", \"ARITHMETIC['sum', '#5', '#6']\"]"}
{"id": "DROP_dev_history_1811_3059f5b3-e3a8-4fd5-8a2f-d0c3071f5c16", "input": "How many francs was old age pensions per month before it was raised by 300 francs for a single person?", "output": "[\"SELECT['old age pensions per month']\", \"FILTER['#1', 'before it was raised by 300 francs for a single person']\", \"PROJECT['How many francs was #REF', '#2']\"]"}
{"id": "DROP_dev_history_1811_6c9aa74d-14c8-4247-9088-a001975e03a8", "input": "How many percentage points did the purchasing power of social transfers increase by from 1981 to 1982?", "output": "[\"SELECT['social transfers']\", \"PROJECT['the purchasing power of #REF', '#1']\", \"FILTER['#2', 'in 1981']\", \"FILTER['#2', 'in 1982']\", \"PROJECT['percentage of #REF', '#3']\", \"PROJECT['percentage of #REF', '#4']\", \"ARITHMETIC['difference', '#6', '#5']\"]"}
{"id": "DROP_dev_history_1811_7b97c202-4eee-4f9f-9ed2-ca04972bd115", "input": "How many more francs were they getting than a month ago?", "output": "[\"SELECT['francs they were getting']\", \"FILTER['#1', 'a month ago']\", \"ARITHMETIC['difference', '#1', '#2']\"]"}
{"id": "DROP_dev_history_1811_8f5468e9-42f3-4fea-849b-b5b25f1a735a", "input": "Who received a higher raise in allowance, families with 3 children or families with 2 children?", "output": "[\"SELECT['families with 3 children']\", \"SELECT['families with 2 children']\", \"PROJECT['raise in allowance of #REF', '#1']\", \"PROJECT['raise in allowance of #REF', '#2']\", \"COMPARISON['max', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1811_9b70bc55-b697-45ea-9bf0-565c444e2fa4", "input": "How many months was the time span where the minimum wage was increased by 15% in real terms?", "output": "[\"SELECT['the minimum wage was increased by 15 % in real terms']\", \"PROJECT['months of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_history_1811_d7953e3f-1371-410a-98f3-5f2bd05d7843", "input": "How many more francs per month did a couple receive than a single person?", "output": "[\"SELECT['a couple']\", \"SELECT['a single person']\", \"PROJECT['francs per month of #REF', '#1']\", \"PROJECT['francs per month of #REF', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1811_ed444cd2-61c4-4afc-825a-e81e7183082d", "input": "Which year was the purchasing power of social transfers higher, 1981 or 1982?", "output": "[\"SELECT['social transfers']\", \"PROJECT['the purchasing power of #REF', '#1']\", \"FILTER['#2', 'in 1981']\", \"FILTER['#2', 'in 1982']\", \"COMPARISON['max', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1814_5621c94c-0120-4676-b778-528f202ac31a", "input": "How many more Buick vehicles were produced in 1906 than in 1905?", "output": "[\"SELECT['1906']\", \"SELECT['1905']\", \"PROJECT['Buick vehicles produced of #REF', '#1']\", \"PROJECT['Buick vehicles produced of #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['difference', '#5', '#6']\"]"}
{"id": "DROP_dev_history_1814_5bc8b6b1-4f81-49ef-97f3-df0b7800df67", "input": "How many Buick automobiles were built from 1899 thru 1907?", "output": "[\"SELECT['Buick automobiles']\", \"PROJECT['when was #REF built', '#1']\", \"COMPARATIVE['#1', '#2', 'is at least 1899']\", \"COMPARATIVE['#3', '#2', 'is at most 1907']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "DROP_dev_history_1814_600ed5a0-96fb-4170-8e67-61775e2302e1", "input": "How many cars were produced total from 1904 to 1908?", "output": "[\"SELECT['cars']\", \"FILTER['#1', 'that were produced from 1904 to 1908']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_history_1814_9b3d3759-7ad1-4d82-82f2-afd55f0909f3", "input": "How many Buick automobiles were built between 1904 and 1905?", "output": "[\"SELECT['1904']\", \"SELECT['1905']\", \"PROJECT['Buick automobiles built of #REF', '#1']\", \"PROJECT['Buick automobiles built of #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['sum', '#5', '#6']\"]"}
{"id": "DROP_dev_history_1814_a26a97a8-8ca9-4c2c-b6e4-490d37826f09", "input": "When were 37 Buick automobiles made?", "output": "[\"SELECT['37 Buick automobiles']\", \"PROJECT['when were #REF made', '#1']\"]"}
{"id": "DROP_dev_history_1814_acad296c-ca6f-49b8-b862-ee2b461cd4b3", "input": "How many Buick automobiles were built from 1899 thru 1906?", "output": "[\"SELECT['Buick automobiles']\", \"FILTER['#1', 'that were built from 1899 thru 1906']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_history_1814_c035a076-35c0-440c-b39d-4951027a3cec", "input": "In which year was Marr rehired and a production of 37 vehicles occurred?", "output": "[\"SELECT['Marr was rehired']\", \"SELECT['a production of 37 vehicles occurred']\", \"SELECT['the year']\", \"INTERSECTION['#3', '#1', '#2']\"]"}
{"id": "DROP_dev_history_1814_e52388f9-a4e7-4d73-995b-c80e80c1cd14", "input": "How many years after leaving Buick did Walter Lorenzo Marr return to work at Buick?", "output": "[\"SELECT['Walter Lorenzo Marr did leave Buick']\", \"SELECT['Walter Lorenzo Marr did return to work at Buick']\", \"PROJECT['year of #REF', '#1']\", \"PROJECT['year of #REF', '#2']\", \"ARITHMETIC['difference', '#4', '#3']\"]"}
{"id": "DROP_dev_history_1837_094a5ed5-4e52-4258-841f-c6e01088c3fe", "input": "How many books did the main library have in 1884, plus the volumes held in the Main Building on the Ring?", "output": "[\"SELECT['the main library']\", \"SELECT['the Main Building on the Ring']\", \"PROJECT['books in 1884 of #REF', '#1']\", \"PROJECT['volumes held of #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['sum', '#5', '#6']\"]"}
{"id": "DROP_dev_history_1837_babde1b6-94f2-4625-bb55-29d6d921519b", "input": "How many more volumes per year does the Main Library deal with compared to the growth of the Academic LIbrary 100 years prior?", "output": "[\"SELECT['the Main Library']\", \"SELECT['the Academic Library']\", \"PROJECT['volumes per year dealt with of #REF', '#1']\", \"PROJECT['growth in volumes 100 years prior of #REF', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1853_11f2bc60-e859-41e5-9577-2ec51f4b0a2b", "input": "Which crime dropped by a larger percentage, the murder rate of the rate of rapes?", "output": "[\"SELECT['the murder rates in percentages']\", \"SELECT['the rate of rapes in percentages']\", \"AGGREGATE['max', '#1']\", \"AGGREGATE['min', '#1']\", \"AGGREGATE['max', '#2']\", \"AGGREGATE['min', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\", \"ARITHMETIC['difference', '#5', '#6']\", \"COMPARISON['max', '#7', '#8']\"]"}
{"id": "DROP_dev_history_1853_176835fe-042f-4085-af4a-945ef3f1f903", "input": "How many years since 1981 did the robberies drop?", "output": "[\"SELECT['1981']\", \"SELECT['the robberies did drop']\", \"PROJECT['year of #REF', '#2']\", \"ARITHMETIC['difference', '#3', '#1']\"]"}
{"id": "DROP_dev_history_1853_3bdedbf5-1856-438f-9f79-26f3ce4501a4", "input": "How many fewer robberies were reported to the New York City Police Department in 2010 than in 2000?", "output": "[\"SELECT['New York City Police Department']\", \"PROJECT['robberies reported to #REF', '#1']\", \"FILTER['#2', 'in 2010']\", \"FILTER['#2', 'in 2000']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['difference', '#6', '#5']\"]"}
{"id": "DROP_dev_history_1853_5bdccaef-04ee-44dc-b876-8cd75cc45f71", "input": "How many more percentage points did the burglary rate drop than murder rate between 1990 and 2013?", "output": "[\"SELECT['the burglary rates in percentages']\", \"SELECT['the murder rates in percentages']\", \"FILTER['#1', 'in 1990']\", \"FILTER['#1', 'in 2013']\", \"FILTER['#2', 'in 1990']\", \"FILTER['#2', 'in 2013']\", \"ARITHMETIC['difference', '#3', '#4']\", \"ARITHMETIC['difference', '#5', '#6']\", \"ARITHMETIC['difference', '#7', '#8']\"]"}
{"id": "DROP_dev_history_1853_6c6f5cbe-c01c-46f0-aad5-df16aa478aa5", "input": "which year had the most robberies?", "output": "[\"SELECT['years']\", \"PROJECT['robberies of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"SUPERLATIVE['max', '#1', '#3']\"]"}
{"id": "DROP_dev_history_1853_6fc56ebd-64f9-48ef-a336-174e465fe48e", "input": "Which crimes dropped by more than 85%", "output": "[\"SELECT['crimes']\", \"PROJECT['%S dropped by of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is more than 85 %']\"]"}
{"id": "DROP_dev_history_1853_84853441-8f08-44fb-bd78-6d63b562619e", "input": "Were there more robberies in Harlem in 1981 or 1990?", "output": "[\"SELECT['Harlem']\", \"PROJECT['robberies of #REF', '#1']\", \"FILTER['#2', 'in 1981']\", \"FILTER['#2', 'in 1990']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"COMPARISON['max', '#5', '#6']\"]"}
{"id": "DROP_dev_history_1853_91fddb15-6c0e-405c-bc27-b6dee3d04072", "input": "Which crime had the smallest drop in Harlem between 1990-2003, rape or robbery?", "output": "[\"SELECT['Harlem']\", \"PROJECT['drop in rapes between 1990-2003 of #REF', '#1']\", \"PROJECT['drop in robberies between 1990-2003 of #REF', '#1']\", \"COMPARISON['min', '#2', '#3']\"]"}
{"id": "DROP_dev_history_1853_a7f33252-0270-4155-8ed8-231bad0a1d99", "input": "How many fewer robberies were there in 2000 than in 1981?", "output": "[\"SELECT['robberies']\", \"FILTER['#1', 'in 2000']\", \"FILTER['#1', 'in 1981']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"ARITHMETIC['difference', '#5', '#4']\"]"}
{"id": "DROP_dev_history_1853_b561597e-f78b-414c-b25d-c2391620497a", "input": "Which crime saw the largest percentage decrease between 1990 and 2013?", "output": "[\"SELECT['crimes']\", \"PROJECT['decreases of #REF', '#1']\", \"FILTER['#2', 'from 1990']\", \"FILTER['#3', 'to 2013']\", \"PROJECT['percentage of #REF', '#4']\", \"SUPERLATIVE['max', '#1', '#5']\"]"}
{"id": "DROP_dev_history_1853_b7b1ec7c-4bb3-4691-ab70-edf3eaab68a7", "input": "Which year was the latest that the crimes were tracked by the New York Police Department,  1990 or 2003?", "output": "[\"SELECT['crimes were tracked by the New York Police Department']\", \"PROJECT['years of #REF', '#1']\", \"AGGREGATE['max', '#2']\", \"BOOLEAN['#3', 'is equal to 1990']\", \"BOOLEAN['#3', 'is equal to 2003']\", \"COMPARISON['true', '#4', '#5']\"]"}
{"id": "DROP_dev_history_1853_ec234b8a-0155-4306-9482-61d8b438cdfb", "input": "Which crime had the largest drop in Harlem btween 1990-2003, murder or rape?", "output": "[\"SELECT['Harlem']\", \"PROJECT['murders of #REF', '#1']\", \"PROJECT['rapes of #REF', '#1']\", \"FILTER['#2', 'in 1990']\", \"FILTER['#2', 'in 2003']\", \"FILTER['#3', 'in 1990']\", \"FILTER['#3', 'in 2003']\", \"ARITHMETIC['difference', '#4', '#5']\", \"ARITHMETIC['difference', '#6', '#7']\", \"COMPARISON['max', '#8', '#9']\"]"}
{"id": "DROP_dev_history_1853_f5e1c2fb-22ec-4fcf-8c67-55ab538039ea", "input": "How many more robberies were there in 1981 compared to 2010?", "output": "[\"SELECT['robberies']\", \"FILTER['#1', 'in 1981']\", \"FILTER['#1', 'in 2010']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"ARITHMETIC['difference', '#4', '#5']\"]"}
{"id": "DROP_dev_history_1853_fe5e086b-c8f0-4f5c-8f88-d30b8830f7f0", "input": "Which year was the earliest that crimes were tracked by the New York Police Department, 2003 or 1990?", "output": "[\"SELECT['the New York Police Department']\", \"PROJECT['years that crimes were tracked by #REF', '#1']\", \"AGGREGATE['min', '#2']\", \"BOOLEAN['#3', 'equal to 2003']\", \"BOOLEAN['#3', 'equal to 1990']\", \"COMPARISON['true', '#4', '#5']\"]"}
{"id": "DROP_dev_history_1859_5e8f6db4-71a3-4ed6-b691-96ed7069913b", "input": "Where there more households with households that had individuals under 18 or someone living alone who was 65 years of age or older?", "output": "[\"SELECT['households']\", \"FILTER['#1', 'that had individuals under 18']\", \"FILTER['#1', 'that had someone living alone who was 65 years of age or older']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"COMPARISON['max', '#4', '#5']\"]"}
{"id": "DROP_dev_history_1859_68af093c-5f19-4b7e-ab4a-85e7bec27b3d", "input": "How many in percent of households were in a Marriage and not living together?", "output": "[\"SELECT['households']\", \"FILTER['#1', 'that were in a Marriage']\", \"FILTER['#2', 'that were living together']\", \"DISCARD['#2', '#3']\", \"PROJECT['percent of #REF', '#4']\"]"}
{"id": "DROP_dev_history_1859_7c7aeed2-3f87-483a-824b-c8bd10d576f8", "input": "How many percentage points is the amount of households that don't have an individual under 18?", "output": "[\"SELECT['households']\", \"FILTER['#1', 'that have an individual under 18']\", \"PROJECT['percentage of #REF', '#2']\", \"PROJECT['the difference of 100 and #REF', '#3']\"]"}
{"id": "DROP_dev_history_1859_7dd6cc9c-8344-46f0-a63d-a4d73414753b", "input": "How many households, in percent, were not made up of individuals?", "output": "[\"SELECT['households']\", \"FILTER['#1', 'that were made up of individuals']\", \"PROJECT['percent of #REF', '#2']\", \"PROJECT['difference of 100 and #REF', '#3']\"]"}
{"id": "DROP_dev_history_1860_2684ade2-5687-43a9-b238-c63a8c94d2a4", "input": "How many age groups made up more than 6% of the population but less than 7% of the population?", "output": "[\"SELECT['age groups']\", \"PROJECT['%S of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'higher than 6']\", \"COMPARATIVE['#3', '#2', 'lower than 7']\"]"}
{"id": "DROP_dev_history_1860_303ab451-cf3d-4824-af72-bd8b25f356a1", "input": "How many age groups made up less than 6% of the population?", "output": "[\"SELECT['age groups']\", \"PROJECT['%S of the population of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is less than 6 %']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_history_1860_354675ed-a147-4b07-b41c-78c6cbdc9b82", "input": "How many percent of people were not between 15 and 19 years?", "output": "[\"SELECT['people']\", \"FILTER['#1', 'that were betweenleftside 15']\", \"FILTER['#2', 'that were betweenrightside 19 years']\", \"PROJECT['percent of #REF', '#3']\", \"PROJECT['difference of 100 and #REF', '#4']\"]"}
{"id": "DROP_dev_history_1860_37b30b0d-db14-40c6-80d4-626d03ec0d8b", "input": "Were more people between the ages of 10 to 19 or 20 to 29?", "output": "[\"SELECT['people']\", \"FILTER['#1', 'between the ages of 10 to 19']\", \"FILTER['#1', 'betweenleftside 20']\", \"FILTER['#3', 'betweenrightside 29']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#4']\", \"COMPARISON['max', '#5', '#6']\"]"}
{"id": "DROP_dev_history_1860_3a7cc26a-8403-47d7-bf29-c3c2068941bc", "input": "How many percent of Saratoga Countys population in 2010 was over the age of 18?", "output": "[\"SELECT['Saratoga Countys']\", \"PROJECT['population of #REF', '#1']\", \"FILTER['#2', 'in 2010']\", \"PROJECT['ages of #REF', '#3']\", \"COMPARATIVE['#3', '#4', 'is higher than 18']\", \"PROJECT['percent of #REF', '#5']\"]"}
{"id": "DROP_dev_history_1860_435cd2ca-6dea-4957-9642-d79ac09cb712", "input": "How many percent of people were not between 25 and 29 years?", "output": "[\"SELECT['people']\", \"FILTER['#1', 'that were betweenleftside 25']\", \"FILTER['#2', 'that were betweenrightside 29 years']\", \"PROJECT['percent of #REF', '#3']\", \"PROJECT['difference of 100 and #REF', '#4']\"]"}
{"id": "DROP_dev_history_1860_571efca3-ce0f-4fd9-b6c4-fa61553a2956", "input": "Were more people between 40 and 54 or between 20 and 34?", "output": "[\"SELECT['people']\", \"FILTER['#1', 'betweenleftside 40']\", \"FILTER['#2', 'betweenrightside 54']\", \"FILTER['#1', 'betweenleftside 20']\", \"FILTER['#4', 'betweenrightside 34']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#5']\", \"COMPARISON['max', '#6', '#7']\"]"}
{"id": "DROP_dev_history_1860_695eb057-cd16-43b6-ae10-642117235f62", "input": "How many percent of people were not between 45 and 49 years?", "output": "[\"SELECT['people']\", \"FILTER['#1', 'that were betweenleftside 45']\", \"FILTER['#2', 'that were betweenrightside 49 years']\", \"PROJECT['percent of #REF', '#3']\", \"PROJECT['difference of 100 and #REF', '#4']\"]"}
{"id": "DROP_dev_history_1860_800ecfe2-0638-4514-93b6-5d06359444ad", "input": "Which age group had the lowest percent of population in the 2010 census?", "output": "[\"SELECT['the 2010 census']\", \"PROJECT['age groups of #REF', '#1']\", \"PROJECT['percents of the population of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is the lowest']\"]"}
{"id": "DROP_dev_history_1860_9b00a7f1-c5f1-4c60-926e-d7df131b26e3", "input": "Which age ranges are tied for the fewest percentage of people?", "output": "[\"SELECT['age ranges']\", \"PROJECT['percentages of people of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is the lowest']\"]"}
{"id": "DROP_dev_history_1860_be526f40-9aef-4e30-9d4d-56a7408b3ae9", "input": "Which age group made up more of the population, between 50 and 54 years or between 60 and 64 years?", "output": "[\"SELECT['the between 50 and 54 years age group']\", \"SELECT['the between 60 and 64 years age group']\", \"PROJECT['size of #REF', '#1']\", \"PROJECT['size of #REF', '#2']\", \"COMPARISON['max', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1860_c5731b51-45c6-4c09-a491-96555eb51da0", "input": "Which age group made up less of the population, between 20 and 24 years or between 30 and 34 years?", "output": "[\"SELECT['age groups']\", \"PROJECT['population of #REF', '#1']\", \"COMPARATIVE['#2', '#1', 'is  betweenleftside 20']\", \"COMPARATIVE['#3', '#1', 'is  betweenrightside 24 years']\", \"COMPARATIVE['#2', '#1', 'is  betweenleftside 30']\", \"COMPARATIVE['#5', '#1', 'is  betweenrightside 34 years']\", \"COMPARISON['min', '#4', '#6']\"]"}
{"id": "DROP_dev_history_1860_c69e1211-2b3b-4dd1-aaea-b3a867890df1", "input": "How many people, in terms of percentage of the population, were between the ages of 5 and 29, inclusive?", "output": "[\"SELECT['people']\", \"FILTER['#1', 'that were betweenleftside the ages of 5']\", \"FILTER['#2', 'that were betweenrightside 29 , inclusive']\", \"PROJECT['percentage of the population of #REF', '#3']\"]"}
{"id": "DROP_dev_history_1863_0b4a2c76-180d-436c-948b-4cf659b39058", "input": "Were there more Latinos or English?", "output": "[\"SELECT['Latinos']\", \"SELECT['English']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"COMPARISON['max', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1863_336dc52b-b44b-4056-84f0-4a7095822c50", "input": "Were there fewer German or fewer English people?", "output": "[\"SELECT['people']\", \"FILTER['#1', 'that Were German']\", \"FILTER['#1', 'that Were English']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"COMPARISON['min', '#4', '#5']\"]"}
{"id": "DROP_dev_history_1863_6c84f466-8e32-45a6-86cd-d27f1d7a5da5", "input": "How many more English people were there than Germans?", "output": "[\"SELECT['English people']\", \"SELECT['German people']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1863_743b38c0-1e3b-4277-8c6a-86612a4544e7", "input": "What was the smallest racial population?", "output": "[\"SELECT['racial populations']\", \"AGGREGATE['min', '#1']\"]"}
{"id": "DROP_dev_history_1863_8b9e9d5f-84d2-468b-8662-67380b9504db", "input": "Were there more Native Americans or Pacific Islanders?", "output": "[\"SELECT['Native Americans']\", \"SELECT['Pacific Islanders']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"COMPARISON['max', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1863_b73c649b-7d9e-433b-8ac0-c91de4b48a6c", "input": "How many people, in terms of percentage, were not solely White or solely African American?", "output": "[\"SELECT['people']\", \"FILTER['#1', 'that were solely White']\", \"FILTER['#1', 'that were solely African American']\", \"UNION['#2', '#3']\", \"PROJECT['percentage of #REF', '#4']\", \"PROJECT['difference of 100 and #REF', '#5']\"]"}
{"id": "DROP_dev_history_1863_cf5d2f0e-c7cb-4a04-bf33-ecebdabc9791", "input": "Which group from the census is larger: Irish or danish?", "output": "[\"SELECT['the census']\", \"PROJECT['the Irish group of #REF', '#1']\", \"PROJECT['the danish group of #REF', '#1']\", \"PROJECT['size of #REF', '#2']\", \"PROJECT['size of #REF', '#3']\", \"COMPARISON['max', '#4', '#5']\"]"}
{"id": "DROP_dev_history_1863_fa270863-ed38-4f5b-a7ff-323a0d01634e", "input": "What was the largest racial population?", "output": "[\"SELECT['racial populations']\", \"AGGREGATE['max', '#1']\"]"}
{"id": "DROP_dev_history_187_5e325403-9c54-48ed-88fd-2b3d8c26baf1", "input": "How many days were there between the two unsuccessful attacks?", "output": "[\"SELECT['unsuccessful attacks']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['days between #REF', '#2']\"]"}
{"id": "DROP_dev_history_187_8ef593fa-df19-4643-bef5-5ffbf27ec248", "input": "What happened first: Russians blocked Azov or Treaty of Constantinople?", "output": "[\"SELECT['the Russians blocked Azov']\", \"SELECT['the Treaty of Constantinople']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"COMPARISON['min', '#3', '#4']\"]"}
{"id": "DROP_dev_history_187_a7e50fe9-5635-438b-9d31-207ea023a9fc", "input": "Which year the Ottoman garrison of the fortress was 3,656, of whom 2,272 were Janissaries?", "output": "[\"SELECT['the Ottoman garrison of the fortress was 3 , 656 , of whom 2 , 272 were Janissaries']\", \"PROJECT['year of #REF', '#1']\"]"}
{"id": "DROP_dev_history_1876_3af77762-24fc-4ec4-a88a-e40a3e109c63", "input": "How many more percentage does Indonesia exports account for than Malaysia?", "output": "[\"SELECT['Indonesia']\", \"SELECT['Malaysia']\", \"PROJECT['percentage of exports of #REF', '#1']\", \"PROJECT['percentage of exports of #REF', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1876_57091132-57ad-4c32-9766-29ae8155ba6c", "input": "How many more percent does Indonesia export compared to Malaysia?", "output": "[\"SELECT['Indonesia']\", \"SELECT['Malaysia']\", \"PROJECT['exports of #REF', '#1']\", \"PROJECT['exports of #REF', '#2']\", \"PROJECT['percent of #REF', '#3']\", \"PROJECT['percent of #REF', '#4']\", \"ARITHMETIC['difference', '#5', '#6']\"]"}
{"id": "DROP_dev_history_1876_6336b16a-de5d-4be1-b17c-37f7a1a9b51f", "input": "What is the largest percentage of palm oil in Thailand production: world total orglobal exports?", "output": "[\"SELECT['Thailand']\", \"PROJECT['production of palm oil of #REF', '#1']\", \"AGGREGATE['sum', '#2']\", \"PROJECT['percentage of global exports of #REF', '#2']\", \"COMPARISON['max', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1876_804a2dfb-c112-4d68-b252-fc1985eb2a02", "input": "How many percent more world export does Indonesia contribute than Malaysian?", "output": "[\"SELECT['Indonesia']\", \"SELECT['Malaysian']\", \"PROJECT['percent of world exports of #REF', '#1']\", \"PROJECT['percent of world exports of #REF', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1876_a0e4aa81-3902-487b-a6c1-7f406a15aa27", "input": "What percent of crude palm oil produced in Thailand is not consumed locally?", "output": "[\"SELECT['Thailand']\", \"PROJECT['crude palm oil produced of #REF', '#1']\", \"FILTER['#2', 'that is consumed locally']\", \"PROJECT['percent of #REF', '#3']\", \"PROJECT['the difference of 100 percent and #REF', '#4']\"]"}
{"id": "DROP_dev_history_1876_b57e81aa-4a21-4af3-9659-fe5172667a5b", "input": "About how many percent of palm plantations and extraction mills are in northern Thailand?", "output": "[\"SELECT['northern Thailand']\", \"PROJECT['palm plantations that are in #REF', '#1']\", \"PROJECT['extraction mills that are in #REF', '#1']\", \"PROJECT['percent of #REF', '#2']\", \"PROJECT['percent of #REF', '#3']\", \"UNION['#4', '#5']\"]"}
{"id": "DROP_dev_history_1876_bba91abe-f66a-4458-a97f-e980c1b5a41f", "input": "Which two countries produce more crude palm oil than Thailand?", "output": "[\"SELECT['Thailand']\", \"SELECT['countries']\", \"DISCARD['#2', '#1']\", \"PROJECT['crude palm oil produced of #REF', '#1']\", \"PROJECT['crude palm oil produced of #REF', '#3']\", \"PROJECT['size of #REF', '#4']\", \"PROJECT['size of #REF', '#5']\", \"COMPARATIVE['#3', '#7', 'is higher than #6']\"]"}
{"id": "DROP_dev_history_1884_02254a93-0cac-4576-b192-5d46b9b683e9", "input": "How many races each made up less than 1% of the population?", "output": "[\"SELECT['races']\", \"PROJECT['%S of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'lower than 1']\"]"}
{"id": "DROP_dev_history_1884_15e84b63-4fcb-4c0b-a7de-d1a130fce77d", "input": "As of the 2000 census, how many percent of people gave their ancestry origins as German?", "output": "[\"SELECT['the 2000 census']\", \"PROJECT['people of #REF', '#1']\", \"FILTER['#2', 'that gave their ancestry origins as German']\", \"PROJECT['percent of #REF', '#3']\"]"}
{"id": "DROP_dev_history_1884_406685dc-6400-41e3-a670-62cadb596ccc", "input": "How many percent more people were in the largest ancestry group compared to the smallest?", "output": "[\"SELECT['ancestry groups']\", \"PROJECT['percents of #REF', '#1']\", \"AGGREGATE['max', '#2']\", \"AGGREGATE['min', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1884_4281c95b-f8a9-4adc-aefb-d31ca0b7748c", "input": "How many more people did the 2000 census show compared to housing units?", "output": "[\"SELECT['the 2000 census']\", \"PROJECT['people of #REF', '#1']\", \"PROJECT['housing units of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"ARITHMETIC['difference', '#4', '#5']\"]"}
{"id": "DROP_dev_history_1884_4afc0f35-644f-4d18-a2e7-aee75bb9dd38", "input": "How many from the census is fewer: Germans or English?", "output": "[\"SELECT['the census']\", \"PROJECT['Germans of #REF', '#1']\", \"PROJECT['English of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"COMPARISON['min', '#4', '#5']\"]"}
{"id": "DROP_dev_history_1884_61b15cc4-a284-4504-9858-45f1cf40c1fa", "input": "How many from the census is bigger: Germans or English?", "output": "[\"SELECT['the census']\", \"PROJECT['Germans of #REF', '#1']\", \"PROJECT['English of #REF', '#2']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"COMPARISON['max', '#4', '#5']\"]"}
{"id": "DROP_dev_history_1884_7944e5b2-d3c2-4eaf-9a58-91fef27335e7", "input": "How many percent were not  english?", "output": "[\"SELECT['percent']\", \"FILTER['#1', 'that were english']\", \"PROJECT['difference of 100 and #REF', '#2']\"]"}
{"id": "DROP_dev_history_1884_79cca8c7-6300-42d8-a594-6757ee3d19b0", "input": "How many percent of the population gave their ancestral origins as something other than German in the 2000 census?", "output": "[\"SELECT['the population']\", \"PROJECT['ancestral origins that #REF gave', '#1']\", \"FILTER['#2', 'in the 2000 census']\", \"FILTER['#3', 'that was German']\", \"PROJECT['percent of #REF', '#4']\", \"PROJECT['difference of 100 and #REF', '#5']\"]"}
{"id": "DROP_dev_history_1884_e540afbb-4596-4e5d-a73c-f67e38902a61", "input": "Which group from the census is larger: English or Irish?", "output": "[\"SELECT['the census']\", \"PROJECT['the English group of #REF', '#1']\", \"PROJECT['the Irish group of #REF', '#1']\", \"PROJECT['size of #REF', '#2']\", \"PROJECT['size of #REF', '#3']\", \"COMPARISON['max', '#4', '#5']\"]"}
{"id": "DROP_dev_history_1887_00329d90-40db-480e-ab33-02db7fdb3b22", "input": "Which group is larger that resided in the county according to the 2000 census: people or families?", "output": "[\"SELECT['county']\", \"PROJECT['people that resided in #REF', '#1']\", \"PROJECT['families that resided in #REF', '#1']\", \"FILTER['#2', 'in the 2000 census']\", \"FILTER['#3', 'in the 2000 census']\", \"AGGREGATE['count', '#4']\", \"AGGREGATE['count', '#5']\", \"COMPARISON['max', '#6', '#7']\"]"}
{"id": "DROP_dev_history_1887_1c767649-4207-43e4-a18e-7120a4b3c9c4", "input": "Which group is bigger that resided in the county according to the 2000 census: households or families?", "output": "[\"SELECT['the county']\", \"PROJECT['groups resided in #REF', '#1']\", \"FILTER['#2', 'according to the 2000 census']\", \"PROJECT['size of #REF', '#3']\", \"COMPARATIVE['#4', '#2', 'is households']\", \"COMPARATIVE['#4', '#2', 'is families']\", \"COMPARISON['max', '#5', '#6']\"]"}
{"id": "DROP_dev_history_1887_2c8d3d0c-23eb-4d15-9c66-0e9567f1e58b", "input": "Which group is smaller that resided in the county according to the 2000 census: people or households?", "output": "[\"SELECT['county']\", \"PROJECT['people that resided in #REF', '#1']\", \"PROJECT['households that resided in #REF', '#1']\", \"FILTER['#2', 'in 2000']\", \"FILTER['#3', 'in 2000']\", \"AGGREGATE['count', '#4']\", \"AGGREGATE['count', '#5']\", \"COMPARISON['min', '#6', '#7']\"]"}
{"id": "DROP_dev_history_1887_5d675568-f500-40ba-a4ea-feef0a9d3504", "input": "How many more people than families resided in the county according to the 2000 census?", "output": "[\"SELECT['the county']\", \"PROJECT['people resided in #REF', '#1']\", \"PROJECT['families resided in #REF', '#1']\", \"FILTER['#2', 'according to the 2000 census']\", \"FILTER['#3', 'according to the 2000 census']\", \"AGGREGATE['count', '#4']\", \"AGGREGATE['count', '#5']\", \"ARITHMETIC['difference', '#6', '#7']\"]"}
{"id": "DROP_dev_history_1887_9458ecb9-02be-456c-b126-c5616f3af4d4", "input": "How many more households than families residing in the county?", "output": "[\"SELECT['the county']\", \"PROJECT['households of #REF', '#1']\", \"PROJECT['families of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"ARITHMETIC['difference', '#4', '#5']\"]"}
{"id": "DROP_dev_history_1891_49ea18fc-c09b-437f-a805-2aea644535bc", "input": "How many people are there per 4 square miles?", "output": "[\"SELECT['people']\", \"FILTER['#1', 'per 4 square miles']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_history_1891_52e7a14a-4600-4fe9-a018-523345c9046a", "input": "Were there more African Americans or Native Americans in Huntington Beach?", "output": "[\"SELECT['Huntington Beach']\", \"PROJECT['African Americans of #REF', '#1']\", \"PROJECT['Native Americans of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"COMPARISON['max', '#4', '#5']\"]"}
{"id": "DROP_dev_history_1891_7498a273-b510-41e3-89dd-12ac52e60cb1", "input": "Which group in percent of Huntington Beach from the 2010 United States Census is larger: African American or Native American?", "output": "[\"SELECT['Huntington Beach']\", \"FILTER['#1', 'that is in the 2010 United States Census']\", \"PROJECT['African American of #REF', '#2']\", \"PROJECT['Native American of #REF', '#2']\", \"PROJECT['percent of #REF', '#3']\", \"PROJECT['percent of #REF', '#4']\", \"COMPARISON['max', '#5', '#6']\"]"}
{"id": "DROP_dev_history_1891_7bece337-96ad-4fdd-a599-8ed46bde99b5", "input": "How many people are there per 10 square miles?", "output": "[\"SELECT['people there are per 10 square miles']\"]"}
{"id": "DROP_dev_history_1891_845ae939-f240-4e06-8cc9-fb9724e5fcbf", "input": "How many more non-hispanic whites were reported by percent in 1970 compared to 2010?", "output": "[\"SELECT['non-hispanic whites']\", \"FILTER['#1', 'in 1970']\", \"FILTER['#1', 'in 2010']\", \"PROJECT['percent of #REF', '#2']\", \"PROJECT['percent of #REF', '#3']\", \"ARITHMETIC['difference', '#4', '#5']\"]"}
{"id": "DROP_dev_history_1891_8f493902-c60a-43fb-a48e-4092afa894c7", "input": "Were there more African Americans or Native Americans in Huntington Beach in 2010?", "output": "[\"SELECT['Huntington Beach']\", \"PROJECT['African Americans in 2010 of #REF', '#1']\", \"PROJECT['Native Americans in 2010 of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"COMPARISON['max', '#4', '#5']\"]"}
{"id": "DROP_dev_history_1891_b057b298-4f02-4952-a5c2-2bb543443d80", "input": "Were more people in Huntington Beach in 2010 Native American or African American?", "output": "[\"SELECT['Huntington Beach']\", \"PROJECT['people of #REF', '#1']\", \"FILTER['#2', 'in 2010']\", \"FILTER['#3', 'that Were Native American']\", \"FILTER['#3', 'that Were African American']\", \"AGGREGATE['count', '#4']\", \"AGGREGATE['count', '#4']\", \"COMPARISON['max', '#6', '#7']\"]"}
{"id": "DROP_dev_history_1891_c8b0e443-f866-47cd-af2b-f2e969d5f7c1", "input": "How many more Asian people were there compared to Native American people in 2010?", "output": "[\"SELECT['Asian people']\", \"FILTER['#1', 'in 2010']\", \"SELECT['Native American people']\", \"FILTER['#3', 'in 2010']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['difference', '#5', '#6']\"]"}
{"id": "DROP_dev_history_1891_cee22a81-5513-44b3-a3e9-8973d8a191d3", "input": "How many more White people were there compared to African American people in 2010?", "output": "[\"SELECT['White people']\", \"SELECT['African American people']\", \"FILTER['#1', 'in 2010']\", \"FILTER['#2', 'in 2010']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['difference', '#5', '#6']\"]"}
{"id": "DROP_dev_history_1892_60de0e6e-4f2a-4522-850e-e5d83555e7cb", "input": "How many percent were not POSSLQ?", "output": "[\"SELECT['those that were POSSLQ']\", \"PROJECT['percent of #REF', '#1']\", \"PROJECT['the difference of 100 percent and #REF', '#2']\"]"}
{"id": "DROP_dev_history_1892_8c2c294d-c471-4da0-9631-ecc13b6b4ebd", "input": "How many percent are not made up of individuals?", "output": "[\"SELECT['individuals']\", \"PROJECT['percent of #REF', '#1']\", \"PROJECT['difference of 100 and #REF', '#2']\"]"}
{"id": "DROP_dev_history_1892_9556e1aa-cf1e-49f2-97e3-08a4b40eb769", "input": "Where there more households with POSSLQ or those with same-sex partnerships?", "output": "[\"SELECT['households']\", \"FILTER['#1', 'with POSSLQ']\", \"FILTER['#1', 'with same-sex partnerships']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"COMPARISON['max', '#4', '#5']\"]"}
{"id": "DROP_dev_history_1892_ec48ffdd-f2c8-4c2b-9098-11264d5f614f", "input": "How many percent are not same-sex partnerships?", "output": "[\"SELECT['same-sex partnerships']\", \"PROJECT['percent of #REF', '#1']\", \"PROJECT['difference of 100 and #REF', '#2']\"]"}
{"id": "DROP_dev_history_1898_421eb770-cd50-489c-9c1c-f10688c05c3b", "input": "How many percent higher was the average family size compared to the average household size?", "output": "[\"SELECT['families']\", \"SELECT['households']\", \"PROJECT['sizes of #REF', '#1']\", \"PROJECT['sizes of #REF', '#2']\", \"AGGREGATE['avg', '#3']\", \"AGGREGATE['avg', '#4']\", \"ARITHMETIC['division', '#5', '#6']\", \"PROJECT['the difference of #REF and one', '#7']\", \"PROJECT['the multiplication of #REF and 100', '#8']\"]"}
{"id": "DROP_dev_history_1898_46797771-d143-47ee-afd0-a6d34f2c6344", "input": "Which household had the smallest percentage?", "output": "[\"SELECT['households']\", \"PROJECT['percentages of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is the lowest']\"]"}
{"id": "DROP_dev_history_1898_5059fb01-82d8-4c7f-a3aa-120391f5497e", "input": "How many more was the average household size than the family size?", "output": "[\"SELECT['households']\", \"SELECT['families']\", \"PROJECT['sizes of #REF', '#1']\", \"PROJECT['sizes of #REF', '#2']\", \"AGGREGATE['avg', '#3']\", \"AGGREGATE['avg', '#4']\", \"ARITHMETIC['difference', '#5', '#6']\"]"}
{"id": "DROP_dev_history_1898_505ee78a-8aa7-489d-b9c9-3fe72ec96d74", "input": "How many more, in percentage, were households were non-families than were Marriage living together?", "output": "[\"SELECT['households']\", \"FILTER['#1', 'that were non-families']\", \"FILTER['#1', 'that were Marriage living together']\", \"PROJECT['percentage of #REF', '#2']\", \"PROJECT['percentage of #REF', '#3']\", \"ARITHMETIC['difference', '#4', '#5']\"]"}
{"id": "DROP_dev_history_1898_8b859eea-bf2c-4c53-ab6d-c914a42a13c1", "input": "How many more households had a female householder with no husband present compared to a  male householder with no wife present?", "output": "[\"SELECT['households']\", \"FILTER['#1', 'that had a female householder with no husband present']\", \"FILTER['#1', 'that had a male householder with no wife present']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"ARITHMETIC['difference', '#4', '#5']\"]"}
{"id": "DROP_dev_history_1898_97ab0422-ecbc-4c1a-8d9c-51c951fc16da", "input": "How many more, in percentage, were households made up of were Marriage living together than had children under the age of 18 living with them?", "output": "[\"SELECT['households']\", \"FILTER['#1', 'that were made up of Marriage living together']\", \"FILTER['#1', 'that had children under the age of 18 living with them']\", \"PROJECT['percentage of #REF', '#2']\", \"PROJECT['percentage of #REF', '#3']\", \"ARITHMETIC['difference', '#4', '#5']\"]"}
{"id": "DROP_dev_history_1898_e0983665-cd56-44c6-91ca-895db0fd057c", "input": "Which household had the largest percentage, female householder or male householder?", "output": "[\"SELECT['households']\", \"FILTER['#1', 'with a female householder']\", \"FILTER['#1', 'with a male householder']\", \"PROJECT['percentage of #REF', '#2']\", \"PROJECT['percentage of #REF', '#3']\", \"COMPARISON['max', '#4', '#5']\"]"}
{"id": "DROP_dev_history_1907_2e5f562d-7c22-4b82-9532-2cd8e7b68ca6", "input": "For how many years did Alan Sugar own the majority of the club?", "output": "[\"SELECT['Alan Sugar own the majority of the club']\", \"PROJECT['years of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_history_1907_70eca194-eea5-40de-af70-530e194d44ba", "input": "As of 2002, who was the major shareholder of Tottenham Hotspur Football and Athletic Company?", "output": "[\"SELECT['Tottenham Hotspur Football and Athletic Company']\", \"PROJECT['major shareholder of #REF', '#1']\", \"FILTER['#2', 'As of 2002']\"]"}
{"id": "DROP_dev_history_1928_107a4dce-b052-4cae-a2ad-d018ece621c2", "input": "How many points did the Spurs win Game 1 by?", "output": "[\"SELECT['the Spurs']\", \"PROJECT['points win Game 1 by of #REF', '#1']\"]"}
{"id": "DROP_dev_history_1928_536b6a83-8b69-4907-93af-68f70367ed78", "input": "How many points did the Mavericks win by?", "output": "[\"SELECT['the Mavericks']\", \"PROJECT['points win by of #REF', '#1']\"]"}
{"id": "DROP_dev_history_1928_7532375f-2733-438b-9c0b-5ed6b89eeeb8", "input": "How many more points did the Mavericks score against Phoenix to win the eighth playoff spot?", "output": "[\"SELECT['the Mavericks']\", \"SELECT['Phoenix']\", \"PROJECT['points scored of #REF', '#1']\", \"PROJECT['points scored of #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['difference', '#5', '#6']\"]"}
{"id": "DROP_dev_history_1928_8e3b3e4c-6cdc-4b1b-8aa9-804b8b4fd1c4", "input": "How many total points were scored for both teams in games 6 and 7 combined?", "output": "[\"SELECT['teams']\", \"PROJECT['points scored of #REF', '#1']\", \"FILTER['#2', 'in game 6']\", \"FILTER['#2', 'in game 7']\", \"GROUP['count', '#3', '#1']\", \"GROUP['count', '#4', '#1']\", \"AGGREGATE['sum', '#5']\", \"AGGREGATE['sum', '#6']\", \"ARITHMETIC['sum', '#7', '#8']\"]"}
{"id": "DROP_dev_history_1928_de7cb89a-1809-451c-8cd9-78ef5fe8d298", "input": "Which game had the highest combined score between both teams?", "output": "[\"SELECT['teams']\", \"PROJECT['scores of #REF', '#1']\", \"SELECT['games']\", \"GROUP['sum', '#2', '#3']\", \"SUPERLATIVE['max', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1928_f92e86c1-130f-4a6c-877d-8be42bbb2c93", "input": "How many more points were scored by both teams combined in game 6 compared to game 1?", "output": "[\"SELECT['both teams']\", \"PROJECT['points of #REF', '#1']\", \"PROJECT['games of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is game 6']\", \"COMPARATIVE['#2', '#3', 'is game 1']\", \"AGGREGATE['sum', '#4']\", \"AGGREGATE['sum', '#5']\", \"ARITHMETIC['sum', '#6', '#7']\"]"}
{"id": "DROP_dev_history_1935_55a3faa7-3a8e-464d-80ba-3c38356e255e", "input": "Was there a bigger percentage of people married living together or a female householder with no husband present?", "output": "[\"SELECT['people married living together']\", \"SELECT['female householders with no husband present']\", \"PROJECT['percentage of #REF', '#1']\", \"PROJECT['percentage of #REF', '#2']\", \"COMPARISON['max', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1935_72993c31-5d42-4d25-a1e2-2814b3e8bc8b", "input": "How many in percent of households were a Married not living together?", "output": "[\"SELECT['households']\", \"FILTER['#1', 'that were Married living together']\", \"PROJECT['percent of #REF', '#2']\", \"PROJECT['the difference of 100 percent and #REF', '#3']\"]"}
{"id": "DROP_dev_history_1935_896f45f9-63d0-4795-8046-c6e934b2221f", "input": "Which was greater, the average household size or the average family size?", "output": "[\"SELECT['households']\", \"PROJECT['sizes of #REF', '#1']\", \"AGGREGATE['avg', '#2']\", \"SELECT['families']\", \"PROJECT['sizes of #REF', '#4']\", \"AGGREGATE['avg', '#5']\", \"COMPARISON['max', '#3', '#6']\"]"}
{"id": "DROP_dev_history_1935_abeebbf2-bf81-47bb-940f-7317ff58b8a3", "input": "How many percent were not females 65 or older living alone?", "output": "[\"SELECT['females']\", \"FILTER['#1', 'that were 65 or older living alone']\", \"PROJECT['percent of the population of #REF', '#2']\", \"PROJECT['the difference of 100 percent and #REF', '#3']\"]"}
{"id": "DROP_dev_history_1935_bf12abdc-0a53-4a6f-ada5-158af4206ea2", "input": "How many percent of households were not people living by themselves?", "output": "[\"SELECT['households']\", \"FILTER['#1', 'that were people living by themselves']\", \"PROJECT['percent of #REF', '#2']\", \"PROJECT['difference of 100 and #REF', '#3']\"]"}
{"id": "DROP_dev_history_1935_ca0e966d-3e0d-43f8-8991-9c544b300c89", "input": "Which group for households is smaller: average household size or average family size?", "output": "[\"SELECT['household']\", \"SELECT['family']\", \"PROJECT['size of #REF', '#1']\", \"GROUP['avg', '#3', '#1']\", \"PROJECT['size of #REF', '#2']\", \"GROUP['avg', '#5', '#2']\", \"COMPARISON['min', '#4', '#6']\"]"}
{"id": "DROP_dev_history_1935_ec91e815-70ef-4614-8c12-7c3ac580f1d2", "input": "How many percent do not have children under the age of 18 living with them?", "output": "[\"SELECT['those with children under the age of 18 living with them']\", \"PROJECT['percent of #REF', '#1']\", \"PROJECT['the difference of 100 percent and #REF', '#2']\"]"}
{"id": "DROP_dev_history_1940_4c1b0cdf-242a-4d51-a71e-20730bbf23c6", "input": "How many in percent in the county from the census of 2000 weren't polish?", "output": "[\"SELECT['the census of 2000']\", \"PROJECT['population in the county that were polish of #REF', '#1']\", \"PROJECT['percent of #REF', '#2']\", \"PROJECT['the difference of 100 percent and #REF', '#3']\"]"}
{"id": "DROP_dev_history_1940_69fd9e90-4fc6-4908-8c99-ac7ba902f577", "input": "Which ancestral groups are smaller than 7%?", "output": "[\"SELECT['ancestral groups']\", \"PROJECT['%S of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is lower than 7 %']\"]"}
{"id": "DROP_dev_history_1940_db48d681-a10b-499b-9729-717ca31a6fc2", "input": "Which group in percent in the county from the census of 2000 is larger: English or Irish?", "output": "[\"SELECT['the census of 2000']\", \"PROJECT['the English group of #REF', '#1']\", \"PROJECT['the Irish group of #REF', '#1']\", \"PROJECT['percent of #REF', '#2']\", \"PROJECT['percent of #REF', '#3']\", \"COMPARISON['max', '#4', '#5']\"]"}
{"id": "DROP_dev_history_1940_db6cc06e-0c2a-42f0-be9b-3ef19473fb26", "input": "Which groups are at least 30000 in size?", "output": "[\"SELECT['groups']\", \"PROJECT['size of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is at least 30000']\"]"}
{"id": "DROP_dev_history_1940_e5186d1f-b011-48ed-a61d-8e79b0fdee5e", "input": "How many in percent in the county from the census of 2000 weren't Irish?", "output": "[\"SELECT['the 2000 census of the county']\", \"PROJECT['those that were Irish of #REF', '#1']\", \"PROJECT['percent of #REF', '#2']\", \"PROJECT['the difference of 100 percent and #REF', '#3']\"]"}
{"id": "DROP_dev_history_1940_e65b0134-f327-4951-9a64-19073ff8e255", "input": "Which group in percent in the county from the census of 2000 is smaller: polish or French?", "output": "[\"SELECT['the county']\", \"PROJECT['groups in #REF', '#1']\", \"PROJECT['percents of #REF', '#2']\", \"FILTER['#3', 'from the census of 2000']\", \"COMPARATIVE['#3', '#2', 'is polish']\", \"COMPARATIVE['#3', '#2', 'is French']\", \"COMPARISON['min', '#5', '#6']\"]"}
{"id": "DROP_dev_history_1943_7389c938-e099-4879-a679-a7fa63af6443", "input": "How many people and families resided in the county according to the census of 2010?", "output": "[\"SELECT['the 2010 census of the county']\", \"PROJECT['people of #REF', '#1']\", \"PROJECT['families of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"ARITHMETIC['sum', '#4', '#5']\"]"}
{"id": "DROP_dev_history_1945_3c054bdf-c0da-4a26-9d04-48d0f98ecb25", "input": "How many countries had a lower relative poverty rate in the OECD compared to Denmark?", "output": "[\"SELECT['Denmark']\", \"PROJECT['relative poverty rate of #REF', '#1']\", \"SELECT['the OECD']\", \"PROJECT['countries of #REF', '#3']\", \"PROJECT['relative poverty rates of #REF', '#4']\", \"COMPARATIVE['#4', '#5', 'is lower than #2']\", \"AGGREGATE['count', '#6']\"]"}
{"id": "DROP_dev_history_1948_8cb2008f-f407-41c4-9eb6-1e796bcb4278", "input": "How many percent of the population did not reported speaking Spanish language at home?", "output": "[\"SELECT['the population']\", \"FILTER['#1', 'that reported speaking Spanish language at home']\", \"PROJECT['percent of #REF', '#2']\", \"PROJECT['difference of 100 and #REF', '#3']\"]"}
{"id": "DROP_dev_history_1952_11e729d2-b86a-4ca0-a20a-cf29c818d6bd", "input": "Where there more households or families in the county?", "output": "[\"SELECT['the county']\", \"PROJECT['households of #REF', '#1']\", \"PROJECT['families of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"COMPARISON['max', '#4', '#5']\"]"}
{"id": "DROP_dev_history_1952_4466a59e-aa3d-438a-97a3-80b696a7ea58", "input": "which has less, housing units or families?", "output": "[\"SELECT['housing units']\", \"SELECT['families']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"COMPARISON['min', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1952_8907fa34-5ac1-425c-9a66-b412387f8ac9", "input": "which has more, housing units or households?", "output": "[\"SELECT['housing units']\", \"SELECT['households']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"COMPARISON['max', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1952_c3f51c8f-ecbd-40d3-8e10-d4d661153d6f", "input": "Which group is larger for the county according to the census: people or families?", "output": "[\"SELECT['the census of the county']\", \"PROJECT['people of #REF', '#1']\", \"PROJECT['families of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"COMPARISON['max', '#4', '#5']\"]"}
{"id": "DROP_dev_history_1952_df815d37-6c81-4e24-aa13-8a41cfce522c", "input": "How many more people than housing units were there in the county?", "output": "[\"SELECT['the county']\", \"PROJECT['people of #REF', '#1']\", \"PROJECT['housing units of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"ARITHMETIC['difference', '#4', '#5']\"]"}
{"id": "DROP_dev_history_1954_2c054bf0-1177-4f44-865c-a6e02d20494e", "input": "How many more people, in terms of percentage, were in the two biggest racial groups combined compared to the two smallest groups combined?", "output": "[\"SELECT['racial groups']\", \"PROJECT['percentages of #REF', '#1']\", \"AGGREGATE['max', '#2']\", \"AGGREGATE['min', '#2']\", \"AGGREGATE['sum', '#3']\", \"AGGREGATE['sum', '#4']\", \"ARITHMETIC['difference', '#5', '#6']\"]"}
{"id": "DROP_dev_history_1954_614c91bb-fc11-4a34-a9e4-cc6a2b4cc439", "input": "As of the 2000 census, which race had a larger population, Asian or white?", "output": "[\"SELECT['the 2000 census']\", \"PROJECT['the Asian race of #REF', '#1']\", \"PROJECT['the white race of #REF', '#1']\", \"PROJECT['population of #REF', '#2']\", \"PROJECT['population of #REF', '#3']\", \"COMPARISON['max', '#4', '#5']\"]"}
{"id": "DROP_dev_history_1954_7af25553-830e-4dc5-a406-5031ecc79150", "input": "How many people, in terms of percentage, were not either White or Asian?", "output": "[\"SELECT['White people']\", \"SELECT['Asian people']\", \"PROJECT['percentage of #REF', '#1']\", \"PROJECT['percentage of #REF', '#2']\", \"ARITHMETIC['sum', '#3', '#4']\", \"PROJECT['difference of 100 and #REF', '#5']\"]"}
{"id": "DROP_dev_history_1954_85c735e2-84ba-4b2e-8ce0-eeae594f107f", "input": "As of the 2000 census, which race had a larger population, Pacific Islander or African American?", "output": "[\"SELECT['the 2000 census']\", \"PROJECT['the Pacific Islander race of #REF', '#1']\", \"PROJECT['the African American race of #REF', '#1']\", \"PROJECT['population of #REF', '#2']\", \"PROJECT['population of #REF', '#3']\", \"COMPARISON['max', '#4', '#5']\"]"}
{"id": "DROP_dev_history_1954_89072b95-9881-43e5-9954-3753f061e154", "input": "As of the 2000 census, which race had a larger population, Native American or Asian?", "output": "[\"SELECT['the 2000 census']\", \"PROJECT['the Native American race of #REF', '#1']\", \"PROJECT['the Asian race of #REF', '#1']\", \"PROJECT['population of #REF', '#2']\", \"PROJECT['population of #REF', '#3']\", \"COMPARISON['max', '#4', '#5']\"]"}
{"id": "DROP_dev_history_1954_c503951a-fd5d-48a9-88a5-8647d27e5841", "input": "How many more people, in terms of percentage, were White compared to Native American and African American combined?", "output": "[\"SELECT['people']\", \"FILTER['#1', 'that were White']\", \"FILTER['#1', 'that were Native American']\", \"FILTER['#1', 'that were African American']\", \"PROJECT['percentage of #REF', '#2']\", \"PROJECT['percentage of #REF', '#3']\", \"PROJECT['percentage of #REF', '#4']\", \"ARITHMETIC['sum', '#6', '#7']\", \"ARITHMETIC['difference', '#5', '#8']\"]"}
{"id": "DROP_dev_history_1954_f1f8bebc-c409-4e4f-9c1c-1accef5d39c9", "input": "How many more people, in terms of percentage, were White compared to Native American and Asian combined?", "output": "[\"SELECT['people']\", \"FILTER['#1', 'that were White']\", \"FILTER['#1', 'that were Native American']\", \"FILTER['#1', 'that were Asian']\", \"PROJECT['percentage of #REF', '#2']\", \"PROJECT['percentage of #REF', '#3']\", \"PROJECT['percentage of #REF', '#4']\", \"ARITHMETIC['sum', '#6', '#7']\", \"ARITHMETIC['difference', '#5', '#8']\"]"}
{"id": "DROP_dev_history_1959_0e7a6038-835a-458d-a6dc-f937a5e1513e", "input": "How many more people were in the second biggest racial group compared to the second smallest?", "output": "[\"SELECT['racial groups']\", \"PROJECT['people of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"AGGREGATE['max', '#3']\", \"AGGREGATE['min', '#3']\", \"ARITHMETIC['difference', '#4', '#5']\"]"}
{"id": "DROP_dev_history_1959_44b65699-cfb2-4692-93d1-8d771f004430", "input": "How many more whites are there than Asians?", "output": "[\"SELECT['whites']\", \"SELECT['Asians']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1959_611dcf50-c02d-49fe-8dc9-31406f0ee163", "input": "Which ethnic had the 4th most people?", "output": "[\"SELECT['people']\", \"PROJECT['ethnics of #REF', '#1']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is the 4th highest']\"]"}
{"id": "DROP_dev_history_1959_67d9bb8c-d6ce-4ad0-b8d8-61785b3016f5", "input": "How many more Asian people lived in Lassen County compared to Pacific Islander?", "output": "[\"SELECT['Lassen County']\", \"PROJECT['Asian people of #REF', '#1']\", \"PROJECT['Pacific Islander of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"ARITHMETIC['difference', '#4', '#5']\"]"}
{"id": "DROP_dev_history_1959_7891ede5-3a0a-4dc0-8907-1e12b794dbcc", "input": "Which group from the census is smaller: Pacific islander or African American?", "output": "[\"SELECT['census groups']\", \"FILTER['#1', 'that is Pacific islander']\", \"FILTER['#1', 'that is African American']\", \"PROJECT['size of #REF', '#2']\", \"PROJECT['size of #REF', '#3']\", \"COMPARISON['min', '#4', '#5']\"]"}
{"id": "DROP_dev_history_1959_8536a970-3850-4ad4-9626-4eab30af76e4", "input": "How many more percent of people were white than Native American?", "output": "[\"SELECT['people']\", \"FILTER['#1', 'who are white']\", \"FILTER['#1', 'who are Native American']\", \"PROJECT['percent of #REF', '#2']\", \"PROJECT['percent of #REF', '#3']\", \"ARITHMETIC['difference', '#4', '#5']\"]"}
{"id": "DROP_dev_history_1959_893dd11b-98e6-4c97-8188-e14895e9e014", "input": "How many more whites are there than Pacific Islanders?", "output": "[\"SELECT['whites']\", \"SELECT['Pacific Islanders']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1959_aebce037-f180-4dd9-9e9c-fb7908208bfa", "input": "How many more people were in the biggest racial group compared to the smallest?", "output": "[\"SELECT['racial groups']\", \"PROJECT['people of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"AGGREGATE['max', '#3']\", \"AGGREGATE['min', '#3']\", \"ARITHMETIC['difference', '#4', '#5']\"]"}
{"id": "DROP_dev_history_1959_af721dbb-7360-4929-a0c6-948ba581a32f", "input": "How many more percent of people were white than Pacific Islander?", "output": "[\"SELECT['people']\", \"FILTER['#1', 'that were white']\", \"FILTER['#1', 'that were Pacific Islander']\", \"PROJECT['percent of #REF', '#2']\", \"PROJECT['percent of #REF', '#3']\", \"ARITHMETIC['difference', '#4', '#5']\"]"}
{"id": "DROP_dev_history_1959_b510bfa4-0657-4787-9881-eb26c4411d88", "input": "How many percent of people were not Hispanic of any race?", "output": "[\"SELECT['people']\", \"FILTER['#1', 'that were Hispanic']\", \"PROJECT['percent of #REF', '#2']\", \"PROJECT['the difference of 100 percent and #REF', '#3']\"]"}
{"id": "DROP_dev_history_1959_c4236ef8-7ec8-49f8-8e1f-76f1344202cd", "input": "How many more white residents were there in Lassen County compared  African American?", "output": "[\"SELECT['Lassen County']\", \"PROJECT['white residents of #REF', '#1']\", \"PROJECT['African American residents of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"ARITHMETIC['difference', '#4', '#5']\"]"}
{"id": "DROP_dev_history_1959_caf400b2-28c5-440b-835f-d9d516c6afed", "input": "How many more whites lived in Lassen County in 2010 compared to African Americans?", "output": "[\"SELECT['Lassen County']\", \"PROJECT['whites of #REF', '#1']\", \"PROJECT['African Americans of #REF', '#1']\", \"FILTER['#2', 'in 2010']\", \"FILTER['#3', 'in 2010']\", \"AGGREGATE['count', '#4']\", \"AGGREGATE['count', '#5']\", \"ARITHMETIC['difference', '#6', '#7']\"]"}
{"id": "DROP_dev_history_1959_ce7e248f-7f42-4c06-968e-7084c60c441f", "input": "How many more Asians lived in Lassen County in 2010 compared to  Pacific Islanders?", "output": "[\"SELECT['Lassen County']\", \"PROJECT['Asians that lived in #REF', '#1']\", \"PROJECT['Pacific Islanders that lived in #REF', '#1']\", \"FILTER['#2', 'in 2010']\", \"FILTER['#3', 'in 2010']\", \"AGGREGATE['count', '#4']\", \"AGGREGATE['count', '#5']\", \"ARITHMETIC['difference', '#6', '#7']\"]"}
{"id": "DROP_dev_history_1959_d481524b-f213-482e-8c81-47adec6218ab", "input": "How many more whites are there than Native Americans?", "output": "[\"SELECT['whites']\", \"SELECT['Native Americans']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1965_d203458b-ab85-483c-b292-30e653566c75", "input": "How many more percent was predicted by the International Monetary Fund for growth in 2011 versus 2010?", "output": "[\"SELECT['the International Monetary Fund']\", \"PROJECT['growth predicted in 2011 in percent by #REF', '#1']\", \"PROJECT['growth predicted in 2010 in percent by #REF', '#1']\", \"ARITHMETIC['difference', '#2', '#3']\"]"}
{"id": "DROP_dev_history_1995_34616e58-1214-4e30-87a4-a8913c76b638", "input": "Which FA Cup season had fewer clubs entered: 2007–08 or 2008–09?", "output": "[\"SELECT['clubs']\", \"FILTER['#1', 'entered FA Cup season 2007–08']\", \"FILTER['#1', 'entered FA Cup season 2008–09']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"COMPARISON['min', '#4', '#5']\"]"}
{"id": "DROP_dev_history_1995_424e3194-e01a-4c75-b16e-22831416e23d", "input": "What season's FA cup holds the current record for most clubs participating?", "output": "[\"SELECT['FA cup']\", \"PROJECT['participating clubs of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is the highest']\", \"PROJECT['season of #REF', '#4']\"]"}
{"id": "DROP_dev_history_1995_4343d94c-b803-4768-8a13-2aaecc13cf32", "input": "Which FA Cup season had fewer clubs entered: 2004–05 or 1921–22?", "output": "[\"SELECT['the 2004–05 FA Cup season']\", \"SELECT['the 1921–22 FA Cup season']\", \"PROJECT['clubs entered of #REF', '#1']\", \"PROJECT['clubs entered of #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"COMPARISON['min', '#5', '#6']\"]"}
{"id": "DROP_dev_history_1995_67741ea6-8762-49d4-ada1-a066fc5bc8fe", "input": "Did more clubs enter the FA Cup in the 2004-05 season or the 2008-09 season?", "output": "[\"SELECT['clubs']\", \"FILTER['#1', 'that enter the FA Cup']\", \"FILTER['#2', 'in the 2004-05 season']\", \"FILTER['#2', 'in the 2008-09 season']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"COMPARISON['max', '#5', '#6']\"]"}
{"id": "DROP_dev_history_1995_6846bdee-eb04-4d99-9947-e0346c7b913c", "input": "Did more clubs enter the FA Cup in the 2004-05 season or the 1921-22 season?", "output": "[\"SELECT['the 2004-05 FA Cup season']\", \"SELECT['the 1921-22 FA Cup season']\", \"PROJECT['clubs of #REF', '#1']\", \"PROJECT['clubs of #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"COMPARISON['max', '#5', '#6']\"]"}
{"id": "DROP_dev_history_1995_77b3a4e9-ffe2-4e88-bdf9-0669ca6431af", "input": "Which seasons had the second highest number of entrants?", "output": "[\"SELECT['seasons']\", \"PROJECT['entrants of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is the second highest']\"]"}
{"id": "DROP_dev_history_1995_f91049a4-d77e-4b3c-ab06-b0e6d8b6157a", "input": "How many more clubs entered the FA Cup in the 2013-14 season compared to the 2005-06 season?", "output": "[\"SELECT['clubs']\", \"FILTER['#1', 'that entered the FA Cup']\", \"FILTER['#2', 'in the 2013-14 season']\", \"FILTER['#2', 'in the 2005-06 season']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['difference', '#5', '#6']\"]"}
{"id": "DROP_dev_history_1995_fcab0a39-12a5-4742-879c-ab796ac6651d", "input": "What season had the most clubs entered?", "output": "[\"SELECT['seasons']\", \"PROJECT['entered clubs of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is the highest']\"]"}
{"id": "DROP_dev_history_1998_1fe9ed85-656f-49a4-ae00-987ab427e97a", "input": "Where did Howe's troops go first, Staten Island or Gravesend, Brooklyn?", "output": "[\"SELECT['Howe s troops did go to Staten Island']\", \"SELECT['Howe s troops did go to Gravesend Brooklyn']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"COMPARISON['min', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1998_46f18444-8749-47b1-afae-8195138a3b85", "input": "Who had more casualties, the Patriots or the British?", "output": "[\"SELECT['the Patriots']\", \"SELECT['the British']\", \"PROJECT['casualties of #REF', '#1']\", \"PROJECT['casualties of #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"COMPARISON['max', '#5', '#6']\"]"}
{"id": "DROP_dev_history_1998_992a1196-5aef-4381-8aa7-56446ef9ca4a", "input": "How many more Patriots were casualties than British in the New York and New Jersey campaign?", "output": "[\"SELECT['the New York and New Jersey campaign']\", \"PROJECT['Patriot casualties of #REF', '#1']\", \"PROJECT['British casualties of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"ARITHMETIC['difference', '#4', '#5']\"]"}
{"id": "DROP_dev_history_1998_b142f09d-45fd-452a-9d21-f0e8ecd5d7fe", "input": "What happened first, the assembly of British forces in New York Bay, or Hows army arriving on Staten Island?", "output": "[\"SELECT['the assembly of British forces in New York Bay']\", \"SELECT['Hows army arriving on Staten Island']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"COMPARISON['min', '#3', '#4']\"]"}
{"id": "DROP_dev_history_1998_efb84d08-99d6-4754-b075-2d12c4510ddf", "input": "How many of Washington's troops were not raw recruits or militia?", "output": "[\"SELECT['Washington']\", \"PROJECT['troops of #REF', '#1']\", \"FILTER['#2', 'that were raw recruits']\", \"FILTER['#2', 'that were militia']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['sum', '#6', '#7']\", \"ARITHMETIC['difference', '#5', '#8']\"]"}
{"id": "DROP_dev_history_1998_f66ee451-7c0e-4c0e-aa6f-f054c49d9a86", "input": "How many more troops did Howe have than Washington when they arrived in New York in July?", "output": "[\"SELECT['Howe']\", \"SELECT['Washington']\", \"PROJECT['troops when they arrived in New York in July of #REF', '#1']\", \"PROJECT['troops of #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['difference', '#5', '#6']\"]"}
{"id": "DROP_dev_history_200_0def9c5e-066c-45a4-ab56-81c7c7c685f4", "input": "How many more men were part of Charles first battle compared to Charles third battle?", "output": "[\"SELECT['Charles']\", \"PROJECT['first battle of #REF', '#1']\", \"PROJECT['third battle of #REF', '#1']\", \"PROJECT['men that were part of #REF', '#2']\", \"PROJECT['men that were part of #REF', '#3']\", \"AGGREGATE['count', '#4']\", \"AGGREGATE['count', '#5']\", \"ARITHMETIC['difference', '#6', '#7']\"]"}
{"id": "DROP_dev_history_200_468a72c0-bfd0-4c02-958e-c8b2eb4f45ce", "input": "Which were there more of in the second battle, Italians or men of Languedoc?", "output": "[\"SELECT['the second battle']\", \"PROJECT['Italians in #REF', '#1']\", \"PROJECT['men of Languedoc in #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"COMPARISON['max', '#4', '#5']\"]"}
{"id": "DROP_dev_history_200_6153eb8b-88b3-40b7-9644-129f36fde149", "input": "How many men in all made up Charles' cavalry?", "output": "[\"SELECT['Charles cavalry']\", \"PROJECT['men of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_history_200_ac47eb17-6d08-488e-9f69-8d1e0d018767", "input": "How many total Italians fought from both sides?", "output": "[\"SELECT['Italians']\", \"PROJECT['sides fought from of #REF', '#1']\", \"GROUP['count', '#1', '#2']\", \"AGGREGATE['sum', '#3']\"]"}
{"id": "DROP_dev_history_2001_b1190d11-f7bf-43e0-addf-7cc9d3f3e8cc", "input": "How many years did the uprising of the Enriquillos Revolt last?", "output": "[\"SELECT['the uprising of the Enriquillos Revolt']\", \"PROJECT['years of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_history_2004_4bd0232f-ad7b-4140-b543-9bfa34d7caf5", "input": "How many points did the Astros win game four by?", "output": "[\"SELECT['the Astros']\", \"PROJECT['points win by of #REF', '#1']\", \"FILTER['#2', 'in game four']\"]"}
{"id": "DROP_dev_history_2004_52f65e5e-5c6e-4af3-9e65-fade500f9196", "input": "Which team lost the National League Division Series?", "output": "[\"SELECT['the National League Division Series']\", \"PROJECT['teams of #REF', '#1']\", \"FILTER['#2', 'that lost']\"]"}
{"id": "DROP_dev_history_2004_706150a0-dd65-4495-bb32-e378d0e31411", "input": "Which player playing in the 2005 National League Division Series was older, Julio Franco or Roger Clemens?", "output": "[\"SELECT['Julio Franco']\", \"SELECT['Roger Clemens']\", \"PROJECT['how old was #REF', '#1']\", \"PROJECT['how old was #REF', '#2']\", \"FILTER['#3', 'in 2005']\", \"FILTER['#4', 'in 2005']\", \"COMPARISON['max', '#5', '#6']\"]"}
{"id": "DROP_dev_history_2004_901721cd-3a6b-4cd3-b50b-77b58a3d1e67", "input": "Which postseason records were set during game for of the 2005 National League Division Series?", "output": "[\"SELECT['the 2005 National League Division Series']\", \"PROJECT['game for of #REF', '#1']\", \"PROJECT['postseason records of #REF', '#2']\"]"}
{"id": "DROP_dev_history_2004_bcb66440-8a81-4d5d-bba3-9a8adaf17bb0", "input": "How many years before William Y. Giles presented the league champion Astros with the Warren C. Giles Trophy did Williams father, Warren Giles, award an MLB franchise to the city of Houston?", "output": "[\"SELECT['William Y. Giles presented the league champion Astros with the Warren C. Giles Trophy']\", \"SELECT['Williams father Warren Giles award an MLB franchise to the city of Houston']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "DROP_dev_history_2004_f26e5eb2-d484-441d-965d-5dfe7e8abe05", "input": "How many more games did the Astros win against the Braves in the 2005 National League Division Series?", "output": "[\"SELECT['the 2005 National League Division Series']\", \"PROJECT['game wins of the Astros of #REF', '#1']\", \"PROJECT['game wins of the Braves of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"ARITHMETIC['difference', '#4', '#5']\"]"}
{"id": "DROP_dev_history_2011_686e10d5-95bd-4b50-b2a8-72dfe6439f2f", "input": "What year was GDP the highest?", "output": "[\"SELECT['years']\", \"PROJECT['GDP of #REF', '#1']\", \"SUPERLATIVE['max', '#1', '#2']\"]"}
{"id": "DROP_dev_history_2011_b0366cdc-0dda-4a0f-8bdf-555791cc6784", "input": "How many years was Kibaki president?", "output": "[\"SELECT['Kibaki was president']\", \"PROJECT['years of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_history_2011_b4302673-f9b9-4f8a-92e1-fd0c97a79e84", "input": "Which year had the highest GDP growth, 2008 or 2009?", "output": "[\"SELECT['years']\", \"PROJECT['GDP growth of #REF', '#1']\", \"COMPARATIVE['#2', '#1', 'is 2008']\", \"COMPARATIVE['#2', '#1', 'is 2009']\", \"COMPARISON['max', '#3', '#4']\"]"}
{"id": "DROP_dev_history_2011_d06c65cc-777e-461d-aa68-cadc9da7d890", "input": "What year was the GDP higher, 2007 or 2008?", "output": "[\"SELECT['the GDP']\", \"FILTER['#1', 'in 2007']\", \"FILTER['#1', 'in 2008']\", \"COMPARISON['max', '#2', '#3']\"]"}
{"id": "DROP_dev_history_2014_048dbf55-d585-4f99-a911-781c43e38b92", "input": "Which language as of 2011 had the fewest number of speakers?", "output": "[\"SELECT['languages']\", \"PROJECT['speakers of #REF', '#1']\", \"FILTER['#2', 'in 2011']\", \"GROUP['count', '#3', '#1']\", \"SUPERLATIVE['min', '#1', '#4']\"]"}
{"id": "DROP_dev_history_2014_1c2c47dc-4d1a-4575-b7d0-b38caef794c4", "input": "How many more percent of people spoke the most common language compared to the second most common?", "output": "[\"SELECT['languages']\", \"PROJECT['percents of #REF', '#1']\", \"AGGREGATE['max', '#2']\", \"AGGREGATE['max', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "DROP_dev_history_2014_67f5f3fe-f418-486f-9a36-6ca00451f5a0", "input": "How many in percent of people for Karnataka don't speak Telugu?", "output": "[\"SELECT['Karnataka']\", \"PROJECT['people of #REF', '#1']\", \"FILTER['#2', 'who speak Telugu']\", \"PROJECT['percent of #REF', '#3']\", \"PROJECT['difference of 100 and #REF', '#4']\"]"}
{"id": "DROP_dev_history_2014_6803b732-55bf-4412-9b4a-642f30e7cecf", "input": "How many in percent of people for Karnataka don't speak Marathi?", "output": "[\"SELECT['Karnataka']\", \"PROJECT['people of #REF', '#1']\", \"FILTER['#2', 'who speak Marathi']\", \"PROJECT['percent of #REF', '#3']\", \"PROJECT['difference of 100 and #REF', '#4']\"]"}
{"id": "DROP_dev_history_2014_6a6700c1-5b29-4450-9a93-1a55b8b7b420", "input": "Was the infant mortality rate or maternal mortality rate higher in 2007?", "output": "[\"SELECT['infant mortality rate']\", \"FILTER['#1', 'in 2007']\", \"SELECT['maternal mortality rate']\", \"FILTER['#3', 'in 2007']\", \"COMPARISON['max', '#2', '#4']\"]"}
{"id": "DROP_dev_history_2014_6c1cfa95-1413-455f-82e5-c4876bc477b1", "input": "Which language has more speakers as of 2011, Marathi or Tamil?", "output": "[\"SELECT['Marathi']\", \"PROJECT['speakers of #REF', '#1']\", \"FILTER['#2', 'in 2011']\", \"AGGREGATE['count', '#3']\", \"SELECT['Tamil']\", \"PROJECT['speakers of #REF', '#5']\", \"FILTER['#6', 'in 2011']\", \"AGGREGATE['count', '#7']\", \"COMPARISON['max', '#4', '#8']\"]"}
{"id": "DROP_dev_history_2014_6ee3f88b-2c73-43a1-9937-e2661d0ca589", "input": "Which language for the people of Karnataka is spoken less: Urdu or Telugu?", "output": "[\"SELECT['Karnataka']\", \"PROJECT['people of #REF', '#1']\", \"FILTER['#2', 'with Urdu']\", \"FILTER['#2', 'with Telugu']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"COMPARISON['min', '#5', '#6']\"]"}
{"id": "DROP_dev_history_2014_8485c372-ba02-4ddf-916b-ab8295eb92e1", "input": "How many more percent of the population as of 2011 spoke Teluugu than Tamil?", "output": "[\"SELECT['those that spoke Teluugu']\", \"SELECT['those that spoke Tamil']\", \"FILTER['#1', 'in 2011']\", \"FILTER['#2', 'in 2011']\", \"PROJECT['percent of the population of #REF', '#3']\", \"PROJECT['percent of the population of #REF', '#4']\", \"ARITHMETIC['difference', '#5', '#6']\"]"}
{"id": "DROP_dev_history_2014_b6b2a97f-f496-454f-bfb6-376847bf151c", "input": "How many people, in terms of percentage, do not speak Kannada as their native language in Karnataka?", "output": "[\"SELECT['Karnataka']\", \"PROJECT['people that speak Kannada as their native language of #REF', '#1']\", \"PROJECT['percentage of #REF', '#2']\", \"PROJECT['the difference of 100 and #REF', '#3']\"]"}
{"id": "DROP_dev_history_2014_c831f080-6d21-4243-9693-c4c50c5e077d", "input": "Which language has more speakers as of 2011, Marathi or Kodava Takk?", "output": "[\"SELECT['languages']\", \"PROJECT['speakers of #REF', '#1']\", \"FILTER['#2', 'as of 2011']\", \"FILTER['#3', 'of Marathi']\", \"FILTER['#3', 'of Kodava Takk']\", \"AGGREGATE['count', '#4']\", \"AGGREGATE['count', '#5']\", \"COMPARISON['max', '#6', '#7']\"]"}
{"id": "DROP_dev_history_2014_f19ef84d-757d-4be5-976b-1c40e2937050", "input": "Which linguistic minority is smaller, the Konkani language or Kodava Takk?", "output": "[\"SELECT['linguistic minorities']\", \"FILTER['#1', 'that is the Konkani language']\", \"FILTER['#1', 'that is Kodava Takk']\", \"PROJECT['size of #REF', '#2']\", \"PROJECT['size of #REF', '#3']\", \"COMPARISON['min', '#4', '#5']\"]"}
{"id": "DROP_dev_history_2014_f352328a-d949-40c0-acbe-88b023144f74", "input": "Which language for the people of Karnataka is spoken more: Hindi or Tulu?", "output": "[\"SELECT['Karnataka']\", \"PROJECT['people of #REF', '#1']\", \"FILTER['#2', 'that speak Hindi']\", \"FILTER['#2', 'that speak Tulu']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"COMPARISON['max', '#5', '#6']\"]"}
{"id": "DROP_dev_history_2014_f36d79dc-4298-47be-925d-412620ff8ab6", "input": "Which linguistic minority is larger, Urdu or the Telugu language?", "output": "[\"SELECT['linguistic minorities']\", \"FILTER['#1', 'that is Urdu language']\", \"FILTER['#1', 'that is Telugu language']\", \"PROJECT['size of #REF', '#2']\", \"PROJECT['size of #REF', '#3']\", \"COMPARISON['max', '#4', '#5']\"]"}
{"id": "DROP_dev_history_2021_42c8925e-7e0a-41fc-a564-f98344c609b2", "input": "How many points higher was the HDI value of Mexico City for its 2010 value than Tláhuac?", "output": "[\"SELECT['Mexico City']\", \"SELECT['Tláhuac']\", \"PROJECT['HDI values of #REF', '#1']\", \"PROJECT['HDI values of #REF', '#2']\", \"FILTER['#3', 'in 2010']\", \"FILTER['#4', 'in 2010']\", \"ARITHMETIC['difference', '#5', '#6']\"]"}
{"id": "DROP_dev_history_2021_d4ccd870-4064-4663-baaf-922b8e48c4de", "input": "How many points higher was the HDI value of Tláhuac than  rural Milpa Alta?", "output": "[\"SELECT['Tláhuac']\", \"SELECT['Milpa Alta']\", \"PROJECT['HDI value of #REF', '#1']\", \"PROJECT['HDI value of #REF', '#2']\", \"PROJECT['the points of #REF', '#3']\", \"PROJECT['the points of #REF', '#4']\", \"ARITHMETIC['difference', '#5', '#6']\"]"}
{"id": "DROP_dev_history_2044_0903294b-08fc-4061-937a-44890a55ca78", "input": "In which year were there replacement notes of the 1, 5, and 10 pesos?", "output": "[\"SELECT['the 1 , 5 and 10 pesos notes']\", \"PROJECT['the replacement notes of #REF', '#1']\", \"PROJECT['year of #REF', '#2']\"]"}
{"id": "DROP_dev_history_2044_1840100d-60a4-4b48-818a-d8133400c381", "input": "How many denominations of centavos were there in 1942?", "output": "[\"SELECT['centavos']\", \"PROJECT['denominations of #REF', '#1']\", \"FILTER['#2', 'in 1942']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_history_2044_581ced8b-43ce-4d8d-a275-2924c60957ee", "input": "How many pesos was the Mickey Mouse money created by the Japanese worth?", "output": "[\"SELECT['the Japanese']\", \"PROJECT['the Mickey Mouse money created by #REF', '#1']\", \"PROJECT['worth in pesos of #REF', '#2']\"]"}
{"id": "DROP_dev_history_2044_7c72066b-f148-4554-8b81-4d74fbe61101", "input": "Which year brought \"replacement notes\" of the 1, 5, 10 and Pesos?", "output": "[\"SELECT['the 1 , 5 , and 10 Pesos notes']\", \"PROJECT['replacement notes of #REF', '#1']\", \"PROJECT['year of #REF', '#2']\"]"}
{"id": "DROP_dev_history_2044_81d1686a-e380-44ed-a796-cafb13e12eef", "input": "What was more expensive, matches in 1944 or a kilogram of camote in 1945?", "output": "[\"SELECT['matches']\", \"SELECT['a kilogram of camote']\", \"PROJECT['price of #REF', '#1']\", \"PROJECT['price of #REF', '#2']\", \"FILTER['#3', 'in 1944']\", \"FILTER['#4', 'in 1945']\", \"COMPARISON['max', '#5', '#6']\"]"}
{"id": "DROP_dev_history_2044_b32c5736-a96f-4669-b4a1-398e7c18fdf6", "input": "How many different denominations of centavos were there in 1942?", "output": "[\"SELECT['centavos']\", \"PROJECT['denominations of #REF', '#1']\", \"FILTER['#2', 'in 1942']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_history_2044_ba507d2f-895e-4227-b78f-e7268854a71f", "input": "Which item cost the highest mickey mouse pesos in the 1940s, a kilogram of Camote or matches?", "output": "[\"SELECT['a kilogram of Camote']\", \"SELECT['a kilogram of matches']\", \"PROJECT['cost in mickey mouse pesos in the 1940s of #REF', '#1']\", \"PROJECT['cost in mickey mouse pesos in the 1940s of #REF', '#2']\", \"COMPARISON['max', '#3', '#4']\"]"}
{"id": "DROP_dev_history_2047_320989dc-498a-4df6-98f9-16362c01afc9", "input": "Which Cardinal died earlier, Pierre des Près or Petrus de Foresta?", "output": "[\"SELECT['Cardinal Pierre des Près']\", \"SELECT['Cardinal Petrus de Foresta']\", \"PROJECT['when did #REF die', '#1']\", \"PROJECT['when did #REF die', '#2']\", \"COMPARISON['min', '#3', '#4']\"]"}
{"id": "DROP_dev_history_2047_4acd12c4-6394-40a2-a929-2ea6f0a7f340", "input": "How many Cardinals died during the month of June 1361?", "output": "[\"SELECT['Cardinals']\", \"PROJECT['when did #REF die', '#1']\", \"COMPARATIVE['#1', '#2', 'is June 1361']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_history_2047_60e0ffa6-d4c1-4c26-aa08-23347dcb847c", "input": "How many of the Cardinals mentioned died in September 1361?", "output": "[\"SELECT['Cardinals mentioned']\", \"PROJECT['when did #REF die', '#1']\", \"COMPARATIVE['#1', '#2', 'is equal to September 1361']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_history_2047_a250133b-9b85-4c0b-8496-fb1fd74bb274", "input": "In which months during 1361 did only one cardinal die?", "output": "[\"SELECT['cardinals']\", \"PROJECT['months die in of #REF', '#1']\", \"FILTER['#2', 'in 1361']\", \"GROUP['count', '#1', '#3']\", \"COMPARATIVE['#3', '#4', 'is one']\"]"}
{"id": "DROP_dev_history_2047_af628589-4332-40b0-98ac-f689aae03f40", "input": "Who died first: Cardinal Guillaume Court, O.Cist. or Cardinal Petrus Bertrandi?", "output": "[\"SELECT['Cardinal Guillaume Court , O.Cist died']\", \"SELECT['Cardinal Petrus Bertrandi died']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"COMPARISON['min', '#3', '#4']\"]"}
{"id": "DROP_dev_history_2047_e4d6957c-6a40-4a9d-8457-8d8840bae491", "input": "Who died last: Cardinal Jean de Caraman or Cardinal Bernard de la Tour?", "output": "[\"SELECT['Cardinal Jean de Caraman died']\", \"SELECT['Cardinal Bernard de la Tour died']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"COMPARISON['max', '#3', '#4']\"]"}
{"id": "DROP_dev_history_2060_5dc37d3d-4702-4f94-9f77-f1145f8e2c65", "input": "How many people authored the study released in 2013?", "output": "[\"SELECT['the study released in 2013']\", \"PROJECT['people that authored #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_history_2060_9368ae36-c505-490c-a08f-0b35cb4a623d", "input": "How many points difference is the IQ range in 17-year-old black students?", "output": "[\"SELECT['17-year-old black students']\", \"PROJECT['IQ in points of #REF', '#1']\", \"AGGREGATE['max', '#2']\", \"AGGREGATE['min', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "DROP_dev_history_2060_c38c8e2c-6bca-467a-ba70-ea1bfc3e1a44", "input": "How many IQ points did the black-white IQ gap decrease between 1971 and 2008?", "output": "[\"SELECT['the black-white IQ gap']\", \"FILTER['#1', 'in 1971']\", \"FILTER['#1', 'in 2008']\", \"ARITHMETIC['difference', '#3', '#2']\"]"}
{"id": "DROP_dev_history_2060_e8c68958-e1bc-41af-961a-a03bed9cbd49", "input": "How many points did the black-white IQ gap decrease from 1971-2008?", "output": "[\"SELECT['the black-white IQ gaps in points']\", \"FILTER['#1', 'in 1971']\", \"FILTER['#1', 'in 2008']\", \"ARITHMETIC['difference', '#3', '#2']\"]"}
{"id": "DROP_dev_history_2064_1e221f63-9654-4ba4-98ed-355cca7c401b", "input": "Which three teams hold the record for 18 total wins in a season?", "output": "[\"SELECT['the record for 18 total wins in a season']\", \"PROJECT['teams of #REF', '#1']\"]"}
{"id": "DROP_dev_history_2064_36b5bbd6-a873-4bd8-92d9-287e4b0ad78e", "input": "How many times was the record for most regular season wins equaled or beat after the 49ers beat it in 1984?", "output": "[\"SELECT['the record for most regular season wins']\", \"PROJECT['times equaled or beat of #REF', '#1']\", \"FILTER['#2', 'that are after 1984']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_history_2064_62cb5db3-892a-4868-a275-6de1b975ff9d", "input": "How many points higher was the 49ers' margin of victory against the Chicago Bears compared to against the Giants?", "output": "[\"SELECT['the 49ers']\", \"PROJECT['margin of victory against the Chicago Bears in points of #REF', '#1']\", \"PROJECT['margin of victory against the Giants in points of #REF', '#1']\", \"ARITHMETIC['difference', '#2', '#3']\"]"}
{"id": "DROP_dev_history_2064_88dcc5b0-6e38-4ab7-b717-c1133a03ed8b", "input": "In the playoffs did the 49ers win by more points agains the Giants or the Bears?", "output": "[\"SELECT['the 49ers']\", \"PROJECT['points win by agains the Giants in the playoffs of #REF', '#1']\", \"PROJECT['points win by agains the Bears in the playoffs of #REF', '#1']\", \"COMPARISON['max', '#2', '#3']\"]"}
{"id": "DROP_dev_history_2064_a5e06783-4028-444f-a396-dc55677f01ba", "input": "By how many more points did the 49ers score then the New York Giants in the 1984 playoffs?", "output": "[\"SELECT['the 1984 playoffs']\", \"PROJECT['points scored of the 49ers of #REF', '#1']\", \"PROJECT['points scored of the New York Giants of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"ARITHMETIC['difference', '#4', '#5']\"]"}
{"id": "DROP_dev_history_2064_e3ee593d-095d-4373-83fe-6399c45feea9", "input": "How many more points did the 49ers score during the playoffs compared to their opponents?", "output": "[\"SELECT['the 49ers']\", \"PROJECT['points of #REF', '#1']\", \"FILTER['#2', 'during the playoffs']\", \"PROJECT['opponents of #REF', '#1']\", \"PROJECT['points of #REF', '#4']\", \"FILTER['#5', 'during the playoffs']\", \"AGGREGATE['sum', '#3']\", \"AGGREGATE['sum', '#6']\", \"ARITHMETIC['difference', '#7', '#8']\"]"}
{"id": "DROP_dev_history_2064_e4a6226f-fb4f-4c47-9e33-8cdc5f5ca1bf", "input": "How many points did the 49ers win by in the NFC championship against the Chicago Bears?", "output": "[\"SELECT['the 49ers']\", \"SELECT['the Chicago Bears']\", \"PROJECT['points of #REF', '#1']\", \"PROJECT['points of #REF', '#2']\", \"FILTER['#3', 'in the NFC championship']\", \"FILTER['#4', 'in the NFC championship']\", \"ARITHMETIC['difference', '#5', '#6']\"]"}
{"id": "DROP_dev_history_2064_f59a4f59-01ca-47e6-842a-7f91d81402c4", "input": "How many teams beat the 49ers in the 1984 season?", "output": "[\"SELECT['teams']\", \"FILTER['#1', 'that beat the 49ers']\", \"FILTER['#2', 'in the 1984 season']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_history_2064_f64b7b77-aaf2-4957-94b1-751b863a3470", "input": "Against which team in the playoffs did the 49ers have the highest margin of victory?", "output": "[\"SELECT['the 49ers']\", \"PROJECT['margins of victory in the playoffs of #REF', '#1']\", \"AGGREGATE['max', '#2']\", \"PROJECT['team of #REF', '#3']\"]"}
{"id": "DROP_dev_history_208_bafb8e5b-9a52-4d04-b0c8-bdebefccc6c2", "input": "What happened first, the Battle of Cartagena de Indias or planning the attack on La Guaira?", "output": "[\"SELECT['the Battle of Cartagena de Indias']\", \"SELECT['planning the attack of La Guaira']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"COMPARISON['min', '#3', '#4']\"]"}
{"id": "DROP_dev_history_208_f120cdb3-f93e-4a09-8eec-9a5048ec5e25", "input": "How many years passed between the Battle of Cartagena de Indias and Sir Charles Knowles sailing from Antigua?", "output": "[\"SELECT['the Battle of Cartagena de Indias']\", \"SELECT['Sir Charles Knowles sailing from Antigua']\", \"PROJECT['year of #REF', '#1']\", \"PROJECT['year of #REF', '#2']\", \"ARITHMETIC['difference', '#4', '#3']\"]"}
{"id": "DROP_dev_history_2086_009e57c9-424b-4a5e-874a-fa76d994db0a", "input": "How many touchdowns did ODonnell, Hastings, and Mills have put together?", "output": "[\"SELECT['ODonnell']\", \"SELECT['Hastings']\", \"SELECT['Mills']\", \"PROJECT['touchdowns of #REF', '#1']\", \"PROJECT['touchdowns of #REF', '#2']\", \"PROJECT['touchdowns of #REF', '#3']\", \"UNION['#4', '#5', '#6']\", \"AGGREGATE['count', '#7']\"]"}
{"id": "DROP_dev_history_2086_0495403e-60a0-40d7-835b-a1fed1270fd5", "input": "Who had the most receiving touchdowns between Yancey Thigpen, Andre Hastings, and Ernie Mills?", "output": "[\"SELECT['Yancey Thigpen']\", \"SELECT['Andre Hastings']\", \"SELECT['Ernie Mills']\", \"PROJECT['receiving touchdowns of #REF', '#1']\", \"PROJECT['receiving touchdowns of #REF', '#2']\", \"PROJECT['receiving touchdowns of #REF', '#3']\", \"AGGREGATE['count', '#4']\", \"AGGREGATE['count', '#5']\", \"AGGREGATE['count', '#6']\", \"COMPARISON['max', '#7', '#8', '#9']\"]"}
{"id": "DROP_dev_history_2086_05c535da-f368-4d63-9969-a18b7709b34a", "input": "Who had more touchdowns: Andre Hastings or Ernie Mills?", "output": "[\"SELECT['Andre Hastings']\", \"PROJECT['touchdowns of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"SELECT['Ernie Mills']\", \"PROJECT['touchdowns of #REF', '#4']\", \"AGGREGATE['count', '#5']\", \"COMPARISON['max', '#3', '#6']\"]"}
{"id": "DROP_dev_history_2086_18a23fc2-e476-42e8-be8d-de07cfa7ba24", "input": "Who scored more touchdowns,  Erric Pegram and Bam Morris, or Yancey Thigpen?", "output": "[\"SELECT['Erric Pegram']\", \"PROJECT['touchdowns of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"SELECT['Bam Morris']\", \"PROJECT['touchdowns of #REF', '#4']\", \"AGGREGATE['count', '#5']\", \"SELECT['Yancey Thigpen']\", \"PROJECT['touchdowns of #REF', '#7']\", \"AGGREGATE['count', '#8']\", \"ARITHMETIC['sum', '#3', '#6']\", \"COMPARISON['max', '#10', '#9']\"]"}
{"id": "DROP_dev_history_2086_40835a6b-afac-4b06-ba23-4a4c87261edd", "input": "How many more touchdowns did Neil ODonnell have compared to interceptions?", "output": "[\"SELECT['Neil ODonnell']\", \"PROJECT['touchdowns of #REF', '#1']\", \"PROJECT['interceptions of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"ARITHMETIC['difference', '#4', '#5']\"]"}
{"id": "DROP_dev_history_2086_74f0250f-d6f4-4744-a8a2-c750ff0823e1", "input": "How many receptions did Yancey Thigpen, Andre Hastings, and Ernie Mills have combined?", "output": "[\"SELECT['Yancey Thigpen']\", \"SELECT['Andre Hastings']\", \"SELECT['Ernie Mills']\", \"PROJECT['receptions of #REF', '#1']\", \"PROJECT['receptions of #REF', '#2']\", \"PROJECT['receptions of #REF', '#3']\", \"AGGREGATE['count', '#4']\", \"AGGREGATE['count', '#5']\", \"AGGREGATE['count', '#6']\", \"ARITHMETIC['sum', '#7', '#8']\", \"ARITHMETIC['sum', '#10', '#9']\"]"}
{"id": "DROP_dev_history_2086_925de638-cd7e-4b29-ac5c-b72836d098e4", "input": "How many yards, rounded to one decimal place, were Andre Hastings' punt returns on average?", "output": "[\"SELECT['Andre Hastings']\", \"PROJECT['punt returns of #REF', '#1']\", \"PROJECT['yards of #REF', '#2']\", \"PROJECT['rounded to one decimal place of #REF', '#3']\", \"GROUP['avg', '#4', '#3']\", \"UNION['#3', '#5']\"]"}
{"id": "DROP_dev_history_2086_ae4f0fc9-a3a6-4f96-9329-e25d16f0b15c", "input": "How many points did the Steelers lose against the Jaguars by in the expansion 1995?", "output": "[\"SELECT['the Steelers']\", \"SELECT['the Jaguars']\", \"PROJECT['points in the 1995 expansion of #REF', '#1']\", \"PROJECT['points in the 1995 expansion of #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['difference', '#6', '#5']\"]"}
{"id": "DROP_dev_history_2086_bd01ac93-f741-44d0-bc63-ea17da8d2cfe", "input": "How many passes did Neil ODonnell not complete?", "output": "[\"SELECT['Neil ODonnell']\", \"PROJECT['passes of #REF', '#1']\", \"FILTER['#2', 'that are completed']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"ARITHMETIC['difference', '#4', '#5']\"]"}
{"id": "DROP_dev_history_2086_be468264-4e73-41ca-bc45-2d0ae7bf1715", "input": "How many years in a row did Dermontti Dawson make the Pro Bowl?", "output": "[\"SELECT['Dermontti Dawson']\", \"PROJECT['years in a row that #REF make the Pro Bowl', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_history_2086_cdba8bc9-0570-4911-8553-b0660c231503", "input": "The Steelers finished their 1995 season having lost how many games difference to the number of games they had won?", "output": "[\"SELECT['the Steelers']\", \"PROJECT['games won in the 1995 season of #REF', '#1']\", \"PROJECT['games lost in the 1995 season of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"ARITHMETIC['difference', '#5', '#4']\"]"}
{"id": "DROP_dev_history_2086_ded4bc12-bfdf-4ea9-8773-09784ca3b8e1", "input": "How many receiving touchdowns did Yancey Thigpen, Andre Hastings, and Ernie Mills have combined?", "output": "[\"SELECT['receiving touchdowns']\", \"FILTER['#1', 'of Yancey Thigpen']\", \"FILTER['#1', 'of Andre Hastings']\", \"FILTER['#1', 'of Ernie Mills']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['sum', '#5', '#6', '#7']\"]"}
{"id": "DROP_dev_history_2086_e266304d-c05b-4cd2-8d30-a1aa0a16c0dd", "input": "How many games did the Steelers win in 1995?", "output": "[\"SELECT['the Steelers']\", \"PROJECT['games that #REF win', '#1']\", \"FILTER['#2', 'in 1995']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_history_2086_f3e1b60f-639c-4bc1-9486-2190e00c1e75", "input": "How many more yards did Ernie Mills get than Andre Hastings?", "output": "[\"SELECT['Ernie Mills']\", \"PROJECT['yards of #REF', '#1']\", \"AGGREGATE['sum', '#2']\", \"SELECT['Andre Hastings']\", \"PROJECT['yards of #REF', '#4']\", \"AGGREGATE['sum', '#5']\", \"ARITHMETIC['difference', '#3', '#6']\"]"}
{"id": "DROP_dev_history_2088_15aaeea0-bab7-43fd-b7a5-7086dc2a9039", "input": "Which group has a smaller percentage in Skojpe, the Serbs or the Roma?", "output": "[\"SELECT['groups in Skojpe']\", \"FILTER['#1', 'that is the Serbs']\", \"FILTER['#1', 'that is the Roma']\", \"PROJECT['percentage of #REF', '#2']\", \"PROJECT['percentage of #REF', '#3']\", \"COMPARISON['min', '#4', '#5']\"]"}
{"id": "DROP_dev_history_2088_20d30236-f998-427a-8392-2ab000a25267", "input": "Which ethnic group of the ones listed was the smallest?", "output": "[\"SELECT['ethnic groups listed']\", \"PROJECT['size of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is the lowest']\"]"}
{"id": "DROP_dev_history_2088_3daad9bd-055b-4c19-a5b2-f360ee1fb638", "input": "How many in percent from the census in Skopje weren't Roma?", "output": "[\"SELECT['Skopje']\", \"PROJECT['the census of #REF', '#1']\", \"PROJECT['those that were Roma of #REF', '#2']\", \"PROJECT['percent of #REF', '#3']\", \"PROJECT['the difference of 100 percent and #REF', '#4']\"]"}
{"id": "DROP_dev_history_2088_410bb5ec-eb16-40aa-a375-08c6062be0ef", "input": "Which group from the census in Skopje is smaller: Macedonians or Bosniaks?", "output": "[\"SELECT['groups from the Skopje census']\", \"FILTER['#1', 'that is Macedonians']\", \"FILTER['#1', 'that is Bosniaks']\", \"PROJECT['size of #REF', '#2']\", \"PROJECT['size of #REF', '#3']\", \"COMPARISON['min', '#4', '#5']\"]"}
{"id": "DROP_dev_history_2088_667b8972-f95e-4ce9-bd11-ec0a071fcc95", "input": "Which group from the census in Skopje is larger: Macedonians or Turks?", "output": "[\"SELECT['groups from the Skopje census']\", \"FILTER['#1', 'that is Macedonians']\", \"FILTER['#1', 'that is Turks']\", \"PROJECT['size of #REF', '#2']\", \"PROJECT['size of #REF', '#3']\", \"COMPARISON['max', '#4', '#5']\"]"}
{"id": "DROP_dev_history_2088_7729539d-3fec-4108-872b-3d1e6c193148", "input": "How many more Macedonians were there compared to Albanians according to the 2002 census?", "output": "[\"SELECT['Macedonians']\", \"FILTER['#1', 'according to the 2002 census']\", \"SELECT['Albanians']\", \"FILTER['#3', 'according to the 2002 census']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['difference', '#5', '#6']\"]"}
{"id": "DROP_dev_history_2088_806017ea-fe47-4515-a485-319ca782f07b", "input": "Which group has a larger percentage in Skojpe, Albanians or Macedonians?", "output": "[\"SELECT['Skojpe']\", \"PROJECT['Albanians of #REF', '#1']\", \"PROJECT['Macedonians of #REF', '#1']\", \"PROJECT['percentage of #REF', '#2']\", \"PROJECT['percentage of #REF', '#3']\", \"COMPARISON['max', '#4', '#5']\"]"}
{"id": "DROP_dev_history_2088_82c5fa37-c885-4ded-8ba4-08212c028fde", "input": "Which ethnic groups went to Macedonia?", "output": "[\"SELECT['ethnic groups']\", \"FILTER['#1', 'that went to Macedonia']\"]"}
{"id": "DROP_dev_history_2088_91141a11-5e0c-4d4e-9e79-175f8ad8c2a4", "input": "Which group from the census in Skopje is smaller: Macedonians or Serbs?", "output": "[\"SELECT['Skopje']\", \"PROJECT['the census of #REF', '#1']\", \"PROJECT['Macedonians of #REF', '#2']\", \"PROJECT['Serbs of #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"COMPARISON['min', '#5', '#6']\"]"}
{"id": "DROP_dev_history_2088_a8884c7e-c30b-4fbe-8d90-c9c3b1f9c4c4", "input": "Were there more Serbs or Vlachs in Skopje in 2002?", "output": "[\"SELECT['Skopje']\", \"PROJECT['Serbs of #REF', '#1']\", \"PROJECT['Vlachs of #REF', '#1']\", \"FILTER['#2', 'in 2002']\", \"FILTER['#3', 'in 2002']\", \"AGGREGATE['count', '#4']\", \"AGGREGATE['count', '#5']\", \"COMPARISON['max', '#6', '#7']\"]"}
{"id": "DROP_dev_history_2090_442df6b2-6168-4f85-b31c-c87cd9ede0da", "input": "How many more cases of heart disease is TX expected to see in 2030 compared with 2010?", "output": "[\"SELECT['TX']\", \"PROJECT['expected cases of heart disease in 2030 of #REF', '#1']\", \"PROJECT['expected cases of heart disease in 2010 of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"ARITHMETIC['difference', '#4', '#5']\"]"}
{"id": "DROP_dev_history_2090_5bf02085-eb0e-4cfb-b996-d85e65b3c5f4", "input": "What are all the disease cases that are the higher than heart disease in 2010?", "output": "[\"SELECT['heart disease']\", \"FILTER['#1', 'in 2010']\", \"PROJECT['disease cases that are higher than #REF', '#2']\"]"}
{"id": "DROP_dev_history_2090_70219b12-ba29-4831-9adc-817c3b0c7898", "input": "Are there expected to be more cases of heart disease or diabetes in 2030?", "output": "[\"SELECT['heart disease']\", \"PROJECT['expected cases of #REF', '#1']\", \"FILTER['#2', 'in 2030']\", \"SELECT['diabetes']\", \"PROJECT['expected cases of #REF', '#4']\", \"FILTER['#5', 'in 2030']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#6']\", \"COMPARISON['max', '#7', '#8']\"]"}
{"id": "DROP_dev_history_2090_856c15b7-3390-4dfa-b58b-a5d14d22dace", "input": "What were all cases predicted in 2030 to be higher than 5 million?", "output": "[\"SELECT['cases predicted in 2030']\", \"PROJECT['case', '#1']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#1', '#3', 'is higher than 5 million']\"]"}
{"id": "DROP_dev_history_2090_8d3db860-8c45-4c5d-9ebc-9a0a2db323f0", "input": "Does Texas expect to see more cases of heart disease in 2010 or in 2030?", "output": "[\"SELECT['Texas']\", \"PROJECT['expected cases of heart disease of #REF', '#1']\", \"FILTER['#2', 'in 2010']\", \"FILTER['#2', 'in 2030']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"COMPARISON['max', '#5', '#6']\"]"}
{"id": "DROP_dev_history_2090_9f07fda6-fa65-4e82-b09f-e86f27137d51", "input": "Were there more cases of heart disease or of diabetes in 2010?", "output": "[\"SELECT['cases of heart disease']\", \"FILTER['#1', 'in 2010']\", \"SELECT['cases of diabetes']\", \"FILTER['#1', 'in 2010']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#4']\", \"COMPARISON['max', '#5', '#6']\"]"}
{"id": "DROP_dev_history_2090_c2770bd8-24e3-453d-ac39-38df971dcdeb", "input": "How many more cases of heart disease does Texas predict it will see in 2030 compared with 2010?", "output": "[\"SELECT['Texas']\", \"PROJECT['cases of heart disease of #REF', '#1']\", \"FILTER['#2', 'in 2030']\", \"FILTER['#2', 'in 2010']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['difference', '#5', '#6']\"]"}
{"id": "DROP_dev_history_2090_e176be1d-7725-45d0-8b3f-be112bc7d968", "input": "What disease has predicted to be the largest amount of cases in 2030, hypertension or diabetes?", "output": "[\"SELECT['diseases']\", \"PROJECT['cases of #REF', '#1']\", \"FILTER['#2', 'that are predicted to be in 2030']\", \"PROJECT['amounts of #REF', '#3']\", \"COMPARATIVE['#4', '#1', 'is hypertension']\", \"COMPARATIVE['#4', '#1', 'is diabetes']\", \"COMPARISON['max', '#5', '#6']\"]"}
{"id": "DROP_dev_history_2090_f813f690-e9c4-42e0-bcd5-957b98f7a563", "input": "What was the largest number of cases in 2010; hypertension or diabetes?", "output": "[\"SELECT['cases']\", \"FILTER['#1', 'in 2010']\", \"FILTER['#2', 'of hypertension']\", \"FILTER['#2', 'of diabetes']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"COMPARISON['max', '#5', '#6']\"]"}
{"id": "DROP_dev_history_2090_fa1cb100-d66a-48c1-bbee-b4ddc538c415", "input": "How many fewer cases of hypertension is TX expecting to see in 2010 comapred with 2030?", "output": "[\"SELECT['TX']\", \"PROJECT['expecting cases of hypertension in 2010 of #REF', '#1']\", \"PROJECT['expecting cases of hypertension in 2030 of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"ARITHMETIC['difference', '#4', '#5']\"]"}
{"id": "DROP_dev_history_2102_246cafc3-2072-4af8-a684-fa54046095ac", "input": "How many percent more people worked in services in 1980 compared to 1955?", "output": "[\"SELECT['services']\", \"PROJECT['percent of people worked in 1980 of #REF', '#1']\", \"PROJECT['percent of people worked in 1955 of #REF', '#1']\", \"ARITHMETIC['difference', '#2', '#3']\"]"}
{"id": "DROP_dev_history_2102_2f2a8ca0-199f-433a-a64c-d65b03c7ddd5", "input": "Which year had more people working in agriculture, 1955 or 1980?", "output": "[\"SELECT['people']\", \"FILTER['#1', 'working in agriculture']\", \"FILTER['#2', 'in 1955']\", \"FILTER['#2', 'in 1980']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"COMPARISON['max', '#5', '#6']\"]"}
{"id": "DROP_dev_history_2102_5f7441b4-138c-4c70-9a20-0fc0c373e940", "input": "Did less people work in agriculture in 1980 or 1955?", "output": "[\"SELECT['agriculture']\", \"PROJECT['people work in #REF', '#1']\", \"FILTER['#2', 'in 1980']\", \"FILTER['#2', 'in 1955']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"COMPARISON['min', '#5', '#6']\"]"}
{"id": "DROP_dev_history_2102_79bacdf4-b669-4e2a-9be3-e73ab82a9467", "input": "Which year had less employees in services, 1955 or 1980?", "output": "[\"SELECT['employees in services']\", \"FILTER['#1', 'in 1955']\", \"FILTER['#1', 'in 1980']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"COMPARISON['min', '#4', '#5']\"]"}
{"id": "DROP_dev_history_2102_8e94ecbc-ed37-4b38-bd21-ad2ce7422387", "input": "Which race had the highest unemployment in the US in 1955,Caucasians or African Americans?", "output": "[\"SELECT['Caucasians']\", \"SELECT['African Americans']\", \"PROJECT['unemployment of #REF', '#1']\", \"PROJECT['unemployment of #REF', '#2']\", \"FILTER['#3', 'in 1955']\", \"FILTER['#4', 'in 1955']\", \"COMPARISON['max', '#5', '#6']\"]"}
{"id": "DROP_dev_history_2102_a3192959-ef01-425d-8dfe-84678d68e362", "input": "About how many more percent of Amerians worked in services in 1980 than in 1955?", "output": "[\"SELECT['Amerians']\", \"FILTER['#1', 'that worked in services']\", \"FILTER['#2', 'in 1980']\", \"FILTER['#2', 'in 1955']\", \"PROJECT['percent of #REF', '#3']\", \"PROJECT['percent of #REF', '#4']\", \"ARITHMETIC['difference', '#5', '#6']\"]"}
{"id": "DROP_dev_history_2142_064ea513-bf9b-46bd-bcdd-1f221dabad9a", "input": "How many percent did not speak Vietnamese?", "output": "[\"SELECT['those that speak Vietnamese']\", \"PROJECT['percent of #REF', '#1']\", \"PROJECT['the difference of 100 percent and #REF', '#2']\"]"}
{"id": "DROP_dev_history_2142_13b0a833-7a21-4d82-b894-22df69413f28", "input": "How many percent were English American and German American combined?", "output": "[\"SELECT['English American']\", \"PROJECT['percent of #REF', '#1']\", \"SELECT['German American']\", \"PROJECT['percent of #REF', '#3']\", \"ARITHMETIC['sum', '#2', '#4']\"]"}
{"id": "DROP_dev_history_2142_165de714-e8ba-4aa4-b8cc-329fbb6df82d", "input": "How many races each made up over 5% of the population?", "output": "[\"SELECT['races']\", \"PROJECT['%S of the population of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is more than 5 %']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_history_2142_373f73fb-83ea-483f-a7c3-1cbed017ad84", "input": "How many in percent from the census weren't Irish American?", "output": "[\"SELECT['the census']\", \"PROJECT['Irish American of #REF', '#1']\", \"PROJECT['percent of #REF', '#2']\", \"PROJECT['difference of 100 and #REF', '#3']\"]"}
{"id": "DROP_dev_history_2142_52399365-b02a-47a1-bb71-fa416814aefd", "input": "Which group from the census in the county is larger: German American or English American?", "output": "[\"SELECT['the census in the county']\", \"PROJECT['the German American group of #REF', '#1']\", \"PROJECT['the English American group of #REF', '#1']\", \"PROJECT['size of #REF', '#2']\", \"PROJECT['size of #REF', '#3']\", \"COMPARISON['max', '#4', '#5']\"]"}
{"id": "DROP_dev_history_2142_6bb9fdba-d625-4710-82eb-c7ebada449d1", "input": "Which group from the census is larger: German American or English American?", "output": "[\"SELECT['group from the census']\", \"FILTER['#1', 'that is German American']\", \"FILTER['#1', 'that is English American']\", \"PROJECT['size of #REF', '#2']\", \"PROJECT['size of #REF', '#3']\", \"COMPARISON['max', '#4', '#5']\"]"}
{"id": "DROP_dev_history_2142_b037ec8a-2db1-4e8c-949d-41409543e18f", "input": "Which group from the census is larger: German American or Americans ancestry?", "output": "[\"SELECT['the census']\", \"PROJECT['the German American group of #REF', '#1']\", \"PROJECT['the Americans ancestry group of #REF', '#1']\", \"PROJECT['size of #REF', '#2']\", \"PROJECT['size of #REF', '#3']\", \"COMPARISON['max', '#4', '#5']\"]"}
{"id": "DROP_dev_history_2142_b327bbd7-e633-4d44-b2b2-69cdd035c1ae", "input": "Which group from the census in the county is smaller: German American or Irish American?", "output": "[\"SELECT['groups from the census in the county']\", \"FILTER['#1', 'that are German American']\", \"FILTER['#1', 'that are Irish American']\", \"PROJECT['size of #REF', '#2']\", \"PROJECT['size of #REF', '#3']\", \"COMPARISON['min', '#4', '#5']\"]"}
{"id": "DROP_dev_history_2142_d7b01be5-e94c-42b1-b83a-5cadc9e86b38", "input": "How many different languages are spoken at home in this county according to the percentages listed in the census of 2000?", "output": "[\"SELECT['the county census of 2000']\", \"PROJECT['different languages spoken at home of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_history_2142_df447655-2373-4d9a-8ba3-9333523b897a", "input": "Which group from the census is larger: German American or Irish American?", "output": "[\"SELECT['the census']\", \"PROJECT['the German American group of #REF', '#1']\", \"PROJECT['the Irish American group of #REF', '#1']\", \"PROJECT['size of #REF', '#2']\", \"PROJECT['size of #REF', '#3']\", \"COMPARISON['max', '#4', '#5']\"]"}
{"id": "DROP_dev_history_2142_e8f776ef-6438-419b-bb3f-f64aa2e086eb", "input": "Which group from the census is smaller: German American or Americans ancestry?", "output": "[\"SELECT['census groups']\", \"FILTER['#1', 'that is of German American ancestry']\", \"FILTER['#1', 'that is of American ancestry']\", \"PROJECT['size of #REF', '#2']\", \"PROJECT['size of #REF', '#3']\", \"COMPARISON['min', '#4', '#5']\"]"}
{"id": "DROP_dev_history_2151_9fba868d-c51a-4baf-81f8-cfdc4f08cdd7", "input": "Which age group had the smallest percentage?", "output": "[\"SELECT['age groups']\", \"PROJECT['percentage of #REF', '#1']\", \"SUPERLATIVE['min', '#1', '#2']\"]"}
{"id": "DROP_dev_history_2151_c5eb7e68-a994-484e-9cb5-6af2e28c9a62", "input": "Which age group had the second most people", "output": "[\"SELECT['age group']\", \"PROJECT['people of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"AGGREGATE['max', '#3']\"]"}
{"id": "DROP_dev_history_2151_e2514a1c-07d1-49dc-b987-0dd832b5bd52", "input": "How many more people, in terms of percentage, were in the 2nd and 3rd largest age groups combined compared to the largest?", "output": "[\"SELECT['age groups']\", \"PROJECT['percentages of people of #REF', '#1']\", \"AGGREGATE['max', '#2']\", \"AGGREGATE['max', '#2']\", \"AGGREGATE['max', '#2']\", \"ARITHMETIC['sum', '#4', '#5']\", \"ARITHMETIC['difference', '#6', '#3']\"]"}
{"id": "DROP_dev_history_2151_fb3128d1-c543-4942-a530-54379d83e196", "input": "Were there more people under 45 or 45 and older?", "output": "[\"SELECT['people']\", \"FILTER['#1', 'that are under 45']\", \"FILTER['#1', 'that are 45 and older']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"COMPARISON['max', '#4', '#5']\"]"}
{"id": "DROP_dev_history_2153_14a79d27-648a-4a2f-8dea-01a86d01b1a5", "input": "How many more percentage points in truancy did South Bucks have over Slough?", "output": "[\"SELECT['truancy']\", \"FILTER['#1', 'in South Bucks']\", \"FILTER['#1', 'in Slough']\", \"PROJECT['percentage of #REF', '#2']\", \"PROJECT['percentage of #REF', '#3']\", \"ARITHMETIC['difference', '#4', '#5']\"]"}
{"id": "DROP_dev_history_2153_31523efd-03f9-4cd9-a3bc-b917ec096ede", "input": "How many percent difference is there between the highest and lowest percentage of school free meals?", "output": "[\"SELECT['school free meals']\", \"PROJECT['percentages of #REF', '#1']\", \"AGGREGATE['max', '#2']\", \"AGGREGATE['min', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "DROP_dev_history_2153_3f49f693-488a-47d4-9c68-e09cae496276", "input": "How many places have the same lowest truancy percentages of 2.5?", "output": "[\"SELECT['places']\", \"PROJECT['truancy percentages of #REF', '#1']\", \"GROUP['min', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is equal to 2.5']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "DROP_dev_history_2153_626890bf-3f00-4e77-ab41-3c12fd0037ab", "input": "How many points difference is the truancy rate between Southampton and Rushmoor?", "output": "[\"SELECT['truancy rate']\", \"FILTER['#1', 'in Southampton']\", \"FILTER['#1', 'in Rushmoor']\", \"ARITHMETIC['difference', '#2', '#3']\"]"}
{"id": "DROP_dev_history_2153_6a0dd595-8ce1-4181-8900-8280282aad56", "input": "How many percentages higher is truancy in South Bucks compared to Tandridge?", "output": "[\"SELECT['truancy']\", \"FILTER['#1', 'in South Bucks']\", \"FILTER['#1', 'in Tandridge']\", \"PROJECT['percentage of #REF', '#2']\", \"PROJECT['percentage of #REF', '#3']\", \"ARITHMETIC['difference', '#4', '#5']\"]"}
{"id": "DROP_dev_history_2153_cd92f4cf-e248-42bd-9b2b-8d5706dc2cd9", "input": "How many more percentage points in truancy did South Bucks have over Rushmoor?", "output": "[\"SELECT['truancy']\", \"FILTER['#1', 'in South Bucks']\", \"FILTER['#1', 'in Rushmoor']\", \"PROJECT['percentage of #REF', '#2']\", \"PROJECT['percentage of #REF', '#3']\", \"ARITHMETIC['difference', '#4', '#5']\"]"}
{"id": "DROP_dev_history_2153_ea2a6082-5b95-4b43-9f78-ed9b61528a00", "input": "How many percent difference is there between the school with the highest number of students that did not gain an GCSE pass and the lowest?", "output": "[\"SELECT['schools']\", \"PROJECT['students of #REF', '#1']\", \"FILTER['#2', 'that did not gain a GCSE pass']\", \"PROJECT['percents of #REF', '#3']\", \"AGGREGATE['max', '#4']\", \"AGGREGATE['min', '#4']\", \"ARITHMETIC['difference', '#5', '#6']\"]"}
{"id": "DROP_dev_history_2162_29c05556-cec1-4e8c-8f33-e973cd51f7bf", "input": "How many residents, in terms of percentage, were younger than 25?", "output": "[\"SELECT['residents']\", \"FILTER['#1', 'younger than 25']\", \"PROJECT['percentage of #REF', '#2']\"]"}
{"id": "DROP_dev_history_2162_3c1da219-7fc4-43a3-9543-f7310b8c4281", "input": "How many more people, in terms of percentage, belonged to the biggest age group compared to the 2nd and 3rd biggest age groups combined?", "output": "[\"SELECT['age groups']\", \"PROJECT['percentages of people of #REF', '#1']\", \"AGGREGATE['max', '#2']\", \"AGGREGATE['max', '#2']\", \"AGGREGATE['max', '#2']\", \"ARITHMETIC['sum', '#4', '#5']\", \"ARITHMETIC['difference', '#3', '#6']\"]"}
{"id": "DROP_dev_history_2162_73a2ec3b-27d3-4fe0-972b-7e8ba3de5687", "input": "Was the median age higher or lower than 22 years old?", "output": "[\"SELECT['ages']\", \"PROJECT['median of #REF', '#1']\", \"BOOLEAN['#2', 'higher than 22 years']\", \"BOOLEAN['#2', 'lower than 22 years']\", \"COMPARISON['true', '#3', '#4']\"]"}
{"id": "DROP_dev_history_2162_7b9d968f-cf07-4b56-a1df-4cc68fb9bea4", "input": "Were more people between the ages of 25 to 44, or 45 to 64?", "output": "[\"SELECT['people']\", \"FILTER['#1', 'between the ages of 25 to 44']\", \"FILTER['#1', 'between the ages of 45 to 64']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"ARITHMETIC['difference', '#4', '#5']\"]"}
{"id": "DROP_dev_history_2162_96171ae9-6096-4b1b-a2b3-88f25f75989b", "input": "How many in percent weren't 18 and 24?", "output": "[\"SELECT['those that were 18 to 24']\", \"PROJECT['percent of the population of #REF', '#1']\", \"PROJECT['the difference of 100 percent and #REF', '#2']\"]"}
{"id": "DROP_dev_history_2162_97ac650a-23b8-4630-81c7-c6e6757c1112", "input": "Were more people between the ages of 25 to 44, or over 65?", "output": "[\"SELECT['people']\", \"PROJECT['ages of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is  betweenleftside 25']\", \"COMPARATIVE['#3', '#2', 'is  betweenrightside 44']\", \"COMPARATIVE['#1', '#2', 'is higher than 65']\", \"AGGREGATE['count', '#4']\", \"AGGREGATE['count', '#5']\", \"COMPARISON['max', '#6', '#7']\"]"}
{"id": "DROP_dev_history_2162_9e860e5c-a113-41b4-b609-b1b6223727cf", "input": "How many in percent weren't between the ages of 18 and 24?", "output": "[\"SELECT['the population that is between the ages of 18 and 24']\", \"PROJECT['percent of #REF', '#1']\", \"PROJECT['the difference of 100 percent and #REF', '#2']\"]"}
{"id": "DROP_dev_history_2162_a974dc44-2594-4d56-860e-d29914635c93", "input": "How many more people, in terms of percentage, belonged to the biggest age group compared to the two smallest age groups combined?", "output": "[\"SELECT['age groups']\", \"PROJECT['percentages of #REF', '#1']\", \"AGGREGATE['max', '#2']\", \"AGGREGATE['min', '#2']\", \"AGGREGATE['sum', '#4']\", \"ARITHMETIC['difference', '#3', '#5']\"]"}
{"id": "DROP_dev_history_2162_af33339f-91ba-46c8-bf69-cd5aea8c8b71", "input": "How many in percent weren't male?", "output": "[\"SELECT['male']\", \"PROJECT['percent that were #REF', '#1']\", \"PROJECT['difference of 100 and #REF', '#2']\"]"}
{"id": "DROP_dev_history_2162_b93c971d-e880-4748-9524-634d97b11ed4", "input": "Which age group was the second smallest?", "output": "[\"SELECT['age groups']\", \"PROJECT['size of #REF', '#1']\", \"SUPERLATIVE['min', '#1', '#2']\", \"DISCARD['#1', '#3']\", \"SUPERLATIVE['min', '#4', '#2']\"]"}
{"id": "DROP_dev_history_2162_bc2bd2aa-dff6-4d2d-9db3-0302df5eefa0", "input": "Was the median age higher or lower than 23 years old?", "output": "[\"SELECT['median age']\", \"BOOLEAN['#1', 'higher than 23']\", \"BOOLEAN['#1', 'lower than 23']\", \"COMPARISON['true', '#2', '#3']\"]"}
{"id": "DROP_dev_history_2162_f433e0b0-aa58-4363-9faa-4702ce08e9ac", "input": "What group in percent is larger: 25 to 44 or 45 to 64?", "output": "[\"SELECT['groups']\", \"PROJECT['percent of #REF', '#1']\", \"COMPARATIVE['#2', '#1', 'is 25 to 44']\", \"COMPARATIVE['#2', '#1', 'is 45 to 64']\", \"COMPARISON['max', '#3', '#4']\"]"}
{"id": "DROP_dev_history_2162_f8a14a78-76b9-4ac2-b4ec-961b3e676a2f", "input": "Were more people under 18, or between the ages of 45 to 64?", "output": "[\"SELECT['people']\", \"FILTER['#1', 'that Were under 18']\", \"FILTER['#1', 'that Were betweenleftside the ages of 45']\", \"FILTER['#3', 'that Were betweenrightside 64']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#4']\", \"COMPARISON['max', '#5', '#6']\"]"}
{"id": "DROP_dev_history_2164_198dd9f7-2558-4ffc-8fe3-1aa033be4f4e", "input": "How many more percentage points was there of those from 18 to 24 than there was from 25 to 44?", "output": "[\"SELECT['those from 18 to 24']\", \"SELECT['those from 25 to 44']\", \"PROJECT['percentage of #REF', '#1']\", \"PROJECT['percentage of #REF', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "DROP_dev_history_2164_36e8d0d5-c6a0-44f4-9dce-0dcf510706a9", "input": "How many percentage points difference is there between the number of people 18 years old and under and those who are 18 to 24 years old?", "output": "[\"SELECT['people']\", \"FILTER['#1', 'who are 18 years old and under']\", \"FILTER['#1', 'who are 18 to 24 years old']\", \"PROJECT['percentage of #REF', '#2']\", \"PROJECT['percentage of #REF', '#3']\", \"ARITHMETIC['difference', '#4', '#5']\"]"}
{"id": "DROP_dev_history_2164_56d03fac-5aed-4ce5-ba9b-af28d64b7e14", "input": "Who has the lowest percent in the city population, 65 45 to 64?", "output": "[\"SELECT['those that are 65']\", \"SELECT['those that are 45 to 64']\", \"PROJECT['percent of the city population of #REF', '#1']\", \"PROJECT['percent of the city population of #REF', '#2']\", \"COMPARISON['min', '#3', '#4']\"]"}
{"id": "DROP_dev_history_2164_7c738afe-3dda-4d4d-ae07-7a46dd64e0e0", "input": "How many are 25 years old than 65 years old?", "output": "[\"SELECT['25 years old']\", \"SELECT['65 years old']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "DROP_dev_history_2164_fa0ff92d-eacc-4eaa-9ca0-7ab639445ef9", "input": "How many more females per 100 age 18 and over were there than males?", "output": "[\"SELECT['females']\", \"PROJECT['ages of #REF', '#1']\", \"SELECT['males']\", \"PROJECT['ages of #REF', '#3']\", \"COMPARATIVE['#1', '#2', 'is at least 18']\", \"COMPARATIVE['#3', '#4', 'is at least 18']\", \"AGGREGATE['count', '#5']\", \"AGGREGATE['count', '#6']\", \"PROJECT['per 100 of #REF', '#7']\", \"PROJECT['per 100 of #REF', '#8']\", \"ARITHMETIC['difference', '#9', '#10']\"]"}
{"id": "DROP_dev_history_2170_021777cc-48af-4379-9c44-f444dc80e73b", "input": "Were there more people of self-identified Puerto Rican or French ancestry?", "output": "[\"SELECT['people']\", \"FILTER['#1', 'that have self-identified Puerto Rican ancestry']\", \"FILTER['#1', 'that have self-identified French ancestry']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"COMPARISON['max', '#4', '#5']\"]"}
{"id": "DROP_dev_history_2170_0d079bc9-1394-44a7-adbd-945e638722fb", "input": "Were there more Asian or Native American citizens in the 2010 census?", "output": "[\"SELECT['2010 census']\", \"PROJECT['Asian citizens in #REF', '#1']\", \"PROJECT['Native American citizens in #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"COMPARISON['max', '#4', '#5']\"]"}
{"id": "DROP_dev_history_2170_467dc327-60ca-41b2-9eb1-945518b72edc", "input": "How many percent of people were not white-Hispanic?", "output": "[\"SELECT['people']\", \"FILTER['#1', 'that were white-Hispanic']\", \"PROJECT['percent of #REF', '#2']\", \"PROJECT['difference of 100 and #REF', '#3']\"]"}
{"id": "DROP_dev_history_2170_715def7c-7ab2-4ca7-a669-a926615a09fb", "input": "Did more people self-identify with a Guyanese or Irish ancestry?", "output": "[\"SELECT['people']\", \"FILTER['#1', 'that self-identify with Guyanese ancestry']\", \"FILTER['#1', 'that self-identify with Irish ancestry']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"COMPARISON['max', '#4', '#5']\"]"}
{"id": "DROP_dev_history_2170_749ed05c-22fc-4ba8-ac83-040be66718d5", "input": "How many percent of people were not  Puerto Rican?", "output": "[\"SELECT['people']\", \"FILTER['#1', 'that were Puerto Rican']\", \"PROJECT['percent of #REF', '#2']\", \"PROJECT['the difference of 100 percent and #REF', '#3']\"]"}
{"id": "DROP_dev_history_2170_77ec7d38-739a-4ca5-9bc2-b63670f435f6", "input": "How many percent more people were in the the second largest group compared to the second smallest?", "output": "[\"SELECT['groups']\", \"PROJECT['percents of #REF', '#1']\", \"AGGREGATE['max', '#2']\", \"AGGREGATE['min', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "DROP_dev_history_2170_9b27311d-81ec-4f40-a4af-7ead916d5859", "input": "How many ancestries were identified by less than 10% of the population for each group?", "output": "[\"SELECT['ancestries']\", \"PROJECT['%S of the population of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is less than 10 %']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_history_2170_a058bdd9-a1e8-444d-9899-efc9ceb72bc1", "input": "What ancestries were self-identified by fewer than 7% of the population?", "output": "[\"SELECT['ancestries']\", \"PROJECT['%S of the population of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is lower than 7 %']\"]"}
{"id": "DROP_dev_history_2170_a0d6b6e2-edbe-47e9-a8bf-41d434edd643", "input": "Which ancestries are between 12 and 12.9%?", "output": "[\"SELECT['ancestries']\", \"FILTER['#1', 'that are at least 12 %']\", \"FILTER['#2', 'that are at most 12.9 %']\"]"}
{"id": "DROP_dev_history_2170_a546a7ce-3869-48f8-96e7-20a9c005c759", "input": "Were there more self-identified Guyanese or Irish?", "output": "[\"SELECT['self-identified Guyanese']\", \"SELECT['self-identified Irish']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"COMPARISON['max', '#3', '#4']\"]"}
{"id": "DROP_dev_history_2170_c952a52d-9c56-47cf-89a0-8f249a2e4992", "input": "How many more percent did the largest ancestry have compared to the smallest?", "output": "[\"SELECT['ancestries']\", \"AGGREGATE['max', '#1']\", \"AGGREGATE['min', '#1']\", \"PROJECT['percent of #REF', '#2']\", \"PROJECT['percent of #REF', '#3']\", \"ARITHMETIC['difference', '#4', '#5']\"]"}
{"id": "DROP_dev_history_2170_ed881ec8-1232-4fee-9b6a-29ac20cf8a43", "input": "What ancestries were self-identified by more than 10% of the population?", "output": "[\"SELECT['ancestries']\", \"PROJECT['population of #REF that were self-identified', '#1']\", \"COMPARATIVE['#1', '#2', 'is higher than 10 %']\"]"}
{"id": "DROP_dev_history_2170_ee68cc80-e09a-4177-a3dc-5da3f116cc02", "input": "Which ancestries were between 5 and 9%?", "output": "[\"SELECT['ancestries']\", \"FILTER['#1', 'that were at least 5 %']\", \"FILTER['#1', 'that were at most 9 %']\", \"INTERSECTION['#1', '#2', '#3']\"]"}
{"id": "DROP_dev_history_2176_09d3a94c-c50b-4beb-9282-409156b91b88", "input": "Which group had the smallest amount of foreign nationals in Bangkok?", "output": "[\"SELECT['Bangkok']\", \"PROJECT['foreign nationals in #REF', '#1']\", \"PROJECT['groups of #REF', '#2']\", \"PROJECT['amounts of #REF', '#3']\", \"SUPERLATIVE['min', '#3', '#4']\"]"}
{"id": "DROP_dev_history_2176_0bdc1504-ddda-4dfb-8baa-4fcd76657056", "input": "Approximately how many more people live in Bangkok in 2018 compared to 2010?", "output": "[\"SELECT['Bangkok']\", \"PROJECT['people that live in #REF', '#1']\", \"FILTER['#2', 'in 2018']\", \"FILTER['#2', 'in 2010']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['difference', '#5', '#6']\"]"}
{"id": "DROP_dev_history_2176_152ee1a0-2954-4fa4-925c-0344f609b3a2", "input": "Are there more Japanese or Chinese nationals in Bangkok?", "output": "[\"SELECT['Bangkok']\", \"PROJECT['Japanese nationals of #REF', '#1']\", \"PROJECT['Chinese nationals of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"COMPARISON['max', '#4', '#5']\"]"}
{"id": "DROP_dev_history_2176_355ba35f-8132-498d-ac54-53b85d5db0b8", "input": "Do more expatriates come from europe or the Americas?", "output": "[\"SELECT['expatriates']\", \"FILTER['#1', 'from europe']\", \"FILTER['#1', 'from the Americas']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"COMPARISON['max', '#4', '#5']\"]"}
{"id": "DROP_dev_history_2176_44ede24d-a942-4315-98b0-ca4fae2377d0", "input": "Where there more expatriots in Bangkok from Africa or Australia?", "output": "[\"SELECT['expatriots in Bangkok']\", \"FILTER['#1', 'from Africa']\", \"FILTER['#1', 'from Australia']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"COMPARISON['max', '#4', '#5']\"]"}
{"id": "DROP_dev_history_2176_6303dde9-0e0e-4083-ad63-292aee0b6bdc", "input": "Are there more Burmese or Cambodian immigrants in Bangkok?", "output": "[\"SELECT['Bangkok']\", \"PROJECT['immigrants of #REF', '#1']\", \"FILTER['#2', 'that are Burmese']\", \"FILTER['#2', 'that are Cambodian']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"COMPARISON['max', '#5', '#6']\"]"}
{"id": "DROP_dev_history_2176_6c6a6c3c-7201-41d5-ad26-6d4108419b03", "input": "Does Bangkok have more Japanese or Chinese nationals?", "output": "[\"SELECT['Bangkok']\", \"PROJECT['Japanese nationals that #REF have', '#1']\", \"PROJECT['Chinese nationals that #REF have', '#1']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"COMPARISON['max', '#4', '#5']\"]"}
{"id": "DROP_dev_history_2176_8203ffaf-cb55-4d28-a010-d933cb0e9c8e", "input": "Where there more expatriots in Bangkok from Africa or Lao?", "output": "[\"SELECT['Bangkok']\", \"PROJECT['expatriots of #REF', '#1']\", \"FILTER['#2', 'from Africa']\", \"FILTER['#2', 'from Lao']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"COMPARISON['max', '#5', '#6']\"]"}
{"id": "DROP_dev_history_2176_89231d6d-51f7-44bc-a314-f01695ab3bf8", "input": "How many more Japanese are there compared to Chinese nationals in Bangkok?", "output": "[\"SELECT['Bangkok']\", \"PROJECT['Japanese in #REF', '#1']\", \"PROJECT['Chinese nationals in #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"ARITHMETIC['difference', '#4', '#5']\"]"}
{"id": "DROP_dev_history_2176_d39bdaae-26b1-4c57-af41-88293cf51eb6", "input": "Where there more expatriots in Bangkok from China or Burma?", "output": "[\"SELECT['Bangkok']\", \"PROJECT['expatriots of #REF', '#1']\", \"FILTER['#2', 'from China']\", \"FILTER['#2', 'from Burma']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"COMPARISON['max', '#5', '#6']\"]"}
{"id": "DROP_dev_history_2176_fa24c271-dcf2-48fe-ab39-b27dfff88d98", "input": "Which area has a large population: Bangkok or the Bangkok Metropolitan Region?", "output": "[\"SELECT['Bangkok']\", \"SELECT['the Bangkok Metropolitan Region']\", \"PROJECT['population of #REF', '#1']\", \"PROJECT['population of #REF', '#2']\", \"COMPARISON['max', '#3', '#4']\"]"}
{"id": "DROP_dev_history_2176_ff3cbbfa-bf0b-4355-9a4c-2066dd4782ab", "input": "Are there less immigrants from the Burmese or Cambodia?", "output": "[\"SELECT['the Burmese']\", \"SELECT['Cambodia']\", \"PROJECT['immigrants of #REF', '#1']\", \"PROJECT['immigrants of #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"COMPARISON['min', '#5', '#6']\"]"}
{"id": "DROP_dev_history_2179_00a87937-cf6b-487e-a5fd-fd93ab298c35", "input": "How many more travelers in Bangkok were Thai rather than foreign in 2010?", "output": "[\"SELECT['Bangkok']\", \"PROJECT['travelers of #REF', '#1']\", \"FILTER['#2', 'in 2010']\", \"FILTER['#3', 'that were Thai']\", \"FILTER['#3', 'that were foreign']\", \"AGGREGATE['count', '#4']\", \"AGGREGATE['count', '#5']\", \"ARITHMETIC['difference', '#6', '#7']\"]"}
{"id": "DROP_dev_history_2179_1628225b-efe7-4282-8066-6a26eb03bfaf", "input": "How many more Thai tourists were there than foreign tourists?", "output": "[\"SELECT['tourists']\", \"FILTER['#1', 'who were Thai']\", \"FILTER['#1', 'who were foreign']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"ARITHMETIC['difference', '#4', '#5']\"]"}
{"id": "DROP_dev_history_2179_1d9fd840-eb77-46b2-9dfc-bf60a5b0ec88", "input": "Were there more foreign visitors or Thai travelers in Bangkok?", "output": "[\"SELECT['Bangkok']\", \"PROJECT['foreign visitors of #REF', '#1']\", \"PROJECT['Thai travelers of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"COMPARISON['max', '#4', '#5']\"]"}
{"id": "DROP_dev_history_2179_5ddb9402-24e9-4b5a-b5e4-d40600b439a8", "input": "Which visited Bangkok more in 2010, Thai visitors or foreign visitors?", "output": "[\"SELECT['Bangkok']\", \"PROJECT['visitors of #REF', '#1']\", \"FILTER['#2', 'in 2010']\", \"FILTER['#2', 'that are Thai']\", \"FILTER['#2', 'that are foreign']\", \"AGGREGATE['count', '#4']\", \"AGGREGATE['count', '#5']\", \"COMPARISON['max', '#6', '#7']\"]"}
{"id": "DROP_dev_history_2179_5e44f574-bab2-406f-9c96-be4facfc56f4", "input": "Which had the highest amount of tourists in Bangkok 2010 according to the Department of Tourism: Thai or foreign visitors?", "output": "[\"SELECT['Bangkok']\", \"PROJECT['tourists that are in #REF', '#1']\", \"FILTER['#2', 'that are in 2010']\", \"FILTER['#3', 'that are Thai']\", \"DISCARD['#3', '#4']\", \"AGGREGATE['count', '#4']\", \"AGGREGATE['count', '#5']\", \"COMPARISON['max', '#6', '#7']\"]"}
{"id": "DROP_dev_history_2179_b2940de2-45cc-4727-a5df-bff309816c52", "input": "How many more Thai visitors did Bangkok have in 2010 compared to other foreign visitors?", "output": "[\"SELECT['Bangkok']\", \"PROJECT['Thai visitors of #REF', '#1']\", \"PROJECT['other foreign visitors of #REF', '#1']\", \"FILTER['#2', 'in 2010']\", \"FILTER['#3', 'in 2010']\", \"AGGREGATE['count', '#4']\", \"AGGREGATE['count', '#5']\", \"ARITHMETIC['difference', '#6', '#7']\"]"}
{"id": "DROP_dev_history_2187_27189445-ef12-49b8-8cdb-d1e2f79799c5", "input": "How many percent were not  Polish?", "output": "[\"SELECT['Polish']\", \"PROJECT['percent of #REF', '#1']\", \"PROJECT['difference of 100 and #REF', '#2']\"]"}
{"id": "DROP_dev_history_2187_32a8d1bc-8cba-4f9c-b219-43ac7d12b831", "input": "How many percent of people were not Irish?", "output": "[\"SELECT['people']\", \"FILTER['#1', 'that were Irish']\", \"PROJECT['percent of #REF', '#2']\", \"PROJECT['the difference of 100 percent and #REF', '#3']\"]"}
{"id": "DROP_dev_history_2187_9cfda451-d4d6-4191-bd43-ee0f38711cb5", "input": "How many percent of people were not German?", "output": "[\"SELECT['German']\", \"PROJECT['percent of #REF', '#1']\", \"PROJECT['difference of 100 and #REF', '#2']\"]"}
{"id": "DROP_dev_history_2187_a6590aaf-a372-4c1c-8fe5-b918d4a61309", "input": "Which group had less of a population, two or more races or Pacific Islander?", "output": "[\"SELECT['the two or more races group']\", \"SELECT['the Pacific Islander group']\", \"PROJECT['population of #REF', '#1']\", \"PROJECT['population of #REF', '#2']\", \"COMPARISON['min', '#3', '#4']\"]"}
{"id": "DROP_dev_history_2188_1ffa94c5-05b2-4e78-9a98-a0ac56fbc5cc", "input": "Which ancestral groups are smaller than 13%?", "output": "[\"SELECT['ancestral groups']\", \"PROJECT['%S of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is lower than 13 %']\"]"}
{"id": "DROP_dev_history_2188_35aacaf4-9e63-4afb-8570-d6050cf351bb", "input": "How many people and families reside in the county according to the 2000 census?", "output": "[\"SELECT['county']\", \"PROJECT['people that reside in #REF', '#1']\", \"PROJECT['families that reside in #REF', '#1']\", \"FILTER['#2', 'in the 2000 census']\", \"FILTER['#3', 'in the 2000 census']\", \"AGGREGATE['count', '#4']\", \"AGGREGATE['count', '#5']\", \"ARITHMETIC['sum', '#6', '#7']\"]"}
{"id": "DROP_dev_history_2188_399d1a7c-eebd-4fbf-8110-37d74032bab3", "input": "How many in percent from the census weren't of united states?", "output": "[\"SELECT['the census']\", \"PROJECT['those from the united states of #REF', '#1']\", \"PROJECT['percent of #REF', '#2']\", \"PROJECT['the difference of 100 percent and #REF', '#3']\"]"}
{"id": "DROP_dev_history_2188_420c9197-ccfb-4354-8f62-0f9ea5282d17", "input": "How many in percent in the county from the census of 2000 weren't German?", "output": "[\"SELECT['the county census of 2000']\", \"PROJECT['those that were German of #REF', '#1']\", \"PROJECT['percent of #REF', '#2']\", \"PROJECT['the difference of 100 percent and #REF', '#3']\"]"}
{"id": "DROP_dev_history_2188_57b67f40-2e96-4028-afee-824865565ce1", "input": "In the county according to the 2000 census, which group is smaller: people or households?", "output": "[\"SELECT['groups In the 2000 census']\", \"FILTER['#1', 'that are people']\", \"FILTER['#1', 'that are households']\", \"PROJECT['size of #REF', '#2']\", \"PROJECT['size of #REF', '#3']\", \"COMPARISON['max', '#4', '#5']\"]"}
{"id": "DROP_dev_history_2188_a6389e88-d39a-41b3-873f-4011b1d70457", "input": "In the county according to the 2000 census, which group is larger: people or households?", "output": "[\"SELECT['groups In the 2000 census']\", \"FILTER['#1', 'that are people']\", \"FILTER['#1', 'that are households']\", \"PROJECT['size of #REF', '#2']\", \"PROJECT['size of #REF', '#3']\", \"COMPARISON['max', '#4', '#5']\"]"}
{"id": "DROP_dev_history_2188_ccb7bedf-3002-4e11-86ea-0ff957be29a5", "input": "How many more percentages of people were germans compared to irish?", "output": "[\"SELECT['people']\", \"FILTER['#1', 'that were germans']\", \"FILTER['#1', 'that were irish']\", \"PROJECT['percentage of #REF', '#2']\", \"PROJECT['percentage of #REF', '#3']\", \"ARITHMETIC['difference', '#4', '#5']\"]"}
{"id": "DROP_dev_history_2188_ceb6aa17-0e69-4b48-9814-aadd02795fbe", "input": "In the county according to the 2000 census, which group is smaller: people or families?", "output": "[\"SELECT['the 2000 census']\", \"PROJECT['people of #REF', '#1']\", \"PROJECT['families of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"COMPARISON['min', '#4', '#5']\"]"}
{"id": "DROP_dev_history_2188_cfa00e24-c565-439c-96ec-e76383631a66", "input": "In the county according to the 2000 census, which group is larger: people or families?", "output": "[\"SELECT['the 2000 census']\", \"PROJECT['people of #REF', '#1']\", \"PROJECT['families of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"COMPARISON['max', '#4', '#5']\"]"}
{"id": "DROP_dev_history_2196_03074e4c-5e32-4625-8934-78dec716e3f1", "input": "How many homes out of 19,306 consisted of non-families?", "output": "[\"SELECT['homes']\", \"FILTER['#1', 'that consisted of non-families']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_history_2196_0fa46d12-b4a8-4873-a8b2-99d4ddba04ff", "input": "As of 2000, which group for households is larger: married couples living together or non-families?", "output": "[\"SELECT['households in 2000']\", \"FILTER['#1', 'that are married couples living together']\", \"FILTER['#1', 'that are non-families']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"COMPARISON['max', '#4', '#5']\"]"}
{"id": "DROP_dev_history_2196_10ed065e-4376-49e2-9d1e-6353f13bb4f8", "input": "How many people larger is the average family size than the average household size?", "output": "[\"SELECT['families']\", \"PROJECT['size of #REF', '#1']\", \"AGGREGATE['avg', '#2']\", \"SELECT['households']\", \"PROJECT['size of #REF', '#4']\", \"AGGREGATE['avg', '#5']\", \"ARITHMETIC['difference', '#3', '#6']\"]"}
{"id": "DROP_dev_history_2196_4bbb6f57-2118-4f9c-94d9-7cf3f37fa0fa", "input": "As of 2000, which group for households is smaller: married couples living together or made up of individuals?", "output": "[\"SELECT['households']\", \"FILTER['#1', 'in 2000']\", \"FILTER['#2', 'that are married couples living together']\", \"FILTER['#2', 'that are made up of individuals']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"COMPARISON['min', '#5', '#6']\"]"}
{"id": "DROP_dev_history_2196_4c3a97cc-6c26-480c-b555-de4c53fda310", "input": "As of 2000, how many in percent of households had someone living alone who wasn't 65 years of age or older?", "output": "[\"SELECT['households']\", \"FILTER['#1', 'that had someone living alone']\", \"FILTER['#2', 'who was 65 years of age or older']\", \"FILTER['#3', 'As of 2000']\", \"PROJECT['percent of #REF', '#4']\", \"PROJECT['difference of 100 and #REF', '#5']\"]"}
{"id": "DROP_dev_history_2196_54abf62e-23c6-49eb-84c9-a6c4f38c5059", "input": "As of 2000, how many in percent of households had a female householder with a husband present?", "output": "[\"SELECT['households']\", \"FILTER['#1', 'that had a female householder']\", \"FILTER['#2', 'with a husband present']\", \"FILTER['#3', 'As of 2000']\", \"PROJECT['percent of #REF', '#4']\"]"}
{"id": "DROP_dev_history_2196_5ff917c0-8ebc-4b03-baad-4deee565b508", "input": "How many percent of households as of 2000 were not married couples living together?", "output": "[\"SELECT['households']\", \"FILTER['#1', 'in 2000']\", \"FILTER['#2', 'that were married couples living together']\", \"PROJECT['percent of #REF', '#3']\", \"PROJECT['difference of 100 and #REF', '#4']\"]"}
{"id": "DROP_dev_history_2196_69ef3d8a-bbb7-462f-9519-ff32941b51da", "input": "How many percent of households did not have children under the age of 18 living with them?", "output": "[\"SELECT['households']\", \"FILTER['#1', 'that did have children under the age of 18 living with them']\", \"PROJECT['percent of #REF', '#2']\", \"PROJECT['difference of 100 and #REF', '#3']\"]"}
{"id": "DROP_dev_history_2196_c91c3b0f-c77c-41f9-bd9a-d5cc0e897783", "input": "How many percent of households in 2000 did not have someone 65 years or older living alone?", "output": "[\"SELECT['households']\", \"FILTER['#1', 'in 2000']\", \"FILTER['#2', 'that did have someone 65 years or older living alone']\", \"PROJECT['percent of #REF', '#3']\", \"PROJECT['difference of 100 and #REF', '#4']\"]"}
{"id": "DROP_dev_history_2196_e9ab8e1a-fea8-45cd-ad6b-19559bf39062", "input": "How many more percent are married couples than non-families?", "output": "[\"SELECT['married couples']\", \"SELECT['non-families']\", \"PROJECT['percent of #REF', '#1']\", \"PROJECT['percent of #REF', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "DROP_dev_history_2196_f09257e6-b661-4e27-90fa-71e2915f1eda", "input": "How many percent of households in 2000 did not have a household made up individuals?", "output": "[\"SELECT['households in 2000']\", \"FILTER['#1', 'that are made up of individuals']\", \"PROJECT['percent of #REF', '#2']\", \"PROJECT['the difference of 100 percent and #REF', '#3']\"]"}
{"id": "DROP_dev_history_2196_fa780708-3025-423a-a7c6-0c12274106a2", "input": "Which group for households is smaller: married couples living together or non-families?", "output": "[\"SELECT['groups for households']\", \"PROJECT['size of #REF', '#1']\", \"COMPARATIVE['#2', '#1', 'is married couples living together']\", \"COMPARATIVE['#2', '#1', 'is non-families']\", \"COMPARISON['min', '#3', '#4']\"]"}
{"id": "DROP_dev_history_2199_716959bd-3180-40e9-acbd-033106766db5", "input": "What two players scored 11 Test centuries against Australia?", "output": "[\"SELECT['players']\", \"PROJECT['Test centuries scored against Australia of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is 11']\"]"}
{"id": "DROP_dev_history_2199_f7819d7b-bf66-4963-beaa-6c39dec5e9a9", "input": "Who crossed the 50-run mark the most number of times in Test cricket history, Tendulkar or Allan Border?", "output": "[\"SELECT['Tendulkar']\", \"SELECT['Allan Border']\", \"PROJECT['times crossed the 50-run mark of #REF', '#1']\", \"PROJECT['times crossed the 50-run mark of #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"COMPARISON['max', '#5', '#6']\"]"}
{"id": "DROP_dev_history_221_476c2e96-9367-40e5-80c5-fe90642ced40", "input": "How many days did they spend killing regular civilians of the city?", "output": "[\"SELECT['the killing of regular civilians of the city']\", \"PROJECT['days of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_history_221_a9ba89e1-5c3c-46c0-bf42-423463aef78f", "input": "What did the Bergamo city fear would happen to them?", "output": "[\"SELECT['the Bergamo city']\", \"PROJECT['fear of #REF', '#1']\"]"}
{"id": "DROP_dev_history_221_c1a7bcdf-8236-45db-93cd-a1b0b39f652f", "input": "What happened during the War of the League of Cambrai", "output": "[\"SELECT['the War of the League of Cambrai']\", \"PROJECT['what happened during #REF', '#1']\"]"}
{"id": "DROP_dev_history_2234_3778ff16-fcb9-4008-89dd-1053235875d2", "input": "How many more members di the party have in 1947 compared to 1929?", "output": "[\"SELECT['party']\", \"PROJECT['members of #REF', '#1']\", \"FILTER['#2', 'in 1947']\", \"FILTER['#2', 'in 1929']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['difference', '#5', '#6']\"]"}
{"id": "DROP_dev_history_2234_a2ea2d15-157c-495e-8078-7634045e0643", "input": "How many members did the party lose 1933 to 1939?", "output": "[\"SELECT['the party']\", \"PROJECT['members of #REF', '#1']\", \"FILTER['#2', 'in 1933']\", \"FILTER['#2', 'in 1939']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['difference', '#6', '#5']\"]"}
{"id": "DROP_dev_history_2258_800d3b41-91bf-4af2-b460-7d92437433c2", "input": "Was the total fertility rate in Guatemala higher in 2000 or in 2006?", "output": "[\"SELECT['Guatemala']\", \"PROJECT['fertility rate in 2000 of #REF', '#1']\", \"GROUP['sum', '#2', '#1']\", \"PROJECT['fertility rate in 2006 of #REF', '#1']\", \"GROUP['sum', '#4', '#1']\", \"COMPARISON['max', '#3', '#5']\"]"}
{"id": "DROP_dev_history_227_6672ab00-d4e7-483c-8ec9-bc4958dcad01", "input": "How many people were lost in the peninsula as a result of the war?", "output": "[\"SELECT['the peninsula']\", \"PROJECT['people of #REF', '#1']\", \"FILTER['#2', 'that were lost as a result of the war']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_history_227_6b6b2bb9-ee2f-4aa5-99f4-cc064bd31aa0", "input": "Approximately how many Venetians perished in the war?", "output": "[\"SELECT['Venetians']\", \"FILTER['#1', 'that perished']\", \"FILTER['#2', 'in the war']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_history_227_6de294c6-ff05-4e8d-96c8-f72ff65fd2df", "input": "How many more people lived in the area in 1708 compared to the pre-war population?", "output": "[\"SELECT['the area']\", \"PROJECT['people lived in #REF', '#1']\", \"FILTER['#2', 'in 1708']\", \"PROJECT['the pre-war population of #REF', '#1']\", \"AGGREGATE['count', '#3']\", \"ARITHMETIC['difference', '#5', '#4']\"]"}
{"id": "DROP_dev_history_227_78330072-09f3-4606-8590-ca1900b01093", "input": "What were the names of the seats of the provinces of Morea?", "output": "[\"SELECT['Morea']\", \"PROJECT['provinces of #REF', '#1']\", \"PROJECT['seats of #REF', '#2']\", \"PROJECT['names of #REF', '#3']\"]"}
{"id": "DROP_dev_history_227_bc94d5da-bedc-4713-afd4-b6014391d766", "input": "How many many people were in the peninsula compared to a pre-war population?", "output": "[\"SELECT['the peninsula']\", \"PROJECT['people of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"SELECT['the pre-war population']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "DROP_dev_history_227_cce22857-b00e-451a-8594-5450b38b64e7", "input": "Which province of the Kingdom of the Morea had a seat at Navarino?", "output": "[\"SELECT['the Kingdom of Morea']\", \"PROJECT['province of #REF', '#1']\", \"FILTER['#2', 'that had a seat at Navarino']\"]"}
{"id": "DROP_dev_history_2270_0ec43a88-b174-4aa9-ba47-8fe1be941999", "input": "How many people live in Lausanne?", "output": "[\"SELECT['Lausanne']\", \"PROJECT['people of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_history_2270_3f9cfa58-21f9-4b90-8fe7-7d984b23cb65", "input": "How many more people are there 60 and over than there are 19 and under?", "output": "[\"SELECT['people']\", \"FILTER['#1', 'that are 60 and over']\", \"FILTER['#1', 'that are 19 and under']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"ARITHMETIC['difference', '#4', '#5']\"]"}
{"id": "DROP_dev_history_2270_799246c9-454c-46f4-873f-54c28eadadf5", "input": "Which groups had between 20000 and 25000 people?", "output": "[\"SELECT['groups']\", \"PROJECT['people of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is at least 20000']\", \"COMPARATIVE['#1', '#3', 'is at most 25000']\", \"INTERSECTION['#1', '#4', '#5']\"]"}
{"id": "DROP_dev_history_2270_89eaea07-95a6-42af-8279-516c03eaa933", "input": "Are there more people between 20 and 29, or between 30 and 39?", "output": "[\"SELECT['people']\", \"FILTER['#1', 'betweenleftside 20']\", \"FILTER['#2', 'betweenrightside 29']\", \"FILTER['#1', 'betweenleftside 30']\", \"FILTER['#4', 'betweenrightside 39']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#5']\", \"COMPARISON['max', '#6', '#7']\"]"}
{"id": "DROP_dev_history_2270_d06dff8c-f730-4a3b-b6f7-af4957c830ee", "input": "Were there more people between 20 and 40 or between 40 and 60?", "output": "[\"SELECT['people']\", \"FILTER['#1', 'betweenleftside 20']\", \"FILTER['#2', 'betweenrightside 40']\", \"FILTER['#1', 'betweenleftside 40']\", \"FILTER['#4', 'betweenrightside 60']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#5']\", \"COMPARISON['max', '#6', '#7']\"]"}
{"id": "DROP_dev_history_2270_eb447dd3-169e-4bad-92fc-e457f2137681", "input": "Which group had the second highest number of people?", "output": "[\"SELECT['groups']\", \"PROJECT['people of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"SUPERLATIVE['max', '#1', '#3']\", \"DISCARD['#1', '#4']\", \"SUPERLATIVE['max', '#5', '#3']\"]"}
{"id": "DROP_dev_history_2270_f841ad8c-7591-49db-8c92-3d97a4614e31", "input": "In Lausanne are their fewer children or teenagers?", "output": "[\"SELECT['Lausanne']\", \"PROJECT['children of #REF', '#1']\", \"PROJECT['teenagers of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"COMPARISON['min', '#4', '#5']\"]"}
{"id": "DROP_dev_history_2270_f9895ceb-80f3-4078-8994-a08545b9d1af", "input": "Are more people between the ages of 30 to 49 or 10 to 29?", "output": "[\"SELECT['people']\", \"PROJECT['ages of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is at least 30']\", \"COMPARATIVE['#1', '#2', 'is at most 49']\", \"COMPARATIVE['#1', '#2', 'is at least 10']\", \"COMPARATIVE['#1', '#2', 'is at most 29']\", \"INTERSECTION['#1', '#3', '#4']\", \"INTERSECTION['#1', '#5', '#6']\", \"AGGREGATE['count', '#7']\", \"AGGREGATE['count', '#8']\", \"COMPARISON['max', '#9', '#10']\"]"}
{"id": "DROP_dev_history_228_16e4b810-0779-447e-98e2-fb80a94540d3", "input": "How many akinjis didn't return home alive?", "output": "[\"SELECT['akinjis']\", \"FILTER['#1', 'that did return home alive']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "DROP_dev_history_228_62e99d8c-586a-4631-acaf-d2ed1e8a7905", "input": "How many of the akinjis died?", "output": "[\"SELECT['akinjis']\", \"FILTER['#1', 'that died']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_history_228_6cabea52-3a20-4b1f-a1c5-79d14c10c63f", "input": "What were the akinjis doing that ultimately got most of them killed?", "output": "[\"SELECT['the akinjis']\", \"PROJECT['what were #REF doing', '#1']\", \"FILTER['#2', 'that ultimately got most of them killed']\"]"}
{"id": "DROP_dev_history_2298_5af72816-96bd-4970-8052-1cc83ba6fda0", "input": "How many years did France use instances of napalm during the Algerian War of Independence?", "output": "[\"SELECT['France uses instances of napalm during the Algerian War of Independence']\", \"PROJECT['years of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_history_2298_6798db12-e7c5-45e9-ad28-81cddfcda3d9", "input": "Which country were napalms used in first, Nigeria or Egypt?", "output": "[\"SELECT['napalm was used in Nigeria']\", \"SELECT['napalm was used in Egypt']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"COMPARISON['min', '#3', '#4']\"]"}
{"id": "DROP_dev_history_2298_7f3056c5-d276-4b3d-933e-0de7ef9e4edd", "input": "How many wars happened from 1980 to 1988?", "output": "[\"SELECT['wars']\", \"PROJECT['when was #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is at least 1980']\", \"COMPARATIVE['#1', '#2', 'is at most 1988']\", \"INTERSECTION['#1', '#3', '#4']\", \"AGGREGATE['count', '#5']\"]"}
{"id": "DROP_dev_history_2298_92ae64d4-f6c5-44d9-9fc7-16d39d9f239d", "input": "What two wars were happening in 1967?", "output": "[\"SELECT['wars']\", \"PROJECT['when were #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is 1967']\"]"}
{"id": "DROP_dev_history_2298_93944496-8d4b-49d5-8c78-a4f1ac8c544a", "input": "What two countries were napalm used in the period from 1980 to 1988?", "output": "[\"SELECT['countries']\", \"PROJECT['when was napalm used in #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is at least 1980']\", \"COMPARATIVE['#1', '#2', 'is at most 1988']\", \"INTERSECTION['#1', '#3', '#4']\"]"}
{"id": "DROP_dev_history_2298_b61cb679-02a8-4de0-8adf-5a79aa0485f4", "input": "How many areas used napalm in only one year?", "output": "[\"SELECT['areas']\", \"PROJECT['years napalm was used of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is one year']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "DROP_dev_history_2298_e5bf6712-e837-4399-8c24-b3bb678f1c86", "input": "Did Egypt or Israel use napalm first?", "output": "[\"SELECT['Egypt did use napalm']\", \"SELECT['Israel did use napalm']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"COMPARISON['min', '#3', '#4']\"]"}
{"id": "DROP_dev_history_2298_f5575f5a-a5db-4f50-b6b5-a72b5e618f3d", "input": "How many years did the First Indochina War last?", "output": "[\"SELECT['First Indochina War']\", \"PROJECT['years of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_history_2298_f76831ea-0a1a-4abc-a47a-707ad0f96bb9", "input": "How many years did Morocco use napalm during the Western Sahara War?", "output": "[\"SELECT['Morocco use napalm during the Western Sahara War']\", \"PROJECT['years of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_history_23_0686d1f9-4a8e-4031-b665-49d425afb777", "input": "What kind of people were on the ships that arrived at St. Croix in August?", "output": "[\"SELECT['ships']\", \"FILTER['#1', 'that arrived at St. Croix in August']\", \"PROJECT['kind of people of #REF', '#2']\"]"}
{"id": "DROP_dev_history_23_66b85717-e254-45d7-808a-9ce2c9308ac6", "input": "What day did two french ships arrive at St. John?", "output": "[\"SELECT['two french ships did arrive at St. John']\", \"PROJECT['day of #REF', '#1']\"]"}
{"id": "DROP_dev_history_23_9d5b3589-d92c-46d8-8a22-0412f7d2d306", "input": "When year two french ships arrive at St. John?", "output": "[\"SELECT['two french ships arrive at St. John']\", \"PROJECT['year of #REF', '#1']\"]"}
{"id": "DROP_dev_history_2339_aa8755e8-2cee-4c31-8b5d-f2ea5923134e", "input": "How many years after the economics of Serbia and Montenegro entered a prolonged decline did it start showing signs of recovery?", "output": "[\"SELECT['the economics of Serbia and Montenegro entered a prolonged decline']\", \"SELECT['it did start showing signs of recovery']\", \"PROJECT['year of #REF', '#1']\", \"PROJECT['year of #REF', '#2']\", \"ARITHMETIC['difference', '#4', '#3']\"]"}
{"id": "DROP_dev_history_2361_6406a4e8-2ee7-4d56-b479-d5e8f1a6c96c", "input": "How many years after wild grains began being harvested was the potato domesticated, at its earliest?", "output": "[\"SELECT['wild grains began being harvested']\", \"SELECT['the potato was domesticated']\", \"PROJECT['year of #REF', '#1']\", \"PROJECT['years of #REF', '#2']\", \"AGGREGATE['min', '#4']\", \"ARITHMETIC['difference', '#5', '#3']\"]"}
{"id": "DROP_dev_history_2380_61b43b8f-017d-40b7-8287-11ea2576d049", "input": "How many more games did Baltimore win than lose during the season?", "output": "[\"SELECT['Baltimore']\", \"PROJECT['games in the season of #REF', '#1']\", \"FILTER['#2', 'that Baltimore win']\", \"FILTER['#2', 'that Baltimore lose']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['difference', '#5', '#6']\"]"}
{"id": "DROP_dev_history_2380_6490a684-c717-4a51-aa10-038e4976470e", "input": "How many games did the Ravens lose in the first month of the season?", "output": "[\"SELECT['the Ravens']\", \"PROJECT['games of #REF', '#1']\", \"FILTER['#2', 'in the first month of the season']\", \"FILTER['#3', 'that the Ravens lose']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "DROP_dev_history_2380_a86c1cca-3af3-41e9-bffc-4a9fe8d9bb19", "input": "How many more points did the Ravens win by against Denver compared to their win against the Jets?", "output": "[\"SELECT['Ravens']\", \"PROJECT['points that #REF win by', '#1']\", \"FILTER['#2', 'against Denver']\", \"FILTER['#2', 'against the Jets']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "DROP_dev_history_2380_be4b3c8f-8e90-47f8-a4bc-b569e8ed833f", "input": "How many points did Baltimore beat the Jets by in their first game?", "output": "[\"SELECT['Baltimore']\", \"SELECT['the Jets']\", \"PROJECT['points of #REF', '#1']\", \"PROJECT['points of #REF', '#2']\", \"FILTER['#3', 'in their first game']\", \"FILTER['#4', 'in their first game']\", \"ARITHMETIC['difference', '#5', '#6']\"]"}
{"id": "DROP_dev_history_2380_c3d501f6-868c-4516-acfb-58a1096e5e4d", "input": "Did the Ravens score more points in week 3 or in week 4?", "output": "[\"SELECT['the Ravens']\", \"PROJECT['points of #REF', '#1']\", \"FILTER['#2', 'in week 3']\", \"FILTER['#2', 'in week 4']\", \"AGGREGATE['sum', '#3']\", \"AGGREGATE['sum', '#4']\", \"COMPARISON['max', '#5', '#6']\"]"}
{"id": "DROP_dev_history_2380_ddb04730-1656-4d56-bc4b-b3be9b469baf", "input": "How many points did the Ravens score in their two highest scoring games?", "output": "[\"SELECT['the Ravens']\", \"PROJECT['games of #REF', '#1']\", \"PROJECT['scores of #REF', '#2']\", \"AGGREGATE['max', '#3']\", \"DISCARD['#3', '#4']\", \"AGGREGATE['max', '#5']\", \"ARITHMETIC['sum', '#4', '#6']\"]"}
{"id": "DROP_dev_history_2390_29648c25-d6fb-4ab3-a8ed-c38e3e493968", "input": "How many fewer Soviet prisoners of war were in the official totals than in the Finish estmates?", "output": "[\"SELECT['Soviet prisoners of war']\", \"AGGREGATE['sum', '#1']\", \"PROJECT['the Finish estmates of #REF', '#1']\", \"ARITHMETIC['difference', '#2', '#3']\"]"}
{"id": "DROP_dev_history_2390_4445e01a-164b-46ff-aced-6bf497cdc6b9", "input": "How many more men did the Finnish estimate were prisoners of war compared to the official number from the Soviet Union?", "output": "[\"SELECT['men']\", \"FILTER['#1', 'that were prisoners of war']\", \"PROJECT['the Finnish estimate of #REF', '#2']\", \"PROJECT['the official number from the Soviet Union of #REF', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "DROP_dev_history_2390_db37b6ec-35e0-4923-b667-c43508ae5178", "input": "Were more German casualties killed or missing?", "output": "[\"SELECT['German casualties']\", \"FILTER['#1', 'killed']\", \"FILTER['#1', 'missing']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"COMPARISON['max', '#4', '#5']\"]"}
{"id": "DROP_dev_history_241_08eff0f5-c75a-4bdc-b09c-b29aa3d83cd0", "input": "What happened first, the French Revolution or the Battle of Aidenbach?", "output": "[\"SELECT['the French Revolution']\", \"SELECT['the Battle of Aidenbach']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"COMPARISON['min', '#3', '#4']\"]"}
{"id": "DROP_dev_history_241_0ac9c4ec-9ef4-429b-970a-9af43bdb672b", "input": "How many regions did the popular uprising start in?", "output": "[\"SELECT['the popular uprising']\", \"PROJECT['the start of #REF', '#1']\", \"PROJECT['regions of #REF', '#2']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_history_241_0bd29555-3714-4699-be22-89fe0934ee01", "input": "How many days passed between the Sendling Christmas Day Massacre and the Battle of Aidenbach?", "output": "[\"SELECT['the Sendling Christmas day Massacre']\", \"SELECT['the Battle of Aidenbach']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "DROP_dev_history_241_39b1772e-28ba-44d4-be18-52f24d87bf09", "input": "what is the difference in casualty numbers between Bavarian and Austrian?", "output": "[\"SELECT['Bavarian casualties']\", \"SELECT['Austrian casualties']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"ARITHMETIC['difference', '#4', '#3']\"]"}
{"id": "DROP_dev_history_241_68d02b1b-285b-4e37-83b0-34b3d403c976", "input": "Which country had most deaths?", "output": "[\"SELECT['countries']\", \"PROJECT['deaths of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"SUPERLATIVE['max', '#1', '#3']\"]"}
{"id": "DROP_dev_history_241_8932b025-d69e-4110-ad18-13462761c791", "input": "How many days after the Braunau Parliament meeting was the Sendling's Night of Murder?", "output": "[\"SELECT['the Braunau Parliament meeting']\", \"SELECT['the Sendling s Night of Murder']\", \"PROJECT['when was #REF', '#1']\", \"PROJECT['when was #REF', '#2']\", \"ARITHMETIC['difference', '#4', '#3']\"]"}
{"id": "DROP_dev_history_241_9c99ae46-9e98-4e8a-ae30-09c0c96c97e9", "input": "How many more deaths occurred on the Bavarian side than on the Austrian side?", "output": "[\"SELECT['the Bavarian side']\", \"SELECT['the Austrian side']\", \"PROJECT['deaths occurred on #REF', '#1']\", \"PROJECT['deaths occurred on #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['difference', '#5', '#6']\"]"}
{"id": "DROP_dev_history_2412_20bce397-9176-4d2b-8c22-35d85541e054", "input": "How many of the 72 high-rises in the city were built after 2000?", "output": "[\"SELECT['high-rises in the city']\", \"PROJECT['when was #REF built', '#1']\", \"COMPARATIVE['#1', '#2', 'is higher than 2000']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_history_2412_480ad2be-bf69-423c-bb6d-feefe00d780d", "input": "How many more stories tall is Williams Tower than the Skanska building?", "output": "[\"SELECT['Williams Tower']\", \"PROJECT['stories of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"SELECT['the Skanska building']\", \"PROJECT['stories of #REF', '#4']\", \"AGGREGATE['count', '#5']\", \"ARITHMETIC['difference', '#3', '#6']\"]"}
{"id": "DROP_dev_history_2412_54b3be33-59da-4860-86b5-5c5c17833ee6", "input": "How many more millions of square feet of office space total is there than class A office space?", "output": "[\"SELECT['office space']\", \"SELECT['class A office space']\", \"PROJECT['millions of square feet of #REF', '#1']\", \"PROJECT['millions of square feet of #REF', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "DROP_dev_history_2412_9fadc4cd-89cd-43a8-8381-9c69ca11572a", "input": "How many of the 72 high rises in Houston were built before the year 2000?", "output": "[\"SELECT['Houston']\", \"PROJECT['high rises of #REF', '#1']\", \"PROJECT['years built in of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is lower than 2000']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "DROP_dev_history_2417_bb86df26-a545-45ca-a0da-6173c26449fb", "input": "How many more people speak Hungarian as a first language than a second language?", "output": "[\"SELECT['people']\", \"FILTER['#1', 'that speak Hungarian as a first language']\", \"FILTER['#1', 'that speak Hungarian as a second language']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"ARITHMETIC['difference', '#4', '#5']\"]"}
{"id": "DROP_dev_history_2434_189c7f8f-7a06-4106-b907-90a3fe530228", "input": "In 2000, which federal entities had between $20000 and $30000 per capita GDP?", "output": "[\"SELECT['federal entities']\", \"PROJECT['per capita GDP in $ of #REF', '#1']\", \"FILTER['#2', 'in 2000']\", \"COMPARATIVE['#1', '#3', 'is at least $ 20000']\", \"COMPARATIVE['#1', '#3', 'is at most $ 30000']\", \"INTERSECTION['#1', '#4', '#5']\"]"}
{"id": "DROP_dev_history_2434_7b68915e-a17e-4bd8-b200-2777553a195c", "input": "Which is the state with the third highest GDP growth rate?", "output": "[\"SELECT['states']\", \"PROJECT['GDP growth rates of #REF', '#1']\", \"SUPERLATIVE['max', '#1', '#2']\", \"DISCARD['#1', '#3']\", \"SUPERLATIVE['max', '#4', '#2']\", \"DISCARD['#4', '#5']\", \"SUPERLATIVE['max', '#6', '#2']\"]"}
{"id": "DROP_dev_history_2453_b9da7d2f-a86a-4259-aa1d-0a0951ccf119", "input": "Who paid the least amount of a relatives rank; eldest sons or widows?", "output": "[\"SELECT['eldest sons']\", \"SELECT['widows']\", \"PROJECT['amount paid of a relatives rank of #REF', '#1']\", \"PROJECT['amount paid of a relatives rank of #REF', '#2']\", \"COMPARISON['min', '#3', '#4']\"]"}
{"id": "DROP_dev_history_2456_256a7939-557b-425f-b311-f4e517fcbdd3", "input": "How many fewer US dollars was the Russian military budget in 2014 than it was be in 2015?", "output": "[\"SELECT['Russian military budgets']\", \"FILTER['#1', 'that is in 2014']\", \"FILTER['#1', 'that is in 2015']\", \"PROJECT['US dollars of #REF', '#2']\", \"PROJECT['US dollars of #REF', '#3']\", \"ARITHMETIC['difference', '#5', '#4']\"]"}
{"id": "DROP_dev_history_2474_06e6b835-f954-46cc-8096-1d2862099c4a", "input": "How many total yards did Tom Rathman have?", "output": "[\"SELECT['Tom Rathman']\", \"PROJECT['yards of #REF', '#1']\", \"AGGREGATE['sum', '#2']\"]"}
{"id": "DROP_dev_history_2474_2916cf1b-3a53-451e-9174-8b3fa5c0ab70", "input": "Which player had more touchdowns, Craig or Rice?", "output": "[\"SELECT['Craig']\", \"PROJECT['touchdowns of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"SELECT['Rice']\", \"PROJECT['touchdowns of #REF', '#4']\", \"AGGREGATE['count', '#5']\", \"COMPARISON['max', '#3', '#6']\"]"}
{"id": "DROP_dev_history_2474_2d74a2ac-207c-4f6f-8855-781457eb7101", "input": "Who finished the NFL season with more yards: Montana or Craig?", "output": "[\"SELECT['Montana']\", \"SELECT['Craig']\", \"PROJECT['yards in the NFL season of #REF', '#1']\", \"PROJECT['yards in the NFL season of #REF', '#2']\", \"AGGREGATE['sum', '#3']\", \"AGGREGATE['sum', '#4']\", \"COMPARISON['max', '#5', '#6']\"]"}
{"id": "DROP_dev_history_2474_608fc9f3-9f88-4b87-8462-76477e216bbc", "input": "How many more receptions were scored by Craig than by Rice?", "output": "[\"SELECT['receptions']\", \"FILTER['#1', 'of Craig']\", \"FILTER['#1', 'of Rice']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"ARITHMETIC['difference', '#4', '#5']\"]"}
{"id": "DROP_dev_history_2474_6f579268-78fa-4887-84ea-2ee4ba68f8cf", "input": "Who scored more touchdowns, Rice or Craig?", "output": "[\"SELECT['Rice']\", \"PROJECT['touchdowns of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"SELECT['Craig']\", \"PROJECT['touchdowns of #REF', '#4']\", \"AGGREGATE['count', '#5']\", \"COMPARISON['max', '#3', '#6']\"]"}
{"id": "DROP_dev_history_2474_77039573-024b-4fa3-be57-06e86861df98", "input": "Who had more rushing yards, Montana or Tom Rathman?", "output": "[\"SELECT['Montana']\", \"PROJECT['rushing yards of #REF', '#1']\", \"AGGREGATE['sum', '#2']\", \"SELECT['Tom Rathman']\", \"PROJECT['rushing yards of #REF', '#4']\", \"AGGREGATE['sum', '#5']\", \"COMPARISON['max', '#3', '#6']\"]"}
{"id": "DROP_dev_history_2474_ac633f01-14e7-4c02-97a9-857082c694a6", "input": "Which player scored more touchdowns than Craig and John Taylor combined?", "output": "[\"SELECT['Craig']\", \"SELECT['John Taylor']\", \"PROJECT['touchdowns of #REF', '#1']\", \"PROJECT['touchdowns of #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['sum', '#5', '#6']\", \"SELECT['players']\", \"PROJECT['touchdowns of #REF', '#8']\", \"COMPARATIVE['#8', '#9', 'is higher than #7']\"]"}
{"id": "DROP_dev_history_2474_dbf1cb90-7c9d-4a50-b67e-913164806927", "input": "Who finished the NFL with the 49ers with more touchdowns: Montana or Taylor?", "output": "[\"SELECT['Montana']\", \"SELECT['Taylor']\", \"PROJECT['touchdowns of #REF', '#1']\", \"PROJECT['touchdowns of #REF', '#2']\", \"FILTER['#3', 'with the 49ers']\", \"FILTER['#4', 'with the 49ers']\", \"AGGREGATE['count', '#5']\", \"AGGREGATE['count', '#6']\", \"COMPARISON['max', '#7', '#8']\"]"}
{"id": "DROP_dev_history_2530_060c47c9-5bb4-41c7-8a17-1bb8034b0f4c", "input": "How many more people, in percentage, are Islam rather than Christian?", "output": "[\"SELECT['Islam']\", \"PROJECT['percentage of #REF', '#1']\", \"SELECT['Christian']\", \"PROJECT['percentage of #REF', '#3']\", \"ARITHMETIC['difference', '#2', '#4']\"]"}
{"id": "DROP_dev_history_2530_1c7e95d9-49aa-40d2-b4f4-c7f9f328673a", "input": "How many more people lived in Tunis than Sfax?", "output": "[\"SELECT['Tunis']\", \"SELECT['Sfax']\", \"PROJECT['people of #REF', '#1']\", \"PROJECT['people of #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['difference', '#5', '#6']\"]"}
{"id": "DROP_dev_history_2530_7040bda7-b818-44bd-8f2e-3e2951334fdc", "input": "How many more, in percent, are males literate than females?", "output": "[\"SELECT['males']\", \"FILTER['#1', 'that are literate']\", \"SELECT['females']\", \"FILTER['#3', 'that are literate']\", \"PROJECT['percent of #REF', '#2']\", \"PROJECT['percent of #REF', '#4']\", \"ARITHMETIC['difference', '#5', '#6']\"]"}
{"id": "DROP_dev_history_2530_cb1a8759-1074-4c2b-b976-d7a89f4f87b4", "input": "What religions make up less than 5% of the population?", "output": "[\"SELECT['religions']\", \"PROJECT['population of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is lower than 5 %']\"]"}
{"id": "DROP_dev_history_254_14720a39-5dd9-498d-a922-8b77af3a4dff", "input": "For how many years did Ukraine agree to lease its facilities?", "output": "[\"SELECT['the Ukraine did agree to lease its facilities']\", \"PROJECT['years of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_history_254_3896aca7-5cf9-4c8d-913e-c0f6f629932a", "input": "For how many years from the original deadline was the lease extended?", "output": "[\"SELECT['the lease']\", \"PROJECT['year of the original deadline of #REF', '#1']\", \"PROJECT['year extended to of #REF', '#1']\", \"ARITHMETIC['difference', '#3', '#2']\"]"}
{"id": "DROP_dev_history_254_4844e1c8-a97f-419a-ad11-071fb8292965", "input": "How many years did Ukraine agree to lease major parts of the facilities to the Russian Black Sea", "output": "[\"SELECT['the Russian Black Sea']\", \"PROJECT['facilities to #REF', '#1']\", \"PROJECT['major parts of #REF', '#2']\", \"PROJECT['years that Ukraine agree to lease #REF', '#3']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "DROP_dev_history_254_69f0add7-09b8-4def-86f8-f196003f0159", "input": "How many years was the leasehold renegotiated for?", "output": "[\"SELECT['the leasehold']\", \"PROJECT['years renegotiated of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_history_254_e8caaba6-6e7c-4170-af2c-f2faf35154ff", "input": "How many years past the original date of 2017 is the lease now extended?", "output": "[\"SELECT['the lease']\", \"PROJECT['year extended to of #REF', '#1']\", \"PROJECT['the difference of #REF and 2017', '#2']\"]"}
{"id": "DROP_dev_history_254_f60c3de3-2541-4847-b20d-ab43cf2a07dd", "input": "How many years was the leasehold extended counting the optional extension after 2042?", "output": "[\"SELECT['the leasehold was extended counting the optional extension after 2042']\", \"PROJECT['years of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_history_2546_9f458845-1201-4ba8-9eb4-67fb45fd9b1e", "input": "How many percent of the vote was for the Swiss People's Party, the Liberal and the Green Party?", "output": "[\"SELECT['the Swiss People s Party']\", \"SELECT['the Liberal Party']\", \"SELECT['the Green Party']\", \"PROJECT['percent of the vote of #REF', '#1']\", \"PROJECT['percent of the vote of #REF', '#2']\", \"PROJECT['percent of the vote of #REF', '#3']\", \"ARITHMETIC['sum', '#4', '#5', '#6']\"]"}
{"id": "DROP_dev_history_2609_0ca05637-43b9-444f-9c0a-3d27a214d83d", "input": "How many more people were German than English or Danish?", "output": "[\"SELECT['people']\", \"FILTER['#1', 'that were German']\", \"FILTER['#1', 'that were English']\", \"FILTER['#1', 'that were Danish']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['sum', '#6', '#7']\", \"ARITHMETIC['difference', '#5', '#8']\"]"}
{"id": "DROP_dev_history_2609_139eab9d-3c2f-4d35-b562-b4520bb73c45", "input": "How many more household and housing units were there than families?", "output": "[\"SELECT['households']\", \"SELECT['housing units']\", \"SELECT['families']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"ARITHMETIC['sum', '#4', '#5']\", \"ARITHMETIC['difference', '#7', '#6']\"]"}
{"id": "DROP_dev_history_2609_8325b66f-987a-443c-9940-ed95c9d80d6c", "input": "How many more people were Swedish than English or Dutch?", "output": "[\"SELECT['people']\", \"FILTER['#1', 'that were Swedish']\", \"FILTER['#1', 'that were English']\", \"FILTER['#1', 'that were Dutch']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['sum', '#6', '#7']\", \"ARITHMETIC['difference', '#5', '#8']\"]"}
{"id": "DROP_dev_history_2609_af8c56be-3f79-45c1-8e9c-eb8f21777d13", "input": "Which groups are between 2000 and 3200 in size?", "output": "[\"SELECT['groups']\", \"PROJECT['sizes of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is at least 2000']\", \"COMPARATIVE['#1', '#2', 'is at most 3200']\", \"INTERSECTION['#1', '#3', '#4']\"]"}
{"id": "DROP_dev_history_2609_d6f9a757-8749-4aaa-8f29-feabe654c58b", "input": "Which ancestral group is larger: swedish or irish?", "output": "[\"SELECT['ancestral groups']\", \"FILTER['#1', 'that is swedish']\", \"FILTER['#1', 'that is irish']\", \"PROJECT['size of #REF', '#2']\", \"PROJECT['size of #REF', '#3']\", \"COMPARISON['max', '#4', '#5']\"]"}
{"id": "DROP_dev_history_2609_e243dd34-131c-4172-8a33-178f41013f39", "input": "Which ancestral group is larger: germans or swedish?", "output": "[\"SELECT['ancestral groups']\", \"FILTER['#1', 'that is the germans']\", \"FILTER['#1', 'that is the swedish']\", \"PROJECT['size of #REF', '#2']\", \"PROJECT['size of #REF', '#3']\", \"COMPARISON['max', '#4', '#5']\"]"}
{"id": "DROP_dev_history_2609_eb1581c9-d297-47aa-a54d-c30be2e81530", "input": "How many more people were German than Irish and Danish?", "output": "[\"SELECT['people']\", \"FILTER['#1', 'that were German']\", \"FILTER['#1', 'that were Irish']\", \"FILTER['#1', 'that were Danish']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['sum', '#6', '#7']\", \"ARITHMETIC['difference', '#5', '#8']\"]"}
{"id": "DROP_dev_history_2609_ef9ce2a5-7ca9-43af-bbd4-e4976e5141a1", "input": "Which groups are at least 3500 in size?", "output": "[\"SELECT['groups']\", \"PROJECT['sizes of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is higher than 3500']\"]"}
{"id": "DROP_dev_history_2619_a625695a-d2b9-4b56-a2f6-efecfb49161d", "input": "How many more large bears are there in Sweden compared to Finland?", "output": "[\"SELECT['Sweden']\", \"SELECT['Finland']\", \"PROJECT['large bears of #REF', '#1']\", \"PROJECT['large bears of #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['difference', '#5', '#6']\"]"}
{"id": "DROP_dev_history_2626_1b9e0b8b-9075-467d-b249-e34e28f09f05", "input": "How many percent of the population was not living below the poverty line?", "output": "[\"SELECT['the population']\", \"FILTER['#1', 'that was living below the poverty line']\", \"PROJECT['percent of #REF', '#2']\", \"PROJECT['difference of 100 and #REF', '#3']\"]"}
{"id": "DROP_dev_history_2642_4ba7e086-d9ea-4abd-803f-ce4bc9261de7", "input": "How many points lower was the fertility rate in 1999 in Hungary compared to what it is now experiencing?", "output": "[\"SELECT['Hungary']\", \"PROJECT['fertility rates of #REF', '#1']\", \"FILTER['#2', 'in 1999']\", \"FILTER['#2', 'that it is now experiencing']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "DROP_dev_history_2642_74bff066-bd5f-4b19-8e8a-01fab0991cb4", "input": "In 2015, how many percent of births were to married women?", "output": "[\"SELECT['births']\", \"FILTER['#1', 'In 2015']\", \"FILTER['#2', 'that were to married women']\", \"PROJECT['percent of #REF', '#3']\"]"}
{"id": "DROP_dev_history_2642_c0c88600-4eeb-47f8-b2b5-7d88d2f203fc", "input": "How many  years of life expectancy does women have than men in Hungary?", "output": "[\"SELECT['Hungary']\", \"PROJECT['women of #REF', '#1']\", \"PROJECT['men of #REF', '#1']\", \"PROJECT['life expectancy in years of #REF', '#2']\", \"PROJECT['life expectancy in years of #REF', '#3']\", \"ARITHMETIC['difference', '#4', '#5']\"]"}
{"id": "DROP_dev_history_2650_b06d3130-f65d-4da9-b87e-a20a62dd8191", "input": "How many of the Marines light tactical vehicle fleet by 2017 will not consist of the A2 series?", "output": "[\"SELECT['the Marines']\", \"PROJECT['the light tactical vehicle fleet of #REF', '#1']\", \"FILTER['#2', 'in 2017']\", \"FILTER['#3', 'that will consist of the A2 series']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['difference', '#5', '#6']\"]"}
{"id": "DROP_dev_history_2661_923c1673-9a62-4bef-9c45-6048d8f5ad09", "input": "Which year had the highest total population, 1950 or 1900?", "output": "[\"SELECT['1950']\", \"SELECT['1900']\", \"PROJECT['populations of #REF', '#1']\", \"PROJECT['populations of #REF', '#2']\", \"AGGREGATE['sum', '#3']\", \"AGGREGATE['sum', '#4']\", \"COMPARISON['max', '#5', '#6']\"]"}
{"id": "DROP_dev_history_2671_43b23e7d-a848-41f9-98b2-4d977b225c79", "input": "How many total people, households and families were there in 2000?", "output": "[\"SELECT['people']\", \"SELECT['households']\", \"SELECT['families']\", \"FILTER['#1', 'in 2000']\", \"FILTER['#2', 'in 2000']\", \"FILTER['#3', 'in 2000']\", \"AGGREGATE['count', '#4']\", \"AGGREGATE['count', '#5']\", \"AGGREGATE['count', '#6']\", \"ARITHMETIC['sum', '#7', '#8', '#9']\"]"}
{"id": "DROP_dev_history_2671_e270b56e-7e21-4b74-905d-3ac5aecfb27d", "input": "Which groups are between 4000 through 5800 in size?", "output": "[\"SELECT['groups']\", \"PROJECT['sizes of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is at least 4000']\", \"COMPARATIVE['#1', '#2', 'is at most 5800']\", \"INTERSECTION['#1', '#3', '#4']\"]"}
{"id": "DROP_dev_history_2676_24b74e17-31c6-450c-9b77-7e6c8519f703", "input": "How many more times did the Synchronicity album go platinum between 1984 and 2001?", "output": "[\"SELECT['the Synchronicity album']\", \"PROJECT['times platinum of #REF', '#1']\", \"FILTER['#2', 'in 1984']\", \"FILTER['#2', 'in 2001']\", \"ARITHMETIC['difference', '#4', '#3']\"]"}
{"id": "DROP_dev_history_2676_4ae63d91-02cb-4299-809d-4d7128520a87", "input": "How many total days was the gap between the two number 1 periods for the Synchronicity album?", "output": "[\"SELECT['the Synchronicity album']\", \"PROJECT['the two number 1 periods of #REF', '#1']\", \"PROJECT['days of #REF', '#2']\", \"PROJECT['the difference of #REF', '#3']\"]"}
{"id": "DROP_dev_nfl_1021_581a25ed-56ca-4be7-aa0f-260959f3dd74", "input": "How many yards difference was Jay Cutler’s first touchdown pass compared to his second?", "output": "[\"SELECT['Jay Cutler']\", \"PROJECT['touchdown passes of #REF', '#1']\", \"AGGREGATE['min', '#2']\", \"PROJECT['the second of #REF', '#2']\", \"PROJECT['yards of #REF', '#3']\", \"PROJECT['yards of #REF', '#4']\", \"ARITHMETIC['difference', '#5', '#6']\"]"}
{"id": "DROP_dev_nfl_1021_f8d43ba3-89bf-4c31-b3b4-c4b24725c214", "input": "How many yards difference was Michael Pittman’s last touchdown run compared to his first?", "output": "[\"SELECT['Michael Pittman']\", \"PROJECT['touchdown runs of #REF', '#1']\", \"AGGREGATE['max', '#2']\", \"AGGREGATE['min', '#2']\", \"PROJECT['yards of #REF', '#3']\", \"PROJECT['yards of #REF', '#4']\", \"ARITHMETIC['difference', '#5', '#6']\"]"}
{"id": "DROP_dev_nfl_104_2d43aca4-9996-4bb0-99aa-8009591f76bb", "input": "How many yards longer was the longest field goal over the second longest?", "output": "[\"SELECT['field goals']\", \"PROJECT['yards of #REF', '#1']\", \"AGGREGATE['max', '#2']\", \"AGGREGATE['max', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "DROP_dev_nfl_104_a565bddc-a727-4956-b14e-6e6d6f57abd9", "input": "Which player had the longest touchdown?", "output": "[\"SELECT['players']\", \"PROJECT['touchdowns of #REF', '#1']\", \"SUPERLATIVE['max', '#1', '#2']\"]"}
{"id": "DROP_dev_nfl_104_a71a910f-f2e0-412a-846d-b49fcce5b79f", "input": "Who completed the longest field goal?", "output": "[\"SELECT['field goals']\", \"AGGREGATE['max', '#1']\", \"PROJECT['who completed #REF', '#2']\"]"}
{"id": "DROP_dev_nfl_1096_25293bf7-6e8c-4362-8a37-1078142e5be1", "input": "How many total yards did JaMarcus Russell's completed passes add up to?", "output": "[\"SELECT['JaMarcus Russell']\", \"PROJECT['completed passes of #REF', '#1']\", \"PROJECT['yards of #REF', '#2']\", \"AGGREGATE['sum', '#3']\"]"}
{"id": "DROP_dev_nfl_1096_5577b716-c636-4042-a4f5-77f50aed7be1", "input": "How many incomplete passes did JaMarcus Russell throw?", "output": "[\"SELECT['JaMarcus Russell']\", \"PROJECT['incomplete passes of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_nfl_1096_58ee1f35-a66e-4a5a-847d-68bb1a91324a", "input": "How many field goals of 40 yards or more did Janikowski make?", "output": "[\"SELECT['Janikowski']\", \"PROJECT['field goals of #REF', '#1']\", \"PROJECT['yards of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is at least 40']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "DROP_dev_nfl_1096_cbf71212-323b-42d5-b047-529817de3db5", "input": "How many passes did JaMarcus Russell not complete?", "output": "[\"SELECT['JaMarcus Russell']\", \"PROJECT['passes of #REF', '#1']\", \"FILTER['#2', 'that are completed']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"ARITHMETIC['difference', '#4', '#5']\"]"}
{"id": "DROP_dev_nfl_1136_2ed0b78d-5bb5-4a6d-a471-c1c97c3eaa2e", "input": "Which team got the ball first?", "output": "[\"SELECT['teams']\", \"FILTER['#1', 'that got the ball first']\"]"}
{"id": "DROP_dev_nfl_1136_500eb537-6c16-447b-ae0d-f480eb336156", "input": "Who scored a touchdown from the farthest distance?", "output": "[\"SELECT['touchdowns']\", \"PROJECT['distances of #REF', '#1']\", \"SUPERLATIVE['max', '#1', '#2']\", \"PROJECT['who scored #REF', '#3']\"]"}
{"id": "DROP_dev_nfl_1136_6639ffe0-acdd-40cc-a6f5-081c6e09df04", "input": "How long were the two touchdown scrambles?", "output": "[\"SELECT['touchdown scrambles']\", \"PROJECT['how long are #REF', '#1']\"]"}
{"id": "DROP_dev_nfl_1136_7361d127-759d-484a-99e9-0eea91ce5cae", "input": "How many points did the Dolphins lose by?", "output": "[\"SELECT['the Dolphins']\", \"PROJECT['points lose by of #REF', '#1']\"]"}
{"id": "DROP_dev_nfl_1136_9ab4f12e-7526-44e9-ad98-11cd2d79e381", "input": "How many more yards did the Patriots have in 1979 than this game?", "output": "[\"SELECT['the Patriots']\", \"PROJECT['yards in 1979 of #REF', '#1']\", \"PROJECT['yards in this game of #REF', '#1']\", \"AGGREGATE['sum', '#2']\", \"AGGREGATE['sum', '#3']\", \"ARITHMETIC['difference', '#4', '#5']\"]"}
{"id": "DROP_dev_nfl_1136_a16fc6ad-fb3d-4b4e-8da0-d87e49b6c17a", "input": "How many points was New England winning by at halftime?", "output": "[\"SELECT['New England']\", \"PROJECT['points that #REF was winning by', '#1']\", \"FILTER['#2', 'at halftime']\"]"}
{"id": "DROP_dev_nfl_1136_b5812c99-494b-4730-a7b2-cca7bff83c91", "input": "How many points ahead were the Dolphins after Pennington hit fullback Casey Cramer?", "output": "[\"SELECT['the Dolphins']\", \"PROJECT['points that #REF were ahead', '#1']\", \"FILTER['#2', 'after Pennington hit fullback Casey Cramer']\"]"}
{"id": "DROP_dev_nfl_1136_dc62e06c-7f3d-4957-93da-85d09525c7b9", "input": "How long were each of Randy Moss's touchdown receptions?", "output": "[\"SELECT['Randy Moss']\", \"PROJECT['touchdown receptions of #REF', '#1']\", \"PROJECT['How long were #REF', '#2']\"]"}
{"id": "DROP_dev_nfl_1152_386f665c-12e3-4f19-9a75-c5a0166aa8dd", "input": "How many passing touchdowns did Manning score?", "output": "[\"SELECT['Manning']\", \"PROJECT['passing touchdowns of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_nfl_1152_56f7aa4b-bb3a-4ad7-93e3-f1c90711ccb7", "input": "How many times did the Giants score in the first quarter?", "output": "[\"SELECT['the Giants']\", \"PROJECT['scores of #REF', '#1']\", \"FILTER['#2', 'in the first quarter']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_nfl_1152_5ac14e77-9836-4824-a1f0-15b69e45536f", "input": "Who got the final TD of the first half?", "output": "[\"SELECT['the first half']\", \"PROJECT['TDS of #REF', '#1']\", \"PROJECT['the final of #REF', '#2']\", \"PROJECT['who got #REF', '#3']\"]"}
{"id": "DROP_dev_nfl_1152_6c9969c0-d691-491c-bfa7-faf0dd01eb9f", "input": "How many yards did Manning pass to Toomer?", "output": "[\"SELECT['Manning']\", \"PROJECT['passes of #REF', '#1']\", \"FILTER['#2', 'to Toomer']\", \"PROJECT['yards of #REF', '#3']\", \"AGGREGATE['sum', '#4']\"]"}
{"id": "DROP_dev_nfl_1152_a44ccaf8-9716-46ff-9b10-f437e657c768", "input": "how many yards did Carney get?", "output": "[\"SELECT['Carney']\", \"PROJECT['yards of #REF', '#1']\", \"AGGREGATE['sum', '#2']\"]"}
{"id": "DROP_dev_nfl_1152_a7954f50-c039-4181-889c-ed0e8d9d8ff6", "input": "How many field longer than 30 yards did Carney kick?", "output": "[\"SELECT['Carney']\", \"PROJECT['kicks of #REF', '#1']\", \"PROJECT['yards of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is longer than 30 yards']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "DROP_dev_nfl_1167_11d473f7-0d41-4004-8a89-888f8078530f", "input": "Which player only had one field goal?", "output": "[\"SELECT['field goals']\", \"PROJECT['players of #REF', '#1']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is one']\"]"}
{"id": "DROP_dev_nfl_1167_3b8f00e9-ffd6-48a9-8858-57664199bfa7", "input": "How many more yards was Thomas Jones' longest TD run than his shortest?", "output": "[\"SELECT['Thomas Jones']\", \"PROJECT['TD runs of #REF', '#1']\", \"PROJECT['yards of #REF', '#2']\", \"AGGREGATE['max', '#3']\", \"AGGREGATE['min', '#3']\", \"ARITHMETIC['difference', '#4', '#5']\"]"}
{"id": "DROP_dev_nfl_1167_3c3f3961-8122-4fe5-94e9-652843402f42", "input": "What was Thomas Jones' shortest TD run?", "output": "[\"SELECT['Thomas Jones']\", \"PROJECT['TD runs of #REF', '#1']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "DROP_dev_nfl_1167_682a17f1-04b7-45d8-8ed4-6c4b4e20f8ac", "input": "How many TD runs were under 10 yards?", "output": "[\"SELECT['TD runs']\", \"PROJECT['yards of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is lower than 10 yards']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_nfl_1167_831f909a-25bf-4d3e-82c3-f208cdc11f9e", "input": "What team does Peyton Hillis play for?", "output": "[\"SELECT['Peyton Hillis']\", \"PROJECT['team that #REF plays for', '#1']\"]"}
{"id": "DROP_dev_nfl_1167_8d3569c3-3434-46b1-8d42-187feed4cdc0", "input": "Who is the running back for the Jets?", "output": "[\"SELECT['the Jets']\", \"PROJECT['the running back of #REF', '#1']\"]"}
{"id": "DROP_dev_nfl_1184_03fdc8a0-d62b-49a0-8087-af92e6659650", "input": "How many field goals did Sebastian Janikowski and Kris Brown both score each?", "output": "[\"SELECT['Sebastian Janikowski']\", \"SELECT['Kris Brown']\", \"PROJECT['field goals of #REF', '#1']\", \"PROJECT['field goals of #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"UNION['#5', '#6']\"]"}
{"id": "DROP_dev_nfl_1184_0aa153e9-057a-4347-acb7-8114cb1d68e8", "input": "How many yards longer was the 80-yard punt than the touchdown pass from Russell to Johnnie Lee Higgins?", "output": "[\"SELECT['punts']\", \"PROJECT['yards of #REF', '#1']\", \"FILTER['#2', 'that are 80-yard']\", \"SELECT['Russell']\", \"PROJECT['touchdown passes of #REF', '#4']\", \"FILTER['#5', 'to Johnnie Lee Higgins']\", \"PROJECT['yards of #REF', '#6']\", \"ARITHMETIC['difference', '#3', '#7']\"]"}
{"id": "DROP_dev_nfl_1184_121a8f57-7752-4373-a9ba-748b2c577cd2", "input": "How many more yards was Kris Browns's first field goal over his second?", "output": "[\"SELECT['Kris Browns']\", \"PROJECT['field goals of #REF', '#1']\", \"AGGREGATE['min', '#2']\", \"PROJECT['the second of #REF', '#2']\", \"PROJECT['yards of #REF', '#3']\", \"PROJECT['yards of #REF', '#4']\", \"ARITHMETIC['difference', '#5', '#6']\"]"}
{"id": "DROP_dev_nfl_1184_17bdcfb1-8ad9-46b5-8a3b-1f9769dfd60a", "input": "How many yards difference is there between Sebastian Janikowski's longest field goal and his shortest field goal?", "output": "[\"SELECT['Sebastian Janikowski']\", \"PROJECT['field goals of #REF', '#1']\", \"PROJECT['yards of #REF', '#2']\", \"AGGREGATE['max', '#3']\", \"AGGREGATE['min', '#3']\", \"ARITHMETIC['difference', '#4', '#5']\"]"}
{"id": "DROP_dev_nfl_1184_7dfd2b64-f39e-4bb4-aeb0-1900adda6018", "input": "How many field goals did both teams kick in the first half?", "output": "[\"SELECT['field goals']\", \"FILTER['#1', 'in the first half']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_nfl_1184_ac6ba235-3024-4f63-a6ab-730a14def4cb", "input": "How many field goals did Kris Brown kick?", "output": "[\"SELECT['Kris Brown']\", \"PROJECT['field goals of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_nfl_1184_d4547161-dd97-4164-93a1-144986d94c51", "input": "How many yards difference is there between Kris Brown's longest and shortest field goals?", "output": "[\"SELECT['Kris Brown']\", \"PROJECT['field goals of #REF', '#1']\", \"PROJECT['yards of #REF', '#2']\", \"AGGREGATE['max', '#3']\", \"AGGREGATE['min', '#3']\", \"ARITHMETIC['difference', '#4', '#5']\"]"}
{"id": "DROP_dev_nfl_1193_e5e11477-7b11-4f73-b8c8-2bb7da5c8cdd", "input": "Which player scored the first points of the game for the Eagles?", "output": "[\"SELECT['the Eagles']\", \"PROJECT['points scored in the game of #REF', '#1']\", \"AGGREGATE['min', '#2']\", \"PROJECT['player of #REF', '#3']\"]"}
{"id": "DROP_dev_nfl_1195_5c35081c-3c7f-4c30-a2ef-cf013f46a38e", "input": "How many field goals occurred in the game?", "output": "[\"SELECT['field goals']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "DROP_dev_nfl_1195_b04522b7-29b3-416d-90ab-8725e6623b64", "input": "How many field goals were successful in this game?", "output": "[\"SELECT['field goals in the game']\", \"FILTER['#1', 'that were successful']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_nfl_1195_e5d90a83-6a57-4496-b1d7-6f0581044546", "input": "How many touchdowns occurred in the 1st half?", "output": "[\"SELECT['touchdowns']\", \"FILTER['#1', 'in the 1st half']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_nfl_1207_02d055e6-1c58-415f-8c47-62955b98f064", "input": "How many interceptions did Ben Roethlisberger have?", "output": "[\"SELECT['Ben Roethlisberger']\", \"PROJECT['interceptions of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_nfl_1207_7e298a36-7343-4e10-a779-01d45fd30c0e", "input": "Who scored more points in the game, Giants or Steelers?", "output": "[\"SELECT['the Giants']\", \"SELECT['the Steelers']\", \"PROJECT['points scored of #REF', '#1']\", \"PROJECT['points scored of #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"COMPARISON['max', '#5', '#6']\"]"}
{"id": "DROP_dev_nfl_1216_2e82b6a6-8afa-4c30-8bf7-8bd101f9e16e", "input": "Which team scored more touchdowns in the fourth quarter?", "output": "[\"SELECT['the fourth quarter']\", \"PROJECT['touchdowns of #REF', '#1']\", \"PROJECT['teams of #REF', '#2']\", \"GROUP['count', '#2', '#3']\", \"COMPARATIVE['#3', '#4', 'is the highest']\"]"}
{"id": "DROP_dev_nfl_1216_3ca3f0be-f34c-4c74-be52-d324d678daf8", "input": "Did Philip Rivers throw fewer touchdown passes in the second or fourth quarter?", "output": "[\"SELECT['Philip Rivers']\", \"PROJECT['touchdown passes of #REF', '#1']\", \"FILTER['#2', 'in the second quarter']\", \"FILTER['#2', 'in the fourth quarter']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"COMPARISON['min', '#5', '#6']\"]"}
{"id": "DROP_dev_nfl_1216_441a4d13-822f-43a1-8fbc-8d381ee3036f", "input": "Which team was leading at the end of the third quarter?", "output": "[\"SELECT['teams']\", \"FILTER['#1', 'that was leading']\", \"FILTER['#2', 'at the end of the third quarter']\"]"}
{"id": "DROP_dev_nfl_122_524415eb-084f-48b0-b890-cbe71a12c46d", "input": "How many yards were each of the touchdown passes in the game?", "output": "[\"SELECT['touchdown passes in the game']\", \"PROJECT['yards of #REF', '#1']\"]"}
{"id": "DROP_dev_nfl_122_8dd12719-1ed3-4b9c-9b2d-eae7565499c7", "input": "How many yards difference exists between David Akers's longest and shortest field goal?", "output": "[\"SELECT['David Akers']\", \"PROJECT['field goals of #REF', '#1']\", \"PROJECT['yards of #REF', '#2']\", \"AGGREGATE['max', '#3']\", \"AGGREGATE['min', '#3']\", \"ARITHMETIC['difference', '#4', '#5']\"]"}
{"id": "DROP_dev_nfl_122_957c9d3d-6e67-49d8-84de-78cd08817bcc", "input": "How long were each of David Akers's field goals?", "output": "[\"SELECT['David Akers']\", \"PROJECT['field goals of #REF', '#1']\", \"PROJECT['how long were each of #REF', '#2']\"]"}
{"id": "DROP_dev_nfl_1222_09d40815-d551-42db-9096-59378b0190df", "input": "Which players caught 12 yard touchdown receptions?", "output": "[\"SELECT['players']\", \"PROJECT['touchdown receptions of #REF', '#1']\", \"PROJECT['yard of #REF', '#2']\", \"COMPARATIVE['#1', '#3', 'is 12']\"]"}
{"id": "DROP_dev_nfl_1222_35c2174f-2eb4-45eb-9658-c6ebbc99ea7b", "input": "How many yards longer was Kaeding's longest field goal than Mehlhaff's longest field goal?", "output": "[\"SELECT['Kaeding']\", \"PROJECT['field goals of #REF', '#1']\", \"PROJECT['yards of #REF', '#2']\", \"AGGREGATE['max', '#3']\", \"SELECT['Mehlhaff']\", \"PROJECT['field goals of #REF', '#5']\", \"PROJECT['yards of #REF', '#6']\", \"AGGREGATE['max', '#7']\", \"ARITHMETIC['difference', '#4', '#8']\"]"}
{"id": "DROP_dev_nfl_1222_740c8a6f-4d87-43b5-aabe-1683c078b381", "input": "The shortest TD pass was thrown to who?", "output": "[\"SELECT['TD passes']\", \"AGGREGATE['min', '#1']\", \"PROJECT['to who was #REF thrown', '#2']\"]"}
{"id": "DROP_dev_nfl_1222_7f483afc-67be-4923-a3c0-711dc4e217a6", "input": "Which players scored 1-yard touchdowns?", "output": "[\"SELECT['touchdowns']\", \"PROJECT['yards of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is 1-yard']\", \"PROJECT['players of #REF', '#3']\"]"}
{"id": "DROP_dev_nfl_1222_a4186127-63c5-47dd-843f-50376c361520", "input": "How many more field goals did Kaeding make than Mehlhaff?", "output": "[\"SELECT['Kaeding']\", \"SELECT['Mehlhaff']\", \"PROJECT['field goals of #REF', '#1']\", \"PROJECT['field goals of #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['difference', '#5', '#6']\"]"}
{"id": "DROP_dev_nfl_1222_eb02a495-08f1-4721-ab76-01e515b78aa0", "input": "Which player scored more field goals, Nate Kaeding or Taylor Mehlhaff?", "output": "[\"SELECT['Nate Kaeding']\", \"SELECT['Taylor Mehlhaff']\", \"PROJECT['field goals of #REF', '#1']\", \"PROJECT['field goals of #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"COMPARISON['max', '#5', '#6']\"]"}
{"id": "DROP_dev_nfl_1222_f631fc80-ccc6-4f65-92a1-be1739ef8fbe", "input": "How many more total field goal yards did Nate Kaeding make than Taylor Mehlhaff?", "output": "[\"SELECT['Nate Kaeding']\", \"SELECT['Taylor Mehlhaff']\", \"PROJECT['field goals of #REF', '#1']\", \"PROJECT['field goals of #REF', '#2']\", \"PROJECT['yards of #REF', '#3']\", \"PROJECT['yards of #REF', '#4']\", \"AGGREGATE['sum', '#5']\", \"AGGREGATE['sum', '#6']\", \"ARITHMETIC['difference', '#7', '#8']\"]"}
{"id": "DROP_dev_nfl_1223_265ce825-5892-45c8-8d07-71f72decd729", "input": "Which receiver caught the longest touchdown pass?", "output": "[\"SELECT['touchdown passes']\", \"PROJECT['how long are #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is the highest']\", \"PROJECT['the receiver of #REF', '#3']\"]"}
{"id": "DROP_dev_nfl_1223_2c1e4972-72e2-4278-8934-c6f3bad8e69d", "input": "How many failed 2-point conversions where there by Kansas City in the whole game?", "output": "[\"SELECT['Kansas City']\", \"PROJECT['failed 2-point conversions by #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_nfl_1223_33374285-4969-474a-8115-6448c052aec9", "input": "Which team allowed the least points against them?", "output": "[\"SELECT['teams']\", \"PROJECT['points of #REF', '#1']\", \"SUPERLATIVE['max', '#1', '#2']\", \"DISCARD['#1', '#3']\"]"}
{"id": "DROP_dev_nfl_1223_7d7a5fc9-724a-4c26-b665-8912bbb94369", "input": "How many points did the Chargers score in the second quarter?", "output": "[\"SELECT['the Chargers']\", \"PROJECT['points of #REF', '#1']\", \"FILTER['#2', 'in the second quarter']\", \"AGGREGATE['sum', '#3']\"]"}
{"id": "DROP_dev_nfl_1223_a53fea0a-aa37-4b00-bc01-4a6ac26628eb", "input": "How many quarters had been played before Rivers threw a touchdown pass to Floyd?", "output": "[\"SELECT['Rivers']\", \"PROJECT['touchdown passes of #REF', '#1']\", \"FILTER['#2', 'to Floyd']\", \"PROJECT['quarters that had been played before #REF', '#3']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "DROP_dev_nfl_1223_d0b9f77b-6544-4bda-8793-94bef32799ab", "input": "Which team tried an onside kick to get the ball back?", "output": "[\"SELECT['onside kicks']\", \"PROJECT['team of #REF', '#1']\"]"}
{"id": "DROP_dev_nfl_1223_f6e0777c-c76b-41ae-806c-7abaa26a975d", "input": "How many times did Kansas City score in the first half?", "output": "[\"SELECT['Kansas City']\", \"PROJECT['scores of #REF', '#1']\", \"FILTER['#2', 'in the first half']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_nfl_1223_fcfd1f52-20bc-4bc6-8c2b-f596fe8567cd", "input": "What was the shortest pass for a touchdown?", "output": "[\"SELECT['touchdown passes']\", \"AGGREGATE['min', '#1']\"]"}
{"id": "DROP_dev_nfl_1233_23eddacc-2940-4d1f-961f-a0d769cd6ae3", "input": "How many touchdown passes over 30 yards were made?", "output": "[\"SELECT['touchdown passes']\", \"PROJECT['yards of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'higher than 30']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_nfl_1233_681cc6d3-c9d9-4919-ba8d-e0308553d3bc", "input": "Which team had the shortest field goal", "output": "[\"SELECT['field goals']\", \"PROJECT['shortness of #REF', '#1']\", \"SUPERLATIVE['max', '#1', '#2']\", \"PROJECT['team that had #REF', '#3']\"]"}
{"id": "DROP_dev_nfl_1233_7a5e1fbb-46c2-4692-ba5c-8ec201a72585", "input": "Which player scored the first points for the Saints?", "output": "[\"SELECT['the Saints']\", \"PROJECT['points scored of #REF', '#1']\", \"AGGREGATE['min', '#2']\", \"PROJECT['player of #REF', '#3']\"]"}
{"id": "DROP_dev_nfl_1233_bc7dcb96-002f-4c86-a45a-6a6d54b0bd1a", "input": "In which quarters did the Saints not score?", "output": "[\"SELECT['the Saints']\", \"PROJECT['scores of #REF', '#1']\", \"PROJECT['quarters of #REF', '#2']\", \"SELECT['quarters']\", \"DISCARD['#4', '#3']\"]"}
{"id": "DROP_dev_nfl_1233_becd0619-d572-48d5-b039-54f46181b368", "input": "Which team beat the Lions in week 3?", "output": "[\"SELECT['the Lions']\", \"PROJECT['who beat #REF', '#1']\", \"FILTER['#2', 'in week 3']\"]"}
{"id": "DROP_dev_nfl_1233_ca9ec9d0-81ff-4aa5-a523-dc418046b9f9", "input": "Which player kicked the last field goal of the game?", "output": "[\"SELECT['field goals in the game']\", \"AGGREGATE['max', '#1']\", \"PROJECT['player of #REF', '#2']\"]"}
{"id": "DROP_dev_nfl_1240_0b228f90-6581-4c94-92f3-a710d69162db", "input": "Which player made the field goals between 20 and 30 yards?", "output": "[\"SELECT['field goals']\", \"PROJECT['yards of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is  betweenleftside 20']\", \"COMPARATIVE['#3', '#2', 'is  betweenrightside 30 yards']\", \"PROJECT['player of #REF', '#4']\"]"}
{"id": "DROP_dev_nfl_1240_0f865677-9e16-4ca1-9517-5c4184605b14", "input": "Which player threw more touchdown passes, Tony Romo or Shaun Hill ?", "output": "[\"SELECT['Tony Romo']\", \"PROJECT['touchdown passes of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"SELECT['Shaun Hill']\", \"PROJECT['touchdown passes of #REF', '#4']\", \"AGGREGATE['count', '#5']\", \"COMPARISON['max', '#3', '#6']\"]"}
{"id": "DROP_dev_nfl_1240_3462ea9b-6aaf-4ea4-9313-7b27017013d5", "input": "How many yards was the last TD of the game?", "output": "[\"SELECT['TD in the game']\", \"AGGREGATE['max', '#1']\", \"PROJECT['yards of #REF', '#2']\"]"}
{"id": "DROP_dev_nfl_1240_389b9b3a-8473-44c9-a8c1-a2ba140c81b6", "input": "How many field goals over 30 yards did Nick Folk make?", "output": "[\"SELECT['Nick Folk']\", \"PROJECT['field goals of #REF', '#1']\", \"PROJECT['yards of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is higher than 30']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "DROP_dev_nfl_1240_514f30d2-a26a-4e91-8d21-afbca090ea8c", "input": "How many yards shorter was Joe Nedney's second field goal compared to his first?", "output": "[\"SELECT['Joe Nedney']\", \"PROJECT['field goals of #REF', '#1']\", \"AGGREGATE['min', '#2']\", \"PROJECT['second of #REF', '#2']\", \"PROJECT['yards of #REF', '#3']\", \"PROJECT['yards of #REF', '#4']\", \"ARITHMETIC['difference', '#5', '#6']\"]"}
{"id": "DROP_dev_nfl_1240_6024c14a-c2d9-486c-8402-24c818fa8bed", "input": "How many field goals were longer than 30 yards and less than 45 yards?", "output": "[\"SELECT['field goals']\", \"PROJECT['yards of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is higher than 30']\", \"COMPARATIVE['#3', '#2', 'is lower than 45']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "DROP_dev_nfl_1240_698a6b43-994c-4750-82d1-7bb9ecf9f8b9", "input": "How many total yards did Folk have?", "output": "[\"SELECT['Folk']\", \"PROJECT['yards of #REF', '#1']\", \"AGGREGATE['sum', '#2']\"]"}
{"id": "DROP_dev_nfl_1240_7c6366d9-0ab2-49d0-b069-91a4da1115b5", "input": "Who scored the TD pases that were over 15 yards?", "output": "[\"SELECT['TD pases']\", \"PROJECT['yards of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is higher than 15']\", \"PROJECT['who scored #REF', '#3']\"]"}
{"id": "DROP_dev_nfl_1240_9a8a1c4d-7ec9-4b59-8250-76b2b57c97c8", "input": "What was Nick Folk's longest field goal?", "output": "[\"SELECT['Nick Folk']\", \"PROJECT['field goals of #REF', '#1']\", \"AGGREGATE['max', '#2']\"]"}
{"id": "DROP_dev_nfl_1240_b1201907-9e63-438c-8409-51898ba7aab7", "input": "How many field goals did Nedney kick in the first quarter?", "output": "[\"SELECT['Nedney']\", \"PROJECT['field goals of #REF', '#1']\", \"FILTER['#2', 'in the first quarter']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_nfl_1240_b579211c-85aa-480e-83ef-2228ea640839", "input": "Which player scored more field goals, Nick Folk or Joe Nedney?", "output": "[\"SELECT['Nick Folk']\", \"SELECT['Joe Nedney']\", \"PROJECT['field goals of #REF', '#1']\", \"PROJECT['field goals of #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"COMPARISON['max', '#5', '#6']\"]"}
{"id": "DROP_dev_nfl_1240_ba43d6da-7dae-4611-b4fb-eea9c10d2255", "input": "Which team was winning by the half?", "output": "[\"SELECT['teams']\", \"FILTER['#1', 'that was winning']\", \"FILTER['#2', 'by the half']\"]"}
{"id": "DROP_dev_nfl_1240_c0f3de09-ecc1-4471-b8d0-5cbc86d14efe", "input": "Which player made the field goals that were over 30 yards?", "output": "[\"SELECT['players']\", \"PROJECT['field goals of #REF', '#1']\", \"PROJECT['yards of #REF', '#2']\", \"COMPARATIVE['#1', '#3', 'is higher than 30']\"]"}
{"id": "DROP_dev_nfl_1240_cef3f6a2-7a96-46de-a2bb-68c1c5fceeaf", "input": "How many more field goals did Nick Folk make compared to Joe Nedney?", "output": "[\"SELECT['Nick Folk']\", \"PROJECT['field goals of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"SELECT['Joe Nedney']\", \"PROJECT['field goals of #REF', '#4']\", \"AGGREGATE['count', '#5']\", \"ARITHMETIC['difference', '#3', '#6']\"]"}
{"id": "DROP_dev_nfl_1240_e3e09455-d467-42b0-8f0d-2a0ad733d145", "input": "How many yards did Tony Romo throw for on touchdown passes?", "output": "[\"SELECT['Tony Romo']\", \"PROJECT['touchdown passes of #REF', '#1']\", \"PROJECT['yards of #REF', '#2']\", \"AGGREGATE['sum', '#3']\"]"}
{"id": "DROP_dev_nfl_1240_f9b600c2-1187-4a33-9fbd-93521c7fd006", "input": "How many TD passes were under 10 yards?", "output": "[\"SELECT['TD passes']\", \"PROJECT['yards of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is lower than 10 yards']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_nfl_1245_25bd45a8-4ae0-41b6-9ab3-6406659d31e9", "input": "how many yards did julius jones get in his touch down runs?", "output": "[\"SELECT['julius jones']\", \"PROJECT['touch down runs of #REF', '#1']\", \"PROJECT['yards of #REF', '#2']\", \"AGGREGATE['sum', '#3']\"]"}
{"id": "DROP_dev_nfl_1245_2c46e0b8-e02c-4bde-8dc7-1f76aa99e117", "input": "Which team was able to score first?", "output": "[\"SELECT['scores']\", \"AGGREGATE['min', '#1']\", \"PROJECT['team of #REF', '#2']\"]"}
{"id": "DROP_dev_nfl_1245_36de8000-251d-4ee5-98bd-9483fe95853e", "input": "How many total yards did Olindo Mare have?", "output": "[\"SELECT['Olindo Mare']\", \"PROJECT['yards of #REF', '#1']\", \"AGGREGATE['sum', '#2']\"]"}
{"id": "DROP_dev_nfl_1245_6aec3d51-8638-4d07-b0fd-54d347fa6ffe", "input": "How many yards longer was the longest offensive touchdown run versus the shortest?", "output": "[\"SELECT['offensive touchdown runs']\", \"PROJECT['yards of #REF', '#1']\", \"AGGREGATE['max', '#2']\", \"AGGREGATE['min', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "DROP_dev_nfl_1245_98842c5f-aa44-4372-a501-948765e5a88d", "input": "Which players scored defensive points in the game?", "output": "[\"SELECT['points scored in the game']\", \"FILTER['#1', 'that are defensive points']\", \"PROJECT['players of #REF', '#2']\"]"}
{"id": "DROP_dev_nfl_1245_9a252e14-2379-4a3b-a705-2d23d20144bb", "input": "How many touchdown runs measured 5-yards or less in total yards?", "output": "[\"SELECT['touchdown runs']\", \"PROJECT['yards of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is at most 5-yards']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_nfl_1245_b9c10490-949f-4d61-9720-b5fef389e04e", "input": "How many yards do the shortest touchdown run and the shortest touchdown pass combine for?", "output": "[\"SELECT['touchdown runs']\", \"SELECT['touchdown passes']\", \"PROJECT['yards of #REF', '#1']\", \"PROJECT['yards of #REF', '#2']\", \"AGGREGATE['min', '#3']\", \"AGGREGATE['min', '#4']\", \"ARITHMETIC['sum', '#5', '#6']\"]"}
{"id": "DROP_dev_nfl_1245_ed8e8505-f012-4f5a-89fd-ffebfb642a3d", "input": "How many more field goals did Nedney make than Mare?", "output": "[\"SELECT['Nedney']\", \"PROJECT['field goals of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"SELECT['Mare']\", \"PROJECT['field goals of #REF', '#4']\", \"AGGREGATE['count', '#5']\", \"ARITHMETIC['difference', '#3', '#6']\"]"}
{"id": "DROP_dev_nfl_1245_fa53f992-545e-4a76-ae6c-f22c5aade680", "input": "Who had the longest turnover ran back for a touchdown, Terrill or Willis?", "output": "[\"SELECT['Terrill']\", \"SELECT['Willis']\", \"PROJECT['turnovers of #REF', '#1']\", \"PROJECT['turnovers of #REF', '#2']\", \"FILTER['#3', 'that are run back for touchdowns']\", \"FILTER['#4', 'that are run back for touchdowns']\", \"PROJECT['how long are #REF', '#5']\", \"PROJECT['how long are #REF', '#6']\", \"COMPARISON['max', '#7', '#8']\"]"}
{"id": "DROP_dev_nfl_1264_0d662acc-5021-4e0b-a340-e0b566582413", "input": "Who caught a 56-yard touchdown pass?", "output": "[\"SELECT['touchdown passes']\", \"FILTER['#1', 'that is 56-yard']\", \"PROJECT['who caught #REF', '#2']\"]"}
{"id": "DROP_dev_nfl_1264_3d7dc317-30ed-4483-8a4d-c5544dba72ea", "input": "Which team lost to the Patriots week 8?", "output": "[\"SELECT['the Patriots']\", \"PROJECT['teams that lost to #REF', '#1']\", \"FILTER['#2', 'in week 8']\"]"}
{"id": "DROP_dev_nfl_1264_547588d2-938b-47ba-93a1-106aaa13bfc6", "input": "Which team got the first turnover?", "output": "[\"SELECT['turnovers']\", \"AGGREGATE['min', '#1']\", \"PROJECT['team that got #REF', '#2']\"]"}
{"id": "DROP_dev_nfl_1264_7fc49432-2cb3-4141-b295-2a013ab07a86", "input": "Who was the Cardinals quarterback?", "output": "[\"SELECT['the Cardinals']\", \"PROJECT['the quarterback of #REF', '#1']\"]"}
{"id": "DROP_dev_nfl_1264_9672334d-576a-4943-b93b-5a0f327e4055", "input": "How many touchdowns were there in the first quarter?", "output": "[\"SELECT['touchdowns']\", \"FILTER['#1', 'that are in first quarter']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_nfl_1288_13468a63-068c-469d-8625-f73e4ba17f8e", "input": "How many yards was the shortest TD run?", "output": "[\"SELECT['TD runs']\", \"PROJECT['yards of #REF', '#1']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "DROP_dev_nfl_1288_1ac0b98b-abfc-48f4-8f70-c94c95731f41", "input": "Who got the shortest TD run?", "output": "[\"SELECT['TD runs']\", \"PROJECT['how short are #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is the lowest']\", \"PROJECT['who got #REF', '#3']\"]"}
{"id": "DROP_dev_nfl_1288_9ca1ff53-efd0-4484-ab44-82024d2abd97", "input": "Who had the longest TD run?", "output": "[\"SELECT['TD runs']\", \"AGGREGATE['max', '#1']\", \"PROJECT['who had #REF', '#2']\"]"}
{"id": "DROP_dev_nfl_1288_a9d4eec2-37c9-4329-96b5-28b21bc71515", "input": "How many field goals did Bironas get?", "output": "[\"SELECT['Bironas']\", \"PROJECT['field goals of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_nfl_1288_bb673074-42c4-41bd-b683-195cd32c5bf5", "input": "How many different players scored a TD in the first half?", "output": "[\"SELECT['the first half']\", \"PROJECT['TD of #REF', '#1']\", \"PROJECT['different players of #REF', '#2']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_nfl_1304_8ada3105-263f-42f1-9d33-e22481fcbb7d", "input": "How many rushing touchdowns of under 5-yards were scored?", "output": "[\"SELECT['rushing touchdowns']\", \"PROJECT['yards of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is less than 5-yards']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_nfl_1304_8ed51534-7d6e-45e3-b9f1-01e7a43250f1", "input": "How many yards was Portis' longest touchdown run?", "output": "[\"SELECT['Portis']\", \"PROJECT['touchdown runs of #REF', '#1']\", \"PROJECT['yards of #REF', '#2']\", \"AGGREGATE['max', '#3']\"]"}
{"id": "DROP_dev_nfl_1304_914dd090-2cc5-47ad-8991-e3f26a2382aa", "input": "Which team scored more during the first half?", "output": "[\"SELECT['the first half']\", \"PROJECT['scores of #REF', '#1']\", \"PROJECT['teams of #REF', '#2']\", \"GROUP['count', '#2', '#3']\", \"COMPARATIVE['#3', '#4', 'is the highest']\"]"}
{"id": "DROP_dev_nfl_1304_a34b7192-c01d-4e00-885a-164536d17bc9", "input": "How many touchdowns did Clinton Portis have?", "output": "[\"SELECT['Clinton Portis']\", \"PROJECT['touchdowns of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_nfl_1307_96366f93-75c8-4735-9d60-55aa88bfd93b", "input": "Which team had more first quarter field goals?", "output": "[\"SELECT['teams']\", \"PROJECT['field goals of #REF', '#1']\", \"FILTER['#2', 'in the first quarter']\", \"GROUP['count', '#3', '#1']\", \"SUPERLATIVE['max', '#1', '#4']\"]"}
{"id": "DROP_dev_nfl_1329_003aa246-5f52-4917-8646-ab140934a2ae", "input": "Which player scored the go-ahead touchdown?", "output": "[\"SELECT['touchdowns']\", \"FILTER['#1', 'that was go-ahead']\", \"PROJECT['player that scored #REF', '#2']\"]"}
{"id": "DROP_dev_nfl_1329_71a2afb4-6407-4a49-9218-6d618799c9ad", "input": "Which player caught a pass for the first score of the game?", "output": "[\"SELECT['scores in the game']\", \"AGGREGATE['min', '#1']\", \"PROJECT['player of #REF', '#2']\"]"}
{"id": "DROP_dev_nfl_1329_95b92928-ef27-4f75-9d28-0508e6e503b7", "input": "Which team beat the 49ers in week 5?", "output": "[\"SELECT['the 49ers']\", \"PROJECT['which team beat #REF', '#1']\", \"FILTER['#2', 'in week 5']\"]"}
{"id": "DROP_dev_nfl_1329_cdc92052-3bff-4499-b7f1-21908e369cd4", "input": "Which player threw the last Touchdown of the game?", "output": "[\"SELECT['Touchdown throws in the game']\", \"AGGREGATE['max', '#1']\", \"PROJECT['player of #REF', '#2']\"]"}
{"id": "DROP_dev_nfl_1329_e2fad5d3-30c9-4114-be2e-96f7477e844e", "input": "Which team allowed the most points all four quarters?", "output": "[\"SELECT['teams']\", \"PROJECT['points allowed of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is the highest']\"]"}
{"id": "DROP_dev_nfl_1332_03d4464c-8509-4a0f-ba98-a495be13a511", "input": "How many more rushing touchdowns were there relative to passing touchdowns?", "output": "[\"SELECT['rushing touchdowns']\", \"SELECT['passing touchdowns']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "DROP_dev_nfl_1332_274b711d-c0d5-45fd-917e-de82153b0724", "input": "What were the distances, in yards, of Michael Turner's rushing touchdowns?", "output": "[\"SELECT['Michael Turner']\", \"PROJECT['rushing touchdowns of #REF', '#1']\", \"PROJECT['yards of #REF', '#2']\"]"}
{"id": "DROP_dev_nfl_1332_583d1c4f-208d-4d7e-9e43-cdd540a76dd1", "input": "How many touchdown passes were made in the fourth quarter?", "output": "[\"SELECT['touchdown passes']\", \"FILTER['#1', 'in the fourth quarter']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_nfl_1332_8e90ef22-451b-4666-a0ed-6dd262be06ae", "input": "Which player threw the last touchdown run of the game?", "output": "[\"SELECT['touchdown runs in the game']\", \"AGGREGATE['max', '#1']\", \"PROJECT['player of #REF', '#2']\"]"}
{"id": "DROP_dev_nfl_1332_c2b75743-7128-49d4-9387-b62e73508476", "input": "How many total interceptions were in the game?", "output": "[\"SELECT['interceptions in the game']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "DROP_dev_nfl_1332_c72d357b-6ba1-4a82-85b1-7ef7adf55270", "input": "Which player scored first for the Falcons in the second quarter?", "output": "[\"SELECT['the Falcons']\", \"PROJECT['scores of #REF', '#1']\", \"FILTER['#2', 'in the second quarter']\", \"AGGREGATE['min', '#3']\", \"PROJECT['player of #REF', '#4']\"]"}
{"id": "DROP_dev_nfl_1332_c87797b8-eefe-4572-b24e-8d8716460746", "input": "How many touchdowns were 30-yards or longer?", "output": "[\"SELECT['touchdowns']\", \"FILTER['#1', 'that was at least 30-yards']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_nfl_1332_e6ecba1b-691f-4f53-a231-d1a4cc96c669", "input": "What was the winning move", "output": "[\"SELECT['what was the winning move']\"]"}
{"id": "DROP_dev_nfl_1333_68179cd0-a98d-4c58-be4a-84828963e831", "input": "How many field goals did Elam score in the first quarter?", "output": "[\"SELECT['Elam']\", \"PROJECT['field goals of #REF', '#1']\", \"FILTER['#2', 'in the first quarter']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_nfl_1333_d423553a-44cb-4577-b7f5-ee418c924816", "input": "How many 4-yard passing touchdowns were in the game?", "output": "[\"SELECT['passing touchdowns in the game']\", \"PROJECT['yards of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is 4-yard']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_nfl_1333_e1c0558d-fe69-4a29-abeb-6f723ea243e9", "input": "Which team beat the Redskins in week 9?", "output": "[\"SELECT['Redskins']\", \"PROJECT['teams that beat #REF', '#1']\", \"FILTER['#2', 'in week 9']\"]"}
{"id": "DROP_dev_nfl_1344_232fc92c-db56-45a8-89db-313663eb06fc", "input": "how many yards did Brady pass to Moss?", "output": "[\"SELECT['Brady']\", \"PROJECT['passes of #REF', '#1']\", \"FILTER['#2', 'to Moss']\", \"PROJECT['yards of #REF', '#3']\", \"AGGREGATE['sum', '#4']\"]"}
{"id": "DROP_dev_nfl_1344_5024c197-1e1a-49b3-add2-8fbfef2008b4", "input": "Who scored the first points of the game for the Ravens?", "output": "[\"SELECT['the Ravens']\", \"PROJECT['scores of #REF', '#1']\", \"AGGREGATE['min', '#2']\", \"PROJECT['who scored #REF', '#3']\"]"}
{"id": "DROP_dev_nfl_1344_c206b2a8-b367-421e-98ed-58c3a71dcb71", "input": "Which player scored first in the game?", "output": "[\"SELECT['scores in the game']\", \"AGGREGATE['min', '#1']\", \"PROJECT['player of #REF', '#2']\"]"}
{"id": "DROP_dev_nfl_1344_d6e899b2-581f-484f-8479-23e185a6afac", "input": "how many yards did mason get on the td pass?", "output": "[\"SELECT['mason']\", \"PROJECT['td passes of #REF', '#1']\", \"PROJECT['yards of #REF', '#2']\", \"AGGREGATE['sum', '#3']\"]"}
{"id": "DROP_dev_nfl_1361_1ef96d5d-67b9-457d-9b63-cfde65683953", "input": "Which team scored more field goals in the first quarter?", "output": "[\"SELECT['teams']\", \"PROJECT['field goals of #REF', '#1']\", \"FILTER['#2', 'in the first quarter']\", \"GROUP['count', '#3', '#1']\", \"SUPERLATIVE['max', '#1', '#4']\"]"}
{"id": "DROP_dev_nfl_1361_575d2d43-acaf-404f-86da-ff50e0d9d968", "input": "How many touchdowns of 3-yards were scored?", "output": "[\"SELECT['touchdowns']\", \"FILTER['#1', 'that were 3-yards']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_nfl_1361_6bad3e08-6965-4888-adbf-50ae588550ee", "input": "Which kicker had more field goals in the first quarter?", "output": "[\"SELECT['kickers']\", \"PROJECT['field goals of #REF', '#1']\", \"FILTER['#2', 'in the first quarter']\", \"GROUP['count', '#3', '#1']\", \"SUPERLATIVE['max', '#1', '#4']\"]"}
{"id": "DROP_dev_nfl_1361_6fd345ba-c814-4fd3-9551-6bbc807a5c27", "input": "How many field goals were scored by both teams in the 1st quarter?", "output": "[\"SELECT['the 1st quarter']\", \"PROJECT['field goals of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_nfl_1361_754b16ee-0dec-481d-ae1f-09d0a4d43c2a", "input": "What was the last scoring play of the first half?", "output": "[\"SELECT['the first half']\", \"PROJECT['scoring plays of #REF', '#1']\", \"AGGREGATE['max', '#2']\"]"}
{"id": "DROP_dev_nfl_1361_959c0f71-abe9-47f1-bc8f-2ec87c7d788a", "input": "How many more total field goal yards did Rian Lindell get than Josh Scobee?", "output": "[\"SELECT['Rian Lindell']\", \"SELECT['Josh Scobee']\", \"PROJECT['field goals of #REF', '#1']\", \"PROJECT['field goals of #REF', '#2']\", \"PROJECT['yards of #REF', '#3']\", \"PROJECT['yards of #REF', '#4']\", \"AGGREGATE['sum', '#5']\", \"AGGREGATE['sum', '#6']\", \"ARITHMETIC['difference', '#7', '#8']\"]"}
{"id": "DROP_dev_nfl_1361_ae95c9ca-4af0-4e48-bd5e-138556192e1d", "input": "How many more field goals did Rian Lindell get than Josh Scobee?", "output": "[\"SELECT['Rian Lindell']\", \"SELECT['Josh Scobee']\", \"PROJECT['field goals of #REF', '#1']\", \"PROJECT['field goals of #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['difference', '#5', '#6']\"]"}
{"id": "DROP_dev_nfl_1361_ea2f7e17-7f38-4f23-9698-1ad14496ce71", "input": "How many more losses than wins did the Bills have after this game?", "output": "[\"SELECT['the Bills']\", \"PROJECT['wins of #REF', '#1']\", \"FILTER['#2', 'after this game']\", \"PROJECT['losses of #REF', '#1']\", \"FILTER['#4', 'after this games']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#5']\", \"ARITHMETIC['difference', '#6', '#7']\"]"}
{"id": "DROP_dev_nfl_1378_2ae484c2-65d4-4dce-8a19-46c7554d1f14", "input": "How many more field goals did Gould kick compared to Hanson?", "output": "[\"SELECT['Gould']\", \"PROJECT['field goals of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"SELECT['Hanson']\", \"PROJECT['field goals of #REF', '#4']\", \"AGGREGATE['count', '#5']\", \"ARITHMETIC['difference', '#3', '#6']\"]"}
{"id": "DROP_dev_nfl_1378_74ab5291-6b8b-479c-896b-f99f0e8023fe", "input": "How many yards was the shortest rushing touchdown?", "output": "[\"SELECT['rushing touchdown']\", \"PROJECT['yards of #REF', '#1']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "DROP_dev_nfl_1390_0d3c5b70-49a5-44ea-b79a-8bd85d20cfa0", "input": "How many touchdown passes did Carson Palmer  throw in the first quarter?", "output": "[\"SELECT['Carson Palmer']\", \"PROJECT['touchdown passes of #REF', '#1']\", \"FILTER['#2', 'in the first quarter']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_nfl_1390_143a118b-f487-451d-8a10-9a58b9b6b862", "input": "HOW MANY WEEK BENGALS STAYED AT HOME", "output": "[\"SELECT['the BENGALS']\", \"PROJECT['WEEK STAYED AT HOME of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_nfl_1390_58e44ab0-915f-4859-a0f7-63aa417da8cb", "input": "Did Palmer have more touchdown yards in the first quarter or the second quarter?", "output": "[\"SELECT['Palmer']\", \"PROJECT['touchdowns of #REF', '#1']\", \"FILTER['#2', 'in the first quarter']\", \"FILTER['#2', 'in the second quarter']\", \"PROJECT['yards of #REF', '#3']\", \"PROJECT['yards of #REF', '#4']\", \"AGGREGATE['sum', '#5']\", \"AGGREGATE['sum', '#6']\", \"COMPARISON['max', '#7', '#8']\"]"}
{"id": "DROP_dev_nfl_1390_e663937d-11d7-40dd-8dc7-7bf325aa493f", "input": "How many yards longer was Ochocinco's second half touchdown compared to his first half touchdown?", "output": "[\"SELECT['Ochocinco']\", \"PROJECT['touchdowns of #REF', '#1']\", \"FILTER['#2', 'in the second half']\", \"FILTER['#2', 'in the first half']\", \"PROJECT['yards of #REF', '#3']\", \"PROJECT['yards of #REF', '#4']\", \"ARITHMETIC['difference', '#5', '#6']\"]"}
{"id": "DROP_dev_nfl_1390_f1613fa6-cb64-4944-a9a4-de083b260362", "input": "HOW MANY YARD THE BEARS WOULD CLOSE OUT THE HALF", "output": "[\"SELECT['the BEARS']\", \"PROJECT['YARD to CLOSE OUT the HALF of #REF', '#1']\", \"AGGREGATE['sum', '#2']\"]"}
{"id": "DROP_dev_nfl_1390_f5206a46-fa68-4918-b981-721c2fb3b834", "input": "How many touchdown yards did Palmer have in the first quarter?", "output": "[\"SELECT['Palmer']\", \"PROJECT['touchdowns of #REF', '#1']\", \"FILTER['#2', 'in the first quarter']\", \"PROJECT['yards of #REF', '#3']\", \"AGGREGATE['sum', '#4']\"]"}
{"id": "DROP_dev_nfl_1412_b8765a65-0f8d-4ce3-ac9e-5a86f078301f", "input": "How many points did the Steelers score in the first half?", "output": "[\"SELECT['Steelers']\", \"PROJECT['points of #REF', '#1']\", \"FILTER['#2', 'that are in first half']\"]"}
{"id": "DROP_dev_nfl_1454_27dba182-0137-4566-98c6-52451d2bc4a0", "input": "How many incomplete passes did Daunte Culpepper have?", "output": "[\"SELECT['Daunte Culpepper']\", \"PROJECT['incomplete passes of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_nfl_1454_34c22d2f-1581-491d-9c82-120f3859f49a", "input": "How many yards was Willis McGahee's first touchdown run?", "output": "[\"SELECT['Willis McGahee']\", \"PROJECT['touchdown runs of #REF', '#1']\", \"AGGREGATE['min', '#2']\", \"PROJECT['yards of #REF', '#3']\"]"}
{"id": "DROP_dev_nfl_1454_4a964c39-47ad-4bba-8942-c98cb289afb3", "input": "Which team scored last in the second quarter, the Ravens or Lions?", "output": "[\"SELECT['the second quarter']\", \"PROJECT['scores of #REF', '#1']\", \"AGGREGATE['max', '#2']\", \"PROJECT['team of #REF', '#3']\", \"BOOLEAN['#4', 'is the Ravens']\", \"BOOLEAN['#4', 'is the Lions']\", \"COMPARISON['true', '#5', '#6']\"]"}
{"id": "DROP_dev_nfl_1454_5d0590e6-f1ad-4e48-9fce-a0aa6a1bcfed", "input": "During the game how many players scored touchdowns?", "output": "[\"SELECT['touchdowns in the game']\", \"PROJECT['players of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_nfl_1454_e37fc969-eb1e-44bb-8a67-0cc2b92f58e2", "input": "How many yards was Willis McGahee's longest touchdown run?", "output": "[\"SELECT['Willis McGahee']\", \"PROJECT['touchdown runs of #REF', '#1']\", \"AGGREGATE['max', '#2']\", \"PROJECT['yards of #REF', '#3']\"]"}
{"id": "DROP_dev_nfl_1454_e72e0a5a-047c-4482-b5ae-b2f623b44d96", "input": "How many touchdowns did the Ravens score in the third quarter?", "output": "[\"SELECT['the Ravens']\", \"PROJECT['touchdowns of #REF', '#1']\", \"FILTER['#2', 'in the third quarter']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_nfl_1471_003b0822-3079-4352-92cd-d7c8582472d5", "input": "How many yards longer was Kris Brown's second field goal compared to his first?", "output": "[\"SELECT['Kris Brown']\", \"PROJECT['field goals of #REF', '#1']\", \"PROJECT['second of #REF', '#2']\", \"AGGREGATE['min', '#2']\", \"PROJECT['yards of #REF', '#3']\", \"PROJECT['yards of #REF', '#4']\", \"ARITHMETIC['difference', '#5', '#6']\"]"}
{"id": "DROP_dev_nfl_1471_550b8df8-2fa6-4254-a655-78c629dadfc4", "input": "Which player had two touchdowns in the first half?", "output": "[\"SELECT['players']\", \"PROJECT['touchdowns of #REF', '#1']\", \"FILTER['#2', 'in the first half']\", \"GROUP['count', '#3', '#1']\", \"COMPARATIVE['#1', '#4', 'is two']\"]"}
{"id": "DROP_dev_nfl_1471_638f8deb-1304-4de3-94aa-64f395d58441", "input": "How many field goals were kicked in the first quarter?", "output": "[\"SELECT['field goals']\", \"FILTER['#1', 'in the first quarter']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_nfl_1471_7837648a-f34f-4062-bd99-d827e9240fbc", "input": "How many yards longer was the second field goal than the first?", "output": "[\"SELECT['field goals']\", \"PROJECT['second of #REF', '#1']\", \"AGGREGATE['min', '#1']\", \"PROJECT['yards of #REF', '#2']\", \"PROJECT['yards of #REF', '#3']\", \"ARITHMETIC['difference', '#4', '#5']\"]"}
{"id": "DROP_dev_nfl_1471_7d97814e-34aa-45a1-8aac-cc5844c789e3", "input": "Which player scored the first field goal of the game?", "output": "[\"SELECT['field goals in the game']\", \"AGGREGATE['min', '#1']\", \"PROJECT['player of #REF', '#2']\"]"}
{"id": "DROP_dev_nfl_1471_90a420bb-8381-42d1-8964-8ba40b0bd123", "input": "Were there fewer touchdowns in the first half or the second half?", "output": "[\"SELECT['the first half']\", \"SELECT['the second half']\", \"PROJECT['touchdowns of #REF', '#1']\", \"PROJECT['touchdowns of #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"COMPARISON['min', '#5', '#6']\"]"}
{"id": "DROP_dev_nfl_1471_b448d01b-65d7-497c-bcfa-89e9ab450d42", "input": "Which players scored field goals longer than 18 yards?", "output": "[\"SELECT['field goals']\", \"PROJECT['yards of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is longer than 18 yards']\", \"PROJECT['players of #REF', '#3']\"]"}
{"id": "DROP_dev_nfl_1471_bf148e64-9319-44a9-a3b7-a84ed898cfad", "input": "How many plays did the Texans score on in the third quarter?", "output": "[\"SELECT['the Texans']\", \"PROJECT['scores of #REF', '#1']\", \"FILTER['#2', 'in the third quarter']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_nfl_1471_fadb0169-392d-4f10-939d-83e5890bc3f4", "input": "How many more yards was Janikowski's longest field goal over Brown's longest one?", "output": "[\"SELECT['Janikowski']\", \"SELECT['Brown']\", \"PROJECT['field goals of #REF', '#1']\", \"PROJECT['field goals of #REF', '#2']\", \"PROJECT['yards of #REF', '#3']\", \"PROJECT['yards of #REF', '#4']\", \"AGGREGATE['max', '#5']\", \"AGGREGATE['max', '#6']\", \"ARITHMETIC['difference', '#7', '#8']\"]"}
{"id": "DROP_dev_nfl_1476_0f47ae00-f859-4b05-94c8-6f58f78e2190", "input": "How many touchdowns were score in the game?", "output": "[\"SELECT['touchdowns in the game']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "DROP_dev_nfl_1476_a2dd3a99-5eca-49a3-8497-f9dd9b477f68", "input": "How many more yards of fieldgoals did Stover score compared to Brown?", "output": "[\"SELECT['Stover']\", \"SELECT['Brown']\", \"PROJECT['fieldgoals of #REF', '#1']\", \"PROJECT['fieldgoals of #REF', '#1']\", \"PROJECT['yards of #REF', '#3']\", \"PROJECT['yards of #REF', '#4']\", \"AGGREGATE['sum', '#5']\", \"AGGREGATE['sum', '#6']\", \"ARITHMETIC['difference', '#7', '#8']\"]"}
{"id": "DROP_dev_nfl_1476_b33e7b4d-8c48-4e52-ae23-bf2103387d64", "input": "How many field goals did Matt Stover kick?", "output": "[\"SELECT['Matt Stover']\", \"PROJECT['field goals of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_nfl_1476_cc6547d2-34c4-4fbd-8f13-186547338ddb", "input": "Which player ran the ball in for a two yard touchdown?", "output": "[\"SELECT['touchdown runs']\", \"PROJECT['yards of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is two yards']\", \"PROJECT['player of #REF', '#3']\"]"}
{"id": "DROP_dev_nfl_1476_d01bc78c-03de-41f0-a347-d63290ba35da", "input": "How many yards of field goals were kicked and scored?", "output": "[\"SELECT['field goals scored']\", \"PROJECT['yards of #REF', '#1']\", \"AGGREGATE['sum', '#2']\"]"}
{"id": "DROP_dev_nfl_1476_d59c842a-86f6-49f9-aa43-f9ae40698fe8", "input": "Which team won the game between the Bills and the Texans?", "output": "[\"SELECT['the game between the Bills and the Texans']\", \"BOOLEAN['#1', 'if the Bills won #REF']\", \"BOOLEAN['#1', 'if the Texans won #REF']\", \"COMPARISON['true', '#2', '#3']\"]"}
{"id": "DROP_dev_nfl_1476_f5e1e09b-04ac-47c7-8746-6e34a8f518e7", "input": "How many field goals did Matt Stover kick in the first half?", "output": "[\"SELECT['Matt Stover']\", \"PROJECT['field goals of #REF', '#1']\", \"FILTER['#2', 'in the first half']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_nfl_1478_0a502ede-d962-4fd5-a54a-3b874e479942", "input": "Which team scored in the second quarter?", "output": "[\"SELECT['the second quarter']\", \"PROJECT['scores of #REF', '#1']\", \"PROJECT['team of #REF', '#2']\"]"}
{"id": "DROP_dev_nfl_1478_1a0d7a7a-bbe1-476e-9679-3f94af700f9c", "input": "What years did Olf Trafford host the Kangaroo Tours of Great Britain and France?", "output": "[\"SELECT['Olf Trafford did host the Kangaroo Tours of Great Britain and France']\", \"PROJECT['years of #REF', '#1']\"]"}
{"id": "DROP_dev_nfl_1478_a38ce93f-dd3e-46c1-9ab3-4cc9793f4fd5", "input": "How many points did the Australian national rugby team beat Great Britain's team in 1986?", "output": "[\"SELECT['the Australian national rugby team']\", \"SELECT['Great Britain s rugby team']\", \"PROJECT['points in 1986 of #REF', '#1']\", \"PROJECT['points in 1986 of #REF', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "DROP_dev_nfl_1478_c8394254-70fd-4366-85e3-502c66458edd", "input": "How many more spectators were at Old Trafford in 1986 for the first test of the Kangaroo tour of Great Britain and France than the 1989 World Cup Challenege?", "output": "[\"SELECT['the Kangaroo tour of Great Britain and France']\", \"PROJECT['the first test of #REF', '#1']\", \"PROJECT['spectators at Old Trafford in 1986 of #REF', '#2']\", \"SELECT['the 1989 World Cup Challenege']\", \"PROJECT['spectators of #REF', '#4']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#5']\", \"ARITHMETIC['difference', '#6', '#7']\"]"}
{"id": "DROP_dev_nfl_1486_cd1e0092-028a-45a3-88b8-a68c40bb2cc7", "input": "Who kicked the longer field goal, Succop or Janikowski?", "output": "[\"SELECT['Succop']\", \"SELECT['Janikowski']\", \"PROJECT['field goal of #REF', '#1']\", \"PROJECT['field goal of #REF', '#2']\", \"PROJECT['how long was #REF', '#3']\", \"PROJECT['how long was #REF', '#4']\", \"COMPARISON['max', '#5', '#6']\"]"}
{"id": "DROP_dev_nfl_1486_f8cc6e88-203d-4502-947f-d9019892434c", "input": "How many yards was the longest field goal kicked?", "output": "[\"SELECT['field goals']\", \"PROJECT['yards of #REF', '#1']\", \"AGGREGATE['max', '#2']\"]"}
{"id": "DROP_dev_nfl_1492_3e9ea709-c113-4170-8118-b565bf235f38", "input": "How many scoring plays were there in the third quarter?", "output": "[\"SELECT['scoring plays']\", \"FILTER['#1', 'in the third quarter']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_nfl_1492_a0688b38-6ecf-49ae-bf9c-1b0779812943", "input": "Which team was in the lead by the fourth quarter?", "output": "[\"SELECT['teams']\", \"FILTER['#1', 'that was in the lead by the fourth quarter']\"]"}
{"id": "DROP_dev_nfl_1492_a2a8e5c5-d55b-4aa3-ae74-a8ffb1c395ff", "input": "How many scores were there in the third quarter?", "output": "[\"SELECT['scores']\", \"FILTER['#1', 'in the third quarter']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_nfl_1492_b030e1bf-2c42-4421-84c9-f16c5121a6ea", "input": "Who scored the first TD?", "output": "[\"SELECT['TD']\", \"AGGREGATE['min', '#1']\", \"PROJECT['who scored #REF', '#2']\"]"}
{"id": "DROP_dev_nfl_1498_b43c4623-57e1-481b-a9af-1d574bf75460", "input": "Who had an 80-yard touchdown reception?", "output": "[\"SELECT['touchdown receptions']\", \"FILTER['#1', 'that was 80-yard']\", \"PROJECT['who had #REF', '#2']\"]"}
{"id": "DROP_dev_nfl_1503_08e97977-0c88-46f4-a4e1-541833a52fd1", "input": "what team was second to score in the game?", "output": "[\"SELECT['scores in the game']\", \"PROJECT['teams of #REF', '#1']\", \"PROJECT['the second of #REF', '#2']\"]"}
{"id": "DROP_dev_nfl_1503_2de31cfa-c0dc-42a6-bdc5-8d13d88bef54", "input": "Which quarterback threw a touchdown pass in the first half?", "output": "[\"SELECT['touchdown passes']\", \"FILTER['#1', 'in the first half']\", \"PROJECT['quarterback who threw #REF', '#2']\"]"}
{"id": "DROP_dev_nfl_1515_39b31fb4-4690-42e4-bfbb-0c4d89f824ae", "input": "How many scoreless quarters did Carolina have?", "output": "[\"SELECT['Carolina']\", \"PROJECT['scoreless quarters of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_nfl_1515_664534cc-3f71-4e82-98eb-4cfbf44eed7c", "input": "How many touchdown passes did the Vikings have?", "output": "[\"SELECT['the Vikings']\", \"PROJECT['touchdown passes of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_nfl_1515_b6bc4ad8-1d5b-4b0d-b5d8-ef41347b9b7a", "input": "How many scoring yards did Jonathan Stewart have?", "output": "[\"SELECT['Jonathan Stewart']\", \"PROJECT['scoring yards of #REF', '#1']\", \"AGGREGATE['sum', '#2']\"]"}
{"id": "DROP_dev_nfl_1515_c32061d4-83fe-4ef9-af9b-69ed138bc5c5", "input": "How many touchdowns did Jonathan Stewart achieve?", "output": "[\"SELECT['Jonathan Stewart']\", \"PROJECT['touchdowns of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_nfl_1516_12d7ab9f-8547-4fe1-94f6-610d9a468769", "input": "How many  yards longer was Robbie Gould's longest field goal than Ryan Longwell's longest field goal?", "output": "[\"SELECT['Robbie Gould']\", \"SELECT['Ryan Longwell']\", \"PROJECT['field goals of #REF', '#1']\", \"PROJECT['field goals of #REF', '#2']\", \"PROJECT['yards of #REF', '#3']\", \"PROJECT['yards of #REF', '#4']\", \"AGGREGATE['max', '#5']\", \"AGGREGATE['max', '#6']\", \"ARITHMETIC['difference', '#7', '#8']\"]"}
{"id": "DROP_dev_nfl_1516_1e7b6670-2685-40c3-b146-1541e06a8144", "input": "How many total yards of touchdown passes did Favre make?", "output": "[\"SELECT['Favre']\", \"PROJECT['touchdown passes of #REF', '#1']\", \"PROJECT['yards of #REF', '#2']\", \"AGGREGATE['sum', '#3']\"]"}
{"id": "DROP_dev_nfl_1516_30e30004-e6d0-4fa4-919d-6e5d3633221c", "input": "How many yards longer was Jay Cutler's longest touchdown pass than his shortest?", "output": "[\"SELECT['Jay Cutler']\", \"PROJECT['touchdown passes of #REF', '#1']\", \"PROJECT['yards of #REF', '#2']\", \"AGGREGATE['max', '#3']\", \"AGGREGATE['min', '#3']\", \"ARITHMETIC['difference', '#4', '#5']\"]"}
{"id": "DROP_dev_nfl_1516_3af25fa0-812b-4ff1-a1b2-74fc33606643", "input": "How many total touchdown passing yards did Jay Cutler make?", "output": "[\"SELECT['Jay Cutler']\", \"PROJECT['touchdown passing of #REF', '#1']\", \"PROJECT['yards of #REF', '#2']\", \"AGGREGATE['sum', '#3']\"]"}
{"id": "DROP_dev_nfl_1516_73c6a71f-da5e-429c-88e6-bb22f67d509a", "input": "How many more TD passes did Cutler throw than Favre?", "output": "[\"SELECT['Cutler']\", \"SELECT['Favre']\", \"PROJECT['TD passes of #REF', '#1']\", \"PROJECT['TD passes of #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['difference', '#5', '#6']\"]"}
{"id": "DROP_dev_nfl_1516_772dceb5-8863-4120-b526-aa1b37f22ad3", "input": "how many yards did cutler increase with?", "output": "[\"SELECT['cutler']\", \"PROJECT['yards that #REF increase with', '#1']\"]"}
{"id": "DROP_dev_nfl_1516_78217f0c-768b-4b40-a692-35fbe7f46826", "input": "How many more total yards of field goals did Robbie Gould make than Ryan Longwell?", "output": "[\"SELECT['Robbie Gould']\", \"SELECT['Ryan Longwell']\", \"PROJECT['field goals of #REF', '#1']\", \"PROJECT['field goals of #REF', '#2']\", \"PROJECT['yards of #REF', '#3']\", \"PROJECT['yards of #REF', '#4']\", \"AGGREGATE['sum', '#5']\", \"AGGREGATE['sum', '#6']\", \"ARITHMETIC['difference', '#7', '#8']\"]"}
{"id": "DROP_dev_nfl_1516_829385ee-9fe0-4663-a9dd-38dd57812ad0", "input": "How many yards longer was Jay Cutler's longest touchdown pass than Brett Favre's longest touchdown pass?", "output": "[\"SELECT['Jay Cutler']\", \"SELECT['Brett Favre']\", \"PROJECT['touchdown passes of #REF', '#1']\", \"PROJECT['touchdown passes of #REF', '#2']\", \"PROJECT['yards of #REF', '#3']\", \"PROJECT['yards of #REF', '#4']\", \"AGGREGATE['max', '#5']\", \"AGGREGATE['max', '#6']\", \"ARITHMETIC['difference', '#7', '#8']\"]"}
{"id": "DROP_dev_nfl_1516_8511edf7-f222-469d-b5bf-e7cb4158c21c", "input": "How many total games did the Pacers play in the playoffs?", "output": "[\"SELECT['the Pacers']\", \"PROJECT['playoff games of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_nfl_1516_8af82d6d-0c3f-4d31-a9d0-10f51b76d4b2", "input": "How many 41-yard field goals were made in the game?", "output": "[\"SELECT['field goals in the game']\", \"FILTER['#1', 'that are 41-yard']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_nfl_1516_8b4f47b1-0224-4091-958a-ac47e1f77507", "input": "How many 1-yard touchdown runs were made in the game?", "output": "[\"SELECT['touchdown runs in the game']\", \"PROJECT['yards of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is 1-yard']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_nfl_1516_91de0f9e-fe21-4c6b-b470-aceea39a0a9c", "input": "How many yards longer was Gould's longest field goal over his shortest one?", "output": "[\"SELECT['Gould']\", \"PROJECT['field goals of #REF', '#1']\", \"PROJECT['yards of #REF', '#2']\", \"AGGREGATE['max', '#3']\", \"AGGREGATE['min', '#3']\", \"ARITHMETIC['difference', '#4', '#5']\"]"}
{"id": "DROP_dev_nfl_1516_921121f9-02dc-4edb-bc3f-903d9c75a310", "input": "How many points did the saints lose to tampa?", "output": "[\"SELECT['the saints']\", \"PROJECT['points of #REF', '#1']\", \"AGGREGATE['sum', '#2']\", \"SELECT['tampa']\", \"PROJECT['points of #REF', '#4']\", \"AGGREGATE['sum', '#5']\", \"ARITHMETIC['difference', '#3', '#6']\"]"}
{"id": "DROP_dev_nfl_1516_9bfd2c2f-7e89-4093-a547-4982ad999651", "input": "how many yards did Gould nail in the first quarter?", "output": "[\"SELECT['Gould']\", \"PROJECT['yards of #REF', '#1']\", \"FILTER['#2', 'in the first quarter']\", \"AGGREGATE['sum', '#3']\"]"}
{"id": "DROP_dev_nfl_1516_9e09713a-318b-421e-964e-cc96ccc1d0bc", "input": "How many more total touchdown passing yards did Jay Cutler make than Brett Favre?", "output": "[\"SELECT['Jay Cutler']\", \"SELECT['Brett Favre']\", \"PROJECT['touchdown pass of #REF', '#1']\", \"PROJECT['touchdown pass of #REF', '#2']\", \"PROJECT['yards of #REF', '#3']\", \"PROJECT['yards of #REF', '#4']\", \"AGGREGATE['sum', '#5']\", \"AGGREGATE['sum', '#6']\", \"ARITHMETIC['difference', '#7', '#8']\"]"}
{"id": "DROP_dev_nfl_1516_c3848932-475e-4212-af62-f695bcbded61", "input": "How many total yards of touchdown passes did Cutler make?", "output": "[\"SELECT['Cutler']\", \"PROJECT['touchdown passes of #REF', '#1']\", \"PROJECT['yards of #REF', '#2']\", \"AGGREGATE['sum', '#3']\"]"}
{"id": "DROP_dev_nfl_1516_c75f94d2-a8ba-4cde-9266-30009b4230de", "input": "How many yards longer was Cutler's longest touchdown pass than his shortest?", "output": "[\"SELECT['Cutler']\", \"PROJECT['touchdown passes of #REF', '#1']\", \"PROJECT['yards of #REF', '#2']\", \"AGGREGATE['max', '#3']\", \"AGGREGATE['min', '#3']\", \"ARITHMETIC['difference', '#4', '#5']\"]"}
{"id": "DROP_dev_nfl_1516_d7df715b-82c1-45db-a69b-2ec08557e92c", "input": "How many touchdowns occurred in the first half?", "output": "[\"SELECT['touchdowns']\", \"FILTER['#1', 'in the first half']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_nfl_1516_e48db11c-c0cd-4a24-8390-63bd3d33c813", "input": "How many field goals of at least 40 yards did Gould make?", "output": "[\"SELECT['Gould']\", \"PROJECT['field goals of #REF', '#1']\", \"PROJECT['yards of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is at least 40 yards']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "DROP_dev_nfl_1516_ea45fe99-8b5f-4db1-8fd7-f8e78ac4f9e3", "input": "How many 6-yard touchdown passes did Brett Favre have?", "output": "[\"SELECT['Brett Favre']\", \"PROJECT['touchdown passes of #REF', '#1']\", \"PROJECT['yards of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is 6-yard']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "DROP_dev_nfl_1516_ec49e997-8c47-410e-9b94-ec59017f9d9a", "input": "How many points did the Pacers win game 7 against the Celtics by?", "output": "[\"SELECT['game 7 of the Pacers against the Celtics']\", \"PROJECT['points of the Pacers of #REF', '#1']\", \"PROJECT['points of the Celtics of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"ARITHMETIC['difference', '#4', '#5']\"]"}
{"id": "DROP_dev_nfl_153_027ac1ea-4f41-447e-bc7b-0d5eb892d8e6", "input": "How many more touchdown passes did Jon Kitna throw compared to everyone else?", "output": "[\"SELECT['touchdown passes']\", \"FILTER['#1', 'that Jon Kitna throws']\", \"DISCARD['#1', '#2']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"ARITHMETIC['difference', '#4', '#5']\"]"}
{"id": "DROP_dev_nfl_153_3ffad00b-cdcb-40b2-b2c5-fe459d716884", "input": "How many yards of touchdown passes did Jon Kitna throw?", "output": "[\"SELECT['Jon Kitna']\", \"PROJECT['touchdown passes of #REF', '#1']\", \"PROJECT['yards of #REF', '#2']\", \"AGGREGATE['sum', '#3']\"]"}
{"id": "DROP_dev_nfl_153_54db511c-f83d-43ef-8b54-dc43db2909fd", "input": "How many field goals did Robbie Gould make in the 4th quarter?", "output": "[\"SELECT['Robbie Gould']\", \"PROJECT['field goals of #REF', '#1']\", \"FILTER['#2', 'in the 4th quarter']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_nfl_153_951ba606-5145-4f2d-bddb-7f7f456c911f", "input": "From what distance did Robbie Gould make more than one field goal attempt?", "output": "[\"SELECT['Robbie Gould']\", \"PROJECT['field goal attempts of #REF', '#1']\", \"FILTER['#2', 'that Robbie Gould make']\", \"PROJECT['distances of #REF', '#3']\", \"GROUP['count', '#3', '#4']\", \"COMPARATIVE['#4', '#5', 'is more than one']\"]"}
{"id": "DROP_dev_nfl_153_b307c078-0df3-4823-a6e9-fa8cf912063d", "input": "How many more yards was Kitnas 20 yards touchdown pass compared  to Adrian Petersons touchdown run?", "output": "[\"SELECT['Kitnas']\", \"SELECT['Adrian Petersons']\", \"PROJECT['touchdown passes of #REF', '#1']\", \"PROJECT['touchdown run of #REF', '#2']\", \"PROJECT['yards of #REF', '#3']\", \"FILTER['#5', 'that is 20 yards']\", \"PROJECT['yards of #REF', '#4']\", \"ARITHMETIC['difference', '#6', '#7']\"]"}
{"id": "DROP_dev_nfl_153_c6bce289-1649-47cf-93df-29ebd80d41ed", "input": "How many field goals were over 30 yards?", "output": "[\"SELECT['field goals']\", \"PROJECT['yards of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is higher than 30']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_nfl_153_e2970301-6182-40db-b2fe-cfe60b1bc388", "input": "How many touchdown passes were over 19 yards?", "output": "[\"SELECT['touchdown passes']\", \"PROJECT['yards of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is higher than 19 yards']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_nfl_1540_9928edae-774f-4d56-b6cf-568c69a6074e", "input": "Who threw the longer touchdown pass in the first half, Brees or Bulger?", "output": "[\"SELECT['the first half']\", \"PROJECT['touchdown passes of #REF', '#1']\", \"PROJECT['how long are #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is the highest']\", \"BOOLEAN['#4', 'if Brees threw #REF']\", \"BOOLEAN['#4', 'if Bulger threw #REF']\", \"COMPARISON['true', '#5', '#6']\"]"}
{"id": "DROP_dev_nfl_1540_b33b8939-05ac-4935-898b-405fec790924", "input": "How many yards was Brees longest touchdown pass of the game?", "output": "[\"SELECT['Brees']\", \"PROJECT['touchdown passes of #REF', '#1']\", \"PROJECT['yards of #REF', '#2']\", \"AGGREGATE['max', '#3']\"]"}
{"id": "DROP_dev_nfl_1540_f2337152-73f4-4f78-bdca-0eacaee91dd5", "input": "How many is the difference in the number of yards of Bush's TD run and the number of yards of the pass to Meachem?", "output": "[\"SELECT['Bush']\", \"PROJECT['TD run of #REF', '#1']\", \"PROJECT['yards of #REF', '#2']\", \"SELECT['Meachem']\", \"PROJECT['pass to #REF', '#4']\", \"PROJECT['yards of #REF', '#5']\", \"ARITHMETIC['difference', '#3', '#6']\"]"}
{"id": "DROP_dev_nfl_1540_fe4d6ed9-c523-4225-8c5c-d6a35532de6b", "input": "In which quarter did both teams not score any points?", "output": "[\"SELECT['quarters']\", \"PROJECT['points scored of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is zero']\"]"}
{"id": "DROP_dev_nfl_1553_8a4780e8-b150-4dd5-894b-4fe1ba7806cd", "input": "How many interceptions did Arizona catch?", "output": "[\"SELECT['Arizona']\", \"PROJECT['interceptions of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_nfl_1553_9b6bd0fc-f8db-453b-a190-046c6cd6ff26", "input": "Which player made the first score of the game?", "output": "[\"SELECT['scores in the game']\", \"AGGREGATE['min', '#1']\", \"PROJECT['player of #REF', '#2']\"]"}
{"id": "DROP_dev_nfl_1566_3edb976e-e822-4321-8ae0-e908513b60ea", "input": "how many yards did Pierre run for the TD?", "output": "[\"SELECT['Pierre']\", \"PROJECT['TD runs of #REF', '#1']\", \"PROJECT['yards of #REF', '#2']\", \"AGGREGATE['sum', '#3']\"]"}
{"id": "DROP_dev_nfl_1566_79e8a954-2c88-4b68-969c-ff0a7dfa8c66", "input": "how many yards did Feely close with?", "output": "[\"SELECT['Feely']\", \"PROJECT['yards close with of #REF', '#1']\", \"AGGREGATE['sum', '#2']\"]"}
{"id": "DROP_dev_nfl_1566_f0b18ae3-a7ed-427b-89a8-e493fa8b6391", "input": "How many yards did Carney make?", "output": "[\"SELECT['Carney']\", \"PROJECT['yards of #REF', '#1']\", \"AGGREGATE['sum', '#2']\"]"}
{"id": "DROP_dev_nfl_1586_00329ae1-ff9a-48a4-bc8a-cff500eb7580", "input": "How many yards was the longest scoring play of the first quarter?", "output": "[\"SELECT['scoring plays']\", \"FILTER['#1', 'of the first quarter']\", \"PROJECT['yards of #REF', '#2']\", \"AGGREGATE['max', '#3']\"]"}
{"id": "DROP_dev_nfl_1586_3f8d819f-7ca9-43c7-abf7-43163be96802", "input": "How many yards longer was Donovan McNabb's longest touchdown pass than his shortest?", "output": "[\"SELECT['Donovan McNabb']\", \"PROJECT['touchdown passes of #REF', '#1']\", \"PROJECT['yards of #REF', '#2']\", \"AGGREGATE['max', '#3']\", \"AGGREGATE['min', '#3']\", \"ARITHMETIC['difference', '#4', '#5']\"]"}
{"id": "DROP_dev_nfl_1586_41060b06-27f3-4da8-8a3d-9153d574ccd3", "input": "How many yards longer was Akers' field goal over Kasay's one?", "output": "[\"SELECT['Akers']\", \"PROJECT['field goal of #REF', '#1']\", \"PROJECT['yards of #REF', '#2']\", \"SELECT['Kasay']\", \"PROJECT['field goal of #REF', '#4']\", \"PROJECT['yards of #REF', '#5']\", \"ARITHMETIC['difference', '#3', '#6']\"]"}
{"id": "DROP_dev_nfl_1586_49a3691e-be4e-412b-9f22-c1e46adf4e90", "input": "How many more yards was McNabb's longest TD pass over his shortest one?", "output": "[\"SELECT['McNabb']\", \"PROJECT['TD passes of #REF', '#1']\", \"PROJECT['yards of #REF', '#2']\", \"AGGREGATE['max', '#3']\", \"AGGREGATE['min', '#3']\", \"ARITHMETIC['difference', '#4', '#5']\"]"}
{"id": "DROP_dev_nfl_1586_6a213de4-b244-4fd1-80a3-5c14c46c2ff2", "input": "In which quarter did Eagles score most touchdowns?", "output": "[\"SELECT['the Eagles']\", \"PROJECT['touchdowns of #REF', '#1']\", \"PROJECT['quarters of #REF', '#2']\", \"GROUP['count', '#2', '#3']\", \"COMPARATIVE['#3', '#4', 'is the highest']\"]"}
{"id": "DROP_dev_nfl_1586_7f3817a7-da9e-4d65-a6c6-2b3a06456b6f", "input": "How many passing touchdown yards did Donovan McNabb throw?", "output": "[\"SELECT['Donovan McNabb']\", \"PROJECT['passing touchdowns of #REF', '#1']\", \"PROJECT['yards of #REF', '#2']\", \"AGGREGATE['sum', '#3']\"]"}
{"id": "DROP_dev_nfl_1586_869dfdaf-bb73-4af7-a04a-7d5fec5c825b", "input": "Which players made field goals longer than 20-yards?", "output": "[\"SELECT['field goals made']\", \"PROJECT['yards of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is longer than 20-yards']\", \"PROJECT['players of #REF', '#3']\"]"}
{"id": "DROP_dev_nfl_1586_d85999c9-8e2e-42ee-98c4-9921ab62398f", "input": "What all touchdowns did Philadelphia make?", "output": "[\"SELECT['Philadelphia']\", \"PROJECT['touchdowns of #REF', '#1']\"]"}
{"id": "DROP_dev_nfl_1586_edaab33f-c6fc-49a6-a1e7-7142adb334fc", "input": "Who had the longer TD run, Williams or McNabb?", "output": "[\"SELECT['Williams']\", \"PROJECT['TD run of #REF', '#1']\", \"SELECT['McNabb']\", \"PROJECT['TD run of #REF', '#3']\", \"COMPARISON['max', '#2', '#4']\"]"}
{"id": "DROP_dev_nfl_1586_f8966e64-6ed8-4afa-977c-2393b1f63c62", "input": "How many yards longer was Williams' TD run over McNabb's one?", "output": "[\"SELECT['Williams']\", \"PROJECT['TD run of #REF', '#1']\", \"PROJECT['yards of #REF', '#2']\", \"SELECT['McNabb']\", \"PROJECT['TD run of #REF', '#4']\", \"PROJECT['yards of #REF', '#5']\", \"ARITHMETIC['difference', '#3', '#6']\"]"}
{"id": "DROP_dev_nfl_1596_4f16edca-fe01-4ae8-9092-523548d8d1c4", "input": "how many yards did ganther return?", "output": "[\"SELECT['ganther']\", \"PROJECT['returns of #REF', '#1']\", \"PROJECT['yards of #REF', '#2']\", \"AGGREGATE['sum', '#3']\"]"}
{"id": "DROP_dev_nfl_1596_ef82d962-7ffe-481a-b51d-63e60bbf2c2c", "input": "How many of the touchdowns were running plays?", "output": "[\"SELECT['touchdowns']\", \"FILTER['#1', 'that were running plays']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_nfl_16_1b6ba6ab-1fcd-49ef-bd41-8307dfbfa6a6", "input": "How many points did the Falcons score?", "output": "[\"SELECT['the Falcons']\", \"PROJECT['points of #REF', '#1']\", \"AGGREGATE['sum', '#2']\"]"}
{"id": "DROP_dev_nfl_16_44343536-3610-4ed2-b478-d3e4d10417fe", "input": "How many combined yardage did  John Carney kick in the second quarter?", "output": "[\"SELECT['John Carney']\", \"PROJECT['kicks of #REF', '#1']\", \"FILTER['#2', 'in the second quarter']\", \"PROJECT['yardage of #REF', '#3']\", \"AGGREGATE['sum', '#4']\"]"}
{"id": "DROP_dev_nfl_16_62adf2f2-ed66-48a7-b5f6-5a97e0cab815", "input": "How many field goals did Carney kick in the second half?", "output": "[\"SELECT['Carney']\", \"PROJECT['field goals of #REF', '#1']\", \"FILTER['#2', 'in the second half']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_nfl_16_675a3207-ee8d-40cc-a014-97684dac5f3a", "input": "How many field goals did Morten Andersen kick in the first quarter?", "output": "[\"SELECT['Morten Andersen']\", \"PROJECT['field goals of #REF', '#1']\", \"FILTER['#2', 'in the first quarter']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_nfl_16_88b4c5b2-c9cc-46af-b79b-a888766c406f", "input": "Who had an 11 yard touchdown run?", "output": "[\"SELECT['touchdown runs']\", \"PROJECT['yards of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is 11 yards']\", \"PROJECT['who had #REF', '#3']\"]"}
{"id": "DROP_dev_nfl_16_9eb68f5c-0c59-4850-9f2d-e6bbb80cbfa0", "input": "How many points did the Falcons fall behind?", "output": "[\"SELECT['the Falcons']\", \"PROJECT['points fall behind of #REF', '#1']\"]"}
{"id": "DROP_dev_nfl_1618_06483ca6-0593-400e-837d-03ff24721e1e", "input": "How many yards longer was San Diego's first field goal than the Dolphin's first field goal?", "output": "[\"SELECT['San Diego']\", \"SELECT['the Dolphin']\", \"PROJECT['field goals of #REF', '#1']\", \"PROJECT['field goals of #REF', '#2']\", \"AGGREGATE['min', '#3']\", \"AGGREGATE['min', '#4']\", \"PROJECT['yards of #REF', '#5']\", \"PROJECT['yards of #REF', '#6']\", \"ARITHMETIC['difference', '#7', '#8']\"]"}
{"id": "DROP_dev_nfl_1618_19a74946-cf5a-429f-9a7e-f409c012379b", "input": "Who scored more field goals, Nate Kaeding or Dan Carpenter?", "output": "[\"SELECT['Nate Kaeding']\", \"SELECT['Dan Carpenter']\", \"PROJECT['field goals of #REF', '#1']\", \"PROJECT['field goals of #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"COMPARISON['max', '#5', '#6']\"]"}
{"id": "DROP_dev_nfl_1652_153470a0-f39f-4869-af19-9d0289905eb8", "input": "How many field goals did Josh Brown successfully kick?", "output": "[\"SELECT['Josh Brown']\", \"PROJECT['field goals of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_nfl_1652_9e825996-b1b9-4773-bd0a-ff0d206621d1", "input": "How many touchdown receptions did Packers wideouts score?", "output": "[\"SELECT['Packers']\", \"PROJECT['wideouts of #REF', '#1']\", \"PROJECT['touchdown receptions of #REF', '#2']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_nfl_1670_12cf63d0-7a22-4278-a04b-f21097cf1e69", "input": "How many yards longer was Barth's second field goal over his first one?", "output": "[\"SELECT['Barth']\", \"PROJECT['field goals of #REF', '#1']\", \"PROJECT['the second of #REF', '#2']\", \"AGGREGATE['min', '#2']\", \"PROJECT['yards of #REF', '#3']\", \"PROJECT['yards of #REF', '#4']\", \"ARITHMETIC['difference', '#5', '#6']\"]"}
{"id": "DROP_dev_nfl_1670_71719576-574b-42cf-8bbb-c3ce23283249", "input": "In which quarter did the Bucs kick a longer field goal, the second or the third?", "output": "[\"SELECT['the Bucs']\", \"PROJECT['field goals of #REF', '#1']\", \"FILTER['#2', 'in the second quarter']\", \"FILTER['#2', 'in the third quarter']\", \"PROJECT['how long was #REF', '#3']\", \"PROJECT['how long was #REF', '#4']\", \"COMPARISON['max', '#5', '#6']\"]"}
{"id": "DROP_dev_nfl_1670_9435d1dc-13d1-4cef-97f5-abfb416320b7", "input": "Did the Buccaneers score first in the first half or the second?", "output": "[\"SELECT['the first half']\", \"SELECT['the second half']\", \"PROJECT['scores of #REF', '#1']\", \"PROJECT['scores of #REF', '#2']\", \"AGGREGATE['min', '#3']\", \"AGGREGATE['min', '#4']\", \"PROJECT['who scored #REF', '#5']\", \"PROJECT['who scored #REF', '#6']\", \"BOOLEAN['#7', 'was the Buccaneers']\", \"BOOLEAN['#8', 'was the Buccaneers']\", \"COMPARISON['true', '#9', '#10']\"]"}
{"id": "DROP_dev_nfl_1670_b6785b9f-389a-4e0c-a563-942fab85bb06", "input": "How many interceptions did Matt Hasselbeck throw?", "output": "[\"SELECT['Matt Hasselbeck']\", \"PROJECT['throws of #REF', '#1']\", \"FILTER['#2', 'that are interceptions']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_nfl_1670_e3aa621b-9f06-4e8a-8981-39dcf0b59ab2", "input": "How many yards difference was there between Josh Freeman's field goal and touchdown pass?", "output": "[\"SELECT['Josh Freeman']\", \"PROJECT['field goal of #REF', '#1']\", \"PROJECT['touchdown pass of #REF', '#1']\", \"PROJECT['yards of #REF', '#2']\", \"PROJECT['yards of #REF', '#3']\", \"ARITHMETIC['difference', '#4', '#5']\"]"}
{"id": "DROP_dev_nfl_1670_ec6f6a9d-75c8-4c22-89d9-9e0f7e41be2e", "input": "How many field goals did Barth kick in the second half?", "output": "[\"SELECT['Barth']\", \"PROJECT['field goals of #REF', '#1']\", \"FILTER['#2', 'in the second half']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_nfl_1672_0d4f9fa3-1999-467f-b3d2-c61bf0e278dc", "input": "How many yards longer was Bironas' fourth quarter field goal than Reeds?", "output": "[\"SELECT['Bironas']\", \"SELECT['Reeds']\", \"PROJECT['field goals of #REF', '#1']\", \"PROJECT['field goals of #REF', '#2']\", \"FILTER['#3', 'in the fourth quarter']\", \"FILTER['#4', 'in the fourth quarter']\", \"PROJECT['yards of #REF', '#5']\", \"PROJECT['yards of #REF', '#6']\", \"ARITHMETIC['difference', '#7', '#8']\"]"}
{"id": "DROP_dev_nfl_1672_4e87ade8-b7e6-48c3-accc-d779e2b960cf", "input": "How many yards did the Steelers get to win the game?", "output": "[\"SELECT['the Steelers']\", \"PROJECT['yards that #REF get', '#1']\", \"AGGREGATE['sum', '#2']\"]"}
{"id": "DROP_dev_nfl_1672_9036cb63-c2b1-4a43-acf2-ee2208181f29", "input": "How many yards was Roethlisbergers touchdown pass?", "output": "[\"SELECT['Roethlisbergers']\", \"PROJECT['touchdown pass of #REF', '#1']\", \"PROJECT['yards of #REF', '#2']\"]"}
{"id": "DROP_dev_nfl_1672_96a27b0b-ddcf-42c8-9651-6074c40a9d4f", "input": "Whose second quarter touchdown pass was longer Roethlisberger or Collins?", "output": "[\"SELECT['Roethlisberger']\", \"SELECT['Collins']\", \"PROJECT['touchdown passes of #REF', '#1']\", \"PROJECT['touchdown passes of #REF', '#2']\", \"FILTER['#3', 'in second quarter']\", \"FILTER['#4', 'in second quarter']\", \"PROJECT['longness of #REF', '#5']\", \"PROJECT['longness of #REF', '#6']\", \"COMPARISON['max', '#7', '#8']\"]"}
{"id": "DROP_dev_nfl_1689_42caf0e7-5100-4c9b-83d9-e488c1c739b7", "input": "How many first-half touchdowns did Atlanta score?", "output": "[\"SELECT['Atlanta']\", \"PROJECT['touchdowns of #REF', '#1']\", \"FILTER['#2', 'that was first-half']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_nfl_1743_07b2512d-e0de-4d2f-9c2f-74a358fc4f7f", "input": "How many yards were gained on passing touchdowns measuring less than 5-yards in length?", "output": "[\"SELECT['touchdowns']\", \"FILTER['#1', 'that were passing']\", \"PROJECT['lengths of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'lower than 5-yards']\", \"PROJECT['lengths of #REF', '#4']\", \"AGGREGATE['sum', '#5']\"]"}
{"id": "DROP_dev_nfl_1743_1a1ee593-9b66-45f6-b60b-f2bde8117886", "input": "how many yards did folk nail?", "output": "[\"SELECT['folk']\", \"PROJECT['yards of #REF', '#1']\", \"AGGREGATE['sum', '#2']\"]"}
{"id": "DROP_dev_nfl_1743_27311f04-73dd-49ee-9b2f-7f079b032c9b", "input": "How many more first half touchdowns did the Jets have than Buffalo?", "output": "[\"SELECT['touchdowns']\", \"FILTER['#1', 'that are in first half']\", \"FILTER['#2', 'of Jets']\", \"FILTER['#2', 'of Buffalo']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['difference', '#5', '#6']\"]"}
{"id": "DROP_dev_nfl_1743_2cde67b2-80e5-40aa-9598-f65a893cde6b", "input": "How many yards were gained on passing touchdowns measuring longer than 20-yards in length?", "output": "[\"SELECT['passing touchdowns']\", \"PROJECT['yards of #REF', '#1']\", \"FILTER['#2', 'that are longer than 20-yards']\", \"AGGREGATE['sum', '#3']\"]"}
{"id": "DROP_dev_nfl_1743_34f96c58-9e46-4a4d-8b21-65799d79dfa8", "input": "How many different players threw a TD pass for the Jets?", "output": "[\"SELECT['the Jets']\", \"PROJECT['TD passes of #REF', '#1']\", \"PROJECT['different players of #REF', '#2']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_nfl_1743_4e968686-319f-4d94-b490-652220cf1575", "input": "How many total yards were gained on rushing touchdowns by LaDainian Tomlinson?", "output": "[\"SELECT['LaDainian Tomlinson']\", \"PROJECT['rushing touchdowns of #REF', '#1']\", \"PROJECT['yards of #REF', '#2']\", \"AGGREGATE['sum', '#3']\"]"}
{"id": "DROP_dev_nfl_1743_808b9efc-b11d-4016-b148-5eb22316ed2c", "input": "How many touchdowns did Mark Sanchez throw?", "output": "[\"SELECT['Mark Sanchez']\", \"PROJECT['touchdowns of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_nfl_1743_81d476cd-8451-4ef2-8181-fd38116c8fe5", "input": "How many passing touchdowns measured shorter than 5-yards in length?", "output": "[\"SELECT['passing touchdowns']\", \"PROJECT['length of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is lower than 5-yards']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_nfl_1743_8aa72066-46f1-4fa2-ba5a-8fb6b85e22f4", "input": "How many yards of differential were there between Nick Folk's first field goal and the first rushing touchdown of the game?", "output": "[\"SELECT['Nick Folk']\", \"PROJECT['field goals of #REF', '#1']\", \"FILTER['#2', 'that is first']\", \"PROJECT['yards of #REF', '#3']\", \"SELECT['touchdowns']\", \"FILTER['#5', 'that are rushing']\", \"FILTER['#6', 'that is first']\", \"PROJECT['yards of #REF', '#7']\", \"ARITHMETIC['difference', '#4', '#8']\"]"}
{"id": "DROP_dev_nfl_1743_8bb11a98-fe3c-402b-b5b9-9dba92a639ee", "input": "Which player caught the second shortest touchdown pass?", "output": "[\"SELECT['touchdown passes']\", \"AGGREGATE['min', '#1']\", \"DISCARD['#1', '#2']\", \"AGGREGATE['min', '#3']\", \"PROJECT['player who caught #REF', '#4']\"]"}
{"id": "DROP_dev_nfl_1743_91c8dd6c-7176-4690-8210-0cae0266be54", "input": "How many yards did the first rushing touchdown and the first field goal of the game combine for?", "output": "[\"SELECT['rushing touchdowns']\", \"AGGREGATE['min', '#1']\", \"PROJECT['yards of #REF', '#2']\", \"SELECT['field goals']\", \"AGGREGATE['min', '#4']\", \"PROJECT['yards of #REF', '#5']\", \"ARITHMETIC['sum', '#3', '#6']\"]"}
{"id": "DROP_dev_nfl_1743_9921c50b-e446-4c46-9f5f-899bc6157b71", "input": "How many yards was the longest TD play?", "output": "[\"SELECT['TD plays']\", \"PROJECT['yards of #REF', '#1']\", \"AGGREGATE['max', '#2']\"]"}
{"id": "DROP_dev_nfl_1743_a41f2022-868f-4dba-9ac5-f5710c5865b8", "input": "Which players threw more than 1 touchdown pass?", "output": "[\"SELECT['touchdown passes']\", \"PROJECT['players of #REF', '#1']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is higher than 1']\"]"}
{"id": "DROP_dev_nfl_1743_ab8f34b8-67b4-49b3-9148-150cf63434db", "input": "Which players scored touchdowns longer than 10 yards?", "output": "[\"SELECT['touchdowns']\", \"PROJECT['yards of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is longer than 10 yards']\", \"PROJECT['players of #REF', '#3']\"]"}
{"id": "DROP_dev_nfl_1769_09b90451-e508-4b2e-9c96-948b18573bac", "input": "How many players helped to take the early Bears lead?", "output": "[\"SELECT['the Bears']\", \"PROJECT['the early lead of #REF', '#1']\", \"PROJECT['players helped of #REF', '#2']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_nfl_1769_869bbf13-12f9-4973-b8f4-b6e0020a3c8f", "input": "How many total yards did Jahvid Best have on touchdown runs?", "output": "[\"SELECT['Jahvid Best']\", \"PROJECT['touchdown runs of #REF', '#1']\", \"PROJECT['yards of #REF', '#2']\", \"AGGREGATE['sum', '#3']\"]"}
{"id": "DROP_dev_nfl_1789_2c82a53c-4852-483a-bfba-68a3b2ecb0ca", "input": "How many total yards did Carson Palmer throw on touchdown passes?", "output": "[\"SELECT['Carson Palmer']\", \"PROJECT['touchdown passes of #REF', '#1']\", \"PROJECT['yards of #REF', '#2']\", \"AGGREGATE['sum', '#3']\"]"}
{"id": "DROP_dev_nfl_1789_3b77f199-0cd0-4e2a-a119-ae4009c9c620", "input": "How many yards was the first fieldgoal?", "output": "[\"SELECT['fieldgoals']\", \"FILTER['#1', 'that is first']\", \"PROJECT['yards of #REF', '#2']\"]"}
{"id": "DROP_dev_nfl_1789_80105ea8-6c3e-4329-9105-92943a301626", "input": "How many yards was the third touchdown?", "output": "[\"SELECT['touchdowns']\", \"PROJECT['third of #REF', '#1']\", \"PROJECT['yards of #REF', '#2']\"]"}
{"id": "DROP_dev_nfl_1789_d86bde75-14f0-4758-a17b-581cd9f5e150", "input": "What team had the longest fumble return of the game?", "output": "[\"SELECT['fumble returns of the game']\", \"PROJECT['how long are #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is the highest']\", \"PROJECT['team of #REF', '#3']\"]"}
{"id": "DROP_dev_nfl_1789_e4fda3e3-9b8c-47ec-8134-daf4cadd0827", "input": "How many yards it total field goals did Nugent kick?", "output": "[\"SELECT['Nugent']\", \"PROJECT['field goals of #REF', '#1']\", \"PROJECT['yards of #REF', '#2']\", \"AGGREGATE['sum', '#3']\"]"}
{"id": "DROP_dev_nfl_180_217203d5-84be-456f-9bc9-ba6be82838eb", "input": "Peyton Manning and Marvin Harriso connected for how many touchdowns?", "output": "[\"SELECT['Peyton Manning']\", \"PROJECT['touchdowns of #REF', '#1']\", \"SELECT['Marvin Harriso']\", \"PROJECT['touchdowns of #REF', '#3']\", \"SELECT['touchdowns']\", \"INTERSECTION['#5', '#2', '#4']\", \"AGGREGATE['count', '#6']\"]"}
{"id": "DROP_dev_nfl_180_3758240d-23ad-421c-8468-f794662ac8b3", "input": "How many passes did David Carr throw?", "output": "[\"SELECT['David Carr']\", \"PROJECT['passes of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_nfl_180_3dbc2d95-68be-4b3e-a468-7f0154a0edc2", "input": "Who recovered a Dominic Rhodes fumble?", "output": "[\"SELECT['Dominic Rhodes']\", \"PROJECT['fumble of #REF', '#1']\", \"PROJECT['who recovered #REF', '#2']\"]"}
{"id": "DROP_dev_nfl_180_7d8a4eea-d804-4ce6-8c0e-110bc9d47345", "input": "How many times was David Carr sacked?", "output": "[\"SELECT['David Carr']\", \"PROJECT['sacks of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_nfl_180_94dcc3a6-e0b6-4b61-ac18-1bc8028a2272", "input": "How many passes did Marvin Harrison receive?", "output": "[\"SELECT['Marvin Harrison']\", \"PROJECT['passes that #REF receive', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_nfl_180_bb3fcb2a-44aa-4828-b379-a2abe0b7174e", "input": "How many yards did Carr throw for?", "output": "[\"SELECT['Carr']\", \"PROJECT['throws of #REF', '#1']\", \"PROJECT['yards of #REF', '#2']\", \"AGGREGATE['sum', '#3']\"]"}
{"id": "DROP_dev_nfl_180_e8e26d61-79a6-4ba2-8e94-ee7d99fa38cd", "input": "How many turnovers were there?", "output": "[\"SELECT['turnovers']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "DROP_dev_nfl_1829_1707acb3-8799-4fdc-bef0-d233a9ffffed", "input": "Who threw more touchdown passes, Kyle Orton or Matt Hasselbeck?", "output": "[\"SELECT['Kyle Orton']\", \"PROJECT['touchdown passes of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"SELECT['Matt Hasselbeck']\", \"PROJECT['touchdown passes of #REF', '#4']\", \"AGGREGATE['count', '#5']\", \"COMPARISON['max', '#3', '#6']\"]"}
{"id": "DROP_dev_nfl_1829_b42a61fe-1d34-48dd-9806-4f552248f6ef", "input": "How many total yards of rushing touchdowns were scored?", "output": "[\"SELECT['rushing touchdowns']\", \"PROJECT['yards of #REF', '#1']\", \"AGGREGATE['sum', '#2']\"]"}
{"id": "DROP_dev_nfl_1829_ca041a39-bddb-465b-8c66-de4a21de1073", "input": "Which Broncos had rushing touchdowns?", "output": "[\"SELECT['Broncos']\", \"FILTER['#1', 'that had rushing touchdowns']\"]"}
{"id": "DROP_dev_nfl_1829_d238552b-0bcb-4483-b72d-791b8b093cef", "input": "How many 1-yard touchdowns did the Broncos score?", "output": "[\"SELECT['the Broncos']\", \"PROJECT['touchdowns of #REF', '#1']\", \"PROJECT['yards of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is 1-yard']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "DROP_dev_nfl_1838_2f70aca0-fbe1-43e1-8f0e-a448c3326430", "input": "How many yards difference was Matt Prater’s first field goal compared to his second?", "output": "[\"SELECT['Matt Prater']\", \"PROJECT['field goals of #REF', '#1']\", \"AGGREGATE['min', '#2']\", \"PROJECT['second of #REF', '#2']\", \"PROJECT['yards of #REF', '#3']\", \"PROJECT['yards of #REF', '#4']\", \"ARITHMETIC['difference', '#5', '#6']\"]"}
{"id": "DROP_dev_nfl_1838_38327bd5-01a4-4342-b7e0-cb209f2b4655", "input": "How many scores behind were the Rams before their first points?", "output": "[\"SELECT['the Rams']\", \"PROJECT['scores behind of #REF', '#1']\", \"FILTER['#2', 'before their first points']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_nfl_1838_3ea61d8b-6c73-41fa-9369-7fddda8a4d3f", "input": "Which team scored the most total game points?", "output": "[\"SELECT['teams']\", \"PROJECT['points of #REF', '#1']\", \"GROUP['sum', '#2', '#1']\", \"SUPERLATIVE['max', '#1', '#3']\"]"}
{"id": "DROP_dev_nfl_1838_42a4f9af-fd71-4157-928c-67ed1db8f132", "input": "How many yards difference was Josh Brown’s first field goal compared to his second?", "output": "[\"SELECT['Josh Brown']\", \"PROJECT['field goals of #REF', '#1']\", \"AGGREGATE['min', '#2']\", \"PROJECT['second of #REF', '#2']\", \"PROJECT['yards of #REF', '#3']\", \"PROJECT['yards of #REF', '#4']\", \"ARITHMETIC['difference', '#5', '#6']\"]"}
{"id": "DROP_dev_nfl_1838_51b62947-62f5-4b16-97bd-211ec8d6b51b", "input": "What all field goals did Matt Prater make?", "output": "[\"SELECT['Matt Prater']\", \"PROJECT['field goals of #REF', '#1']\"]"}
{"id": "DROP_dev_nfl_1838_77a454c3-ded4-4ea6-b71f-8e750997698a", "input": "Who kicked the least number of field goals?", "output": "[\"SELECT['field goals']\", \"PROJECT['who kicked #REF', '#1']\", \"GROUP['count', '#1', '#2']\", \"SUPERLATIVE['min', '#2', '#3']\"]"}
{"id": "DROP_dev_nfl_1838_85b90ec6-808e-4577-9ee7-e839ecb57797", "input": "How many more field goals did Brown kick than Prater?", "output": "[\"SELECT['Brown']\", \"PROJECT['field goals of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"SELECT['Prater']\", \"PROJECT['field goals of #REF', '#4']\", \"AGGREGATE['count', '#5']\", \"ARITHMETIC['difference', '#3', '#6']\"]"}
{"id": "DROP_dev_nfl_1838_d729b650-0e09-4c6c-b534-89fbf546f08e", "input": "Which player kicked at most two field goals?", "output": "[\"SELECT['field goals']\", \"PROJECT['players of #REF', '#1']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is at most two']\"]"}
{"id": "DROP_dev_nfl_1838_e916c2af-e483-48cf-97f9-6140d107eb94", "input": "How many yards was Denvers first quarter scores?", "output": "[\"SELECT['Denvers']\", \"PROJECT['scores of #REF', '#1']\", \"FILTER['#2', 'in the first quarter']\", \"PROJECT['yards of #REF', '#3']\", \"AGGREGATE['sum', '#4']\"]"}
{"id": "DROP_dev_nfl_187_2f55bf24-9983-4fc2-b2d6-c3fc98f930f9", "input": "Who was in the lead at the end of the third quarter?", "output": "[\"SELECT['the third quarter']\", \"PROJECT['the end of #REF', '#1']\", \"PROJECT['who was in the lead of #REF', '#2']\"]"}
{"id": "DROP_dev_nfl_187_97c10767-92d1-4942-a376-962170996a5b", "input": "What type of score caused the game to tie at 31?", "output": "[\"SELECT['scores']\", \"PROJECT['type of #REF', '#1']\", \"FILTER['#2', 'that caused the game to tie']\", \"FILTER['#3', 'at 31']\"]"}
{"id": "DROP_dev_nfl_1873_0341eaa0-e154-432e-85d5-a88ee3de7bfc", "input": "Which team scored more touchdowns in the first quarter, Texans or Chargers?", "output": "[\"SELECT['the Texans']\", \"PROJECT['touchdowns of #REF', '#1']\", \"FILTER['#2', 'in the first quarter']\", \"AGGREGATE['count', '#3']\", \"SELECT['the Chargers']\", \"PROJECT['touchdowns of #REF', '#5']\", \"FILTER['#6', 'in the first quarter']\", \"AGGREGATE['count', '#7']\", \"COMPARISON['max', '#4', '#8']\"]"}
{"id": "DROP_dev_nfl_1873_2bb463c2-4348-447b-b09f-1f4353aa8889", "input": "how many yards did rivers pass to ajirotutu?", "output": "[\"SELECT['rivers']\", \"PROJECT['passes of #REF', '#1']\", \"FILTER['#2', 'to ajirotutu']\", \"PROJECT['yards of #REF', '#3']\", \"AGGREGATE['sum', '#4']\"]"}
{"id": "DROP_dev_nfl_1873_30504e30-71aa-4643-98f3-8132de444b3b", "input": "How many different players scored two touchdowns?", "output": "[\"SELECT['touchdowns']\", \"PROJECT['different players of #REF', '#1']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is two']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "DROP_dev_nfl_1873_40fab99c-46f8-40ec-8987-2d36c1a73b82", "input": "Who scored on the longest play for a touchdown?", "output": "[\"SELECT['touchdowns']\", \"PROJECT['how long are #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is the highest']\", \"PROJECT['who scored #REF', '#3']\"]"}
{"id": "DROP_dev_nfl_1879_4e5b6445-ecf9-4940-9698-c2b99134a77d", "input": "How many yards longer was the longest touchdown reception than the shortest?", "output": "[\"SELECT['touchdown receptions']\", \"PROJECT['yards of #REF', '#1']\", \"AGGREGATE['max', '#2']\", \"AGGREGATE['min', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "DROP_dev_nfl_1879_6b28d610-1e26-417e-995c-677f231de1d5", "input": "What was the Texan's record after the game?", "output": "[\"SELECT['the Texan s']\", \"PROJECT['record of #REF', '#1']\", \"FILTER['#2', 'after the game']\"]"}
{"id": "DROP_dev_nfl_1883_585c3a26-c4aa-42f2-9aaf-ad69fe92a608", "input": "how many yards did the colds have", "output": "[\"SELECT['the colds']\", \"PROJECT['yards of #REF', '#1']\", \"AGGREGATE['sum', '#2']\"]"}
{"id": "DROP_dev_nfl_1883_655e44af-df8d-43f3-81d6-4516d6a9f13e", "input": "How many points did the colts lead by?", "output": "[\"SELECT['points']\", \"FILTER['#1', 'of colts']\", \"DISCARD['#1', '#2']\", \"ARITHMETIC['difference', '#2', '#3']\"]"}
{"id": "DROP_dev_nfl_1883_92510f57-e63a-4f5d-bde1-3ad6a42904af", "input": "What was the score coming out of half time?", "output": "[\"SELECT['the score']\", \"FILTER['#1', 'coming out of half time']\"]"}
{"id": "DROP_dev_nfl_1914_c272f8b5-80b0-42a1-8043-49c90143bb53", "input": "How many more is Carpenter's 50 yard compared to Nick Folk's 30 yard?", "output": "[\"SELECT['Carpenter']\", \"SELECT['Nick Folk']\", \"PROJECT['yards of #REF', '#1']\", \"PROJECT['yards of #REF', '#2']\", \"FILTER['#3', 'that are 50 yards']\", \"FILTER['#4', 'that are 30 yards']\", \"ARITHMETIC['difference', '#5', '#6']\"]"}
{"id": "DROP_dev_nfl_1914_c6204e5d-8e5e-42c4-9d40-e37ddcbe14f4", "input": "How many points did Miami score in the first quarter?", "output": "[\"SELECT['Miami']\", \"PROJECT['points #REF did score', '#1']\", \"FILTER['#2', 'in the first quarter']\"]"}
{"id": "DROP_dev_nfl_1914_ff3b66cf-74ed-4f48-ad46-1f55b6ee6dc4", "input": "How many more yard did Sanchez's 67 yard touch down compare to  Henne's 11 yard touch down?", "output": "[\"SELECT['Sanchez']\", \"SELECT['Henne']\", \"PROJECT['touch down of #REF', '#1']\", \"PROJECT['touch down of #REF', '#2']\", \"PROJECT['yards of #REF', '#3']\", \"PROJECT['yards of #REF', '#4']\", \"FILTER['#5', 'that are 67 yards']\", \"FILTER['#6', 'that are 11 yards']\", \"ARITHMETIC['difference', '#7', '#8']\"]"}
{"id": "DROP_dev_nfl_194_3ef4823f-1297-4633-92a3-54b46b7057d5", "input": "Which team won the game between the Jaguars and the Colts?", "output": "[\"SELECT['the game between the Jaguars and the Colts']\", \"BOOLEAN['#1', 'if the Jaguars won #REF']\", \"BOOLEAN['#1', 'if the Colts won #REF']\", \"COMPARISON['true', '#2', '#3']\"]"}
{"id": "DROP_dev_nfl_194_870a66da-55ab-48c6-870a-7e3abac88339", "input": "How many field goals were kicked in total by both teams?", "output": "[\"SELECT['field goals kicked']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "DROP_dev_nfl_194_bdcc289c-0316-4dfa-81e9-e36e777b9a28", "input": "How many touchdowns did Marvin Harrison score in the second quarter?", "output": "[\"SELECT['Marvin Harrison']\", \"PROJECT['touchdowns of #REF', '#1']\", \"FILTER['#2', 'in the second quarter']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_nfl_194_cb558cfc-9787-452a-91f7-2ff9c865f238", "input": "How many field goals over 40 yards did Adam Vinatieri kick?", "output": "[\"SELECT['Adam Vinatieri']\", \"PROJECT['field goals of #REF', '#1']\", \"PROJECT['yards of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is higher than 40']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "DROP_dev_nfl_194_eeacc39f-b238-4dfd-8765-424be50a4cdc", "input": "Which quarterback completed fewer passes?", "output": "[\"SELECT['quarterbacks']\", \"PROJECT['completed passes of #REF', '#1']\", \"SUPERLATIVE['min', '#1', '#2']\", \"PROJECT['completed passes of #REF', '#1']\", \"SUPERLATIVE['min', '#1', '#2']\"]"}
{"id": "DROP_dev_nfl_1962_0ad88258-9b24-4733-bb73-1e32d639bec6", "input": "How many field goals did Garrett Hartley kick in the fourth quarter?", "output": "[\"SELECT['Garrett Hartley']\", \"PROJECT['field goals of #REF', '#1']\", \"FILTER['#2', 'in the fourth quarter']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_nfl_1962_17803eae-5390-4b6e-9004-c7d0a7e5cb4e", "input": "How many field goals longer than 40-yards were completed?", "output": "[\"SELECT['field goals completed']\", \"PROJECT['yards of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is longer than 40-yards']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_nfl_1962_205dddbc-cc1a-45a8-9c98-9b88f7c169c9", "input": "Which quarterback had more yards completed on touchdown passes?", "output": "[\"SELECT['quarterbacks']\", \"PROJECT['touchdown passes of #REF', '#1']\", \"PROJECT['yards of #REF', '#2']\", \"GROUP['sum', '#3', '#1']\", \"COMPARATIVE['#1', '#4', 'is the highest']\"]"}
{"id": "DROP_dev_nfl_1962_20fc3177-88af-4460-b053-dee560576d16", "input": "How many more touchdown passes were there compared with touchdown runs?", "output": "[\"SELECT['touchdown passes']\", \"SELECT['touchdown runs']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "DROP_dev_nfl_1962_2a170199-836f-4837-b71a-de970a53ef77", "input": "How many total yards did Hartley have?", "output": "[\"SELECT['Hartley']\", \"PROJECT['yards of #REF', '#1']\", \"AGGREGATE['sum', '#2']\"]"}
{"id": "DROP_dev_nfl_1962_355ca7c5-b3f9-4aca-8ed6-e0b8dc745835", "input": "How many yards were scored on touchdown passes by Drew Brees?", "output": "[\"SELECT['Drew Brees']\", \"PROJECT['touchdown passes of #REF', '#1']\", \"PROJECT['yards of #REF', '#2']\", \"AGGREGATE['sum', '#3']\"]"}
{"id": "DROP_dev_nfl_1962_63972a8a-e5d3-4525-ae80-8e51ed47dfad", "input": "Which runningback had the longer touchdown reception?", "output": "[\"SELECT['runningbacks']\", \"PROJECT['touchdown receptions of #REF', '#1']\", \"PROJECT['how long are #REF', '#2']\", \"COMPARATIVE['#1', '#3', 'is the highest']\"]"}
{"id": "DROP_dev_nfl_1962_760742ae-bcdc-4456-be66-842e6aae50d8", "input": "Which offensive player gave points to the defense?", "output": "[\"SELECT['players']\", \"FILTER['#1', 'that are offensive']\", \"FILTER['#2', 'who gave points to the defense']\"]"}
{"id": "DROP_dev_nfl_1962_a4e1c06a-f97a-48bf-aeb6-350b0b2fdb47", "input": "How many yards longer was two shorter field goals combined than the longest one?", "output": "[\"SELECT['field goals']\", \"PROJECT['yards of #REF', '#1']\", \"AGGREGATE['max', '#2']\", \"AGGREGATE['min', '#2']\", \"DISCARD['#2', '#4']\", \"AGGREGATE['min', '#5']\", \"ARITHMETIC['sum', '#4', '#6']\", \"ARITHMETIC['difference', '#7', '#3']\"]"}
{"id": "DROP_dev_nfl_1962_b98a6455-138e-46df-8706-0d76779331d4", "input": "How many yards longer was the longest touchdown pass over the shortest one?", "output": "[\"SELECT['touchdown passes']\", \"PROJECT['yards of #REF', '#1']\", \"AGGREGATE['max', '#2']\", \"AGGREGATE['min', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "DROP_dev_nfl_1962_c99c1059-757c-46e7-806f-5db0c6baa3dc", "input": "How many field goals under 40-yards in length did Garret Hartley make?", "output": "[\"SELECT['Garret Hartley']\", \"PROJECT['field goals of #REF', '#1']\", \"PROJECT['lengths of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is lower than 40-yards']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "DROP_dev_nfl_1962_d507e61b-e062-423d-824d-b60a5338670e", "input": "How many yards were scored on rushing touchdowns in total?", "output": "[\"SELECT['touchdowns']\", \"FILTER['#1', 'that were rushing']\", \"PROJECT['yards of #REF', '#2']\", \"AGGREGATE['sum', '#3']\"]"}
{"id": "DROP_dev_nfl_1962_f23cef01-ea02-4fcb-9abc-c0a487a075f2", "input": "How many field goals over 40-yards in length did Garret Hartley make?", "output": "[\"SELECT['Garret Hartley']\", \"PROJECT['field goals of #REF', '#1']\", \"PROJECT['lengths of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is higher than 40-yards']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "DROP_dev_nfl_1981_c32b9ccf-b3ec-44d5-b8b2-2bda74abf00b", "input": "How many quarters did Smith play?", "output": "[\"SELECT['Smith']\", \"PROJECT['quarters of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_nfl_199_eb985324-7e0d-4959-9cdf-a3a302290542", "input": "How many quarters did Dante Hall play in?", "output": "[\"SELECT['Dante Hall']\", \"PROJECT['quarters of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_nfl_1996_0f9d7029-1ea1-4950-8c82-ba820394e52f", "input": "Which players scored a touchdown in the first two quarters?", "output": "[\"SELECT['quarters']\", \"PROJECT['the first two of #REF', '#1']\", \"PROJECT['touchdowns of #REF', '#2']\", \"PROJECT['players of #REF', '#3']\"]"}
{"id": "DROP_dev_nfl_1996_c2d0c5dc-a6d9-45cf-a3db-904264b3a27a", "input": "Who scored the longest touchdown of the entire game?", "output": "[\"SELECT['touchdowns in the game']\", \"PROJECT['how long are #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is the highest']\", \"PROJECT['who scored #REF', '#3']\"]"}
{"id": "DROP_dev_nfl_1996_d0817b74-3b67-4268-9a74-393de312f9a9", "input": "Who scored the longest touchdown of the first two quarters?", "output": "[\"SELECT['the first two quarters']\", \"PROJECT['touchdowns of #REF', '#1']\", \"PROJECT['how long are #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is the highest']\", \"PROJECT['who scored #REF', '#4']\"]"}
{"id": "DROP_dev_nfl_1996_e8e12160-2151-4094-8c80-2138104bd206", "input": "How many of Phil Dawson's field goals were in the first half?", "output": "[\"SELECT['Phil Dawson']\", \"PROJECT['field goals of #REF', '#1']\", \"FILTER['#2', 'in the first half']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_nfl_1996_e92d782f-9cb1-4cfe-8074-bebd50e9551f", "input": "Which players scored a touchdown longer than 10 yards in the first two quarters?", "output": "[\"SELECT['touchdowns']\", \"PROJECT['yards of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'higher than 10']\", \"FILTER['#3', 'that are in first two quarters']\", \"PROJECT['players of #REF', '#4']\"]"}
{"id": "DROP_dev_nfl_2034_4a62ead9-01c2-4a47-950b-5afb182afbc3", "input": "How many times did Rashard Mendenhall ruish for a td?", "output": "[\"SELECT['Rashard Mendenhall']\", \"PROJECT['td ruishes of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_nfl_2034_aa94973c-862d-4601-be2d-65f8d131949d", "input": "How many points did Baltimore have at halftime?", "output": "[\"SELECT['Baltimore']\", \"PROJECT['points of #REF', '#1']\", \"FILTER['#2', 'at halftime']\"]"}
{"id": "DROP_dev_nfl_2034_be649d2b-99a6-42e1-8bfa-2bea5354f22f", "input": "Who caught the Ravens touchdown pass?", "output": "[\"SELECT['the Ravens']\", \"PROJECT['touchdown pass of #REF', '#1']\", \"PROJECT['who caught #REF', '#2']\"]"}
{"id": "DROP_dev_nfl_2034_f62a11b1-7dbe-43a0-9d68-ec419904e770", "input": "How many yards difference was Rashard Mendenhall’s first touchdown run compared to his second touchdown run?", "output": "[\"SELECT['Rashard Mendenhall']\", \"PROJECT['touchdown runs of #REF', '#1']\", \"AGGREGATE['min', '#2']\", \"PROJECT['second of #REF', '#2']\", \"PROJECT['yards of #REF', '#3']\", \"PROJECT['yards of #REF', '#4']\", \"ARITHMETIC['difference', '#5', '#6']\"]"}
{"id": "DROP_dev_nfl_2036_3bfac5ba-c9d5-4ad3-b11f-e11469501071", "input": "How many field goals were there over 35 yards?", "output": "[\"SELECT['field goals']\", \"PROJECT['yards of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is higher than 35']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_nfl_2036_3f07deb2-a1da-4e29-b03e-af353da5fccf", "input": "Which kicker had fewer total yards, Carpenter or Reed?", "output": "[\"SELECT['yards']\", \"FILTER['#1', 'of Carpenter']\", \"FILTER['#1', 'of Reed']\", \"AGGREGATE['sum', '#2']\", \"AGGREGATE['sum', '#3']\", \"COMPARISON['min', '#4', '#5']\"]"}
{"id": "DROP_dev_nfl_2036_596f8361-922d-4856-91d7-81cede7adcb2", "input": "Which team scored all the points in the first quarter?", "output": "[\"SELECT['the first quarter']\", \"PROJECT['points scored of #REF', '#1']\", \"PROJECT['team of #REF', '#2']\"]"}
{"id": "DROP_dev_nfl_2036_5a6fd11f-fcbe-4711-9a96-bb0a8392483d", "input": "How many total yards did Carpenter have during the first quarter?", "output": "[\"SELECT['Carpenter']\", \"PROJECT['yards of #REF', '#1']\", \"FILTER['#2', 'in the first quarter']\", \"AGGREGATE['sum', '#3']\"]"}
{"id": "DROP_dev_nfl_2036_6b3478d0-fca6-44b7-97a9-142b88a99796", "input": "Which quarterback had the longest touchdown pass?", "output": "[\"SELECT['touchdown passes']\", \"PROJECT['how long are #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is the highest']\", \"PROJECT['quarterback of #REF', '#3']\"]"}
{"id": "DROP_dev_nfl_2036_807931e3-b886-4d52-a43d-7a816febd735", "input": "Which player caught the first TD of the game?", "output": "[\"SELECT['TD in the game']\", \"AGGREGATE['min', '#1']\", \"PROJECT['who caught #REF', '#2']\"]"}
{"id": "DROP_dev_nfl_2036_a87ccdc9-852a-4279-bcc5-b2f63b05ac5b", "input": "Which team was losing the game at the end of the third quarter?", "output": "[\"SELECT['the third quarter']\", \"PROJECT['the end of #REF', '#1']\", \"PROJECT['team losing the game of #REF', '#2']\"]"}
{"id": "DROP_dev_nfl_2036_d43e8ccd-f060-4a4b-8277-d9ea3cb9abf2", "input": "Which players scored from 22 yards?", "output": "[\"SELECT['players']\", \"PROJECT['yards that #REF scored', '#1']\", \"COMPARATIVE['#1', '#2', 'is equal to 22']\"]"}
{"id": "DROP_dev_nfl_2036_da09fdf5-b279-4254-a7a9-31169048fe54", "input": "how many yards did henne complete?", "output": "[\"SELECT['henne']\", \"PROJECT['yards of #REF', '#1']\", \"AGGREGATE['sum', '#2']\"]"}
{"id": "DROP_dev_nfl_2042_c38d6005-07b1-4d14-b4dc-01a06576d5ad", "input": "How many total touchdowns were scored in the game?", "output": "[\"SELECT['touchdowns']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "DROP_dev_nfl_2054_3810ce62-35bc-4035-b084-532d754c2f86", "input": "How many touchdowns were scored in the game total?", "output": "[\"SELECT['touchdowns']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "DROP_dev_nfl_2054_7aa482a7-d20c-472a-b8b9-634ea2d52511", "input": "How many field goals did Rackers kick?", "output": "[\"SELECT['Rackers']\", \"PROJECT['field goals of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_nfl_2054_80ccf374-c566-4a56-860c-9692fba51584", "input": "How many yards was Neil Rackers' shortest field goal?", "output": "[\"SELECT['Neil Rackers']\", \"PROJECT['field goals of #REF', '#1']\", \"PROJECT['yards of #REF', '#2']\", \"AGGREGATE['min', '#3']\"]"}
{"id": "DROP_dev_nfl_2054_c9ecfbb2-802e-4ca7-bed2-ae9134d944c1", "input": "Who scored the first points for the Chargers?", "output": "[\"SELECT['the Chargers']\", \"PROJECT['points of #REF', '#1']\", \"AGGREGATE['min', '#2']\", \"PROJECT['who scored #REF', '#3']\"]"}
{"id": "DROP_dev_nfl_2067_1d2dd079-b1bf-4177-8491-f9b80a695a92", "input": "How many more touchdowns did Moore get compared to Smith?", "output": "[\"SELECT['Moore']\", \"PROJECT['touchdowns of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"SELECT['Smith']\", \"PROJECT['touchdowns of #REF', '#4']\", \"AGGREGATE['count', '#5']\", \"ARITHMETIC['difference', '#3', '#6']\"]"}
{"id": "DROP_dev_nfl_2067_4cc640bb-b25d-4fd8-9c68-ade91cc720ad", "input": "Which team returned an interception for a touchdown?", "output": "[\"SELECT['interceptions']\", \"FILTER['#1', 'that are returned for touchdowns']\", \"PROJECT['team of #REF', '#2']\"]"}
{"id": "DROP_dev_nfl_2067_50e80b23-9b53-4368-929a-1e6582ae7f2c", "input": "who is the 49ers quarterback?", "output": "[\"SELECT['49ers']\", \"PROJECT['quarterback of #REF', '#1']\"]"}
{"id": "DROP_dev_nfl_2067_5b2d8596-4f3f-48e2-891f-2114812cba8c", "input": "How many yards was Kasay's shortest field goal?", "output": "[\"SELECT['Kasay']\", \"PROJECT['field goals of #REF', '#1']\", \"PROJECT['yards of #REF', '#2']\", \"AGGREGATE['min', '#3']\"]"}
{"id": "DROP_dev_nfl_2067_6f0bfd60-02d4-4e64-aecb-76f92f201980", "input": "How many field goals did Jow Nedney kick?", "output": "[\"SELECT['Jow Nedney']\", \"PROJECT['field goals of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_nfl_2067_74130560-e1e1-4e68-8014-9d819bc4801b", "input": "How many field goals were made in the game/", "output": "[\"SELECT['field goals made']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "DROP_dev_nfl_2067_84183dc6-423a-444e-9697-66d3f32073c5", "input": "How many touchdowns did Gettis score?", "output": "[\"SELECT['Gettis']\", \"PROJECT['touchdowns of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_nfl_2067_ac7ee36c-8ed1-4e73-894b-ba12c148e2eb", "input": "who is the panthers quarterback?", "output": "[\"SELECT['the panthers']\", \"PROJECT['quarterback of #REF', '#1']\"]"}
{"id": "DROP_dev_nfl_2067_d7739af3-b257-4832-913f-f7a9516facca", "input": "Who else besides Moore completed TD pass?", "output": "[\"SELECT['TD passes']\", \"PROJECT['who completed #REF', '#1']\", \"FILTER['#2', 'Moore']\", \"DISCARD['#2', '#3']\"]"}
{"id": "DROP_dev_nfl_2067_f303e14b-de0e-4937-9f0a-69a8a35c945e", "input": "How many field goals did Kasay kick?", "output": "[\"SELECT['Kasay']\", \"PROJECT['field goals of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_nfl_2077_317ff0b0-6480-4cf5-af21-e2842323bc2a", "input": "Which player had the first rushing touchdown?", "output": "[\"SELECT['rushing touchdowns']\", \"AGGREGATE['min', '#1']\", \"PROJECT['player of #REF', '#2']\"]"}
{"id": "DROP_dev_nfl_2077_645f706b-5ab0-432d-90ab-5a9fc679023b", "input": "How many points did Orton throw for in the fourth quarter?", "output": "[\"SELECT['Orton']\", \"PROJECT['throws of #REF', '#1']\", \"FILTER['#2', 'in the fourth quarter']\", \"PROJECT['points of #REF', '#3']\", \"AGGREGATE['sum', '#4']\"]"}
{"id": "DROP_dev_nfl_2077_abde882c-56cb-4894-9767-616f2684cc95", "input": "Which WR had the shortest touchdown catch?", "output": "[\"SELECT['touchdown catches']\", \"PROJECT['how short are #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is the lowest']\", \"PROJECT['the WR of #REF', '#3']\"]"}
{"id": "DROP_dev_nfl_2077_bae6a364-518a-4923-bc1e-3619be4456db", "input": "How many 1-yard TDs were in the game?", "output": "[\"SELECT['TDs in the game']\", \"PROJECT['yards of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is 1-yard']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_nfl_2077_ceb2872d-d166-4390-80d6-64f98138b3af", "input": "Which QB had the longest rushing TD?", "output": "[\"SELECT['QB']\", \"PROJECT['rushing TDS of #REF', '#1']\", \"SUPERLATIVE['max', '#1', '#2']\"]"}
{"id": "DROP_dev_nfl_2077_de5d18f2-f352-46b8-902d-5544f303d057", "input": "Who were the Broncos playing?", "output": "[\"SELECT['the Broncos']\", \"PROJECT['who were #REF playing', '#1']\"]"}
{"id": "DROP_dev_nfl_2077_dee4ae17-51ba-4e39-9e36-3d9dad7102af", "input": "How many points did the Seahawks score by halftime?", "output": "[\"SELECT['the Seahawks']\", \"PROJECT['points of #REF', '#1']\", \"FILTER['#2', 'by halftime']\", \"AGGREGATE['sum', '#3']\"]"}
{"id": "DROP_dev_nfl_2077_f5ff3679-039b-4d31-ba9c-2b23bcdcf134", "input": "How many more rushing touchdowns were scored when compared to passing?", "output": "[\"SELECT['rushing touchdowns']\", \"SELECT['passing touchdowns']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"ARITHMETIC['difference', '#3', '#4']\"]"}
{"id": "DROP_dev_nfl_2082_0913d580-7729-4190-8624-6e04ac927c54", "input": "Which team trailed at halftime?", "output": "[\"SELECT['teams']\", \"FILTER['#1', 'that trailed at halftime']\"]"}
{"id": "DROP_dev_nfl_2082_1245b338-e244-40a0-ba81-0e9d740a28ae", "input": "how many yards did janikowski make?", "output": "[\"SELECT['janikowski']\", \"PROJECT['yards of #REF', '#1']\", \"AGGREGATE['sum', '#2']\"]"}
{"id": "DROP_dev_nfl_2082_7e988d9c-b985-4285-be19-5bffe5c2a00f", "input": "how many yards did bush make?", "output": "[\"SELECT['bush']\", \"PROJECT['yards of #REF', '#1']\", \"AGGREGATE['sum', '#2']\"]"}
{"id": "DROP_dev_nfl_2082_9ddbfa72-8896-4edc-92de-b61286bab102", "input": "How many field goals did Sebastian Janikowski score in the first quarter?", "output": "[\"SELECT['Sebastian Janikowski']\", \"PROJECT['field goals of #REF', '#1']\", \"FILTER['#2', 'in the first quarter']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_nfl_2082_ae57cb5f-7ba9-4874-9c08-d1f766f25eea", "input": "How many field goals did the raiders score all game?", "output": "[\"SELECT['the raiders']\", \"PROJECT['field goals of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_nfl_2082_e96eae9c-6db3-4534-a7ae-570c8bb9450f", "input": "Which player scored more field goals, Sebastian Janikowski or Olindo Mare?", "output": "[\"SELECT['Sebastian Janikowski']\", \"SELECT['Olindo Mare']\", \"PROJECT['field goals of #REF', '#1']\", \"PROJECT['field goals of #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"COMPARISON['max', '#5', '#6']\"]"}
{"id": "DROP_dev_nfl_2114_19f66ea5-9c82-443f-8d98-342cce8ae7dc", "input": "How many more yards was Heap's touchdown catch than Mason's catch?", "output": "[\"SELECT['Heap']\", \"PROJECT['touchdown catch of #REF', '#1']\", \"PROJECT['yards of #REF', '#2']\", \"SELECT['Mason']\", \"PROJECT['touchdown catch of #REF', '#4']\", \"PROJECT['yards of #REF', '#5']\", \"ARITHMETIC['difference', '#3', '#6']\"]"}
{"id": "DROP_dev_nfl_2114_28553293-d719-441b-8f00-ce3dc6df5398", "input": "Who caught the shorter touchdown pass, Todd Heap or Derrick Mason/", "output": "[\"SELECT['Todd Heap']\", \"SELECT['Derrick Mason/']\", \"PROJECT['touchdown pass of #REF', '#1']\", \"PROJECT['touchdown pass of #REF', '#2']\", \"PROJECT['how short was #REF', '#3']\", \"PROJECT['how short was #REF', '#4']\", \"COMPARISON['min', '#5', '#6']\"]"}
{"id": "DROP_dev_nfl_2114_7251a013-1120-44ee-8b94-b2d0c63e7b66", "input": "How many points did the Ravens have at the half?", "output": "[\"SELECT['the Ravens']\", \"PROJECT['points of #REF', '#1']\", \"FILTER['#2', 'at the half']\", \"AGGREGATE['sum', '#3']\"]"}
{"id": "DROP_dev_nfl_2114_728fa7eb-e239-4893-9a6c-d11e21763609", "input": "Who threw a longer touchdown pass Freeman or Flacco?", "output": "[\"SELECT['Freeman']\", \"SELECT['Flacco']\", \"PROJECT['touchdown pass of #REF', '#1']\", \"PROJECT['touchdown pass of #REF', '#2']\", \"PROJECT['how long was #REF', '#3']\", \"PROJECT['how long was #REF', '#4']\", \"COMPARISON['max', '#5', '#6']\"]"}
{"id": "DROP_dev_nfl_2114_befb6c41-06b0-4d3f-b9fa-4e9a32c2277a", "input": "How many yards was Joe Flacco's second touchdown pass?", "output": "[\"SELECT['Joe Flacco']\", \"PROJECT['touchdown passes of #REF', '#1']\", \"PROJECT['second of #REF', '#2']\", \"PROJECT['yards of #REF', '#3']\"]"}
{"id": "DROP_dev_nfl_2114_c83a8a91-aa08-492a-8a00-85595fd862ba", "input": "How many touch downs were scored in the first quarter?", "output": "[\"SELECT['touch downs']\", \"FILTER['#1', 'in the first quarter']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_nfl_2114_f88e7c37-0e2e-4c0e-a2b1-30d1ac3b71a1", "input": "How many touchdowns did Flacco score in the first half?", "output": "[\"SELECT['Flacco']\", \"PROJECT['touchdowns of #REF', '#1']\", \"FILTER['#2', 'in the first half']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_nfl_2114_f9858a78-bee5-4d15-874d-1ee04343a2df", "input": "Which team had the least points at halftime?", "output": "[\"SELECT['teams']\", \"PROJECT['points of #REF', '#1']\", \"FILTER['#2', 'at halftime']\", \"GROUP['sum', '#3', '#1']\", \"SUPERLATIVE['min', '#1', '#4']\"]"}
{"id": "DROP_dev_nfl_2125_3b4fe3ce-46e8-4fc3-8d8c-40d1efc82341", "input": "Who threw an interception for a touchdown?", "output": "[\"SELECT['interceptions']\", \"FILTER['#1', 'that are for touchdowns']\", \"PROJECT['who threw #REF', '#2']\"]"}
{"id": "DROP_dev_nfl_2125_443620bd-6069-408d-ad13-915a9eea6800", "input": "How many points did the Eagles have at the half?", "output": "[\"SELECT['the Eagles']\", \"PROJECT['points of #REF', '#1']\", \"FILTER['#2', 'at the half']\", \"AGGREGATE['sum', '#3']\"]"}
{"id": "DROP_dev_nfl_2125_7f995e5b-d270-4293-b3f9-bfb499b1a1da", "input": "How many touchdowns did Kenny Britt score?", "output": "[\"SELECT['Kenny Britt']\", \"PROJECT['touchdowns of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_nfl_2125_92420219-58dd-4c72-87cb-8804cbb50927", "input": "How many points did the eagles get on the board with??", "output": "[\"SELECT['the eagles']\", \"PROJECT['points to get on the board of #REF', '#1']\"]"}
{"id": "DROP_dev_nfl_2125_c95ac764-33f0-423b-815f-c4d9cfd125bb", "input": "How many points did the Titans have at the half?", "output": "[\"SELECT['the Titans']\", \"PROJECT['points of #REF', '#1']\", \"FILTER['#2', 'at the half']\", \"AGGREGATE['sum', '#3']\"]"}
{"id": "DROP_dev_nfl_2125_ed4c439e-9904-4e4e-b58b-d22ba2811d00", "input": "How many points combined did both teams score in the third quarter?", "output": "[\"SELECT['teams']\", \"PROJECT['points that #REF score', '#1']\", \"FILTER['#2', 'in the third quarter']\", \"AGGREGATE['sum', '#3']\"]"}
{"id": "DROP_dev_nfl_2151_163fc8dd-a727-419c-a7ad-81e865047869", "input": "How many field goal attempts did Billy Cundiff make?", "output": "[\"SELECT['Billy Cundiff']\", \"PROJECT['field goals of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_nfl_2151_2cf40f99-789c-4530-ade1-a3f3aff3ca6c", "input": "How many yards in length was the average first quarter touchdown scored by Torrey Smith?", "output": "[\"SELECT['Torrey Smith']\", \"PROJECT['touchdowns of #REF', '#1']\", \"FILTER['#2', 'in the first quarter']\", \"PROJECT['yards of #REF', '#3']\", \"AGGREGATE['avg', '#4']\"]"}
{"id": "DROP_dev_nfl_2151_3a0d7e4a-0bde-4023-a1fd-10fc531c7919", "input": "How many touchdowns did the Flacco score in the first quarter?", "output": "[\"SELECT['Flacco']\", \"PROJECT['touchdowns of #REF', '#1']\", \"FILTER['#2', 'in the first quarter']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_nfl_2151_5def2055-0070-4513-8874-8612ecb50b12", "input": "How many touchdowns did Ngata score?", "output": "[\"SELECT['Ngata']\", \"PROJECT['touchdowns of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_nfl_2151_7c22b24e-6025-4343-ba27-d63cd2eb3527", "input": "who lead the first quarter?", "output": "[\"SELECT['the first quarter']\", \"PROJECT['who lead in #REF', '#1']\"]"}
{"id": "DROP_dev_nfl_2151_886fad12-d18d-44cf-b83f-dc31de276144", "input": "Which was Flacco's longest touchdown pass in the first quarter?", "output": "[\"SELECT['Flacco']\", \"PROJECT['touchdown passes of #REF', '#1']\", \"FILTER['#2', 'in the first quarter']\", \"AGGREGATE['max', '#3']\"]"}
{"id": "DROP_dev_nfl_2151_9cf58332-1508-4190-bddf-5567a7d11483", "input": "How many of Flacco's passes to Smith were in the first quarter?", "output": "[\"SELECT['Flacco']\", \"PROJECT['passes of #REF', '#1']\", \"FILTER['#2', 'to Smith']\", \"FILTER['#3', 'in the first quarter']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "DROP_dev_nfl_2151_9fe99f6c-016f-4962-9486-37ea340501b4", "input": "Which team scored the most points all game?", "output": "[\"SELECT['teams']\", \"PROJECT['points of #REF', '#1']\", \"GROUP['sum', '#2', '#1']\", \"SUPERLATIVE['max', '#1', '#3']\"]"}
{"id": "DROP_dev_nfl_2151_b50c66f7-d4af-406e-be6f-9e7d50a117c8", "input": "How many total field goal yards did Billy Cundiff miss on?", "output": "[\"SELECT['Billy Cundiff']\", \"PROJECT['field goal misses of #REF', '#1']\", \"PROJECT['yards of #REF', '#2']\", \"AGGREGATE['sum', '#3']\"]"}
{"id": "DROP_dev_nfl_2151_dba67fbf-8235-4fb0-b039-74b559b471de", "input": "How many touchdowns did the Rams score in the third quarter?", "output": "[\"SELECT['the Rams']\", \"PROJECT['touchdowns of #REF', '#1']\", \"FILTER['#2', 'in the third quarter']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_nfl_2151_dcc7f2db-c3a5-41ba-9678-dee552387ac5", "input": "How many unsuccessful field goals did Billy Cundiff have?", "output": "[\"SELECT['Billy Cundiff']\", \"PROJECT['unsuccessful field goals of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_nfl_2151_f1a548ca-f24c-4b26-9ddb-fa8f0fa38a1a", "input": "How many more yards did Torrey Smith gain on touchdown receptions relative to Brandon Gibson?", "output": "[\"SELECT['Torrey Smith']\", \"PROJECT['touchdown receptions of #REF', '#1']\", \"PROJECT['yards of #REF', '#2']\", \"AGGREGATE['sum', '#3']\", \"SELECT['Brandon Gibson']\", \"PROJECT['touchdown receptions of #REF', '#5']\", \"PROJECT['yards of #REF', '#6']\", \"AGGREGATE['sum', '#7']\", \"ARITHMETIC['difference', '#4', '#8']\"]"}
{"id": "DROP_dev_nfl_2151_f95586f4-755f-453e-85c9-7e5dff42efe3", "input": "How many total touchdown pass yards did Flacco have in the first quarter?", "output": "[\"SELECT['Flacco']\", \"PROJECT['touchdown passes of #REF', '#1']\", \"FILTER['#2', 'in the first quarter']\", \"PROJECT['yards of #REF', '#3']\", \"AGGREGATE['sum', '#4']\"]"}
{"id": "DROP_dev_nfl_2191_209ad0b1-2198-4ca1-a170-1b9f14fe449b", "input": "How many field goal kicks were missed?", "output": "[\"SELECT['field goal kicks']\", \"FILTER['#1', 'that were missed']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_nfl_2191_bc22e45a-cda4-46dd-a1fa-5b982f95417a", "input": "How many more field goals did Dan Carpenter convert than Matt Prater?", "output": "[\"SELECT['Dan Carpenter']\", \"SELECT['Matt Prater']\", \"PROJECT['field goal converts of #REF', '#1']\", \"PROJECT['field goal converts of #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['difference', '#5', '#6']\"]"}
{"id": "DROP_dev_nfl_2191_f19dd4b6-3063-48c1-adb8-739df0bdba4f", "input": "How many yards longer was Dan Carpenter's longest field goal than his shortest?", "output": "[\"SELECT['Dan Carpenter']\", \"PROJECT['field goals of #REF', '#1']\", \"PROJECT['yards of #REF', '#2']\", \"AGGREGATE['max', '#3']\", \"AGGREGATE['min', '#3']\", \"ARITHMETIC['difference', '#4', '#5']\"]"}
{"id": "DROP_dev_nfl_2197_0ff2f7ee-5a11-4a2b-8c3e-caed6a8671a0", "input": "how many yards did longwell make?", "output": "[\"SELECT['longwell']\", \"PROJECT['yards of #REF', '#1']\", \"AGGREGATE['sum', '#2']\"]"}
{"id": "DROP_dev_nfl_2197_1ba85d34-afd6-41ea-82ce-15375a47d554", "input": "how many yards did ponder get?", "output": "[\"SELECT['ponder']\", \"PROJECT['yards of #REF', '#1']\", \"AGGREGATE['sum', '#2']\"]"}
{"id": "DROP_dev_nfl_2197_3a5b5c90-7263-4df1-9094-5c38548147e3", "input": "how many yards did mcgahee rush?", "output": "[\"SELECT['mcgahee']\", \"PROJECT['rushes of #REF', '#1']\", \"PROJECT['yards of #REF', '#2']\", \"AGGREGATE['sum', '#3']\"]"}
{"id": "DROP_dev_nfl_2197_4e3c3364-e138-4856-bc90-b67d717fe262", "input": "Which team beat San Diego the week prior?", "output": "[\"SELECT['San Diego']\", \"PROJECT['team that beat #REF', '#1']\", \"FILTER['#2', 'in the week prior']\"]"}
{"id": "DROP_dev_nfl_2197_6d0e1520-8c1d-46d8-812e-e3a33e3993c4", "input": "How many field goals did Longwell score in the first half?", "output": "[\"SELECT['Longwell']\", \"PROJECT['field goals of #REF', '#1']\", \"FILTER['#2', 'in the first half']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_nfl_2197_a0555e2e-d0a1-4c3b-bfa9-834fef7f90c9", "input": "how many yards did the broncos respond with?", "output": "[\"SELECT['the broncos']\", \"PROJECT['yards that #REF respond with', '#1']\"]"}
{"id": "DROP_dev_nfl_2197_bf2cd339-1f66-47d9-8624-e535944211b2", "input": "how many yards did ponder throw?", "output": "[\"SELECT['ponder']\", \"PROJECT['throws of #REF', '#1']\", \"PROJECT['yards of #REF', '#2']\", \"AGGREGATE['sum', '#3']\"]"}
{"id": "DROP_dev_nfl_2234_035e60dc-9fd7-4a6e-924d-3ccd731ebaa3", "input": "What is the Colts current wins for the season?", "output": "[\"SELECT['the Colts']\", \"PROJECT['current wins in the season of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_nfl_2234_190741ed-4f65-4fd8-98e4-a609046fcccf", "input": "How many field goals did Bironas kick in the first quarter?", "output": "[\"SELECT['Bironas']\", \"PROJECT['field goals that #REF kick', '#1']\", \"FILTER['#2', 'in the first quarter']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_nfl_2234_2e080a3c-46e3-4f73-81a8-59a221799c64", "input": "What were the distances, in yards, of the Rob Bironas field goal makes?", "output": "[\"SELECT['Rob Bironas']\", \"PROJECT['field goal of #REF', '#1']\", \"PROJECT['yards of #REF', '#2']\"]"}
{"id": "DROP_dev_nfl_2234_50615917-af5a-415f-bd18-41b6c4cd78e4", "input": "How many field goals did Vinatieri kick in the second half?", "output": "[\"SELECT['Vinatieri']\", \"PROJECT['field goals of #REF', '#1']\", \"FILTER['#2', 'in the second half']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_nfl_2234_79c7f80e-6c67-4710-8d2b-d1db507814cc", "input": "How many field goals did Rob Bironas make?", "output": "[\"SELECT['Rob Bironas']\", \"PROJECT['field goals of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_nfl_2234_8eba957c-9814-411f-b488-5f3f4719de06", "input": "How many points for the winning side?", "output": "[\"SELECT['the winning side']\", \"PROJECT['points of #REF', '#1']\"]"}
{"id": "DROP_dev_nfl_2234_94ad8f6c-d46c-4ca1-8200-4c6b94e1add0", "input": "How many points for the former was there after the McCourty touchdown?", "output": "[\"SELECT['the former']\", \"PROJECT['points of #REF', '#1']\", \"FILTER['#2', 'after the McCourty touchdown']\"]"}
{"id": "DROP_dev_nfl_2234_95d3a1ab-939a-4a83-a6c1-30aeff0cbef0", "input": "How many points for the latter was there after the McCourty touchdown?", "output": "[\"SELECT['the latter']\", \"PROJECT['points of #REF', '#1']\", \"FILTER['#2', 'after the touchdown of McCourty']\"]"}
{"id": "DROP_dev_nfl_2234_9ba3fa46-1ff6-4cdb-9f5e-5d5019d3dc38", "input": "What is the Colts current amount of losses?", "output": "[\"SELECT['the Colts']\", \"PROJECT['current losses of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_nfl_2234_a84ce0be-5c4a-4d77-a805-a0f94dd5faba", "input": "How many points were scored in total when the game went final?", "output": "[\"SELECT['the game']\", \"PROJECT['points scored of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_nfl_2234_a929d4a2-7659-4aad-86a7-6eecf9324d8c", "input": "How many field goals did Vinatieri kick in the third quarter?", "output": "[\"SELECT['field goals']\", \"FILTER['#1', 'of Vinatieri']\", \"FILTER['#2', 'that are in third quarter']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_nfl_2234_acb01589-a06b-4865-a78a-064b2dce838c", "input": "How many field goals did Bironas kick in the first half?", "output": "[\"SELECT['Bironas']\", \"PROJECT['field goals of #REF', '#1']\", \"FILTER['#2', 'in the first half']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_nfl_2255_534b41c5-1448-4a13-8d68-af9e23217607", "input": "How many points did the Patriots score in the 4th quarter?", "output": "[\"SELECT['the Patriots']\", \"PROJECT['points of #REF', '#1']\", \"FILTER['#2', 'in the 4th quarter']\", \"AGGREGATE['sum', '#3']\"]"}
{"id": "DROP_dev_nfl_2255_6e127fb1-8bd1-420d-9680-be5d8dd4182c", "input": "How many field goals did  Adam Vinateri make?", "output": "[\"SELECT['Adam Vinateri']\", \"PROJECT['field goals of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "DROP_dev_nfl_2255_7363a147-a310-47b2-b873-433fc9570716", "input": "How many touchdowns did the Colts score in the third quarter?", "output": "[\"SELECT['the Colts']\", \"PROJECT['touchdowns of #REF', '#1']\", \"FILTER['#2', 'in the third quarter']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_nfl_2255_7cf9bc14-f919-4e3c-a313-098e063e48fd", "input": "Which player caught two touchdown passes in the third quarter?", "output": "[\"SELECT['the third quarter']\", \"PROJECT['touchdown passes of #REF', '#1']\", \"PROJECT['players of #REF', '#2']\", \"GROUP['count', '#2', '#3']\", \"COMPARATIVE['#3', '#4', 'is two']\"]"}
{"id": "DROP_dev_nfl_2255_958bdcf2-7ad2-4ec4-96cb-f89e03867742", "input": "How many more TD passes did Brady have than Orlovsky?", "output": "[\"SELECT['Brady']\", \"SELECT['Orlovsky']\", \"PROJECT['TD passes of #REF', '#1']\", \"PROJECT['TD passes of #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['difference', '#5', '#6']\"]"}
{"id": "DROP_dev_nfl_2255_a6117d57-8f80-40f0-9a02-0bd4778509fa", "input": "What were the distances of the td receptions by Rob Gronkowski?", "output": "[\"SELECT['Rob Gronkowski']\", \"PROJECT['td receptions of #REF', '#1']\", \"PROJECT['the distances of #REF', '#2']\"]"}
{"id": "DROP_dev_nfl_2255_e31440da-a85c-4e8e-995a-03049fd23831", "input": "Which player made the first scoring play?", "output": "[\"SELECT['scoring plays']\", \"AGGREGATE['min', '#1']\", \"PROJECT['player who made #REF', '#2']\"]"}
{"id": "DROP_dev_nfl_2262_78f903a9-c9bc-4c21-876a-b955f331cce8", "input": "How many losses did the Saints have coming into this game?", "output": "[\"SELECT['the Saints']\", \"PROJECT['losses of #REF', '#1']\", \"FILTER['#2', 'coming into this game']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "DROP_dev_nfl_2269_270d749a-d574-4469-b76d-39a384d24edd", "input": "Which quarterback threw for more yards, Moore or Manning?", "output": "[\"SELECT['Moore']\", \"PROJECT['yards of #REF', '#1']\", \"AGGREGATE['sum', '#2']\", \"SELECT['Manning']\", \"PROJECT['yards of #REF', '#4']\", \"AGGREGATE['sum', '#5']\", \"COMPARISON['max', '#3', '#6']\"]"}
{"id": "DROP_dev_nfl_2269_751d3b8d-7994-4497-95ca-9a27ab58af68", "input": "How many points were the Giants behind the Dolphins at the start of the 4th quarter?", "output": "[\"SELECT['the Giants']\", \"SELECT['the Dolphins']\", \"PROJECT['points of #REF', '#1']\", \"PROJECT['points of #REF', '#2']\", \"FILTER['#3', 'at the start of 4th quarter']\", \"FILTER['#4', 'at the start of 4th quarter']\", \"AGGREGATE['sum', '#5']\", \"AGGREGATE['sum', '#6']\", \"ARITHMETIC['difference', '#8', '#7']\"]"}
{"id": "DROP_dev_nfl_227_011d1a62-e157-4ae4-a3a9-0c5fc8b7f705", "input": "How many more yards was Longwell's longest field goal over his second longest one?", "output": "[\"SELECT['Longwell']\", \"PROJECT['field goals of #REF', '#1']\", \"PROJECT['yards of #REF', '#2']\", \"AGGREGATE['max', '#3']\", \"AGGREGATE['max', '#3']\", \"ARITHMETIC['difference', '#4', '#5']\"]"}
{"id": "DROP_dev_nfl_227_04f796e2-1860-4455-905e-7479f0465000", "input": "Which two players both booted a single field goal?", "output": "[\"SELECT['field goals']\", \"PROJECT['players of #REF', '#1']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is one']\"]"}
{"id": "DROP_dev_nfl_227_7a7d895c-5d6d-47f0-bcdf-e072ba83af7b", "input": "How many yards did the Vickings make first?", "output": "[\"SELECT['the Vickings']\", \"PROJECT['yards of #REF', '#1']\", \"AGGREGATE['min', '#2']\"]"}
{"id": "DROP_dev_nfl_227_a6ead493-cd74-4e79-81d7-aac424a4e312", "input": "How many yards did Karney kick?", "output": "[\"SELECT['Karney']\", \"PROJECT['yards of #REF', '#1']\", \"AGGREGATE['sum', '#2']\"]"}
{"id": "DROP_dev_nfl_227_bea1a14c-cfcc-405c-b465-e8e0962ca148", "input": "Which quarter saw the most field goals?", "output": "[\"SELECT['field goals']\", \"PROJECT['quarters of #REF', '#1']\", \"GROUP['count', '#1', '#2']\", \"SUPERLATIVE['max', '#2', '#3']\"]"}
{"id": "DROP_dev_nfl_227_ef94ebec-a145-4a1b-b4bc-e817e341fc04", "input": "How many more yards was Karney's field goal over Longwell's shortest field goal?", "output": "[\"SELECT['Karney']\", \"PROJECT['field goal of #REF', '#1']\", \"PROJECT['yards of #REF', '#2']\", \"SELECT['Longwell']\", \"PROJECT['field goals of #REF', '#4']\", \"PROJECT['yards of #REF', '#5']\", \"AGGREGATE['min', '#6']\", \"ARITHMETIC['difference', '#3', '#7']\"]"}
{"id": "DROP_dev_nfl_227_fd182724-41b7-4024-9846-6373efbd709e", "input": "Who made the winning move?", "output": "[\"SELECT['the winning move']\", \"PROJECT['who made #REF', '#1']\"]"}
{"id": "DROP_dev_nfl_2272_13db527f-e2dc-44ea-bde4-cbf3ef4ed2f2", "input": "Which team was ahead in the fourth quarter?", "output": "[\"SELECT['teams']\", \"FILTER['#1', 'that was ahead in the fourth quarter']\"]"}
{"id": "DROP_dev_nfl_2272_fa5019cd-1696-42fc-80b2-0b6f3c9b3fe6", "input": "Which player threw more yards in the game, Young or Manning?", "output": "[\"SELECT['Young']\", \"SELECT['Manning']\", \"PROJECT['throws of #REF', '#1']\", \"PROJECT['throws of #REF', '#2']\", \"PROJECT['yards of #REF', '#3']\", \"PROJECT['yards of #REF', '#4']\", \"AGGREGATE['sum', '#5']\", \"AGGREGATE['sum', '#6']\", \"COMPARISON['max', '#7', '#8']\"]"}
{"id": "NLVR2_dev_dev-0-0-0", "input": "If the instrument in the image on the right is long and thin.", "output": "[\"SELECT['right image']\", \"PROJECT['instrument in #REF', '#1']\", \"BOOLEAN['#2', 'is long']\", \"BOOLEAN['#2', 'is thin']\", \"BOOLEAN['logical_and', 'true', '#3', '#4']\"]"}
{"id": "NLVR2_dev_dev-100-0-0", "input": "If there is a hamster being held by a human hand.", "output": "[\"SELECT['hamster']\", \"SELECT['human hand']\", \"FILTER['#1', 'that is being held by #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-1000-0-1", "input": "If the right image features one folded towel with a black label at its upper left corner, and the left image includes two stacked, folded white towels.", "output": "[\"SELECT['right image']\", \"PROJECT['towel in #REF', '#1']\", \"FILTER['#2', 'that is folded']\", \"PROJECT['label of #REF', '#3']\", \"FILTER['#4', 'that is black']\", \"PROJECT['upper left corner of #REF', '#3']\", \"FILTER['#5', 'that is at #6']\", \"FILTER['#3', 'that has #7']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is equal to one']\", \"SELECT['left image']\", \"PROJECT['towels in #REF', '#11']\", \"FILTER['#12', 'that are white']\", \"FILTER['#13', 'that are folded']\", \"FILTER['#14', 'that are stacked']\", \"AGGREGATE['count', '#15']\", \"BOOLEAN['#16', 'is equal to two']\", \"BOOLEAN['logical_and', 'true', '#10', '#17']\"]"}
{"id": "NLVR2_dev_dev-1000-1-0", "input": "If in at least one image there is a stack of two towels with one unfolded towel.", "output": "[\"SELECT['towels']\", \"FILTER['#1', 'in a stack']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is equal to two']\", \"FILTER['#1', 'that are unfolded']\", \"FILTER['#4', 'with #5']\", \"GROUP['count', '#5', '#6']\", \"COMPARATIVE['#6', '#7', 'is equal to one']\", \"BOOLEAN['#8', 'is in at least one image']\"]"}
{"id": "NLVR2_dev_dev-1001-0-0", "input": "If people and dogs are in the snow near the starting line in one of the images.", "output": "[\"SELECT['people']\", \"SELECT['dogs']\", \"SELECT['the snow']\", \"SELECT['the starting line']\", \"FILTER['#3', 'near #4']\", \"FILTER['#1', 'in #5']\", \"FILTER['#2', 'in #5']\", \"UNION['#6', '#7']\", \"BOOLEAN['#8', 'are in one of the images']\"]"}
{"id": "NLVR2_dev_dev-1001-0-1", "input": "If one image includes a sled driver in a red coat with a yellow vest over it, and the other image includes a sign mounted on two posts in the snow.", "output": "[\"SELECT['one image']\", \"PROJECT['sled driver in #REF', '#1']\", \"SELECT['red coat']\", \"SELECT['yellow vest']\", \"FILTER['#4', 'over #3']\", \"BOOLEAN['#2', 'is in #5']\", \"SELECT['other image']\", \"PROJECT['sign in #REF', '#7']\", \"SELECT['posts']\", \"SELECT['snow']\", \"FILTER['#9', 'in #10']\", \"FILTER['#11', 'that #8 is mounted on']\", \"AGGREGATE['count', '#12']\", \"BOOLEAN['#13', 'is equal to two']\", \"BOOLEAN['logical_and', 'true', '#6', '#14']\"]"}
{"id": "NLVR2_dev_dev-100-2-1", "input": "If there is at least one mouse being held by a human hand.", "output": "[\"SELECT['mice']\", \"SELECT['human hands']\", \"FILTER['#1', 'being held by #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-1002-1-0", "input": "If each image includes at least one soda bottle shaped gummy candy, with a brown bottom half and clear top half, and no gummy soda bottles are in wrappers.", "output": "[\"SELECT['images']\", \"PROJECT['gummy candy in #REF', '#1']\", \"PROJECT['shape of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is a soda bottle']\", \"SELECT['wrappers']\", \"FILTER['#4', 'in #5']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to zero']\", \"PROJECT['bottom half of #REF', '#4']\", \"COMPARATIVE['#4', '#9', 'is brown']\", \"PROJECT['top half of #REF', '#4']\", \"COMPARATIVE['#4', '#11', 'is clear']\", \"INTERSECTION['#4', '#10', '#12']\", \"GROUP['count', '#13', '#1']\", \"COMPARATIVE['#1', '#14', 'is at least one']\", \"AGGREGATE['count', '#15']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#16', 'is equal to #17']\", \"BOOLEAN['logical_and', 'true', '#18', '#8']\"]"}
{"id": "NLVR2_dev_dev-1002-1-1", "input": "If a knife is being used to cut through a gelatin dessert that looks like a bottle of soda.", "output": "[\"SELECT['knife']\", \"SELECT['dessert']\", \"FILTER['#2', 'that is gelatin']\", \"SELECT['bottle of soda']\", \"FILTER['#3', 'that looks like #4']\", \"BOOLEAN['#1', 'is being used to cut through #5']\"]"}
{"id": "NLVR2_dev_dev-1003-2-0", "input": "If one of the pizza's toppings are not yet cooked,.", "output": "[\"SELECT['pizza']\", \"PROJECT['toppings of #REF', '#1']\", \"FILTER['#2', 'that are cooked']\", \"DISCARD['#2', '#3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-1004-0-1", "input": "If a spotted sting ray in the ocean.", "output": "[\"SELECT['sting ray']\", \"FILTER['#1', 'that is spotted']\", \"SELECT['the ocean']\", \"BOOLEAN['#2', 'is in #3']\"]"}
{"id": "NLVR2_dev_dev-1004-1-0", "input": "If the left and right images each contain one central, prominent stingray, and at least one image features a stingray with an all-over spotted pattern.", "output": "[\"SELECT['the left image']\", \"PROJECT['stingrays in #REF', '#1']\", \"FILTER['#2', 'that are central']\", \"FILTER['#3', 'that are prominent']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to one']\", \"SELECT['the right image']\", \"PROJECT['stingrays in #REF', '#7']\", \"FILTER['#8', 'that are central']\", \"FILTER['#9', 'that are prominent']\", \"AGGREGATE['count', '#10']\", \"BOOLEAN['#11', 'is equal to one']\", \"SELECT['stingray']\", \"FILTER['#13', 'with an all-over spotted pattern']\", \"BOOLEAN['#14', 'is in at least one image']\", \"BOOLEAN['logical_and', 'true', '#6', '#12']\", \"BOOLEAN['logical_and', 'true', '#16', '#15']\"]"}
{"id": "NLVR2_dev_dev-1005-0-1", "input": "If there is one chimney visible.", "output": "[\"SELECT['chimney']\", \"FILTER['#1', 'that is visible']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-1006-1-0", "input": "If there is only one cut lemon.", "output": "[\"SELECT['lemon']\", \"FILTER['#1', 'that is cut']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-1006-2-1", "input": "If there are only whole uncut lemons in the right image.", "output": "[\"SELECT['right image']\", \"PROJECT['lemons in #REF', '#1']\", \"FILTER['#2', 'that are uncut']\", \"FILTER['#3', 'that are whole']\", \"AGGREGATE['count', '#4']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#6', 'is equal to #5']\"]"}
{"id": "NLVR2_dev_dev-1007-2-1", "input": "If the left and right image contains the same number of puppies.", "output": "[\"SELECT['left image']\", \"SELECT['right image']\", \"PROJECT['puppies in #REF', '#1']\", \"PROJECT['puppies in #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to #6']\"]"}
{"id": "NLVR2_dev_dev-1008-0-1", "input": "If one glass of red wine sits in each of the images.", "output": "[\"SELECT['glass of red wine']\", \"SELECT['images']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is equal to one']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to #6']\"]"}
{"id": "NLVR2_dev_dev-1008-1-0", "input": "If a stream of poured red wine is flowing into a stemmed glass in at least one image.", "output": "[\"SELECT['stream of poured red wine']\", \"SELECT['glass']\", \"FILTER['#2', 'that is stemmed']\", \"FILTER['#1', 'flowing into #3']\", \"BOOLEAN['#4', 'is in at least one image']\"]"}
{"id": "NLVR2_dev_dev-1009-2-0", "input": "If each image shows one orange car parked in front of snow-covered mountain peaks, and in at least one image, the car's convertible top is down.", "output": "[\"SELECT['car']\", \"FILTER['#1', 'that is orange']\", \"SELECT['mountain peaks']\", \"FILTER['#3', 'that are snow-covered']\", \"FILTER['#2', 'parked in front of #4']\", \"PROJECT['convertible top of #REF', '#5']\", \"COMPARATIVE['#5', '#6', 'is down']\", \"BOOLEAN['#7', 'is in at least one image']\", \"PROJECT['images of #REF', '#5']\", \"GROUP['count', '#5', '#9']\", \"COMPARATIVE['#9', '#10', 'is equal to one']\", \"SELECT['images']\", \"AGGREGATE['count', '#11']\", \"AGGREGATE['count', '#12']\", \"BOOLEAN['#13', 'is equal to #14']\", \"BOOLEAN['logical_and', 'true', '#15', '#8']\"]"}
{"id": "NLVR2_dev_dev-1009-2-1", "input": "If the left image contains an orange convertible vehicle on top of snow.", "output": "[\"SELECT['vehicle']\", \"FILTER['#1', 'that is convertible']\", \"FILTER['#2', 'that is orange']\", \"SELECT['snow']\", \"FILTER['#3', 'on top of #4']\", \"BOOLEAN['#5', 'is in left image']\"]"}
{"id": "NLVR2_dev_dev-1010-2-1", "input": "If the image on the right shows two animals following each other.", "output": "[\"SELECT['right image']\", \"PROJECT['animals in #REF', '#1']\", \"FILTER['#2', 'that are following each other']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-1010-3-0", "input": "If each image contains just one hooved animal, and one animal has its head and body in profile.", "output": "[\"SELECT['hooved animal']\", \"SELECT['images']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is equal to one']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to #6']\", \"PROJECT['head of #REF', '#1']\", \"PROJECT['body of #REF', '#1']\", \"COMPARATIVE['#1', '#8', 'is in profile']\", \"COMPARATIVE['#10', '#9', 'is in profile']\", \"AGGREGATE['count', '#11']\", \"BOOLEAN['#12', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#7', '#13']\"]"}
{"id": "NLVR2_dev_dev-101-1-1", "input": "If all dogs are red-orange chows, and at least one of the dogs pictured is reclining with a front paw pointing rightward.", "output": "[\"SELECT['dogs']\", \"SELECT['chows']\", \"FILTER['#2', 'that are red-orange']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to #5']\", \"FILTER['#1', 'that is reclining']\", \"PROJECT['front paw of #REF', '#7']\", \"COMPARATIVE['#7', '#8', 'is pointing rightward']\", \"AGGREGATE['count', '#9']\", \"BOOLEAN['#10', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#6', '#11']\"]"}
{"id": "NLVR2_dev_dev-1011-2-0", "input": "If one roof is unfinished.", "output": "[\"SELECT['roof']\", \"FILTER['#1', 'that is unfinished']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-1012-0-0", "input": "If one dog is holding a stuffed dog.", "output": "[\"SELECT['dogs']\", \"SELECT['stuffed dog']\", \"FILTER['#1', 'holding #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-101-3-0", "input": "If the dog in the image on the left is lying on a white surface.", "output": "[\"SELECT['left image']\", \"PROJECT['dog in #REF', '#1']\", \"PROJECT['surface in #REF', '#1']\", \"FILTER['#3', 'that is white']\", \"BOOLEAN['#2', 'is lying on #4']\"]"}
{"id": "NLVR2_dev_dev-1013-1-1", "input": "If one dog is swimming forward in a natural body of water, and the other dog is not actually in the water.", "output": "[\"SELECT['dogs']\", \"SELECT['body of water']\", \"FILTER['#2', 'that is natural']\", \"FILTER['#1', 'swimming forward in #3']\", \"FILTER['#1', 'that are not actually in #3']\", \"AGGREGATE['count', '#4']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to one']\", \"BOOLEAN['#7', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#8', '#9']\"]"}
{"id": "NLVR2_dev_dev-1013-3-0", "input": "If the right image contains one dog swimming.", "output": "[\"SELECT['right image']\", \"PROJECT['dog of #REF', '#1']\", \"FILTER['#2', 'that is swimming']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-1014-1-1", "input": "If there is a person shown on at least one of the television screens.", "output": "[\"SELECT['television']\", \"PROJECT['screens of #REF', '#1']\", \"SELECT['person']\", \"COMPARATIVE['#2', '#3', 'is shown']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-1014-2-0", "input": "If there are multiple tvs showing different pictures in the left image.", "output": "[\"SELECT['the left image']\", \"PROJECT['tvs in #REF', '#1']\", \"PROJECT['picture of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'are different']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least two']\"]"}
{"id": "NLVR2_dev_dev-1015-1-0", "input": "If there are two canopies over chair or outside.", "output": "[\"SELECT['canopies']\", \"SELECT['chairs']\", \"FILTER['#1', 'that are over #2']\", \"FILTER['#1', 'that are outside']\", \"UNION['#3', '#4']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-1015-2-1", "input": "If there are drapes, but no bed or environment.", "output": "[\"SELECT['drapes']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is at least one']\", \"SELECT['beds']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to zero']\", \"SELECT['environments']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is equal to zero']\", \"BOOLEAN['logical_and', 'true', '#6', '#9']\", \"BOOLEAN['logical_and', 'true', '#3', '#10']\"]"}
{"id": "NLVR2_dev_dev-1016-3-0", "input": "If the animal on the right is facing right", "output": "[\"SELECT['animals']\", \"FILTER['#1', 'that is on the right']\", \"BOOLEAN['#2', 'is facing right']\"]"}
{"id": "NLVR2_dev_dev-1017-1-1", "input": "If two hands reach toward a chow puppy in one image, and the other image shows a cream-colored chow standing on all fours.", "output": "[\"SELECT['one image']\", \"PROJECT['hands in #REF', '#1']\", \"PROJECT['a chow puppy in #REF', '#1']\", \"FILTER['#2', 'that reach toward #3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to two']\", \"SELECT['the other image']\", \"PROJECT['chow in #REF', '#7']\", \"PROJECT['all fours of #REF', '#8']\", \"FILTER['#8', 'standing on #9']\", \"BOOLEAN['#10', 'is cream-colored']\", \"BOOLEAN['logical_and', 'true', '#6', '#11']\"]"}
{"id": "NLVR2_dev_dev-1017-2-0", "input": "If the dog in the image on the right is being touched by a human.", "output": "[\"SELECT['right image']\", \"PROJECT['dog in #REF', '#1']\", \"PROJECT['human in #REF', '#1']\", \"BOOLEAN['#2', 'is being touched by #3']\"]"}
{"id": "NLVR2_dev_dev-1018-1-1", "input": "If at least one image shows a brown wood hutch standing to the left of a pale painted hutch.", "output": "[\"SELECT['hutch']\", \"FILTER['#1', 'that is brown']\", \"FILTER['#2', 'that is wood']\", \"FILTER['#1', 'that is pale painted']\", \"FILTER['#3', 'standing to the left of #4']\", \"BOOLEAN['#5', 'is in at least one image']\"]"}
{"id": "NLVR2_dev_dev-1018-3-0", "input": "If there are less than four pieces of furniture", "output": "[\"SELECT['pieces of furniture']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is less than four']\"]"}
{"id": "NLVR2_dev_dev-1019-3-0", "input": "If the left image includes a person sitting behind a table and looking downward at an open menu.", "output": "[\"SELECT['person']\", \"SELECT['table']\", \"FILTER['#1', 'sitting behind #2']\", \"SELECT['menu']\", \"FILTER['#4', 'that is open']\", \"FILTER['#3', 'looking downward at #5']\", \"BOOLEAN['#6', 'is in the left image']\"]"}
{"id": "NLVR2_dev_dev-1019-3-1", "input": "If in at least one image there is a person sitting at a dining table reading the menu.", "output": "[\"SELECT['person']\", \"SELECT['dining table']\", \"SELECT['menu']\", \"FILTER['#1', 'sitting at #2']\", \"FILTER['#4', 'reading #3']\", \"PROJECT['images of #REF', '#5']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-1020-1-0", "input": "If one dog is jumping in front of another dog in the left image.", "output": "[\"SELECT['one dog']\", \"SELECT['another dog']\", \"FILTER['#1', 'jumping in front of #2']\", \"BOOLEAN['#3', 'is in the left image']\"]"}
{"id": "NLVR2_dev_dev-1021-3-0", "input": "If in one image, a blue and yellow bird is grasping onto a human hand with its talon", "output": "[\"SELECT['bird']\", \"FILTER['#1', 'that is blue and yellow']\", \"SELECT['human hand']\", \"PROJECT['talon of #REF', '#2']\", \"FILTER['#4', 'that is grasping #3']\", \"FILTER['#2', 'that has #5']\", \"BOOLEAN['#6', 'is in one image']\"]"}
{"id": "NLVR2_dev_dev-1021-3-1", "input": "If an image shows a colorful parrot with its claws on a hand reaching into a basket.", "output": "[\"SELECT['parrot']\", \"FILTER['#1', 'that is colorful']\", \"PROJECT['claws of #REF', '#2']\", \"SELECT['hand']\", \"SELECT['basket']\", \"FILTER['#2', 'that is with #3 on #4']\", \"FILTER['#6', 'that is reaching into #5']\", \"BOOLEAN['#7', 'is in at least one image']\"]"}
{"id": "NLVR2_dev_dev-1022-0-1", "input": "If there are a minimum of three elephants.", "output": "[\"SELECT['elephants']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is at least three']\"]"}
{"id": "NLVR2_dev_dev-102-2-1", "input": "If the left and right image contains the same number pair of full weights.", "output": "[\"SELECT['the left image']\", \"SELECT['the right image']\", \"PROJECT['pairs of full weights in #REF', '#1']\", \"PROJECT['pairs of full weights in #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to #6']\"]"}
{"id": "NLVR2_dev_dev-1022-3-0", "input": "If one image contains a single elephant, which has tusks and a trunk curled upward to its mouth.", "output": "[\"SELECT['images']\", \"PROJECT['elephants in #REF', '#1']\", \"SELECT['tusks']\", \"FILTER['#2', 'with #3']\", \"PROJECT['trunk of #REF', '#4']\", \"PROJECT['mouth of #REF', '#4']\", \"COMPARATIVE['#4', '#5', 'is curled upward to #6']\", \"GROUP['count', '#7', '#1']\", \"COMPARATIVE['#1', '#8', 'is equal to one']\", \"AGGREGATE['count', '#9']\", \"BOOLEAN['#10', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-102-3-0", "input": "If one image shows dumbbells in at least two horizontal rows, and the other image shows dumbbells in two vertical rows.", "output": "[\"SELECT['one image']\", \"PROJECT['dumbbells in #REF', '#1']\", \"PROJECT['rows of #REF', '#2']\", \"FILTER['#3', 'that are horizontal']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least two']\", \"SELECT['the other image']\", \"PROJECT['dumbbells in #REF', '#7']\", \"PROJECT['rows of #REF', '#8']\", \"FILTER['#9', 'that are vertical']\", \"AGGREGATE['count', '#10']\", \"BOOLEAN['#11', 'is equal to two']\", \"BOOLEAN['logical_and', 'true', '#6', '#12']\"]"}
{"id": "NLVR2_dev_dev-1023-2-1", "input": "If an image of a cup with a handle on a saucer is located on the upper half of the front of at least one vending machine.", "output": "[\"SELECT['cup']\", \"SELECT['handle']\", \"FILTER['#1', 'with #2']\", \"SELECT['saucer']\", \"FILTER['#3', 'on #4']\", \"PROJECT['image of #REF', '#5']\", \"SELECT['vending machines']\", \"PROJECT['the front of #REF', '#7']\", \"PROJECT['the upper half of #REF', '#8']\", \"COMPARATIVE['#7', '#9', 'has #6 on']\", \"AGGREGATE['count', '#10']\", \"BOOLEAN['#11', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-1023-3-0", "input": "If there  is a machine that offers either nescafe or atlantis brand beverages in the image on the right.", "output": "[\"SELECT['right image']\", \"PROJECT['machine in #REF', '#1']\", \"PROJECT['beverages that #REF offers', '#2']\", \"PROJECT['brand of #REF', '#3']\", \"COMPARATIVE['#2', '#4', 'is nescafe']\", \"COMPARATIVE['#2', '#4', 'is atlantis']\", \"UNION['#5', '#6']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-1024-1-1", "input": "If one of the cabinets is dark instead of white, and both cabinets pictured have flat tops.", "output": "[\"SELECT['cabinets']\", \"FILTER['#1', 'that are dark']\", \"PROJECT['tops of #REF', '#1']\", \"COMPARATIVE['#1', '#3', 'are flat']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to one']\", \"BOOLEAN['#6', 'is equal to two']\", \"BOOLEAN['logical_and', 'true', '#7', '#8']\"]"}
{"id": "NLVR2_dev_dev-1024-2-0", "input": "If the cabinet on the left is behind a chair.", "output": "[\"SELECT['cabinet']\", \"FILTER['#1', 'on the left']\", \"SELECT['chair']\", \"BOOLEAN['#2', 'is behind #3']\"]"}
{"id": "NLVR2_dev_dev-1025-1-0", "input": "If there is a single woman in a bikini in the image on the right.", "output": "[\"SELECT['right image']\", \"PROJECT['woman of #REF', '#1']\", \"SELECT['bikini']\", \"FILTER['#2', 'that is in #3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-1025-1-1", "input": "If the bikini in the left image has a green bottom piece.", "output": "[\"SELECT['the left image']\", \"PROJECT['the bikini in #REF', '#1']\", \"PROJECT['bottom piece of #REF', '#2']\", \"BOOLEAN['#3', 'is green']\"]"}
{"id": "NLVR2_dev_dev-1026-1-0", "input": "If the left image is of the outside of a church and the right image is of the inside of a church.", "output": "[\"SELECT['church']\", \"PROJECT['the outside of #REF', '#1']\", \"PROJECT['the inside of #REF', '#1']\", \"BOOLEAN['#2', 'is in the left image']\", \"BOOLEAN['#3', 'is in the right image']\", \"BOOLEAN['logical_and', 'true', '#4', '#5']\"]"}
{"id": "NLVR2_dev_dev-1026-3-1", "input": "If the right image features an interior with massive columns and arches, and a red alcove on the back left.", "output": "[\"SELECT['interior']\", \"SELECT['columns']\", \"FILTER['#2', 'that are massive']\", \"SELECT['arches']\", \"FILTER['#4', 'that are massive']\", \"FILTER['#1', 'with #3']\", \"FILTER['#6', 'with #5']\", \"SELECT['alcove']\", \"FILTER['#8', 'that is red']\", \"FILTER['#9', 'on the back left']\", \"FILTER['#7', 'with #10']\", \"BOOLEAN['#11', 'is in the right image']\"]"}
{"id": "NLVR2_dev_dev-1027-1-1", "input": "If there is a total of two elk.", "output": "[\"SELECT['elk']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-1028-1-1", "input": "If one of the images shows eight empty soda bottles in a cardboard carrier.", "output": "[\"SELECT['soda bottles']\", \"FILTER['#1', 'that are empty']\", \"SELECT['carrier']\", \"FILTER['#3', 'that is cardboard']\", \"FILTER['#2', 'in #4']\", \"SELECT['images']\", \"GROUP['count', '#5', '#6']\", \"COMPARATIVE['#6', '#7', 'is equal to eight']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-1028-2-0", "input": "If an image shows a clear glass bottle standing slightly ahead of two green glass bottles that flank it.", "output": "[\"SELECT['bottles']\", \"FILTER['#1', 'that are glass']\", \"FILTER['#2', 'that is clear']\", \"FILTER['#2', 'that are green']\", \"FILTER['#4', 'that flank #2']\", \"FILTER['#4', 'that #2 is standing slightly ahead of']\", \"SELECT['images']\", \"GROUP['count', '#6', '#7']\", \"COMPARATIVE['#7', '#8', 'is equal to two']\", \"AGGREGATE['count', '#9']\", \"BOOLEAN['#10', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-1029-0-0", "input": "If two pairs of kneepads, one pair in each image, are the same color, but different designs.", "output": "[\"SELECT['pair of kneepads']\", \"SELECT['images']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is equal to one']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to two']\", \"PROJECT['color of #REF', '#1']\", \"COMPARATIVE['#1', '#7', 'are the same']\", \"PROJECT['design of #REF', '#8']\", \"COMPARATIVE['#8', '#9', 'are different']\", \"AGGREGATE['count', '#10']\", \"BOOLEAN['#11', 'is equal to two']\", \"BOOLEAN['logical_and', 'true', '#6', '#12']\"]"}
{"id": "NLVR2_dev_dev-1029-2-1", "input": "If a total of three black kneepads are shown, and no more than one kneepad does not have a logo showing.", "output": "[\"SELECT['kneepads']\", \"FILTER['#1', 'that are black']\", \"SELECT['logo']\", \"FILTER['#1', 'that has #3']\", \"DISCARD['#1', '#4']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#6', 'is equal to three']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#8', 'is at most one']\", \"BOOLEAN['logical_and', 'true', '#7', '#9']\"]"}
{"id": "NLVR2_dev_dev-10-3-0", "input": "If there are two tan corgis sitting outside next to each other.", "output": "[\"SELECT['corgis']\", \"FILTER['#1', 'that are tan']\", \"FILTER['#2', 'that are sitting outside']\", \"FILTER['#3', 'that are next to each other']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-1030-3-1", "input": "If both pajamas are related to outer space.", "output": "[\"SELECT['pajamas']\", \"SELECT['outer space']\", \"FILTER['#1', 'that are related to #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-10-3-1", "input": "If the left image contains exactly two open-mouthed corgis, and the right image includes a row of three corgis.", "output": "[\"SELECT['the left image']\", \"PROJECT['corgis in #REF', '#1']\", \"FILTER['#2', 'that are open-mouthed']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to two']\", \"SELECT['the right image']\", \"PROJECT['corgis in #REF', '#6']\", \"FILTER['#7', 'in a row']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is equal to three']\", \"BOOLEAN['logical_and', 'true', '#5', '#10']\"]"}
{"id": "NLVR2_dev_dev-103-1-0", "input": "If there are flowers in at least one of the images.", "output": "[\"SELECT['flowers']\", \"PROJECT['images of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-1031-2-0", "input": "If in one of the images, the entrance of a bookstore can be seen with people inside browsing for books.", "output": "[\"SELECT['bookstore']\", \"PROJECT['entrance of #REF', '#1']\", \"SELECT['people']\", \"SELECT['books']\", \"FILTER['#3', 'that are browsing for #4']\", \"FILTER['#2', 'that is with #5 inside']\", \"BOOLEAN['#6', 'is in one image']\"]"}
{"id": "NLVR2_dev_dev-1032-3-0", "input": "If a person is holding a cup in the right image.", "output": "[\"SELECT['right image']\", \"PROJECT['person of #REF', '#1']\", \"SELECT['cup']\", \"BOOLEAN['#2', 'is holding #3']\"]"}
{"id": "NLVR2_dev_dev-1032-3-1", "input": "If there is exactly one cup in the right image that is red and it does not have the traditional starbucks logo on it.", "output": "[\"SELECT['right image']\", \"PROJECT['cup in #REF', '#1']\", \"FILTER['#2', 'that is red']\", \"SELECT['starbucks logo']\", \"FILTER['#4', 'that is traditional']\", \"FILTER['#3', 'that has #5 on it']\", \"DISCARD['#3', '#6']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-1033-2-0", "input": "If in one image, a bride and groom are standing at the side of a white horse-drawn carriage, with a waiting driver nearby.", "output": "[\"SELECT['bride']\", \"SELECT['groom']\", \"SELECT['carriage']\", \"FILTER['#3', 'that is white']\", \"FILTER['#4', 'that is horse-drawn']\", \"PROJECT['driver of #REF', '#5']\", \"FILTER['#6', 'waiting nearby #5']\", \"FILTER['#5', 'with #7']\", \"FILTER['#1', 'standing at the side of #8']\", \"FILTER['#2', 'standing at the side of #8']\", \"PROJECT['images of #REF', '#9']\", \"PROJECT['images of #REF', '#10']\", \"SELECT['images']\", \"INTERSECTION['#13', '#11', '#12']\", \"AGGREGATE['count', '#14']\", \"BOOLEAN['#15', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-1034-0-0", "input": "If the buses on the left and right face the same leftward direction, but one has a flat front while the other has a hood that projects forward.", "output": "[\"SELECT['bus']\", \"FILTER['#1', 'on the left']\", \"FILTER['#1', 'on the right']\", \"BOOLEAN['#2', 'faces the leftward direction']\", \"BOOLEAN['#3', 'faces the leftward direction']\", \"BOOLEAN['logical_and', 'true', '#4', '#5']\", \"SELECT['one bus']\", \"SELECT['the other bus']\", \"PROJECT['front of #REF', '#7']\", \"BOOLEAN['#9', 'is flat']\", \"PROJECT['hood of #REF', '#8']\", \"BOOLEAN['#11', 'projects forward']\", \"BOOLEAN['logical_and', 'true', '#10', '#12']\", \"BOOLEAN['logical_and', 'true', '#6', '#13']\"]"}
{"id": "NLVR2_dev_dev-1034-3-1", "input": "If the front of the buses in both pictures are facing the left.", "output": "[\"SELECT['buses']\", \"PROJECT['front of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is facing left']\", \"PROJECT['pictures of #REF', '#3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-1035-0-0", "input": "If both holders have meshlike holes in them.", "output": "[\"SELECT['holders']\", \"SELECT['holes']\", \"FILTER['#2', 'that are meshlike']\", \"FILTER['#1', 'with #3 in them']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-1035-3-1", "input": "If an image contains one aqua-colored water bottle with a black lid.", "output": "[\"SELECT['images']\", \"PROJECT['water bottles in #REF', '#1']\", \"FILTER['#2', 'that are aqua-colored']\", \"PROJECT['lid of #REF', '#3']\", \"COMPARATIVE['#3', '#4', 'is black']\", \"GROUP['count', '#5', '#1']\", \"COMPARATIVE['#1', '#6', 'is equal to one']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-1036-1-0", "input": "If the left and right image contains the same number of  full round broccoli heads.", "output": "[\"SELECT['broccoli heads']\", \"FILTER['#1', 'that are round']\", \"FILTER['#2', 'that are full']\", \"SELECT['left image']\", \"SELECT['right image']\", \"FILTER['#3', 'that are in #4']\", \"FILTER['#3', 'that are in #5']\", \"AGGREGATE['count', '#6']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is equal to #9']\"]"}
{"id": "NLVR2_dev_dev-1037-2-1", "input": "If the surface of the water is visible in exactly one image.", "output": "[\"SELECT['water']\", \"PROJECT['surface of #REF', '#1']\", \"FILTER['#2', 'that is visible']\", \"PROJECT['images of #REF', '#3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-1037-3-0", "input": "If each image shows one forward-facing stingray shown from the top, and the left image shows a leftward-angled stingray at the bottom of the ocean.", "output": "[\"SELECT['images']\", \"PROJECT['stingrays in #REF', '#1']\", \"FILTER['#2', 'that are forward-facing']\", \"FILTER['#3', 'shown from the top']\", \"GROUP['count', '#4', '#1']\", \"COMPARATIVE['#1', '#5', 'is equal to one']\", \"AGGREGATE['count', '#6']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#7', 'is equal to #8']\", \"SELECT['stingray']\", \"FILTER['#10', 'that is leftward-angled']\", \"SELECT['the ocean']\", \"PROJECT['the bottom of #REF', '#12']\", \"FILTER['#11', 'at #13']\", \"BOOLEAN['#14', 'is in the left image']\", \"BOOLEAN['logical_and', 'true', '#9', '#15']\"]"}
{"id": "NLVR2_dev_dev-1038-0-1", "input": "If the left and right image contains a total of three antelope.", "output": "[\"SELECT['right image']\", \"SELECT['left image']\", \"PROJECT['antelope of #REF', '#1']\", \"PROJECT['antelope of #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['sum', '#5', '#6']\", \"BOOLEAN['#7', 'is equal to three']\"]"}
{"id": "NLVR2_dev_dev-1039-0-1", "input": "If there are at least eight huskies pulling the snow sled right and forward.", "output": "[\"SELECT['huskies']\", \"SELECT['the snow sled']\", \"FILTER['#1', 'pulling #2 right and forward']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least eight']\"]"}
{"id": "NLVR2_dev_dev-1039-2-0", "input": "If one dog sled team is moving and one is not.", "output": "[\"SELECT['dog sled teams']\", \"FILTER['#1', 'that is moving']\", \"DISCARD['#1', '#2']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to one']\", \"BOOLEAN['#5', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#6', '#7']\"]"}
{"id": "NLVR2_dev_dev-1040-1-1", "input": "If an image shows beaded pin jewelry featuring at least one heart-shaped element.", "output": "[\"SELECT['beaded pin jewelry']\", \"SELECT['heart-shaped element']\", \"FILTER['#2', 'that #1 is featuring']\", \"SELECT['images']\", \"GROUP['count', '#3', '#4']\", \"COMPARATIVE['#4', '#5', 'is at least one']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-1041-2-0", "input": "If the left and right image contains the same number of rectangle soap dispensers.", "output": "[\"SELECT['the left image']\", \"SELECT['the right image']\", \"PROJECT['soap dispensers in #REF', '#1']\", \"PROJECT['soap dispensers in #REF', '#2']\", \"FILTER['#3', 'that are rectangle']\", \"FILTER['#4', 'that are rectangle']\", \"AGGREGATE['count', '#5']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to #8']\"]"}
{"id": "NLVR2_dev_dev-104-2-0", "input": "If there are no lemons on top of chicken.", "output": "[\"SELECT['chicken']\", \"SELECT['lemons']\", \"FILTER['#2', 'on top of #1']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to zero']\"]"}
{"id": "NLVR2_dev_dev-1042-0-0", "input": "If in the image to the right, there is a scuba diver with the jellyfish.", "output": "[\"SELECT['scuba diver']\", \"SELECT['jellyfish']\", \"FILTER['#1', 'with #2']\", \"BOOLEAN['#3', 'is in the image to the right']\"]"}
{"id": "NLVR2_dev_dev-1042-2-1", "input": "If there are at least 2 humans swimming to the right.", "output": "[\"SELECT['humans']\", \"FILTER['#1', 'that are swimming to the right']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at least 2']\"]"}
{"id": "NLVR2_dev_dev-1043-0-1", "input": "If one of the photos shows a gray bottle with a red and blue label next to it's blue and red box.", "output": "[\"SELECT['bottles']\", \"FILTER['#1', 'that is gray']\", \"PROJECT['label of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is red and blue']\", \"PROJECT['box of #REF', '#4']\", \"FILTER['#5', 'that is blue and red']\", \"FILTER['#4', 'that is next to #6']\", \"BOOLEAN['#7', 'is in one photos']\"]"}
{"id": "NLVR2_dev_dev-104-3-1", "input": "If an image includes something pale and gritty textured in a round container, and an image includes a lemon slice on top of pale food.", "output": "[\"SELECT['something pale']\", \"FILTER['#1', 'that is gritty textured']\", \"SELECT['container']\", \"FILTER['#3', 'that is round']\", \"FILTER['#2', 'in #4']\", \"BOOLEAN['#5', 'is in an image']\", \"SELECT['lemon slice']\", \"SELECT['food']\", \"FILTER['#8', 'that is pale']\", \"FILTER['#7', 'on top of #9']\", \"BOOLEAN['#10', 'is in an image']\", \"BOOLEAN['logical_and', 'true', '#6', '#11']\"]"}
{"id": "NLVR2_dev_dev-1043-1-0", "input": "If there are 3 identical bottles of perfume with gold tops.", "output": "[\"SELECT['bottles of perfume']\", \"PROJECT['top of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is gold']\", \"FILTER['#3', 'that are identical']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to 3']\"]"}
{"id": "NLVR2_dev_dev-1044-2-0", "input": "If two rays are swimming in the water in the image on the right.", "output": "[\"SELECT['right image']\", \"PROJECT['rays in #REF', '#1']\", \"PROJECT['water in #REF', '#1']\", \"FILTER['#2', 'that are swimming in #3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-1044-3-1", "input": "If there are two stingrays in the pair of images.", "output": "[\"SELECT['stingrays']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-1045-0-1", "input": "If the combined images include at least six puppies, and one image contains a row of at least four puppies.", "output": "[\"SELECT['images']\", \"PROJECT['puppies in #REF', '#1']\", \"FILTER['#2', 'that are in a row']\", \"GROUP['count', '#2', '#1']\", \"GROUP['count', '#3', '#1']\", \"AGGREGATE['sum', '#4']\", \"BOOLEAN['#6', 'is at least six']\", \"COMPARATIVE['#1', '#5', 'is at least four']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#7', '#10']\"]"}
{"id": "NLVR2_dev_dev-1046-0-0", "input": "If at least one of the dogs has uncropped, floppy ears.", "output": "[\"SELECT['dogs']\", \"PROJECT['ears of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'are floppy']\", \"COMPARATIVE['#3', '#2', 'are uncropped']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-1047-1-1", "input": "If a single syringe lies in an open hand in the image on the right.", "output": "[\"SELECT['right image']\", \"PROJECT['syringe in #REF', '#1']\", \"PROJECT['hand in #REF', '#1']\", \"FILTER['#3', 'that is open']\", \"FILTER['#2', 'that lies in #4']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-1047-3-0", "input": "If two people are holding syringes.", "output": "[\"SELECT['people']\", \"SELECT['syringes']\", \"FILTER['#1', 'that are holding #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-1048-1-0", "input": "If all dough is unbaked and located in a round bowl.", "output": "[\"SELECT['dough']\", \"FILTER['#1', 'that is unbaked']\", \"SELECT['bowl']\", \"FILTER['#3', 'that is round']\", \"FILTER['#2', 'in #4']\", \"DISCARD['#1', '#5']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to zero']\"]"}
{"id": "NLVR2_dev_dev-1048-3-1", "input": "If all images show dough in a round bowl, with the dough not risen above the edge of the bowl.", "output": "[\"SELECT['dough']\", \"SELECT['bowl']\", \"FILTER['#2', 'that is round']\", \"FILTER['#1', 'in #3']\", \"PROJECT['the edge of #REF', '#3']\", \"FILTER['#4', 'that has not risen above #5']\", \"SELECT['images']\", \"PROJECT['images of #REF', '#6']\", \"AGGREGATE['count', '#7']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#10', 'is equal to #9']\"]"}
{"id": "NLVR2_dev_dev-1049-1-1", "input": "If there are two different people working out with weight in the gym", "output": "[\"SELECT['people']\", \"SELECT['weight']\", \"SELECT['gym']\", \"FILTER['#1', 'working out with #2']\", \"FILTER['#4', 'in #3']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-105-0-0", "input": "If at least one gorilla has his mouth open showing teeth.", "output": "[\"SELECT['gorillas']\", \"PROJECT['mouth of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is open']\", \"PROJECT['teeth of #REF', '#3']\", \"FILTER['#3', 'that is showing #4']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-1050-1-1", "input": "If there is a bottle of body lotion made by alba.", "output": "[\"SELECT['bottle of body lotion']\", \"FILTER['#1', 'that is made by alba']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-1050-2-0", "input": "If they are alba brand products in each image.", "output": "[\"SELECT['products']\", \"PROJECT['brand of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is alba']\", \"SELECT['images']\", \"GROUP['count', '#3', '#4']\", \"COMPARATIVE['#4', '#5', 'is at least one']\", \"AGGREGATE['count', '#4']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to #8']\"]"}
{"id": "NLVR2_dev_dev-1051-2-1", "input": "If the right image contains no more than two humans.", "output": "[\"SELECT['right image']\", \"PROJECT['humans of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at most two']\"]"}
{"id": "NLVR2_dev_dev-1052-2-1", "input": "If the left and right image contains a total of two women who are both holding a beer bottle.", "output": "[\"SELECT['the left image']\", \"SELECT['the right image']\", \"PROJECT['women in #REF', '#1']\", \"PROJECT['women in #REF', '#2']\", \"SELECT['beer bottle']\", \"FILTER['#3', 'holding #5']\", \"FILTER['#4', 'holding #5']\", \"AGGREGATE['count', '#6']\", \"AGGREGATE['count', '#7']\", \"ARITHMETIC['sum', '#8', '#9']\", \"BOOLEAN['#10', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-1052-3-0", "input": "If only one woman is drinking in the left image.", "output": "[\"SELECT['the left image']\", \"PROJECT['women in #REF', '#1']\", \"FILTER['#2', 'that are drinking']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-1053-0-1", "input": "If the left image contains one black and brown dog with its feet touching the grass.", "output": "[\"SELECT['the left image']\", \"PROJECT['dogs in #REF', '#1']\", \"FILTER['#2', 'that are black and brown']\", \"PROJECT['feet of #REF', '#3']\", \"PROJECT['the grass in #REF', '#1']\", \"COMPARATIVE['#3', '#4', 'are touching #5']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-1053-2-0", "input": "If there is a dog sitting with a silver chain collar around it;s neck", "output": "[\"SELECT['dog']\", \"PROJECT['neck of #REF', '#1']\", \"SELECT['collar']\", \"FILTER['#3', 'that is silver']\", \"FILTER['#4', 'that has chains']\", \"COMPARATIVE['#1', '#2', 'has #5 around it']\", \"BOOLEAN['#6', 'is sitting']\"]"}
{"id": "NLVR2_dev_dev-106-1-0", "input": "If there are piles of pillows that are not stacked neatly.", "output": "[\"SELECT['piles of pillows']\", \"FILTER['#1', 'that are stacked neatly']\", \"DISCARD['#1', '#2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least two']\"]"}
{"id": "NLVR2_dev_dev-107-1-0", "input": "If there are a total of two phones with more than one physical button.", "output": "[\"SELECT['phones']\", \"PROJECT['physical buttons of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is higher than one']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-108-0-0", "input": "If there are no fewer than 5 pugs.", "output": "[\"SELECT['pugs']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#3', 'is at least 5']\"]"}
{"id": "NLVR2_dev_dev-108-2-1", "input": "If every image shows exactly one dog running outside.", "output": "[\"SELECT['dog']\", \"FILTER['#1', 'that is running outside']\", \"SELECT['images']\", \"GROUP['count', '#2', '#3']\", \"COMPARATIVE['#3', '#4', 'is equal to one']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to #7']\"]"}
{"id": "NLVR2_dev_dev-109-3-0", "input": "If an image shows exactly two hounds with faces close together, one with its tongue extending downward.", "output": "[\"SELECT['hounds']\", \"PROJECT['faces of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'are close together']\", \"PROJECT['tongue of #REF', '#3']\", \"COMPARATIVE['#3', '#4', 'is extending downward']\", \"SELECT['images']\", \"GROUP['count', '#3', '#6']\", \"COMPARATIVE['#6', '#7', 'is equal to two']\", \"GROUP['count', '#5', '#8']\", \"COMPARATIVE['#8', '#9', 'is equal to one']\", \"AGGREGATE['count', '#10']\", \"BOOLEAN['#11', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-110-2-0", "input": "If an image includes three zebras standing in a row and gazing forward, with a fourth zebra behind them.", "output": "[\"SELECT['zebras']\", \"FILTER['#1', 'standing in a row']\", \"FILTER['#2', 'that are gazing forward']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is three']\", \"FILTER['#1', 'behind #3']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is one']\", \"BOOLEAN['logical_and', 'true', '#5', '#8']\"]"}
{"id": "NLVR2_dev_dev-11-1-1", "input": "If the left image shows a dog standing on a high point with its body turned rightward, and the right image shows at least one dog running down a snow-covered hill.", "output": "[\"SELECT['dog']\", \"SELECT['high point']\", \"FILTER['#1', 'standing on #2']\", \"PROJECT['body of #REF', '#3']\", \"COMPARATIVE['#3', '#4', 'is turned rightward']\", \"BOOLEAN['#5', 'is in the left image']\", \"SELECT['the right image']\", \"PROJECT['dogs in #REF', '#7']\", \"PROJECT['hill in #REF', '#7']\", \"FILTER['#9', 'that is snow-covered']\", \"FILTER['#8', 'running down #10']\", \"AGGREGATE['count', '#11']\", \"BOOLEAN['#12', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#6', '#13']\"]"}
{"id": "NLVR2_dev_dev-111-1-0", "input": "If the right image contains exactly one blue parrot.", "output": "[\"SELECT['right image']\", \"PROJECT['parrots of #REF', '#1']\", \"FILTER['#2', 'that are blue']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-111-2-1", "input": "If in one image there are two birds standing on a branch.", "output": "[\"SELECT['birds']\", \"SELECT['branch']\", \"FILTER['#1', 'that are standing on #2']\", \"SELECT['images']\", \"GROUP['count', '#3', '#4']\", \"COMPARATIVE['#4', '#5', 'is equal to two']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-112-2-0", "input": "If there are at least 10 grey wool sheep in a group foresting on grass.", "output": "[\"SELECT['sheep']\", \"PROJECT['wool of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is grey']\", \"FILTER['#3', 'in a group']\", \"SELECT['grass']\", \"FILTER['#4', 'foresting on #5']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is at least 10']\"]"}
{"id": "NLVR2_dev_dev-113-0-0", "input": "If there is more than one animal species in the picture.", "output": "[\"SELECT['the picture']\", \"PROJECT['animal species in #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is higher than one']\"]"}
{"id": "NLVR2_dev_dev-114-0-0", "input": "If the bird on the left is facing right and the bird on the right is facing left.", "output": "[\"SELECT['birds']\", \"FILTER['#1', 'that is on the left']\", \"BOOLEAN['#2', 'is facing right']\", \"FILTER['#1', 'that is on the right']\", \"BOOLEAN['#4', 'is facing left']\", \"BOOLEAN['logical_and', 'true', '#3', '#5']\"]"}
{"id": "NLVR2_dev_dev-114-1-1", "input": "If all of the images show a parrot perched on a branch, surrounded by pink flowers.", "output": "[\"SELECT['parrot']\", \"SELECT['branch']\", \"FILTER['#1', 'perched on #2']\", \"SELECT['flowers']\", \"FILTER['#4', 'that are pink']\", \"FILTER['#3', 'surrounded by #5']\", \"PROJECT['images of #REF', '#6']\", \"SELECT['images']\", \"AGGREGATE['count', '#7']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is equal to #10']\"]"}
{"id": "NLVR2_dev_dev-115-1-0", "input": "If all baboons shown are juveniles, and the right image features two young baboons posed sitting with faces close together.", "output": "[\"SELECT['baboons']\", \"FILTER['#1', 'that are juveniles']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to #4']\", \"SELECT['right image']\", \"FILTER['#1', 'that are in #6']\", \"FILTER['#7', 'that are young']\", \"FILTER['#8', 'that are posed sitting']\", \"PROJECT['faces of #REF', '#9']\", \"COMPARATIVE['#9', '#10', 'are close together']\", \"AGGREGATE['count', '#11']\", \"BOOLEAN['#12', 'is equal to two']\", \"BOOLEAN['logical_and', 'true', '#5', '#13']\"]"}
{"id": "NLVR2_dev_dev-115-1-1", "input": "If the young monkey in the image on the right is being held by an older monkey.", "output": "[\"SELECT['monkey']\", \"FILTER['#1', 'that is young']\", \"FILTER['#2', 'in right image']\", \"FILTER['#1', 'that is older']\", \"BOOLEAN['#3', 'is being held by #4']\"]"}
{"id": "NLVR2_dev_dev-116-0-0", "input": "If a computer monitor rests on a shelf in at least one of the images.", "output": "[\"SELECT['computer monitor']\", \"SELECT['shelf']\", \"FILTER['#1', 'that rests on #2']\", \"BOOLEAN['#3', 'is in at least one of the images']\"]"}
{"id": "NLVR2_dev_dev-117-0-1", "input": "If a key is hanging from at least one of the locks in the image on the right.", "output": "[\"SELECT['the image on the right']\", \"PROJECT['locks in #REF', '#1']\", \"PROJECT['keys in #REF', '#1']\", \"FILTER['#3', 'that are hanging from #2']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-117-2-0", "input": "If there is only one lock in each image.", "output": "[\"SELECT['images']\", \"PROJECT['locks in #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is equal to one']\", \"AGGREGATE['count', '#4']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#5', 'is equal to #6']\"]"}
{"id": "NLVR2_dev_dev-118-1-0", "input": "If there are no less than 3 black and white dogs.", "output": "[\"SELECT['dogs']\", \"FILTER['#1', 'that are black and white']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at least 3']\"]"}
{"id": "NLVR2_dev_dev-118-2-1", "input": "If in one of the pair of images, two dogs faces are visible.", "output": "[\"SELECT['dogs']\", \"PROJECT['faces of #REF', '#1']\", \"FILTER['#2', 'that are visible']\", \"PROJECT['images of #REF', '#3']\", \"GROUP['count', '#3', '#4']\", \"COMPARATIVE['#4', '#5', 'is equal to two']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-119-0-0", "input": "If in at least one image you can see a single dog  with a black nose both sitting on and covered by a white fabric.", "output": "[\"SELECT['dog']\", \"PROJECT['nose of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is black']\", \"SELECT['fabric']\", \"FILTER['#4', 'that is white']\", \"FILTER['#3', 'sitting on #5']\", \"FILTER['#3', 'that is covered by #5']\", \"INTERSECTION['#3', '#6', '#7']\", \"BOOLEAN['#8', 'is in at least one image']\"]"}
{"id": "NLVR2_dev_dev-119-2-1", "input": "If the right image shows a chihuahua reclining on something white and soft, and the left image shows a chihuahua with a toy in front of it.", "output": "[\"SELECT['the right image']\", \"PROJECT['chihuahua in #REF', '#1']\", \"PROJECT['something white in #REF', '#1']\", \"FILTER['#3', 'that is soft']\", \"BOOLEAN['#2', 'is reclining on #4']\", \"SELECT['the left image']\", \"PROJECT['chihuahua in #REF', '#6']\", \"PROJECT['toy in #REF', '#6']\", \"BOOLEAN['#8', 'is in front of #7']\", \"BOOLEAN['logical_and', 'true', '#5', '#9']\"]"}
{"id": "NLVR2_dev_dev-120-2-0", "input": "If in the image on the right there is a phone withe the screen visible, a phone with the back visible, and a phone turned to the side.", "output": "[\"SELECT['phone']\", \"PROJECT['screen of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is visible']\", \"PROJECT['back of #REF', '#1']\", \"COMPARATIVE['#1', '#4', 'is visible']\", \"FILTER['#1', 'turned to the side']\", \"BOOLEAN['#3', 'is in the image on the right']\", \"BOOLEAN['#5', 'is in the image on the right']\", \"BOOLEAN['#6', 'is in the image on the right']\", \"BOOLEAN['logical_and', 'true', '#7', '#8']\", \"BOOLEAN['logical_and', 'true', '#9', '#10']\"]"}
{"id": "NLVR2_dev_dev-120-2-1", "input": "If the phone's profile is shown.", "output": "[\"SELECT['the phone']\", \"PROJECT['profile of #REF', '#1']\", \"BOOLEAN['#2', 'is shown']\"]"}
{"id": "NLVR2_dev_dev-121-2-0", "input": "If a single seal is swimming underwater in the image on the right, while the one on the left is partially above the surface.", "output": "[\"SELECT['the image on the right']\", \"PROJECT['seals in #REF', '#1']\", \"FILTER['#2', 'that are swimming underwater']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to one']\", \"SELECT['the image on the left']\", \"PROJECT['seal in #REF', '#6']\", \"PROJECT['surface in #REF', '#6']\", \"BOOLEAN['#7', 'is partially above #8']\", \"BOOLEAN['logical_and', 'true', '#5', '#9']\"]"}
{"id": "NLVR2_dev_dev-12-2-0", "input": "If each image contains one reclining wolf, and exactly one image shows a wolf surrounded by snow.", "output": "[\"SELECT['wolf']\", \"SELECT['snow']\", \"FILTER['#1', 'surrounded by #2']\", \"BOOLEAN['#3', 'is in exactly one image']\", \"FILTER['#1', 'that is reclining']\", \"PROJECT['images of #REF', '#5']\", \"GROUP['count', '#5', '#6']\", \"COMPARATIVE['#6', '#7', 'is equal to one']\", \"SELECT['images']\", \"AGGREGATE['count', '#8']\", \"AGGREGATE['count', '#9']\", \"BOOLEAN['#10', 'is equal to #11']\", \"BOOLEAN['logical_and', 'true', '#12', '#4']\"]"}
{"id": "NLVR2_dev_dev-12-2-1", "input": "If a single wolf is lying down and sleeping in the image on the left.", "output": "[\"SELECT['the image on the left']\", \"PROJECT['wolves in #REF', '#1']\", \"FILTER['#2', 'that are lying down']\", \"FILTER['#3', 'that are sleeping']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-122-2-0", "input": "If one image features a single zebra with its rear to the camera, and the other image contains exactly two zebra standing close together.", "output": "[\"SELECT['one image']\", \"PROJECT['zebras in #REF', '#1']\", \"PROJECT['rear of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is to the camera']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to one']\", \"SELECT['the other image']\", \"PROJECT['zebras in #REF', '#7']\", \"FILTER['#8', 'that are standing close together']\", \"AGGREGATE['count', '#9']\", \"BOOLEAN['#10', 'is equal to two']\", \"BOOLEAN['logical_and', 'true', '#6', '#11']\"]"}
{"id": "NLVR2_dev_dev-122-2-1", "input": "If there is a zebra facing away from the camera with it's backside facing the camera", "output": "[\"SELECT['zebra']\", \"FILTER['#1', 'that is facing away from the camera']\", \"PROJECT['backside of #REF', '#2']\", \"FILTER['#3', 'that is facing the camera']\", \"FILTER['#2', 'that has #4']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-123-0-1", "input": "If one image shows one panda hanging onto a thick log, and the other image shows two interacting pandas.", "output": "[\"SELECT['one image']\", \"PROJECT['pandas in #REF', '#1']\", \"PROJECT['log in #REF', '#1']\", \"FILTER['#3', 'that is thick']\", \"FILTER['#2', 'hanging onto #4']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to one']\", \"SELECT['the other image']\", \"PROJECT['pandas in #REF', '#8']\", \"FILTER['#9', 'that are interacting']\", \"AGGREGATE['count', '#10']\", \"BOOLEAN['#11', 'is equal to two']\", \"BOOLEAN['logical_and', 'true', '#7', '#12']\"]"}
{"id": "NLVR2_dev_dev-123-2-0", "input": "If in one image, a panda is facing forward while leaning on a tree branch, its chin resting on the tree's surface.", "output": "[\"SELECT['panda']\", \"FILTER['#1', 'that is facing forward']\", \"SELECT['tree branch']\", \"FILTER['#2', 'that is leaning on #3']\", \"PROJECT['chin of #REF', '#4']\", \"SELECT['tree']\", \"PROJECT['surface of #REF', '#6']\", \"COMPARATIVE['#4', '#5', 'is resting on #7']\", \"BOOLEAN['#8', 'is in one image']\"]"}
{"id": "NLVR2_dev_dev-124-0-0", "input": "If each image shows a pair of pandas, and one panda pair is in a nose-to-nose kissing pose.", "output": "[\"SELECT['pandas']\", \"SELECT['images']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is equal to two']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to #6']\", \"FILTER['#1', 'that are in a nose-to-nose kissing pose']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#8', 'is equal to two']\", \"BOOLEAN['logical_and', 'true', '#7', '#10']\"]"}
{"id": "NLVR2_dev_dev-125-0-1", "input": "If a german shepherd has its tongue hanging out and is not making a fierce expression.", "output": "[\"SELECT['german shepherd']\", \"PROJECT['tongue of #REF', '#1']\", \"FILTER['#1', 'that has #2 hanging out']\", \"BOOLEAN['#3', 'is making a fierce expression']\", \"BOOLEAN['#4', 'is false']\"]"}
{"id": "NLVR2_dev_dev-125-3-0", "input": "If each image contains a juvenile dog.", "output": "[\"SELECT['dogs']\", \"FILTER['#1', 'that are juvenile']\", \"SELECT['images']\", \"GROUP['count', '#2', '#3']\", \"COMPARATIVE['#3', '#4', 'is at least one']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to #7']\"]"}
{"id": "NLVR2_dev_dev-126-2-1", "input": "If the right image contains a desk near a window.", "output": "[\"SELECT['desk']\", \"SELECT['window']\", \"FILTER['#1', 'near #2']\", \"BOOLEAN['#3', 'is in the right image']\"]"}
{"id": "NLVR2_dev_dev-127-0-0", "input": "If there are exactly four window shades.", "output": "[\"SELECT['window shades']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is equal to four']\"]"}
{"id": "NLVR2_dev_dev-128-0-1", "input": "If all locks are round, and one image contains three identical locks.", "output": "[\"SELECT['locks']\", \"FILTER['#1', 'that are round']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to #4']\", \"FILTER['#1', 'that are identical']\", \"SELECT['images']\", \"GROUP['count', '#6', '#7']\", \"COMPARATIVE['#7', '#8', 'is equal to three']\", \"AGGREGATE['count', '#9']\", \"BOOLEAN['#10', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#5', '#11']\"]"}
{"id": "NLVR2_dev_dev-128-1-0", "input": "If the right image contains three locks.", "output": "[\"SELECT['right image']\", \"PROJECT['locks in #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to three']\"]"}
{"id": "NLVR2_dev_dev-129-2-0", "input": "If one image shows one lady in a long all-black gown standing behind a rightward-facing hound that is standing up.", "output": "[\"SELECT['lady']\", \"PROJECT['gown of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is all-black']\", \"COMPARATIVE['#1', '#2', 'is long']\", \"SELECT['hound']\", \"FILTER['#5', 'that is rightward-facing']\", \"FILTER['#6', 'that is standing up']\", \"FILTER['#4', 'that is standing behind #7']\", \"SELECT['images']\", \"GROUP['count', '#8', '#9']\", \"COMPARATIVE['#9', '#10', 'is equal to one']\", \"AGGREGATE['count', '#11']\", \"BOOLEAN['#12', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-129-2-1", "input": "If in each image, a woman is posed with a large white dog with pointed nose that is standing sideways, the woman smiling in only one photo.", "output": "[\"SELECT['woman']\", \"SELECT['dog']\", \"FILTER['#2', 'that is large']\", \"FILTER['#3', 'that is white']\", \"FILTER['#4', 'that is standing sideways']\", \"PROJECT['nose of #REF', '#5']\", \"COMPARATIVE['#5', '#6', 'is pointed']\", \"FILTER['#1', 'posed with #7']\", \"PROJECT['images of #REF', '#8']\", \"SELECT['images']\", \"AGGREGATE['count', '#9']\", \"AGGREGATE['count', '#10']\", \"BOOLEAN['#11', 'is equal to #12']\", \"FILTER['#8', 'that is smiling']\", \"BOOLEAN['#14', 'is in only one image']\", \"BOOLEAN['logical_and', 'true', '#13', '#15']\"]"}
{"id": "NLVR2_dev_dev-1-3-0", "input": "If at least one hand is touching a furry dog in each image, and no image includes a non-dog pet.", "output": "[\"SELECT['images']\", \"PROJECT['hands in #REF', '#1']\", \"PROJECT['dog in #REF', '#1']\", \"FILTER['#3', 'that is furry']\", \"FILTER['#2', 'touching #4']\", \"GROUP['count', '#5', '#1']\", \"COMPARATIVE['#1', '#6', 'is at least one']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#9', 'is equal to #8']\", \"SELECT['pet']\", \"FILTER['#11', 'that is non-dog']\", \"PROJECT['images of #REF', '#12']\", \"AGGREGATE['count', '#13']\", \"BOOLEAN['#14', 'is equal to zero']\", \"BOOLEAN['logical_and', 'true', '#10', '#15']\"]"}
{"id": "NLVR2_dev_dev-130-3-0", "input": "If one of the dogs has a yellow soccer ball.", "output": "[\"SELECT['dogs']\", \"SELECT['soccer ball']\", \"FILTER['#2', 'that is yellow']\", \"FILTER['#1', 'that has #3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-130-3-1", "input": "If an image contains a dogs playing with a yellow and black ball.", "output": "[\"SELECT['dogs']\", \"SELECT['ball']\", \"FILTER['#2', 'that is yellow and black']\", \"FILTER['#1', 'that is playing with #3']\", \"BOOLEAN['#4', 'is in an image']\"]"}
{"id": "NLVR2_dev_dev-13-1-0", "input": "If there are no humans in any images.", "output": "[\"SELECT['humans']\", \"SELECT['images']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is equal to zero']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to #6']\"]"}
{"id": "NLVR2_dev_dev-131-0-1", "input": "If a beaker has liquid in it.", "output": "[\"SELECT['beakers']\", \"SELECT['liquid']\", \"FILTER['#1', 'that has #2 in it']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-131-2-0", "input": "If at least one of the beakers is plastic.", "output": "[\"SELECT['beakers']\", \"FILTER['#1', 'that is plastic']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-132-0-0", "input": "If the mountain goats in one of the pictures are standing on the side of a man made wall.", "output": "[\"SELECT['mountain goats']\", \"SELECT['wall']\", \"FILTER['#2', 'that is man made']\", \"PROJECT['side of #REF', '#3']\", \"FILTER['#1', 'that are standing on #4']\", \"SELECT['pictures']\", \"GROUP['count', '#5', '#6']\", \"COMPARATIVE['#6', '#7', 'is at least two']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-132-1-1", "input": "If the left image shows at least two goats scaling a very flat, very slanted stone wall.", "output": "[\"SELECT['left image']\", \"PROJECT['goats in #REF', '#1']\", \"PROJECT['stone wall in #REF', '#1']\", \"FILTER['#3', 'that is very slanted']\", \"FILTER['#4', 'that is very flat']\", \"FILTER['#2', 'that are scaling #5']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-133-1-0", "input": "If one image contains a carcass, and the right image contains twice as many vultures as the left image.", "output": "[\"SELECT['carcass']\", \"BOOLEAN['#1', 'is in one image']\", \"SELECT['right image']\", \"PROJECT['vultures in #REF', '#3']\", \"AGGREGATE['count', '#4']\", \"SELECT['left image']\", \"PROJECT['vultures in #REF', '#6']\", \"AGGREGATE['count', '#7']\", \"ARITHMETIC['division', '#5', '#8']\", \"BOOLEAN['#9', 'is at least two']\", \"BOOLEAN['logical_and', 'true', '#2', '#10']\"]"}
{"id": "NLVR2_dev_dev-133-3-1", "input": "If the left and right image contains a total of three vultures.", "output": "[\"SELECT['right image']\", \"PROJECT['vultures of #REF', '#1']\", \"SELECT['left image']\", \"PROJECT['vultures of #REF', '#3']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['sum', '#5', '#6']\", \"BOOLEAN['#7', 'is equal to three']\"]"}
{"id": "NLVR2_dev_dev-134-1-0", "input": "If there is at least one upholstered ottoman at the foot of a bed in one of the images.", "output": "[\"SELECT['ottoman']\", \"FILTER['#1', 'that is upholstered']\", \"SELECT['bed']\", \"PROJECT['foot of #REF', '#3']\", \"FILTER['#2', 'that is at #4']\", \"SELECT['images']\", \"GROUP['count', '#5', '#6']\", \"COMPARATIVE['#6', '#7', 'is at least one']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-134-3-1", "input": "If an image shows a four-posted tied canopy bed with a tufted footboard and headboard visible.", "output": "[\"SELECT['canopy bed']\", \"FILTER['#1', 'that is tied']\", \"FILTER['#2', 'that is four-posted']\", \"PROJECT['footboard of #REF', '#3']\", \"PROJECT['headboard of #REF', '#3']\", \"COMPARATIVE['#3', '#4', 'is tufted']\", \"COMPARATIVE['#6', '#5', 'is tufted']\", \"BOOLEAN['#7', 'is in an image']\"]"}
{"id": "NLVR2_dev_dev-135-1-0", "input": "If in one image, hands are grasping opposite sides of a crab and separating the shell from the body to expose the meat inside.", "output": "[\"SELECT['hands']\", \"SELECT['crab']\", \"PROJECT['opposite sides of #REF', '#2']\", \"FILTER['#1', 'grasping #3']\", \"PROJECT['shell of #REF', '#2']\", \"PROJECT['body of #REF', '#2']\", \"FILTER['#4', 'that are separating #5 from #6']\", \"PROJECT['meat of #REF', '#2']\", \"FILTER['#7', 'to expose #8']\", \"BOOLEAN['#9', 'are in one image']\"]"}
{"id": "NLVR2_dev_dev-135-1-1", "input": "If a person is prying open the crab body.", "output": "[\"SELECT['person']\", \"SELECT['crab']\", \"PROJECT['body of #REF', '#2']\", \"BOOLEAN['#1', 'is prying open #3']\"]"}
{"id": "NLVR2_dev_dev-136-0-1", "input": "If the boat is completely in the water in one image and sitting on the edge of the water in the other image.", "output": "[\"SELECT['one image']\", \"PROJECT['boat in #REF', '#1']\", \"PROJECT['water in #REF', '#1']\", \"BOOLEAN['#2', 'is completely in #3']\", \"SELECT['other image']\", \"PROJECT['boat in #REF', '#5']\", \"PROJECT['water in #REF', '#5']\", \"PROJECT['edge of #REF', '#7']\", \"BOOLEAN['#6', 'is sitting on #8']\", \"BOOLEAN['logical_and', 'true', '#4', '#9']\"]"}
{"id": "NLVR2_dev_dev-136-1-0", "input": "If an image shows a man in a hat standing on the beach by a green boat pulled up on shore.", "output": "[\"SELECT['man']\", \"SELECT['hat']\", \"SELECT['beach']\", \"SELECT['boat']\", \"FILTER['#4', 'that is green']\", \"FILTER['#1', 'that is in #2']\", \"FILTER['#6', 'that is standing on #3']\", \"SELECT['shore']\", \"FILTER['#5', 'that is pulled up on #8']\", \"FILTER['#7', 'that is by #9']\", \"BOOLEAN['#10', 'is in an image']\"]"}
{"id": "NLVR2_dev_dev-137-1-0", "input": "If one image shows an instrument made of silver and the other has an instrument made of brass or gold.", "output": "[\"SELECT['one image']\", \"PROJECT['instrument in #REF', '#1']\", \"FILTER['#2', 'that is made of silver']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least one']\", \"SELECT['other image']\", \"PROJECT['instrument in #REF', '#6']\", \"FILTER['#7', 'that is made of brass']\", \"FILTER['#7', 'that is made of gold']\", \"UNION['#8', '#9']\", \"AGGREGATE['count', '#10']\", \"BOOLEAN['#11', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#5', '#12']\"]"}
{"id": "NLVR2_dev_dev-137-3-1", "input": "If the left and right images feature saxophones of similar color, and no image shows a detached mouthpiece.", "output": "[\"SELECT['left image']\", \"SELECT['right image']\", \"PROJECT['saxophones in #REF', '#1']\", \"PROJECT['saxophones in #REF', '#2']\", \"PROJECT['color of #REF', '#3']\", \"PROJECT['color of #REF', '#4']\", \"BOOLEAN['#5', 'is similar to #6']\", \"PROJECT['mouthpiece in #REF', '#1']\", \"PROJECT['mouthpiece in #REF', '#2']\", \"FILTER['#8', 'that is detached']\", \"FILTER['#9', 'that is detached']\", \"AGGREGATE['count', '#10']\", \"AGGREGATE['count', '#11']\", \"BOOLEAN['#12', 'is equal to zero']\", \"BOOLEAN['#13', 'is equal to zero']\", \"BOOLEAN['logical_and', 'true', '#14', '#15']\", \"BOOLEAN['logical_and', 'true', '#7', '#16']\"]"}
{"id": "NLVR2_dev_dev-138-3-0", "input": "If there are more than two dogs.", "output": "[\"SELECT['dogs']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is higher than two']\"]"}
{"id": "NLVR2_dev_dev-139-0-0", "input": "If there is a pencil pouch with the zipper open on top", "output": "[\"SELECT['pencil pouch']\", \"PROJECT['zipper of #REF', '#1']\", \"PROJECT['top of #REF', '#1']\", \"FILTER['#2', 'that is open']\", \"FILTER['#4', 'that is on #3']\", \"FILTER['#1', 'that has #5']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-139-1-1", "input": "If the right image contains only a cylindrical closed pencil case with a blue textured exterior.", "output": "[\"SELECT['the right image']\", \"SELECT['pencil case']\", \"FILTER['#2', 'that is cylindrical']\", \"FILTER['#3', 'that is closed']\", \"PROJECT['exterior of #REF', '#4']\", \"COMPARATIVE['#4', '#5', 'is blue']\", \"COMPARATIVE['#4', '#5', 'is textured']\", \"INTERSECTION['#4', '#6', '#7']\", \"BOOLEAN['#1', 'contains only #8']\"]"}
{"id": "NLVR2_dev_dev-140-0-0", "input": "If people are standing at a food service counter in the image on the right.", "output": "[\"SELECT['right image']\", \"PROJECT['people in #REF', '#1']\", \"PROJECT['food service counter in #REF', '#1']\", \"BOOLEAN['#2', 'are standing at #3']\"]"}
{"id": "NLVR2_dev_dev-141-2-0", "input": "If there are both women and men.", "output": "[\"SELECT['women']\", \"SELECT['men']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at least two']\", \"BOOLEAN['#4', 'is at least two']\", \"BOOLEAN['logical_and', 'true', '#5', '#6']\"]"}
{"id": "NLVR2_dev_dev-141-3-1", "input": "If three dumb bells are being held by humans.", "output": "[\"SELECT['dumb bells']\", \"SELECT['humans']\", \"FILTER['#1', 'being held by #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to three']\"]"}
{"id": "NLVR2_dev_dev-142-0-1", "input": "If one image shows multiple golf balls that aren't displayed in a vertically-stacked pyramid, and the other contains a single white ball with printing on it.", "output": "[\"SELECT['one image']\", \"PROJECT['golf balls in #REF', '#1']\", \"FILTER['#2', 'that are vertically-stacked']\", \"FILTER['#3', 'in a pyramid']\", \"DISCARD['#2', '#4']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is at least two']\", \"SELECT['the other image']\", \"PROJECT['golf balls in #REF', '#8']\", \"FILTER['#9', 'that are white']\", \"FILTER['#10', 'with printing on it']\", \"AGGREGATE['count', '#11']\", \"BOOLEAN['#12', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#7', '#13']\"]"}
{"id": "NLVR2_dev_dev-142-2-0", "input": "If there are more than nine golf balls.", "output": "[\"SELECT['golf balls']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is more than nine']\"]"}
{"id": "NLVR2_dev_dev-14-3-1", "input": "If one of the images shows at least one open safety pin.", "output": "[\"SELECT['safety pins']\", \"FILTER['#1', 'that is open']\", \"SELECT['images']\", \"GROUP['count', '#2', '#3']\", \"COMPARATIVE['#3', '#4', 'is at least one']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-143-1-0", "input": "If exactly one doctor is looking at a syringe.", "output": "[\"SELECT['doctor']\", \"SELECT['syringe']\", \"FILTER['#1', 'looking at #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-143-2-1", "input": "If the left image shows a forward-facing woman in white holding up a syringe with one gloved hand.", "output": "[\"SELECT['woman']\", \"FILTER['#1', 'that is forward-facing']\", \"FILTER['#2', 'in white']\", \"PROJECT['hand of #REF', '#3']\", \"FILTER['#4', 'that is gloved']\", \"SELECT['syringe']\", \"COMPARATIVE['#3', '#5', 'is holding up #6']\", \"BOOLEAN['#7', 'is in the left image']\"]"}
{"id": "NLVR2_dev_dev-144-2-1", "input": "If the dog in the image on the right has their mouth wide open and tongue lolling out.", "output": "[\"SELECT['right image']\", \"PROJECT['dog in #REF', '#1']\", \"PROJECT['mouth of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is wide open']\", \"PROJECT['tongue of #REF', '#4']\", \"BOOLEAN['#5', 'is lolling out']\"]"}
{"id": "NLVR2_dev_dev-144-3-0", "input": "If only one of the dogs is on a leash.", "output": "[\"SELECT['dogs']\", \"SELECT['leash']\", \"FILTER['#1', 'on #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-145-0-0", "input": "If two cows are standing on dry land in the image on the right.", "output": "[\"SELECT['right image']\", \"PROJECT['cows of #REF', '#1']\", \"PROJECT['land of #REF', '#1']\", \"FILTER['#3', 'that is dry']\", \"FILTER['#2', 'on #4']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-145-2-1", "input": "If the left image features water buffalo at least chest deep in water, and the right image includes a camera-facing water buffalo on dry ground.", "output": "[\"SELECT['left image']\", \"PROJECT['water buffalo in #REF', '#1']\", \"PROJECT['water in #REF', '#1']\", \"BOOLEAN['#2', 'is at least chest deep in #3']\", \"SELECT['right image']\", \"PROJECT['water buffalo in #REF', '#5']\", \"PROJECT['ground in #REF', '#5']\", \"FILTER['#7', 'that is dry']\", \"FILTER['#6', 'that is camera-facing']\", \"BOOLEAN['#9', 'is on #8']\", \"BOOLEAN['logical_and', 'true', '#4', '#10']\"]"}
{"id": "NLVR2_dev_dev-146-0-1", "input": "If one dog is orange-and-white and the other dog has tri-color fur, and all dogs face forward.", "output": "[\"SELECT['dogs']\", \"FILTER['#1', 'that is orange-and-white']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to one']\", \"PROJECT['fur of #REF', '#1']\", \"COMPARATIVE['#1', '#5', 'is tri-color']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to one']\", \"FILTER['#1', 'that face forward']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#9']\", \"BOOLEAN['#10', 'is equal to #11']\", \"BOOLEAN['logical_and', 'true', '#4', '#8']\", \"BOOLEAN['logical_and', 'true', '#13', '#12']\"]"}
{"id": "NLVR2_dev_dev-146-3-0", "input": "If at least one dog is laying down.", "output": "[\"SELECT['dogs']\", \"FILTER['#1', 'that are laying down']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-147-0-1", "input": "If the top shell of a crab is visible in each image, and the crabs on the left and right are displayed in the same position and manner.", "output": "[\"SELECT['crab']\", \"PROJECT['top shell of #REF', '#1']\", \"FILTER['#2', 'that is visible']\", \"PROJECT['images of #REF', '#3']\", \"SELECT['images']\", \"AGGREGATE['count', '#4']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to #7']\", \"FILTER['#1', 'on the left']\", \"FILTER['#1', 'on the right']\", \"PROJECT['position displayed in of #REF', '#9']\", \"PROJECT['position displayed in of #REF', '#10']\", \"BOOLEAN['#11', 'is the same as #12']\", \"PROJECT['manner displayed in of #REF', '#9']\", \"PROJECT['manner displayed in of #REF', '#10']\", \"BOOLEAN['#14', 'is the same as #15']\", \"BOOLEAN['logical_and', 'true', '#13', '#16']\", \"BOOLEAN['logical_and', 'true', '#8', '#17']\"]"}
{"id": "NLVR2_dev_dev-147-2-0", "input": "If there are several crabs together in the image on the left.", "output": "[\"SELECT['left image']\", \"PROJECT['crabs in #REF', '#1']\", \"FILTER['#2', 'that are together']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least two']\"]"}
{"id": "NLVR2_dev_dev-148-1-0", "input": "If there is a large computer monitor in both images.", "output": "[\"SELECT['computer monitors']\", \"FILTER['#1', 'that are large']\", \"SELECT['images']\", \"GROUP['count', '#2', '#3']\", \"COMPARATIVE['#3', '#4', 'is at least one']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-149-2-0", "input": "If at least one of the monkeys is awake.", "output": "[\"SELECT['monkeys']\", \"FILTER['#1', 'that are awake']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-149-3-1", "input": "If a baboob is laying on his back in the brach of a tree", "output": "[\"SELECT['baboob']\", \"PROJECT['back of #REF', '#1']\", \"FILTER['#1', 'that is laying on #2']\", \"SELECT['brach of a tree']\", \"FILTER['#3', 'that is in #4']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-15-0-0", "input": "If there are two red bikini tops.", "output": "[\"SELECT['bikini tops']\", \"FILTER['#1', 'that are red']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-150-2-0", "input": "If every image has more than one dog photographed outside, and the right and left hand images have the same number of dogs.", "output": "[\"SELECT['images']\", \"PROJECT['dogs in #REF', '#1']\", \"FILTER['#2', 'that are outside']\", \"GROUP['count', '#3', '#1']\", \"COMPARATIVE['#1', '#4', 'is higher than one']\", \"AGGREGATE['count', '#5']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#6', 'is equal to #7']\", \"SELECT['the right hand image']\", \"SELECT['the left hand image']\", \"PROJECT['dogs in #REF', '#9']\", \"PROJECT['dogs in #REF', '#10']\", \"AGGREGATE['count', '#11']\", \"AGGREGATE['count', '#12']\", \"BOOLEAN['#13', 'is equal to #14']\", \"BOOLEAN['logical_and', 'true', '#8', '#15']\"]"}
{"id": "NLVR2_dev_dev-151-0-1", "input": "If there is a white and black wolf standing in the forest.", "output": "[\"SELECT['wolf']\", \"SELECT['forest']\", \"FILTER['#1', 'that is white and black']\", \"FILTER['#3', 'that is standing in #2']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-151-3-0", "input": "If all wolves appear to be stepping in snow.", "output": "[\"SELECT['wolves']\", \"SELECT['snow']\", \"BOOLEAN['#1', 'are stepping in #2']\"]"}
{"id": "NLVR2_dev_dev-15-2-1", "input": "If in at least one image there are a total of six bodybuilders in a row with hands on their hips.", "output": "[\"SELECT['images']\", \"PROJECT['bodybuilders in #REF', '#1']\", \"FILTER['#2', 'in a row']\", \"PROJECT['hands of #REF', '#3']\", \"PROJECT['hips of #REF', '#3']\", \"COMPARATIVE['#3', '#4', 'are on #5']\", \"GROUP['count', '#6', '#1']\", \"COMPARATIVE['#1', '#7', 'is equal to six']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-152-1-1", "input": "If the television in the image on the left is mounted on the wall.", "output": "[\"SELECT['left image']\", \"PROJECT['television in #REF', '#1']\", \"PROJECT['wall in #REF', '#1']\", \"BOOLEAN['#2', 'is mounted on #3']\"]"}
{"id": "NLVR2_dev_dev-153-2-0", "input": "If there are exactly two soap dispensers in total.", "output": "[\"SELECT['soap dispensers']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-153-2-1", "input": "If one image contains exactly three dispensers, and the right image contains more dispensers than the left image.", "output": "[\"SELECT['dispensers']\", \"SELECT['images']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is equal to three']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to one']\", \"SELECT['right image']\", \"SELECT['left image']\", \"FILTER['#1', 'that are in #7']\", \"FILTER['#1', 'that are in #8']\", \"AGGREGATE['count', '#9']\", \"AGGREGATE['count', '#10']\", \"BOOLEAN['#11', 'is higher than #12']\", \"BOOLEAN['logical_and', 'true', '#6', '#13']\"]"}
{"id": "NLVR2_dev_dev-154-0-0", "input": "If the devil ray in the left image is facing left.", "output": "[\"SELECT['the left image']\", \"PROJECT['the devil ray in #REF', '#1']\", \"BOOLEAN['#2', 'is facing left']\"]"}
{"id": "NLVR2_dev_dev-154-2-1", "input": "If a diver is swimming with a stingray", "output": "[\"SELECT['diver']\", \"SELECT['stingray']\", \"BOOLEAN['#1', 'is swimming with #2']\"]"}
{"id": "NLVR2_dev_dev-155-0-0", "input": "If some of the food items are triangle shaped.", "output": "[\"SELECT['food items']\", \"FILTER['#1', 'that are triangle shaped']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-155-1-1", "input": "If there are at least three cooked triangle calzones displayed.", "output": "[\"SELECT['calzones']\", \"FILTER['#1', 'that are triangle']\", \"FILTER['#2', 'that are cook']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least three']\"]"}
{"id": "NLVR2_dev_dev-156-0-0", "input": "If there is a single item in the right side image", "output": "[\"SELECT['right image']\", \"PROJECT['items in #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-156-3-1", "input": "If there are 3 pencil cases that are at least 2 different colors.", "output": "[\"SELECT['pencil cases']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is equal to 3']\", \"PROJECT['different colors of #REF', '#1']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least two']\", \"BOOLEAN['logical_and', 'true', '#3', '#6']\"]"}
{"id": "NLVR2_dev_dev-157-0-1", "input": "If one if the images has a pelican flying.", "output": "[\"SELECT['pelican']\", \"FILTER['#1', 'that is flying']\", \"BOOLEAN['#2', 'is in one of the images']\"]"}
{"id": "NLVR2_dev_dev-157-2-0", "input": "If a pelican has a fish in its mouth.", "output": "[\"SELECT['pelican']\", \"PROJECT['mouth of #REF', '#1']\", \"SELECT['fish']\", \"BOOLEAN['#3', 'is in #2']\"]"}
{"id": "NLVR2_dev_dev-158-1-0", "input": "If in at least one image there is a crowd with at least 5 brown skinned men with short black hair.", "output": "[\"SELECT['crowd']\", \"SELECT['men']\", \"FILTER['#2', 'that are brown skinned']\", \"PROJECT['hair of #REF', '#3']\", \"COMPARATIVE['#3', '#4', 'is short']\", \"COMPARATIVE['#5', '#4', 'is short']\", \"FILTER['#6', 'that are with #1']\", \"SELECT['images']\", \"GROUP['count', '#7', '#8']\", \"COMPARATIVE['#8', '#9', 'is at least 5']\", \"AGGREGATE['count', '#10']\", \"BOOLEAN['#11', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-159-3-0", "input": "If a single balloon bouquet sits on a surface in one of the images.", "output": "[\"SELECT['balloon bouquet']\", \"SELECT['surface']\", \"FILTER['#1', 'that sits on #2']\", \"SELECT['images']\", \"GROUP['count', '#3', '#4']\", \"COMPARATIVE['#4', '#5', 'is equal to one']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-160-1-1", "input": "If an exterior view shows a shrub to the left of a wide sliding glass door unit with a white frame.", "output": "[\"SELECT['exterior view']\", \"SELECT['shrub']\", \"SELECT['door unit']\", \"FILTER['#3', 'that is glass']\", \"FILTER['#4', 'that is sliding']\", \"FILTER['#5', 'that is wide']\", \"SELECT['frame']\", \"FILTER['#7', 'that is white']\", \"FILTER['#6', 'with #8']\", \"FILTER['#2', 'that is to the left of #9']\", \"BOOLEAN['#1', 'shows']\"]"}
{"id": "NLVR2_dev_dev-160-2-0", "input": "If one set of doors is closed and another is open.", "output": "[\"SELECT['doors']\", \"PROJECT['set of #REF', '#1']\", \"FILTER['#2', 'that are closed']\", \"FILTER['#2', 'that are open']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to one']\", \"BOOLEAN['#6', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#7', '#8']\"]"}
{"id": "NLVR2_dev_dev-161-1-0", "input": "If there are five pelicans in both images.", "output": "[\"SELECT['pelicans']\", \"SELECT['images']\", \"GROUP['count', '#1', '#2']\", \"BOOLEAN['#3', 'is equal to five']\"]"}
{"id": "NLVR2_dev_dev-161-1-1", "input": "If one image contains three solid-white pelicans facing rightward, and the other image contains exactly two pelicans, who are in the same pose.", "output": "[\"SELECT['one image']\", \"PROJECT['pelicans in #REF', '#1']\", \"FILTER['#2', 'that are solid-white']\", \"FILTER['#3', 'that are facing rightward']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to three']\", \"SELECT['other image']\", \"PROJECT['pelicans in #REF', '#7']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is equal to two']\", \"PROJECT['pose of #REF', '#8']\", \"BOOLEAN['#11', 'are the same']\", \"BOOLEAN['logical_and', 'true', '#10', '#12']\", \"BOOLEAN['logical_and', 'true', '#6', '#13']\"]"}
{"id": "NLVR2_dev_dev-16-2-0", "input": "If in one image a dung beetle is on top of a ball.", "output": "[\"SELECT['dung beetle']\", \"SELECT['ball']\", \"FILTER['#1', 'on top of #2']\", \"BOOLEAN['#3', 'is in one image']\"]"}
{"id": "NLVR2_dev_dev-162-0-0", "input": "If in one image, there is exactly one tv.", "output": "[\"SELECT['tv']\", \"SELECT['images']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is equal to one']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-162-1-1", "input": "If at least one of the televisions is a flat screen.", "output": "[\"SELECT['televisions']\", \"FILTER['#1', 'that is flat screen']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-163-2-0", "input": "If the device on the right is viewed head-on, while the one on the left is angled facing rightward, and both devices have the screen slid up to show the keyboard.", "output": "[\"SELECT['devices']\", \"FILTER['#1', 'on the right']\", \"BOOLEAN['#2', 'is viewed head-on']\", \"FILTER['#1', 'on the left']\", \"BOOLEAN['#4', 'is angled facing rightward']\", \"PROJECT['screens of #REF', '#1']\", \"SELECT['keyboard']\", \"FILTER['#6', 'slid up to show #7']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is equal to #10']\", \"BOOLEAN['logical_and', 'true', '#3', '#5']\", \"BOOLEAN['logical_and', 'true', '#11', '#12']\"]"}
{"id": "NLVR2_dev_dev-163-2-1", "input": "If the keyboard of the phone in one of the images is pink.", "output": "[\"SELECT['phone']\", \"PROJECT['keyboard of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is pink']\", \"BOOLEAN['#3', 'is in one image']\"]"}
{"id": "NLVR2_dev_dev-164-1-1", "input": "If there are two people on the sled being pulled by at least four dogs.", "output": "[\"SELECT['sled']\", \"SELECT['dogs']\", \"SELECT['people']\", \"FILTER['#3', 'that are on #1']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to two']\", \"FILTER['#2', 'that #1 is pulled by']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is at least four']\", \"BOOLEAN['logical_and', 'true', '#6', '#9']\"]"}
{"id": "NLVR2_dev_dev-165-1-0", "input": "If one image shows a pair of legs wearing black knee pads, and the other image shows a pair of legs with a long knee wrap on only the left-side leg.", "output": "[\"SELECT['one image']\", \"PROJECT['pair of legs in #REF', '#1']\", \"SELECT['knee pads']\", \"FILTER['#3', 'that are black']\", \"BOOLEAN['#2', 'are wearing #4']\", \"SELECT['other image']\", \"PROJECT['pair of legs in #REF', '#6']\", \"SELECT['knee wrap']\", \"FILTER['#8', 'that is long']\", \"PROJECT['left-side leg of #REF', '#7']\", \"BOOLEAN['#9', 'is on #10']\", \"AGGREGATE['count', '#9']\", \"BOOLEAN['#12', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#13', '#11']\", \"BOOLEAN['logical_and', 'true', '#5', '#14']\"]"}
{"id": "NLVR2_dev_dev-165-2-1", "input": "If one image shows the knee guards alone, while the other shows them being worn by a person.", "output": "[\"SELECT['one image']\", \"PROJECT['knee guards in #REF', '#1']\", \"BOOLEAN['#2', 'are alone']\", \"SELECT['other image']\", \"PROJECT['knee guards in #REF', '#4']\", \"PROJECT['person in #REF', '#4']\", \"BOOLEAN['#5', 'are being worn by #6']\", \"BOOLEAN['logical_and', 'true', '#3', '#7']\"]"}
{"id": "NLVR2_dev_dev-166-0-0", "input": "If there are exactly two dogs", "output": "[\"SELECT['dogs']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-166-2-1", "input": "If one image shows multiple look-alike puppies in some type of container, and the other image features one dog posed on grassy ground.", "output": "[\"SELECT['one image']\", \"PROJECT['puppies in #REF', '#1']\", \"FILTER['#2', 'that are look-alike']\", \"PROJECT['container in #REF', '#1']\", \"FILTER['#3', 'in #4']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is at least two']\", \"SELECT['the other image']\", \"PROJECT['dogs in #REF', '#8']\", \"PROJECT['ground in #REF', '#8']\", \"FILTER['#10', 'that is grassy']\", \"FILTER['#9', 'posed on #11']\", \"AGGREGATE['count', '#12']\", \"BOOLEAN['#13', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#7', '#14']\"]"}
{"id": "NLVR2_dev_dev-167-1-0", "input": "If the dog in the image on the left has something in its mouth.", "output": "[\"SELECT['the image on the left']\", \"PROJECT['the dog in #REF', '#1']\", \"PROJECT['mouth of #REF', '#2']\", \"BOOLEAN['#3', 'if something is in #REF']\"]"}
{"id": "NLVR2_dev_dev-167-3-1", "input": "If the right image shows at least one dog in a bounding pose with all four legs off the ground.", "output": "[\"SELECT['right image']\", \"PROJECT['dog in #REF', '#1']\", \"FILTER['#2', 'that is in a bounding pose']\", \"PROJECT['legs of #REF', '#3']\", \"PROJECT['ground in #REF', '#1']\", \"FILTER['#4', 'that are off #5']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to four']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#9', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#10', '#8']\"]"}
{"id": "NLVR2_dev_dev-168-0-1", "input": "If at least one safety pin is not embellished.", "output": "[\"SELECT['safety pins']\", \"FILTER['#1', 'that are embellished']\", \"DISCARD['#1', '#2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-168-2-0", "input": "If there is a set of white pearl earrings made out of a safety pin with round copper backing.", "output": "[\"SELECT['pearl earrings']\", \"FILTER['#1', 'that are white']\", \"SELECT['safety pin']\", \"FILTER['#2', 'made out of #3']\", \"PROJECT['backing of #REF', '#4']\", \"COMPARATIVE['#4', '#5', 'is round']\", \"COMPARATIVE['#4', '#5', 'is copper']\", \"INTERSECTION['#4', '#6', '#7']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-169-0-0", "input": "If each image contains only an adult gorilla, and in one image the gorilla is sitting with an elbow on a bent knee.", "output": "[\"SELECT['gorillas']\", \"FILTER['#1', 'that are adult']\", \"SELECT['images']\", \"GROUP['count', '#2', '#3']\", \"COMPARATIVE['#3', '#4', 'is equal to one']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to #7']\", \"PROJECT['elbow of #REF', '#1']\", \"PROJECT['knee of #REF', '#1']\", \"FILTER['#10', 'that is bent']\", \"FILTER['#9', 'that is on #11']\", \"FILTER['#1', 'that is sitting']\", \"FILTER['#13', 'that has #12']\", \"BOOLEAN['#14', 'is in one image']\", \"BOOLEAN['logical_and', 'true', '#8', '#15']\"]"}
{"id": "NLVR2_dev_dev-169-1-1", "input": "If at least one gorilla is standing on the edge of a rock.", "output": "[\"SELECT['gorillas']\", \"SELECT['rock']\", \"PROJECT['the edge of #REF', '#2']\", \"FILTER['#1', 'standing on #3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-17-0-0", "input": "If there are six different syringes in the image on the left, and less than six in the image on the right.", "output": "[\"SELECT['the image on the left']\", \"SELECT['the image on the right']\", \"PROJECT['different syringes in #REF', '#1']\", \"PROJECT['different syringes in #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to six']\", \"BOOLEAN['#6', 'is lower than six']\", \"BOOLEAN['logical_and', 'true', '#7', '#8']\"]"}
{"id": "NLVR2_dev_dev-17-0-1", "input": "If the left and right image contains the same number of needles.", "output": "[\"SELECT['the left image']\", \"SELECT['the right image']\", \"PROJECT['needles in #REF', '#1']\", \"PROJECT['needles in #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to #6']\"]"}
{"id": "NLVR2_dev_dev-170-1-0", "input": "If the television in the image on the left is on, while the one on the left is off.", "output": "[\"SELECT['the image on the left']\", \"PROJECT['the television in #REF', '#1']\", \"BOOLEAN['#2', 'is on']\", \"SELECT['television']\", \"FILTER['#4', 'on the left']\", \"BOOLEAN['#5', 'is off']\", \"BOOLEAN['logical_and', 'true', '#3', '#6']\"]"}
{"id": "NLVR2_dev_dev-170-1-1", "input": "If in at least one image there is a tv with blue block on the tv itself.", "output": "[\"SELECT['tv']\", \"SELECT['block']\", \"FILTER['#2', 'that is blue']\", \"FILTER['#3', 'that is on #1']\", \"BOOLEAN['#4', 'is in at least one image']\"]"}
{"id": "NLVR2_dev_dev-171-2-0", "input": "If one of the laptops is a toshiba.", "output": "[\"SELECT['laptops']\", \"FILTER['#1', 'that is a toshiba']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-171-3-1", "input": "If each image contains one open laptop with its screen facing inward instead of inverted, and one image features a laptop displayed head-on while the other shows a laptop angled.", "output": "[\"SELECT['images']\", \"PROJECT['laptops in #REF', '#1']\", \"FILTER['#2', 'that are open']\", \"PROJECT['screen of #REF', '#3']\", \"COMPARATIVE['#3', '#4', 'is facing inward']\", \"GROUP['count', '#5', '#1']\", \"COMPARATIVE['#1', '#6', 'is equal to one']\", \"AGGREGATE['count', '#7']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#8', 'is equal to #9']\", \"SELECT['one image']\", \"PROJECT['laptop in #REF', '#11']\", \"BOOLEAN['#12', 'is displayed head-on']\", \"SELECT['the other image']\", \"PROJECT['laptop in #REF', '#14']\", \"BOOLEAN['#15', 'is angled']\", \"BOOLEAN['logical_and', 'true', '#13', '#16']\", \"BOOLEAN['logical_and', 'true', '#10', '#17']\"]"}
{"id": "NLVR2_dev_dev-172-2-1", "input": "If the left image contains a penguin with a fish in its mouth.", "output": "[\"SELECT['penguin']\", \"PROJECT['mouth of #REF', '#1']\", \"SELECT['fish']\", \"FILTER['#1', 'with #3 in #2']\", \"BOOLEAN['#4', 'is in left image']\"]"}
{"id": "NLVR2_dev_dev-172-3-0", "input": "If in one image a penguin has a fish in its mouth", "output": "[\"SELECT['penguin']\", \"PROJECT['mouth of #REF', '#1']\", \"SELECT['fish']\", \"COMPARATIVE['#1', '#2', 'has #3']\", \"BOOLEAN['#4', 'is in one image']\"]"}
{"id": "NLVR2_dev_dev-173-0-0", "input": "If the image to the right features two macaws, and zero budgeriers.", "output": "[\"SELECT['right image']\", \"PROJECT['macaws of #REF', '#1']\", \"PROJECT['budgeriers of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to two']\", \"BOOLEAN['#5', 'is equal to zero']\", \"BOOLEAN['logical_and', 'true', '#6', '#7']\"]"}
{"id": "NLVR2_dev_dev-173-3-1", "input": "If the right image shows two yellow-headed birds in a wire cage, and the left image includes a red-headed bird.", "output": "[\"SELECT['the right image']\", \"PROJECT['birds in #REF', '#1']\", \"FILTER['#2', 'that are yellow-headed']\", \"PROJECT['cage in #REF', '#1']\", \"FILTER['#4', 'that has wires']\", \"FILTER['#3', 'in #5']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to two']\", \"SELECT['the left image']\", \"PROJECT['bird in #REF', '#9']\", \"BOOLEAN['#10', 'is red-headed']\", \"BOOLEAN['logical_and', 'true', '#8', '#11']\"]"}
{"id": "NLVR2_dev_dev-174-0-0", "input": "If there are two weight racks full of black weights.", "output": "[\"SELECT['weight racks']\", \"SELECT['weights']\", \"FILTER['#2', 'that are black']\", \"FILTER['#1', 'full of #3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-175-2-0", "input": "If at least one human is wearing eye glasses.", "output": "[\"SELECT['humans']\", \"SELECT['eye glasses']\", \"FILTER['#1', 'wearing #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-175-2-1", "input": "If an image shows a barber with a beard holding an electric clipper near his client.", "output": "[\"SELECT['barber']\", \"FILTER['#1', 'that is with a beard']\", \"SELECT['electric clipper']\", \"FILTER['#2', 'that is holding #3']\", \"PROJECT['client of #REF', '#4']\", \"FILTER['#4', 'that is near #5']\", \"BOOLEAN['#6', 'is in an image']\"]"}
{"id": "NLVR2_dev_dev-176-2-0", "input": "If there are no more than 2 animals featured.", "output": "[\"SELECT['animals']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is at most two']\"]"}
{"id": "NLVR2_dev_dev-176-2-1", "input": "If there are two guinea pigs beside each-other in one of the images.", "output": "[\"SELECT['guinea pigs']\", \"FILTER['#1', 'that are beside each-other']\", \"SELECT['images']\", \"GROUP['count', '#2', '#3']\", \"COMPARATIVE['#3', '#4', 'is equal to two']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-177-0-1", "input": "If in at least one image there is a single jellyfish in water with blue tentacles stretching up.", "output": "[\"SELECT['jellyfish']\", \"SELECT['water']\", \"FILTER['#1', 'that is in #2']\", \"PROJECT['tentacles of #REF', '#3']\", \"COMPARATIVE['#3', '#4', 'is blue']\", \"COMPARATIVE['#5', '#4', 'are stretching up']\", \"SELECT['images']\", \"GROUP['count', '#6', '#7']\", \"COMPARATIVE['#7', '#8', 'is equal to one']\", \"AGGREGATE['count', '#9']\", \"BOOLEAN['#10', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-177-1-0", "input": "If exactly one organism is floating freely.", "output": "[\"SELECT['organisms']\", \"FILTER['#1', 'that are floating freely']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-178-3-1", "input": "If the dog in the image on the right is standing up on all fours.", "output": "[\"SELECT['the image on the right']\", \"PROJECT['the dog in #REF', '#1']\", \"PROJECT['all fours of #REF', '#2']\", \"BOOLEAN['#2', 'is standing up on #3']\"]"}
{"id": "NLVR2_dev_dev-179-2-0", "input": "If the left image shows a group of no more than five people, including at least three women, sitting on something while looking at their phones.", "output": "[\"SELECT['image']\", \"FILTER['#1', 'on left']\", \"FILTER['#2', 'with a groups of no more than five people']\", \"FILTER['#3', 'with at least three women']\", \"FILTER['#4', 'who are sitting']\", \"FILTER['#4', 'who are looking at their phones']\", \"UNION['#5', '#6']\"]"}
{"id": "NLVR2_dev_dev-179-3-1", "input": "If everyone in the right image is looking at their phone.", "output": "[\"SELECT['right image']\", \"PROJECT['everyone in #REF', '#1']\", \"SELECT['phone']\", \"BOOLEAN['#2', 'is looking at #3']\"]"}
{"id": "NLVR2_dev_dev-18-0-1", "input": "If one image shows three seabirds flying, and the other shows at least one bird standing on something that is in the water.", "output": "[\"SELECT['one image']\", \"PROJECT['seabirds in #REF', '#1']\", \"FILTER['#2', 'that are flying']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to three']\", \"SELECT['other image']\", \"PROJECT['bird in #REF', '#6']\", \"FILTER['#7', 'that is standing']\", \"PROJECT['water in #REF', '#6']\", \"PROJECT['something that is in #REF', '#9']\", \"FILTER['#8', 'that is on #10']\", \"AGGREGATE['count', '#11']\", \"BOOLEAN['#12', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#5', '#13']\"]"}
{"id": "NLVR2_dev_dev-180-2-0", "input": "If the left image contains a container of lip gloss with a blue top.", "output": "[\"SELECT['left image']\", \"PROJECT['container of lip gloss in #REF', '#1']\", \"PROJECT['top of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is blue']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-181-1-0", "input": "If one dingo is on dry ground, and the other dingo is in the water.", "output": "[\"SELECT['dingo']\", \"SELECT['ground']\", \"FILTER['#2', 'that is dry']\", \"SELECT['water']\", \"FILTER['#1', 'on #3']\", \"FILTER['#1', 'in #4']\", \"AGGREGATE['count', '#5']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to one']\", \"BOOLEAN['#8', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#9', '#10']\"]"}
{"id": "NLVR2_dev_dev-181-2-1", "input": "If one of the images contains an animal species that is not a canine.", "output": "[\"SELECT['animal species']\", \"SELECT['canine']\", \"FILTER['#1', 'that is #2']\", \"DISCARD['#1', '#3']\", \"BOOLEAN['#4', 'is in one of the images']\"]"}
{"id": "NLVR2_dev_dev-182-0-1", "input": "If the right image shows a dark gray sneaker with purple and turquoise coloring as well and a white bottom", "output": "[\"SELECT['sneaker']\", \"PROJECT['coloring of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is dark gray']\", \"COMPARATIVE['#1', '#2', 'is purple and turquoise']\", \"INTERSECTION['#1', '#3', '#4']\", \"PROJECT['bottom of #REF', '#5']\", \"COMPARATIVE['#5', '#6', 'is white']\", \"BOOLEAN['#7', 'is in the right image']\"]"}
{"id": "NLVR2_dev_dev-182-2-0", "input": "If the right image contains a black shoe with purple and aqua trim and aqua laces, and the left image contains one right-facing sneaker.", "output": "[\"SELECT['shoe']\", \"FILTER['#1', 'that is black']\", \"PROJECT['trim of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is purple and aqua']\", \"PROJECT['laces of #REF', '#4']\", \"COMPARATIVE['#4', '#5', 'are aqua']\", \"BOOLEAN['#6', 'is in the right image']\", \"SELECT['the left image']\", \"PROJECT['sneakers in #REF', '#8']\", \"FILTER['#9', 'that are right-facing']\", \"AGGREGATE['count', '#10']\", \"BOOLEAN['#11', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#7', '#12']\"]"}
{"id": "NLVR2_dev_dev-18-3-0", "input": "If the right image contains exactly three birds.", "output": "[\"SELECT['the right image']\", \"PROJECT['birds in #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to three']\"]"}
{"id": "NLVR2_dev_dev-183-2-0", "input": "If in at least one image there is a woman in a mostly blue graduation gown with  short hair and a blue cap.", "output": "[\"SELECT['woman']\", \"SELECT['graduation gown']\", \"FILTER['#2', 'that is mostly blue']\", \"FILTER['#1', 'that is in #3']\", \"PROJECT['hair of #REF', '#4']\", \"COMPARATIVE['#4', '#5', 'is short']\", \"PROJECT['cap of #REF', '#6']\", \"COMPARATIVE['#6', '#7', 'is blue']\", \"BOOLEAN['#8', 'is in at least one image']\"]"}
{"id": "NLVR2_dev_dev-184-1-0", "input": "If at least one doberman dog is running in the snow", "output": "[\"SELECT['dog']\", \"FILTER['#1', 'that is doberman']\", \"SELECT['snow']\", \"FILTER['#2', 'running in #3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-184-3-1", "input": "If one image includes a doberman charging forward over snow, and the other image shows one doberman with erect ears.", "output": "[\"SELECT['one image']\", \"PROJECT['doberman in #REF', '#1']\", \"PROJECT['snow in #REF', '#1']\", \"BOOLEAN['#2', 'is charging forward over #3']\", \"SELECT['the other image']\", \"PROJECT['doberman in #REF', '#5']\", \"PROJECT['ears of #REF', '#6']\", \"COMPARATIVE['#6', '#7', 'are erect']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#4', '#10']\"]"}
{"id": "NLVR2_dev_dev-185-1-1", "input": "If the combined images include a pinkish-lavender scarf and a solid blue scarf.", "output": "[\"SELECT['scarf']\", \"FILTER['#1', 'that is pinkish-lavender']\", \"FILTER['#1', 'that is solid blue']\", \"BOOLEAN['#2', 'is in the images']\", \"BOOLEAN['#3', 'is in the images']\", \"BOOLEAN['logical_and', 'true', '#4', '#5']\"]"}
{"id": "NLVR2_dev_dev-185-3-0", "input": "If the left and right image contains the same number of blue tasseled fabric.", "output": "[\"SELECT['fabric']\", \"FILTER['#1', 'that is tasseled']\", \"FILTER['#2', 'that is blue']\", \"SELECT['left image']\", \"SELECT['right image']\", \"FILTER['#3', 'that are in #4']\", \"FILTER['#3', 'that are in #5']\", \"AGGREGATE['count', '#6']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is equal to #9']\"]"}
{"id": "NLVR2_dev_dev-186-0-1", "input": "If in the left image a person is sitting in a barber's chair.", "output": "[\"SELECT['person']\", \"SELECT['barber chair']\", \"FILTER['#1', 'sitting in #2']\", \"BOOLEAN['#3', 'is in left image']\"]"}
{"id": "NLVR2_dev_dev-186-2-0", "input": "If there is a total of four people in a barbershops.", "output": "[\"SELECT['people']\", \"SELECT['barbershops']\", \"FILTER['#1', 'that are in #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to four']\"]"}
{"id": "NLVR2_dev_dev-187-0-0", "input": "If all bowls in the picture are white", "output": "[\"SELECT['the picture']\", \"PROJECT['bowls in #REF', '#1']\", \"FILTER['#2', 'that are white']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#5', 'is equal to #4']\"]"}
{"id": "NLVR2_dev_dev-187-2-1", "input": "If the potatoes in the lefthand image are served in a light-colored oval bowl and are garnished with something green.", "output": "[\"SELECT['lefthand image']\", \"PROJECT['potatoes of #REF', '#1']\", \"SELECT['bowl']\", \"FILTER['#3', 'that is oval']\", \"FILTER['#4', 'that is light-colored']\", \"BOOLEAN['#2', 'are served in #5']\", \"SELECT['something']\", \"FILTER['#7', 'that is green']\", \"BOOLEAN['#2', 'is garnished with #8']\", \"BOOLEAN['logical_and', 'true', '#6', '#9']\"]"}
{"id": "NLVR2_dev_dev-188-0-1", "input": "If the lefthand image shows fingers touching a bird's greenish wing feathers.", "output": "[\"SELECT['lefthand image']\", \"PROJECT['fingers in #REF', '#1']\", \"PROJECT['bird in #REF', '#1']\", \"PROJECT['wing of #REF', '#3']\", \"PROJECT['feathers of #REF', '#4']\", \"FILTER['#5', 'that are greenish']\", \"FILTER['#2', 'that are touching #6']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is at least two']\"]"}
{"id": "NLVR2_dev_dev-188-3-0", "input": "If the left image contains a human hand touching a colorful parrot.", "output": "[\"SELECT['left image']\", \"PROJECT['human hand in #REF', '#1']\", \"PROJECT['parrot in #REF', '#1']\", \"FILTER['#3', 'that is colorful']\", \"FILTER['#2', 'that is touching #4']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-189-2-1", "input": "If an image shows multiple baboons crossing a gray paved road with no buildings on either side.", "output": "[\"SELECT['baboons']\", \"SELECT['paved road']\", \"FILTER['#2', 'that is gray']\", \"PROJECT['sides of #REF', '#3']\", \"PROJECT['buildings on #REF', '#4']\", \"GROUP['count', '#5', '#4']\", \"COMPARATIVE['#4', '#5', 'is equal to zero']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is equal to two']\", \"FILTER['#1', 'that are crossing #3']\", \"AGGREGATE['count', '#10']\", \"BOOLEAN['#11', 'is at least two']\", \"BOOLEAN['logical_and', 'true', '#12', '#9']\"]"}
{"id": "NLVR2_dev_dev-189-3-0", "input": "If monkeys are in the street in the image on the left.", "output": "[\"SELECT['fruit']\", \"SELECT['dessert']\", \"FILTER['#1', 'on top of #2']\", \"PROJECT['images of #REF', '#3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-190-1-0", "input": "If a hunter is next to his dead target.", "output": "[\"SELECT['hunter']\", \"PROJECT['target of #REF', '#1']\", \"FILTER['#2', 'that is dead']\", \"FILTER['#1', 'that is next to #3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-190-2-1", "input": "If there is a man sitting behind a large pig.", "output": "[\"SELECT['man']\", \"SELECT['pig']\", \"FILTER['#2', 'that is large']\", \"BOOLEAN['#1', 'is sitting behind #3']\"]"}
{"id": "NLVR2_dev_dev-19-1-0", "input": "If some of the pies have slices cut from them and some have lattice top crusts.", "output": "[\"SELECT['pies']\", \"PROJECT['slices of #REF', '#1']\", \"FILTER['#2', 'that are cut from #1']\", \"FILTER['#1', 'that has #3']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['difference', '#5', '#6']\", \"BOOLEAN['#6', 'is at least one']\", \"BOOLEAN['#7', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#8', '#9']\", \"FILTER['#1', 'that has lattice top crusts']\", \"AGGREGATE['count', '#11']\", \"ARITHMETIC['difference', '#5', '#12']\", \"BOOLEAN['#12', 'is at least one']\", \"BOOLEAN['#13', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#14', '#15']\", \"BOOLEAN['logical_and', 'true', '#10', '#16']\"]"}
{"id": "NLVR2_dev_dev-191-0-0", "input": "If a dog is holding something to its mouth in at least one of the images.", "output": "[\"SELECT['dog']\", \"PROJECT['mouth of #REF', '#1']\", \"FILTER['#2', 'that is holding something']\", \"FILTER['#1', 'that has #3']\", \"BOOLEAN['#4', 'is in one image']\"]"}
{"id": "NLVR2_dev_dev-191-2-1", "input": "If a dog is playing with a toy.", "output": "[\"SELECT['dog']\", \"SELECT['toy']\", \"BOOLEAN['#1', 'is playing with #2']\"]"}
{"id": "NLVR2_dev_dev-192-1-0", "input": "If an image contains a small dog inside a cut open watermelon.", "output": "[\"SELECT['dog']\", \"FILTER['#1', 'that is small']\", \"SELECT['watermelon']\", \"FILTER['#3', 'that is cut open']\", \"FILTER['#2', 'inside #4']\", \"BOOLEAN['#5', 'is in an image']\"]"}
{"id": "NLVR2_dev_dev-192-1-1", "input": "If all images show a dark gray french bulldog inside a hollowed-out watermelon half, and at least one image shows the dog with its mouth over the edge of the watermelon.", "output": "[\"SELECT['french bulldog']\", \"FILTER['#1', 'that is dark gray']\", \"SELECT['watermelon half']\", \"FILTER['#3', 'that is hollowed-out']\", \"FILTER['#2', 'inside #4']\", \"PROJECT['images of #REF', '#5']\", \"SELECT['images']\", \"AGGREGATE['count', '#6']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is equal to #9']\", \"PROJECT['mouth of #REF', '#5']\", \"PROJECT['edge of #REF', '#4']\", \"COMPARATIVE['#5', '#11', 'is over #12']\", \"BOOLEAN['#13', 'is in at least one image']\", \"BOOLEAN['logical_and', 'true', '#10', '#14']\"]"}
{"id": "NLVR2_dev_dev-193-2-0", "input": "If the single dog in the image on the left is standing in the grass.", "output": "[\"SELECT['left image']\", \"PROJECT['dog in #REF', '#1']\", \"FILTER['#2', 'that is single']\", \"SELECT['grass']\", \"BOOLEAN['#3', 'is standing in #4']\"]"}
{"id": "NLVR2_dev_dev-194-0-0", "input": "If an image contains only one gorilla.", "output": "[\"SELECT['images']\", \"PROJECT['gorillas in #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is equal to one']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-194-3-1", "input": "If an image shows exactly two gorillas, which are face to face with a hand raised in between them.", "output": "[\"SELECT['gorillas']\", \"FILTER['#1', 'that are face to face']\", \"SELECT['hand']\", \"FILTER['#2', 'that has #3 raised in between']\", \"SELECT['images']\", \"GROUP['count', '#4', '#5']\", \"COMPARATIVE['#5', '#6', 'is equal to two']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-195-0-0", "input": "If all the crabs are out of the water.", "output": "[\"SELECT['crabs']\", \"SELECT['the water']\", \"FILTER['#1', 'out of #2']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#5', 'is equal to #4']\"]"}
{"id": "NLVR2_dev_dev-195-1-1", "input": "If each image contains one crab facing forward, and at least one of the crabs depicted is purple-tinted.", "output": "[\"SELECT['crabs']\", \"FILTER['#1', 'that are facing forward']\", \"SELECT['images']\", \"GROUP['count', '#2', '#3']\", \"COMPARATIVE['#3', '#4', 'is equal to one']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to #7']\", \"FILTER['#1', 'that is purple-tinted']\", \"AGGREGATE['count', '#9']\", \"BOOLEAN['#10', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#8', '#11']\"]"}
{"id": "NLVR2_dev_dev-196-2-0", "input": "If the person in the image on the right is wearing a white vest.", "output": "[\"SELECT['right image']\", \"PROJECT['person of #REF', '#1']\", \"SELECT['vest']\", \"FILTER['#3', 'that is white']\", \"BOOLEAN['#2', 'is wearing #4']\"]"}
{"id": "NLVR2_dev_dev-197-1-1", "input": "If images contain more than one animal", "output": "[\"SELECT['images']\", \"PROJECT['animals of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is higher than one']\"]"}
{"id": "NLVR2_dev_dev-197-2-0", "input": "If each image contains one german shepherd, and one dog is sitting upright with an open-mouthed expression.", "output": "[\"SELECT['images']\", \"PROJECT['german shepherds in #REF', '#1']\", \"FILTER['#2', 'that are sitting upright']\", \"FILTER['#3', 'with an open-mouthed expression']\", \"GROUP['count', '#2', '#1']\", \"GROUP['count', '#4', '#1']\", \"COMPARATIVE['#1', '#5', 'is equal to one']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#9', 'is equal to #8']\", \"AGGREGATE['sum', '#6']\", \"BOOLEAN['#11', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#10', '#12']\"]"}
{"id": "NLVR2_dev_dev-198-3-1", "input": "If to the left of one of the images of the statue of the dung beetles, you can see a bench.", "output": "[\"SELECT['statue of the dung beetles']\", \"SELECT['bench']\", \"FILTER['#2', 'to the left of #1']\", \"BOOLEAN['#3', 'is in one of the images']\"]"}
{"id": "NLVR2_dev_dev-199-0-0", "input": "If one image contains a building facing downward and diagonally, the other image contains the inside right angle of a wall.", "output": "[\"SELECT['one image']\", \"PROJECT['buildings in #REF', '#1']\", \"FILTER['#2', 'that is facing downward']\", \"FILTER['#3', 'that is facing diagonally']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least one']\", \"SELECT['other image']\", \"PROJECT['walls in #REF', '#7']\", \"PROJECT['inside right angle of #REF', '#8']\", \"AGGREGATE['count', '#9']\", \"BOOLEAN['#10', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#6', '#11']\"]"}
{"id": "NLVR2_dev_dev-200-3-0", "input": "If the right pic has fewer then five animals", "output": "[\"SELECT['right pic']\", \"PROJECT['animals of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is lower than five']\"]"}
{"id": "NLVR2_dev_dev-200-3-1", "input": "If there are 4 seals on the sandy beach", "output": "[\"SELECT['seals']\", \"SELECT['beach']\", \"FILTER['#2', 'that is sandy']\", \"FILTER['#1', 'on #3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to 4']\"]"}
{"id": "NLVR2_dev_dev-201-1-0", "input": "If the dog in the right image is facing right.", "output": "[\"SELECT['right image']\", \"PROJECT['dog of #REF', '#1']\", \"BOOLEAN['#2', 'is facing right']\"]"}
{"id": "NLVR2_dev_dev-201-1-1", "input": "If all of the dogs are facing to the left.", "output": "[\"SELECT['dogs']\", \"FILTER['#1', 'that are facing to the left']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#4', 'is equal to #3']\"]"}
{"id": "NLVR2_dev_dev-202-2-0", "input": "If there is one pair of human hands.", "output": "[\"SELECT['hands']\", \"FILTER['#1', 'that are human']\", \"PROJECT['pair of #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-20-3-0", "input": "If the dogs in one of the images are wearing orange booties.", "output": "[\"SELECT['dogs']\", \"SELECT['booties']\", \"FILTER['#2', 'that are orange']\", \"FILTER['#1', 'wearing #3']\", \"BOOLEAN['#4', 'are in one of the images']\"]"}
{"id": "NLVR2_dev_dev-203-2-1", "input": "If in one image, a spotted cougar is captured in midair, leaping towards a horned warthog that is facing it from below.", "output": "[\"SELECT['cougar']\", \"FILTER['#1', 'that is spotted']\", \"FILTER['#2', 'in midair']\", \"SELECT['warthog']\", \"FILTER['#4', 'that is horned']\", \"FILTER['#5', 'facing #3 from below']\", \"FILTER['#3', 'leaping towards #6']\", \"BOOLEAN['#7', 'is in one image']\"]"}
{"id": "NLVR2_dev_dev-203-3-0", "input": "If an image features a leaping spotted cat above one warthog.", "output": "[\"SELECT['spotted cat']\", \"FILTER['#1', 'that is leaping']\", \"SELECT['warthog']\", \"FILTER['#3', 'that #2 is above']\", \"SELECT['images']\", \"GROUP['count', '#4', '#5']\", \"COMPARATIVE['#5', '#6', 'is equal to one']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-204-0-0", "input": "If the left image shows a hand at the top with fingers aimed downward toward the keys of a saxophone with a curved shape.", "output": "[\"SELECT['hand']\", \"FILTER['#1', 'at the top']\", \"PROJECT['fingers of #REF', '#2']\", \"SELECT['saxophone']\", \"PROJECT['shape of #REF', '#4']\", \"COMPARATIVE['#4', '#5', 'is curved']\", \"PROJECT['keys of #REF', '#6']\", \"COMPARATIVE['#2', '#3', 'are aimed downward toward #7']\", \"BOOLEAN['#8', 'is in the left image']\"]"}
{"id": "NLVR2_dev_dev-204-3-1", "input": "If there are no less than five saxophones standing up.", "output": "[\"SELECT['saxophones']\", \"FILTER['#1', 'that are standing up']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at least five']\"]"}
{"id": "NLVR2_dev_dev-206-0-0", "input": "If a pile of cut greenery for munching is in front of an orange-and-white guinea pig.", "output": "[\"SELECT['greenery']\", \"FILTER['#1', 'that is cut']\", \"FILTER['#2', 'that is in a pile']\", \"FILTER['#3', 'that is for munching']\", \"SELECT['guinea pig']\", \"FILTER['#5', 'that is orange-and-white']\", \"BOOLEAN['#4', 'is in front of #6']\"]"}
{"id": "NLVR2_dev_dev-206-0-1", "input": "If a rodent is cuddled together with another rodent in the image on the right.", "output": "[\"SELECT['the image on the right']\", \"PROJECT['rodents in #REF', '#1']\", \"FILTER['#2', 'that are cuddled together']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-207-2-1", "input": "If in one photo, three women are wearing swimsuits in different styles that are all the same color.", "output": "[\"SELECT['photos']\", \"PROJECT['women in #REF', '#1']\", \"PROJECT['swimsuits of #REF', '#2']\", \"PROJECT['styles of #REF', '#3']\", \"PROJECT['colors of #REF', '#3']\", \"COMPARATIVE['#2', '#4', 'are different']\", \"COMPARATIVE['#2', '#5', 'are the same']\", \"INTERSECTION['#2', '#6', '#7']\", \"GROUP['count', '#8', '#1']\", \"COMPARATIVE['#1', '#9', 'is equal to three']\", \"AGGREGATE['count', '#10']\", \"BOOLEAN['#11', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-207-3-0", "input": "If an image shows three camera-facing bikini models, and at least two of them wear all-white swimsuits.", "output": "[\"SELECT['bikini models']\", \"FILTER['#1', 'that are camera-facing']\", \"SELECT['swimsuits']\", \"FILTER['#3', 'that are all-white']\", \"SELECT['images']\", \"GROUP['count', '#2', '#5']\", \"COMPARATIVE['#5', '#6', 'is equal to three']\", \"FILTER['#2', 'that wear #4']\", \"GROUP['count', '#8', '#7']\", \"COMPARATIVE['#7', '#9', 'is at least two']\", \"AGGREGATE['count', '#10']\", \"BOOLEAN['#11', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-208-3-0", "input": "If the colorful parrot-type birds in the left and right images are perching and facing the same general direction.", "output": "[\"SELECT['the left image']\", \"PROJECT['birds in #REF', '#1']\", \"FILTER['#2', 'that are colorful']\", \"FILTER['#3', 'that are parrot-type']\", \"BOOLEAN['#4', 'are perching']\", \"PROJECT['general direction facing of #REF', '#4']\", \"SELECT['the right image']\", \"PROJECT['birds in #REF', '#7']\", \"FILTER['#8', 'that are colorful']\", \"FILTER['#9', 'that are parrot-type']\", \"BOOLEAN['#10', 'are perching']\", \"PROJECT['general direction facing of #REF', '#10']\", \"BOOLEAN['#6', 'is the same as #12']\", \"BOOLEAN['logical_and', 'true', '#5', '#11']\", \"BOOLEAN['logical_and', 'true', '#13', '#14']\"]"}
{"id": "NLVR2_dev_dev-208-3-1", "input": "If the two birds are facing in opposite directions.", "output": "[\"SELECT['birds']\", \"PROJECT['directions that #REF are facing', '#1']\", \"COMPARATIVE['#1', '#2', 'are opposite']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-209-0-0", "input": "If in one image there is a line of fence posts with one large darkly colored bird on top of each post.", "output": "[\"SELECT['fence posts']\", \"FILTER['#1', 'in a line']\", \"SELECT['birds']\", \"FILTER['#3', 'that are large']\", \"FILTER['#4', 'that are darkly colored']\", \"FILTER['#5', 'on top of #2']\", \"GROUP['count', '#6', '#2']\", \"COMPARATIVE['#2', '#7', 'is equal to one']\", \"BOOLEAN['#8', 'is in one image']\"]"}
{"id": "NLVR2_dev_dev-210-0-0", "input": "If the dog in the image on the left has their front paws up on a higher level than the back ones.", "output": "[\"SELECT['the image on the left']\", \"PROJECT['dog in #REF', '#1']\", \"PROJECT['front paws of #REF', '#2']\", \"PROJECT['back paws of #REF', '#2']\", \"BOOLEAN['#3', 'are up higher than #4']\"]"}
{"id": "NLVR2_dev_dev-210-1-1", "input": "If the dog on the left is standing on its hind legs.", "output": "[\"SELECT['dogs']\", \"FILTER['#1', 'that is on the left']\", \"PROJECT['hind legs of #REF', '#2']\", \"BOOLEAN['#2', 'is standing on #3']\"]"}
{"id": "NLVR2_dev_dev-2-1-1", "input": "If the right image shows a diagonally displayed wooden flute lying on a brown bag on top of a pale carpet.", "output": "[\"SELECT['flute']\", \"FILTER['#1', 'that is wooden']\", \"FILTER['#2', 'that is diagonally displayed']\", \"SELECT['bag']\", \"FILTER['#4', 'that is brown']\", \"SELECT['carpet']\", \"FILTER['#6', 'that is pale']\", \"FILTER['#5', 'on top of #7']\", \"FILTER['#3', 'lying on #8']\", \"BOOLEAN['#9', 'is in the right image']\"]"}
{"id": "NLVR2_dev_dev-21-1-0", "input": "If in the left image a canoe is in the water.", "output": "[\"SELECT['left image']\", \"PROJECT['canoe in #REF', '#1']\", \"PROJECT['water in #REF', '#1']\", \"FILTER['#2', 'that is in #3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-211-0-0", "input": "If the combined images include one baboon with lowered face interested in the contents of some container, and a trio of same-size baboons sitting close together.", "output": "[\"SELECT['images']\", \"PROJECT['baboons in #REF', '#1']\", \"PROJECT['face of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is lowered']\", \"PROJECT['container in #REF', '#1']\", \"PROJECT['contents of #REF', '#5']\", \"FILTER['#4', 'that are interested in #6']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is equal to one']\", \"FILTER['#2', 'that are sitting close together']\", \"FILTER['#10', 'that are same-size']\", \"AGGREGATE['count', '#11']\", \"BOOLEAN['#12', 'is higher than two']\", \"BOOLEAN['logical_and', 'true', '#9', '#13']\"]"}
{"id": "NLVR2_dev_dev-211-2-1", "input": "If a monkey is interacting with a container in the image on the right.", "output": "[\"SELECT['the image on the right']\", \"PROJECT['monkey in #REF', '#1']\", \"PROJECT['container in #REF', '#1']\", \"BOOLEAN['#2', 'is interacting with #3']\"]"}
{"id": "NLVR2_dev_dev-212-3-0", "input": "If in at least one image there is a white bowl of mash sweet potatoes on top of a small wash towel.", "output": "[\"SELECT['bowl of mash sweet potatoes']\", \"FILTER['#1', 'that is white']\", \"SELECT['wash towel']\", \"FILTER['#3', 'that is small']\", \"FILTER['#2', 'that is on #4']\", \"BOOLEAN['#5', 'is in at least one image']\"]"}
{"id": "NLVR2_dev_dev-213-0-1", "input": "If the right image contains two towels hanging on a towel rod attached to a wall.", "output": "[\"SELECT['right image']\", \"PROJECT['towels in #REF', '#1']\", \"PROJECT['towel rod in #REF', '#1']\", \"PROJECT['wall in #REF', '#1']\", \"FILTER['#3', 'that is attached to #4']\", \"FILTER['#2', 'that are hanging on #5']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-213-2-0", "input": "If in at least one image there are four folded towel below single black framed picture.", "output": "[\"SELECT['towels']\", \"FILTER['#1', 'that are folded']\", \"SELECT['picture']\", \"FILTER['#3', 'that is black framed']\", \"FILTER['#2', 'below #4']\", \"PROJECT['images of #REF', '#5']\", \"GROUP['count', '#5', '#6']\", \"COMPARATIVE['#6', '#7', 'is equal to four']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-214-2-0", "input": "If the left side image has two different types of animals", "output": "[\"SELECT['the left side image']\", \"PROJECT['different types of animals in #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-215-2-0", "input": "If in at least one image, we can see a human hand.", "output": "[\"SELECT['hand']\", \"FILTER['#1', 'that is human']\", \"PROJECT['images of #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-215-3-1", "input": "If the left image features one flat rectangular phone held screen-side-up in one hand, with fingers and thumb on the edges.", "output": "[\"SELECT['the left image']\", \"PROJECT['phones in #REF', '#1']\", \"FILTER['#2', 'that are flat']\", \"FILTER['#3', 'that are rectangular']\", \"PROJECT['hand in #REF', '#1']\", \"FILTER['#4', 'held screen-side-up in #5']\", \"PROJECT['edges of #REF', '#6']\", \"PROJECT['fingers of #REF', '#5']\", \"PROJECT['thumb of #REF', '#5']\", \"FILTER['#8', 'on #7']\", \"FILTER['#9', 'on #7']\", \"FILTER['#6', 'with #10']\", \"FILTER['#6', 'with #11']\", \"INTERSECTION['#6', '#12', '#13']\", \"AGGREGATE['count', '#14']\", \"BOOLEAN['#15', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-216-0-1", "input": "If one image includes a rightward-facing adult male gorilla with mouth open wide in a fierce expression.", "output": "[\"SELECT['gorilla']\", \"FILTER['#1', 'that is a adult']\", \"FILTER['#2', 'that is male']\", \"FILTER['#3', 'that is rightward-facing']\", \"PROJECT['mouth of #REF', '#4']\", \"COMPARATIVE['#4', '#5', 'is wide open in a fierce expression']\", \"BOOLEAN['#6', 'is in one image']\"]"}
{"id": "NLVR2_dev_dev-216-1-0", "input": "If one of the images shows a gorilla with an open mouth.", "output": "[\"SELECT['gorilla']\", \"PROJECT['mouth of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is open']\", \"BOOLEAN['#3', 'is in one of the images']\"]"}
{"id": "NLVR2_dev_dev-217-1-0", "input": "If you can see some damage to the animal in the image to the right.", "output": "[\"SELECT['right image']\", \"PROJECT['animal of #REF', '#1']\", \"BOOLEAN['#2', 'has some damage']\"]"}
{"id": "NLVR2_dev_dev-218-0-0", "input": "If there are no more than 2 groundhogs.", "output": "[\"SELECT['groundhogs']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is at most two']\"]"}
{"id": "NLVR2_dev_dev-218-3-1", "input": "If there are exactly two marmots.", "output": "[\"SELECT['marmots']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-219-2-0", "input": "If a box is next to a lipstick and its cap.", "output": "[\"SELECT['box']\", \"SELECT['lipstick']\", \"PROJECT['cap of #REF', '#2']\", \"UNION['#2', '#3']\", \"BOOLEAN['#1', 'is next to #4']\"]"}
{"id": "NLVR2_dev_dev-219-2-1", "input": "If one image shows a lipstick cover on its side near an upright lipstick tube and box.", "output": "[\"SELECT['lipstick cover']\", \"PROJECT['side of #REF', '#1']\", \"FILTER['#1', 'on #2']\", \"SELECT['lipstick tube']\", \"FILTER['#4', 'that is upright']\", \"SELECT['box']\", \"FILTER['#3', 'near #5']\", \"FILTER['#3', 'near #6']\", \"INTERSECTION['#3', '#7', '#8']\", \"BOOLEAN['#9', 'is in one image']\"]"}
{"id": "NLVR2_dev_dev-2-2-0", "input": "If the left image has a woodwind instrument on a wooden surface.", "output": "[\"SELECT['instrument']\", \"FILTER['#1', 'that is woodwind']\", \"SELECT['surface']\", \"FILTER['#3', 'that is wooden']\", \"FILTER['#2', 'on #4']\", \"BOOLEAN['#5', 'is in left image']\"]"}
{"id": "NLVR2_dev_dev-220-0-0", "input": "If there are four kids in the pair of images.", "output": "[\"SELECT['images']\", \"PROJECT['kids in #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to four']\"]"}
{"id": "NLVR2_dev_dev-220-0-1", "input": "If an image shows two young girls each modeling long-legged sleepwear, and at least one wears sleepwear with separate top and bottoms.", "output": "[\"SELECT['girls']\", \"SELECT['sleepwear']\", \"FILTER['#1', 'that are young']\", \"FILTER['#2', 'that are long-legged']\", \"FILTER['#3', 'that are modeling #4']\", \"PROJECT['top of #REF', '#4']\", \"PROJECT['bottom of #REF', '#4']\", \"FILTER['#6', 'that is separate from #7']\", \"FILTER['#4', 'that has #8']\", \"FILTER['#3', 'that wears #9']\", \"SELECT['images']\", \"GROUP['count', '#5', '#11']\", \"COMPARATIVE['#11', '#12', 'is equal to two']\", \"GROUP['count', '#10', '#13']\", \"COMPARATIVE['#13', '#14', 'is at least one']\", \"AGGREGATE['count', '#15']\", \"BOOLEAN['#16', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-221-2-0", "input": "If there are more than three syringes.", "output": "[\"SELECT['syringes']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is higher than three']\"]"}
{"id": "NLVR2_dev_dev-221-3-1", "input": "If each image contains the same number of syringes, and the combined images contain at least four syringes in total.", "output": "[\"SELECT['syringes']\", \"SELECT['images']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'are the same']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to #6']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#8', 'is at least four']\", \"BOOLEAN['logical_and', 'true', '#7', '#9']\"]"}
{"id": "NLVR2_dev_dev-22-2-0", "input": "If a greyhound is holding a knitted toy with its front legs.", "output": "[\"SELECT['greyhound']\", \"SELECT['toy']\", \"FILTER['#2', 'that is knitted']\", \"PROJECT['front legs of #REF', '#1']\", \"FILTER['#1', 'that is holding #3 with #4']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-222-2-0", "input": "If one image shows an overhead view of a beetle and the other shows a side view.", "output": "[\"SELECT['beetle']\", \"PROJECT['overhead view of #REF', '#1']\", \"PROJECT['side view of #REF', '#1']\", \"BOOLEAN['#2', 'is in one image']\", \"BOOLEAN['#3', 'is in other image']\", \"BOOLEAN['logical_and', 'true', '#4', '#5']\"]"}
{"id": "NLVR2_dev_dev-222-3-1", "input": "If one beetle is displayed vertically and in a top-view, while the other beetle is displayed horizontally.", "output": "[\"SELECT['beetles']\", \"FILTER['#1', 'that is displayed vertically']\", \"FILTER['#2', 'that is displayed in a top-view']\", \"FILTER['#1', 'that is displayed horizontally']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to one']\", \"BOOLEAN['#6', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#7', '#8']\"]"}
{"id": "NLVR2_dev_dev-22-3-1", "input": "If there is a dog laying on a dog bed cuddling a stuffed toy", "output": "[\"SELECT['dog']\", \"SELECT['dog bed']\", \"FILTER['#1', 'that is laying']\", \"FILTER['#3', 'that is on #2']\", \"SELECT['stuffed toy']\", \"FILTER['#4', 'that is cuddling #5']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-223-1-1", "input": "If the sneaker in the left image has a stretch top opening, currently being stretched open.", "output": "[\"SELECT['left image']\", \"PROJECT['sneaker of #REF', '#1']\", \"SELECT['stretch top opening']\", \"FILTER['#3', 'that is being stretched open']\", \"BOOLEAN['#2', 'has #4']\"]"}
{"id": "NLVR2_dev_dev-223-2-0", "input": "If the top band of a sneaker is being stretched with fingers", "output": "[\"SELECT['sneaker']\", \"PROJECT['bands of #REF', '#1']\", \"FILTER['#2', 'that is on the top']\", \"SELECT['fingers']\", \"BOOLEAN['#3', 'is being stretched with #4']\"]"}
{"id": "NLVR2_dev_dev-224-0-1", "input": "If every image shows exactly one dog.", "output": "[\"SELECT['dogs']\", \"SELECT['images']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is equal to one']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to #6']\"]"}
{"id": "NLVR2_dev_dev-224-1-0", "input": "If all dogs are corgis with upright ears, and one image contains at least twice as many real corgis as the other image.", "output": "[\"SELECT['dogs']\", \"FILTER['#1', 'that are corgis']\", \"PROJECT['ears of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'are upright']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to #6']\", \"SELECT['one image']\", \"PROJECT['corgis in #REF', '#8']\", \"FILTER['#9', 'that are real']\", \"AGGREGATE['count', '#10']\", \"SELECT['other image']\", \"PROJECT['corgis in #REF', '#12']\", \"FILTER['#13', 'that are real']\", \"AGGREGATE['count', '#14']\", \"ARITHMETIC['division', '#11', '#15']\", \"BOOLEAN['#16', 'is at least two']\", \"BOOLEAN['logical_and', 'true', '#7', '#17']\"]"}
{"id": "NLVR2_dev_dev-225-0-0", "input": "If an image contains exactly two llamas, with solid white fur and round heads with upright ears, standing one in front of the other.", "output": "[\"SELECT['llamas']\", \"PROJECT['fur of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is solid white']\", \"PROJECT['heads of #REF', '#3']\", \"PROJECT['ears of #REF', '#3']\", \"FILTER['#5', 'that are upright']\", \"FILTER['#4', 'that is round']\", \"FILTER['#7', 'that is with #6']\", \"FILTER['#3', 'that has #8']\", \"FILTER['#9', 'that are standing one in front of the other']\", \"SELECT['images']\", \"GROUP['count', '#10', '#11']\", \"COMPARATIVE['#11', '#12', 'is equal to two']\", \"AGGREGATE['count', '#13']\", \"BOOLEAN['#14', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-226-1-0", "input": "If both stairways have glass sides and wood handrails.", "output": "[\"SELECT['stairways']\", \"PROJECT['sides of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is glass']\", \"PROJECT['handrails of #REF', '#3']\", \"COMPARATIVE['#3', '#4', 'is wood']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-227-1-0", "input": "If a rolling pin is rolling out dough in at least one of the pictures.", "output": "[\"SELECT['rolling pin']\", \"SELECT['dough']\", \"FILTER['#1', 'rolling out #2']\", \"PROJECT['pictures of #REF', '#3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-227-1-1", "input": "If the left image shows a long wooden cylinder laid diagonally on top of a flattened circle of dough.", "output": "[\"SELECT['cylinder']\", \"FILTER['#1', 'that is long']\", \"FILTER['#2', 'that is wooden']\", \"SELECT['circle of dough']\", \"FILTER['#4', 'that is flattened']\", \"FILTER['#3', 'laid diagonally on top of #5']\", \"BOOLEAN['#6', 'is in the left image']\"]"}
{"id": "NLVR2_dev_dev-228-2-1", "input": "If there an underweight dog with ribs and hip bones showing.", "output": "[\"SELECT['dog']\", \"FILTER['#1', 'that is underweight']\", \"PROJECT['ribs of #REF', '#2']\", \"PROJECT['hip bones of #REF', '#2']\", \"BOOLEAN['#3', 'are showing']\", \"BOOLEAN['#4', 'are showing']\", \"BOOLEAN['logical_and', 'true', '#5', '#6']\"]"}
{"id": "NLVR2_dev_dev-228-3-0", "input": "If all the dogs are facing left.", "output": "[\"SELECT['dogs']\", \"FILTER['#1', 'that are facing left']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#4', 'is equal to #3']\"]"}
{"id": "NLVR2_dev_dev-229-0-1", "input": "If a single dog is sitting down in the image on the right.", "output": "[\"SELECT['right image']\", \"PROJECT['dog in #REF', '#1']\", \"BOOLEAN['#2', 'is sitting']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#4', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#5', '#3']\"]"}
{"id": "NLVR2_dev_dev-230-1-0", "input": "If one image features at least one panda chewing on a leafless stalk, and the other image shows a sitting panda with the arm on the right bent toward its mouth.", "output": "[\"SELECT['one image']\", \"PROJECT['pandas in #REF', '#1']\", \"PROJECT['stalk in #REF', '#1']\", \"FILTER['#3', 'that is leafless']\", \"FILTER['#2', 'chewing on #4']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is at least one']\", \"SELECT['the other image']\", \"PROJECT['panda in #REF', '#8']\", \"FILTER['#9', 'that is sitting']\", \"PROJECT['arm on the right of #REF', '#10']\", \"PROJECT['mouth of #REF', '#10']\", \"BOOLEAN['#11', 'is bent toward #12']\", \"BOOLEAN['logical_and', 'true', '#7', '#13']\"]"}
{"id": "NLVR2_dev_dev-230-1-1", "input": "If there are two pandas in the left image and single panda in the right image.", "output": "[\"SELECT['left image']\", \"SELECT['right image']\", \"PROJECT['pandas of #REF', '#1']\", \"PROJECT['pandas of #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to two']\", \"BOOLEAN['#6', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#7', '#8']\"]"}
{"id": "NLVR2_dev_dev-231-2-0", "input": "If the left and right image contains the same numbers of mugs with at least one with a pink printed mug on it.", "output": "[\"SELECT['the left image']\", \"PROJECT['mugs in #REF', '#1']\", \"FILTER['#2', 'that are pink']\", \"FILTER['#3', 'that are printed']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#4']\", \"SELECT['the right image']\", \"PROJECT['mugs in #REF', '#7']\", \"FILTER['#8', 'that are pink']\", \"FILTER['#9', 'that are printed']\", \"AGGREGATE['count', '#8']\", \"AGGREGATE['count', '#10']\", \"ARITHMETIC['sum', '#6', '#12']\", \"BOOLEAN['#5', 'is equal to #11']\", \"BOOLEAN['#13', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#14', '#15']\"]"}
{"id": "NLVR2_dev_dev-23-2-1", "input": "If the pizzas in each image remain uncut.", "output": "[\"SELECT['images']\", \"PROJECT['pizzas in #REF', '#1']\", \"BOOLEAN['#2', 'remain uncut']\"]"}
{"id": "NLVR2_dev_dev-232-2-1", "input": "If one image shows multiple people standing to the left of a train, and the other image includes a leftward angled train with at least some blue coloring on it.", "output": "[\"SELECT['one image']\", \"PROJECT['people in #REF', '#1']\", \"PROJECT['train in #REF', '#1']\", \"FILTER['#2', 'that are standing to the left of #3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least two']\", \"SELECT['other image']\", \"PROJECT['train in #REF', '#7']\", \"FILTER['#8', 'that is angled leftward']\", \"PROJECT['coloring of #REF', '#9']\", \"COMPARATIVE['#9', '#10', 'is blue']\", \"AGGREGATE['count', '#11']\", \"BOOLEAN['#12', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#6', '#13']\"]"}
{"id": "NLVR2_dev_dev-232-3-0", "input": "If people are standing near a train in one of the images.", "output": "[\"SELECT['people']\", \"SELECT['train']\", \"FILTER['#1', 'that are standing near #2']\", \"BOOLEAN['#3', 'is in one image']\"]"}
{"id": "NLVR2_dev_dev-23-3-0", "input": "If a pizza cutter is laying next to the pizza", "output": "[\"SELECT['pizza cutter']\", \"SELECT['pizza']\", \"BOOLEAN['#1', 'is laying next to #2']\"]"}
{"id": "NLVR2_dev_dev-233-0-0", "input": "If the combined images include four devices propped on stands, with at least one stand shaped like an animal.", "output": "[\"SELECT['devices']\", \"SELECT['stands']\", \"FILTER['#1', 'that are propped on #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to four']\", \"FILTER['#2', 'that is shaped like an animal']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#5', '#8']\"]"}
{"id": "NLVR2_dev_dev-233-0-1", "input": "If one of the images shows a wooden phone stand shaped like an animal.", "output": "[\"SELECT['phone stand']\", \"FILTER['#1', 'that is wooden']\", \"SELECT['animal']\", \"FILTER['#2', 'that is shaped like #3']\", \"BOOLEAN['#4', 'is in one image']\"]"}
{"id": "NLVR2_dev_dev-234-0-1", "input": "If a leopard is lying on the ground.", "output": "[\"SELECT['leopard']\", \"SELECT['the ground']\", \"BOOLEAN['#1', 'is lying on #2']\"]"}
{"id": "NLVR2_dev_dev-235-0-1", "input": "If there are at least 2 packages of scott in a red packaging.", "output": "[\"SELECT['packages of scott']\", \"PROJECT['packaging of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is red']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least two']\"]"}
{"id": "NLVR2_dev_dev-235-2-0", "input": "If there are more than 8 packages present.", "output": "[\"SELECT['packages']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is higher than 8']\"]"}
{"id": "NLVR2_dev_dev-236-2-0", "input": "If the right image contains a person riding a mountain bike wearing knee pads.", "output": "[\"SELECT['person']\", \"SELECT['mountain bike']\", \"SELECT['knee pads']\", \"FILTER['#1', 'riding #2']\", \"FILTER['#4', 'wearing #3']\", \"BOOLEAN['#5', 'is in the right image']\"]"}
{"id": "NLVR2_dev_dev-236-3-1", "input": "If only the person in the image on the left is on a bike.", "output": "[\"SELECT['images']\", \"FILTER['#1', 'on the left']\", \"DISCARD['#1', '#2']\", \"PROJECT['people in #REF', '#3']\", \"PROJECT['bikes in #REF', '#3']\", \"FILTER['#4', 'on #5']\", \"GROUP['count', '#6', '#3']\", \"AGGREGATE['sum', '#7']\", \"BOOLEAN['#8', 'is equal to zero']\"]"}
{"id": "NLVR2_dev_dev-237-1-1", "input": "If one of the sinks has an attached chain to hold the drain plug.", "output": "[\"SELECT['sinks']\", \"SELECT['chain']\", \"SELECT['drain plug']\", \"FILTER['#2', 'that hold #3']\", \"FILTER['#1', 'that has #4']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-237-2-0", "input": "If the hot and cold faucets are indicated by colored dots.", "output": "[\"SELECT['faucet']\", \"FILTER['#1', 'that is hot']\", \"FILTER['#1', 'that is cold']\", \"SELECT['dots']\", \"FILTER['#4', 'that are colored']\", \"BOOLEAN['#2', 'is indicated by #5']\", \"BOOLEAN['#3', 'is indicated by #5']\", \"BOOLEAN['logical_and', 'true', '#6', '#7']\"]"}
{"id": "NLVR2_dev_dev-238-0-0", "input": "If in one image, a child interacts with a dog in a grassy area, while in a second image of an interior location a dog on a blanket is looking forward.", "output": "[\"SELECT['one image']\", \"PROJECT['child in #REF', '#1']\", \"PROJECT['dog in #REF', '#1']\", \"FILTER['#2', 'that interacts with #3']\", \"PROJECT['grassy area in #REF', '#1']\", \"FILTER['#4', 'that is in #5']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is at least one']\", \"SELECT['second image']\", \"PROJECT['interior location in #REF', '#9']\", \"PROJECT['dog in #REF', '#9']\", \"PROJECT['blanket in #REF', '#9']\", \"FILTER['#11', 'that is in #10']\", \"FILTER['#13', 'that is on #12']\", \"FILTER['#14', 'that is looking forward']\", \"AGGREGATE['count', '#15']\", \"BOOLEAN['#16', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#8', '#17']\"]"}
{"id": "NLVR2_dev_dev-238-0-1", "input": "If the left image contains a human interacting with a dog outside.", "output": "[\"SELECT['left image']\", \"PROJECT['human in #REF', '#1']\", \"PROJECT['dog in #REF', '#1']\", \"FILTER['#2', 'that is interacting with #3']\", \"BOOLEAN['#4', 'is outside']\"]"}
{"id": "NLVR2_dev_dev-239-0-1", "input": "If there is exactly one pair of drumsticks.", "output": "[\"SELECT['pair of drumsticks']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-239-3-0", "input": "If in at least one image there is a two color tone drum where tie base is red.", "output": "[\"SELECT['tone drum']\", \"PROJECT['colors of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is equal to two']\", \"PROJECT['tie base of #REF', '#4']\", \"COMPARATIVE['#4', '#5', 'is red']\", \"BOOLEAN['#6', 'is in at least one image']\"]"}
{"id": "NLVR2_dev_dev-240-3-0", "input": "If the left image shows a cream-layered dessert in a footed clear glass which includes sliced peanut butter cups and brownie chunks.", "output": "[\"SELECT['dessert']\", \"FILTER['#1', 'that is cream-layered']\", \"SELECT['peanut butter cups']\", \"FILTER['#3', 'that are sliced']\", \"SELECT['brownie chunks']\", \"FILTER['#2', 'that includes #4']\", \"FILTER['#6', 'that includes #5']\", \"SELECT['glass']\", \"FILTER['#8', 'that is footed']\", \"FILTER['#9', 'that is clear']\", \"FILTER['#7', 'in #10']\", \"BOOLEAN['#11', 'is in the left image']\"]"}
{"id": "NLVR2_dev_dev-240-3-1", "input": "If the image to the right appears to show a single serving, rather than the full trifle.", "output": "[\"SELECT['the image to the right']\", \"PROJECT['trifle servings in #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-241-0-0", "input": "If at least one of the images in the set does not feature four knee pads.", "output": "[\"SELECT['knee pads']\", \"SELECT['images']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is equal to four']\", \"DISCARD['#2', '#4']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-24-1-1", "input": "If there is at least 1 clown fish swimming near an anemone, a clown fish is looking toward the camera", "output": "[\"SELECT['clown fish']\", \"SELECT['an anemone']\", \"FILTER['#1', 'swimming near #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least one']\", \"FILTER['#1', 'that are looking toward the camera']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#5', '#8']\"]"}
{"id": "NLVR2_dev_dev-242-0-0", "input": "If the right image contains a spoon placed near a dessert.", "output": "[\"SELECT['right image']\", \"PROJECT['spoon in #REF', '#1']\", \"PROJECT['dessert in #REF', '#1']\", \"FILTER['#2', 'that is placed near #3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-242-2-1", "input": "If at least one image shows multiple small desserts containing chocolate-brown cream layers.", "output": "[\"SELECT['desserts']\", \"FILTER['#1', 'that are small']\", \"PROJECT['cream layers of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'are chocolate-brown']\", \"SELECT['images']\", \"GROUP['count', '#4', '#5']\", \"COMPARATIVE['#5', '#6', 'is higher than one']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-24-3-0", "input": "If one image shows a clown fish swimming next to anemone tendrils that are one solid color.", "output": "[\"SELECT['clown fish']\", \"SELECT['anemone tendrils']\", \"PROJECT['solid colors of #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"COMPARATIVE['#2', '#4', 'is equal to one']\", \"FILTER['#1', 'swimming next to #5']\", \"BOOLEAN['#6', 'is in one image']\"]"}
{"id": "NLVR2_dev_dev-243-0-0", "input": "If there are no more than six birds.", "output": "[\"SELECT['birds']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is at most six']\"]"}
{"id": "NLVR2_dev_dev-243-1-1", "input": "If three ducks are floating in water and the other three are on land.", "output": "[\"SELECT['ducks']\", \"SELECT['water']\", \"SELECT['land']\", \"FILTER['#1', 'floating on #2']\", \"FILTER['#1', 'on #3']\", \"AGGREGATE['count', '#4']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to three']\", \"BOOLEAN['#7', 'is equal to three']\", \"BOOLEAN['logical_and', 'true', '#8', '#9']\"]"}
{"id": "NLVR2_dev_dev-244-0-0", "input": "If the left image contains one old fashioned glass soda bottle filled with a dark liquid.", "output": "[\"SELECT['the left image']\", \"PROJECT['soda bottles in #REF', '#1']\", \"FILTER['#2', 'that are old fashioned']\", \"FILTER['#3', 'that are glass']\", \"SELECT['liquid']\", \"FILTER['#5', 'that is dark']\", \"FILTER['#4', 'filled with #6']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-244-1-1", "input": "If one bottle is full.", "output": "[\"SELECT['bottle']\", \"FILTER['#1', 'that is full']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-245-3-1", "input": "If there is one yellow lab puppy and one or more darker colored labrador retriever puppies", "output": "[\"SELECT['lab puppy']\", \"FILTER['#1', 'that is yellow']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to one']\", \"SELECT['labrador retriever puppies']\", \"FILTER['#5', 'that are darker colored']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#4', '#8']\"]"}
{"id": "NLVR2_dev_dev-246-2-0", "input": "If there is an empty beaker.", "output": "[\"SELECT['beakers']\", \"FILTER['#1', 'that is empty']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-247-1-0", "input": "If each image contains one dark solid-colored schnauzer, and the lefthand dog wears a collar while the righthand dog is posed near a colorful dog toy.", "output": "[\"SELECT['images']\", \"PROJECT['schnauzers in #REF', '#1']\", \"FILTER['#2', 'that are dark solid-colored']\", \"GROUP['count', '#3', '#1']\", \"COMPARATIVE['#1', '#4', 'is equal to one']\", \"AGGREGATE['count', '#5']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#6', 'is equal to #7']\", \"SELECT['the lefthand image']\", \"PROJECT['dog in #REF', '#9']\", \"SELECT['collar']\", \"BOOLEAN['#10', 'wears #11']\", \"SELECT['the righthand image']\", \"PROJECT['dog in #REF', '#13']\", \"PROJECT['dog toy in #REF', '#13']\", \"FILTER['#15', 'that is colorful']\", \"BOOLEAN['#14', 'is posed near #16']\", \"BOOLEAN['logical_and', 'true', '#12', '#17']\", \"BOOLEAN['logical_and', 'true', '#8', '#18']\"]"}
{"id": "NLVR2_dev_dev-247-3-1", "input": "If one of the images shows a dog next to its toy.", "output": "[\"SELECT['dog']\", \"SELECT['toy']\", \"FILTER['#1', 'that is next to #2']\", \"BOOLEAN['#3', 'is in one of the images']\"]"}
{"id": "NLVR2_dev_dev-249-2-0", "input": "If the left and right image contains the same number of white framed door window panes on at least one door way.", "output": "[\"SELECT['the left image']\", \"PROJECT['door window panes in #REF', '#1']\", \"FILTER['#2', 'that are white']\", \"FILTER['#3', 'that are framed']\", \"PROJECT['door ways in #REF', '#1']\", \"FILTER['#4', 'on #5']\", \"AGGREGATE['count', '#6']\", \"SELECT['the right image']\", \"PROJECT['door window panes in #REF', '#8']\", \"FILTER['#9', 'that are white']\", \"FILTER['#10', 'that are framed']\", \"PROJECT['door ways in #REF', '#8']\", \"FILTER['#11', 'on #12']\", \"AGGREGATE['count', '#13']\", \"BOOLEAN['#7', 'is equal to #14']\"]"}
{"id": "NLVR2_dev_dev-25-0-0", "input": "If the left image contains a white chihuahua.", "output": "[\"SELECT['chihuahua']\", \"FILTER['#1', 'that is white']\", \"BOOLEAN['#2', 'is in the left image']\"]"}
{"id": "NLVR2_dev_dev-250-0-1", "input": "If one image shows a juvenile chimp in front of a larger adult chimp, and the other image contains one frontward-turned chimp and no humans.", "output": "[\"SELECT['one image']\", \"PROJECT['chimp in #REF', '#1']\", \"FILTER['#2', 'that is a juvenile']\", \"FILTER['#2', 'that is a adult']\", \"BOOLEAN['#3', 'is in front of #4']\", \"SELECT['the other image']\", \"PROJECT['chimps in #REF', '#6']\", \"FILTER['#7', 'that are frontward-turned']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is equal to one']\", \"PROJECT['humans in #REF', '#6']\", \"AGGREGATE['count', '#11']\", \"BOOLEAN['#12', 'is equal to zero']\", \"BOOLEAN['logical_and', 'true', '#10', '#13']\", \"BOOLEAN['logical_and', 'true', '#5', '#14']\"]"}
{"id": "NLVR2_dev_dev-250-3-0", "input": "If there are more mammals in the image on the right.", "output": "[\"SELECT['right image']\", \"SELECT['mammals']\", \"FILTER['#2', 'in #1']\", \"DISCARD['#2', '#3']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is higher than #6']\"]"}
{"id": "NLVR2_dev_dev-25-1-1", "input": "If an image features exactly one chihuahua puppy posed on a patterned fabric with no other animal figures present.", "output": "[\"SELECT['chihuahua puppies']\", \"SELECT['fabric']\", \"FILTER['#2', 'that is patterned']\", \"FILTER['#1', 'that is posed on #3']\", \"SELECT['images']\", \"GROUP['count', '#4', '#5']\", \"COMPARATIVE['#5', '#6', 'is equal to one']\", \"PROJECT['animal figures in #REF', '#7']\", \"DISCARD['#8', '#1']\", \"GROUP['count', '#9', '#7']\", \"COMPARATIVE['#7', '#10', 'is equal to zero']\", \"AGGREGATE['count', '#11']\", \"BOOLEAN['#12', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-251-2-0", "input": "If the left image features a white truck pushing a red plow forward, and the right image features a red truck pushing a red plow forward.", "output": "[\"SELECT['truck']\", \"FILTER['#1', 'that is white']\", \"FILTER['#1', 'that is red']\", \"SELECT['plow']\", \"FILTER['#4', 'that is red']\", \"FILTER['#2', 'pushing #5 forward']\", \"FILTER['#3', 'pushing #5 forward']\", \"BOOLEAN['#6', 'is in the left image']\", \"BOOLEAN['#7', 'is in the right image']\", \"BOOLEAN['logical_and', 'true', '#8', '#9']\"]"}
{"id": "NLVR2_dev_dev-252-1-0", "input": "If curtains are open in image and closed in the other image.", "output": "[\"SELECT['one image']\", \"PROJECT['curtains in #REF', '#1']\", \"BOOLEAN['#2', 'are open']\", \"SELECT['the other image']\", \"PROJECT['curtains in #REF', '#4']\", \"BOOLEAN['#5', 'are closed']\", \"BOOLEAN['logical_and', 'true', '#3', '#6']\"]"}
{"id": "NLVR2_dev_dev-253-1-0", "input": "If one of the pictures has only two chairs.", "output": "[\"SELECT['chairs']\", \"SELECT['pictures']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is equal to two']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-253-2-1", "input": "If there is one dining table that has exactly two chairs.", "output": "[\"SELECT['dining table']\", \"PROJECT['chairs that #REF has', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is equal to two']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-254-2-0", "input": "If the left and right image contains the same number of dogs in the grass.", "output": "[\"SELECT['the left image']\", \"SELECT['the right image']\", \"PROJECT['dogs in #REF', '#1']\", \"PROJECT['dogs in #REF', '#2']\", \"PROJECT['the grass in #REF', '#1']\", \"PROJECT['the grass in #REF', '#2']\", \"FILTER['#3', 'in #5']\", \"FILTER['#4', 'in #6']\", \"AGGREGATE['count', '#7']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is equal to #10']\"]"}
{"id": "NLVR2_dev_dev-255-1-0", "input": "If each image contains the same number of dogs, and at least one dog is standing facing leftward.", "output": "[\"SELECT['dogs']\", \"SELECT['images']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is the same']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to #6']\", \"FILTER['#1', 'that is standing']\", \"FILTER['#8', 'that is facing leftward']\", \"AGGREGATE['count', '#9']\", \"BOOLEAN['#10', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#7', '#11']\"]"}
{"id": "NLVR2_dev_dev-256-1-0", "input": "If one of the wooden sliding doors is open in the center.", "output": "[\"SELECT['doors']\", \"FILTER['#1', 'that are sliding']\", \"FILTER['#2', 'that are wooden']\", \"PROJECT['center of #REF', '#3']\", \"COMPARATIVE['#3', '#4', 'is open']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-256-3-1", "input": "If there are three wooden hanging doors.", "output": "[\"SELECT['hanging doors']\", \"FILTER['#1', 'that are wooden']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to three']\"]"}
{"id": "NLVR2_dev_dev-257-0-0", "input": "If one of the images shows a model's hand wearing a fingertip-less knit glove with a mitten attachment.", "output": "[\"SELECT['model']\", \"PROJECT['hand of #REF', '#1']\", \"SELECT['glove']\", \"FILTER['#3', 'that is knit']\", \"FILTER['#4', 'that is fingertip-less']\", \"SELECT['mitten attachment']\", \"FILTER['#5', 'with #6']\", \"FILTER['#2', 'wearing #7']\", \"BOOLEAN['#8', 'is in one of the images']\"]"}
{"id": "NLVR2_dev_dev-257-0-1", "input": "If in one image features a hand with a striped glove on with the fingers uncovered", "output": "[\"SELECT['hand']\", \"SELECT['glove']\", \"FILTER['#2', 'that is striped']\", \"FILTER['#1', 'that has #3 on']\", \"PROJECT['fingers of #REF', '#1']\", \"COMPARATIVE['#4', '#5', 'is uncovered']\", \"BOOLEAN['#6', 'is in one image']\"]"}
{"id": "NLVR2_dev_dev-258-0-0", "input": "If there is one full grown dog and at least one puppy.", "output": "[\"SELECT['dog']\", \"FILTER['#1', 'that is full grown']\", \"SELECT['puppy']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to one']\", \"BOOLEAN['#5', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#6', '#7']\"]"}
{"id": "NLVR2_dev_dev-258-0-1", "input": "If at least one dog has his tongue out.", "output": "[\"SELECT['dogs']\", \"PROJECT['tongue of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is out']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-259-0-0", "input": "If a thin crust pizza has one slice pulled out slightly way from the rest.", "output": "[\"SELECT['pizza']\", \"PROJECT['crust of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is thin']\", \"PROJECT['slices of #REF', '#3']\", \"FILTER['#4', 'that are pulled out slightly way from the rest']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-259-3-1", "input": "If a slice of pizza is slightly separated from its whole.", "output": "[\"SELECT['pizza']\", \"PROJECT['slice of #REF', '#1']\", \"PROJECT['whole of #REF', '#1']\", \"BOOLEAN['#2', 'is slightly separated from #3']\"]"}
{"id": "NLVR2_dev_dev-260-2-0", "input": "If the left and right image contains a total of two women in towels with at least one in pink.", "output": "[\"SELECT['the left image']\", \"SELECT['the right image']\", \"PROJECT['women in #REF', '#1']\", \"PROJECT['women in #REF', '#2']\", \"SELECT['towels']\", \"FILTER['#3', 'in #5']\", \"FILTER['#4', 'in #5']\", \"FILTER['#6', 'in pink']\", \"FILTER['#7', 'in pink']\", \"AGGREGATE['count', '#6']\", \"AGGREGATE['count', '#7']\", \"AGGREGATE['count', '#8']\", \"AGGREGATE['count', '#9']\", \"ARITHMETIC['sum', '#10', '#11']\", \"ARITHMETIC['sum', '#12', '#13']\", \"BOOLEAN['#14', 'is equal to two']\", \"BOOLEAN['#15', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#16', '#17']\"]"}
{"id": "NLVR2_dev_dev-261-3-0", "input": "If the left image contains a curved-screen tv with a blue landscape-type picture displayed on it, and the right image contains one flat-screen tv viewed head-on.", "output": "[\"SELECT['tv']\", \"FILTER['#1', 'that is curved-screen']\", \"SELECT['landscape-type picture']\", \"FILTER['#3', 'that is blue']\", \"FILTER['#2', 'with #4 displayed on it']\", \"BOOLEAN['#5', 'is in the left image']\", \"SELECT['the right image']\", \"PROJECT['tvs in #REF', '#7']\", \"FILTER['#8', 'that are flat-screen']\", \"FILTER['#9', 'that are viewed head-on']\", \"AGGREGATE['count', '#10']\", \"BOOLEAN['#11', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#6', '#12']\"]"}
{"id": "NLVR2_dev_dev-261-3-1", "input": "If the screen on the left tv is curved.", "output": "[\"SELECT['tv']\", \"FILTER['#1', 'that is on the left']\", \"PROJECT['screen of #REF', '#2']\", \"BOOLEAN['#3', 'is curved']\"]"}
{"id": "NLVR2_dev_dev-262-0-0", "input": "If a group of different colored guinea pigs are sitting on the steps.", "output": "[\"SELECT['guinea pigs']\", \"FILTER['#1', 'that are different colored']\", \"FILTER['#2', 'that are in a group']\", \"SELECT['steps']\", \"BOOLEAN['#3', 'are sitting on #4']\"]"}
{"id": "NLVR2_dev_dev-262-0-1", "input": "If there are 2 or more all white, long-haired guinea pigs.", "output": "[\"SELECT['guinea pigs']\", \"FILTER['#1', 'that are long-haired']\", \"FILTER['#2', 'that are all white']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least two']\"]"}
{"id": "NLVR2_dev_dev-26-2-1", "input": "If there is a single ibex in the right image.", "output": "[\"SELECT['the right image']\", \"PROJECT['ibexes in #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-263-1-0", "input": "If each image includes a black pug pup, and one image shows a black pug with its head raised upward and to the right.", "output": "[\"SELECT['pug']\", \"FILTER['#1', 'that is black']\", \"FILTER['#2', 'that is a pup']\", \"PROJECT['images of #REF', '#3']\", \"SELECT['images']\", \"AGGREGATE['count', '#4']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to #7']\", \"PROJECT['head of #REF', '#2']\", \"COMPARATIVE['#2', '#9', 'is raised upward']\", \"COMPARATIVE['#2', '#9', 'is to the right']\", \"INTERSECTION['#2', '#10', '#11']\", \"BOOLEAN['#12', 'is in one image']\", \"BOOLEAN['logical_and', 'true', '#8', '#13']\"]"}
{"id": "NLVR2_dev_dev-263-2-1", "input": "If there's a black dog in every picture.", "output": "[\"SELECT['dog']\", \"FILTER['#1', 'that is black']\", \"PROJECT['pictures of #REF', '#2']\", \"SELECT['pictures']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to #6']\"]"}
{"id": "NLVR2_dev_dev-264-0-1", "input": "If the wolf in the image on the right is outside in the snow.", "output": "[\"SELECT['right image']\", \"PROJECT['wolf of #REF', '#1']\", \"SELECT['snow']\", \"BOOLEAN['#2', 'is outside in #3']\"]"}
{"id": "NLVR2_dev_dev-264-2-0", "input": "If each image contains only one wolf, and all images include snowy backdrops.", "output": "[\"SELECT['wolves']\", \"SELECT['images']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is equal to one']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to #6']\", \"SELECT['backdrops']\", \"FILTER['#8', 'that are snowy']\", \"FILTER['#2', 'that include #9']\", \"AGGREGATE['count', '#10']\", \"BOOLEAN['#5', 'is equal to #11']\", \"BOOLEAN['logical_and', 'true', '#7', '#12']\"]"}
{"id": "NLVR2_dev_dev-265-1-1", "input": "If an image shows side-by-side birds in identical but inverted poses, and the two birds do not touch.", "output": "[\"SELECT['images']\", \"PROJECT['birds in #REF', '#1']\", \"FILTER['#2', 'that are side-by-side']\", \"FILTER['#3', 'that do not touch']\", \"PROJECT['poses of #REF', '#4']\", \"COMPARATIVE['#4', '#5', 'are identical but inverted']\", \"GROUP['count', '#6', '#1']\", \"COMPARATIVE['#1', '#7', 'is equal to two']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-265-3-0", "input": "If there is an odd number of birds in the two images put together.", "output": "[\"SELECT['images']\", \"PROJECT['birds in #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"AGGREGATE['sum', '#3']\", \"BOOLEAN['#4', 'is an odd number']\"]"}
{"id": "NLVR2_dev_dev-266-2-1", "input": "If in one of the photos, there is a body of water.", "output": "[\"SELECT['body of water']\", \"BOOLEAN['#1', 'is in one photos']\"]"}
{"id": "NLVR2_dev_dev-266-3-0", "input": "If there is more than 1 green hut outside.", "output": "[\"SELECT['hut']\", \"FILTER['#1', 'that is green']\", \"FILTER['#2', 'that is outside']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is higher than one']\"]"}
{"id": "NLVR2_dev_dev-267-0-0", "input": "If there are two dogs here, and at least one of them is a pup.", "output": "[\"SELECT['dogs']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is equal to two']\", \"FILTER['#1', 'that are pups']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#3', '#6']\"]"}
{"id": "NLVR2_dev_dev-267-3-1", "input": "If one dog is wearing a leash.", "output": "[\"SELECT['dogs']\", \"SELECT['a leash']\", \"FILTER['#1', 'wearing #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-268-0-0", "input": "If picture has a red glove in it.", "output": "[\"SELECT['glove']\", \"FILTER['#1', 'that is red']\", \"BOOLEAN['#2', 'is in picture']\"]"}
{"id": "NLVR2_dev_dev-269-2-1", "input": "If the knees of the models on the right and left are facing each other, and each model wears just one kneepad.", "output": "[\"SELECT['models']\", \"FILTER['#1', 'on the right']\", \"FILTER['#1', 'on the left']\", \"PROJECT['knees of #REF', '#2']\", \"PROJECT['knees of #REF', '#3']\", \"BOOLEAN['#4', 'are facing #5']\", \"SELECT['kneepads']\", \"FILTER['#7', 'that #1 wear']\", \"GROUP['count', '#8', '#1']\", \"COMPARATIVE['#1', '#9', 'is equal to one']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#10']\", \"BOOLEAN['#12', 'is equal to #11']\", \"BOOLEAN['logical_and', 'true', '#6', '#13']\"]"}
{"id": "NLVR2_dev_dev-269-3-0", "input": "If one of the knee braces has a hole in the front so the knee cap is showing.", "output": "[\"SELECT['knee braces']\", \"PROJECT['front of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'has a hole']\", \"SELECT['knee cap']\", \"FILTER['#3', 'so #4 is showing']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-270-0-1", "input": "If one house has a covered porch.", "output": "[\"SELECT['one house']\", \"SELECT['porch']\", \"FILTER['#2', 'that is covered']\", \"BOOLEAN['#1', 'has #3']\"]"}
{"id": "NLVR2_dev_dev-270-3-0", "input": "If there are at least 5 potted plants near a house in the image pair.", "output": "[\"SELECT['potted plants']\", \"SELECT['house']\", \"FILTER['#1', 'that are near #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least 5']\"]"}
{"id": "NLVR2_dev_dev-271-1-1", "input": "If each image contains one schnauzer, and all schnauzers are on fabric surfaces.", "output": "[\"SELECT['schnauzers']\", \"SELECT['images']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is equal to one']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to #6']\", \"SELECT['surfaces']\", \"FILTER['#8', 'that are fabric']\", \"FILTER['#1', 'that are on #9']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#10']\", \"BOOLEAN['#11', 'is equal to #12']\", \"BOOLEAN['logical_and', 'true', '#7', '#13']\"]"}
{"id": "NLVR2_dev_dev-27-2-0", "input": "If one of the images shows two white balls outside of the packaging.", "output": "[\"SELECT['images']\", \"PROJECT['balls in #REF', '#1']\", \"FILTER['#2', 'that are white']\", \"PROJECT['packaging of #REF', '#3']\", \"FILTER['#3', 'outside of #4']\", \"GROUP['count', '#5', '#1']\", \"COMPARATIVE['#1', '#6', 'is equal to two']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-272-1-1", "input": "If there are at least 4 containers of makeup", "output": "[\"SELECT['containers']\", \"SELECT['makeup']\", \"FILTER['#1', 'with #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least 4']\"]"}
{"id": "NLVR2_dev_dev-272-2-0", "input": "If there are a minimum of 4 beauty products.", "output": "[\"SELECT['beauty products']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is at least 4']\"]"}
{"id": "NLVR2_dev_dev-273-3-0", "input": "If in the right image an anemone is on a grate", "output": "[\"SELECT['right image']\", \"PROJECT['anemone in #REF', '#1']\", \"PROJECT['grate in #REF', '#1']\", \"BOOLEAN['#2', 'is on #3']\"]"}
{"id": "NLVR2_dev_dev-274-2-1", "input": "If both dogs have their mouths open, and at least one dog is in a sitting position.", "output": "[\"SELECT['dogs']\", \"PROJECT['mouth of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is open']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to two']\", \"FILTER['#1', 'that are in a sitting position']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#5', '#8']\"]"}
{"id": "NLVR2_dev_dev-274-3-0", "input": "If one dog is sitting on its butt and another dog is standing.", "output": "[\"SELECT['dogs']\", \"PROJECT['butts of #REF', '#1']\", \"FILTER['#1', 'that is sitting on #2']\", \"FILTER['#1', 'that is standing']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to one']\", \"BOOLEAN['#6', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#7', '#8']\"]"}
{"id": "NLVR2_dev_dev-275-0-0", "input": "If the drum skin in one image is white while the other is black.", "output": "[\"SELECT['one image']\", \"PROJECT['drum skin in #REF', '#1']\", \"BOOLEAN['#2', 'is white']\", \"SELECT['other image']\", \"PROJECT['drum skin in #REF', '#4']\", \"BOOLEAN['#5', 'is black']\", \"BOOLEAN['logical_and', 'true', '#3', '#6']\"]"}
{"id": "NLVR2_dev_dev-276-3-0", "input": "If the tail on the fish in the image on the left is finned.", "output": "[\"SELECT['left image']\", \"PROJECT['fish of #REF', '#1']\", \"PROJECT['tail of #REF', '#2']\", \"BOOLEAN['#3', 'is finned']\"]"}
{"id": "NLVR2_dev_dev-276-3-1", "input": "If the stingray on the right is shown topside-up and with its head aimed sideways, and it has wings that are triangular instead of round.", "output": "[\"SELECT['stingray']\", \"FILTER['#1', 'on the right']\", \"BOOLEAN['#2', 'is shown topside-up']\", \"PROJECT['head of #REF', '#2']\", \"BOOLEAN['#4', 'is aimed sideways']\", \"PROJECT['wings of #REF', '#2']\", \"BOOLEAN['#6', 'are triangular']\", \"BOOLEAN['logical_and', 'true', '#3', '#5']\", \"BOOLEAN['logical_and', 'true', '#7', '#8']\"]"}
{"id": "NLVR2_dev_dev-277-3-0", "input": "If a sofa has a row of books under in on a tiled floor", "output": "[\"SELECT['sofa']\", \"SELECT['books']\", \"SELECT['floor']\", \"FILTER['#2', 'that are in a row']\", \"FILTER['#3', 'that is tiled']\", \"FILTER['#4', 'that are on #5']\", \"FILTER['#1', 'that has #6 under']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-278-2-1", "input": "If all of the balls have writing and graphics on them, but are all the same base color.", "output": "[\"SELECT['balls']\", \"FILTER['#1', 'that has writing on them']\", \"FILTER['#2', 'that has graphics on them']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to one']\", \"PROJECT['base color of #REF', '#1']\", \"COMPARATIVE['#1', '#6', 'is the same']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is equal to #9']\", \"BOOLEAN['logical_and', 'true', '#5', '#10']\"]"}
{"id": "NLVR2_dev_dev-278-3-0", "input": "If at least 1 of the golf balls is a neon green color.", "output": "[\"SELECT['golf balls']\", \"PROJECT['color of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is neon green']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-279-0-0", "input": "If atleast one image shows vending machines at an angle, tucked into a recessed area with walls on either side of them.", "output": "[\"SELECT['vending machines']\", \"FILTER['#1', 'at an angle']\", \"SELECT['area']\", \"FILTER['#3', 'that is recessed']\", \"FILTER['#2', 'tucked into #4']\", \"SELECT['walls']\", \"FILTER['#6', 'on either side of #5']\", \"FILTER['#5', 'with #7']\", \"BOOLEAN['#8', 'are in at least one image']\"]"}
{"id": "NLVR2_dev_dev-279-0-1", "input": "If a soda and water bottle vending machine are next to each other in at least one of the images.", "output": "[\"SELECT['soda vending machine']\", \"SELECT['water bottle vending machine']\", \"FILTER['#1', 'next to #2']\", \"BOOLEAN['#3', 'is in at least one of the images']\"]"}
{"id": "NLVR2_dev_dev-280-0-0", "input": "If all dogs are black and tan dobermans, but one dog has pointed upright ears while the other has floppy rounded ears.", "output": "[\"SELECT['dogs']\", \"FILTER['#1', 'that are black and tan']\", \"FILTER['#2', 'that are dobermans']\", \"PROJECT['ears of #REF', '#3']\", \"COMPARATIVE['#3', '#4', 'are pointed']\", \"COMPARATIVE['#3', '#4', 'are upright']\", \"COMPARATIVE['#3', '#4', 'are floppy']\", \"COMPARATIVE['#3', '#4', 'are rounded']\", \"INTERSECTION['#3', '#5', '#6']\", \"INTERSECTION['#3', '#7', '#8']\", \"AGGREGATE['count', '#9']\", \"AGGREGATE['count', '#10']\", \"BOOLEAN['#11', 'is equal to one']\", \"BOOLEAN['#12', 'is equal to one']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#15', 'is equal to #16']\", \"BOOLEAN['logical_and', 'true', '#13', '#14']\", \"BOOLEAN['logical_and', 'true', '#17', '#18']\"]"}
{"id": "NLVR2_dev_dev-280-0-1", "input": "If there is exactly one doberman with its ears cut.", "output": "[\"SELECT['doberman']\", \"PROJECT['ears of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'are cut']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-281-2-0", "input": "If there are at least 3 red brick chimneys.", "output": "[\"SELECT['chimneys']\", \"FILTER['#1', 'that are brick']\", \"FILTER['#2', 'that are red']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least 3']\"]"}
{"id": "NLVR2_dev_dev-281-2-1", "input": "If all the chimneys appear to be made of unpainted red brick.", "output": "[\"SELECT['chimneys']\", \"SELECT['bricks']\", \"FILTER['#2', 'that are red']\", \"FILTER['#3', 'that are unpainted']\", \"FILTER['#1', 'made of #4']\", \"AGGREGATE['count', '#5']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#6', 'is equal to #7']\"]"}
{"id": "NLVR2_dev_dev-28-2-1", "input": "If one image is from outside a town and the other image is from inside a town.", "output": "[\"SELECT['one image']\", \"PROJECT['town in #REF', '#1']\", \"PROJECT['the outside of #REF', '#2']\", \"BOOLEAN['#1', 'is from #3']\", \"SELECT['the other image']\", \"PROJECT['town in #REF', '#5']\", \"PROJECT['the inside of #REF', '#6']\", \"BOOLEAN['#5', 'is from #7']\", \"BOOLEAN['logical_and', 'true', '#4', '#8']\"]"}
{"id": "NLVR2_dev_dev-282-1-0", "input": "If the left image contains a soap dispenser with three different soap holders.", "output": "[\"SELECT['the left image']\", \"PROJECT['soap dispenser in #REF', '#1']\", \"PROJECT['different soap holders of #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to three']\"]"}
{"id": "NLVR2_dev_dev-283-1-1", "input": "If three wolves stand together howling in the image on the left.", "output": "[\"SELECT['left image']\", \"PROJECT['wolves in #REF', '#1']\", \"FILTER['#2', 'that stand together']\", \"FILTER['#3', 'that are howling']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to three']\"]"}
{"id": "NLVR2_dev_dev-283-2-0", "input": "If the left image shows a trio of wolves, with at least two of them howling with raised heads.", "output": "[\"SELECT['the left image']\", \"PROJECT['wolves in #REF', '#1']\", \"FILTER['#2', 'that are howling']\", \"PROJECT['head of #REF', '#3']\", \"COMPARATIVE['#3', '#4', 'is raised']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is higher than two']\", \"BOOLEAN['#7', 'is at least two']\", \"BOOLEAN['logical_and', 'true', '#8', '#9']\"]"}
{"id": "NLVR2_dev_dev-284-0-1", "input": "If more then two people are in the left side image", "output": "[\"SELECT['the left side image']\", \"PROJECT['people in #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is higher than two']\"]"}
{"id": "NLVR2_dev_dev-284-3-0", "input": "If there is at least one blonde girl.", "output": "[\"SELECT['girl']\", \"FILTER['#1', 'that is blonde']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-285-2-0", "input": "If all people in the image are looking at their phones.", "output": "[\"SELECT['the image']\", \"PROJECT['people in #REF', '#1']\", \"PROJECT['phones in #REF', '#1']\", \"FILTER['#2', 'looking at #3']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#6', 'is equal to #5']\"]"}
{"id": "NLVR2_dev_dev-286-1-0", "input": "If there are at least five animals in total.", "output": "[\"SELECT['animals']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is at least five']\"]"}
{"id": "NLVR2_dev_dev-286-1-1", "input": "If the right image shows just one wild pig lying on the ground with its head to the left.", "output": "[\"SELECT['right image']\", \"PROJECT['wild pig in #REF', '#1']\", \"PROJECT['ground in #REF', '#1']\", \"FILTER['#2', 'that is lying on #3']\", \"PROJECT['head of #REF', '#4']\", \"FILTER['#5', 'that is to the left']\", \"FILTER['#4', 'that has #6']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-287-2-1", "input": "If the left image features a left-facing wolf pup, and the right image includes one adult wolf facing right.", "output": "[\"SELECT['the left image']\", \"PROJECT['wolf in #REF', '#1']\", \"FILTER['#2', 'that is a pup']\", \"BOOLEAN['#3', 'is left-facing']\", \"SELECT['the right image']\", \"PROJECT['wolves in #REF', '#5']\", \"FILTER['#6', 'that are adults']\", \"FILTER['#7', 'that are facing right']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#4', '#10']\"]"}
{"id": "NLVR2_dev_dev-288-0-0", "input": "If the left and right image contains the same number of redbone coonhounds.", "output": "[\"SELECT['left image']\", \"SELECT['right image']\", \"PROJECT['redbone coonhounds in #REF', '#1']\", \"PROJECT['redbone coonhounds in #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to #6']\"]"}
{"id": "NLVR2_dev_dev-288-1-1", "input": "If the right image contains one dog sitting on grass.", "output": "[\"SELECT['right image']\", \"PROJECT['dog in #REF', '#1']\", \"PROJECT['grass in #REF', '#1']\", \"FILTER['#2', 'that is sitting on #3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-289-1-0", "input": "If the left image shows a staircase that ascends to the left and features a wooden handrail with black wrought iron bars accented by scroll shapes.", "output": "[\"SELECT['left image']\", \"PROJECT['staircase in #REF', '#1']\", \"FILTER['#2', 'that ascends to the left']\", \"SELECT['handrail']\", \"FILTER['#4', 'that is wooden']\", \"SELECT['bars']\", \"FILTER['#6', 'that are wrought iron']\", \"FILTER['#7', 'that are black']\", \"FILTER['#8', 'that are accented by scroll shapes']\", \"FILTER['#5', 'that is with #9']\", \"FILTER['#3', 'that features #10']\", \"AGGREGATE['count', '#11']\", \"BOOLEAN['#12', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-289-2-1", "input": "If both railings have a vertical post design.", "output": "[\"SELECT['railings']\", \"PROJECT['post design of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is vertical']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-29-0-0", "input": "If an image features a baby seal looking over its shoulder toward the front, with its tail-end to the camera.", "output": "[\"SELECT['seal']\", \"FILTER['#1', 'that is a baby']\", \"PROJECT['shoulder of #REF', '#2']\", \"FILTER['#2', 'looking over #3 toward the front']\", \"PROJECT['tail-end of #REF', '#4']\", \"COMPARATIVE['#4', '#5', 'is to the camera']\", \"BOOLEAN['#6', 'is in an image']\"]"}
{"id": "NLVR2_dev_dev-290-0-1", "input": "If the llamas in both images are eating.", "output": "[\"SELECT['llamas']\", \"FILTER['#1', 'that are eating']\", \"BOOLEAN['#2', 'are in both images']\"]"}
{"id": "NLVR2_dev_dev-290-3-0", "input": "If there are four llamas.", "output": "[\"SELECT['llamas']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is equal to four']\"]"}
{"id": "NLVR2_dev_dev-291-3-0", "input": "If the image on the right contains a train that is red and white on at least one cart.", "output": "[\"SELECT['the image on the right']\", \"PROJECT['train in #REF', '#1']\", \"PROJECT['carts of #REF', '#2']\", \"FILTER['#3', 'that are red and white']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-291-3-1", "input": "If each image shows a train headed leftward, and one train is green while the other features red on its front.", "output": "[\"SELECT['train']\", \"FILTER['#1', 'that is headed leftward']\", \"SELECT['images']\", \"GROUP['count', '#2', '#3']\", \"COMPARATIVE['#3', '#4', 'is at least one']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to #7']\", \"FILTER['#1', 'that is green']\", \"AGGREGATE['count', '#9']\", \"BOOLEAN['#10', 'is equal to one']\", \"PROJECT['front of #REF', '#1']\", \"FILTER['#12', 'that is red']\", \"FILTER['#1', 'that has']\", \"AGGREGATE['count', '#14']\", \"BOOLEAN['#15', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#11', '#16']\", \"BOOLEAN['logical_and', 'true', '#8', '#17']\"]"}
{"id": "NLVR2_dev_dev-29-2-1", "input": "If a seal is laying on the sandy beach with an open mouth", "output": "[\"SELECT['seal']\", \"SELECT['beach']\", \"FILTER['#2', 'that is sandy']\", \"FILTER['#1', 'laying on #3']\", \"PROJECT['mouth of #REF', '#4']\", \"BOOLEAN['#5', 'is open']\"]"}
{"id": "NLVR2_dev_dev-292-2-0", "input": "If one image shows a single standing cheetah eyeing the camera, and the other image shows multiple, interacting cheetahs.", "output": "[\"SELECT['one image']\", \"PROJECT['cheetah in #REF', '#1']\", \"FILTER['#2', 'that is standing']\", \"FILTER['#3', 'that is eyeing the camera']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to one']\", \"SELECT['other image']\", \"PROJECT['cheetahs in #REF', '#7']\", \"FILTER['#8', 'that are interacting']\", \"AGGREGATE['count', '#9']\", \"BOOLEAN['#10', 'is at least two']\", \"BOOLEAN['logical_and', 'true', '#6', '#11']\"]"}
{"id": "NLVR2_dev_dev-292-3-1", "input": "If there are exactly four cheetahs.", "output": "[\"SELECT['cheetahs']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is equal to four']\"]"}
{"id": "NLVR2_dev_dev-293-0-0", "input": "If there are exactly three pugs.", "output": "[\"SELECT['pugs']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is equal to three']\"]"}
{"id": "NLVR2_dev_dev-294-3-0", "input": "If does not contain a picture with an outside view of a book store.", "output": "[\"SELECT['book stores']\", \"PROJECT['outside view of #REF', '#1']\", \"SELECT['pictures']\", \"FILTER['#3', 'that are with #2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['difference', '#5', '#6']\", \"BOOLEAN['#7', 'is equal to zero']\"]"}
{"id": "NLVR2_dev_dev-294-3-1", "input": "If red-orange signs mark display tables piled with books and set on the wood floor near tall rows of bookshelves in one image.", "output": "[\"SELECT['signs']\", \"FILTER['#1', 'that are red-orange']\", \"SELECT['display tables']\", \"SELECT['books']\", \"FILTER['#3', 'piled with #4']\", \"FILTER['#2', 'that mark #5']\", \"SELECT['floor']\", \"FILTER['#7', 'that is wood']\", \"SELECT['rows of bookshelves']\", \"FILTER['#9', 'that are tall']\", \"FILTER['#8', 'near #10']\", \"FILTER['#2', 'set on #11']\", \"PROJECT['images of #REF', '#6']\", \"PROJECT['images of #REF', '#12']\", \"SELECT['images']\", \"INTERSECTION['#15', '#13', '#14']\", \"AGGREGATE['count', '#16']\", \"BOOLEAN['#17', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-296-1-0", "input": "If there is a green wall visible in the background.", "output": "[\"SELECT['wall']\", \"FILTER['#1', 'that is green']\", \"SELECT['background']\", \"BOOLEAN['#2', 'is visible in #3']\"]"}
{"id": "NLVR2_dev_dev-297-2-0", "input": "If the right image contains a person holding a chihuahua.", "output": "[\"SELECT['right image']\", \"PROJECT['person in #REF', '#1']\", \"PROJECT['chihuahua in #REF', '#1']\", \"FILTER['#2', 'that is holding #3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-297-2-1", "input": "If a woman is holding at least one small dog in each of the images.", "output": "[\"SELECT['woman']\", \"SELECT['dogs']\", \"FILTER['#2', 'that are small']\", \"FILTER['#1', 'that is holding #3']\", \"SELECT['images']\", \"GROUP['count', '#4', '#5']\", \"COMPARATIVE['#5', '#6', 'is at least one']\", \"AGGREGATE['count', '#5']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is equal to #9']\"]"}
{"id": "NLVR2_dev_dev-298-3-0", "input": "If there is an awning over the machines in one of the images.", "output": "[\"SELECT['awning']\", \"SELECT['machines']\", \"FILTER['#1', 'that is over #2']\", \"BOOLEAN['#3', 'is in one of the images']\"]"}
{"id": "NLVR2_dev_dev-298-3-1", "input": "If the right image shows an outdoor vending kiosk with glass-front displays flanking a central gray solid column.", "output": "[\"SELECT['vending kiosk']\", \"FILTER['#1', 'that is outdoor']\", \"PROJECT['displays of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'have a glass-front']\", \"SELECT['column']\", \"FILTER['#5', 'that is central']\", \"FILTER['#6', 'that is gray']\", \"FILTER['#7', 'that is solid']\", \"FILTER['#4', 'flanking #8']\", \"BOOLEAN['#9', 'is in the right image']\"]"}
{"id": "NLVR2_dev_dev-299-3-0", "input": "If at least one bottle is clear with a blue plastic top", "output": "[\"SELECT['bottles']\", \"FILTER['#1', 'that are clear']\", \"PROJECT['top of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is plastic']\", \"COMPARATIVE['#4', '#3', 'is blue']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-299-3-1", "input": "If two of the bottles have carrying handles.", "output": "[\"SELECT['bottles']\", \"FILTER['#1', 'that has carrying handles']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-300-1-1", "input": "If there is an open three ring binder showing the silver rings inside.", "output": "[\"SELECT['three ring binder']\", \"FILTER['#1', 'that is open']\", \"PROJECT['rings of #REF', '#2']\", \"FILTER['#3', 'that are silver']\", \"BOOLEAN['#4', 'are showing']\"]"}
{"id": "NLVR2_dev_dev-300-2-0", "input": "If there is more than one binder in each image.", "output": "[\"SELECT['binders']\", \"SELECT['images']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is higher than one']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to #6']\"]"}
{"id": "NLVR2_dev_dev-3-0-1", "input": "If in one image, hyenas fight with a big cat.", "output": "[\"SELECT['hyenas']\", \"SELECT['cat']\", \"FILTER['#2', 'that is big']\", \"FILTER['#1', 'that fight with #3']\", \"BOOLEAN['#4', 'is in one image']\"]"}
{"id": "NLVR2_dev_dev-301-3-0", "input": "If all of the railings are vertical.", "output": "[\"SELECT['railings']\", \"FILTER['#1', 'that are vertical']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to #4']\"]"}
{"id": "NLVR2_dev_dev-301-3-1", "input": "If one image shows a staircase with knotty wood rails that are not completely smooth, next to a knotty wood paneled wall.", "output": "[\"SELECT['staircase']\", \"SELECT['rails']\", \"FILTER['#2', 'of knotty wood']\", \"FILTER['#1', 'with #3']\", \"FILTER['#4', 'that are not completely smooth']\", \"SELECT['wall']\", \"SELECT['knotty wood']\", \"FILTER['#6', 'paneled in #7']\", \"BOOLEAN['#5', 'is next to #8']\"]"}
{"id": "NLVR2_dev_dev-30-2-0", "input": "If at least one dog with long fur has a collar.", "output": "[\"SELECT['dogs']\", \"PROJECT['fur of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is long']\", \"SELECT['collar']\", \"FILTER['#3', 'that have #4']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-302-1-1", "input": "If the only animals that can be seen in both images are zebras.", "output": "[\"SELECT['animals']\", \"SELECT['zebras']\", \"DISCARD['#1', '#2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to zero']\"]"}
{"id": "NLVR2_dev_dev-302-2-0", "input": "If only two zebras have their heads up.", "output": "[\"SELECT['zebras']\", \"PROJECT['heads of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'are up']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-30-3-1", "input": "If each image shows a single afghan hound, and one image shows a hound with its blond hair sticking somewhat upward on its head.", "output": "[\"SELECT['afghan hounds']\", \"SELECT['images']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is equal to one']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to #6']\", \"PROJECT['hair of #REF', '#1']\", \"COMPARATIVE['#1', '#8', 'is blond']\", \"PROJECT['head of #REF', '#9']\", \"COMPARATIVE['#9', '#8', 'is sticking somewhat on #10']\", \"BOOLEAN['#11', 'is in one image']\", \"BOOLEAN['logical_and', 'true', '#7', '#12']\"]"}
{"id": "NLVR2_dev_dev-303-1-1", "input": "If the left image contains exactly one dog standing on grass.", "output": "[\"SELECT['left image']\", \"PROJECT['dogs of #REF', '#1']\", \"PROJECT['grass of #REF', '#1']\", \"FILTER['#2', 'standing on #3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-303-2-0", "input": "If at least one dog is looking directly at the camera", "output": "[\"SELECT['dogs']\", \"SELECT['camera']\", \"FILTER['#1', 'that are looking directly at #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-304-2-0", "input": "If no furniture is visible in front of the book shelf in at least one of the pictures.", "output": "[\"SELECT['furniture']\", \"SELECT['book shelf']\", \"FILTER['#1', 'visible in front of #2']\", \"SELECT['pictures']\", \"GROUP['count', '#3', '#4']\", \"COMPARATIVE['#4', '#5', 'is equal to zero']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-304-2-1", "input": "If one image shows a ladder standing at one end of a white bookcase.", "output": "[\"SELECT['ladder']\", \"SELECT['bookcase']\", \"FILTER['#2', 'that is white']\", \"PROJECT['the end of #REF', '#3']\", \"FILTER['#1', 'standings at #4']\", \"PROJECT['images of #REF', '#5']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-305-1-0", "input": "If each image contains only one ferret, which stands on all fours with its body turned rightward, and the left image features a ferret turning its head to gaze leftward.", "output": "[\"SELECT['images']\", \"PROJECT['ferrets in #REF', '#1']\", \"FILTER['#2', 'that stand on all fours']\", \"PROJECT['body of #REF', '#3']\", \"COMPARATIVE['#3', '#4', 'is turned rightward']\", \"GROUP['count', '#5', '#1']\", \"COMPARATIVE['#1', '#6', 'is equal to one']\", \"AGGREGATE['count', '#7']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#8', 'is equal to #9']\", \"SELECT['ferret']\", \"PROJECT['head of #REF', '#11']\", \"FILTER['#11', 'turning #12 to gaze leftward']\", \"BOOLEAN['#13', 'is in the left image']\", \"BOOLEAN['logical_and', 'true', '#10', '#14']\"]"}
{"id": "NLVR2_dev_dev-305-2-1", "input": "If the left and right image contains the same number of prairie dog with their tale on the left side.", "output": "[\"SELECT['prairie dogs']\", \"PROJECT['tale of #REF', '#1']\", \"FILTER['#2', 'that is on the left side']\", \"FILTER['#1', 'that has #3']\", \"SELECT['left image']\", \"SELECT['right image']\", \"FILTER['#4', 'that are in #5']\", \"FILTER['#4', 'that are in #6']\", \"AGGREGATE['count', '#7']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is equal to #10']\"]"}
{"id": "NLVR2_dev_dev-306-1-0", "input": "If all graduation gowns include some reddish color, and at least one image includes at least three female grads in red caps and red gowns.", "output": "[\"SELECT['graduation gowns']\", \"PROJECT['colors that #REF include', '#1']\", \"COMPARATIVE['#1', '#2', 'is reddish']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to #5']\", \"SELECT['grads']\", \"FILTER['#7', 'that are female']\", \"PROJECT['caps of #REF', '#8']\", \"COMPARATIVE['#8', '#9', 'are red']\", \"PROJECT['gowns of #REF', '#10']\", \"COMPARATIVE['#10', '#11', 'are red']\", \"SELECT['images']\", \"GROUP['count', '#12', '#13']\", \"COMPARATIVE['#13', '#14', 'is at least three']\", \"AGGREGATE['count', '#15']\", \"BOOLEAN['#16', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#6', '#17']\"]"}
{"id": "NLVR2_dev_dev-306-3-1", "input": "If some of the people are wearing red graduation caps.", "output": "[\"SELECT['people']\", \"SELECT['graduation caps']\", \"FILTER['#2', 'that are red']\", \"FILTER['#1', 'wearing #3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least two']\"]"}
{"id": "NLVR2_dev_dev-307-2-0", "input": "If there is only one person visible in the library", "output": "[\"SELECT['person']\", \"SELECT['library']\", \"FILTER['#1', 'that is visible in #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-308-1-0", "input": "If each image contains exactly one animal, which has horns and stands with its head turned to face the camera.", "output": "[\"SELECT['images']\", \"PROJECT['animals in #REF', '#1']\", \"FILTER['#2', 'that have horns']\", \"FILTER['#3', 'that stand']\", \"PROJECT['head of #REF', '#4']\", \"COMPARATIVE['#4', '#5', 'is turned to face the camera']\", \"GROUP['count', '#2', '#1']\", \"GROUP['count', '#6', '#1']\", \"COMPARATIVE['#1', '#7', 'is equal to one']\", \"COMPARATIVE['#1', '#8', 'is equal to one']\", \"INTERSECTION['#1', '#9', '#10']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#11']\", \"BOOLEAN['#13', 'is equal to #12']\"]"}
{"id": "NLVR2_dev_dev-308-1-1", "input": "If there are exactly two animals.", "output": "[\"SELECT['animals']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-309-0-1", "input": "If each image includes at least one hyena and a spotted wild cat.", "output": "[\"SELECT['hyenas']\", \"SELECT['wild cats']\", \"FILTER['#2', 'that are spotted']\", \"SELECT['images']\", \"GROUP['count', '#1', '#4']\", \"COMPARATIVE['#4', '#5', 'is at least one']\", \"GROUP['count', '#3', '#6']\", \"COMPARATIVE['#6', '#7', 'is at least one']\", \"AGGREGATE['count', '#4']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is equal to #10']\"]"}
{"id": "NLVR2_dev_dev-309-2-0", "input": "If one of the images does not contain a large cat.", "output": "[\"SELECT['cats']\", \"FILTER['#1', 'that are large']\", \"SELECT['images']\", \"GROUP['count', '#2', '#3']\", \"COMPARATIVE['#3', '#4', 'is equal to zero']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-31-0-0", "input": "If one dog team is wearing booties and the other dog team is not.", "output": "[\"SELECT['dog teams']\", \"SELECT['booties']\", \"FILTER['#1', 'that is wearing #2']\", \"AGGREGATE['count', '#3']\", \"DISCARD['#1', '#3']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#4', 'is equal to one']\", \"BOOLEAN['#6', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#7', '#8']\"]"}
{"id": "NLVR2_dev_dev-310-0-0", "input": "If the left and right images contain the same number of lemons.", "output": "[\"SELECT['the left image']\", \"SELECT['the right image']\", \"PROJECT['lemons in #REF', '#1']\", \"PROJECT['lemons in #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to #6']\"]"}
{"id": "NLVR2_dev_dev-31-0-1", "input": "If one of the photos shows a person wearing orange and black.", "output": "[\"SELECT['person']\", \"FILTER['#1', 'wearing orange']\", \"FILTER['#1', 'wearing black']\", \"INTERSECTION['#1', '#2', '#3']\", \"BOOLEAN['#4', 'is in one of the photos']\"]"}
{"id": "NLVR2_dev_dev-310-3-1", "input": "If both images show exactly two lemons.", "output": "[\"SELECT['lemons']\", \"SELECT['images']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is equal to two']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-311-3-0", "input": "If a person in slacks is behind a dingo standing still on all fours in one image, and the other image features one dingo with an upraised muzzle.", "output": "[\"SELECT['one image']\", \"PROJECT['person in #REF', '#1']\", \"SELECT['slacks']\", \"FILTER['#2', 'in #3']\", \"PROJECT['dingo in #REF', '#1']\", \"FILTER['#5', 'standing still on all fours']\", \"BOOLEAN['#4', 'is behind #6']\", \"SELECT['the other image']\", \"PROJECT['dingoes in #REF', '#8']\", \"PROJECT['muzzle of #REF', '#9']\", \"COMPARATIVE['#9', '#10', 'is upraised']\", \"AGGREGATE['count', '#11']\", \"BOOLEAN['#12', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#7', '#13']\"]"}
{"id": "NLVR2_dev_dev-311-3-1", "input": "If a person is next to a dog.", "output": "[\"SELECT['person']\", \"SELECT['dog']\", \"BOOLEAN['#1', 'is next to #2']\"]"}
{"id": "NLVR2_dev_dev-312-0-1", "input": "If the skunk in the image on the right is eating.", "output": "[\"SELECT['right image']\", \"PROJECT['skunk of #REF', '#1']\", \"BOOLEAN['#2', 'is eating']\"]"}
{"id": "NLVR2_dev_dev-313-0-0", "input": "If the train in the left image is full size and facing left.", "output": "[\"SELECT['the left image']\", \"PROJECT['train in #REF', '#1']\", \"BOOLEAN['#2', 'is full size']\", \"BOOLEAN['#2', 'is facing left']\", \"BOOLEAN['logical_and', 'true', '#3', '#4']\"]"}
{"id": "NLVR2_dev_dev-314-0-1", "input": "If a marmot has food in its hands.", "output": "[\"SELECT['marmot']\", \"SELECT['food']\", \"PROJECT['hands of #REF', '#1']\", \"BOOLEAN['#2', 'is in #3']\"]"}
{"id": "NLVR2_dev_dev-315-3-0", "input": "If one image contains twice as many red-orange dogs as the other image.", "output": "[\"SELECT['one image']\", \"SELECT['the other image']\", \"PROJECT['dogs in #REF', '#1']\", \"PROJECT['dogs in #REF', '#2']\", \"FILTER['#3', 'that are red-orange']\", \"FILTER['#4', 'that are red-orange']\", \"AGGREGATE['count', '#5']\", \"AGGREGATE['count', '#6']\", \"ARITHMETIC['division', '#7', '#8']\", \"BOOLEAN['#9', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-316-0-1", "input": "If there are no more than three pillows.", "output": "[\"SELECT['pillows']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is at most three']\"]"}
{"id": "NLVR2_dev_dev-316-2-0", "input": "If there are exactly three pillows in on of the images.", "output": "[\"SELECT['pillows']\", \"SELECT['images']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is equal to three']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-317-2-0", "input": "If two tall narrow cabinets have at least three upper shelves and have flat tops, but only one has two doors in its lower section.", "output": "[\"SELECT['cabinets']\", \"FILTER['#1', 'that are tall']\", \"FILTER['#2', 'that are narrow']\", \"PROJECT['top of #REF', '#3']\", \"COMPARATIVE['#3', '#4', 'is flat']\", \"PROJECT['upper shelves of #REF', '#5']\", \"GROUP['count', '#6', '#5']\", \"COMPARATIVE['#5', '#7', 'is at least three']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is equal to two']\", \"PROJECT['lower section of #REF', '#8']\", \"PROJECT['doors of #REF', '#11']\", \"GROUP['count', '#12', '#8']\", \"COMPARATIVE['#8', '#13', 'is equal to two']\", \"AGGREGATE['count', '#14']\", \"BOOLEAN['#15', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#10', '#16']\"]"}
{"id": "NLVR2_dev_dev-318-1-1", "input": "If an orange and white puppy is beside an orange and white kitten.", "output": "[\"SELECT['puppy']\", \"FILTER['#1', 'that is orange and white']\", \"SELECT['kitten']\", \"FILTER['#3', 'that is orange and white']\", \"BOOLEAN['#2', 'is beside #4']\"]"}
{"id": "NLVR2_dev_dev-318-3-0", "input": "If one puppy has a light brown and white striped kitten sitting next to it.", "output": "[\"SELECT['puppies']\", \"SELECT['kitten']\", \"FILTER['#2', 'that is striped']\", \"FILTER['#3', 'that is light brown and white']\", \"FILTER['#1', 'that have #4 sitting next to it']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-319-2-1", "input": "If there are two dogs laying down.", "output": "[\"SELECT['dogs']\", \"FILTER['#1', 'that are laying down']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-32-0-1", "input": "If one rodent is in a vase that is on its side.", "output": "[\"SELECT['rodent']\", \"SELECT['vase']\", \"PROJECT['side of #REF', '#2']\", \"FILTER['#2', 'that is on #3']\", \"FILTER['#1', 'that is in #4']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-320-1-0", "input": "If in at least one of the photos the man is wearing a baseball cap.", "output": "[\"SELECT['man']\", \"SELECT['baseball cap']\", \"FILTER['#1', 'that is wearing #2']\", \"BOOLEAN['#3', 'is in at least one photos']\"]"}
{"id": "NLVR2_dev_dev-321-1-0", "input": "If two convertibles with white headrests and front license are facing front, at least one of them with paint striping on the hood.", "output": "[\"SELECT['convertibles']\", \"PROJECT['headrests of #REF', '#1']\", \"FILTER['#2', 'that are white']\", \"PROJECT['front license of #REF', '#1']\", \"FILTER['#1', 'with #2 and #4']\", \"FILTER['#5', 'facing front']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to two']\", \"PROJECT['hood of #REF', '#1']\", \"FILTER['#9', 'with paint striping']\", \"AGGREGATE['count', '#10']\", \"BOOLEAN['#11', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#8', '#12']\"]"}
{"id": "NLVR2_dev_dev-321-3-1", "input": "If all cars are topless blue mini convertibles angled front-first, and at least one car is in front of a body of water.", "output": "[\"SELECT['cars']\", \"FILTER['#1', 'that are topless']\", \"FILTER['#2', 'that are blue']\", \"FILTER['#3', 'that are mini convertibles']\", \"FILTER['#4', 'that are angled front-first']\", \"SELECT['body of water']\", \"FILTER['#5', 'in front of #6']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#5']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is equal to #9']\", \"BOOLEAN['#10', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#11', '#12']\"]"}
{"id": "NLVR2_dev_dev-322-2-0", "input": "If there are 4 puppies per image pair", "output": "[\"SELECT['puppies']\", \"PROJECT['image pair of #REF', '#1']\", \"GROUP['count', '#1', '#2']\", \"BOOLEAN['#3', 'is equal to 4']\"]"}
{"id": "NLVR2_dev_dev-322-2-1", "input": "If there are more than two dogs sitting next to each-other in one of the images.", "output": "[\"SELECT['dogs']\", \"FILTER['#1', 'that are next to each-other']\", \"SELECT['images']\", \"GROUP['count', '#2', '#3']\", \"COMPARATIVE['#3', '#4', 'is higher than two']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-32-3-0", "input": "If one hamster is next to a hamster of the same color that has its head poking out of an overturned brown vase.", "output": "[\"SELECT['hamster']\", \"PROJECT['head of #REF', '#1']\", \"SELECT['vase']\", \"FILTER['#3', 'that is brown']\", \"FILTER['#4', 'that is overturned']\", \"COMPARATIVE['#1', '#2', 'is poking out of #5']\", \"FILTER['#1', 'next to #6']\", \"PROJECT['color of #REF', '#6']\", \"PROJECT['color of #REF', '#7']\", \"BOOLEAN['#9', 'is the same as #8']\"]"}
{"id": "NLVR2_dev_dev-323-1-0", "input": "If each image contains one non-standing spaniel, and one image features a spaniel with fur in shades of brown with a white chest stripe, posed sitting upright.", "output": "[\"SELECT['images']\", \"PROJECT['spaniels in #REF', '#1']\", \"FILTER['#2', 'that are non-standing']\", \"GROUP['count', '#3', '#1']\", \"COMPARATIVE['#1', '#4', 'is equal to one']\", \"AGGREGATE['count', '#5']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#6', 'is equal to #7']\", \"SELECT['spaniel']\", \"PROJECT['fur of #REF', '#9']\", \"COMPARATIVE['#9', '#10', 'is in shades of brown']\", \"PROJECT['chest of #REF', '#11']\", \"SELECT['stripe']\", \"FILTER['#13', 'that is white']\", \"COMPARATIVE['#11', '#12', 'has #14']\", \"FILTER['#15', 'that is sitting upright']\", \"BOOLEAN['#16', 'is in one image']\", \"BOOLEAN['logical_and', 'true', '#8', '#17']\"]"}
{"id": "NLVR2_dev_dev-323-1-1", "input": "If the dog in the image on the right is sitting in the grass outside.", "output": "[\"SELECT['dog']\", \"FILTER['#1', 'that is on the right']\", \"SELECT['grass']\", \"FILTER['#3', 'that is outside']\", \"BOOLEAN['#2', 'is sitting on #4']\"]"}
{"id": "NLVR2_dev_dev-324-2-0", "input": "If the left and right image contains a total two women standing in a bikinis.", "output": "[\"SELECT['women']\", \"SELECT['bikinis']\", \"FILTER['#1', 'that are standing']\", \"FILTER['#3', 'that are in #2']\", \"SELECT['left image']\", \"SELECT['right image']\", \"FILTER['#4', 'that are in #5']\", \"FILTER['#4', 'that are in #6']\", \"AGGREGATE['count', '#7']\", \"AGGREGATE['count', '#8']\", \"ARITHMETIC['sum', '#9', '#10']\", \"BOOLEAN['#11', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-324-3-1", "input": "If two women are standing.", "output": "[\"SELECT['women']\", \"FILTER['#1', 'that are standing']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-325-2-0", "input": "If there are at least 30 sea lions laying on a dock that has no less then five exposed wooden dock poles.", "output": "[\"SELECT['dock']\", \"PROJECT['pole of #REF', '#1']\", \"FILTER['#2', 'that are wooden']\", \"FILTER['#3', 'that are exposed']\", \"GROUP['count', '#4', '#1']\", \"COMPARATIVE['#1', '#5', 'is at least five']\", \"SELECT['sea lions']\", \"FILTER['#7', 'laying on #6']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is at least 30']\"]"}
{"id": "NLVR2_dev_dev-325-3-1", "input": "If in the right image, at least one vertical pole is visible near seals lying en masse on a floating manmade platform.", "output": "[\"SELECT['right image']\", \"PROJECT['poles in #REF', '#1']\", \"FILTER['#2', 'that are vertical']\", \"PROJECT['seals in #REF', '#1']\", \"FILTER['#4', 'that are lying en masse']\", \"PROJECT['platform in #REF', '#1']\", \"FILTER['#6', 'that is manmade']\", \"FILTER['#7', 'that is floating']\", \"FILTER['#5', 'that are on #8']\", \"FILTER['#3', 'that is near #9']\", \"AGGREGATE['count', '#10']\", \"BOOLEAN['#11', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-326-1-0", "input": "If there are three dogs in the image on the left.", "output": "[\"SELECT['left image']\", \"PROJECT['dogs of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to three']\"]"}
{"id": "NLVR2_dev_dev-326-3-1", "input": "If the image on the left has more then two dogs", "output": "[\"SELECT['left image']\", \"PROJECT['dogs of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is higher than two']\"]"}
{"id": "NLVR2_dev_dev-327-0-0", "input": "If one image shows a smaller gorilla next to the chest of a larger gorilla.", "output": "[\"SELECT['gorilla']\", \"FILTER['#1', 'that is small']\", \"FILTER['#1', 'that is large']\", \"PROJECT['chest of #REF', '#3']\", \"FILTER['#2', 'next to #4']\", \"BOOLEAN['#5', 'is in one image']\"]"}
{"id": "NLVR2_dev_dev-327-2-1", "input": "If the left image contains an adult gorilla interacting with a young gorilla.", "output": "[\"SELECT['left image']\", \"PROJECT['gorillas in #REF', '#1']\", \"FILTER['#2', 'that is adult']\", \"FILTER['#2', 'that is young']\", \"FILTER['#3', 'that is interacting with #4']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-328-1-0", "input": "If all trains appear to be heading towards the left.", "output": "[\"SELECT['trains']\", \"FILTER['#1', 'that appear to be heading towards the left']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#4', 'is equal to #3']\"]"}
{"id": "NLVR2_dev_dev-328-1-1", "input": "If all the trains in the images are facing the same direction.", "output": "[\"SELECT['trains']\", \"PROJECT['direction of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'are the same']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to #5']\"]"}
{"id": "NLVR2_dev_dev-329-0-0", "input": "If there are exactly three pandas in total.", "output": "[\"SELECT['pandas']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is equal to three']\"]"}
{"id": "NLVR2_dev_dev-329-0-1", "input": "If there are 2 pandas in the left image and only 1 panda in the right image.", "output": "[\"SELECT['left image']\", \"PROJECT['pandas of #REF', '#1']\", \"SELECT['right image']\", \"PROJECT['pandas of #REF', '#3']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to two']\", \"BOOLEAN['#6', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#7', '#8']\"]"}
{"id": "NLVR2_dev_dev-3-3-0", "input": "If there is only one creature visible in the image on the left side, and it is facing the camera.", "output": "[\"SELECT['image on the left side']\", \"PROJECT['creatures in #REF', '#1']\", \"FILTER['#2', 'that are visible']\", \"FILTER['#3', 'that are facing the camera']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to one']\", \"BOOLEAN['#6', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#7', '#8']\"]"}
{"id": "NLVR2_dev_dev-33-0-1", "input": "If the right image contains a lineup of at least three women.", "output": "[\"SELECT['the right image']\", \"PROJECT['women in #REF', '#1']\", \"FILTER['#2', 'in a lineup']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least three']\"]"}
{"id": "NLVR2_dev_dev-330-2-1", "input": "If one pelican is feeding another pelican.", "output": "[\"SELECT['pelican']\", \"PROJECT['another #REF', '#1']\", \"FILTER['#1', 'that is feeding #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-33-1-0", "input": "If a woman is holding something in her hand.", "output": "[\"SELECT['woman']\", \"PROJECT['hand of #REF', '#1']\", \"FILTER['#1', 'that is holding something in #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'at least one']\"]"}
{"id": "NLVR2_dev_dev-331-2-0", "input": "If the left image contains a baby ferret chewing on a humans finger.", "output": "[\"SELECT['left image']\", \"PROJECT['ferret in #REF', '#1']\", \"FILTER['#2', 'that is baby']\", \"PROJECT['human in #REF', '#1']\", \"PROJECT['finger of #REF', '#4']\", \"FILTER['#3', 'that is chewing on #5']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-332-1-0", "input": "If there are mashed potatoes in a white colored bowl.", "output": "[\"SELECT['potatoes']\", \"FILTER['#1', 'that are mashed']\", \"SELECT['bowl']\", \"FILTER['#3', 'that is white']\", \"BOOLEAN['#2', 'is in #4']\"]"}
{"id": "NLVR2_dev_dev-332-2-1", "input": "If the right image has a fatty food visible on top of the mashed potatoes.", "output": "[\"SELECT['the right image']\", \"PROJECT['the mashed potatoes in #REF', '#1']\", \"PROJECT['food in #REF', '#1']\", \"FILTER['#3', 'that is on top of #2']\", \"BOOLEAN['#4', 'is fatty']\"]"}
{"id": "NLVR2_dev_dev-333-0-0", "input": "If there is a total of four people in the shop.", "output": "[\"SELECT['people']\", \"SELECT['shop']\", \"FILTER['#1', 'that are in #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to four']\"]"}
{"id": "NLVR2_dev_dev-334-1-1", "input": "If the birds in the image on the left are near a body of water.", "output": "[\"SELECT['left image']\", \"PROJECT['birds of #REF', '#1']\", \"SELECT['body of water']\", \"BOOLEAN['#2', 'are near #3']\"]"}
{"id": "NLVR2_dev_dev-334-2-0", "input": "If a goose is eating food with its beak directly in the hand of a person.", "output": "[\"SELECT['goose']\", \"SELECT['food']\", \"FILTER['#1', 'eating #2']\", \"PROJECT['beak of #REF', '#3']\", \"SELECT['person']\", \"PROJECT['hand of #REF', '#5']\", \"BOOLEAN['#4', 'is directly in #6']\"]"}
{"id": "NLVR2_dev_dev-335-0-1", "input": "If in the left pic the appendage free body of the sea creature makes up the majority of its height", "output": "[\"SELECT['left pic']\", \"PROJECT['sea creature in #REF', '#1']\", \"PROJECT['appendage free body of #REF', '#2']\", \"PROJECT['height of #REF', '#2']\", \"BOOLEAN['#3', 'makes up the majority of #4']\"]"}
{"id": "NLVR2_dev_dev-335-3-0", "input": "If the image on the left has a stalk with white dots on it.", "output": "[\"SELECT['left image']\", \"PROJECT['stalk in #REF', '#1']\", \"PROJECT['dots of #REF', '#2']\", \"FILTER['#3', 'that are white']\", \"FILTER['#2', 'that has #4']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-336-1-0", "input": "If an image shows a man sitting in front of a computer screen.", "output": "[\"SELECT['man']\", \"SELECT['computer']\", \"PROJECT['screen of #REF', '#2']\", \"FILTER['#1', 'sitting in front of #3']\", \"BOOLEAN['#4', 'is in an image']\"]"}
{"id": "NLVR2_dev_dev-336-1-1", "input": "If a man is using a computer in one of the images.", "output": "[\"SELECT['man']\", \"SELECT['computer']\", \"FILTER['#1', 'using #2']\", \"BOOLEAN['#3', 'is in one of the images']\"]"}
{"id": "NLVR2_dev_dev-337-2-0", "input": "If the right image contains cookie dough balls on a rectangular metal baking pan.", "output": "[\"SELECT['right image']\", \"PROJECT['cookie dough balls in #REF', '#1']\", \"PROJECT['baking pan in #REF', '#1']\", \"FILTER['#3', 'that is metal']\", \"FILTER['#4', 'that is rectangular']\", \"FILTER['#2', 'that are on #5']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-337-2-1", "input": "If a silver spoon has cookie dough in it.", "output": "[\"SELECT['spoon']\", \"FILTER['#1', 'that is silver']\", \"SELECT['cookie dough']\", \"BOOLEAN['#3', 'is in #2']\"]"}
{"id": "NLVR2_dev_dev-338-0-0", "input": "If in at least one image there is a white square bookshelf with 12 cubes that have smaller shelves in the cubes.", "output": "[\"SELECT['bookshelf']\", \"FILTER['#1', 'that is white']\", \"FILTER['#2', 'that is square']\", \"PROJECT['cubes on #REF', '#3']\", \"FILTER['#4', 'that have smaller shelves']\", \"AGGREGATE['count', '#5']\", \"COMPARATIVE['#5', '#6', 'is equal to 12']\", \"PROJECT['images of #REF', '#7']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-339-2-1", "input": "If there is a total of three people lifting weights.", "output": "[\"SELECT['people']\", \"SELECT['weights']\", \"FILTER['#1', 'lifting #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to three']\"]"}
{"id": "NLVR2_dev_dev-340-0-0", "input": "If atleast one picture has no more than 3 people in focus", "output": "[\"SELECT['people']\", \"FILTER['#1', 'that are in focus']\", \"SELECT['pictures']\", \"GROUP['count', '#2', '#3']\", \"COMPARATIVE['#3', '#4', 'is at most 3']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-34-0-1", "input": "If the left image features a three-section white framed unit with mirrored doors.", "output": "[\"SELECT['unit']\", \"FILTER['#1', 'that is three-section']\", \"FILTER['#2', 'that is white']\", \"FILTER['#3', 'that is framed']\", \"PROJECT['doors of #REF', '#4']\", \"COMPARATIVE['#4', '#5', 'are mirrored']\", \"BOOLEAN['#6', 'is in the left image']\"]"}
{"id": "NLVR2_dev_dev-340-2-1", "input": "If at least 1 person is wearing a blue and yellow rob for graduation.", "output": "[\"SELECT['person']\", \"SELECT['rob']\", \"FILTER['#2', 'that is blue and yellow']\", \"FILTER['#3', 'that is for graduation']\", \"FILTER['#1', 'that is wearing #4']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is at least 1']\"]"}
{"id": "NLVR2_dev_dev-34-1-0", "input": "If the sliding door in the right image is open down the middle.", "output": "[\"SELECT['the right image']\", \"PROJECT['the sliding door in #REF', '#1']\", \"BOOLEAN['#2', 'is open down the middle']\"]"}
{"id": "NLVR2_dev_dev-341-0-0", "input": "If there are no more than three dogs.", "output": "[\"SELECT['dogs']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is at most three']\"]"}
{"id": "NLVR2_dev_dev-341-3-1", "input": "If the left image shows a yellow lab wearing a collar around its neck", "output": "[\"SELECT['lab']\", \"FILTER['#1', 'that is yellow']\", \"PROJECT['neck of #REF', '#2']\", \"SELECT['collar']\", \"FILTER['#2', 'wearing #4 around #3']\", \"BOOLEAN['#5', 'is in the left image']\"]"}
{"id": "NLVR2_dev_dev-342-2-1", "input": "If each image contains a single dog, and one features a tiny white dog with a broad open-mouthed grin.", "output": "[\"SELECT['dogs']\", \"SELECT['images']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is equal to one']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to #6']\", \"FILTER['#1', 'that is white']\", \"FILTER['#8', 'that is tiny']\", \"PROJECT['open-mouthed grin of #REF', '#9']\", \"COMPARATIVE['#9', '#10', 'is broad']\", \"BOOLEAN['#11', 'is in one image']\", \"BOOLEAN['logical_and', 'true', '#7', '#12']\"]"}
{"id": "NLVR2_dev_dev-343-3-0", "input": "If at least one dog is wearing something.", "output": "[\"SELECT['dogs']\", \"FILTER['#1', 'that are wearing something']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-343-3-1", "input": "If one image contains a close-mouthed afghan hound with its muzzle lowered, and the other image contains a white dog with pale orange markings wearing something with a tassle.", "output": "[\"SELECT['one image']\", \"PROJECT['afghan hound in #REF', '#1']\", \"FILTER['#2', 'that is close-mouthed']\", \"PROJECT['muzzle of #REF', '#3']\", \"BOOLEAN['#4', 'is lowered']\", \"SELECT['the other image']\", \"PROJECT['dog in #REF', '#6']\", \"FILTER['#7', 'that is white']\", \"PROJECT['markings of #REF', '#8']\", \"COMPARATIVE['#8', '#9', 'are pale orange']\", \"SELECT['tassle']\", \"PROJECT['something with #REF', '#11']\", \"BOOLEAN['#10', 'is wearing #12']\", \"BOOLEAN['logical_and', 'true', '#5', '#13']\"]"}
{"id": "NLVR2_dev_dev-344-2-0", "input": "If at least three animals are in a flowered field.", "output": "[\"SELECT['animals']\", \"SELECT['field']\", \"FILTER['#2', 'that is flowered']\", \"FILTER['#1', 'in #3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least three']\"]"}
{"id": "NLVR2_dev_dev-344-2-1", "input": "If each image includes purplish-pink flowers behind one camera-facing dog.", "output": "[\"SELECT['flowers']\", \"FILTER['#1', 'that are purplish-pink']\", \"SELECT['dog']\", \"FILTER['#3', 'that is camera-facing']\", \"FILTER['#4', 'that #2 are behind']\", \"SELECT['images']\", \"GROUP['count', '#5', '#6']\", \"COMPARATIVE['#6', '#7', 'is equal to one']\", \"AGGREGATE['count', '#6']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is equal to #10']\"]"}
{"id": "NLVR2_dev_dev-345-2-0", "input": "If a dog has retrieved a dead duck.", "output": "[\"SELECT['dog']\", \"SELECT['duck']\", \"FILTER['#2', 'that is dead']\", \"BOOLEAN['#1', 'has retrieved #3']\"]"}
{"id": "NLVR2_dev_dev-345-3-1", "input": "If in one of the images there is a dog holding a dead duck in its mouth.", "output": "[\"SELECT['dog']\", \"PROJECT['mouth of #REF', '#1']\", \"SELECT['duck']\", \"FILTER['#3', 'that is dead']\", \"COMPARATIVE['#1', '#2', 'is holding #4']\", \"BOOLEAN['#5', 'is in one of the images']\"]"}
{"id": "NLVR2_dev_dev-346-1-0", "input": "If an image contains a black and white dog climbing a ladder.", "output": "[\"SELECT['dog']\", \"FILTER['#1', 'that is black and white']\", \"SELECT['ladder']\", \"FILTER['#2', 'that is climbing #3']\", \"BOOLEAN['#4', 'is in an image']\"]"}
{"id": "NLVR2_dev_dev-347-0-1", "input": "If an image shows a bright yellow truck on dry pavement with its black plow angled leftward.", "output": "[\"SELECT['truck']\", \"FILTER['#1', 'that is bright yellow']\", \"SELECT['pavement']\", \"FILTER['#3', 'that is dry']\", \"FILTER['#2', 'on #4']\", \"PROJECT['plow of #REF', '#5']\", \"FILTER['#6', 'that is black']\", \"FILTER['#7', 'that is angled leftward']\", \"FILTER['#5', 'with #8']\", \"BOOLEAN['#9', 'is in an image']\"]"}
{"id": "NLVR2_dev_dev-347-1-0", "input": "If a yellow dump truck has a black snow plow attached to the front of it.", "output": "[\"SELECT['dump truck']\", \"FILTER['#1', 'that is yellow']\", \"PROJECT['the front of #REF', '#2']\", \"SELECT['snow plow']\", \"FILTER['#4', 'that is black']\", \"BOOLEAN['#5', 'is attached to #3']\"]"}
{"id": "NLVR2_dev_dev-348-0-0", "input": "If one woman is wearing a silk halter top with a white print.", "output": "[\"SELECT['woman']\", \"SELECT['halter top']\", \"FILTER['#2', 'that is silk']\", \"FILTER['#3', 'that is with white print']\", \"FILTER['#1', 'that is wearing #4']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-348-1-1", "input": "If one model wears a reddish lingerie outfit, and the other model wears a lingerie outfit in a shade of blue, and one of the outfits includes sleeves of some length.", "output": "[\"SELECT['one model']\", \"SELECT['the other model']\", \"SELECT['lingerie outfit']\", \"FILTER['#3', 'that is reddish']\", \"FILTER['#3', 'that is in a shade of blue']\", \"BOOLEAN['#1', 'wears #4']\", \"BOOLEAN['#2', 'wears #5']\", \"SELECT['sleeves']\", \"FILTER['#3', 'that include #8']\", \"AGGREGATE['count', '#9']\", \"BOOLEAN['#10', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#6', '#7']\", \"BOOLEAN['logical_and', 'true', '#11', '#12']\"]"}
{"id": "NLVR2_dev_dev-349-3-1", "input": "If the left and right image contains the same number of full lemons and a sliced lemons.", "output": "[\"SELECT['left image']\", \"PROJECT['lemons in #REF', '#1']\", \"FILTER['#2', 'that are full']\", \"FILTER['#2', 'that are sliced']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"SELECT['right image']\", \"PROJECT['lemons in #REF', '#7']\", \"FILTER['#8', 'that are full']\", \"FILTER['#8', 'that are sliced']\", \"AGGREGATE['count', '#9']\", \"AGGREGATE['count', '#10']\", \"BOOLEAN['#5', 'is equal to #11']\", \"BOOLEAN['#6', 'is equal to #12']\", \"BOOLEAN['logical_and', 'true', '#13', '#14']\"]"}
{"id": "NLVR2_dev_dev-35-0-1", "input": "If two pandas are playing near a tree in one of the images.", "output": "[\"SELECT['pandas']\", \"SELECT['a tree']\", \"FILTER['#1', 'playing near #2']\", \"PROJECT['images of #REF', '#3']\", \"GROUP['count', '#3', '#4']\", \"COMPARATIVE['#4', '#5', 'is equal to two']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-350-1-0", "input": "If the dog in the left image has one leg completely covered.", "output": "[\"SELECT['left image']\", \"PROJECT['dog in #REF', '#1']\", \"PROJECT['legs of #REF', '#2']\", \"FILTER['#3', 'that is completely covered']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-350-3-1", "input": "If in the image to the left, a greyhound is laying down, and has a cast on a leg.", "output": "[\"SELECT['greyhound']\", \"FILTER['#1', 'that is laying down']\", \"PROJECT['leg of #REF', '#2']\", \"SELECT['cast']\", \"COMPARATIVE['#2', '#3', 'has #4 on']\", \"BOOLEAN['#5', 'is in the image to the left']\"]"}
{"id": "NLVR2_dev_dev-35-1-0", "input": "If each image contains exactly two pandas and includes at least one panda that is not facing backwards.", "output": "[\"SELECT['images']\", \"PROJECT['pandas in #REF', '#1']\", \"FILTER['#2', 'that are facing backwards']\", \"DISCARD['#2', '#3']\", \"GROUP['count', '#2', '#1']\", \"GROUP['count', '#4', '#1']\", \"COMPARATIVE['#1', '#5', 'is equal to two']\", \"COMPARATIVE['#1', '#6', 'is at least one']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#7']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#10', 'is equal to #9']\", \"BOOLEAN['#11', 'is equal to #9']\", \"BOOLEAN['logical_and', 'true', '#12', '#13']\"]"}
{"id": "NLVR2_dev_dev-351-0-0", "input": "If at least one image shows a blue-headed bird perched above a tight cluster of hanging red bottle-brush flowers.", "output": "[\"SELECT['bird']\", \"FILTER['#1', 'that is blue-headed']\", \"SELECT['bottle-brush flowers']\", \"FILTER['#3', 'that are red']\", \"FILTER['#4', 'that are hanging in a tight cluster']\", \"FILTER['#2', 'perched above #5']\", \"BOOLEAN['#6', 'is in at least one image']\"]"}
{"id": "NLVR2_dev_dev-352-0-0", "input": "If all the birds in these images are adults", "output": "[\"SELECT['birds']\", \"FILTER['#1', 'that are adults']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to #4']\"]"}
{"id": "NLVR2_dev_dev-352-3-1", "input": "If there are 4 birds in the image pair", "output": "[\"SELECT['birds']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is equal to 4']\"]"}
{"id": "NLVR2_dev_dev-353-1-0", "input": "If the left and right image contains the same number of open sofa beds.", "output": "[\"SELECT['the left image']\", \"SELECT['the right image']\", \"PROJECT['sofa beds in #REF', '#1']\", \"PROJECT['sofa beds in #REF', '#2']\", \"FILTER['#3', 'that are open']\", \"FILTER['#4', 'that are open']\", \"AGGREGATE['count', '#5']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to #8']\"]"}
{"id": "NLVR2_dev_dev-354-0-0", "input": "If there are more than two dogs in total.", "output": "[\"SELECT['dogs']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is higher than two']\"]"}
{"id": "NLVR2_dev_dev-354-2-1", "input": "If there is just one living creature whose nose is visible in the image on the left side.", "output": "[\"SELECT['left image']\", \"PROJECT['living creature in #REF', '#1']\", \"PROJECT['nose of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is visible']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-355-1-1", "input": "If more than 5 monkeys total", "output": "[\"SELECT['monkeys']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is higher than 5']\"]"}
{"id": "NLVR2_dev_dev-355-2-0", "input": "If in one image containing exactly two baboons, the monkey on the right is grooming the one on the left.", "output": "[\"SELECT['baboons']\", \"SELECT['images']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is equal to two']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to one']\", \"SELECT['monkey']\", \"FILTER['#7', 'that is on the right']\", \"FILTER['#7', 'that is on the left']\", \"BOOLEAN['#8', 'is grooming #9']\", \"BOOLEAN['logical_and', 'true', '#6', '#10']\"]"}
{"id": "NLVR2_dev_dev-356-1-0", "input": "If in one image, a large animal is leaning forward on its knees, its nose to the ground, while a second image shows two similar animals, both of them with their noses to the ground.", "output": "[\"SELECT['one image']\", \"PROJECT['animal in #REF', '#1']\", \"FILTER['#2', 'that is large']\", \"PROJECT['knees of #REF', '#3']\", \"FILTER['#3', 'leaning forward on #4']\", \"PROJECT['nose of #REF', '#5']\", \"PROJECT['the ground in #REF', '#1']\", \"BOOLEAN['#6', 'is to #7']\", \"SELECT['second image']\", \"PROJECT['animals in #REF', '#9']\", \"FILTER['#10', 'that are similar']\", \"PROJECT['nose of #REF', '#11']\", \"PROJECT['the ground in #REF', '#9']\", \"COMPARATIVE['#11', '#12', 'is to #13']\", \"AGGREGATE['count', '#14']\", \"BOOLEAN['#15', 'is equal to two']\", \"BOOLEAN['logical_and', 'true', '#8', '#16']\"]"}
{"id": "NLVR2_dev_dev-356-3-1", "input": "If the left image contains exactly two warthogs.", "output": "[\"SELECT['left image']\", \"PROJECT['warthogs of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-357-1-0", "input": "If in the image to the right, the truck is equipped with a red plow.", "output": "[\"SELECT['right image']\", \"PROJECT['truck in #REF', '#1']\", \"PROJECT['plow that #REF is equipped with', '#2']\", \"FILTER['#3', 'that is red']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-357-2-1", "input": "If the left and right image contains the same number of trucks with snow plows on it.", "output": "[\"SELECT['trucks']\", \"SELECT['snow plows']\", \"FILTER['#1', 'that has #2 on']\", \"SELECT['left image']\", \"SELECT['right image']\", \"FILTER['#3', 'that are in #4']\", \"FILTER['#3', 'that are in #5']\", \"AGGREGATE['count', '#6']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is equal to #9']\"]"}
{"id": "NLVR2_dev_dev-358-0-0", "input": "If one of the pictured water bottles has a lid that tilts to the left and features its drinking 'spout' in the center of the lid.", "output": "[\"SELECT['water bottles']\", \"PROJECT['lid of #REF', '#1']\", \"PROJECT['drinking spout of #REF', '#1']\", \"PROJECT['center of #REF', '#2']\", \"FILTER['#1', 'where #2 tilts to the left']\", \"COMPARATIVE['#1', '#3', 'is in #4']\", \"INTERSECTION['#1', '#5', '#6']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-358-0-1", "input": "If one water bottle shows two animals interacting with each other printed on the side.", "output": "[\"SELECT['water bottle']\", \"PROJECT['side of #REF', '#1']\", \"PROJECT['animals that are printed on #REF', '#2']\", \"FILTER['#3', 'that are interacting with each other']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to two']\", \"FILTER['#1', 'that has #4']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#9', '#6']\"]"}
{"id": "NLVR2_dev_dev-359-0-1", "input": "If each image shows one close-mouthed dingo reclining on a dirt ground.", "output": "[\"SELECT['dingoes']\", \"FILTER['#1', 'that are close-mouthed']\", \"SELECT['ground']\", \"FILTER['#3', 'that has dirt']\", \"FILTER['#2', 'reclining on #4']\", \"PROJECT['images of #REF', '#5']\", \"GROUP['count', '#5', '#6']\", \"COMPARATIVE['#6', '#7', 'is equal to one']\", \"SELECT['images']\", \"AGGREGATE['count', '#8']\", \"AGGREGATE['count', '#9']\", \"BOOLEAN['#10', 'is equal to #11']\"]"}
{"id": "NLVR2_dev_dev-360-0-0", "input": "If one image contains a single schnauzer, and the other image contains multiple look-alike schnauzers.", "output": "[\"SELECT['one image']\", \"PROJECT['schnauzers in #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to one']\", \"SELECT['the other image']\", \"PROJECT['schnauzers in #REF', '#5']\", \"FILTER['#6', 'that look-alike']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is at least two']\", \"BOOLEAN['logical_and', 'true', '#4', '#9']\"]"}
{"id": "NLVR2_dev_dev-361-0-0", "input": "If each image shows exactly one hound on green grass, and one image shows a brown-eared hound while the other shows a black-eared hound.", "output": "[\"SELECT['images']\", \"PROJECT['hounds in #REF', '#1']\", \"PROJECT['grass in #REF', '#1']\", \"FILTER['#3', 'that is green']\", \"FILTER['#2', 'on #4']\", \"GROUP['count', '#5', '#1']\", \"COMPARATIVE['#1', '#6', 'is equal to one']\", \"AGGREGATE['count', '#7']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#8', 'is equal to #9']\", \"SELECT['one image']\", \"PROJECT['hound in #REF', '#11']\", \"BOOLEAN['#12', 'is brown-eared']\", \"SELECT['the other image']\", \"PROJECT['hound in #REF', '#14']\", \"BOOLEAN['#15', 'is black-eared']\", \"BOOLEAN['logical_and', 'true', '#13', '#16']\", \"BOOLEAN['logical_and', 'true', '#10', '#17']\"]"}
{"id": "NLVR2_dev_dev-36-1-1", "input": "If a person is holding a syringe.", "output": "[\"SELECT['person']\", \"SELECT['a syringe']\", \"BOOLEAN['#1', 'is holding #2']\"]"}
{"id": "NLVR2_dev_dev-361-2-1", "input": "If a single dog is standing up in the grass in the image on the left.", "output": "[\"SELECT['left image']\", \"PROJECT['dog in #REF', '#1']\", \"PROJECT['grass in #REF', '#1']\", \"FILTER['#2', 'that is standing up']\", \"FILTER['#4', 'that is in #3']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-362-0-1", "input": "If the right image contains no more than five ducks.", "output": "[\"SELECT['right image']\", \"PROJECT['ducks in #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at most five']\"]"}
{"id": "NLVR2_dev_dev-362-1-0", "input": "If there are more birds in the image on the right than in the image on the left.", "output": "[\"SELECT['right image']\", \"PROJECT['birds in #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"SELECT['left image']\", \"PROJECT['birds in #REF', '#4']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#3', 'is higher than #6']\"]"}
{"id": "NLVR2_dev_dev-36-3-0", "input": "If the combined images include a cat and at least one syringe displayed diagonally.", "output": "[\"SELECT['images']\", \"SELECT['cat']\", \"BOOLEAN['#2', 'is in #1']\", \"PROJECT['syringes in #REF', '#1']\", \"FILTER['#4', 'that are displayed diagonally']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#3', '#7']\"]"}
{"id": "NLVR2_dev_dev-363-1-0", "input": "If the left image shows exactly two vultures together.", "output": "[\"SELECT['the left image']\", \"PROJECT['vultures in #REF', '#1']\", \"FILTER['#2', 'that are together']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-363-2-1", "input": "If one image contains a single vulture in a standing pose with its head and body facing leftward, and the other image contains a group of at least eight vultures.", "output": "[\"SELECT['one image']\", \"PROJECT['vultures in #REF', '#1']\", \"FILTER['#2', 'that are standing']\", \"PROJECT['head of #REF', '#3']\", \"COMPARATIVE['#3', '#4', 'is facing leftward']\", \"PROJECT['body of #REF', '#5']\", \"COMPARATIVE['#5', '#6', 'is facing leftward']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is equal to one']\", \"SELECT['the other image']\", \"PROJECT['vultures in #REF', '#10']\", \"FILTER['#11', 'in a group']\", \"AGGREGATE['count', '#12']\", \"BOOLEAN['#13', 'is at least eight']\", \"BOOLEAN['logical_and', 'true', '#9', '#14']\"]"}
{"id": "NLVR2_dev_dev-364-1-1", "input": "If a wine glass is behind a wine bottle.", "output": "[\"SELECT['wine glass']\", \"SELECT['wine bottle']\", \"BOOLEAN['#1', 'is behind #2']\"]"}
{"id": "NLVR2_dev_dev-365-3-1", "input": "If in at least one image there is a woman eating off a rectangle plate.", "output": "[\"SELECT['woman']\", \"SELECT['plate']\", \"FILTER['#2', 'that is rectangle']\", \"FILTER['#1', 'eating off #3']\", \"PROJECT['images of #REF', '#4']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-366-3-1", "input": "If in one of the images, a bluejay is standing in some leaves while holding an acorn in its beak.", "output": "[\"SELECT['bluejay']\", \"SELECT['leaves']\", \"FILTER['#1', 'standing in #2']\", \"PROJECT['beak of #REF', '#3']\", \"SELECT['acorn']\", \"COMPARATIVE['#3', '#4', 'is holding #5']\", \"BOOLEAN['#6', 'is in one of the images']\"]"}
{"id": "NLVR2_dev_dev-367-2-1", "input": "If one dog is in a sitting pose looking upward, and the other dog is standing with its body turned leftward.", "output": "[\"SELECT['one dog']\", \"FILTER['#1', 'that is in sitting pose']\", \"BOOLEAN['#2', 'is looking upward']\", \"SELECT['other dog']\", \"FILTER['#4', 'that is standing']\", \"PROJECT['body of #REF', '#5']\", \"BOOLEAN['#5', 'has #6 turned leftward']\", \"BOOLEAN['logical_and', 'true', '#3', '#7']\"]"}
{"id": "NLVR2_dev_dev-367-3-0", "input": "If only one dog has a white chest.", "output": "[\"SELECT['dog']\", \"PROJECT['chest of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is white']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-368-1-0", "input": "If there are balloon table centerpieces.", "output": "[\"SELECT['balloon table centerpieces']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-368-3-1", "input": "If in at least one image there are 6 balloons in the foreground.", "output": "[\"SELECT['balloons']\", \"SELECT['foreground']\", \"FILTER['#1', 'that are in #2']\", \"SELECT['images']\", \"GROUP['count', '#3', '#4']\", \"COMPARATIVE['#4', '#5', 'is equal to 6']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-369-1-1", "input": "If there are people walking in both images.", "output": "[\"SELECT['people']\", \"FILTER['#1', 'that are walking']\", \"PROJECT['images of #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-369-3-0", "input": "If each image has at least one orange yellow truck removing snow.", "output": "[\"SELECT['trucks']\", \"FILTER['#1', 'that are orange yellow']\", \"SELECT['snow']\", \"FILTER['#2', 'removing #3']\", \"SELECT['images']\", \"GROUP['count', '#4', '#5']\", \"COMPARATIVE['#5', '#6', 'is at least one']\", \"AGGREGATE['count', '#5']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is equal to #9']\"]"}
{"id": "NLVR2_dev_dev-370-0-0", "input": "If there are at least six birds in the right image.", "output": "[\"SELECT['right image']\", \"PROJECT['birds in #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at least six']\"]"}
{"id": "NLVR2_dev_dev-370-0-1", "input": "If an image contains a single vulture with outspread wings against a blue sky.", "output": "[\"SELECT['vultures']\", \"PROJECT['wings of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'are outspread']\", \"SELECT['sky']\", \"FILTER['#4', 'that is blue']\", \"FILTER['#3', 'against #5']\", \"PROJECT['images of #REF', '#6']\", \"GROUP['count', '#6', '#7']\", \"COMPARATIVE['#7', '#8', 'is equal to one']\", \"AGGREGATE['count', '#9']\", \"BOOLEAN['#10', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-37-1-1", "input": "If the right picture has more then one non-human animal in it", "output": "[\"SELECT['right picture']\", \"PROJECT['animals in #REF', '#1']\", \"FILTER['#2', 'that are non-human']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is higher than one']\"]"}
{"id": "NLVR2_dev_dev-371-1-1", "input": "If all pencil cases are closed and black, and at least one pencil case has contrasting piping on the edges.", "output": "[\"SELECT['pencil cases']\", \"FILTER['#1', 'that are closed']\", \"FILTER['#2', 'that are black']\", \"PROJECT['edges of #REF', '#3']\", \"SELECT['piping']\", \"FILTER['#5', 'that is contrasting']\", \"COMPARATIVE['#3', '#4', 'have #6']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#8', 'is equal to #9']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#11', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#10', '#12']\"]"}
{"id": "NLVR2_dev_dev-371-3-0", "input": "If in at least one image there is a small bag with a handle and zipper with a red logo sewn in to the front of the bag.", "output": "[\"SELECT['bag']\", \"FILTER['#1', 'that is small']\", \"FILTER['#2', 'that is with a handle']\", \"FILTER['#3', 'that is with a zipper']\", \"PROJECT['front of #REF', '#4']\", \"PROJECT['logo that is sewn on #REF', '#5']\", \"COMPARATIVE['#4', '#6', 'is red']\", \"BOOLEAN['#7', 'is in at least one image']\"]"}
{"id": "NLVR2_dev_dev-372-2-1", "input": "If the animal in the image on the left is standing near the grass.", "output": "[\"SELECT['left image']\", \"PROJECT['animal in #REF', '#1']\", \"PROJECT['grass in #REF', '#1']\", \"FILTER['#2', 'that is standing']\", \"BOOLEAN['#4', 'is near #3']\"]"}
{"id": "NLVR2_dev_dev-372-3-0", "input": "If one image shows a dingo standing on reddish dirt, its body turned rightward and its face turned to the camera.", "output": "[\"SELECT['dingo']\", \"SELECT['dirt']\", \"FILTER['#2', 'that is reddish']\", \"FILTER['#1', 'standing on #3']\", \"PROJECT['body of #REF', '#4']\", \"COMPARATIVE['#4', '#5', 'is turned rightward']\", \"PROJECT['face of #REF', '#4']\", \"COMPARATIVE['#4', '#7', 'is turned to the camera']\", \"INTERSECTION['#4', '#6', '#8']\", \"BOOLEAN['#9', 'is in one image']\"]"}
{"id": "NLVR2_dev_dev-37-3-0", "input": "If at least one of the dogs is wearing a leash.", "output": "[\"SELECT['dogs']\", \"SELECT['leash']\", \"FILTER['#1', 'wearing #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-374-1-0", "input": "If in at least one image there is a single churce with a wall made out of stone surrounding it.", "output": "[\"SELECT['churces']\", \"SELECT['walls']\", \"FILTER['#2', 'that are made out of stone']\", \"FILTER['#1', 'that is with #3']\", \"SELECT['images']\", \"GROUP['count', '#4', '#5']\", \"COMPARATIVE['#5', '#6', 'is equal to one']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-375-0-0", "input": "If a small white puppy is laying down with its tongue out.", "output": "[\"SELECT['puppy']\", \"FILTER['#1', 'that is small']\", \"FILTER['#2', 'that is white']\", \"FILTER['#3', 'that is laying down']\", \"PROJECT['tongue of #REF', '#4']\", \"BOOLEAN['#5', 'is out']\"]"}
{"id": "NLVR2_dev_dev-375-1-1", "input": "If the right image contains one dog in a reclining pose, while the left image contains one forward-turned white puppy with its front paws straight and at least a body-width apart.", "output": "[\"SELECT['the right image']\", \"PROJECT['dogs in #REF', '#1']\", \"FILTER['#2', 'in reclining poses']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to one']\", \"SELECT['the left image']\", \"PROJECT['puppy in #REF', '#6']\", \"FILTER['#7', 'that are forward-turned']\", \"FILTER['#8', 'that are white']\", \"PROJECT['front paws of #REF', '#9']\", \"COMPARATIVE['#9', '#10', 'are straight']\", \"COMPARATIVE['#9', '#10', 'are at least a body-width apart']\", \"INTERSECTION['#9', '#11', '#12']\", \"AGGREGATE['count', '#13']\", \"BOOLEAN['#14', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#5', '#15']\"]"}
{"id": "NLVR2_dev_dev-376-0-1", "input": "If there are 2 round bracelets made with beads and safety pins.", "output": "[\"SELECT['bracelets']\", \"FILTER['#1', 'that are round']\", \"SELECT['beads']\", \"SELECT['safety pins']\", \"FILTER['#2', 'made with #3']\", \"FILTER['#2', 'made with #4']\", \"INTERSECTION['#2', '#5', '#6']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-376-2-0", "input": "If each image features one bracelet made of beads strung on safety pins, and all bracelets contain some green beads.", "output": "[\"SELECT['bracelets']\", \"SELECT['beads']\", \"SELECT['safety pins']\", \"FILTER['#2', 'that are strung on #3']\", \"FILTER['#1', 'that are made of #4']\", \"SELECT['images']\", \"GROUP['count', '#5', '#6']\", \"COMPARATIVE['#6', '#7', 'is equal to one']\", \"AGGREGATE['count', '#6']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is equal to #10']\", \"FILTER['#2', 'that are green']\", \"FILTER['#1', 'that contain']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#13']\", \"BOOLEAN['#14', 'is equal to #15']\", \"BOOLEAN['logical_and', 'true', '#11', '#16']\"]"}
{"id": "NLVR2_dev_dev-377-3-1", "input": "If each image shows a purple flower below a bunch of bananas, and in one image the petals of the flower are spreading.", "output": "[\"SELECT['flower']\", \"FILTER['#1', 'that is purple']\", \"SELECT['bunch of bananas']\", \"FILTER['#2', 'below #3']\", \"PROJECT['images of #REF', '#4']\", \"SELECT['images']\", \"AGGREGATE['count', '#5']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to #8']\", \"PROJECT['petals of #REF', '#4']\", \"COMPARATIVE['#4', '#10', 'are spreading']\", \"BOOLEAN['#11', 'is in one image']\", \"BOOLEAN['logical_and', 'true', '#9', '#12']\"]"}
{"id": "NLVR2_dev_dev-378-0-0", "input": "If a woman and bald man are wearing gloves together in at least one of the images.", "output": "[\"SELECT['woman']\", \"SELECT['man']\", \"FILTER['#2', 'that is bald']\", \"SELECT['gloves']\", \"FILTER['#1', 'wearing #4']\", \"FILTER['#3', 'wearing #4']\", \"UNION['#5', '#6']\", \"BOOLEAN['#7', 'is in at least one of the images']\"]"}
{"id": "NLVR2_dev_dev-379-0-0", "input": "If the right image includes a bird with spread wings, but the left image does not.", "output": "[\"SELECT['the right image']\", \"PROJECT['birds in #REF', '#1']\", \"PROJECT['wings of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'are spread']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to one']\", \"SELECT['the left image']\", \"PROJECT['birds in #REF', '#7']\", \"PROJECT['wings of #REF', '#8']\", \"COMPARATIVE['#8', '#9', 'are spread']\", \"AGGREGATE['count', '#10']\", \"BOOLEAN['#11', 'is equal to zero']\", \"BOOLEAN['logical_and', 'true', '#6', '#12']\"]"}
{"id": "NLVR2_dev_dev-379-1-1", "input": "If exactly one of the birds is flying in the air.", "output": "[\"SELECT['birds']\", \"SELECT['air']\", \"FILTER['#1', 'that is flying in #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-380-0-0", "input": "If at least one image shows upright bananas made to resemble dolphins, standing in grapes, and each image contains some green grapes.", "output": "[\"SELECT['bananas']\", \"SELECT['dolphins']\", \"SELECT['grapes']\", \"FILTER['#1', 'that are upright']\", \"FILTER['#4', 'made to resemble #2']\", \"FILTER['#5', 'standing in #3']\", \"PROJECT['images of #REF', '#6']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is at least one']\", \"FILTER['#3', 'that are green']\", \"SELECT['images']\", \"GROUP['count', '#10', '#11']\", \"COMPARATIVE['#11', '#12', 'is at least one']\", \"AGGREGATE['count', '#11']\", \"AGGREGATE['count', '#13']\", \"BOOLEAN['#14', 'is equal to #15']\", \"BOOLEAN['logical_and', 'true', '#9', '#16']\"]"}
{"id": "NLVR2_dev_dev-380-1-1", "input": "If several red grapes are near some bananas in one of the images.", "output": "[\"SELECT['grapes']\", \"FILTER['#1', 'that are red']\", \"SELECT['bananas']\", \"FILTER['#2', 'that are near #3']\", \"PROJECT['images of #REF', '#4']\", \"GROUP['count', '#4', '#5']\", \"COMPARATIVE['#5', '#6', 'is higher than two']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-38-1-1", "input": "If at least one dog has its head tilted back looking straight up.", "output": "[\"SELECT['dogs']\", \"PROJECT['head of #REF', '#1']\", \"FILTER['#2', 'that is tilted back']\", \"FILTER['#1', 'that has #3']\", \"FILTER['#4', 'that is looking straight up']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#5', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-381-2-0", "input": "If two barbers, one in each image, are standing and working on the hair of a sitting customer.", "output": "[\"SELECT['barbers']\", \"FILTER['#1', 'that are standing']\", \"SELECT['customer']\", \"FILTER['#3', 'that is sitting']\", \"PROJECT['hair of #REF', '#4']\", \"FILTER['#2', 'that are working on #5']\", \"PROJECT['images of #REF', '#6']\", \"GROUP['count', '#6', '#7']\", \"COMPARATIVE['#7', '#8', 'is equal to one']\", \"AGGREGATE['count', '#9']\", \"BOOLEAN['#10', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-381-3-1", "input": "If the right image shows a man standing on the left working on the hair of a young boy sitting in a barber chair.", "output": "[\"SELECT['man']\", \"FILTER['#1', 'standing on the left']\", \"SELECT['boy']\", \"FILTER['#3', 'that is young']\", \"SELECT['barber chair']\", \"FILTER['#4', 'sitting in #5']\", \"PROJECT['hair of #REF', '#6']\", \"FILTER['#2', 'working on #7']\", \"BOOLEAN['#8', 'is in the right image']\"]"}
{"id": "NLVR2_dev_dev-38-2-0", "input": "If the left and right image contains a total of two dogs with at least one in a collar.", "output": "[\"SELECT['the left image']\", \"SELECT['the right image']\", \"PROJECT['dogs in #REF', '#1']\", \"PROJECT['dogs in #REF', '#2']\", \"SELECT['collar']\", \"FILTER['#3', 'in #5']\", \"FILTER['#4', 'in #5']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"AGGREGATE['count', '#6']\", \"AGGREGATE['count', '#7']\", \"ARITHMETIC['sum', '#8', '#9']\", \"ARITHMETIC['sum', '#10', '#11']\", \"BOOLEAN['#12', 'is equal to two']\", \"BOOLEAN['#13', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#14', '#15']\"]"}
{"id": "NLVR2_dev_dev-382-2-0", "input": "If in at least one image there is a single employee work next to a three tier glass bakery case.", "output": "[\"SELECT['employees']\", \"SELECT['bakery case']\", \"FILTER['#2', 'that is glass']\", \"PROJECT['tier of #REF', '#3']\", \"GROUP['count', '#4', '#3']\", \"COMPARATIVE['#3', '#5', 'is equal to three']\", \"FILTER['#1', 'that work next to #6']\", \"PROJECT['images of #REF', '#7']\", \"GROUP['count', '#7', '#8']\", \"COMPARATIVE['#8', '#9', 'is equal to one']\", \"AGGREGATE['count', '#10']\", \"BOOLEAN['#11', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-382-3-1", "input": "If an image shows at least one person standing face-forward behind a brown wood counter with a glass display case to the left.", "output": "[\"SELECT['images']\", \"PROJECT['people in #REF', '#1']\", \"FILTER['#2', 'standing face-forward']\", \"PROJECT['counter in #REF', '#1']\", \"FILTER['#4', 'that is brown']\", \"FILTER['#5', 'that is wood']\", \"FILTER['#3', 'behind #6']\", \"PROJECT['display case in #REF', '#1']\", \"FILTER['#8', 'that is glass']\", \"FILTER['#9', 'to the left']\", \"FILTER['#7', 'with #10']\", \"GROUP['count', '#11', '#1']\", \"COMPARATIVE['#1', '#12', 'is at least one']\", \"AGGREGATE['count', '#13']\", \"BOOLEAN['#14', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-383-0-0", "input": "If there is at most 1 binder with a floral design.", "output": "[\"SELECT['binder']\", \"PROJECT['design of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is floral']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at most one']\"]"}
{"id": "NLVR2_dev_dev-383-3-1", "input": "If one of the binders is lying down and spread open.", "output": "[\"SELECT['binders']\", \"FILTER['#1', 'that is lying down']\", \"FILTER['#2', 'that is spread open']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-384-1-1", "input": "If there isn't anything hanging on the walls, no decor.", "output": "[\"SELECT['the walls']\", \"SELECT['decor']\", \"FILTER['#2', 'hanging on #1']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to zero']\"]"}
{"id": "NLVR2_dev_dev-385-1-0", "input": "If a single cow is walking in the street in the image on the right.", "output": "[\"SELECT['the image on the right']\", \"PROJECT['cows in #REF', '#1']\", \"PROJECT['the street in #REF', '#1']\", \"FILTER['#2', 'walking in #3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-385-2-1", "input": "If each image shows a path next to a row of roofed structures, and the right image shows an unhitched black ox in front of a market street.", "output": "[\"SELECT['structures']\", \"FILTER['#1', 'that are roofed']\", \"FILTER['#2', 'that are in a row']\", \"SELECT['path']\", \"FILTER['#4', 'that is next to #3']\", \"SELECT['images']\", \"GROUP['count', '#5', '#6']\", \"COMPARATIVE['#6', '#7', 'is at least one']\", \"AGGREGATE['count', '#6']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is equal to #10']\", \"SELECT['right image']\", \"PROJECT['ox in #REF', '#12']\", \"PROJECT['market street in #REF', '#12']\", \"FILTER['#13', 'that is black']\", \"FILTER['#15', 'that is unhitched']\", \"FILTER['#16', 'that is in front of #14']\", \"AGGREGATE['count', '#17']\", \"BOOLEAN['#18', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#11', '#19']\"]"}
{"id": "NLVR2_dev_dev-386-1-0", "input": "If in one image, a yurt sitting on post supports has an outdoor seating area on a deck with railing that encircles the yurt.", "output": "[\"SELECT['yurt']\", \"SELECT['post supports']\", \"FILTER['#1', 'sitting on #2']\", \"SELECT['seating area']\", \"FILTER['#4', 'that is outdoor']\", \"SELECT['deck']\", \"SELECT['railing']\", \"FILTER['#6', 'with #7']\", \"FILTER['#8', 'that encircles #3']\", \"FILTER['#5', 'on #9']\", \"FILTER['#3', 'that has #10']\", \"BOOLEAN['#11', 'is in one image']\"]"}
{"id": "NLVR2_dev_dev-386-1-1", "input": "If there is at least one human inside a yurt in one of the images.", "output": "[\"SELECT['human']\", \"SELECT['yurt']\", \"FILTER['#1', 'that is inside #2']\", \"SELECT['images']\", \"GROUP['count', '#3', '#4']\", \"COMPARATIVE['#4', '#5', 'is at least one']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-387-1-1", "input": "If a dog has a tennis ball.", "output": "[\"SELECT['dog']\", \"SELECT['tennis ball']\", \"BOOLEAN['#1', 'has #2']\"]"}
{"id": "NLVR2_dev_dev-387-3-0", "input": "If one of the images in the pair shows a dog with a tennis ball.", "output": "[\"SELECT['dog']\", \"SELECT['tennis ball']\", \"FILTER['#1', 'that is with #2']\", \"SELECT['images']\", \"GROUP['count', '#3', '#4']\", \"COMPARATIVE['#4', '#5', 'is at least one']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-388-3-0", "input": "If all of the bookshelves are in the middle of the room.", "output": "[\"SELECT['bookshelves']\", \"SELECT['room']\", \"FILTER['#1', 'that are in the middle of #2']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to #5']\"]"}
{"id": "NLVR2_dev_dev-389-2-0", "input": "If one image shows a real man modeling an angled front view of graduation attire, and the other image shows a back view of a black robe with a red sash.", "output": "[\"SELECT['one image']\", \"PROJECT['man in #REF', '#1']\", \"FILTER['#2', 'that is real']\", \"PROJECT['graduation attire in #REF', '#1']\", \"FILTER['#3', 'modeling #4']\", \"BOOLEAN['#5', 'is in an angled front view']\", \"SELECT['the other image']\", \"PROJECT['robe in #REF', '#7']\", \"FILTER['#8', 'that is black']\", \"PROJECT['sash in #REF', '#7']\", \"FILTER['#10', 'that is red']\", \"FILTER['#9', 'with #11']\", \"BOOLEAN['#12', 'is in a back view']\", \"BOOLEAN['logical_and', 'true', '#6', '#13']\"]"}
{"id": "NLVR2_dev_dev-389-3-1", "input": "If a person is modeling the graduation attire in the image on the left.", "output": "[\"SELECT['person']\", \"SELECT['graduation attire']\", \"FILTER['#1', 'modeling #2']\", \"BOOLEAN['#3', 'is in the left image']\"]"}
{"id": "NLVR2_dev_dev-39-0-0", "input": "If one of the perfume bottles has rounded shoulders.", "output": "[\"SELECT['perfume']\", \"PROJECT['bottles of #REF', '#1']\", \"PROJECT['shoulders of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is rounded']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-390-0-0", "input": "If a sofa sits against the wall of a yurt in the image on the right.", "output": "[\"SELECT['sofa']\", \"SELECT['yurt']\", \"PROJECT['wall of #REF', '#2']\", \"FILTER['#1', 'that sits against #3']\", \"BOOLEAN['#4', 'is in the right image']\"]"}
{"id": "NLVR2_dev_dev-390-1-1", "input": "If one image shows the interior of a non-square room with a ladder leading to a loft at its center.", "output": "[\"SELECT['room']\", \"FILTER['#1', 'that is non-square']\", \"PROJECT['center of #REF', '#2']\", \"SELECT['loft']\", \"FILTER['#4', 'at #3']\", \"SELECT['ladder']\", \"FILTER['#6', 'leading to #5']\", \"FILTER['#2', 'with #7']\", \"PROJECT['the interior of #REF', '#8']\", \"BOOLEAN['#9', 'is in one image']\"]"}
{"id": "NLVR2_dev_dev-391-0-0", "input": "If the left image shows a saxophone displayed diagonally with its bell end facing up and its black mouthpiece angled downward.", "output": "[\"SELECT['left image']\", \"PROJECT['saxophone in #REF', '#1']\", \"FILTER['#2', 'that is displayed diagonally']\", \"PROJECT['bell end of #REF', '#3']\", \"COMPARATIVE['#3', '#4', 'is facing up']\", \"PROJECT['mouthpiece of #REF', '#5']\", \"FILTER['#6', 'that is black']\", \"COMPARATIVE['#5', '#7', 'is angled downward']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-391-1-1", "input": "If the saxophone in the left image is brass, while the saxophone in the right image is silver.", "output": "[\"SELECT['left image']\", \"PROJECT['saxophone in #REF', '#1']\", \"BOOLEAN['#2', 'is brass']\", \"SELECT['right image']\", \"PROJECT['saxophone in #REF', '#4']\", \"BOOLEAN['#5', 'is silver']\", \"BOOLEAN['logical_and', 'true', '#3', '#6']\"]"}
{"id": "NLVR2_dev_dev-392-1-1", "input": "If the left and right image contains the same number of groundhogs.", "output": "[\"SELECT['left image']\", \"PROJECT['groundhogs of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"SELECT['right image']\", \"PROJECT['groundhogs of #REF', '#4']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#3', 'is equal to #6']\"]"}
{"id": "NLVR2_dev_dev-393-3-0", "input": "If a perfume bottle with a pink label is next to a vase of flowers.", "output": "[\"SELECT['perfume bottle']\", \"SELECT['vase']\", \"SELECT['flowers']\", \"FILTER['#2', 'with #3']\", \"FILTER['#1', 'next to #4']\", \"PROJECT['label of #REF', '#5']\", \"BOOLEAN['#6', 'is pink']\"]"}
{"id": "NLVR2_dev_dev-393-3-1", "input": "If the images feature a knobby white lid on the perfume bottle.", "output": "[\"SELECT['perfume bottle']\", \"PROJECT['lid of #REF', '#1']\", \"FILTER['#2', 'that is white']\", \"FILTER['#3', 'that is knobby']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-394-0-0", "input": "If each image contains one beetle and no ball, and at least one image shows a beetle with a black horn that curves toward its back.", "output": "[\"SELECT['images']\", \"PROJECT['beetles in #REF', '#1']\", \"PROJECT['balls in #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"GROUP['count', '#3', '#1']\", \"COMPARATIVE['#1', '#4', 'is equal to one']\", \"COMPARATIVE['#1', '#5', 'is equal to zero']\", \"INTERSECTION['#1', '#6', '#7']\", \"AGGREGATE['count', '#8']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#9', 'is equal to #10']\", \"SELECT['beetle']\", \"PROJECT['horn of #REF', '#12']\", \"PROJECT['back of #REF', '#12']\", \"COMPARATIVE['#12', '#13', 'is black']\", \"FILTER['#12', 'where #13 curves toward #14']\", \"INTERSECTION['#12', '#15', '#16']\", \"BOOLEAN['#17', 'is in at least one image']\", \"BOOLEAN['logical_and', 'true', '#11', '#18']\"]"}
{"id": "NLVR2_dev_dev-394-1-1", "input": "If there are two beetles, both facing away from each other.", "output": "[\"SELECT['beetles']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is equal to two']\", \"BOOLEAN['#1', 'are facing away from each other']\", \"BOOLEAN['logical_and', 'true', '#3', '#4']\"]"}
{"id": "NLVR2_dev_dev-395-0-0", "input": "If one laptop computer is facing forward and one is angled to the side, but only one is blue with a white keyboard.", "output": "[\"SELECT['laptops']\", \"FILTER['#1', 'that is facing forward']\", \"FILTER['#1', 'that is angled to the side']\", \"FILTER['#1', 'that is blue']\", \"PROJECT['keyboard of #REF', '#4']\", \"COMPARATIVE['#4', '#5', 'is white']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to one']\", \"BOOLEAN['#8', 'is equal to one']\", \"BOOLEAN['#9', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#10', '#11']\", \"BOOLEAN['logical_and', 'true', '#13', '#12']\"]"}
{"id": "NLVR2_dev_dev-395-2-1", "input": "If one laptop is blue.", "output": "[\"SELECT['laptops']\", \"FILTER['#1', 'that is blue']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-396-1-0", "input": "If there are geese swimming in a pond", "output": "[\"SELECT['geese']\", \"SELECT['pond']\", \"BOOLEAN['#1', 'are swimming in #2']\"]"}
{"id": "NLVR2_dev_dev-397-0-0", "input": "If there are two desserts in one of the images.", "output": "[\"SELECT['images']\", \"PROJECT['desserts in #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is equal to two']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-397-2-1", "input": "If one image shows a footed dessert with strawberries and no other fruit on top, and the other image shows a footed dessert with yellow-fleshed fruit on top.", "output": "[\"SELECT['one image']\", \"PROJECT['dessert in #REF', '#1']\", \"FILTER['#2', 'that is footed']\", \"PROJECT['top of #REF', '#3']\", \"PROJECT['fruits in #REF', '#1']\", \"PROJECT['strawberries in #REF', '#1']\", \"FILTER['#5', 'on #4']\", \"DISCARD['#7', '#6']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is equal to zero']\", \"SELECT['the other image']\", \"PROJECT['dessert in #REF', '#11']\", \"FILTER['#12', 'that is footed']\", \"PROJECT['fruit in #REF', '#11']\", \"FILTER['#14', 'that is yellow-fleshed']\", \"PROJECT['top of #REF', '#13']\", \"BOOLEAN['#15', 'is on #16']\", \"BOOLEAN['logical_and', 'true', '#10', '#17']\"]"}
{"id": "NLVR2_dev_dev-398-2-0", "input": "If a ferret is in a snoozing pose with face visible, snuggled next to something plush and animal-skin patterned.", "output": "[\"SELECT['ferret']\", \"FILTER['#1', 'in a snoozing pose']\", \"PROJECT['face of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is visible']\", \"SELECT['something']\", \"FILTER['#5', 'that is plush']\", \"FILTER['#6', 'that is animal-skin patterned']\", \"BOOLEAN['#4', 'is snuggled next to #7']\"]"}
{"id": "NLVR2_dev_dev-398-2-1", "input": "If there is one visible mammal in each image.", "output": "[\"SELECT['mammals']\", \"SELECT['images']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is equal to one']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to #6']\"]"}
{"id": "NLVR2_dev_dev-399-2-1", "input": "If the elephant in the image on the right is facing left.", "output": "[\"SELECT['right image']\", \"PROJECT['elephant in #REF', '#1']\", \"BOOLEAN['#2', 'is facing left']\"]"}
{"id": "NLVR2_dev_dev-4-0-0", "input": "If there are no more than 4 bottles of fizzy drink in total.", "output": "[\"SELECT['drink']\", \"FILTER['#1', 'that is fizzy']\", \"PROJECT['bottles of #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at most 4']\"]"}
{"id": "NLVR2_dev_dev-400-2-0", "input": "If there are five balloons in one image.", "output": "[\"SELECT['balloons']\", \"SELECT['images']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is equal to five']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-400-3-1", "input": "If there is a balloon touching the wall or ceiling.", "output": "[\"SELECT['balloon']\", \"SELECT['wall']\", \"SELECT['ceiling']\", \"FILTER['#1', 'that is touching #2']\", \"FILTER['#1', 'that is touching #3']\", \"AGGREGATE['count', '#4']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is at least one']\", \"BOOLEAN['#7', 'is at least one']\", \"BOOLEAN['#8', 'or #9 is true']\"]"}
{"id": "NLVR2_dev_dev-401-0-0", "input": "If in one image, a necklace made of beaded safety pins strung in one row on a chain is displayed on a black mannequin form.", "output": "[\"SELECT['necklace']\", \"SELECT['safety pins']\", \"FILTER['#2', 'that are beaded']\", \"FILTER['#3', 'strung in a row']\", \"SELECT['chain']\", \"FILTER['#4', 'on #5']\", \"FILTER['#1', 'made of #6']\", \"SELECT['mannequin form']\", \"FILTER['#8', 'that is black']\", \"FILTER['#7', 'displayed on #9']\", \"BOOLEAN['#10', 'is in one image']\"]"}
{"id": "NLVR2_dev_dev-40-1-1", "input": "If brown fuzzy penguins are in the background but not the foreground of the right image.", "output": "[\"SELECT['the right image']\", \"PROJECT['penguins in #REF', '#1']\", \"FILTER['#2', 'that are brown']\", \"FILTER['#3', 'that are fuzzy']\", \"BOOLEAN['#4', 'are in the background']\", \"BOOLEAN['#4', 'are not in the foreground']\", \"BOOLEAN['logical_and', 'true', '#5', '#6']\"]"}
{"id": "NLVR2_dev_dev-401-2-1", "input": "If the bracelet in the image on the left is made up of pink beads.", "output": "[\"SELECT['left image']\", \"PROJECT['bracelet in #REF', '#1']\", \"PROJECT['beads in #REF', '#1']\", \"FILTER['#3', 'that are pink']\", \"BOOLEAN['#2', 'is made of #4']\"]"}
{"id": "NLVR2_dev_dev-40-2-0", "input": "If there is a snow covered mountain in the right image.", "output": "[\"SELECT['mountain']\", \"SELECT['snow']\", \"FILTER['#1', 'covered with #2']\", \"SELECT['right image']\", \"BOOLEAN['#3', 'is in #4']\"]"}
{"id": "NLVR2_dev_dev-402-1-0", "input": "If an image shows at least one hamster inside a yellow container with animal ears.", "output": "[\"SELECT['hamsters']\", \"SELECT['container']\", \"FILTER['#2', 'that is yellow']\", \"SELECT['animal ears']\", \"FILTER['#3', 'with #4']\", \"FILTER['#1', 'that are inside #5']\", \"PROJECT['images of #REF', '#6']\", \"GROUP['count', '#6', '#7']\", \"COMPARATIVE['#7', '#8', 'is at least one']\", \"AGGREGATE['count', '#9']\", \"BOOLEAN['#10', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-402-1-1", "input": "If one mouse is eating.", "output": "[\"SELECT['mouse']\", \"FILTER['#1', 'that is eating']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-403-3-1", "input": "If all of the animals are standing around water.", "output": "[\"SELECT['animals']\", \"SELECT['water']\", \"FILTER['#1', 'standing around #2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#4', 'is equal to #5']\"]"}
{"id": "NLVR2_dev_dev-404-0-0", "input": "If two parrots facing opposite directions are perched on the same branch and have overlapping bodies.", "output": "[\"SELECT['parrots']\", \"PROJECT['directions that #REF are facing', '#1']\", \"COMPARATIVE['#1', '#2', 'is opposite']\", \"SELECT['branches']\", \"FILTER['#4', 'that #3 are perched on']\", \"COMPARATIVE['#3', '#5', 'is the same']\", \"PROJECT['bodies of #REF', '#6']\", \"COMPARATIVE['#6', '#7', 'is overlapping']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-404-0-1", "input": "If two parrots are perched on the same branch, and at least two parrots are perched on separate branches.", "output": "[\"SELECT['parrots']\", \"SELECT['branches']\", \"FILTER['#2', 'that #1 perched on']\", \"COMPARATIVE['#1', '#3', 'are the same']\", \"DISCARD['#1', '#4']\", \"AGGREGATE['count', '#4']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to two']\", \"BOOLEAN['#7', 'is at least two']\", \"BOOLEAN['logical_and', 'true', '#8', '#9']\"]"}
{"id": "NLVR2_dev_dev-405-0-0", "input": "If the left and right image contains a total of three crosses.", "output": "[\"SELECT['the left image']\", \"SELECT['the right image']\", \"PROJECT['crosses in #REF', '#1']\", \"PROJECT['crosses in #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['sum', '#5', '#6']\", \"BOOLEAN['#7', 'is equal to three']\"]"}
{"id": "NLVR2_dev_dev-405-0-1", "input": "If both images have crosses.", "output": "[\"SELECT['crosses']\", \"PROJECT['images of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-406-0-0", "input": "If each image contains one black frontward-facing dog, and one of the dogs pictured has its pink tongue showing.", "output": "[\"SELECT['images']\", \"PROJECT['dogs in #REF', '#1']\", \"FILTER['#2', 'that are black']\", \"FILTER['#3', 'that are frontward-facing']\", \"GROUP['count', '#4', '#1']\", \"COMPARATIVE['#1', '#5', 'is equal to one']\", \"AGGREGATE['count', '#6']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#7', 'is equal to #8']\", \"PROJECT['pink tongue of #REF', '#2']\", \"COMPARATIVE['#2', '#10', 'is showing']\", \"AGGREGATE['count', '#11']\", \"BOOLEAN['#12', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#9', '#13']\"]"}
{"id": "NLVR2_dev_dev-407-0-1", "input": "If there is a black drum set with at least three cymbal and a mixing dock attach to the bar on the left side of the set.", "output": "[\"SELECT['black drum set']\", \"PROJECT['cymbals of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at least three']\", \"PROJECT['left side of #REF', '#1']\", \"PROJECT['bar on #REF', '#5']\", \"SELECT['mixing dock']\", \"BOOLEAN['#7', 'attaches to #6']\", \"BOOLEAN['logical_and', 'true', '#4', '#8']\"]"}
{"id": "NLVR2_dev_dev-408-2-1", "input": "If each image shows exactly one pair of gloves, and all gloves have fingers.", "output": "[\"SELECT['pair of gloves']\", \"SELECT['images']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is equal to one']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to #6']\", \"FILTER['#1', 'that have fingers']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is equal to #10']\", \"BOOLEAN['logical_and', 'true', '#7', '#11']\"]"}
{"id": "NLVR2_dev_dev-409-2-0", "input": "If the full body of a jelly fish is visible in the left image.", "output": "[\"SELECT['the left image']\", \"PROJECT['jelly fish in #REF', '#1']\", \"PROJECT['full body of #REF', '#2']\", \"BOOLEAN['#3', 'is visible']\"]"}
{"id": "NLVR2_dev_dev-41-0-0", "input": "If there are three chow dogs in the image pair.", "output": "[\"SELECT['chow dogs']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is equal to three']\"]"}
{"id": "NLVR2_dev_dev-410-0-0", "input": "If at least one bird has it's beak wide open.", "output": "[\"SELECT['bird']\", \"PROJECT['beak of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is wide open']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-410-1-1", "input": "If there is at least 1 bird near water in the right image.", "output": "[\"SELECT['right image']\", \"PROJECT['birds in #REF', '#1']\", \"PROJECT['water in #REF', '#1']\", \"FILTER['#2', 'that is near #3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least 1']\"]"}
{"id": "NLVR2_dev_dev-411-0-0", "input": "If only one of the two images shows an actual dog.", "output": "[\"SELECT['dog']\", \"PROJECT['images of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-411-3-1", "input": "If there are at least 2 dogs next to each other.", "output": "[\"SELECT['dogs']\", \"FILTER['#1', 'that are next to each other']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at least 2']\"]"}
{"id": "NLVR2_dev_dev-412-1-0", "input": "If there are four fruits in total.", "output": "[\"SELECT['fruits']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is equal to four']\"]"}
{"id": "NLVR2_dev_dev-412-1-1", "input": "If there is at least one apple next to the oranges.", "output": "[\"SELECT['apples']\", \"SELECT['the oranges']\", \"FILTER['#1', 'next to #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-41-3-1", "input": "If the right image contains one chow dog outside on grass.", "output": "[\"SELECT['right image']\", \"SELECT['dog']\", \"FILTER['#2', 'that is a chow']\", \"SELECT['grass']\", \"FILTER['#3', 'that is outside on #4']\", \"FILTER['#5', 'in #1']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-413-1-0", "input": "If the left and right image contains the same number of white bowls of mashed potatoes.", "output": "[\"SELECT['the left image']\", \"SELECT['the right image']\", \"PROJECT['bowls of mashed potatoes in #REF', '#1']\", \"PROJECT['bowls of mashed potatoes in #REF', '#2']\", \"FILTER['#3', 'that are white']\", \"FILTER['#4', 'that are white']\", \"AGGREGATE['count', '#5']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to #8']\"]"}
{"id": "NLVR2_dev_dev-413-3-1", "input": "If one of these dishes has chives/scallions.", "output": "[\"SELECT['dishes']\", \"SELECT['chives/scallions']\", \"FILTER['#1', 'that have #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-414-2-0", "input": "If one of the images shows a cat and a dog lying together.", "output": "[\"SELECT['cat']\", \"SELECT['dog']\", \"FILTER['#1', 'that is lying together with #2']\", \"BOOLEAN['#3', 'is in one image']\"]"}
{"id": "NLVR2_dev_dev-415-0-1", "input": "If there is a chair in the left pic", "output": "[\"SELECT['left pic']\", \"PROJECT['chair in #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-415-1-0", "input": "If there is one glass of red wine under a setting sun in one of the images.", "output": "[\"SELECT['glass of red wine']\", \"SELECT['sun']\", \"FILTER['#2', 'that is setting']\", \"FILTER['#1', 'under #3']\", \"BOOLEAN['#4', 'is in one of the images']\"]"}
{"id": "NLVR2_dev_dev-416-0-0", "input": "If all of the beetles are standing on top of the clods.", "output": "[\"SELECT['beetles']\", \"SELECT['the clods']\", \"FILTER['#1', 'standing on top of #2']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#5', 'is equal to #4']\"]"}
{"id": "NLVR2_dev_dev-416-1-1", "input": "If an image contains two beetles crawling on a dung ball.", "output": "[\"SELECT['beetles']\", \"SELECT['dung ball']\", \"FILTER['#1', 'that are crawling']\", \"FILTER['#3', 'that are on #2']\", \"SELECT['images']\", \"GROUP['count', '#4', '#5']\", \"COMPARATIVE['#5', '#6', 'is equal to two']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-417-2-1", "input": "If there are more than 4 locks.", "output": "[\"SELECT['locks']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is higher than 4']\"]"}
{"id": "NLVR2_dev_dev-417-3-0", "input": "If right image includes only one padlock shape, a square with a loop on the top.", "output": "[\"SELECT['right image']\", \"PROJECT['padlock shape in #REF', '#1']\", \"SELECT['square']\", \"SELECT['loop']\", \"FILTER['#3', 'with #4 on the top']\", \"FILTER['#2', 'that is with #5']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-418-1-1", "input": "If there are two primates fighting, but only one is currently hitting the other.", "output": "[\"SELECT['primates']\", \"FILTER['#1', 'that are fighting']\", \"FILTER['#2', 'that are currently hitting']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to two']\", \"BOOLEAN['#5', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#6', '#7']\"]"}
{"id": "NLVR2_dev_dev-419-1-0", "input": "If a marmot is standing on its hind legs behind a camera on a tripod in one image.", "output": "[\"SELECT['marmot']\", \"PROJECT['hind legs of #REF', '#1']\", \"FILTER['#1', 'standing on #2']\", \"SELECT['camera']\", \"SELECT['tripod']\", \"FILTER['#4', 'on #5']\", \"FILTER['#3', 'behind #6']\", \"BOOLEAN['#7', 'is in one image']\"]"}
{"id": "NLVR2_dev_dev-419-1-1", "input": "If there are exactly three marmots.", "output": "[\"SELECT['marmots']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is equal to three']\"]"}
{"id": "NLVR2_dev_dev-420-0-0", "input": "If a bobby pin is pinned on a sweater with a collared shirt underneath", "output": "[\"SELECT['bobby pin']\", \"SELECT['sweater']\", \"SELECT['shirt']\", \"FILTER['#3', 'that is collared']\", \"FILTER['#2', 'with #4 underneath']\", \"BOOLEAN['#1', 'is pinned on #5']\"]"}
{"id": "NLVR2_dev_dev-420-0-1", "input": "If there is one open and one closed safety pin stuck through fabric.", "output": "[\"SELECT['safety pin']\", \"SELECT['fabric']\", \"FILTER['#1', 'stuck through #2']\", \"FILTER['#3', 'that is open']\", \"FILTER['#3', 'that is closed']\", \"AGGREGATE['count', '#4']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to one']\", \"BOOLEAN['#7', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#8', '#9']\"]"}
{"id": "NLVR2_dev_dev-42-1-0", "input": "If at least one bird is perched on a branch.", "output": "[\"SELECT['birds']\", \"SELECT['branches']\", \"FILTER['#1', 'perched on #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-42-1-1", "input": "If each image contains just one bird, and the wires of a cage are behind the bird in one image.", "output": "[\"SELECT['birds']\", \"SELECT['images']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is equal to one']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to #6']\", \"SELECT['cage']\", \"PROJECT['wires of #REF', '#8']\", \"FILTER['#9', 'that is behind #1']\", \"BOOLEAN['#10', 'is in one image']\", \"BOOLEAN['logical_and', 'true', '#7', '#11']\"]"}
{"id": "NLVR2_dev_dev-421-1-0", "input": "If in at least one image there are no more than two vultures eating the carcass.", "output": "[\"SELECT['vultures']\", \"SELECT['carcass']\", \"FILTER['#1', 'that are eating #2']\", \"SELECT['images']\", \"GROUP['count', '#3', '#4']\", \"COMPARATIVE['#4', '#5', 'is at most two']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-421-1-1", "input": "If the left image definitely contains a quadruped that might not be dead, while the right image does not.", "output": "[\"SELECT['left image']\", \"PROJECT['quadrupeds of #REF', '#1']\", \"FILTER['#2', 'that might not be dead']\", \"SELECT['right image']\", \"PROJECT['quadrupeds of #REF', '#4']\", \"FILTER['#5', 'that might not be dead']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is at least one']\", \"BOOLEAN['#8', 'is equal to zero']\", \"BOOLEAN['logical_and', 'true', '#9', '#10']\"]"}
{"id": "NLVR2_dev_dev-422-1-0", "input": "If the rodent in the image on the left is in a basin of water.", "output": "[\"SELECT['left image']\", \"PROJECT['rodent in #REF', '#1']\", \"PROJECT['basin of water in #REF', '#1']\", \"BOOLEAN['#2', 'is in #3']\"]"}
{"id": "NLVR2_dev_dev-422-3-1", "input": "If a total of two hamsters with wet fur are inside some type of water-filled basin.", "output": "[\"SELECT['hamsters']\", \"PROJECT['fur of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is wet']\", \"SELECT['basin']\", \"FILTER['#4', 'that is water-filled']\", \"FILTER['#3', 'that are inside #5']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-423-1-1", "input": "If the left and right image contains the same number of people in the barber shop.", "output": "[\"SELECT['people']\", \"SELECT['the barber shop']\", \"FILTER['#1', 'in #2']\", \"FILTER['#3', 'in the left image']\", \"FILTER['#3', 'in the right image']\", \"AGGREGATE['count', '#4']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to #7']\"]"}
{"id": "NLVR2_dev_dev-423-3-0", "input": "If exactly two people are getting their hair cut.", "output": "[\"SELECT['people']\", \"PROJECT['hair of #REF', '#1']\", \"FILTER['#1', 'that are getting #2 cut']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-424-3-0", "input": "If there are two bull terriers present.", "output": "[\"SELECT['bull terriers']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-424-3-1", "input": "If none of the dogs are wearing leashes.", "output": "[\"SELECT['dogs']\", \"SELECT['leashes']\", \"FILTER['#1', 'wearing #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to zero']\"]"}
{"id": "NLVR2_dev_dev-425-2-1", "input": "If in one of the images a train is not riding on rails.", "output": "[\"SELECT['train']\", \"SELECT['rails']\", \"FILTER['#1', 'not riding on #2']\", \"BOOLEAN['#3', 'is in one of the images']\"]"}
{"id": "NLVR2_dev_dev-426-1-0", "input": "If there are pillows on a chair.", "output": "[\"SELECT['pillows']\", \"SELECT['chair']\", \"FILTER['#1', 'that are on #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-427-0-1", "input": "If the right image shows no more than two sled dogs and includes a blue-eyed dog, and the left image shows a dog with a red harness in the lead.", "output": "[\"SELECT['the right image']\", \"PROJECT['sled dogs in #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at most two']\", \"SELECT['dog']\", \"FILTER['#5', 'that is blue-eyed']\", \"BOOLEAN['#6', 'is in #1']\", \"SELECT['harness']\", \"FILTER['#8', 'that is red']\", \"FILTER['#5', 'with #9']\", \"FILTER['#10', 'in the lead']\", \"BOOLEAN['#11', 'is in the left image']\", \"BOOLEAN['logical_and', 'true', '#4', '#7']\", \"BOOLEAN['logical_and', 'true', '#12', '#13']\"]"}
{"id": "NLVR2_dev_dev-427-2-0", "input": "If the right image contains no more than two dogs.", "output": "[\"SELECT['right image']\", \"PROJECT['dogs in #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at most two']\"]"}
{"id": "NLVR2_dev_dev-428-1-1", "input": "If in each image, a woman is present posing with at least one large-breed dog.", "output": "[\"SELECT['woman']\", \"SELECT['dog']\", \"FILTER['#2', 'that is large-breed']\", \"FILTER['#3', 'that #1 is posing with']\", \"SELECT['images']\", \"GROUP['count', '#4', '#5']\", \"COMPARATIVE['#5', '#6', 'is at least one']\", \"AGGREGATE['count', '#5']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is equal to #9']\"]"}
{"id": "NLVR2_dev_dev-428-2-0", "input": "If all of the dogs are near humans.", "output": "[\"SELECT['dogs']\", \"SELECT['humans']\", \"FILTER['#1', 'near #2']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#5', 'is equal to #4']\"]"}
{"id": "NLVR2_dev_dev-429-0-0", "input": "If only blue cars can be seen in the image pair.", "output": "[\"SELECT['image pair']\", \"PROJECT['cars of #REF', '#1']\", \"FILTER['#2', 'that are blue']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to #5']\"]"}
{"id": "NLVR2_dev_dev-429-1-1", "input": "If there is at least one car that is not blue.", "output": "[\"SELECT['cars']\", \"FILTER['#1', 'that are blue']\", \"DISCARD['#1', '#2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-430-2-1", "input": "If the image to the left shows a two pack of paper towels.", "output": "[\"SELECT['left image']\", \"PROJECT['two pack of paper towels in #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-430-3-0", "input": "If an image features one multi-roll paper towel pack standing on a greyish surface in a home.", "output": "[\"SELECT['paper towel packs']\", \"FILTER['#1', 'that is multi-roll']\", \"SELECT['home']\", \"SELECT['surface']\", \"FILTER['#4', 'that is in #3']\", \"FILTER['#5', 'that is greyish']\", \"FILTER['#2', 'that is on #6']\", \"SELECT['images']\", \"GROUP['count', '#7', '#8']\", \"COMPARATIVE['#8', '#9', 'is equal to one']\", \"AGGREGATE['count', '#10']\", \"BOOLEAN['#11', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-4-3-1", "input": "If every bottle is green.", "output": "[\"SELECT['bottles']\", \"FILTER['#1', 'that are green']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#4', 'is equal to #3']\"]"}
{"id": "NLVR2_dev_dev-431-0-0", "input": "If in one image, a long towel bar attached at the front of the sink area has at least two towels hanging on it.", "output": "[\"SELECT['towel bar']\", \"FILTER['#1', 'that is long']\", \"SELECT['the sink area']\", \"PROJECT['the front of #REF', '#3']\", \"FILTER['#2', 'attached at #4']\", \"SELECT['towels']\", \"FILTER['#6', 'hanging on #5']\", \"PROJECT['images of #REF', '#7']\", \"GROUP['count', '#7', '#8']\", \"COMPARATIVE['#8', '#9', 'is at least two']\", \"AGGREGATE['count', '#10']\", \"BOOLEAN['#11', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-43-1-1", "input": "If both images contain jewelry with red, white and blue colors.", "output": "[\"SELECT['jewelry']\", \"PROJECT['colors of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'are red , white and blue']\", \"BOOLEAN['#3', 'is in both images']\"]"}
{"id": "NLVR2_dev_dev-431-3-1", "input": "If towels hang in front of the sink in one of the images.", "output": "[\"SELECT['towels']\", \"SELECT['sink']\", \"FILTER['#1', 'that hang in front of #2']\", \"BOOLEAN['#3', 'is in one of the images']\"]"}
{"id": "NLVR2_dev_dev-432-0-1", "input": "If there are two bowls of fruit salad.", "output": "[\"SELECT['bowls of fruit salad']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-432-3-0", "input": "If bananas, strawberries and blueberries are in a bowl without a spoon inserted in it.", "output": "[\"SELECT['bananas']\", \"SELECT['strawberries']\", \"SELECT['blueberries']\", \"SELECT['bowl']\", \"SELECT['spoon']\", \"FILTER['#4', 'without #5 inserted in it']\", \"BOOLEAN['#1', 'are in #6']\", \"BOOLEAN['#2', 'are in #6']\", \"BOOLEAN['#3', 'are in #6']\", \"BOOLEAN['logical_and', 'true', '#7', '#8']\", \"BOOLEAN['logical_and', 'true', '#9', '#10']\"]"}
{"id": "NLVR2_dev_dev-43-3-0", "input": "If in the right image, there's an american flag made out of beads and safety pins.", "output": "[\"SELECT['right image']\", \"PROJECT['american flag in #REF', '#1']\", \"PROJECT['beads in #REF', '#1']\", \"PROJECT['safety pins in #REF', '#1']\", \"UNION['#3', '#4']\", \"FILTER['#2', 'that is made out of #5']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-433-2-1", "input": "If the right image contains one upright bottle with a flat flip-up lid on it, and the left image includes amber liquid in a bottle with a flip-top lid.", "output": "[\"SELECT['right image']\", \"PROJECT['bottle in #REF', '#1']\", \"FILTER['#2', 'that is upright']\", \"PROJECT['lid of #REF', '#3']\", \"FILTER['#4', 'that is flip-up']\", \"FILTER['#5', 'that is flat']\", \"FILTER['#3', 'that has #6']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is equal to one']\", \"SELECT['left image']\", \"PROJECT['liquid in #REF', '#10']\", \"FILTER['#11', 'that is amber']\", \"PROJECT['bottle in #REF', '#10']\", \"PROJECT['lid of #REF', '#13']\", \"COMPARATIVE['#13', '#14', 'is flip-top']\", \"FILTER['#12', 'that is in #15']\", \"AGGREGATE['count', '#16']\", \"BOOLEAN['#17', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#9', '#18']\"]"}
{"id": "NLVR2_dev_dev-433-3-0", "input": "If the left image contains a vanilla scented bath and shower gel.", "output": "[\"SELECT['left image']\", \"PROJECT['bath and shower gel in #REF', '#1']\", \"FILTER['#2', 'that is vanilla scented']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-434-0-0", "input": "If the train in the image on the right has red markings on the front and is facing right.", "output": "[\"SELECT['the image on the right']\", \"PROJECT['the train in #REF', '#1']\", \"BOOLEAN['#2', 'is facing right']\", \"PROJECT['front of #REF', '#2']\", \"SELECT['markings']\", \"FILTER['#5', 'on #4']\", \"BOOLEAN['#6', 'are red']\", \"BOOLEAN['logical_and', 'true', '#7', '#3']\"]"}
{"id": "NLVR2_dev_dev-434-3-1", "input": "If the train in the left image has a design with red and blue painted stripes.", "output": "[\"SELECT['the left image']\", \"PROJECT['train in #REF', '#1']\", \"PROJECT['design of #REF', '#2']\", \"PROJECT['stripes of #REF', '#3']\", \"BOOLEAN['#4', 'are painted red']\", \"BOOLEAN['#4', 'are painted blue']\", \"BOOLEAN['logical_and', 'true', '#5', '#6']\"]"}
{"id": "NLVR2_dev_dev-435-0-1", "input": "If in both images, there are people working on a staricase.", "output": "[\"SELECT['people']\", \"SELECT['staricase']\", \"FILTER['#1', 'working on #2']\", \"PROJECT['images of #REF', '#3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-435-3-0", "input": "If stairs are being repaired.", "output": "[\"SELECT['stairs']\", \"BOOLEAN['#1', 'are being repaired']\"]"}
{"id": "NLVR2_dev_dev-436-1-1", "input": "If at least one paper roll stand is made of black horseshoes, and at least one holds a roll horizontally.", "output": "[\"SELECT['paper roll stands']\", \"SELECT['horseshoes']\", \"FILTER['#2', 'that are black']\", \"FILTER['#1', 'made of #3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least one']\", \"SELECT['roll']\", \"FILTER['#1', 'that hold #7 horizontally']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#6', '#10']\"]"}
{"id": "NLVR2_dev_dev-436-3-0", "input": "If there is a paper holder that is made from horse tack items in each image.", "output": "[\"SELECT['paper holder']\", \"SELECT['horse tack items']\", \"FILTER['#1', 'that are made from #2']\", \"SELECT['images']\", \"GROUP['count', '#3', '#4']\", \"COMPARATIVE['#4', '#5', 'is at least one']\", \"AGGREGATE['count', '#4']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to #8']\"]"}
{"id": "NLVR2_dev_dev-437-0-0", "input": "If there is a total of four dumbbells.", "output": "[\"SELECT['dumbbells']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is equal to four']\"]"}
{"id": "NLVR2_dev_dev-437-0-1", "input": "If there are exactly four dumbbells.", "output": "[\"SELECT['dumbbells']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is equal to four']\"]"}
{"id": "NLVR2_dev_dev-438-2-0", "input": "If the left image shows mashed potatoes in a round brown bowl with a spoon near it, and the right image shows mashed potatoes in an oblong bowl.", "output": "[\"SELECT['mashed potatoes']\", \"SELECT['bowl']\", \"FILTER['#2', 'that is round']\", \"FILTER['#3', 'that is brown']\", \"FILTER['#1', 'in #4']\", \"SELECT['spoon']\", \"FILTER['#6', 'near #5']\", \"FILTER['#5', 'with #7']\", \"BOOLEAN['#8', 'is in the left image']\", \"FILTER['#2', 'that is oblong']\", \"FILTER['#1', 'in']\", \"BOOLEAN['#11', 'is in the right image']\", \"BOOLEAN['logical_and', 'true', '#9', '#12']\"]"}
{"id": "NLVR2_dev_dev-438-2-1", "input": "If in at least one image there is a wooden bowl and a spoon on the table.", "output": "[\"SELECT['bowl']\", \"FILTER['#1', 'that is wooden']\", \"SELECT['spoon']\", \"SELECT['the table']\", \"FILTER['#2', 'that is on #4']\", \"FILTER['#3', 'that is on #4']\", \"PROJECT['images of #REF', '#5']\", \"PROJECT['images of #REF', '#6']\", \"SELECT['images']\", \"INTERSECTION['#9', '#7', '#8']\", \"AGGREGATE['count', '#10']\", \"BOOLEAN['#11', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-439-1-0", "input": "If a pair of hands is wearing gloves in one of the images.", "output": "[\"SELECT['hands']\", \"PROJECT['pair of #REF', '#1']\", \"SELECT['gloves']\", \"FILTER['#2', 'wearing #3']\", \"BOOLEAN['#4', 'is in one of the images']\"]"}
{"id": "NLVR2_dev_dev-439-3-1", "input": "If in one image, a pair of mittens is modeled on human hands, while a pair in a second image, with one mitten face up and one face down, is not.", "output": "[\"SELECT['one image']\", \"PROJECT['pair of mittens in #REF', '#1']\", \"PROJECT['human hands in #REF', '#1']\", \"FILTER['#2', 'that is modeled on #3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least one']\", \"SELECT['second image']\", \"PROJECT['mittens in #REF', '#7']\", \"FILTER['#8', 'that face up']\", \"FILTER['#8', 'that face down']\", \"AGGREGATE['count', '#9']\", \"AGGREGATE['count', '#10']\", \"BOOLEAN['#11', 'is equal to one']\", \"BOOLEAN['#12', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#13', '#14']\", \"FILTER['#8', 'that are modeled on human hands']\", \"AGGREGATE['count', '#16']\", \"BOOLEAN['#17', 'is equal to zero']\", \"BOOLEAN['logical_and', 'true', '#15', '#18']\", \"BOOLEAN['logical_and', 'true', '#6', '#19']\"]"}
{"id": "NLVR2_dev_dev-44-0-1", "input": "If the left and right image contains the same number broccoli head with their leave looking like a circle of sun rays around the head.", "output": "[\"SELECT['the left image']\", \"PROJECT['broccoli heads in #REF', '#1']\", \"PROJECT['leave of #REF', '#2']\", \"FILTER['#3', 'that look like a circle of sun rays around #2']\", \"FILTER['#2', 'with #4']\", \"AGGREGATE['count', '#5']\", \"SELECT['the right image']\", \"PROJECT['broccoli heads in #REF', '#7']\", \"PROJECT['leave of #REF', '#8']\", \"FILTER['#9', 'that look like a circle of sun rays around #8']\", \"FILTER['#8', 'with #10']\", \"AGGREGATE['count', '#11']\", \"BOOLEAN['#6', 'is equal to #12']\"]"}
{"id": "NLVR2_dev_dev-440-2-0", "input": "If there is a single beetle on a clod of dirt in each of the images.", "output": "[\"SELECT['beetles']\", \"SELECT['a clod of dirt']\", \"FILTER['#1', 'on #2']\", \"PROJECT['images of #REF', '#3']\", \"GROUP['count', '#3', '#4']\", \"COMPARATIVE['#4', '#5', 'is equal to one']\", \"AGGREGATE['count', '#6']\", \"SELECT['images']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#7', 'is equal to #9']\"]"}
{"id": "NLVR2_dev_dev-440-3-1", "input": "If each image contains a single beetle in contact with a single rounded dung ball.", "output": "[\"SELECT['beetle']\", \"SELECT['dung ball']\", \"FILTER['#2', 'that is rounded']\", \"FILTER['#3', 'that #1 is in contact with']\", \"GROUP['count', '#4', '#1']\", \"COMPARATIVE['#1', '#5', 'is equal to one']\", \"SELECT['images']\", \"GROUP['count', '#6', '#7']\", \"COMPARATIVE['#7', '#8', 'is equal to one']\", \"AGGREGATE['count', '#7']\", \"AGGREGATE['count', '#9']\", \"BOOLEAN['#10', 'is equal to #11']\"]"}
{"id": "NLVR2_dev_dev-441-0-1", "input": "If the left side of a bus is visible.", "output": "[\"SELECT['bus']\", \"PROJECT['side of #REF', '#1']\", \"FILTER['#2', 'that is left']\", \"BOOLEAN['#3', 'is visible']\"]"}
{"id": "NLVR2_dev_dev-44-2-0", "input": "If in the left image the leaves take up more space than the broccoli.", "output": "[\"SELECT['left image']\", \"PROJECT['leaves in #REF', '#1']\", \"PROJECT['broccoli in #REF', '#1']\", \"PROJECT['space that #REF take up', '#2']\", \"PROJECT['space that #REF take up', '#3']\", \"BOOLEAN['#4', 'is higher than #5']\"]"}
{"id": "NLVR2_dev_dev-442-0-1", "input": "If the image on the left shows two sliced pizzas.", "output": "[\"SELECT['the image on the left']\", \"PROJECT['pizzas in #REF', '#1']\", \"FILTER['#2', 'that are sliced']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-442-2-0", "input": "If there are three or more pizzas.", "output": "[\"SELECT['pizzas']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is at least three']\"]"}
{"id": "NLVR2_dev_dev-443-2-1", "input": "If in the left image a human with a sleeve tattoo is touching a dog.", "output": "[\"SELECT['left image']\", \"PROJECT['human in #REF', '#1']\", \"FILTER['#2', 'that is with a sleeve tattoo']\", \"PROJECT['dog in #REF', '#1']\", \"BOOLEAN['#3', 'is touching #4']\"]"}
{"id": "NLVR2_dev_dev-443-3-0", "input": "If an image contains two side-by-side dogs which are each wearing a garment that is not just a collar.", "output": "[\"SELECT['dogs']\", \"FILTER['#1', 'that are side-by-side']\", \"PROJECT['garments that #REF are wearing', '#2']\", \"SELECT['collars']\", \"DISCARD['#3', '#4']\", \"GROUP['count', '#5', '#2']\", \"COMPARATIVE['#2', '#6', 'is at least one']\", \"SELECT['images']\", \"GROUP['count', '#7', '#8']\", \"COMPARATIVE['#8', '#9', 'is equal to two']\", \"AGGREGATE['count', '#10']\", \"BOOLEAN['#11', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-444-2-0", "input": "If in at least one image there is a plastic bottle that is cover in blue knitted stripes.", "output": "[\"SELECT['bottle']\", \"FILTER['#1', 'that is plastic']\", \"SELECT['stripes']\", \"FILTER['#3', 'that are blue']\", \"FILTER['#4', 'that are knitted']\", \"FILTER['#2', 'cover in #5']\", \"BOOLEAN['#6', 'is in at least one image']\"]"}
{"id": "NLVR2_dev_dev-445-2-0", "input": "If the single dog in the image on the right is lying down.", "output": "[\"SELECT['right image']\", \"PROJECT['dog in #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to one']\", \"BOOLEAN['#2', 'is lying down']\", \"BOOLEAN['logical_and', 'true', '#4', '#5']\"]"}
{"id": "NLVR2_dev_dev-445-2-1", "input": "If each image contains exactly one white dog, and the lefthand dog has its tongue extended past its teeth and lip.", "output": "[\"SELECT['images']\", \"PROJECT['dogs in #REF', '#1']\", \"FILTER['#2', 'that are white']\", \"GROUP['count', '#3', '#1']\", \"COMPARATIVE['#1', '#4', 'is equal to one']\", \"AGGREGATE['count', '#5']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#6', 'is equal to #7']\", \"SELECT['the lefthand image']\", \"PROJECT['dog in #REF', '#9']\", \"PROJECT['tongue of #REF', '#10']\", \"PROJECT['teeth and lip of #REF', '#10']\", \"BOOLEAN['#11', 'is extended past #12']\", \"BOOLEAN['logical_and', 'true', '#8', '#13']\"]"}
{"id": "NLVR2_dev_dev-446-3-0", "input": "If one image shows exactly three keys displayed on the right side of a non-round lock.", "output": "[\"SELECT['keys']\", \"SELECT['lock']\", \"FILTER['#2', 'that is non-round']\", \"FILTER['#1', 'that are displayed on the right side of #3']\", \"SELECT['images']\", \"GROUP['count', '#4', '#5']\", \"COMPARATIVE['#5', '#6', 'is equal to three']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-446-3-1", "input": "If the left image contains one lock with two keys.", "output": "[\"SELECT['left image']\", \"PROJECT['lock in #REF', '#1']\", \"PROJECT['keys in #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to one']\", \"BOOLEAN['#5', 'is equal to two']\", \"BOOLEAN['logical_and', 'true', '#6', '#7']\"]"}
{"id": "NLVR2_dev_dev-447-0-1", "input": "If the screens in the left and right images face the same direction.", "output": "[\"SELECT['left image']\", \"PROJECT['screens of #REF', '#1']\", \"SELECT['right image']\", \"PROJECT['screens of #REF', '#3']\", \"PROJECT['the direction of #REF', '#2']\", \"PROJECT['the direction of #REF', '#4']\", \"BOOLEAN['#5', 'is the same as #6']\"]"}
{"id": "NLVR2_dev_dev-447-1-0", "input": "If at least one of the laptop screens shows an image of an animal.", "output": "[\"SELECT['laptops']\", \"PROJECT['screens of #REF', '#1']\", \"SELECT['an animal']\", \"PROJECT['image of #REF', '#3']\", \"FILTER['#2', 'that show #4']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-448-3-0", "input": "If there are two objects inside both bed nets.", "output": "[\"SELECT['objects']\", \"SELECT['bed nets']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is equal to two']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-448-3-1", "input": "If the left image shows a blue-trimmed dome canopy on a beige rug, with one plush animal next to a cushion shape under the canopy.", "output": "[\"SELECT['left image']\", \"PROJECT['dome canopy in #REF', '#1']\", \"FILTER['#2', 'that is blue-trimmed']\", \"SELECT['rug']\", \"FILTER['#4', 'that is beige']\", \"BOOLEAN['#3', 'is on #5']\", \"PROJECT['plush animal in #REF', '#1']\", \"SELECT['cushion shape']\", \"FILTER['#8', 'under #2']\", \"FILTER['#7', 'next to #9']\", \"AGGREGATE['count', '#10']\", \"BOOLEAN['#11', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#6', '#12']\"]"}
{"id": "NLVR2_dev_dev-449-3-1", "input": "If the right image features one anemone with yellow tapered tendrils flowing from a stalk resembling a mushroom stem.", "output": "[\"SELECT['the right image']\", \"PROJECT['anemones in #REF', '#1']\", \"PROJECT['tendrils of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'are yellow']\", \"COMPARATIVE['#2', '#3', 'are tapered']\", \"PROJECT['stalk in #REF', '#1']\", \"FILTER['#6', 'resembling a mushroom stem']\", \"COMPARATIVE['#2', '#3', 'are flowing from #7']\", \"INTERSECTION['#2', '#4', '#5']\", \"INTERSECTION['#2', '#8', '#9']\", \"AGGREGATE['count', '#10']\", \"BOOLEAN['#11', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-45-1-1", "input": "If in one of the images, a person is holding a dog's leg just above the paw.", "output": "[\"SELECT['person']\", \"SELECT['dog']\", \"PROJECT['leg of #REF', '#2']\", \"PROJECT['paw of #REF', '#2']\", \"FILTER['#1', 'holding #3 just above #4']\", \"BOOLEAN['#5', 'is in one of the images']\"]"}
{"id": "NLVR2_dev_dev-451-2-1", "input": "If there is a single brown llama with black ears and eyes staring at the vamera while its body is facing to the right", "output": "[\"SELECT['llamas']\", \"FILTER['#1', 'that are brown']\", \"PROJECT['ears of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'are black']\", \"PROJECT['eyes of #REF', '#4']\", \"COMPARATIVE['#4', '#5', 'are black']\", \"FILTER['#6', 'that are staring at the vamera']\", \"PROJECT['body of #REF', '#7']\", \"COMPARATIVE['#7', '#8', 'is facing to the right']\", \"AGGREGATE['count', '#9']\", \"BOOLEAN['#10', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-451-3-0", "input": "If the left and right image contains the same number of standing llamas.", "output": "[\"SELECT['right image']\", \"PROJECT['llamas of #REF', '#1']\", \"FILTER['#2', 'that are standing']\", \"AGGREGATE['count', '#3']\", \"SELECT['left image']\", \"PROJECT['llamas of #REF', '#5']\", \"FILTER['#6', 'that are standing']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#4', 'is equal to #8']\"]"}
{"id": "NLVR2_dev_dev-452-0-0", "input": "If each image contains one dog, which is standing on all fours in the grass, and dogs in the left and right images are turned in the same general direction.", "output": "[\"SELECT['images']\", \"PROJECT['dogs in #REF', '#1']\", \"FILTER['#2', 'standing on all fours']\", \"PROJECT['the grass in #REF', '#1']\", \"FILTER['#3', 'in #4']\", \"GROUP['count', '#5', '#1']\", \"COMPARATIVE['#1', '#6', 'is equal to one']\", \"AGGREGATE['count', '#7']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#8', 'is equal to #9']\", \"SELECT['the left image']\", \"SELECT['the right image']\", \"PROJECT['dog in #REF', '#11']\", \"PROJECT['dog in #REF', '#12']\", \"PROJECT['general direction turned in of #REF', '#13']\", \"PROJECT['general direction turned in of #REF', '#14']\", \"BOOLEAN['#15', 'is the same as #16']\", \"BOOLEAN['logical_and', 'true', '#10', '#17']\"]"}
{"id": "NLVR2_dev_dev-452-2-1", "input": "If at least one cocker spaniel is facing left.", "output": "[\"SELECT['cocker spaniel']\", \"FILTER['#1', 'that is facing left']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-45-3-0", "input": "If the dog on the right is being held by a human, the dog on the left is not.", "output": "[\"SELECT['dog']\", \"FILTER['#1', 'on the right']\", \"FILTER['#1', 'on the left']\", \"SELECT['human']\", \"BOOLEAN['#2', 'is being held by #4']\", \"BOOLEAN['#3', 'is not being held by #4']\", \"BOOLEAN['logical_and', 'true', '#5', '#6']\"]"}
{"id": "NLVR2_dev_dev-453-0-1", "input": "If there are exactly two beakers.", "output": "[\"SELECT['beakers']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-453-1-0", "input": "If there are two cup beakers with no additional pieces.", "output": "[\"SELECT['cup beakers']\", \"SELECT['additional pieces']\", \"FILTER['#1', 'with #2']\", \"DISCARD['#1', '#3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-454-0-1", "input": "If there are at least two clear dispensers.", "output": "[\"SELECT['dispensers']\", \"FILTER['#1', 'that are clear']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at least two']\"]"}
{"id": "NLVR2_dev_dev-454-3-0", "input": "If the left and right image contains the same number of clear glass soap dispensers.", "output": "[\"SELECT['soap dispensers']\", \"FILTER['#1', 'that are clear glass']\", \"SELECT['left image']\", \"SELECT['right image']\", \"FILTER['#2', 'that are in #3']\", \"FILTER['#2', 'that are in #4']\", \"AGGREGATE['count', '#5']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to #8']\"]"}
{"id": "NLVR2_dev_dev-455-0-0", "input": "If there are two, and only two, people.", "output": "[\"SELECT['people']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-455-1-1", "input": "If there are exactly two people.", "output": "[\"SELECT['people']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-456-0-1", "input": "If in the right image, a person stands at a vending machine.", "output": "[\"SELECT['person']\", \"SELECT['vending machine']\", \"FILTER['#1', 'that stands at #2']\", \"BOOLEAN['#3', 'is in right images']\"]"}
{"id": "NLVR2_dev_dev-456-2-0", "input": "If a person stands directly in front of and facing a vending machine.", "output": "[\"SELECT['person']\", \"SELECT['a vending machine']\", \"FILTER['#1', 'that stands directly in front of #2']\", \"BOOLEAN['#3', 'is facing #2']\"]"}
{"id": "NLVR2_dev_dev-457-0-1", "input": "If in one of the images a pug dog is eating a slice of watermelon outside.", "output": "[\"SELECT['dog']\", \"FILTER['#1', 'that is pug']\", \"SELECT['watermelon']\", \"PROJECT['slice of #REF', '#3']\", \"FILTER['#2', 'eating #4']\", \"FILTER['#5', 'that is outside']\", \"BOOLEAN['#6', 'is in one of the images']\"]"}
{"id": "NLVR2_dev_dev-457-2-0", "input": "If one baby pug is eating a slice of watermelon.", "output": "[\"SELECT['pugs']\", \"FILTER['#1', 'that are babies']\", \"SELECT['slice of watermelon']\", \"FILTER['#2', 'eating #3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-458-1-0", "input": "If one of the dogs is wading through water.", "output": "[\"SELECT['dogs']\", \"SELECT['water']\", \"FILTER['#1', 'wading through #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-458-1-1", "input": "If at least one dog is in the water.", "output": "[\"SELECT['dogs']\", \"SELECT['the water']\", \"FILTER['#1', 'in #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-459-0-1", "input": "If some of the bottles are filled with grains.", "output": "[\"SELECT['bottles']\", \"SELECT['grains']\", \"FILTER['#1', 'filled with #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-459-3-0", "input": "If in at least one image there are three soda bottles full of rice and beans.", "output": "[\"SELECT['soda bottles']\", \"SELECT['rice and beans']\", \"FILTER['#1', 'full of #2']\", \"PROJECT['images of #REF', '#3']\", \"GROUP['count', '#3', '#4']\", \"COMPARATIVE['#4', '#5', 'is equal to three']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-460-3-0", "input": "If there are 2 animals.", "output": "[\"SELECT['animals']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-460-3-1", "input": "If the lefthand image shows one basset hound sitting on a gray outdoor surface with a grid pattern.", "output": "[\"SELECT['lefthand image']\", \"PROJECT['basset hound in #REF', '#1']\", \"FILTER['#2', 'that is sitting']\", \"SELECT['outdoor surface']\", \"PROJECT['pattern of #REF', '#4']\", \"COMPARATIVE['#4', '#5', 'is grid']\", \"FILTER['#6', 'that is gray']\", \"FILTER['#3', 'that is on #7']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-461-0-1", "input": "If there at most one all white chihuahua in both images.", "output": "[\"SELECT['chihuahua']\", \"FILTER['#1', 'that is all white']\", \"SELECT['images']\", \"GROUP['count', '#2', '#3']\", \"COMPARATIVE['#3', '#4', 'is at most one']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-46-1-1", "input": "If a marmot is peering out of a hole in the left image.", "output": "[\"SELECT['left image']\", \"PROJECT['marmot of #REF', '#1']\", \"PROJECT['hole of #REF', '#1']\", \"BOOLEAN['#2', 'is peering out of #3']\"]"}
{"id": "NLVR2_dev_dev-461-1-0", "input": "If all dogs shown are puppies in sitting poses, and the left image features a puppy sitting on folds of plush fabric.", "output": "[\"SELECT['images']\", \"PROJECT['dogs in #REF', '#1']\", \"FILTER['#2', 'that are puppies']\", \"FILTER['#3', 'in sitting poses']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#6', 'is equal to #5']\", \"SELECT['puppy']\", \"SELECT['folds of fabric']\", \"FILTER['#9', 'that are plush']\", \"FILTER['#8', 'sitting on #10']\", \"BOOLEAN['#11', 'is in the left image']\", \"BOOLEAN['logical_and', 'true', '#7', '#12']\"]"}
{"id": "NLVR2_dev_dev-46-2-0", "input": "If there are exactly two living marmots.", "output": "[\"SELECT['marmots']\", \"FILTER['#1', 'that are living']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-462-0-1", "input": "If the left train is facing right and the right train is facing left.", "output": "[\"SELECT['train']\", \"FILTER['#1', 'that is on the left']\", \"FILTER['#1', 'that is on the right']\", \"BOOLEAN['#2', 'is facing right']\", \"BOOLEAN['#3', 'is facing left']\", \"BOOLEAN['logical_and', 'true', '#4', '#5']\"]"}
{"id": "NLVR2_dev_dev-463-0-0", "input": "If one of the photos contains a cheetah that is running.", "output": "[\"SELECT['cheetah']\", \"FILTER['#1', 'that is running']\", \"BOOLEAN['#2', 'is in one of the photos']\"]"}
{"id": "NLVR2_dev_dev-463-0-1", "input": "If at least one of the images features a horned animal facing towards a cheetah, instead of running away.", "output": "[\"SELECT['animal']\", \"FILTER['#1', 'that is horned']\", \"SELECT['cheetah']\", \"FILTER['#2', 'that is facing towards #3']\", \"PROJECT['images of #REF', '#4']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-464-0-0", "input": "If there is a small puppy with its mother", "output": "[\"SELECT['puppy']\", \"FILTER['#1', 'that is small']\", \"PROJECT['mother of #REF', '#2']\", \"BOOLEAN['#2', 'is with #3']\"]"}
{"id": "NLVR2_dev_dev-464-3-1", "input": "If there is at least one large, white dog outside in the snow.", "output": "[\"SELECT['dog']\", \"SELECT['snow']\", \"FILTER['#1', 'that is white']\", \"FILTER['#3', 'that is large']\", \"FILTER['#4', 'that is outside']\", \"FILTER['#5', 'that is in #2']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-465-1-1", "input": "If the left and right image contains at total of two boats.", "output": "[\"SELECT['left image']\", \"SELECT['right image']\", \"PROJECT['boats of #REF', '#1']\", \"PROJECT['boats of #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['sum', '#5', '#6']\", \"BOOLEAN['#7', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-465-3-0", "input": "If the right image features a large blue body of water containing at least six sailboats, and a shore that slopes upward.", "output": "[\"SELECT['body of water']\", \"FILTER['#1', 'that is large']\", \"FILTER['#2', 'that is blue']\", \"SELECT['sailboats']\", \"FILTER['#4', 'in #3']\", \"GROUP['count', '#5', '#3']\", \"COMPARATIVE['#3', '#6', 'is at least six']\", \"SELECT['shore']\", \"FILTER['#8', 'that slopes upward']\", \"BOOLEAN['#7', 'is in the right image']\", \"BOOLEAN['#9', 'is in the right image']\", \"BOOLEAN['logical_and', 'true', '#10', '#11']\"]"}
{"id": "NLVR2_dev_dev-466-2-0", "input": "If in at least one image there are two black vaulters.", "output": "[\"SELECT['vaulters']\", \"FILTER['#1', 'that are black']\", \"SELECT['images']\", \"GROUP['count', '#2', '#3']\", \"COMPARATIVE['#3', '#4', 'is equal to two']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-466-2-1", "input": "If one of the images contains only two vultures.", "output": "[\"SELECT['vultures']\", \"SELECT['images']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is equal to two']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-467-0-0", "input": "If an image shows at least two but no more than three over-lapping squarish pieces of sliced bread.", "output": "[\"SELECT['pieces of sliced bread']\", \"FILTER['#1', 'that are squarish']\", \"FILTER['#2', 'that are over-lapping']\", \"SELECT['images']\", \"GROUP['count', '#3', '#4']\", \"COMPARATIVE['#4', '#5', 'is at least two']\", \"COMPARATIVE['#6', '#5', 'is at most three']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-467-3-1", "input": "If there is fruit filling in the breads in one of the images.", "output": "[\"SELECT['breads']\", \"PROJECT['filling of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is fruit']\", \"BOOLEAN['#3', 'is in one of the images']\"]"}
{"id": "NLVR2_dev_dev-468-1-0", "input": "If blooming flowers are under the display window of one bookshop.", "output": "[\"SELECT['bookshops']\", \"PROJECT['display window of #REF', '#1']\", \"SELECT['flowers']\", \"FILTER['#3', 'that are blooming']\", \"COMPARATIVE['#1', '#2', 'has #4 under']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-468-3-1", "input": "If in one of the images the door to the shop is open.", "output": "[\"SELECT['shop']\", \"PROJECT['door of #REF', '#1']\", \"FILTER['#2', 'that is open']\", \"BOOLEAN['#3', 'is in one of the images']\"]"}
{"id": "NLVR2_dev_dev-469-1-0", "input": "If there are no more than four blinds.", "output": "[\"SELECT['blinds']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is at most four']\"]"}
{"id": "NLVR2_dev_dev-47-0-0", "input": "If a slice of the pizza cake has a fork to the left of it in one image.", "output": "[\"SELECT['slice of pizza cake']\", \"SELECT['fork']\", \"FILTER['#1', 'that has #2 to the left']\", \"BOOLEAN['#3', 'is in one image']\"]"}
{"id": "NLVR2_dev_dev-470-1-0", "input": "If at least one image in the pair includes a red blanket.", "output": "[\"SELECT['blanket']\", \"FILTER['#1', 'that is red']\", \"BOOLEAN['#2', 'is in at least one image in the pair']\"]"}
{"id": "NLVR2_dev_dev-471-0-0", "input": "If one stairway railing is made of four horizontal ropes.", "output": "[\"SELECT['stairway']\", \"PROJECT['railing of #REF', '#1']\", \"SELECT['ropes']\", \"FILTER['#3', 'that are horizontal']\", \"GROUP['count', '#4', '#2']\", \"COMPARATIVE['#2', '#5', 'is equal to four']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-472-2-0", "input": "If one seal in the right image has its mouth open.", "output": "[\"SELECT['right image']\", \"PROJECT['seals of #REF', '#1']\", \"PROJECT['mouth of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is open']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-472-3-1", "input": "If one image shows a large seal with wide-open mouth in the foreground, and the other image contains only close-mouthed seals.", "output": "[\"SELECT['one image']\", \"PROJECT['seal in #REF', '#1']\", \"FILTER['#2', 'that is large']\", \"PROJECT['mouth of #REF', '#3']\", \"COMPARATIVE['#3', '#4', 'is wide-open']\", \"BOOLEAN['#5', 'is in the foreground']\", \"SELECT['other image']\", \"PROJECT['seals in #REF', '#7']\", \"FILTER['#8', 'that are close-mouthed']\", \"AGGREGATE['count', '#8']\", \"AGGREGATE['count', '#9']\", \"BOOLEAN['#10', 'is equal to #11']\", \"BOOLEAN['logical_and', 'true', '#6', '#12']\"]"}
{"id": "NLVR2_dev_dev-473-1-1", "input": "If in at least one image there is a bird with an orange beck facing left toward the face of a horned buffalo.", "output": "[\"SELECT['bird']\", \"SELECT['beck']\", \"FILTER['#2', 'that is orange']\", \"FILTER['#1', 'with #3']\", \"SELECT['buffalo']\", \"FILTER['#5', 'that is horned']\", \"PROJECT['the face of #REF', '#6']\", \"FILTER['#4', 'facing left toward #7']\", \"PROJECT['images of #REF', '#8']\", \"AGGREGATE['count', '#9']\", \"BOOLEAN['#10', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-473-3-0", "input": "If a bird is standing on the back of a forward-facing water buffalo in each image.", "output": "[\"SELECT['bird']\", \"SELECT['water buffalo']\", \"FILTER['#2', 'that is forward-facing']\", \"PROJECT['back of #REF', '#3']\", \"FILTER['#1', 'that is standing on #4']\", \"SELECT['images']\", \"GROUP['count', '#5', '#6']\", \"COMPARATIVE['#6', '#7', 'is at least one']\", \"AGGREGATE['count', '#6']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is equal to #10']\"]"}
{"id": "NLVR2_dev_dev-474-0-0", "input": "If one dog is dyed to look like a panda.", "output": "[\"SELECT['dog']\", \"SELECT['panda']\", \"FILTER['#1', 'that is dyed to look like #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-474-1-1", "input": "If the left image features one forward-looking black chow with its blue tongue hanging out.", "output": "[\"SELECT['left image']\", \"PROJECT['chow in #REF', '#1']\", \"FILTER['#2', 'that is black']\", \"FILTER['#3', 'that is forward-looking']\", \"PROJECT['tongue of #REF', '#4']\", \"FILTER['#5', 'that is blue']\", \"FILTER['#4', 'that has #6 hanging out']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-475-0-0", "input": "If there are four or less mammals, and they are all standing still.", "output": "[\"SELECT['mammals']\", \"FILTER['#1', 'that are standing still']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at most four']\"]"}
{"id": "NLVR2_dev_dev-475-2-1", "input": "If in at least one image there is a single elk with their face straight forward.", "output": "[\"SELECT['elk']\", \"PROJECT['face of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is straight forward']\", \"SELECT['images']\", \"GROUP['count', '#3', '#4']\", \"COMPARATIVE['#4', '#5', 'is equal to one']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-476-1-0", "input": "If an image shows black ribbon bows used as trim on the lids of bottles of fragrance that are 3d rectangle shapes.", "output": "[\"SELECT['ribbon bows']\", \"FILTER['#1', 'that are black']\", \"FILTER['#2', 'used as trim']\", \"SELECT['bottles of fragrance']\", \"PROJECT['shape of #REF', '#4']\", \"COMPARATIVE['#4', '#5', 'is a 3d rectangle']\", \"PROJECT['the lids of #REF', '#6']\", \"FILTER['#3', 'on #7']\", \"BOOLEAN['#8', 'are in an image']\"]"}
{"id": "NLVR2_dev_dev-476-2-1", "input": "If there are three vials of perfume in one of the images.", "output": "[\"SELECT['images']\", \"PROJECT['vials of perfume in #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is equal to three']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-477-1-0", "input": "If the left and right image contains the same number of wall hanging soap dispensers with at least one of metal.", "output": "[\"SELECT['soap dispensers']\", \"FILTER['#1', 'that are wall hanging']\", \"SELECT['left image']\", \"SELECT['right image']\", \"FILTER['#2', 'that are in #3']\", \"FILTER['#2', 'that are in #4']\", \"AGGREGATE['count', '#5']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to #8']\", \"FILTER['#2', 'that is metal']\", \"AGGREGATE['count', '#10']\", \"BOOLEAN['#11', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#9', '#12']\"]"}
{"id": "NLVR2_dev_dev-478-0-0", "input": "If the left image has less dogs than the right.", "output": "[\"SELECT['left image']\", \"SELECT['right image']\", \"PROJECT['dogs of #REF', '#1']\", \"PROJECT['dogs of #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is lower than #6']\"]"}
{"id": "NLVR2_dev_dev-478-0-1", "input": "If all of the dogs in the images are running.", "output": "[\"SELECT['images']\", \"PROJECT['dogs in #REF', '#1']\", \"FILTER['#2', 'that are running']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#5', 'is equal to #4']\"]"}
{"id": "NLVR2_dev_dev-479-0-0", "input": "If each image shows fingerless mittens that don't have the 'fold-over flap' that would turn them into mittens.", "output": "[\"SELECT['mittens']\", \"FILTER['#1', 'that are fingerless']\", \"PROJECT['fold-over flap of #REF', '#2']\", \"FILTER['#2', 'where #3 would turn them into #1']\", \"DISCARD['#2', '#4']\", \"SELECT['images']\", \"GROUP['count', '#5', '#6']\", \"COMPARATIVE['#6', '#7', 'is at least one']\", \"AGGREGATE['count', '#6']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is equal to #10']\"]"}
{"id": "NLVR2_dev_dev-479-0-1", "input": "If there are two pairs of hands wearing gloves.", "output": "[\"SELECT['pairs of hands']\", \"SELECT['gloves']\", \"FILTER['#1', 'that are wearing #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-480-1-0", "input": "If the right image features a rectangular box containing three rows of four golf balls.", "output": "[\"SELECT['box']\", \"FILTER['#1', 'that is rectangular']\", \"SELECT['golf balls']\", \"PROJECT['rows of #REF', '#3']\", \"GROUP['count', '#3', '#4']\", \"COMPARATIVE['#4', '#5', 'is equal to four']\", \"FILTER['#2', 'containing #6']\", \"GROUP['count', '#6', '#7']\", \"COMPARATIVE['#7', '#8', 'is equal to three']\", \"BOOLEAN['#9', 'is in the right image']\"]"}
{"id": "NLVR2_dev_dev-480-2-1", "input": "If there is a golf ball on the grass.", "output": "[\"SELECT['golf ball']\", \"SELECT['grass']\", \"BOOLEAN['#1', 'is on #2']\"]"}
{"id": "NLVR2_dev_dev-48-1-0", "input": "If the right image contains no more than one glass perfume bottle.", "output": "[\"SELECT['right image']\", \"PROJECT['perfume bottles of #REF', '#1']\", \"FILTER['#2', 'that are glass']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at most one']\"]"}
{"id": "NLVR2_dev_dev-481-2-0", "input": "If there are more bottles in the image on the right.", "output": "[\"SELECT['images']\", \"FILTER['#1', 'on the right']\", \"PROJECT['bottles in #REF', '#1']\", \"PROJECT['bottles in #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['difference', '#5', '#6']\", \"BOOLEAN['#6', 'is higher than #7']\"]"}
{"id": "NLVR2_dev_dev-481-2-1", "input": "If all of the beer is in bottles.", "output": "[\"SELECT['beer']\", \"SELECT['bottles']\", \"FILTER['#1', 'that are in #2']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to #5']\"]"}
{"id": "NLVR2_dev_dev-482-0-0", "input": "If the right image shows a boy reaching into a vending machine to retrieve something", "output": "[\"SELECT['boy']\", \"SELECT['vending machine']\", \"FILTER['#1', 'reaching into #2']\", \"FILTER['#3', 'to retrieve something']\", \"BOOLEAN['#4', 'is in the right image']\"]"}
{"id": "NLVR2_dev_dev-482-2-1", "input": "If a person in blue jeans is bending and reaching into a slot in a machine.", "output": "[\"SELECT['person']\", \"SELECT['blue jeans']\", \"FILTER['#1', 'that is in #2']\", \"SELECT['machine']\", \"PROJECT['slot in #REF', '#4']\", \"BOOLEAN['#3', 'is bending']\", \"BOOLEAN['#3', 'is reaching into #5']\", \"BOOLEAN['logical_and', 'true', '#6', '#7']\"]"}
{"id": "NLVR2_dev_dev-483-0-1", "input": "If the left and right image contains no more than three bottles of lotion.", "output": "[\"SELECT['the left image']\", \"SELECT['the right image']\", \"PROJECT['bottles of lotion in #REF', '#1']\", \"PROJECT['bottles of lotion in #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['sum', '#5', '#6']\", \"BOOLEAN['#7', 'is at most three']\"]"}
{"id": "NLVR2_dev_dev-48-3-1", "input": "If at least one image shows a woman spraying a bottle of perfume, and at least one image includes a grouping of fragrance bottles without boxes.", "output": "[\"SELECT['woman']\", \"SELECT['bottle of perfume']\", \"FILTER['#1', 'spraying #2']\", \"BOOLEAN['#3', 'is in at least one image']\", \"SELECT['grouping of fragrance bottles']\", \"SELECT['boxes']\", \"FILTER['#5', 'without #6']\", \"BOOLEAN['#7', 'is in at least one image']\", \"BOOLEAN['logical_and', 'true', '#4', '#8']\"]"}
{"id": "NLVR2_dev_dev-483-2-0", "input": "If there are more than three bottles of lotion.", "output": "[\"SELECT['bottles of lotion']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is higher than three']\"]"}
{"id": "NLVR2_dev_dev-484-0-1", "input": "If the left and right image contains the same number of dogs one being gray and the other brown and black.", "output": "[\"SELECT['the left image']\", \"SELECT['the right image']\", \"PROJECT['dogs in #REF', '#1']\", \"PROJECT['dogs in #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to #6']\", \"FILTER['#3', 'that are gray']\", \"FILTER['#4', 'that are gray']\", \"AGGREGATE['count', '#8']\", \"AGGREGATE['count', '#9']\", \"ARITHMETIC['sum', '#10', '#11']\", \"BOOLEAN['#12', 'is equal to one']\", \"FILTER['#3', 'that are brown and black']\", \"FILTER['#4', 'that are brown and black']\", \"AGGREGATE['count', '#14']\", \"AGGREGATE['count', '#15']\", \"ARITHMETIC['sum', '#16', '#17']\", \"BOOLEAN['#18', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#13', '#19']\", \"BOOLEAN['logical_and', 'true', '#7', '#20']\"]"}
{"id": "NLVR2_dev_dev-484-1-0", "input": "If each image contains exactly one puppy and no adult dogs, and the left image features a tri-color puppy in a sitting pose.", "output": "[\"SELECT['images']\", \"PROJECT['dogs in #REF', '#1']\", \"FILTER['#2', 'that are puppies']\", \"FILTER['#2', 'that are adults']\", \"GROUP['count', '#3', '#1']\", \"GROUP['count', '#4', '#1']\", \"COMPARATIVE['#1', '#5', 'is equal to one']\", \"COMPARATIVE['#1', '#6', 'is equal to zero']\", \"INTERSECTION['#1', '#7', '#8']\", \"AGGREGATE['count', '#9']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#10', 'is equal to #11']\", \"SELECT['puppy']\", \"FILTER['#13', 'that is tri-color']\", \"FILTER['#14', 'in a sitting pose']\", \"BOOLEAN['#15', 'is in the left image']\", \"BOOLEAN['logical_and', 'true', '#12', '#16']\"]"}
{"id": "NLVR2_dev_dev-485-0-1", "input": "If in the left image a bird has its wings spread.", "output": "[\"SELECT['bird']\", \"PROJECT['wings of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'are spread']\", \"BOOLEAN['#3', 'is in the left image']\"]"}
{"id": "NLVR2_dev_dev-485-1-0", "input": "If at least 2 vultures are sitting in a tree in one of the pictures.", "output": "[\"SELECT['vultures']\", \"SELECT['a tree']\", \"FILTER['#1', 'sitting in #2']\", \"PROJECT['pictures of #REF', '#3']\", \"GROUP['count', '#3', '#4']\", \"COMPARATIVE['#4', '#5', 'is at least 2']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-486-0-0", "input": "If there are 3 pairs of slippers", "output": "[\"SELECT['slippers']\", \"PROJECT['pair of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to 3']\"]"}
{"id": "NLVR2_dev_dev-486-3-1", "input": "If there are more than 3 women wearing slippers.", "output": "[\"SELECT['women']\", \"SELECT['slippers']\", \"FILTER['#1', 'wearing #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is higher than 3']\"]"}
{"id": "NLVR2_dev_dev-487-0-0", "input": "If in at least one image there is a sofa chair in front of brown blinds.", "output": "[\"SELECT['sofa chair']\", \"SELECT['blinds']\", \"FILTER['#2', 'that are brown']\", \"FILTER['#1', 'in front of #3']\", \"PROJECT['images of #REF', '#4']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-487-0-1", "input": "If one window shade is partially pulled up.", "output": "[\"SELECT['window']\", \"PROJECT['shade of #REF', '#1']\", \"FILTER['#2', 'that is partially pulled up']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-488-0-0", "input": "If the right image contains no more than four televisions.", "output": "[\"SELECT['right image']\", \"PROJECT['televisions of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at most four']\"]"}
{"id": "NLVR2_dev_dev-488-2-1", "input": "If televisions are stacked in a single column that is four devices high.", "output": "[\"SELECT['televisions']\", \"FILTER['#1', 'stacked in a single column']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to four']\"]"}
{"id": "NLVR2_dev_dev-489-0-0", "input": "If at least four women are wearing graduations caps.", "output": "[\"SELECT['women']\", \"SELECT['graduation caps']\", \"FILTER['#1', 'wearing #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least four']\"]"}
{"id": "NLVR2_dev_dev-489-0-1", "input": "If one of the young female graduates is wearing black glasses.", "output": "[\"SELECT['graduates']\", \"FILTER['#1', 'that is female']\", \"FILTER['#2', 'that is young']\", \"PROJECT['glasses of #REF', '#3']\", \"FILTER['#4', 'that are black']\", \"FILTER['#3', 'that has #5']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-49-0-1", "input": "If the dog on the left appears to have a blue tongue.", "output": "[\"SELECT['dog']\", \"FILTER['#1', 'on the left']\", \"PROJECT['tongue of #REF', '#2']\", \"BOOLEAN['#3', 'is blue']\"]"}
{"id": "NLVR2_dev_dev-490-1-0", "input": "If one image shows a llama chewing on a mouthful of grass.", "output": "[\"SELECT['llama']\", \"SELECT['mouthful of grass']\", \"FILTER['#1', 'that is chewing on #2']\", \"BOOLEAN['#3', 'is in one image']\"]"}
{"id": "NLVR2_dev_dev-490-2-1", "input": "If the left and right image contains the same number of llamas.", "output": "[\"SELECT['left image']\", \"PROJECT['llamas in #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"SELECT['right image']\", \"PROJECT['llamas in #REF', '#4']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#3', 'is equal to #6']\"]"}
{"id": "NLVR2_dev_dev-491-3-0", "input": "If in one image, a gorilla is sitting with its knees bent and at least one arm resting on a knee.", "output": "[\"SELECT['gorilla']\", \"FILTER['#1', 'that is sitting']\", \"PROJECT['knees of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'are bent']\", \"PROJECT['arms of #REF', '#4']\", \"FILTER['#5', 'that is resting on #3']\", \"GROUP['count', '#6', '#4']\", \"COMPARATIVE['#4', '#7', 'is at least one']\", \"BOOLEAN['#8', 'is in one image']\"]"}
{"id": "NLVR2_dev_dev-49-2-0", "input": "If each image shows a chow with an open mouth showing a blue tongue, and no chow is wearing any kind of adornment.", "output": "[\"SELECT['chow']\", \"PROJECT['mouth of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is open']\", \"SELECT['tongue']\", \"FILTER['#4', 'that is blue']\", \"FILTER['#3', 'showing #5']\", \"PROJECT['images of #REF', '#6']\", \"SELECT['images']\", \"AGGREGATE['count', '#7']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is equal to #10']\", \"FILTER['#1', 'in #8']\", \"SELECT['adornment']\", \"FILTER['#12', 'wearing #13']\", \"AGGREGATE['count', '#14']\", \"BOOLEAN['#15', 'is equal to zero']\", \"BOOLEAN['logical_and', 'true', '#11', '#16']\"]"}
{"id": "NLVR2_dev_dev-492-2-0", "input": "If the cabinet on the left has three shelves and the one on the right has more than three.", "output": "[\"SELECT['cabinets']\", \"FILTER['#1', 'that is on the left']\", \"PROJECT['shelves of #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to three']\", \"FILTER['#1', 'that is on the right']\", \"PROJECT['shelves of #REF', '#6']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is higher than three']\", \"BOOLEAN['logical_and', 'true', '#5', '#9']\"]"}
{"id": "NLVR2_dev_dev-492-2-1", "input": "If a cabinet has straight legs", "output": "[\"SELECT['cabinet']\", \"PROJECT['legs of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'are straight']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-493-0-0", "input": "If there are at least 3 deer in a tree eating in the image pair", "output": "[\"SELECT['image pair']\", \"PROJECT['deer of #REF', '#1']\", \"SELECT['tree']\", \"FILTER['#2', 'in #3']\", \"FILTER['#4', 'that are eating']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is at least 3']\"]"}
{"id": "NLVR2_dev_dev-493-3-1", "input": "If all the animals are on four legs.", "output": "[\"SELECT['animals']\", \"PROJECT['legs that #REF are on', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is equal to four']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to #6']\"]"}
{"id": "NLVR2_dev_dev-494-1-1", "input": "If two dogs can be seen.", "output": "[\"SELECT['dogs']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-494-3-0", "input": "If the left image features one non-reclining basset hound with its ears extending from its face instead of drooping at the sides.", "output": "[\"SELECT['the left image']\", \"PROJECT['basset hounds in #REF', '#1']\", \"FILTER['#2', 'that are non-reclining']\", \"PROJECT['ears of #REF', '#3']\", \"PROJECT['face of #REF', '#3']\", \"COMPARATIVE['#3', '#4', 'are extending from #5']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-495-3-0", "input": "If one of the dogs has a black back.", "output": "[\"SELECT['dogs']\", \"PROJECT['back of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is black']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-496-0-0", "input": "If one of the pictures shows a lot more than five organisms on a beach.", "output": "[\"SELECT['organisms']\", \"SELECT['a beach']\", \"FILTER['#1', 'on #2']\", \"PROJECT['pictures of #REF', '#3']\", \"GROUP['count', '#3', '#4']\", \"COMPARATIVE['#4', '#5', 'is higher than five']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-496-1-1", "input": "If in one of the two images you can see a beach covered with jellyfish.", "output": "[\"SELECT['beach']\", \"SELECT['jellyfish']\", \"FILTER['#1', 'covered with #2']\", \"PROJECT['images of #REF', '#3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-497-0-1", "input": "If each image shows one nearly white afghan hound, and the hound in the right image has its hair blowing to the left.", "output": "[\"SELECT['images']\", \"PROJECT['afghan hounds in #REF', '#1']\", \"FILTER['#2', 'that are nearly white']\", \"GROUP['count', '#3', '#1']\", \"COMPARATIVE['#1', '#4', 'is equal to one']\", \"AGGREGATE['count', '#5']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#6', 'is equal to #7']\", \"SELECT['the right image']\", \"PROJECT['afghan hound in #REF', '#9']\", \"PROJECT['hair of #REF', '#10']\", \"BOOLEAN['#11', 'is blowing to the left']\", \"BOOLEAN['logical_and', 'true', '#8', '#12']\"]"}
{"id": "NLVR2_dev_dev-497-1-0", "input": "If the right image contains one dog outside on grass.", "output": "[\"SELECT['right image']\", \"PROJECT['dog in #REF', '#1']\", \"PROJECT['grass in #REF', '#1']\", \"FILTER['#2', 'that is outside']\", \"FILTER['#4', 'that is on #3']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-498-1-0", "input": "If the dog in the image on the right is standing up.", "output": "[\"SELECT['right image']\", \"PROJECT['dog in #REF', '#1']\", \"BOOLEAN['#2', 'is standing up']\"]"}
{"id": "NLVR2_dev_dev-498-3-1", "input": "If one beagle is standing on all fours, and one beagle is sitting.", "output": "[\"SELECT['beagles']\", \"FILTER['#1', 'that are standing on all fours']\", \"FILTER['#1', 'that are sitting']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to one']\", \"BOOLEAN['#5', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#6', '#7']\"]"}
{"id": "NLVR2_dev_dev-499-1-1", "input": "If the left and right image contains the same number of antelope.", "output": "[\"SELECT['the left image']\", \"SELECT['the right image']\", \"PROJECT['antelopes in #REF', '#1']\", \"PROJECT['antelopes in #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to #6']\"]"}
{"id": "NLVR2_dev_dev-499-2-0", "input": "If each image includes exactly one adult animal with curved horns, and the right image features a horned animal with body aimed leftward and head turned forward.", "output": "[\"SELECT['images']\", \"PROJECT['animals in #REF', '#1']\", \"FILTER['#2', 'that are adults']\", \"SELECT['horns']\", \"FILTER['#4', 'that are curved']\", \"FILTER['#3', 'with #5']\", \"GROUP['count', '#6', '#1']\", \"COMPARATIVE['#1', '#7', 'is equal to one']\", \"AGGREGATE['count', '#8']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#9', 'is equal to #10']\", \"SELECT['animal']\", \"FILTER['#12', 'that is horned']\", \"PROJECT['body of #REF', '#13']\", \"COMPARATIVE['#13', '#14', 'is aimed leftward']\", \"PROJECT['head of #REF', '#15']\", \"COMPARATIVE['#15', '#16', 'is turned forward']\", \"BOOLEAN['#17', 'is in the right image']\", \"BOOLEAN['logical_and', 'true', '#11', '#18']\"]"}
{"id": "NLVR2_dev_dev-5-0-0", "input": "If in 1 of the images, 1 bookstore has a staircase.", "output": "[\"SELECT['bookstore']\", \"SELECT['staircase']\", \"FILTER['#1', 'that has #2']\", \"SELECT['images']\", \"GROUP['count', '#3', '#4']\", \"COMPARATIVE['#4', '#5', 'is equal to one']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-50-0-0", "input": "If the pencil pouch in the right image had a logo with a mountain on it", "output": "[\"SELECT['right image']\", \"PROJECT['pencil pouch in #REF', '#1']\", \"PROJECT['logo of #REF', '#2']\", \"FILTER['#3', 'that is with a mountain']\", \"BOOLEAN['#2', 'has #4 on']\"]"}
{"id": "NLVR2_dev_dev-500-3-0", "input": "If each image includes exactly one reclining wolf, one image shows a snowy scene, and one image features a wolf with mostly light fur.", "output": "[\"SELECT['images']\", \"PROJECT['wolves in #REF', '#1']\", \"FILTER['#2', 'that are reclining']\", \"GROUP['count', '#3', '#1']\", \"COMPARATIVE['#1', '#4', 'is equal to one']\", \"AGGREGATE['count', '#5']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#6', 'is equal to #7']\", \"SELECT['snowy scene']\", \"BOOLEAN['#9', 'is in one image']\", \"SELECT['wolf']\", \"PROJECT['fur of #REF', '#11']\", \"SUPERLATIVE['max', '#11', '#12']\", \"BOOLEAN['#13', 'is in one image']\", \"BOOLEAN['logical_and', 'true', '#8', '#10']\", \"BOOLEAN['logical_and', 'true', '#14', '#15']\"]"}
{"id": "NLVR2_dev_dev-500-3-1", "input": "If the wolves in the left image are in snow.", "output": "[\"SELECT['left image']\", \"PROJECT['wolves of #REF', '#1']\", \"SELECT['snow']\", \"BOOLEAN['#2', 'are in #3']\"]"}
{"id": "NLVR2_dev_dev-501-3-0", "input": "If one image shows two chihuahuas side-by-side, and the other shows one chihuahua posed on patterned fabric.", "output": "[\"SELECT['one image']\", \"PROJECT['chihuahuas in #REF', '#1']\", \"FILTER['#2', 'that are side-by-side']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to two']\", \"SELECT['other image']\", \"PROJECT['chihuahua in #REF', '#6']\", \"PROJECT['fabric in #REF', '#6']\", \"FILTER['#8', 'that is patterned']\", \"FILTER['#7', 'that is posed on #9']\", \"AGGREGATE['count', '#10']\", \"BOOLEAN['#11', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#5', '#12']\"]"}
{"id": "NLVR2_dev_dev-501-3-1", "input": "If there are two chihuahuas in the left image.", "output": "[\"SELECT['the left image']\", \"PROJECT['chihuahuas in #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-502-2-1", "input": "If there is no more than one tennis shoe in the right image.", "output": "[\"SELECT['right image']\", \"PROJECT['tennis shoes in #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at most one']\"]"}
{"id": "NLVR2_dev_dev-503-2-0", "input": "If there is a silver drain plug in the basin in the image on the right.", "output": "[\"SELECT['right image']\", \"PROJECT['basin of #REF', '#1']\", \"SELECT['drain plug']\", \"FILTER['#3', 'that is silver']\", \"BOOLEAN['#4', 'is in #2']\"]"}
{"id": "NLVR2_dev_dev-503-3-1", "input": "If two white sinks are the same shape, one larger than the other, neither of them installed or with a faucet fixture.", "output": "[\"SELECT['sinks']\", \"FILTER['#1', 'that are white']\", \"PROJECT['shape of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is the same']\", \"PROJECT['size of #REF', '#4']\", \"COMPARATIVE['#4', '#5', 'is not the same']\", \"PROJECT['#REF that are', '#6']\", \"FILTER['#7', 'stalled']\", \"DISCARD['#7', '#8']\", \"SELECT['faucet fixture']\", \"FILTER['#9', 'with #10']\", \"DISCARD['#9', '#11']\", \"AGGREGATE['count', '#12']\", \"BOOLEAN['#13', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-504-0-0", "input": "If the dog in one of the images is standing on the grass.", "output": "[\"SELECT['dog']\", \"SELECT['the grass']\", \"FILTER['#1', 'standing on #2']\", \"BOOLEAN['#3', 'is in one of the images']\"]"}
{"id": "NLVR2_dev_dev-504-0-1", "input": "If each image shows a dog with dark fur on its ears, and at least one dog wears a collar.", "output": "[\"SELECT['dog']\", \"PROJECT['ears of #REF', '#1']\", \"PROJECT['fur of #REF', '#2']\", \"COMPARATIVE['#1', '#3', 'is dark']\", \"PROJECT['images of #REF', '#4']\", \"SELECT['images']\", \"AGGREGATE['count', '#5']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to #8']\", \"SELECT['collar']\", \"FILTER['#1', 'that wears']\", \"FILTER['#11', 'in #6']\", \"AGGREGATE['count', '#12']\", \"BOOLEAN['#13', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#9', '#14']\"]"}
{"id": "NLVR2_dev_dev-505-1-1", "input": "If the hyenas are tearing into a fallen zebra in each of the images.", "output": "[\"SELECT['hyenas']\", \"SELECT['zebra']\", \"FILTER['#2', 'that is fallen']\", \"FILTER['#1', 'that are tearing into #3']\", \"SELECT['images']\", \"GROUP['count', '#4', '#5']\", \"COMPARATIVE['#5', '#6', 'is at least two']\", \"AGGREGATE['count', '#5']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is equal to #9']\"]"}
{"id": "NLVR2_dev_dev-506-2-0", "input": "If one basin is square and one is round.", "output": "[\"SELECT['basins']\", \"FILTER['#1', 'that are square']\", \"FILTER['#1', 'that are round']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to one']\", \"BOOLEAN['#5', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#6', '#7']\"]"}
{"id": "NLVR2_dev_dev-506-3-1", "input": "If the left image features a white sink mounted to a dark wall, with exposed pipe under the sink and a squarish object hanging above it.", "output": "[\"SELECT['sink']\", \"FILTER['#1', 'that is white']\", \"SELECT['wall']\", \"FILTER['#3', 'that is dark']\", \"FILTER['#2', 'mounted to #4']\", \"SELECT['pipe']\", \"FILTER['#6', 'under #5']\", \"FILTER['#7', 'that is exposed']\", \"FILTER['#5', 'with #8']\", \"SELECT['object']\", \"FILTER['#10', 'that is squarish']\", \"FILTER['#11', 'hanging above #5']\", \"FILTER['#9', 'with #12']\", \"BOOLEAN['#13', 'is in the left image']\"]"}
{"id": "NLVR2_dev_dev-507-0-0", "input": "If two camera-facing collie dogs are posed reclining side-by-side in one image.", "output": "[\"SELECT['collie dogs']\", \"FILTER['#1', 'that are camera-facing']\", \"FILTER['#2', 'that are posed reclining']\", \"FILTER['#3', 'that are side-by-side']\", \"SELECT['images']\", \"GROUP['count', '#4', '#5']\", \"COMPARATIVE['#5', '#6', 'is equal to two']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-508-3-1", "input": "If in at least one image, there is a pizza served on a round metal dish.", "output": "[\"SELECT['pizza']\", \"SELECT['dish']\", \"FILTER['#2', 'that is round']\", \"FILTER['#3', 'that is metal']\", \"FILTER['#1', 'served on #4']\", \"BOOLEAN['#5', 'is in at least one image']\"]"}
{"id": "NLVR2_dev_dev-509-0-1", "input": "If lamps are mounted near a vanity in one of the images and they are all on.", "output": "[\"SELECT['lamps']\", \"SELECT['vanity']\", \"FILTER['#1', 'mounted near #2']\", \"FILTER['#3', 'that are all on']\", \"BOOLEAN['#4', 'are in one of the images']\"]"}
{"id": "NLVR2_dev_dev-510-0-1", "input": "If a woman is holding a bottle to her mouth in the left image.", "output": "[\"SELECT['left image']\", \"PROJECT['woman in #REF', '#1']\", \"PROJECT['bottle in #REF', '#1']\", \"PROJECT['mouth of #REF', '#2']\", \"FILTER['#2', 'that is holding #3 to #4']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-51-0-1", "input": "If at least one dog can be seen wearing a collar and leash.", "output": "[\"SELECT['dogs']\", \"SELECT['collars']\", \"SELECT['leashes']\", \"FILTER['#1', 'that are wearing #2']\", \"FILTER['#4', 'that are wearing #3']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-511-1-1", "input": "If there are exactly two fluffy dogs and no reflections.", "output": "[\"SELECT['dogs']\", \"FILTER['#1', 'that are fluffy']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to two']\", \"SELECT['reflections']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to zero']\", \"BOOLEAN['logical_and', 'true', '#4', '#7']\"]"}
{"id": "NLVR2_dev_dev-512-3-0", "input": "If there is a television in the room.", "output": "[\"SELECT['television']\", \"SELECT['room']\", \"BOOLEAN['#1', 'is in #2']\"]"}
{"id": "NLVR2_dev_dev-51-3-0", "input": "If each image shows a white dog standing without use of an aid or prosthetic, and the left image shows a three-legged dog on green grass.", "output": "[\"SELECT['dog']\", \"FILTER['#1', 'that is white']\", \"SELECT['aid']\", \"SELECT['prosthetic']\", \"FILTER['#2', 'standing without use of #3']\", \"FILTER['#2', 'standing without use of #4']\", \"UNION['#5', '#6']\", \"PROJECT['images of #REF', '#7']\", \"SELECT['images']\", \"AGGREGATE['count', '#8']\", \"AGGREGATE['count', '#9']\", \"BOOLEAN['#10', 'is equal to #11']\", \"FILTER['#1', 'that is three-legged']\", \"SELECT['grass']\", \"FILTER['#14', 'that is green']\", \"FILTER['#13', 'on #15']\", \"BOOLEAN['#16', 'is in the left image']\", \"BOOLEAN['logical_and', 'true', '#12', '#17']\"]"}
{"id": "NLVR2_dev_dev-513-0-0", "input": "If the right image contains kitchen utensils.", "output": "[\"SELECT['kitchen utensil']\", \"BOOLEAN['#1', 'is in right image']\"]"}
{"id": "NLVR2_dev_dev-513-1-1", "input": "If there is a bowl of mashed potatoes with melted butter on top", "output": "[\"SELECT['bowl of mashed potatoes']\", \"SELECT['butter']\", \"FILTER['#2', 'that is melted']\", \"PROJECT['top of #REF', '#1']\", \"FILTER['#3', 'that is on #4']\", \"FILTER['#1', 'that has #5']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-514-0-0", "input": "If exactly one zebra is looking straight at the camera.", "output": "[\"SELECT['zebras']\", \"FILTER['#1', 'that are looking straight at the camera']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-514-2-1", "input": "If one image shows a young zebra next to a leftward-facing grazing adult zebra.", "output": "[\"SELECT['zebra']\", \"FILTER['#1', 'that is young']\", \"FILTER['#1', 'that is a adult']\", \"FILTER['#3', 'that is leftward-facing']\", \"FILTER['#4', 'that is grazing']\", \"FILTER['#2', 'next to #5']\", \"BOOLEAN['#6', 'is in one image']\"]"}
{"id": "NLVR2_dev_dev-515-2-1", "input": "If the left image has at least two pillows inside of the canopy", "output": "[\"SELECT['the left image']\", \"PROJECT['pillows in #REF', '#1']\", \"PROJECT['the canopy in #REF', '#1']\", \"FILTER['#2', 'inside of #3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least two']\"]"}
{"id": "NLVR2_dev_dev-515-3-0", "input": "If one net has pale blue trim.", "output": "[\"SELECT['nets']\", \"PROJECT['trim of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is pale blue']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-516-1-0", "input": "If one image shows a round white plate containing crab, lemon wedges, green garnish and small bowls of condiments.", "output": "[\"SELECT['plate']\", \"FILTER['#1', 'that is white']\", \"FILTER['#2', 'that is round']\", \"SELECT['crab']\", \"FILTER['#3', 'that is containing #4']\", \"SELECT['lemon wedges']\", \"SELECT['garnish']\", \"FILTER['#7', 'that is green']\", \"SELECT['bowls of condiments']\", \"FILTER['#9', 'that are small']\", \"UNION['#5', '#6', '#8', '#10']\", \"BOOLEAN['#11', 'is in one image']\"]"}
{"id": "NLVR2_dev_dev-516-3-1", "input": "If there are three crabs in one image and lemons around a crab in the other image.", "output": "[\"SELECT['one image']\", \"PROJECT['crabs in #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to three']\", \"SELECT['other image']\", \"PROJECT['crab in #REF', '#5']\", \"PROJECT['lemons in #REF', '#5']\", \"BOOLEAN['#7', 'are around #6']\", \"BOOLEAN['logical_and', 'true', '#4', '#8']\"]"}
{"id": "NLVR2_dev_dev-517-1-1", "input": "If you can see a mirror in the image on the left.", "output": "[\"SELECT['left image']\", \"PROJECT['mirror in #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-517-2-0", "input": "If in at least one image the wall is made of tile", "output": "[\"SELECT['wall']\", \"SELECT['tile']\", \"FILTER['#1', 'that is made of #2']\", \"BOOLEAN['#3', 'is in at least one image']\"]"}
{"id": "NLVR2_dev_dev-518-1-0", "input": "If one dog is standing on tile.", "output": "[\"SELECT['dog']\", \"SELECT['tile']\", \"FILTER['#1', 'that is standing on #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-518-2-1", "input": "If the left image shows one forward-facing sitting husky, and the right image shows a hand reaching to touch the face of a husky.", "output": "[\"SELECT['left image']\", \"PROJECT['husky in #REF', '#1']\", \"FILTER['#2', 'that is sitting']\", \"FILTER['#3', 'that is forward-facing']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to one']\", \"SELECT['right image']\", \"PROJECT['husky in #REF', '#7']\", \"PROJECT['face of #REF', '#8']\", \"PROJECT['hand in #REF', '#7']\", \"FILTER['#10', 'that is reaching to touch #9']\", \"AGGREGATE['count', '#11']\", \"BOOLEAN['#12', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#6', '#13']\"]"}
{"id": "NLVR2_dev_dev-519-1-0", "input": "If one of the open laptops is actually a mirror.", "output": "[\"SELECT['laptops']\", \"FILTER['#1', 'that are open']\", \"FILTER['#2', 'that are actually mirrors']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-519-1-1", "input": "If one image contains exactly three devices, and the other image features one central device with its screen open to nearly 90-degrees.", "output": "[\"SELECT['one image']\", \"PROJECT['devices in #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to three']\", \"SELECT['the other image']\", \"PROJECT['devices in #REF', '#5']\", \"FILTER['#6', 'that are central']\", \"PROJECT['screen of #REF', '#7']\", \"COMPARATIVE['#7', '#8', 'is open to nearly 90-degrees']\", \"AGGREGATE['count', '#9']\", \"BOOLEAN['#10', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#4', '#11']\"]"}
{"id": "NLVR2_dev_dev-52-0-0", "input": "If one image contains a cup with a handle but no saucer.", "output": "[\"SELECT['cup']\", \"FILTER['#1', 'with a handle']\", \"PROJECT['images of #REF', '#2']\", \"PROJECT['saucers in #REF', '#3']\", \"GROUP['count', '#4', '#3']\", \"COMPARATIVE['#3', '#5', 'is equal to zero']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-52-0-1", "input": "If an image shows a side view of one white cup on a saucer, with a soft-focus bar background.", "output": "[\"SELECT['cup']\", \"FILTER['#1', 'that is white']\", \"SELECT['saucer']\", \"FILTER['#2', 'on #3']\", \"SELECT['bar background']\", \"FILTER['#5', 'that is soft-focus']\", \"FILTER['#4', 'with #6']\", \"PROJECT['side view of #REF', '#7']\", \"BOOLEAN['#8', 'is in an image']\"]"}
{"id": "NLVR2_dev_dev-520-3-0", "input": "If one of the images shows a hyena lying on its back and the other image shows a single hyena.", "output": "[\"SELECT['one image']\", \"PROJECT['hyenas in #REF', '#1']\", \"PROJECT['back of #REF', '#2']\", \"FILTER['#2', 'that is lying on #3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least one']\", \"SELECT['other image']\", \"PROJECT['hyenas in #REF', '#7']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is equal the one']\", \"BOOLEAN['logical_and', 'true', '#6', '#10']\"]"}
{"id": "NLVR2_dev_dev-520-3-1", "input": "If the right image shows one hyena lying on its back with its head and at least its front paws raised.", "output": "[\"SELECT['the right image']\", \"PROJECT['hyenas in #REF', '#1']\", \"PROJECT['back of #REF', '#2']\", \"FILTER['#2', 'lying on #3']\", \"PROJECT['head of #REF', '#4']\", \"PROJECT['front paws of #REF', '#4']\", \"COMPARATIVE['#4', '#5', 'is raised']\", \"COMPARATIVE['#4', '#6', 'are raised']\", \"INTERSECTION['#4', '#7', '#8']\", \"AGGREGATE['count', '#9']\", \"BOOLEAN['#10', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-522-2-0", "input": "If the paper towels in only one of the pictures are part of a stack.", "output": "[\"SELECT['towels']\", \"FILTER['#1', 'that are paper']\", \"SELECT['stack']\", \"FILTER['#2', 'that are part of #3']\", \"PROJECT['pictures of #REF', '#4']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-522-3-1", "input": "If the napkins in the left image are folded into squares and stacked.", "output": "[\"SELECT['napkins']\", \"FILTER['#1', 'that are folded into squares']\", \"FILTER['#2', 'that are stacked']\", \"BOOLEAN['#3', 'are in the left image']\"]"}
{"id": "NLVR2_dev_dev-523-1-1", "input": "If all of the animals are dogs and at least one is playing with a toy.", "output": "[\"SELECT['animals']\", \"SELECT['dogs']\", \"SELECT['toys']\", \"FILTER['#2', 'playing with #3']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#6', 'is equal to #5']\", \"BOOLEAN['#7', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#8', '#9']\"]"}
{"id": "NLVR2_dev_dev-523-3-0", "input": "If one of the images shows a single dog and the other shows two dogs playing.", "output": "[\"SELECT['one image']\", \"PROJECT['dog in #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to one']\", \"SELECT['other image']\", \"PROJECT['dogs in #REF', '#5']\", \"FILTER['#6', 'that are playing']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is equal to two']\", \"BOOLEAN['logical_and', 'true', '#4', '#9']\"]"}
{"id": "NLVR2_dev_dev-524-1-0", "input": "If one image features yellow dandelions and one white dog.", "output": "[\"SELECT['dandelions']\", \"FILTER['#1', 'that are yellow']\", \"PROJECT['images of #REF', '#2']\", \"PROJECT['dogs in #REF', '#3']\", \"FILTER['#4', 'that are white']\", \"GROUP['count', '#5', '#3']\", \"COMPARATIVE['#3', '#6', 'is equal to one']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-524-1-1", "input": "If the front paws of the dog in the image on the left are not touching the ground.", "output": "[\"SELECT['the image on the left']\", \"PROJECT['the dog in #REF', '#1']\", \"PROJECT['front paws of #REF', '#2']\", \"PROJECT['the ground in #REF', '#1']\", \"BOOLEAN['#3', 'are not touching #4']\"]"}
{"id": "NLVR2_dev_dev-525-1-1", "input": "If the combined images contain four pillows, with at least two of them square.", "output": "[\"SELECT['images']\", \"PROJECT['pillows in #REF', '#1']\", \"FILTER['#2', 'that are square']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to four']\", \"BOOLEAN['#5', 'is at least two']\", \"BOOLEAN['logical_and', 'true', '#6', '#7']\"]"}
{"id": "NLVR2_dev_dev-526-2-0", "input": "If there are more than two long haired dogs.", "output": "[\"SELECT['dogs']\", \"FILTER['#1', 'that are long haired']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is higher than two']\"]"}
{"id": "NLVR2_dev_dev-526-2-1", "input": "If one image contains at least twice as many hounds as the other image, and no hounds are standing in profile.", "output": "[\"SELECT['one image']\", \"PROJECT['hounds in #REF', '#1']\", \"FILTER['#2', 'that are standing in profile']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"SELECT['the other image']\", \"PROJECT['hounds in #REF', '#6']\", \"FILTER['#7', 'that are standing in profile']\", \"AGGREGATE['count', '#7']\", \"AGGREGATE['count', '#8']\", \"ARITHMETIC['division', '#4', '#9']\", \"BOOLEAN['#11', 'is at least two']\", \"ARITHMETIC['sum', '#5', '#10']\", \"BOOLEAN['#13', 'is equal to zero']\", \"BOOLEAN['logical_and', 'true', '#12', '#14']\"]"}
{"id": "NLVR2_dev_dev-527-3-1", "input": "If there is at least one person on the bus.", "output": "[\"SELECT['bus']\", \"SELECT['person']\", \"FILTER['#2', 'on #1']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-528-2-1", "input": "If the rear badge on at least one of the cars is visible.", "output": "[\"SELECT['cars']\", \"PROJECT['rear badges of #REF', '#1']\", \"FILTER['#2', 'that are visible']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-528-3-0", "input": "If the left image shows a black rear-facing car parked on pavement with its top covered, and the right image features a light-colored car with its top at least partly down.", "output": "[\"SELECT['car']\", \"FILTER['#1', 'that is black']\", \"FILTER['#2', 'that is rear-facing']\", \"SELECT['pavement']\", \"FILTER['#3', 'parked on #4']\", \"PROJECT['top of #REF', '#5']\", \"COMPARATIVE['#5', '#6', 'is covered']\", \"BOOLEAN['#7', 'is in the left image']\", \"FILTER['#1', 'that is light-colored']\", \"PROJECT['top of #REF', '#9']\", \"COMPARATIVE['#9', '#10', 'is at least partly down']\", \"BOOLEAN['#11', 'is in the right image']\", \"BOOLEAN['logical_and', 'true', '#8', '#12']\"]"}
{"id": "NLVR2_dev_dev-529-0-0", "input": "If there are two standing dogs.", "output": "[\"SELECT['dogs']\", \"FILTER['#1', 'that are standing']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-529-0-1", "input": "If each image shows only one dog, which is in a standing pose, and the right image features a dog with blowing fur and an upright curled tail.", "output": "[\"SELECT['dog']\", \"FILTER['#1', 'that is in standing pose']\", \"SELECT['images']\", \"GROUP['count', '#2', '#3']\", \"COMPARATIVE['#3', '#4', 'is equal to one']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to #7']\", \"SELECT['right image']\", \"FILTER['#1', 'that is in #9']\", \"PROJECT['fur of #REF', '#10']\", \"COMPARATIVE['#10', '#11', 'is blowing']\", \"PROJECT['tail of #REF', '#12']\", \"COMPARATIVE['#12', '#13', 'is curled']\", \"COMPARATIVE['#14', '#13', 'is upright']\", \"AGGREGATE['count', '#15']\", \"BOOLEAN['#16', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#8', '#17']\"]"}
{"id": "NLVR2_dev_dev-530-2-1", "input": "If there is a door in the left image.", "output": "[\"SELECT['door']\", \"BOOLEAN['#1', 'is in left image']\"]"}
{"id": "NLVR2_dev_dev-530-3-0", "input": "If one image shows one straight, continuous set of stairs while the other shows at least one landing or turn.", "output": "[\"SELECT['one image']\", \"PROJECT['set of stairs in #REF', '#1']\", \"FILTER['#2', 'that is continuous']\", \"FILTER['#3', 'that is straight']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to one']\", \"SELECT['other image']\", \"PROJECT['landing in #REF', '#7']\", \"PROJECT['turn in #REF', '#7']\", \"UNION['#8', '#9']\", \"AGGREGATE['count', '#10']\", \"BOOLEAN['#11', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#6', '#12']\"]"}
{"id": "NLVR2_dev_dev-531-3-0", "input": "If the right image shows one canoe on the water with at least six riders heading away from the camera.", "output": "[\"SELECT['right image']\", \"PROJECT['canoe in #REF', '#1']\", \"PROJECT['water in #REF', '#1']\", \"FILTER['#2', 'that is on #3']\", \"FILTER['#4', 'that is heading away from the camera']\", \"PROJECT['riders of #REF', '#5']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is at least six']\"]"}
{"id": "NLVR2_dev_dev-531-3-1", "input": "If the left and right image contains the same number of boats with at least one group of people wearing blue life jackets.", "output": "[\"SELECT['the left image']\", \"SELECT['the right image']\", \"PROJECT['boats in #REF', '#1']\", \"PROJECT['boats in #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to #6']\", \"PROJECT['groups of people in #REF', '#1']\", \"PROJECT['groups of people in #REF', '#2']\", \"SELECT['life jackets']\", \"FILTER['#10', 'that are blue']\", \"FILTER['#8', 'wearing #11']\", \"FILTER['#9', 'wearing #11']\", \"AGGREGATE['count', '#12']\", \"AGGREGATE['count', '#13']\", \"ARITHMETIC['sum', '#14', '#15']\", \"BOOLEAN['#16', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#7', '#17']\"]"}
{"id": "NLVR2_dev_dev-532-0-1", "input": "If a small dog looking at the camera is held by a human hand.", "output": "[\"SELECT['dog']\", \"FILTER['#1', 'that is small']\", \"SELECT['camera']\", \"FILTER['#2', 'that is looking at #3']\", \"SELECT['hand']\", \"FILTER['#5', 'that is human']\", \"BOOLEAN['#4', 'is held by #6']\"]"}
{"id": "NLVR2_dev_dev-532-3-0", "input": "If a chihuahua puppy appears to be within someone's hand.", "output": "[\"SELECT['chihuahua']\", \"FILTER['#1', 'that is a puppy']\", \"SELECT['a hand']\", \"BOOLEAN['#2', 'is within #3']\"]"}
{"id": "NLVR2_dev_dev-53-3-0", "input": "If reddish-pink illuminated letters are on a white background over the entrance of a store.", "output": "[\"SELECT['letters']\", \"FILTER['#1', 'that are illuminated']\", \"FILTER['#2', 'that are reddish-pink']\", \"PROJECT['background of #REF', '#3']\", \"COMPARATIVE['#3', '#4', 'is white']\", \"SELECT['store']\", \"PROJECT['entrance of #REF', '#6']\", \"BOOLEAN['#5', 'are over #7']\"]"}
{"id": "NLVR2_dev_dev-533-1-1", "input": "If each image shows a trio of fragrance bottles, and all bottles have sculptural figures on their lids.", "output": "[\"SELECT['images']\", \"PROJECT['fragrance bottles in #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is higher than two']\", \"AGGREGATE['count', '#4']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#5', 'is equal to #6']\", \"PROJECT['lid of #REF', '#2']\", \"SELECT['sculptural figures']\", \"COMPARATIVE['#2', '#8', 'has #9 on']\", \"AGGREGATE['count', '#10']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#11', 'is equal to #12']\", \"BOOLEAN['logical_and', 'true', '#7', '#13']\"]"}
{"id": "NLVR2_dev_dev-533-3-0", "input": "If the right image contains exactly three bottles.", "output": "[\"SELECT['right image']\", \"PROJECT['bottles in #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to three']\"]"}
{"id": "NLVR2_dev_dev-534-1-0", "input": "If all the instruments are laying on wood.", "output": "[\"SELECT['instruments']\", \"SELECT['wood']\", \"FILTER['#1', 'laying on #2']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is the same as #5']\"]"}
{"id": "NLVR2_dev_dev-535-1-1", "input": "If one of the primates in one of the images is raising a hand.", "output": "[\"SELECT['primate']\", \"PROJECT['hand of #REF', '#1']\", \"FILTER['#1', 'that is raising #2']\", \"BOOLEAN['#3', 'is in one of the images']\"]"}
{"id": "NLVR2_dev_dev-535-3-0", "input": "If one image shows a sitting chimpanzee clutching an animal to its chest.", "output": "[\"SELECT['chimpanzee']\", \"FILTER['#1', 'that is sitting']\", \"PROJECT['chest of #REF', '#2']\", \"SELECT['animal']\", \"FILTER['#2', 'that is clutching #4 to #3']\", \"BOOLEAN['#5', 'is in one image']\"]"}
{"id": "NLVR2_dev_dev-536-2-0", "input": "If all of the protective gear contains blue.", "output": "[\"SELECT['protective gear']\", \"FILTER['#1', 'that contains blue']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to #4']\"]"}
{"id": "NLVR2_dev_dev-536-2-1", "input": "If there are a variety of 9 pads.", "output": "[\"SELECT['pads']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is equal to 9']\"]"}
{"id": "NLVR2_dev_dev-537-0-1", "input": "If motored vehicles are parked near the dogs in one of the images.", "output": "[\"SELECT['motored vehicles']\", \"SELECT['the dogs']\", \"FILTER['#1', 'parked near #2']\", \"BOOLEAN['#3', 'are in one of the images']\"]"}
{"id": "NLVR2_dev_dev-537-2-0", "input": "If the right image shows crowds alongside the waving passenger and driver of a sled pulled by some bootie-wearing dogs.", "output": "[\"SELECT['right image']\", \"PROJECT['crowds in #REF', '#1']\", \"SELECT['passenger']\", \"FILTER['#3', 'that is waving']\", \"SELECT['sled']\", \"SELECT['dogs']\", \"FILTER['#6', 'that are bootie-wearing']\", \"FILTER['#5', 'that is pulled by #7']\", \"PROJECT['driver of #REF', '#8']\", \"FILTER['#2', 'alongside #4']\", \"BOOLEAN['#10', 'is alongside #9']\"]"}
{"id": "NLVR2_dev_dev-538-0-0", "input": "If in one image, at least three baby penguins are lying on the snow flat on their belly.", "output": "[\"SELECT['penguins']\", \"FILTER['#1', 'that are babies']\", \"SELECT['the snow']\", \"FILTER['#2', 'lying on #3']\", \"PROJECT['belly of #REF', '#4']\", \"FILTER['#4', 'flat on #5']\", \"PROJECT['images of #REF', '#6']\", \"GROUP['count', '#6', '#7']\", \"COMPARATIVE['#7', '#8', 'is at least three']\", \"AGGREGATE['count', '#9']\", \"BOOLEAN['#10', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-539-1-1", "input": "If a single cow is in a field in each of the images.", "output": "[\"SELECT['cows']\", \"SELECT['a field']\", \"FILTER['#1', 'in #2']\", \"PROJECT['images of #REF', '#3']\", \"GROUP['count', '#3', '#4']\", \"COMPARATIVE['#4', '#5', 'is equal to one']\", \"AGGREGATE['count', '#6']\", \"SELECT['images']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#7', 'is equal to #9']\"]"}
{"id": "NLVR2_dev_dev-539-3-0", "input": "If left and right images each contain one standing black buffalo in the foreground, and the buffalo in the two images are turned toward each other.", "output": "[\"SELECT['left image']\", \"SELECT['right image']\", \"PROJECT['foreground of #REF', '#1']\", \"PROJECT['foreground of #REF', '#2']\", \"PROJECT['buffalo in #REF', '#3']\", \"PROJECT['buffalo in #REF', '#4']\", \"FILTER['#5', 'that is black']\", \"FILTER['#6', 'that is black']\", \"FILTER['#7', 'that is standing']\", \"FILTER['#8', 'that is standing']\", \"AGGREGATE['count', '#9']\", \"AGGREGATE['count', '#10']\", \"BOOLEAN['#11', 'is equal to one']\", \"BOOLEAN['#12', 'is equal to one']\", \"BOOLEAN['#9', 'is turned toward #10']\", \"BOOLEAN['#10', 'is turned toward #9']\", \"BOOLEAN['logical_and', 'true', '#13', '#14']\", \"BOOLEAN['logical_and', 'true', '#15', '#16']\", \"BOOLEAN['logical_and', 'true', '#17', '#18']\"]"}
{"id": "NLVR2_dev_dev-540-0-1", "input": "If an image shows rows of non-standing people in yellow and burgundy robes.", "output": "[\"SELECT['rows of people']\", \"FILTER['#1', 'that are non-standing']\", \"SELECT['robes']\", \"FILTER['#3', 'that are yellow and burgundy']\", \"FILTER['#2', 'in #4']\", \"BOOLEAN['#5', 'are in an image']\"]"}
{"id": "NLVR2_dev_dev-540-2-0", "input": "If in at least one image there are at least four mean putting their right leg high up on a fence.", "output": "[\"SELECT['mean']\", \"PROJECT['right leg of #REF', '#1']\", \"SELECT['a fence']\", \"FILTER['#1', 'putting #2 high up on #3']\", \"PROJECT['images of #REF', '#4']\", \"GROUP['count', '#4', '#5']\", \"COMPARATIVE['#5', '#6', 'is at least four']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-54-1-0", "input": "If the left-hand image shows a horned animal in profile with its head to the right and rear to the left.", "output": "[\"SELECT['left-hand image']\", \"PROJECT['animals in #REF', '#1']\", \"FILTER['#2', 'that is horned']\", \"FILTER['#3', 'that is in profile']\", \"PROJECT['head of #REF', '#4']\", \"COMPARATIVE['#4', '#5', 'is to the right']\", \"PROJECT['rear of #REF', '#6']\", \"BOOLEAN['#7', 'is to the left']\"]"}
{"id": "NLVR2_dev_dev-542-2-0", "input": "If there are two hanging doors with at least one being white.", "output": "[\"SELECT['doors']\", \"FILTER['#1', 'that are hanging']\", \"FILTER['#1', 'that are white']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#4', 'is equal to two']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#6', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#5', '#7']\"]"}
{"id": "NLVR2_dev_dev-543-0-1", "input": "If the left image contains one standing doberman with a chain around its neck, and the right image includes at least one doberman reclining on green grass.", "output": "[\"SELECT['left image']\", \"PROJECT['doberman in #REF', '#1']\", \"FILTER['#2', 'that is standing']\", \"PROJECT['chain in #REF', '#1']\", \"PROJECT['neck of #REF', '#2']\", \"FILTER['#4', 'that is around #5']\", \"FILTER['#2', 'that has #6']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is equal to one']\", \"SELECT['right image']\", \"PROJECT['doberman in #REF', '#10']\", \"PROJECT['grass in #REF', '#10']\", \"FILTER['#12', 'that is green']\", \"FILTER['#11', 'that is reclining on #13']\", \"AGGREGATE['count', '#14']\", \"BOOLEAN['#15', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#9', '#16']\"]"}
{"id": "NLVR2_dev_dev-543-2-0", "input": "If one dog has its mouth open and tongue hanging out.", "output": "[\"SELECT['dogs']\", \"PROJECT['mouth of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is open']\", \"PROJECT['tongue of #REF', '#3']\", \"COMPARATIVE['#3', '#4', 'is hanging out']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-544-1-1", "input": "If there is snow in the truck's plow in each image", "output": "[\"SELECT['truck']\", \"PROJECT['plow of #REF', '#1']\", \"SELECT['snow']\", \"FILTER['#2', 'that has #3']\", \"PROJECT['images of #REF', '#4']\", \"AGGREGATE['count', '#5']\", \"SELECT['images']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#6', 'is equal to #8']\"]"}
{"id": "NLVR2_dev_dev-544-3-0", "input": "If one image is from inside a snow plow.", "output": "[\"SELECT['snow plow']\", \"PROJECT['the inside of #REF', '#1']\", \"SELECT['images']\", \"FILTER['#3', 'that are from #2']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-545-0-1", "input": "If the guinea pigs in the left and right images have their bodies turned leftward.", "output": "[\"SELECT['left image']\", \"SELECT['right image']\", \"PROJECT['guinea pigs of #REF', '#1']\", \"PROJECT['guinea pigs of #REF', '#2']\", \"PROJECT['the bodies of #REF', '#3']\", \"PROJECT['the bodies of #REF', '#4']\", \"BOOLEAN['#5', 'are turned leftward']\", \"BOOLEAN['#6', 'are turned leftward']\", \"BOOLEAN['logical_and', 'true', '#7', '#8']\"]"}
{"id": "NLVR2_dev_dev-545-1-0", "input": "If both images show a guinea pig facing the left.", "output": "[\"SELECT['guinea pig']\", \"FILTER['#1', 'that is facing the left']\", \"BOOLEAN['#2', 'is in both images']\"]"}
{"id": "NLVR2_dev_dev-546-1-1", "input": "If there are three dogs in total.", "output": "[\"SELECT['dogs']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is equal to three']\"]"}
{"id": "NLVR2_dev_dev-547-0-0", "input": "If there are at least  five  zebras and five cows grazing.", "output": "[\"SELECT['zebras']\", \"SELECT['cows']\", \"FILTER['#1', 'that are grazing']\", \"FILTER['#2', 'that are grazing']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least five']\", \"BOOLEAN['#6', 'is at least five']\", \"BOOLEAN['logical_and', 'true', '#7', '#8']\"]"}
{"id": "NLVR2_dev_dev-547-0-1", "input": "If in one image, a predator animal's body is turned toward the camera and rightward-aimed zebra are present nearby.", "output": "[\"SELECT['predator animal']\", \"PROJECT['body of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is turned toward the camera']\", \"SELECT['zebra']\", \"FILTER['#4', 'that are rightward-aimed']\", \"FILTER['#3', 'with #5 present nearby']\", \"BOOLEAN['#6', 'are in one image']\"]"}
{"id": "NLVR2_dev_dev-548-3-0", "input": "If two soda bottles have the pepsi logo.", "output": "[\"SELECT['soda bottles']\", \"SELECT['pepsi logo']\", \"FILTER['#1', 'that has #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-548-3-1", "input": "If two large soda bottles are the same brand with caps and labels using the same colors, but different design details.", "output": "[\"SELECT['soda bottles']\", \"FILTER['#1', 'that are large']\", \"PROJECT['brand of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is the same']\", \"PROJECT['cap of #REF', '#4']\", \"PROJECT['label of #REF', '#4']\", \"PROJECT['colors of #REF', '#5']\", \"PROJECT['colors of #REF', '#6']\", \"COMPARATIVE['#4', '#7', 'are the same']\", \"COMPARATIVE['#4', '#8', 'are the same']\", \"INTERSECTION['#4', '#9', '#10']\", \"PROJECT['design details of #REF', '#11']\", \"COMPARATIVE['#11', '#12', 'are different']\", \"AGGREGATE['count', '#13']\", \"BOOLEAN['#14', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-549-0-1", "input": "If there is on one crab in each image.", "output": "[\"SELECT['images']\", \"PROJECT['crabs in #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is equal to one']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#6', 'is equal to #5']\"]"}
{"id": "NLVR2_dev_dev-549-3-0", "input": "If each image includes only a single crab.", "output": "[\"SELECT['crabs']\", \"SELECT['images']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is equal to one']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to #6']\"]"}
{"id": "NLVR2_dev_dev-550-0-0", "input": "If an image contains a single shoe, and the combined images include at least one human leg wearing a sneaker.", "output": "[\"SELECT['shoe']\", \"SELECT['images']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is equal to one']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least one']\", \"SELECT['human leg']\", \"SELECT['sneaker']\", \"FILTER['#7', 'that is wearing #8']\", \"AGGREGATE['count', '#9']\", \"BOOLEAN['#10', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#6', '#11']\"]"}
{"id": "NLVR2_dev_dev-550-3-1", "input": "If none of the sneakers in the images are on a foot.", "output": "[\"SELECT['images']\", \"PROJECT['sneakers in #REF', '#1']\", \"PROJECT['feet in #REF', '#1']\", \"FILTER['#2', 'on #3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to zero']\"]"}
{"id": "NLVR2_dev_dev-551-2-0", "input": "If there are three hogs in the pair of images.", "output": "[\"SELECT['pair of images']\", \"PROJECT['hogs of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to three']\"]"}
{"id": "NLVR2_dev_dev-551-2-1", "input": "If the larger of two animals in the image on the right has tusks while the smaller animal does not.", "output": "[\"SELECT['the image on the right']\", \"PROJECT['animals in #REF', '#1']\", \"PROJECT['size of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is the highest']\", \"COMPARATIVE['#2', '#3', 'is the lowest']\", \"SELECT['tusks']\", \"BOOLEAN['#4', 'has #6']\", \"BOOLEAN['#5', 'does not have #6']\", \"BOOLEAN['logical_and', 'true', '#7', '#8']\"]"}
{"id": "NLVR2_dev_dev-55-2-0", "input": "If in at least one image there is a single snow vehicle with its plow in the air.", "output": "[\"SELECT['snow vehicles']\", \"PROJECT['plow of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is in the air']\", \"PROJECT['images of #REF', '#3']\", \"GROUP['count', '#3', '#4']\", \"COMPARATIVE['#4', '#5', 'is equal to one']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-552-0-0", "input": "If all the dogs are standing.", "output": "[\"SELECT['dogs']\", \"FILTER['#1', 'that are standing']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to #4']\"]"}
{"id": "NLVR2_dev_dev-552-0-1", "input": "If in the left image, there's a single basset hound walking to the left.", "output": "[\"SELECT['left image']\", \"PROJECT['basset hound in #REF', '#1']\", \"FILTER['#2', 'that is walking to the left']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-55-2-1", "input": "If one plow is off the ground.", "output": "[\"SELECT['plows']\", \"SELECT['the ground']\", \"FILTER['#1', 'off #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-553-3-0", "input": "If one image shows square throw pillows on a white couch, and the pillows feature letters and numbers on them.", "output": "[\"SELECT['throw pillows']\", \"FILTER['#1', 'that are square']\", \"SELECT['couch']\", \"FILTER['#3', 'that is white']\", \"FILTER['#2', 'that are on #4']\", \"FILTER['#5', 'that feature letters and numbers on']\", \"SELECT['images']\", \"GROUP['count', '#6', '#7']\", \"COMPARATIVE['#7', '#8', 'is higher than one']\", \"AGGREGATE['count', '#9']\", \"BOOLEAN['#10', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-553-3-1", "input": "If one image shows decorative pillows on a couch and the other shows pillows on a bed.", "output": "[\"SELECT['one image']\", \"PROJECT['decorative pillows in #REF', '#1']\", \"PROJECT['couch in #REF', '#1']\", \"FILTER['#2', 'that are on #3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least one']\", \"SELECT['other image']\", \"PROJECT['pillows on #REF', '#7']\", \"PROJECT['bed on #REF', '#7']\", \"FILTER['#8', 'that are on #9']\", \"AGGREGATE['count', '#10']\", \"BOOLEAN['#11', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#6', '#12']\"]"}
{"id": "NLVR2_dev_dev-554-1-0", "input": "If one dog is running and two other dogs are sitting in the grass and watching over some sheep.", "output": "[\"SELECT['dogs']\", \"FILTER['#1', 'that are running']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to one']\", \"SELECT['the grass']\", \"FILTER['#1', 'sitting in #5']\", \"SELECT['sheep']\", \"FILTER['#6', 'watching over #7']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is equal to two']\", \"BOOLEAN['logical_and', 'true', '#4', '#10']\"]"}
{"id": "NLVR2_dev_dev-554-3-1", "input": "If the right image shows a black-and-white dog in a bounding pose, and the left image includes a dog behind sheep, looking at them.", "output": "[\"SELECT['right image']\", \"PROJECT['dog in #REF', '#1']\", \"FILTER['#2', 'that is black-and-white']\", \"FILTER['#3', 'that is in a bounding pose']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least one']\", \"SELECT['left image']\", \"PROJECT['dog in #REF', '#7']\", \"PROJECT['sheep in #REF', '#7']\", \"FILTER['#8', 'that is behind #9']\", \"FILTER['#10', 'that is looking at #9']\", \"AGGREGATE['count', '#11']\", \"BOOLEAN['#12', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#6', '#13']\"]"}
{"id": "NLVR2_dev_dev-555-0-1", "input": "If at least one roll of toilet paper is outside of its packaging.", "output": "[\"SELECT['roll of toilet paper']\", \"PROJECT['packaging of #REF', '#1']\", \"FILTER['#1', 'that is outside #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-555-2-0", "input": "If in the left image, one roll of toilet paper is partially unrolled.", "output": "[\"SELECT['the left image']\", \"PROJECT['rolls of toilet paper in #REF', '#1']\", \"FILTER['#2', 'that are partially unrolled']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-556-0-0", "input": "If one long nosed dog is rolling over and scratching its back.", "output": "[\"SELECT['dog']\", \"FILTER['#1', 'that is long nosed']\", \"FILTER['#2', 'that is rolling over']\", \"PROJECT['back of #REF', '#3']\", \"FILTER['#3', 'that is scratching #4']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-556-2-1", "input": "If an image shows a row of cot-type beds with tubular frames holding reclining dogs.", "output": "[\"SELECT['beds']\", \"FILTER['#1', 'that are cot-type']\", \"PROJECT['frames of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'are tubular']\", \"FILTER['#4', 'in a row']\", \"SELECT['dogs']\", \"FILTER['#6', 'that are reclining']\", \"FILTER['#5', 'holding #7']\", \"BOOLEAN['#8', 'are in an image']\"]"}
{"id": "NLVR2_dev_dev-557-0-1", "input": "If a cheetah is sitting.", "output": "[\"SELECT['cheetah']\", \"BOOLEAN['#1', 'is sitting']\"]"}
{"id": "NLVR2_dev_dev-557-2-0", "input": "If no more than two cheetahs are present.", "output": "[\"SELECT['cheetahs']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is at most two']\"]"}
{"id": "NLVR2_dev_dev-558-1-0", "input": "If there is only one bottle in the left image.", "output": "[\"SELECT['left image']\", \"PROJECT['bottle in #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-558-3-1", "input": "If there are exactly four bottles in total.", "output": "[\"SELECT['bottles']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is equal to four']\"]"}
{"id": "NLVR2_dev_dev-559-2-1", "input": "If the left image shows one dog standing in profile with its body turned leftward, and the right image shows one dog running across grass with its mouth open.", "output": "[\"SELECT['the left image']\", \"PROJECT['dogs in #REF', '#1']\", \"FILTER['#2', 'standing in profile']\", \"PROJECT['bodies of #REF', '#3']\", \"COMPARATIVE['#3', '#4', 'are turn leftward']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to one']\", \"SELECT['the right image']\", \"PROJECT['dogs in #REF', '#8']\", \"PROJECT['grass in #REF', '#8']\", \"FILTER['#9', 'running across #10']\", \"PROJECT['mouths of #REF', '#11']\", \"COMPARATIVE['#11', '#12', 'are open']\", \"AGGREGATE['count', '#13']\", \"BOOLEAN['#14', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#7', '#15']\"]"}
{"id": "NLVR2_dev_dev-559-3-0", "input": "If exactly one dog is standing still.", "output": "[\"SELECT['dog']\", \"FILTER['#1', 'that is standing still']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-560-0-1", "input": "If three people are sitting in the boat in the water in the image on the right.", "output": "[\"SELECT['the image on the right']\", \"PROJECT['people in #REF', '#1']\", \"PROJECT['the boat in #REF', '#1']\", \"PROJECT['the water in #REF', '#1']\", \"FILTER['#3', 'in #4']\", \"FILTER['#2', 'sitting in #5']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to three']\"]"}
{"id": "NLVR2_dev_dev-560-1-0", "input": "If an image shows at least one canoe pulled up to the water's edge.", "output": "[\"SELECT['canoe']\", \"SELECT['water']\", \"PROJECT['edge of #REF', '#2']\", \"FILTER['#1', 'that is pulled up to #3']\", \"SELECT['images']\", \"GROUP['count', '#4', '#5']\", \"COMPARATIVE['#5', '#6', 'is at least one']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-561-1-0", "input": "If a dog is laying on wood.", "output": "[\"SELECT['dog']\", \"SELECT['wood']\", \"FILTER['#1', 'that is laying on #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-561-3-1", "input": "If each image contains just one dog, and one image features a dog in a reclining pose with its head upright and front paws extended.", "output": "[\"SELECT['images']\", \"PROJECT['dogs in #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is equal to one']\", \"AGGREGATE['count', '#4']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#5', 'is equal to #6']\", \"SELECT['dog']\", \"FILTER['#8', 'in a reclining pose']\", \"PROJECT['head of #REF', '#9']\", \"COMPARATIVE['#9', '#10', 'is upright']\", \"PROJECT['front paws of #REF', '#11']\", \"COMPARATIVE['#11', '#12', 'are extended']\", \"BOOLEAN['#13', 'is in one image']\", \"BOOLEAN['logical_and', 'true', '#7', '#14']\"]"}
{"id": "NLVR2_dev_dev-562-2-1", "input": "If we've got four chimpanzees here.", "output": "[\"SELECT['chimpanzees']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is equal to four']\"]"}
{"id": "NLVR2_dev_dev-562-3-0", "input": "If an image shows two adult chimps squatting side by side, one with a wide-opne mouth and at least one with its arms folded across its front.", "output": "[\"SELECT['adult chimps']\", \"FILTER['#1', 'squatting side by side']\", \"PROJECT['one of #REF', '#2']\", \"PROJECT['mouth of #REF', '#3']\", \"BOOLEAN['#4', 'is wide-opne']\", \"FILTER['#2', 'with its arms folded across its front']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#5', '#8']\"]"}
{"id": "NLVR2_dev_dev-56-3-0", "input": "If in at least one image there is a man with a black  hat and brown vest playing three saxophones at once.", "output": "[\"SELECT['man']\", \"PROJECT['hat of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is black']\", \"PROJECT['vest of #REF', '#3']\", \"COMPARATIVE['#3', '#4', 'is brown']\", \"PROJECT['saxophones that #REF is playing at once', '#5']\", \"SELECT['images']\", \"GROUP['count', '#6', '#7']\", \"COMPARATIVE['#7', '#8', 'is equal to three']\", \"AGGREGATE['count', '#9']\", \"BOOLEAN['#10', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-563-1-1", "input": "If in at least one image there is a two stared row of dumbbells.", "output": "[\"SELECT['row of dumbbells']\", \"FILTER['#1', 'that is two stared']\", \"BOOLEAN['#2', 'is in at least one image']\"]"}
{"id": "NLVR2_dev_dev-563-2-0", "input": "If the left image features at least one row of barbell weights on a rack, and the right image features a barbell in the foreground with a view of a gym and its equipment in the background.", "output": "[\"SELECT['left image']\", \"PROJECT['barbell weights in #REF', '#1']\", \"SELECT['rack']\", \"FILTER['#2', 'on #3']\", \"PROJECT['rows of #REF', '#4']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is at least one']\", \"SELECT['right image']\", \"SELECT['barbell']\", \"FILTER['#9', 'that is in the foreground']\", \"SELECT['gym']\", \"PROJECT['view of #REF', '#11']\", \"FILTER['#10', 'with #12']\", \"PROJECT['equipment of #REF', '#11']\", \"FILTER['#14', 'in the background']\", \"UNION['#13', '#15']\", \"BOOLEAN['#8', 'features #16']\", \"BOOLEAN['logical_and', 'true', '#7', '#17']\"]"}
{"id": "NLVR2_dev_dev-565-1-0", "input": "If there is one puppy sitting alone on a white arm chair.", "output": "[\"SELECT['puppy']\", \"SELECT['arm chair']\", \"FILTER['#2', 'that is white']\", \"FILTER['#1', 'sitting on #3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-566-2-1", "input": "If each image contains a single dog, and one of the dogs is wearing something besides a dog collar.", "output": "[\"SELECT['dogs']\", \"SELECT['images']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is equal to one']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to #6']\", \"SELECT['dog collars']\", \"PROJECT['#REF that is wearing something', '#1']\", \"DISCARD['#9', '#8']\", \"AGGREGATE['count', '#10']\", \"BOOLEAN['#11', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#7', '#12']\"]"}
{"id": "NLVR2_dev_dev-566-3-0", "input": "If two of the dogs have their mouths open and tongues hanging out.", "output": "[\"SELECT['dogs']\", \"PROJECT['mouth of #REF', '#1']\", \"PROJECT['tongues of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'are open']\", \"COMPARATIVE['#4', '#3', 'are hanging out']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-567-1-0", "input": "If there are three skunks in total.", "output": "[\"SELECT['skunks']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is equal to three']\"]"}
{"id": "NLVR2_dev_dev-567-3-1", "input": "If there are a total of 2 skunks.", "output": "[\"SELECT['skunks']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-568-1-0", "input": "If each sailboat sailing in the ocean has three white mainsails.", "output": "[\"SELECT['sailboats']\", \"SELECT['the ocean']\", \"FILTER['#1', 'sailing in #2']\", \"PROJECT['mainsails of #REF', '#3']\", \"FILTER['#4', 'that are white']\", \"GROUP['count', '#5', '#3']\", \"COMPARATIVE['#3', '#6', 'is equal to three']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#9', 'is equal to #8']\"]"}
{"id": "NLVR2_dev_dev-569-1-1", "input": "If the left image contains exactly six golf balls of different colors, and the right image shows a hand squeezing a blue rubber golf ball.", "output": "[\"SELECT['left image']\", \"PROJECT['golf balls in #REF', '#1']\", \"PROJECT['colors of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'are different']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to six']\", \"SELECT['right image']\", \"PROJECT['hand in #REF', '#7']\", \"PROJECT['golf ball in #REF', '#7']\", \"FILTER['#9', 'that is rubber']\", \"FILTER['#10', 'that is blue']\", \"FILTER['#8', 'that is squeezing #11']\", \"AGGREGATE['count', '#12']\", \"BOOLEAN['#13', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#6', '#14']\"]"}
{"id": "NLVR2_dev_dev-569-3-0", "input": "If in at least one image there are at least  three squishy yellow dimpled balls.", "output": "[\"SELECT['images']\", \"PROJECT['balls in #REF', '#1']\", \"FILTER['#2', 'that are squishy']\", \"FILTER['#3', 'that are yellow']\", \"FILTER['#4', 'that are dimpled']\", \"GROUP['count', '#5', '#1']\", \"COMPARATIVE['#1', '#6', 'is at least three']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-57-0-1", "input": "If at least one image shows one gorilla standing in a small blue pool to the left of a rope net, with arms raised and splashing water.", "output": "[\"SELECT['gorilla']\", \"SELECT['pool']\", \"FILTER['#2', 'that is small']\", \"FILTER['#3', 'that is blue']\", \"SELECT['rope net']\", \"FILTER['#4', 'to the left of #5']\", \"FILTER['#1', 'standing in #6']\", \"PROJECT['arms of #REF', '#7']\", \"COMPARATIVE['#7', '#8', 'are raised']\", \"PROJECT['water of #REF', '#6']\", \"FILTER['#9', 'that is splashing #10']\", \"BOOLEAN['#11', 'is in at least one image']\"]"}
{"id": "NLVR2_dev_dev-570-1-1", "input": "If at least some of the perfume in the image on the right is inside a box.", "output": "[\"SELECT['right image']\", \"PROJECT['perfumes in #REF', '#1']\", \"PROJECT['box in #REF', '#1']\", \"FILTER['#2', 'that are in #3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-571-2-0", "input": "If an image shows a single, standing dog, with its body turned rightward and some kind of \"\"\"\"strap\"\"\"\" around part of its body.", "output": "[\"SELECT['dog']\", \"FILTER['#1', 'that is standing']\", \"PROJECT['body of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is turned rightward']\", \"SELECT['some kind of strap']\", \"FILTER['#5', 'that is around part of #3']\", \"FILTER['#4', 'that has #6']\", \"SELECT['images']\", \"GROUP['count', '#7', '#8']\", \"COMPARATIVE['#8', '#9', 'is equal to one']\", \"AGGREGATE['count', '#10']\", \"BOOLEAN['#11', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-571-3-1", "input": "If the dog in the image on the left has something around its neck.", "output": "[\"SELECT['left image']\", \"PROJECT['dog of #REF', '#1']\", \"PROJECT['neck of #REF', '#2']\", \"SELECT['something']\", \"BOOLEAN['#4', 'is around #3']\"]"}
{"id": "NLVR2_dev_dev-57-2-0", "input": "If water goes everywhere as a gorilla splashes it out of a blue pool.", "output": "[\"SELECT['gorilla']\", \"SELECT['pool']\", \"FILTER['#2', 'that is blue']\", \"SELECT['water']\", \"FILTER['#4', 'that #1 splashes out of #3']\", \"BOOLEAN['#5', 'goes everywhere']\"]"}
{"id": "NLVR2_dev_dev-572-3-0", "input": "If a blueprint includes an aerial view of a sailboat as well as a side view with upright sails.", "output": "[\"SELECT['blueprint']\", \"SELECT['sailboat']\", \"PROJECT['aerial view of #REF', '#2']\", \"PROJECT['side view of #REF', '#2']\", \"SELECT['sails']\", \"FILTER['#5', 'that are upright']\", \"FILTER['#4', 'with #6']\", \"BOOLEAN['#1', 'includes #3']\", \"BOOLEAN['#1', 'includes #7']\", \"BOOLEAN['logical_and', 'true', '#8', '#9']\"]"}
{"id": "NLVR2_dev_dev-573-0-0", "input": "If in both images, the bottles that hold the soap are attached to the pump.", "output": "[\"SELECT['bottles']\", \"SELECT['soap']\", \"SELECT['pump']\", \"FILTER['#1', 'that hold #2']\", \"FILTER['#4', 'that are attached to #3']\", \"BOOLEAN['#5', 'is in both images']\"]"}
{"id": "NLVR2_dev_dev-573-1-1", "input": "If there are exactly two nozzles pictured.", "output": "[\"SELECT['nozzles']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-574-0-1", "input": "If one image has two chimpanzees in it and the other has at least three.", "output": "[\"SELECT['one image']\", \"PROJECT['chimpanzees in #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to two']\", \"SELECT['other image']\", \"PROJECT['chimpanzees in #REF', '#5']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is at least three']\", \"BOOLEAN['logical_and', 'true', '#4', '#8']\"]"}
{"id": "NLVR2_dev_dev-575-1-0", "input": "If each image shows more than one seabird flying above a line of breaking waves with white white spray.", "output": "[\"SELECT['seabirds']\", \"SELECT['waves']\", \"FILTER['#2', 'that are breaking']\", \"SELECT['spray']\", \"FILTER['#4', 'that is white']\", \"FILTER['#3', 'with #5']\", \"FILTER['#1', 'flying above #6']\", \"SELECT['images']\", \"GROUP['count', '#7', '#8']\", \"COMPARATIVE['#8', '#9', 'is higher than one']\", \"AGGREGATE['count', '#8']\", \"AGGREGATE['count', '#10']\", \"BOOLEAN['#11', 'is equal to #12']\"]"}
{"id": "NLVR2_dev_dev-575-1-1", "input": "If three birds are flying over the water in one of the images.", "output": "[\"SELECT['birds']\", \"SELECT['water']\", \"FILTER['#1', 'flying over #2']\", \"SELECT['images']\", \"GROUP['count', '#3', '#4']\", \"COMPARATIVE['#4', '#5', 'is equal to three']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-576-1-0", "input": "If in at least one image there a single pizza getting sauce spread on it with a spoon.", "output": "[\"SELECT['pizza']\", \"SELECT['sauce']\", \"SELECT['spoon']\", \"FILTER['#1', 'that is getting #2 spread on it with #3']\", \"SELECT['images']\", \"GROUP['count', '#4', '#5']\", \"COMPARATIVE['#5', '#6', 'is equal to one']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-576-1-1", "input": "If these is a spoon on top of the pizza.", "output": "[\"SELECT['pizza']\", \"SELECT['spoon']\", \"BOOLEAN['#2', 'is on top of #1']\"]"}
{"id": "NLVR2_dev_dev-577-1-1", "input": "If in one of the images, the penguins stand at a small pool and you can see their reflections in the water.", "output": "[\"SELECT['penguins']\", \"SELECT['pool']\", \"FILTER['#2', 'that is small']\", \"FILTER['#1', 'that stand at #3']\", \"PROJECT['water of #REF', '#3']\", \"PROJECT['reflections of #REF', '#4']\", \"FILTER['#6', 'that you can see in #5']\", \"PROJECT['images of #REF', '#4']\", \"PROJECT['images of #REF', '#7']\", \"SELECT['images']\", \"INTERSECTION['#10', '#8', '#9']\", \"AGGREGATE['count', '#11']\", \"BOOLEAN['#12', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-577-2-0", "input": "If penguins' reflections are visible in the water.", "output": "[\"SELECT['penguins']\", \"PROJECT['reflections of #REF', '#1']\", \"SELECT['water']\", \"BOOLEAN['#2', 'is visible in #3']\"]"}
{"id": "NLVR2_dev_dev-578-0-1", "input": "If there are two or more layered desserts in each image, and at least one of them is topped with a whole cookie.", "output": "[\"SELECT['images']\", \"PROJECT['desserts in #REF', '#1']\", \"FILTER['#2', 'that are layered']\", \"PROJECT['cookie in #REF', '#1']\", \"FILTER['#4', 'that is whole']\", \"FILTER['#3', 'that are topped with #5']\", \"GROUP['count', '#3', '#1']\", \"COMPARATIVE['#1', '#7', 'is at least two']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#10', 'is equal to #9']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#12', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#11', '#13']\"]"}
{"id": "NLVR2_dev_dev-578-2-0", "input": "If a cookie sits in the dessert in the image on the left.", "output": "[\"SELECT['left image']\", \"PROJECT['cookie in #REF', '#1']\", \"PROJECT['dessert in #REF', '#1']\", \"FILTER['#2', 'that sits in #3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-579-0-1", "input": "If the left image contains no more than one dog.", "output": "[\"SELECT['left image']\", \"PROJECT['dogs of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at most one']\"]"}
{"id": "NLVR2_dev_dev-579-3-0", "input": "If a small child is sitting down next to a dog in the image on the right.", "output": "[\"SELECT['right image']\", \"PROJECT['child in #REF', '#1']\", \"FILTER['#2', 'that is small']\", \"SELECT['dog']\", \"FILTER['#4', 'that is in #1']\", \"FILTER['#3', 'that is sitting down next to #5']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-58-0-0", "input": "If one image contains a product that is not body lotion.", "output": "[\"SELECT['product']\", \"SELECT['body lotion']\", \"DISCARD['#1', '#2']\", \"BOOLEAN['#3', 'is in one image']\"]"}
{"id": "NLVR2_dev_dev-58-0-1", "input": "If none of the items are 'dove' products.", "output": "[\"SELECT['items']\", \"FILTER['#1', 'that are dove products']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to zero']\"]"}
{"id": "NLVR2_dev_dev-580-1-1", "input": "If there is at least one closed pouch and one open pouch.", "output": "[\"SELECT['pouch']\", \"FILTER['#1', 'that is closed']\", \"FILTER['#1', 'that is open']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least one']\", \"BOOLEAN['#5', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#6', '#7']\"]"}
{"id": "NLVR2_dev_dev-581-1-0", "input": "If one of the vases has utensils in it.", "output": "[\"SELECT['vases']\", \"SELECT['utensils']\", \"FILTER['#1', 'that has #2 in']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-581-2-1", "input": "If one of the containers is full of cooking utensils.", "output": "[\"SELECT['containers']\", \"SELECT['cooking utensils']\", \"FILTER['#1', 'that are full of #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-582-0-1", "input": "If the left image shows several parts of a flute laid down horizontally.", "output": "[\"SELECT['left image']\", \"PROJECT['flute in #REF', '#1']\", \"PROJECT['parts of #REF', '#2']\", \"FILTER['#3', 'that are laid down horizontally']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least two']\"]"}
{"id": "NLVR2_dev_dev-582-1-0", "input": "If one image contains exactly three complete flutes displayed horizontally, and each image contains at least two items displayed horizontally.", "output": "[\"SELECT['flutes']\", \"FILTER['#1', 'that are complete']\", \"FILTER['#2', 'that are displayed horizontally']\", \"SELECT['images']\", \"GROUP['count', '#3', '#4']\", \"COMPARATIVE['#4', '#5', 'is equal to three']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to one']\", \"SELECT['items']\", \"FILTER['#9', 'that are displayed horizontally']\", \"GROUP['count', '#10', '#4']\", \"COMPARATIVE['#4', '#11', 'is at least two']\", \"AGGREGATE['count', '#4']\", \"AGGREGATE['count', '#12']\", \"BOOLEAN['#13', 'is equal to #14']\", \"BOOLEAN['logical_and', 'true', '#8', '#15']\"]"}
{"id": "NLVR2_dev_dev-583-1-0", "input": "If the right image shows gathers of solid-colored fabric that reach to the peak of a ceiling above a bed.", "output": "[\"SELECT['gathers of fabric']\", \"FILTER['#1', 'that are solid-colored']\", \"SELECT['ceiling']\", \"SELECT['bed']\", \"FILTER['#3', 'above #4']\", \"PROJECT['peak of #REF', '#5']\", \"FILTER['#2', 'that reach to #6']\", \"BOOLEAN['#7', 'are in the right image']\"]"}
{"id": "NLVR2_dev_dev-583-3-1", "input": "If a single bed sits in a room in the image on the right.", "output": "[\"SELECT['the image on the right']\", \"PROJECT['beds in #REF', '#1']\", \"PROJECT['room in #REF', '#1']\", \"FILTER['#2', 'that sit in #3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-584-1-1", "input": "If the left image shows one forward-facing schnauzer reclining on the grass and wearing a ribbon around its neck.", "output": "[\"SELECT['the left image']\", \"PROJECT['schnauzers in #REF', '#1']\", \"FILTER['#2', 'that are forward-facing']\", \"PROJECT['the grass in #REF', '#1']\", \"FILTER['#3', 'that are reclining on #4']\", \"PROJECT['necks of #REF', '#5']\", \"SELECT['ribbon']\", \"COMPARATIVE['#5', '#6', 'have #7 around']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-584-2-0", "input": "If a dog is wearing a ribbon.", "output": "[\"SELECT['dog']\", \"SELECT['ribbon']\", \"BOOLEAN['#1', 'is wearing #2']\"]"}
{"id": "NLVR2_dev_dev-585-0-1", "input": "If the left image contains a human interacting with a large brown dog.", "output": "[\"SELECT['human']\", \"SELECT['dog']\", \"FILTER['#2', 'that is brown']\", \"FILTER['#3', 'that is large']\", \"FILTER['#1', 'interacting with #4']\", \"BOOLEAN['#5', 'is in left image']\"]"}
{"id": "NLVR2_dev_dev-585-1-0", "input": "If a person is accompanying the dog in the image on the left outside.", "output": "[\"SELECT['the image on the left']\", \"PROJECT['dog in #REF', '#1']\", \"PROJECT['person in #REF', '#1']\", \"BOOLEAN['#3', 'is accompanying #2 outside']\"]"}
{"id": "NLVR2_dev_dev-586-1-0", "input": "If one image includes at least five camera-facing llama heads with upright ears in a horizontal row.", "output": "[\"SELECT['images']\", \"PROJECT['llama heads in #REF', '#1']\", \"FILTER['#2', 'that are camera-facing']\", \"PROJECT['ears of #REF', '#3']\", \"COMPARATIVE['#3', '#4', 'are upright']\", \"FILTER['#5', 'in a horizontal row']\", \"GROUP['count', '#6', '#1']\", \"COMPARATIVE['#1', '#7', 'is at least five']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-586-1-1", "input": "If in the left image there are llamas looking at the camera.", "output": "[\"SELECT['llamas']\", \"SELECT['camera']\", \"FILTER['#1', 'looking at #2']\", \"BOOLEAN['#3', 'are in left image']\"]"}
{"id": "NLVR2_dev_dev-588-1-1", "input": "If the right image features one forward-looing beagle wearing a red collar, and the left image features a left-facing beagle with its tail upright.", "output": "[\"SELECT['the right image']\", \"PROJECT['beagles in #REF', '#1']\", \"FILTER['#2', 'that are forward-looing']\", \"SELECT['collar']\", \"FILTER['#4', 'that is red']\", \"FILTER['#3', 'wearing #5']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to one']\", \"SELECT['the left image']\", \"PROJECT['beagle in #REF', '#9']\", \"FILTER['#10', 'that is left-facing']\", \"PROJECT['tail of #REF', '#11']\", \"BOOLEAN['#12', 'is upright']\", \"BOOLEAN['logical_and', 'true', '#8', '#13']\"]"}
{"id": "NLVR2_dev_dev-588-3-0", "input": "If there is a beagle facing the left in one image and a beagle in a red collar in the other image.", "output": "[\"SELECT['one image']\", \"PROJECT['beagle in #REF', '#1']\", \"BOOLEAN['#2', 'is facing the left']\", \"SELECT['the other image']\", \"PROJECT['beagle in #REF', '#4']\", \"PROJECT['collar of #REF', '#5']\", \"BOOLEAN['#6', 'is red']\", \"BOOLEAN['logical_and', 'true', '#3', '#7']\"]"}
{"id": "NLVR2_dev_dev-589-1-0", "input": "If an image contains no more than one penguin.", "output": "[\"SELECT['penguins']\", \"SELECT['images']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is at most one']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-589-3-1", "input": "If one image includes a fuzzy baby penguin, and the other only contains adult penguins.", "output": "[\"SELECT['one image']\", \"PROJECT['penguin in #REF', '#1']\", \"FILTER['#2', 'that is baby']\", \"FILTER['#3', 'that is fuzzy']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least one']\", \"SELECT['other image']\", \"PROJECT['penguins in #REF', '#7']\", \"FILTER['#8', 'that are adult']\", \"AGGREGATE['count', '#8']\", \"AGGREGATE['count', '#9']\", \"BOOLEAN['#10', 'is equal to #11']\", \"BOOLEAN['logical_and', 'true', '#6', '#12']\"]"}
{"id": "NLVR2_dev_dev-590-0-1", "input": "If all bikini models are posed by a pool but not touching the water, and one bikini model is reclining by herself by the pool's edge.", "output": "[\"SELECT['bikini models']\", \"SELECT['pool']\", \"SELECT['water']\", \"FILTER['#1', 'posed by #2']\", \"FILTER['#4', 'touching #3']\", \"DISCARD['#4', '#5']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to #8']\", \"PROJECT['edge of #REF', '#2']\", \"FILTER['#1', 'reclining by']\", \"AGGREGATE['count', '#11']\", \"BOOLEAN['#12', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#9', '#13']\"]"}
{"id": "NLVR2_dev_dev-590-2-0", "input": "If a woman is laying down.", "output": "[\"SELECT['woman']\", \"FILTER['#1', 'that is laying down']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-591-3-0", "input": "If an area to sit is set up in the bathroom in the image on the left.", "output": "[\"SELECT['left image']\", \"PROJECT['bathroom in #REF', '#1']\", \"PROJECT['area to sit in #REF', '#1']\", \"FILTER['#3', 'that is set up in #2']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-591-3-1", "input": "If an image shows a backsplash of small square tiles behind a sink that rests atop a counter.", "output": "[\"SELECT['backsplash']\", \"SELECT['tiles']\", \"FILTER['#2', 'that are square']\", \"FILTER['#3', 'that are small']\", \"FILTER['#1', 'that has #4']\", \"SELECT['sink']\", \"SELECT['counter']\", \"FILTER['#6', 'that rests atop #7']\", \"FILTER['#5', 'behind #8']\", \"BOOLEAN['#9', 'is in and image']\"]"}
{"id": "NLVR2_dev_dev-592-0-0", "input": "If the right image features a rightward-angled ferret wearing some type of garment.", "output": "[\"SELECT['ferret']\", \"FILTER['#1', 'that is rightward-angled']\", \"SELECT['garment']\", \"FILTER['#2', 'that is wearing #3']\", \"BOOLEAN['#4', 'is in right image']\"]"}
{"id": "NLVR2_dev_dev-592-0-1", "input": "If there is no more than one ferret in the right image.", "output": "[\"SELECT['right image']\", \"PROJECT['ferrets of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at most one']\"]"}
{"id": "NLVR2_dev_dev-59-3-0", "input": "If the sleds in both pictures are pointing towards each other.", "output": "[\"SELECT['pictures']\", \"PROJECT['sleds in #REF', '#1']\", \"BOOLEAN['#2', 'are pointing toward each other']\"]"}
{"id": "NLVR2_dev_dev-59-3-1", "input": "If there are snow dog sleds with riders on board them.", "output": "[\"SELECT['snow dog sleds']\", \"SELECT['riders']\", \"FILTER['#1', 'that has #2 on board']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least two']\"]"}
{"id": "NLVR2_dev_dev-593-1-1", "input": "If there are at least three jellyfish in total.", "output": "[\"SELECT['jellyfish']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is equal to three']\"]"}
{"id": "NLVR2_dev_dev-593-3-0", "input": "If there are two jellyfish in total.", "output": "[\"SELECT['jellyfish']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-594-3-0", "input": "If there are two bottles of perfume without boxes.", "output": "[\"SELECT['bottles of perfume']\", \"SELECT['boxes']\", \"FILTER['#1', 'that are with #2']\", \"DISCARD['#1', '#3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-594-3-1", "input": "If there are exactly two perfume boxes.", "output": "[\"SELECT['perfume boxes']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-595-2-1", "input": "If at least one spiral-bound edge is next to a row of upright binders in the lefthand image.", "output": "[\"SELECT['lefthand image']\", \"PROJECT['binders in #REF', '#1']\", \"FILTER['#2', 'that are upright']\", \"FILTER['#3', 'that are in a row']\", \"PROJECT['spiral-bound in #REF', '#1']\", \"PROJECT['edge of #REF', '#5']\", \"FILTER['#6', 'that is next to #4']\", \"FILTER['#5', 'that has #7']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-595-3-0", "input": "If at least one spiral notebook is stored next to a row of binders.", "output": "[\"SELECT['spiral notebook']\", \"SELECT['binders']\", \"FILTER['#2', 'that are in a row']\", \"FILTER['#1', 'stored next to #3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-596-0-0", "input": "If at least one guinea pig enclosure has a boldly patterned floor, and one enclosure has wire mesh walls and a second story.", "output": "[\"SELECT['guinea pig enclosures']\", \"PROJECT['floor of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is boldly patterned']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least one']\", \"PROJECT['walls of #REF', '#1']\", \"COMPARATIVE['#1', '#6', 'are wire mesh']\", \"PROJECT['stories of #REF', '#7']\", \"GROUP['count', '#8', '#7']\", \"COMPARATIVE['#7', '#9', 'is equal to two']\", \"AGGREGATE['count', '#10']\", \"BOOLEAN['#11', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#5', '#12']\"]"}
{"id": "NLVR2_dev_dev-596-1-1", "input": "If the cage in the image on the left is made of wire.", "output": "[\"SELECT['left image']\", \"PROJECT['cage of #REF', '#1']\", \"SELECT['wire']\", \"BOOLEAN['#2', 'is made of #3']\"]"}
{"id": "NLVR2_dev_dev-597-0-0", "input": "If each image contains a single horned animal, which has its head turned directly toward the camera.", "output": "[\"SELECT['images']\", \"PROJECT['animals in #REF', '#1']\", \"FILTER['#2', 'that are horned']\", \"PROJECT['head of #REF', '#3']\", \"COMPARATIVE['#3', '#4', 'is turned directly toward the camera']\", \"GROUP['count', '#3', '#1']\", \"GROUP['count', '#5', '#1']\", \"COMPARATIVE['#1', '#6', 'is equal to one']\", \"COMPARATIVE['#1', '#7', 'is equal to one']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#8']\", \"AGGREGATE['count', '#9']\", \"BOOLEAN['#11', 'is equal to #10']\", \"BOOLEAN['#12', 'is equal to #10']\", \"BOOLEAN['logical_and', 'true', '#13', '#14']\"]"}
{"id": "NLVR2_dev_dev-597-2-1", "input": "If a single antelope is standing in the field in both images.", "output": "[\"SELECT['images']\", \"PROJECT['antelopes in #REF', '#1']\", \"PROJECT['the field in #REF', '#1']\", \"FILTER['#2', 'standing in #3']\", \"GROUP['count', '#4', '#1']\", \"COMPARATIVE['#1', '#5', 'is equal to one']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-598-2-1", "input": "If all of the chimps are on the ground.", "output": "[\"SELECT['chimps']\", \"SELECT['ground']\", \"FILTER['#1', 'on #2']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to #5']\"]"}
{"id": "NLVR2_dev_dev-598-3-0", "input": "If there is at least one image of chimps sitting or hanging from a tree branch", "output": "[\"SELECT['chimps']\", \"SELECT['tree branch']\", \"FILTER['#1', 'sitting on #2']\", \"FILTER['#1', 'hanging from #2']\", \"UNION['#3', '#4']\", \"PROJECT['images of #REF', '#5']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-599-2-0", "input": "If a person is holding at least one knee pad in the image on the left.", "output": "[\"SELECT['the image on the left']\", \"PROJECT['person in #REF', '#1']\", \"PROJECT['knee pads in #REF', '#1']\", \"FILTER['#3', 'that #2 is holding']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-599-2-1", "input": "If one image includes a hand touching a black pad with a small red tag, and the other image shows a pair of pads on a white backdrop.", "output": "[\"SELECT['one image']\", \"PROJECT['hand in #REF', '#1']\", \"PROJECT['pad in #REF', '#1']\", \"FILTER['#3', 'that is black']\", \"PROJECT['tag of #REF', '#4']\", \"COMPARATIVE['#4', '#5', 'is red']\", \"COMPARATIVE['#6', '#5', 'is small']\", \"FILTER['#2', 'that is touching #7']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is at least one']\", \"SELECT['other image']\", \"PROJECT['pads in #REF', '#11']\", \"PROJECT['backdrop in #REF', '#11']\", \"FILTER['#13', 'that is white']\", \"FILTER['#12', 'that are on #14']\", \"AGGREGATE['count', '#15']\", \"BOOLEAN['#16', 'is equal to two']\", \"BOOLEAN['logical_and', 'true', '#10', '#17']\"]"}
{"id": "NLVR2_dev_dev-600-1-0", "input": "If in at least one image there are three flutes.", "output": "[\"SELECT['flutes']\", \"SELECT['images']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is equal to three']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-600-2-1", "input": "If one image shows at least three flutes fanned out, with their tips together at the other end, and the other image features a floral motif on a flute.", "output": "[\"SELECT['one image']\", \"PROJECT['flutes of #REF', '#1']\", \"FILTER['#2', 'that are fanned out']\", \"PROJECT['tips of #REF', '#3']\", \"FILTER['#4', 'that are together at the other end']\", \"FILTER['#3', 'with #5']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is at least three']\", \"SELECT['other image']\", \"PROJECT['flute of #REF', '#9']\", \"PROJECT['motif of #REF', '#10']\", \"BOOLEAN['#11', 'is floral']\", \"BOOLEAN['logical_and', 'true', '#8', '#12']\"]"}
{"id": "NLVR2_dev_dev-601-0-1", "input": "If an image features only a bunch of reddish grapes next to a glass of purplish wine and an upright wine bottle.", "output": "[\"SELECT['bunch of grapes']\", \"FILTER['#1', 'that are reddish']\", \"SELECT['glass of wine']\", \"FILTER['#3', 'that is purplish']\", \"SELECT['wine bottle']\", \"FILTER['#5', 'that is upright']\", \"FILTER['#2', 'that are next to #4']\", \"FILTER['#7', 'that are next to #6']\", \"BOOLEAN['#8', 'if only #REF is in an image']\"]"}
{"id": "NLVR2_dev_dev-601-3-0", "input": "If there are two wine glasses in the pair of images.", "output": "[\"SELECT['wine glasses']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-60-2-1", "input": "If one of the houses has a single chimney.", "output": "[\"SELECT['houses']\", \"PROJECT['chimneys of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is equal to one']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-602-2-1", "input": "If in the image to the right, two wild pigs meet face to face.", "output": "[\"SELECT['the image to the right']\", \"PROJECT['wild pigs in #REF', '#1']\", \"FILTER['#2', 'that meet face to face']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-602-3-0", "input": "If only one image shows warthogs butting heads.", "output": "[\"SELECT['warthogs']\", \"PROJECT['heads of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'are butting']\", \"BOOLEAN['#3', 'are in only one image']\"]"}
{"id": "NLVR2_dev_dev-603-0-1", "input": "If the left image contains one all-white dog, which is sleeping without a blanket and has its face turned downward.", "output": "[\"SELECT['the left image']\", \"PROJECT['dogs in #REF', '#1']\", \"FILTER['#2', 'that are all-white']\", \"SELECT['blanket']\", \"FILTER['#3', 'sleeping without #4']\", \"PROJECT['face of #REF', '#5']\", \"COMPARATIVE['#5', '#6', 'is turned downward']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is equal to one']\", \"BOOLEAN['#9', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#10', '#11']\"]"}
{"id": "NLVR2_dev_dev-603-3-0", "input": "If a human is touching at least one of the dogs.", "output": "[\"SELECT['dogs']\", \"SELECT['a human']\", \"FILTER['#1', 'that #2 is touching']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-604-2-0", "input": "If the left and right image contains the same number of banana bunches with a purple arrow bottom.", "output": "[\"SELECT['banana bunches']\", \"PROJECT['bottom of #REF', '#1']\", \"FILTER['#2', 'that are purple arrow']\", \"FILTER['#1', 'that has #3']\", \"SELECT['left image']\", \"SELECT['right image']\", \"FILTER['#4', 'that are in #5']\", \"FILTER['#4', 'that are in #6']\", \"AGGREGATE['count', '#7']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is equal to #10']\"]"}
{"id": "NLVR2_dev_dev-605-0-0", "input": "If all images show corgi dogs inside a vehicle, and no dogs have a part of their body outside a vehicle.", "output": "[\"SELECT['corgi dogs']\", \"SELECT['vehicle']\", \"FILTER['#1', 'that are inside #2']\", \"SELECT['images']\", \"GROUP['count', '#3', '#4']\", \"COMPARATIVE['#4', '#5', 'is at least one']\", \"AGGREGATE['count', '#4']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to #8']\", \"PROJECT['part of body of #REF', '#1']\", \"FILTER['#10', 'that are outside #2']\", \"FILTER['#1', 'that has']\", \"AGGREGATE['count', '#12']\", \"BOOLEAN['#13', 'is equal to zero']\", \"BOOLEAN['logical_and', 'true', '#9', '#14']\"]"}
{"id": "NLVR2_dev_dev-605-3-1", "input": "If all of the dogs are in a car.", "output": "[\"SELECT['dogs']\", \"SELECT['car']\", \"FILTER['#1', 'that are in #2']\", \"DISCARD['#1', '#3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to zero']\"]"}
{"id": "NLVR2_dev_dev-606-1-1", "input": "If balloons completely fill one of the images.", "output": "[\"SELECT['images']\", \"PROJECT['balloons in #REF', '#1']\", \"FILTER['#1', 'where #2 completely fill the image']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-606-2-0", "input": "If balloons float in a blue sky with dappled clouds on strings that angle rightward, in the right image.", "output": "[\"SELECT['balloons']\", \"PROJECT['strings of #REF', '#1']\", \"FILTER['#1', 'where #2 angle rightward']\", \"SELECT['sky']\", \"FILTER['#4', 'that is blue']\", \"SELECT['clouds']\", \"FILTER['#6', 'that are dappled']\", \"FILTER['#5', 'with #7']\", \"FILTER['#3', 'that float in #8']\", \"BOOLEAN['#9', 'are in the right image']\"]"}
{"id": "NLVR2_dev_dev-607-2-1", "input": "If one image shows a plate with a serving of green beans next to the mashed potatoes.", "output": "[\"SELECT['plate']\", \"SELECT['serving of green beans']\", \"SELECT['mashed potatoes']\", \"FILTER['#2', 'next to #3']\", \"FILTER['#1', 'with #4']\", \"BOOLEAN['#5', 'is in one image']\"]"}
{"id": "NLVR2_dev_dev-607-3-0", "input": "If green beans are sitting besides the potatoes on the dish in one of the images.", "output": "[\"SELECT['beans']\", \"FILTER['#1', 'that are green']\", \"SELECT['potatoes']\", \"SELECT['dish']\", \"PROJECT['#REF that are sitting', '#2']\", \"DISCARD['#5', '#3']\", \"FILTER['#6', 'on #4']\", \"BOOLEAN['#7', 'is in one of the images']\"]"}
{"id": "NLVR2_dev_dev-608-1-0", "input": "If one of the photos has a couch on the right side of the room.", "output": "[\"SELECT['room']\", \"SELECT['couch']\", \"PROJECT['the right side of #REF', '#1']\", \"FILTER['#2', 'on #3']\", \"BOOLEAN['#4', 'is in one of the photos']\"]"}
{"id": "NLVR2_dev_dev-608-1-1", "input": "If in one of the images, there are chairs outside.", "output": "[\"SELECT['chairs']\", \"FILTER['#1', 'that are outside']\", \"SELECT['images']\", \"GROUP['count', '#2', '#3']\", \"COMPARATIVE['#3', '#4', 'is at least two']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-609-3-0", "input": "If the left image contains at least two dingoes.", "output": "[\"SELECT['left image']\", \"PROJECT['dingoes of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at least two']\"]"}
{"id": "NLVR2_dev_dev-61-0-0", "input": "If one image shows exactly one person standing behind a glass-fronted display case that faces right.", "output": "[\"SELECT['people']\", \"SELECT['display case']\", \"FILTER['#2', 'that is glass-fronted']\", \"FILTER['#3', 'that faces right']\", \"FILTER['#1', 'standing behind #4']\", \"PROJECT['images of #REF', '#5']\", \"GROUP['count', '#5', '#6']\", \"COMPARATIVE['#6', '#7', 'is equal to one']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-611-3-0", "input": "If one of the dogs has its mouth open.", "output": "[\"SELECT['dogs']\", \"PROJECT['mouth of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is open']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-61-2-1", "input": "If in at least one image there is a single employee reaching in to the bakery display case and grabbing a bread product.", "output": "[\"SELECT['employee']\", \"SELECT['bakery display case']\", \"SELECT['bread product']\", \"FILTER['#1', 'that is reaching in to #2']\", \"FILTER['#4', 'that is grabbing #3']\", \"SELECT['images']\", \"GROUP['count', '#5', '#6']\", \"COMPARATIVE['#6', '#7', 'is equal to one']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-612-1-1", "input": "If in the right image the kick drum has a white skin.", "output": "[\"SELECT['the right image']\", \"PROJECT['the kick drum in #REF', '#1']\", \"PROJECT['skin of #REF', '#2']\", \"BOOLEAN['#3', 'is white']\"]"}
{"id": "NLVR2_dev_dev-612-3-0", "input": "If in each image a person is sitting at a drum kit, with at least one more person in one image.", "output": "[\"SELECT['person']\", \"SELECT['drum kit']\", \"FILTER['#1', 'that is sitting at #2']\", \"DISCARD['#1', '#3']\", \"SELECT['images']\", \"GROUP['count', '#3', '#5']\", \"COMPARATIVE['#5', '#6', 'is at least one']\", \"GROUP['count', '#4', '#7']\", \"COMPARATIVE['#7', '#8', 'is at least one']\", \"AGGREGATE['count', '#5']\", \"AGGREGATE['count', '#9']\", \"BOOLEAN['#10', 'is equal to #11']\"]"}
{"id": "NLVR2_dev_dev-613-1-0", "input": "If each image shows one big jellyfish, and only one of the jellyfish pictured has long ribbon-like tentacles trailing downward from a dome-shaped 'cap'.", "output": "[\"SELECT['jellyfish']\", \"FILTER['#1', 'that are big']\", \"SELECT['images']\", \"GROUP['count', '#2', '#3']\", \"COMPARATIVE['#3', '#4', 'is equal to one']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to #7']\", \"SELECT['']\", \"PROJECT['tentacles of #REF', '#1']\", \"FILTER['#10', 'that are ribbon-like']\", \"FILTER['#11', 'that are long']\", \"PROJECT['cap of #REF', '#1']\", \"FILTER['#13', 'that is dome-shaped']\", \"FILTER['#12', 'that are trailing downward from #14']\", \"FILTER['#1', 'that has']\", \"AGGREGATE['count', '#16']\", \"BOOLEAN['#17', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#8', '#18']\"]"}
{"id": "NLVR2_dev_dev-613-3-1", "input": "If a single jellyfish swims through the water in each of the images.", "output": "[\"SELECT['images']\", \"PROJECT['jellyfish in #REF', '#1']\", \"PROJECT['the water in #REF', '#1']\", \"FILTER['#2', 'that swim through #3']\", \"GROUP['count', '#4', '#1']\", \"COMPARATIVE['#1', '#5', 'is equal to one']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#8', 'is equal to #7']\"]"}
{"id": "NLVR2_dev_dev-614-3-0", "input": "If there is a female in every picture.", "output": "[\"SELECT['females']\", \"SELECT['pictures']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is at least one']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to #6']\"]"}
{"id": "NLVR2_dev_dev-614-3-1", "input": "If each image contains a single model, and left and right images contain models of the opposite sex [one image contains a male and the other contains a female].", "output": "[\"SELECT['images']\", \"PROJECT['models in #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is equal to one']\", \"AGGREGATE['count', '#4']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#5', 'is equal to #6']\", \"SELECT['the left image']\", \"SELECT['the right image']\", \"PROJECT['model in #REF', '#8']\", \"PROJECT['model in #REF', '#9']\", \"PROJECT['sex of #REF', '#10']\", \"PROJECT['sex of #REF', '#11']\", \"BOOLEAN['#12', 'is the opposite of #13']\", \"BOOLEAN['logical_and', 'true', '#7', '#14']\"]"}
{"id": "NLVR2_dev_dev-615-1-0", "input": "If each dog is outdoors wearing a collar and gazing off to the side, and at least one dog is sitting upright.", "output": "[\"SELECT['dogs']\", \"FILTER['#1', 'that are outdoors']\", \"SELECT['collar']\", \"FILTER['#2', 'wearing #3']\", \"FILTER['#4', 'that are gazing off to the side']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#7', 'is equal to #6']\", \"FILTER['#1', 'that are sitting upright']\", \"AGGREGATE['count', '#9']\", \"BOOLEAN['#10', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#8', '#11']\"]"}
{"id": "NLVR2_dev_dev-615-2-1", "input": "If there is a dog sitting near  tall brown grass", "output": "[\"SELECT['dog']\", \"SELECT['grass']\", \"FILTER['#2', 'that is brown']\", \"FILTER['#3', 'that is tall']\", \"BOOLEAN['#1', 'is sitting near #4']\"]"}
{"id": "NLVR2_dev_dev-616-1-0", "input": "If the rail posts in the image on the right are topped with decorative knobs.", "output": "[\"SELECT['right image']\", \"PROJECT['rail posts of #REF', '#1']\", \"SELECT['knobs']\", \"FILTER['#3', 'that are decorative']\", \"BOOLEAN['#2', 'are topped with #4']\"]"}
{"id": "NLVR2_dev_dev-616-3-1", "input": "If there is a stairway with the rails made of wood, the rails are positioned horizontally", "output": "[\"SELECT['stairway']\", \"PROJECT['rails of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'are made of wood']\", \"COMPARATIVE['#3', '#2', 'are positioned horizontally']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-617-1-0", "input": "If exactly one bus' passenger doors are open.", "output": "[\"SELECT['buses']\", \"PROJECT['passenger doors of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'are open']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-617-2-1", "input": "If each image shows the front of a flat-fronted bus, and the buses depicted on the left and right are angled in the same direction.", "output": "[\"SELECT['bus']\", \"FILTER['#1', 'that is flat-fronted']\", \"PROJECT['the front of #REF', '#2']\", \"PROJECT['images of #REF', '#3']\", \"SELECT['images']\", \"AGGREGATE['count', '#4']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to #7']\", \"FILTER['#1', 'on the left']\", \"FILTER['#1', 'on the right']\", \"PROJECT['direction angled in of #REF', '#9']\", \"PROJECT['direction angled in of #REF', '#10']\", \"BOOLEAN['#11', 'is the same as #12']\", \"BOOLEAN['logical_and', 'true', '#8', '#13']\"]"}
{"id": "NLVR2_dev_dev-618-1-0", "input": "If the left and right image contains a total of two horses facing the same direction.", "output": "[\"SELECT['the left image']\", \"PROJECT['horses in #REF', '#1']\", \"PROJECT['direction facing of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is the same']\", \"AGGREGATE['count', '#4']\", \"SELECT['the right image']\", \"PROJECT['horses in #REF', '#6']\", \"PROJECT['direction facing of #REF', '#7']\", \"COMPARATIVE['#7', '#8', 'is the same']\", \"AGGREGATE['count', '#9']\", \"ARITHMETIC['sum', '#5', '#10']\", \"BOOLEAN['#11', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-618-3-1", "input": "If an image shows a woman in a hat riding a two wheeled cart pulled by a chestnut-brown horse wearing blinders, on green grass.", "output": "[\"SELECT['woman']\", \"SELECT['hat']\", \"FILTER['#1', 'in #2']\", \"SELECT['cart']\", \"FILTER['#4', 'that is two wheeled']\", \"FILTER['#3', 'riding #5']\", \"SELECT['horse']\", \"FILTER['#7', 'that is chestnut-brown']\", \"SELECT['blinders']\", \"FILTER['#8', 'wearing #9']\", \"FILTER['#6', 'pulled by #10']\", \"SELECT['grass']\", \"FILTER['#12', 'that is green']\", \"FILTER['#11', 'on #13']\", \"BOOLEAN['#14', 'is in an image']\"]"}
{"id": "NLVR2_dev_dev-619-1-0", "input": "If a person is modeling the mittens in the image on the right.", "output": "[\"SELECT['right image']\", \"PROJECT['person of #REF', '#1']\", \"PROJECT['mittens of #REF', '#1']\", \"BOOLEAN['#2', 'is modeling #3']\"]"}
{"id": "NLVR2_dev_dev-619-3-1", "input": "If a pair of gloves has a snowflake design on them.", "output": "[\"SELECT['gloves']\", \"PROJECT['pair of #REF', '#1']\", \"SELECT['snowflake design']\", \"BOOLEAN['#2', 'has #3']\"]"}
{"id": "NLVR2_dev_dev-6-2-0", "input": "If each image contains at least five pet rodents, and no image includes a part of a person.", "output": "[\"SELECT['rodents']\", \"FILTER['#1', 'that are pet']\", \"SELECT['images']\", \"GROUP['count', '#2', '#3']\", \"COMPARATIVE['#3', '#4', 'is at least five']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to #7']\", \"SELECT['person']\", \"PROJECT['part of #REF', '#9']\", \"PROJECT['images of #REF', '#10']\", \"AGGREGATE['count', '#11']\", \"BOOLEAN['#12', 'is equal to zero']\", \"BOOLEAN['logical_and', 'true', '#8', '#13']\"]"}
{"id": "NLVR2_dev_dev-62-0-1", "input": "If at least one of the images shows a person's hand on the pencil holder.", "output": "[\"SELECT['person']\", \"PROJECT['hand of #REF', '#1']\", \"SELECT['pencil holder']\", \"FILTER['#2', 'on #3']\", \"PROJECT['images of #REF', '#4']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-620-3-0", "input": "If the right image contains no more than two penguins.", "output": "[\"SELECT['right image']\", \"PROJECT['penguins of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at most two']\"]"}
{"id": "NLVR2_dev_dev-6-2-1", "input": "If exactly one hamster wheel is visible.", "output": "[\"SELECT['hamster wheel']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-621-2-1", "input": "If a ladder is standing on a wood floor in front of a tall bookshelf filled with a variety of items.", "output": "[\"SELECT['ladder']\", \"SELECT['floor']\", \"FILTER['#2', 'that is wood']\", \"SELECT['bookshelf']\", \"SELECT['items']\", \"FILTER['#4', 'that is filled with a variety of #5']\", \"FILTER['#6', 'that is tall']\", \"BOOLEAN['#3', 'is in front of #7']\"]"}
{"id": "NLVR2_dev_dev-622-0-0", "input": "If one of the cars has no people in it and the other car is being driven on the road.", "output": "[\"SELECT['cars']\", \"SELECT['people']\", \"FILTER['#2', 'in #1']\", \"GROUP['count', '#3', '#1']\", \"COMPARATIVE['#1', '#4', 'is equal to zero']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to one']\", \"SELECT['the road']\", \"FILTER['#1', 'being driven on #8']\", \"AGGREGATE['count', '#9']\", \"BOOLEAN['#10', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#7', '#11']\"]"}
{"id": "NLVR2_dev_dev-623-2-0", "input": "If there are exactly five wolves.", "output": "[\"SELECT['wolves']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is equal to five']\"]"}
{"id": "NLVR2_dev_dev-624-2-1", "input": "If each image contains a black phone with an antenna on top, and the phone on the left has square number buttons, while the phoe on the right has oval buttons.", "output": "[\"SELECT['phone']\", \"FILTER['#1', 'that is black']\", \"SELECT['antenna']\", \"FILTER['#3', 'on top of #2']\", \"FILTER['#2', 'with #4']\", \"PROJECT['images of #REF', '#5']\", \"SELECT['images']\", \"AGGREGATE['count', '#6']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is equal to #9']\", \"FILTER['#1', 'on the left']\", \"FILTER['#1', 'on the right']\", \"PROJECT['number buttons of #REF', '#11']\", \"PROJECT['number buttons of #REF', '#12']\", \"BOOLEAN['#13', 'are square']\", \"BOOLEAN['#14', 'are oval']\", \"BOOLEAN['logical_and', 'true', '#15', '#16']\", \"BOOLEAN['logical_and', 'true', '#10', '#17']\"]"}
{"id": "NLVR2_dev_dev-625-1-0", "input": "If the right image contains one dog chewing on something.", "output": "[\"SELECT['right image']\", \"PROJECT['dog in #REF', '#1']\", \"FILTER['#2', 'that is chewing on something']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-625-3-1", "input": "If in one of the images, a human can be seen to the left of the dog.", "output": "[\"SELECT['human']\", \"SELECT['dog']\", \"FILTER['#1', 'that is to the left of #2']\", \"BOOLEAN['#3', 'is in one of the images']\"]"}
{"id": "NLVR2_dev_dev-626-0-1", "input": "If all of the containers are clear.", "output": "[\"SELECT['containers']\", \"FILTER['#1', 'that are clear']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to #4']\"]"}
{"id": "NLVR2_dev_dev-626-2-0", "input": "If there is no less than eight beakes with no repeating colors of liquid in each image.", "output": "[\"SELECT['beakes']\", \"PROJECT['liquid that #REF is with', '#1']\", \"PROJECT['colors of #REF', '#2']\", \"COMPARATIVE['#1', '#3', 'are repeating']\", \"DISCARD['#1', '#4']\", \"SELECT['images']\", \"AGGREGATE['count', '#5']\", \"COMPARATIVE['#6', '#7', 'is at least eight']\", \"AGGREGATE['count', '#6']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is equal to #10']\"]"}
{"id": "NLVR2_dev_dev-627-1-1", "input": "If one image features one mountain goat standing on a peak, and the other image features two mountain goats on a sheer, vertical rock side.", "output": "[\"SELECT['one image']\", \"PROJECT['mountain goat in #REF', '#1']\", \"PROJECT['peak in #REF', '#1']\", \"FILTER['#2', 'that is standing on #3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to one']\", \"SELECT['other image']\", \"PROJECT['mountain goats in #REF', '#7']\", \"PROJECT['rock side in #REF', '#7']\", \"FILTER['#9', 'that is vertical']\", \"FILTER['#10', 'that is sheer']\", \"FILTER['#8', 'that are on #11']\", \"AGGREGATE['count', '#12']\", \"BOOLEAN['#13', 'is equal to two']\", \"BOOLEAN['logical_and', 'true', '#6', '#14']\"]"}
{"id": "NLVR2_dev_dev-627-2-0", "input": "If an animal is standing on the top of a object.", "output": "[\"SELECT['animal']\", \"SELECT['object']\", \"BOOLEAN['#1', 'is standing on top of #2']\"]"}
{"id": "NLVR2_dev_dev-628-3-0", "input": "If there are at least two dogs in one of the images.", "output": "[\"SELECT['dogs']\", \"SELECT['images']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is at least two']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-628-3-1", "input": "If in the image on the left there is a single light beige colored dog with a black nose.", "output": "[\"SELECT['left image']\", \"PROJECT['dog in #REF', '#1']\", \"FILTER['#2', 'that is light beige colored']\", \"PROJECT['nose of #REF', '#3']\", \"COMPARATIVE['#3', '#4', 'is black']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-629-0-0", "input": "If the right image contains a dog eating out of a bowl.", "output": "[\"SELECT['right image']\", \"PROJECT['dog in #REF', '#1']\", \"PROJECT['bowl in #REF', '#1']\", \"FILTER['#2', 'that is eating out of #3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-629-3-1", "input": "If the right image shows a cocker spaniel eating from a bowl on the floor", "output": "[\"SELECT['cocker spaniel']\", \"SELECT['bowl']\", \"SELECT['the floor']\", \"FILTER['#2', 'on #3']\", \"FILTER['#1', 'eating from #4']\", \"BOOLEAN['#5', 'is in the right image']\"]"}
{"id": "NLVR2_dev_dev-630-0-1", "input": "If the left and right image contains the same number of stingrays touching the sand.", "output": "[\"SELECT['stingrays']\", \"SELECT['sand']\", \"FILTER['#1', 'that are touching #2']\", \"SELECT['left image']\", \"SELECT['right image']\", \"FILTER['#3', 'that are in #4']\", \"FILTER['#3', 'that are in #5']\", \"AGGREGATE['count', '#6']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is equal to #9']\"]"}
{"id": "NLVR2_dev_dev-630-2-0", "input": "If an image shows a top-view of a rightward facing stingray with vivid blue dots on deep gray skin.", "output": "[\"SELECT['stingray']\", \"FILTER['#1', 'that is rightward facing']\", \"PROJECT['skin of #REF', '#2']\", \"FILTER['#3', 'that is deep gray']\", \"FILTER['#4', 'that has vivid blue dots']\", \"FILTER['#2', 'that has #5']\", \"PROJECT['top-view of #REF', '#6']\", \"BOOLEAN['#7', 'is in an image']\"]"}
{"id": "NLVR2_dev_dev-63-1-1", "input": "If six rolls of paper towels are enclosed in a plastic package with the brand name on it.", "output": "[\"SELECT['package']\", \"FILTER['#1', 'that is plastic']\", \"FILTER['#2', 'with the brand name on it']\", \"SELECT['rolls of paper towels']\", \"FILTER['#4', 'enclosed in #3']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to six']\"]"}
{"id": "NLVR2_dev_dev-631-2-0", "input": "If in one image, a barber in a black shirt is working on the hair of a person who is sitting in a chair.", "output": "[\"SELECT['barber']\", \"SELECT['shirt']\", \"FILTER['#2', 'that is black']\", \"SELECT['person']\", \"SELECT['chair']\", \"FILTER['#4', 'sitting in #5']\", \"FILTER['#1', 'that is in #3']\", \"PROJECT['the hair of #REF', '#6']\", \"FILTER['#7', 'working on #8']\", \"BOOLEAN['#8', 'is in one image']\"]"}
{"id": "NLVR2_dev_dev-63-2-0", "input": "If one of the images contains a 6 roll package of paper towels.", "output": "[\"SELECT['package of paper towels']\", \"PROJECT['paper towel rolls of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is equal to 6']\", \"BOOLEAN['#4', 'is in one of the images']\"]"}
{"id": "NLVR2_dev_dev-632-2-0", "input": "If one dog is wearing a red collar and the other dog has it's tongue hanging out.", "output": "[\"SELECT['one dog']\", \"SELECT['collar']\", \"FILTER['#2', 'that is red']\", \"BOOLEAN['#1', 'is wearing #3']\", \"SELECT['the other dog']\", \"PROJECT['tongue of #REF', '#5']\", \"BOOLEAN['#6', 'is hanging out']\", \"BOOLEAN['logical_and', 'true', '#4', '#7']\"]"}
{"id": "NLVR2_dev_dev-632-3-1", "input": "If the right image contains a brown dog with its tongue exposed.", "output": "[\"SELECT['dog']\", \"FILTER['#1', 'that is brown']\", \"PROJECT['tongue of #REF', '#2']\", \"FILTER['#2', 'with #3 exposed']\", \"BOOLEAN['#4', 'is in right image']\"]"}
{"id": "NLVR2_dev_dev-633-0-0", "input": "If the image on the left has a boat that is completely in the water and is sailing.", "output": "[\"SELECT['boat']\", \"SELECT['the water']\", \"FILTER['#1', 'that is completely in #2']\", \"FILTER['#3', 'that is sailing']\", \"BOOLEAN['#4', 'is in the image on the left']\"]"}
{"id": "NLVR2_dev_dev-633-1-1", "input": "If there is a yellow boat sitting on the grass in one of the images.", "output": "[\"SELECT['boat']\", \"FILTER['#1', 'that is yellow']\", \"SELECT['grass']\", \"FILTER['#2', 'sitting on #3']\", \"BOOLEAN['#4', 'is in one of the images']\"]"}
{"id": "NLVR2_dev_dev-634-0-1", "input": "If in one of the images, at least some of the rind is separated from the lemon.", "output": "[\"SELECT['lemon']\", \"PROJECT['rind of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is separated']\", \"BOOLEAN['#3', 'is in one of the images']\"]"}
{"id": "NLVR2_dev_dev-634-3-0", "input": "If the left image contains two whole lemons and one half of a lemon.", "output": "[\"SELECT['left image']\", \"PROJECT['lemons in #REF', '#1']\", \"FILTER['#2', 'that are whole']\", \"FILTER['#2', 'that is half']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to two']\", \"BOOLEAN['#6', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#7', '#8']\"]"}
{"id": "NLVR2_dev_dev-635-0-0", "input": "If the left and right image contains at least one full head of broccoli.", "output": "[\"SELECT['broccolis']\", \"PROJECT['full head of #REF', '#1']\", \"SELECT['left image']\", \"SELECT['right image']\", \"FILTER['#2', 'that are in #3']\", \"FILTER['#2', 'that are in #4']\", \"AGGREGATE['count', '#5']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is at least one']\", \"BOOLEAN['#8', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#9', '#10']\"]"}
{"id": "NLVR2_dev_dev-636-3-0", "input": "If at least one fish is facing left in the right image.", "output": "[\"SELECT['right image']\", \"PROJECT['fish of #REF', '#1']\", \"FILTER['#2', 'that are facing left']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-637-0-0", "input": "If the baby cheetah is sitting below the mama cheetah in the left image.", "output": "[\"SELECT['the left image']\", \"PROJECT['cheetah in #REF', '#1']\", \"FILTER['#2', 'that is a baby']\", \"FILTER['#2', 'that is the mama of #3']\", \"BOOLEAN['#3', 'is sitting below #4']\"]"}
{"id": "NLVR2_dev_dev-637-1-1", "input": "If there are two cheetahs jumping and fighting with each other.", "output": "[\"SELECT['cheetahs']\", \"FILTER['#1', 'that are jumping']\", \"FILTER['#2', 'that are fighting with each other']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-638-2-0", "input": "If an image shows real pinkish flowers sticking out from a white cup printed with the same color flowers.", "output": "[\"SELECT['flowers']\", \"FILTER['#1', 'that are pinkish']\", \"FILTER['#2', 'that are real']\", \"SELECT['cup']\", \"FILTER['#4', 'that is white']\", \"PROJECT['flowers that #REF is printed with', '#5']\", \"PROJECT['color of #REF', '#3']\", \"PROJECT['color of #REF', '#6']\", \"COMPARATIVE['#5', '#8', 'is the same as #7']\", \"FILTER['#3', 'that are sticking out from #9']\", \"BOOLEAN['#10', 'is in an image']\"]"}
{"id": "NLVR2_dev_dev-639-1-0", "input": "If in at least one image there is a single horse pulling a cart left.", "output": "[\"SELECT['horse']\", \"SELECT['a cart']\", \"FILTER['#1', 'pulling #2 to the left']\", \"BOOLEAN['#3', 'is in at least one image']\"]"}
{"id": "NLVR2_dev_dev-640-1-1", "input": "If the drum kit on the left has violet color around each drum, and the kit on the right has red around each drum.", "output": "[\"SELECT['drum kit']\", \"FILTER['#1', 'on the left']\", \"FILTER['#1', 'on the right']\", \"PROJECT['drums of #REF', '#2']\", \"PROJECT['drums of #REF', '#3']\", \"PROJECT['color around #REF', '#4']\", \"PROJECT['color around #REF', '#5']\", \"COMPARATIVE['#4', '#6', 'is violet']\", \"COMPARATIVE['#5', '#7', 'is red']\", \"AGGREGATE['count', '#4']\", \"AGGREGATE['count', '#5']\", \"AGGREGATE['count', '#8']\", \"AGGREGATE['count', '#9']\", \"BOOLEAN['#12', 'is equal to #10']\", \"BOOLEAN['#13', 'is equal to #11']\", \"BOOLEAN['logical_and', 'true', '#14', '#15']\"]"}
{"id": "NLVR2_dev_dev-640-3-0", "input": "If one set of drums is pink and the other set of drums is red.", "output": "[\"SELECT['set of drums']\", \"FILTER['#1', 'that is pink']\", \"FILTER['#1', 'that is red']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to one']\", \"BOOLEAN['#5', 'is equal to one']\", \"BOOLEAN['#6', 'is equal to #7']\"]"}
{"id": "NLVR2_dev_dev-641-2-0", "input": "If there are at least two chevy corvette convertible cars.", "output": "[\"SELECT['cars']\", \"FILTER['#1', 'that are convertible']\", \"FILTER['#2', 'that are chevy corvette']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least two']\"]"}
{"id": "NLVR2_dev_dev-641-2-1", "input": "If all of the convertibles have their tops down.", "output": "[\"SELECT['convertibles']\", \"PROJECT['tops of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'are down']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#5', 'is equal to #4']\"]"}
{"id": "NLVR2_dev_dev-642-0-0", "input": "If there are at least two glass cups with food in them.", "output": "[\"SELECT['cups']\", \"FILTER['#1', 'that is glass']\", \"SELECT['food']\", \"FILTER['#2', 'that has #3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least two']\"]"}
{"id": "NLVR2_dev_dev-64-2-1", "input": "If a single dog is outdoors in each of the images.", "output": "[\"SELECT['images']\", \"PROJECT['dogs in #REF', '#1']\", \"FILTER['#2', 'that are outdoors']\", \"GROUP['count', '#3', '#1']\", \"COMPARATIVE['#1', '#4', 'is equal to one']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#7', 'is equal to #6']\"]"}
{"id": "NLVR2_dev_dev-642-3-1", "input": "If all the desserts have chocolate shavings on top.", "output": "[\"SELECT['desserts']\", \"SELECT['chocolate shavings']\", \"PROJECT['top of #REF', '#1']\", \"FILTER['#1', 'that has #2 on #3']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to #6']\"]"}
{"id": "NLVR2_dev_dev-643-2-0", "input": "If both images shows a silver pail being used as a flower vase.", "output": "[\"SELECT['pail']\", \"FILTER['#1', 'that is silver']\", \"FILTER['#2', 'that is being used as a flower vase']\", \"SELECT['images']\", \"GROUP['count', '#3', '#4']\", \"COMPARATIVE['#4', '#5', 'is at least one']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-643-3-1", "input": "If there are exactly two metal vases.", "output": "[\"SELECT['vases']\", \"FILTER['#1', 'that are metal']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-644-0-0", "input": "If all the lemons are free of leaves.", "output": "[\"SELECT['lemons']\", \"SELECT['leaves']\", \"FILTER['#1', 'that have #2']\", \"DISCARD['#1', '#3']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to #6']\"]"}
{"id": "NLVR2_dev_dev-644-2-1", "input": "If the left image includes lemon leaves.", "output": "[\"SELECT['lemon leaves']\", \"BOOLEAN['#1', 'are in the image on the left']\"]"}
{"id": "NLVR2_dev_dev-645-2-0", "input": "If a single person is standing near a wild pig in one of the images.", "output": "[\"SELECT['person']\", \"SELECT['a wild pig']\", \"FILTER['#1', 'standing near #2']\", \"BOOLEAN['#3', 'is in one of the images']\"]"}
{"id": "NLVR2_dev_dev-645-3-1", "input": "If there is no more than one boar in the left image.", "output": "[\"SELECT['left image']\", \"PROJECT['boar in #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at most one']\"]"}
{"id": "NLVR2_dev_dev-646-0-1", "input": "If there is an oval outer cushioned area of padding on the knee pads in the image on the right.", "output": "[\"SELECT['the image on the right']\", \"PROJECT['knee pads in #REF', '#1']\", \"PROJECT['area of padding of #REF', '#2']\", \"FILTER['#3', 'that is cushioned']\", \"PROJECT['the outer of #REF', '#2']\", \"FILTER['#4', 'on #5']\", \"BOOLEAN['#6', 'is an oval']\"]"}
{"id": "NLVR2_dev_dev-646-2-0", "input": "If each image contains two pads and no other items, and one pair of pads faces directly forward.", "output": "[\"SELECT['images']\", \"PROJECT['pads in #REF', '#1']\", \"PROJECT['items in #REF', '#1']\", \"DISCARD['#3', '#2']\", \"GROUP['count', '#2', '#1']\", \"GROUP['count', '#4', '#1']\", \"COMPARATIVE['#1', '#5', 'is equal to two']\", \"COMPARATIVE['#1', '#6', 'is equal to zero']\", \"INTERSECTION['#1', '#7', '#8']\", \"AGGREGATE['count', '#9']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#10', 'is equal to #11']\", \"FILTER['#2', 'that face directly forward']\", \"AGGREGATE['count', '#13']\", \"BOOLEAN['#14', 'is equal to two']\", \"BOOLEAN['logical_and', 'true', '#12', '#15']\"]"}
{"id": "NLVR2_dev_dev-647-0-0", "input": "If there are three different colors of bottles.", "output": "[\"SELECT['bottles']\", \"PROJECT['colors of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to three']\"]"}
{"id": "NLVR2_dev_dev-647-2-1", "input": "If the left and right image contains a total number of three lotion bottles.", "output": "[\"SELECT['left image']\", \"SELECT['right image']\", \"PROJECT['lotion bottles in #REF', '#1']\", \"PROJECT['lotion bottles in #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['sum', '#5', '#6']\", \"BOOLEAN['#7', 'is equal to three']\"]"}
{"id": "NLVR2_dev_dev-648-0-1", "input": "If the combined images include two look-alike close-mouthed young husky dogs in similar poses.", "output": "[\"SELECT['husky dogs']\", \"FILTER['#1', 'that are young']\", \"FILTER['#2', 'that are close-mouthed']\", \"FILTER['#3', 'that are look-alike']\", \"PROJECT['poses of #REF', '#4']\", \"COMPARATIVE['#4', '#5', 'is similar']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-648-1-0", "input": "If the left and right image contains the same number of grey and white huskies.", "output": "[\"SELECT['huskies']\", \"FILTER['#1', 'that are grey and white']\", \"SELECT['left image']\", \"SELECT['right image']\", \"FILTER['#2', 'that are in #3']\", \"FILTER['#2', 'that are in #4']\", \"AGGREGATE['count', '#5']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to #8']\"]"}
{"id": "NLVR2_dev_dev-649-2-1", "input": "If there are two black coffees.", "output": "[\"SELECT['coffees']\", \"FILTER['#1', 'that are black']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-649-3-0", "input": "If two of the coffees are black.", "output": "[\"SELECT['coffees']\", \"FILTER['#1', 'that are black']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-65-0-0", "input": "If there are no more than three elephants.", "output": "[\"SELECT['elephants']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is at most three']\"]"}
{"id": "NLVR2_dev_dev-650-1-1", "input": "If the left and right image contains the same number of  computer monitors.", "output": "[\"SELECT['the left image']\", \"SELECT['the right image']\", \"PROJECT['computer monitors in #REF', '#1']\", \"PROJECT['computer monitors in #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to #6']\"]"}
{"id": "NLVR2_dev_dev-651-1-1", "input": "If in at least one image there is a single bus facing right forward.", "output": "[\"SELECT['bus']\", \"FILTER['#1', 'that is facing right forward']\", \"SELECT['images']\", \"GROUP['count', '#2', '#3']\", \"COMPARATIVE['#3', '#4', 'is equal to one']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-652-1-0", "input": "If each image contains a single long-eared hound, and in at least one image, the hound has its face in a bowl.", "output": "[\"SELECT['hounds']\", \"FILTER['#1', 'that are long-eared']\", \"SELECT['images']\", \"GROUP['count', '#2', '#3']\", \"COMPARATIVE['#3', '#4', 'is equal to one']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to #7']\", \"SELECT['bowl']\", \"PROJECT['face of #REF', '#1']\", \"FILTER['#10', 'that is in #9']\", \"FILTER['#1', 'that has']\", \"BOOLEAN['#12', 'is in at least one image']\", \"BOOLEAN['logical_and', 'true', '#8', '#13']\"]"}
{"id": "NLVR2_dev_dev-652-2-1", "input": "If the dog in the image on the right is touching a food dish with its face.", "output": "[\"SELECT['right image']\", \"PROJECT['dog of #REF', '#1']\", \"PROJECT['face of #REF', '#2']\", \"SELECT['food dish']\", \"BOOLEAN['#3', 'is touching #4']\"]"}
{"id": "NLVR2_dev_dev-653-0-1", "input": "If in at least one image there is one man in a long sleeve blue shirt with black hair force feeding a duck through a tube.", "output": "[\"SELECT['man']\", \"SELECT['shirt']\", \"FILTER['#2', 'that is blue']\", \"PROJECT['sleeves of #REF', '#3']\", \"COMPARATIVE['#3', '#4', 'are long']\", \"FILTER['#1', 'that is in #5']\", \"PROJECT['hair of #REF', '#1']\", \"COMPARATIVE['#6', '#7', 'is black']\", \"SELECT['duck']\", \"FILTER['#8', 'force feeding #9']\", \"SELECT['tube']\", \"FILTER['#10', 'through #11']\", \"PROJECT['images of #REF', '#12']\", \"AGGREGATE['count', '#13']\", \"BOOLEAN['#14', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-65-3-1", "input": "If the center of one image contains at least one baby elephant in tall grass, and no adults.", "output": "[\"SELECT['images']\", \"PROJECT['the center of #REF', '#1']\", \"PROJECT['elephants in #REF', '#1']\", \"FILTER['#3', 'that are babies']\", \"FILTER['#3', 'that are adults']\", \"FILTER['#4', 'in #2']\", \"FILTER['#5', 'in #2']\", \"PROJECT['grass in #REF', '#1']\", \"FILTER['#8', 'that is tall']\", \"FILTER['#6', 'in #9']\", \"FILTER['#7', 'in #9']\", \"GROUP['count', '#10', '#1']\", \"GROUP['count', '#11', '#1']\", \"COMPARATIVE['#1', '#12', 'is at least one']\", \"COMPARATIVE['#1', '#13', 'is equal to zero']\", \"INTERSECTION['#1', '#14', '#15']\", \"AGGREGATE['count', '#16']\", \"BOOLEAN['#17', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-653-3-0", "input": "If two geese are being force fed.", "output": "[\"SELECT['geese']\", \"FILTER['#1', 'that are force fed']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-654-0-1", "input": "If the left image shows a parked, angled bus with a completely flat front, and the right image includes at least one bus with a hood that projects outward below the windshield.", "output": "[\"SELECT['bus']\", \"FILTER['#1', 'that is parked']\", \"FILTER['#2', 'that is angled']\", \"PROJECT['front of #REF', '#3']\", \"COMPARATIVE['#3', '#4', 'is completely flat']\", \"BOOLEAN['#5', 'is in the left image']\", \"SELECT['the right image']\", \"PROJECT['buses in #REF', '#7']\", \"PROJECT['hood of #REF', '#8']\", \"PROJECT['windshield of #REF', '#8']\", \"FILTER['#8', 'where #9 projects outward below #10']\", \"AGGREGATE['count', '#11']\", \"BOOLEAN['#12', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#6', '#13']\"]"}
{"id": "NLVR2_dev_dev-654-2-0", "input": "If a single bus is parked in a lot in the image on the left.", "output": "[\"SELECT['left image']\", \"PROJECT['bus in #REF', '#1']\", \"PROJECT['lot in #REF', '#1']\", \"FILTER['#2', 'that is parked in #3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-655-1-1", "input": "If the left image contains one left-gazing afghan hound with a dark muzzle, and the right image contains a standing hound with a tail that forms an upward curl.", "output": "[\"SELECT['left image']\", \"PROJECT['afghan hound in #REF', '#1']\", \"FILTER['#2', 'that is left-gazing']\", \"PROJECT['muzzle of #REF', '#3']\", \"COMPARATIVE['#3', '#4', 'is dark']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to one']\", \"SELECT['right image']\", \"PROJECT['hound in #REF', '#8']\", \"FILTER['#9', 'that is standing']\", \"PROJECT['tail of #REF', '#10']\", \"FILTER['#10', 'where #11 forms an upward curl']\", \"AGGREGATE['count', '#12']\", \"BOOLEAN['#13', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#7', '#14']\"]"}
{"id": "NLVR2_dev_dev-655-2-0", "input": "If in at least one image there is a dog with both black and white fur with their face pointed right forward.", "output": "[\"SELECT['dog']\", \"PROJECT['fur of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is black']\", \"COMPARATIVE['#1', '#2', 'is white']\", \"INTERSECTION['#1', '#3', '#4']\", \"PROJECT['face of #REF', '#5']\", \"COMPARATIVE['#5', '#6', 'is pointed right forward']\", \"BOOLEAN['#7', 'is in at least one image']\"]"}
{"id": "NLVR2_dev_dev-656-0-1", "input": "If the left and right image contains the same number of bottled beers.", "output": "[\"SELECT['the left image']\", \"SELECT['the right image']\", \"PROJECT['beers in #REF', '#1']\", \"PROJECT['beers in #REF', '#2']\", \"FILTER['#3', 'that are bottled']\", \"FILTER['#4', 'that are bottled']\", \"AGGREGATE['count', '#5']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to #8']\"]"}
{"id": "NLVR2_dev_dev-656-2-0", "input": "If the left and right images contain the same number of bottles.", "output": "[\"SELECT['left image']\", \"SELECT['right image']\", \"PROJECT['bottles in #REF', '#1']\", \"PROJECT['bottles in #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to #6']\"]"}
{"id": "NLVR2_dev_dev-657-0-0", "input": "If the right side image has two cups", "output": "[\"SELECT['right image']\", \"PROJECT['cups in #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-658-1-0", "input": "If the right image shows a dark rectangular sign with light lettering hung horizontally above a counter.", "output": "[\"SELECT['right image']\", \"PROJECT['sign in #REF', '#1']\", \"FILTER['#2', 'that is rectangular']\", \"FILTER['#3', 'that is dark']\", \"FILTER['#4', 'that is with light lettering']\", \"PROJECT['counter in #REF', '#1']\", \"FILTER['#5', 'that is hung horizontally']\", \"FILTER['#7', 'that is hung above #6']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-658-3-1", "input": "If in at least one image there are at least three rows of writing on a chalkboard above a cafe.", "output": "[\"SELECT['rows of writing']\", \"SELECT['chalkboard']\", \"SELECT['cafe']\", \"FILTER['#2', 'that is above #3']\", \"FILTER['#1', 'that are on #4']\", \"SELECT['images']\", \"GROUP['count', '#5', '#6']\", \"COMPARATIVE['#6', '#7', 'is at least three']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-659-0-1", "input": "If there is a red jeep plowing the snow in one image and a a vehicle with a plow not in the snow in the other image.", "output": "[\"SELECT['one image']\", \"PROJECT['jeep in #REF', '#1']\", \"PROJECT['snow in #REF', '#1']\", \"FILTER['#2', 'that is red']\", \"FILTER['#4', 'that is plowing #3']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is at least one']\", \"SELECT['other image']\", \"PROJECT['vehicle in #REF', '#8']\", \"PROJECT['snow in #REF', '#8']\", \"FILTER['#9', 'that is with a plow']\", \"FILTER['#11', 'that is in #10']\", \"DISCARD['#11', '#12']\", \"AGGREGATE['count', '#13']\", \"BOOLEAN['#14', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#7', '#15']\"]"}
{"id": "NLVR2_dev_dev-659-2-0", "input": "If the left and right image contains the same number of jeep snow trucks that face opposite directions.", "output": "[\"SELECT['the left image']\", \"PROJECT['jeep snow trucks in #REF', '#1']\", \"PROJECT['direction face of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is the opposite']\", \"AGGREGATE['count', '#4']\", \"SELECT['the right image']\", \"PROJECT['jeep snow trucks in #REF', '#6']\", \"PROJECT['direction face of #REF', '#7']\", \"COMPARATIVE['#7', '#8', 'is the opposite']\", \"AGGREGATE['count', '#9']\", \"BOOLEAN['#5', 'is equal to #10']\"]"}
{"id": "NLVR2_dev_dev-660-2-1", "input": "If there is a minimum of 8 sports bottles present.", "output": "[\"SELECT['sports bottles']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is at least 8']\"]"}
{"id": "NLVR2_dev_dev-660-3-0", "input": "If there are no more than eight bottles in total.", "output": "[\"SELECT['bottles']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is at most eight']\"]"}
{"id": "NLVR2_dev_dev-661-0-0", "input": "If one image shows crab served on a round white plate, and the other image shows the gooey-looking interior of a crab.", "output": "[\"SELECT['one image']\", \"PROJECT['crab in #REF', '#1']\", \"PROJECT['plate in #REF', '#1']\", \"FILTER['#3', 'that is white']\", \"FILTER['#4', 'that is round']\", \"FILTER['#2', 'that is served on #5']\", \"SELECT['other image']\", \"PROJECT['interior of crab in #REF', '#7']\", \"FILTER['#8', 'that is gooey-looking']\", \"AGGREGATE['count', '#6']\", \"AGGREGATE['count', '#9']\", \"BOOLEAN['#10', 'is at least one']\", \"BOOLEAN['#11', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#12', '#13']\"]"}
{"id": "NLVR2_dev_dev-661-1-1", "input": "If a person is holding the crab in the image on the left.", "output": "[\"SELECT['left image']\", \"PROJECT['person of #REF', '#1']\", \"PROJECT['crab of #REF', '#1']\", \"BOOLEAN['#2', 'is holding #3']\"]"}
{"id": "NLVR2_dev_dev-66-2-0", "input": "If one sneaker has a blue upper front and blue laces, and the other sneaker has a black upper front teamed with green and yellow accents.", "output": "[\"SELECT['sneakers']\", \"PROJECT['upper front of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is blue']\", \"PROJECT['laces of #REF', '#3']\", \"COMPARATIVE['#3', '#4', 'is blue']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to one']\", \"FILTER['#2', 'that is black']\", \"FILTER['#8', 'that is teamed with green and yellow accents']\", \"FILTER['#1', 'that has #9']\", \"AGGREGATE['count', '#10']\", \"BOOLEAN['#11', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#7', '#12']\"]"}
{"id": "NLVR2_dev_dev-662-1-0", "input": "If in the image to the right, at least one syringe is placed horizontally; the actual syringe, and not the needle tips.", "output": "[\"SELECT['the image to the right']\", \"PROJECT['syringes in #REF', '#1']\", \"FILTER['#2', 'that are placed horizontally']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-662-1-1", "input": "If there are fewer than three plastic syringes in total.", "output": "[\"SELECT['syringes']\", \"FILTER['#1', 'that are plastic']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is lower than three']\"]"}
{"id": "NLVR2_dev_dev-66-3-1", "input": "If at least one of the shoes is red, black, blue, and white.", "output": "[\"SELECT['shoes']\", \"FILTER['#1', 'that is red , black , blue and white']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-663-1-0", "input": "If the crab in the left image is cooked and served on a platter.", "output": "[\"SELECT['left image']\", \"PROJECT['crab in #REF', '#1']\", \"FILTER['#2', 'that is cooked']\", \"PROJECT['platter in #REF', '#1']\", \"FILTER['#3', 'that is served on #4']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-663-2-1", "input": "If there are at least 6 crab legs cooked and sitting in a round bowl.", "output": "[\"SELECT['crab']\", \"PROJECT['legs of #REF', '#1']\", \"FILTER['#2', 'that are cooked']\", \"SELECT['bowl']\", \"FILTER['#4', 'that is round']\", \"FILTER['#3', 'sitting in #5']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is at least 6']\"]"}
{"id": "NLVR2_dev_dev-664-0-0", "input": "If an image shows a pale camel-colored standing dog, with a leash extending from its neck upward.", "output": "[\"SELECT['dog']\", \"FILTER['#1', 'that is pale']\", \"FILTER['#2', 'that is camel-colored']\", \"FILTER['#3', 'that is standing']\", \"PROJECT['neck of #REF', '#4']\", \"SELECT['leash']\", \"FILTER['#6', 'extending from #5 upward']\", \"FILTER['#4', 'with #7']\", \"BOOLEAN['#8', 'is in an image']\"]"}
{"id": "NLVR2_dev_dev-664-1-1", "input": "If an image contains a slim dog being held on a leash.", "output": "[\"SELECT['dog']\", \"FILTER['#1', 'that is slim']\", \"SELECT['leash']\", \"FILTER['#2', 'being held on #3']\", \"BOOLEAN['#4', 'is in an image']\"]"}
{"id": "NLVR2_dev_dev-665-1-0", "input": "If atleast 4 gorillas total", "output": "[\"SELECT['gorillas']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is at least 4']\"]"}
{"id": "NLVR2_dev_dev-665-2-1", "input": "If there is exactly one gorilla in the right image.", "output": "[\"SELECT['right image']\", \"PROJECT['gorillas in #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-666-0-0", "input": "If a lock has a circle with in a circle on the front", "output": "[\"SELECT['lock']\", \"PROJECT['front of #REF', '#1']\", \"FILTER['#1', 'that has circle with in a circle on #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-666-2-1", "input": "If all of the locks have a silver locking handle.", "output": "[\"SELECT['locks']\", \"PROJECT['locking handle of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is silver']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to #5']\"]"}
{"id": "NLVR2_dev_dev-667-1-0", "input": "If a convertible is parked on the side of the road with mountains in the background", "output": "[\"SELECT['convertible']\", \"SELECT['road']\", \"PROJECT['side of #REF', '#2']\", \"SELECT['mountains']\", \"FILTER['#4', 'that are in the background']\", \"FILTER['#3', 'with #5']\", \"BOOLEAN['#1', 'is parked on #6']\"]"}
{"id": "NLVR2_dev_dev-667-2-1", "input": "If the front end of both convertibles are facing the right side of the image.", "output": "[\"SELECT['the image']\", \"PROJECT['the right side of #REF', '#1']\", \"PROJECT['convertibles in #REF', '#1']\", \"PROJECT['front ends of #REF', '#3']\", \"FILTER['#4', 'that are facing #2']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-668-0-0", "input": "If each image includes at least one whole lemon and whole lime, and only the left image includes wedge-shaped fruits.", "output": "[\"SELECT['images']\", \"PROJECT['lemons in #REF', '#1']\", \"FILTER['#2', 'that are whole']\", \"PROJECT['limes in #REF', '#1']\", \"FILTER['#4', 'that are whole']\", \"GROUP['count', '#3', '#1']\", \"GROUP['count', '#5', '#1']\", \"COMPARATIVE['#1', '#6', 'is at least one']\", \"COMPARATIVE['#1', '#7', 'is at least one']\", \"INTERSECTION['#1', '#8', '#9']\", \"AGGREGATE['count', '#10']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#11', 'is equal to #12']\", \"SELECT['fruits']\", \"FILTER['#14', 'that are wedge-shaped']\", \"BOOLEAN['#15', 'are only in the left image']\", \"BOOLEAN['logical_and', 'true', '#13', '#16']\"]"}
{"id": "NLVR2_dev_dev-668-0-1", "input": "If in at least one image there is a single full lemon and lime.", "output": "[\"SELECT['images']\", \"PROJECT['lemons in #REF', '#1']\", \"FILTER['#2', 'that are full']\", \"GROUP['count', '#3', '#1']\", \"PROJECT['limes in #REF', '#1']\", \"FILTER['#5', 'that are full']\", \"GROUP['count', '#6', '#1']\", \"COMPARATIVE['#1', '#4', 'is equal to one']\", \"COMPARATIVE['#1', '#7', 'is equal to one']\", \"INTERSECTION['#1', '#8', '#9']\", \"AGGREGATE['count', '#10']\", \"BOOLEAN['#11', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-669-3-0", "input": "If each image shows a single colorful parrot-type bird, and the bird in the left image perches on a branch that extends from the right.", "output": "[\"SELECT['images']\", \"PROJECT['birds in #REF', '#1']\", \"FILTER['#2', 'that are colorful']\", \"FILTER['#3', 'that are parrot-type']\", \"GROUP['count', '#4', '#1']\", \"COMPARATIVE['#1', '#5', 'is equal to one']\", \"AGGREGATE['count', '#6']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#7', 'is equal to #8']\", \"SELECT['the left image']\", \"PROJECT['bird in #REF', '#10']\", \"PROJECT['branch in #REF', '#10']\", \"FILTER['#12', 'that extends from the right']\", \"BOOLEAN['#11', 'perches on #13']\", \"BOOLEAN['logical_and', 'true', '#9', '#14']\"]"}
{"id": "NLVR2_dev_dev-67-0-0", "input": "If the train in the left image is facing left.", "output": "[\"SELECT['left image']\", \"PROJECT['train in #REF', '#1']\", \"BOOLEAN['#2', 'is facing left']\"]"}
{"id": "NLVR2_dev_dev-670-1-0", "input": "If there are at least four keys.", "output": "[\"SELECT['keys']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is at least four']\"]"}
{"id": "NLVR2_dev_dev-671-0-0", "input": "If there is exactly one curved staircase.", "output": "[\"SELECT['staircase']\", \"FILTER['#1', 'that is curved']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-671-0-1", "input": "If one of the images has no potted plants in it while the other has two.", "output": "[\"SELECT['one image']\", \"PROJECT['potted plants in #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to zero']\", \"SELECT['other image']\", \"PROJECT['potted plants in #REF', '#5']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to two']\", \"BOOLEAN['logical_and', 'true', '#4', '#8']\"]"}
{"id": "NLVR2_dev_dev-672-1-1", "input": "If all the roofs are thatched.", "output": "[\"SELECT['roofs']\", \"FILTER['#1', 'that are thatched']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#4', 'is equal to #3']\"]"}
{"id": "NLVR2_dev_dev-672-2-0", "input": "If the right image shows straw-like thatch on a roof that slopes upward to the right.", "output": "[\"SELECT['thatch']\", \"FILTER['#1', 'that is straw-like']\", \"SELECT['roof']\", \"FILTER['#3', 'that slopes upward to the right']\", \"FILTER['#2', 'on #4']\", \"BOOLEAN['#5', 'is in the right image']\"]"}
{"id": "NLVR2_dev_dev-673-2-0", "input": "If there are stems showing in the two glass vases", "output": "[\"SELECT['stems']\", \"SELECT['vases']\", \"FILTER['#2', 'that are glass']\", \"FILTER['#3', 'with #1 showing']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-673-2-1", "input": "If in at least one image there is a large mason jar vase holding greenery.", "output": "[\"SELECT['mason jar vase']\", \"FILTER['#1', 'that is large']\", \"SELECT['greenery']\", \"FILTER['#2', 'holding #3']\", \"BOOLEAN['#4', 'is in at least one image']\"]"}
{"id": "NLVR2_dev_dev-674-0-0", "input": "If one man is sitting down on a chair-like piece of equipment and holding a dumbbell in each hand.", "output": "[\"SELECT['man']\", \"SELECT['piece of equipment']\", \"FILTER['#2', 'that is chair-like']\", \"FILTER['#1', 'that is sitting down on #3']\", \"PROJECT['hands of #REF', '#4']\", \"SELECT['dumbbells']\", \"FILTER['#5', 'that is holding #6']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-674-3-1", "input": "If the man lifting weights in the image on the left is sitting down.", "output": "[\"SELECT['left image']\", \"PROJECT['man of #REF', '#1']\", \"SELECT['weights']\", \"FILTER['#2', 'lifting #3']\", \"BOOLEAN['#4', 'is sitting down']\"]"}
{"id": "NLVR2_dev_dev-675-2-0", "input": "If each image contains exactly one cup, and one image features a white cup with a brown band around its middle and a lid on top.", "output": "[\"SELECT['cups']\", \"SELECT['images']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is equal to one']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to #6']\", \"FILTER['#1', 'that is white']\", \"PROJECT['middle of #REF', '#8']\", \"FILTER['#9', 'that has a brown band around']\", \"FILTER['#8', 'that has #10']\", \"PROJECT['top of #REF', '#11']\", \"FILTER['#11', 'that has a lid on #12']\", \"BOOLEAN['#13', 'is in one image']\", \"BOOLEAN['logical_and', 'true', '#7', '#14']\"]"}
{"id": "NLVR2_dev_dev-675-2-1", "input": "If there is exactly one lid.", "output": "[\"SELECT['lids']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-676-3-0", "input": "If the righthand image shows a pug that is upright inside some type of container, with at least one arm propped on its edge.", "output": "[\"SELECT['righthand image']\", \"PROJECT['pug in #REF', '#1']\", \"FILTER['#2', 'that is upright']\", \"PROJECT['some type of container in #REF', '#1']\", \"FILTER['#3', 'that is inside #4']\", \"PROJECT['edge of #REF', '#4']\", \"PROJECT['arms of #REF', '#5']\", \"FILTER['#7', 'that are propped on #6']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-677-1-0", "input": "If a chimp is eating another animal", "output": "[\"SELECT['chimp']\", \"SELECT['animal']\", \"DISCARD['#2', '#1']\", \"BOOLEAN['#1', 'is eating #3']\"]"}
{"id": "NLVR2_dev_dev-678-1-0", "input": "If there is an all in one fridge, stove and sink, with two burner eyes on the left.", "output": "[\"SELECT['all in one fridge , stove and sink']\", \"PROJECT['burner eyes of #REF', '#1']\", \"FILTER['#2', 'that are on the left']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-678-3-1", "input": "If one set of burners is gas.", "output": "[\"SELECT['sets of burners']\", \"FILTER['#1', 'that have gas burners']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-679-1-1", "input": "If a single jellyfish is traveling directly to the left in one of the images.", "output": "[\"SELECT['images']\", \"PROJECT['jellyfish in #REF', '#1']\", \"FILTER['#2', 'that are traveling directly to the left']\", \"GROUP['count', '#3', '#1']\", \"COMPARATIVE['#1', '#4', 'is equal to one']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-679-3-0", "input": "If there are at least four jelly fish.", "output": "[\"SELECT['jelly fish']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is at least four']\"]"}
{"id": "NLVR2_dev_dev-680-2-0", "input": "If a dung beetle is climbing down and off the right side of a mud ball.", "output": "[\"SELECT['dung beetle']\", \"SELECT['mud ball']\", \"FILTER['#1', 'that is climbing down #2']\", \"FILTER['#3', 'that is climbing off the right side of #2']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-680-3-1", "input": "If a black dug beetle is pushing a ball of dung in one image, and is without one in the other.", "output": "[\"SELECT['one image']\", \"PROJECT['dung beetle in #REF', '#1']\", \"PROJECT['ball of dung in #REF', '#1']\", \"BOOLEAN['#2', 'is pushing #3']\", \"SELECT['other image']\", \"PROJECT['dung beetle in #REF', '#5']\", \"PROJECT['dung in #REF', '#5']\", \"FILTER['#6', 'that is with #7']\", \"DISCARD['#6', '#8']\", \"AGGREGATE['count', '#9']\", \"BOOLEAN['#10', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#4', '#11']\"]"}
{"id": "NLVR2_dev_dev-68-1-0", "input": "If there are two rolled towels one blue and one pink.", "output": "[\"SELECT['towels']\", \"FILTER['#1', 'that are rolled']\", \"FILTER['#2', 'that are blue']\", \"FILTER['#2', 'that are pink']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to one']\", \"BOOLEAN['#6', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#7', '#8']\"]"}
{"id": "NLVR2_dev_dev-681-0-0", "input": "If animal antlers are mounted on a wall in a barber shop with multiple barber chairs in the foreground.", "output": "[\"SELECT['animal antlers']\", \"SELECT['wall']\", \"FILTER['#1', 'that are mounted on #2']\", \"SELECT['barber shop']\", \"FILTER['#4', 'that #3 is in']\", \"PROJECT['foreground of #REF', '#5']\", \"SELECT['barber chairs']\", \"FILTER['#7', 'that are in #6']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is at least two']\"]"}
{"id": "NLVR2_dev_dev-681-2-1", "input": "If the right image contains at least two empty chairs.", "output": "[\"SELECT['the right image']\", \"PROJECT['chairs in #REF', '#1']\", \"FILTER['#2', 'that are empty']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least two']\"]"}
{"id": "NLVR2_dev_dev-68-2-1", "input": "If there are two towels rolled up.", "output": "[\"SELECT['towels']\", \"FILTER['#1', 'that are rolled up']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-682-1-1", "input": "If the dog in the image on the left is sitting in a grassy area.", "output": "[\"SELECT['left image']\", \"PROJECT['dog of #REF', '#1']\", \"SELECT['area']\", \"FILTER['#3', 'that is grassy']\", \"BOOLEAN['#2', 'is sitting in #4']\"]"}
{"id": "NLVR2_dev_dev-682-3-0", "input": "If a person's hand is near the fur of one afghan hound, and the hound in the other image has blond hair parted in the middle.", "output": "[\"SELECT['person']\", \"PROJECT['hand of #REF', '#1']\", \"SELECT['one afghan hound']\", \"PROJECT['fur of #REF', '#3']\", \"BOOLEAN['#2', 'is near #4']\", \"SELECT['other hound']\", \"PROJECT['hair of #REF', '#6']\", \"FILTER['#7', 'that is blond']\", \"BOOLEAN['#8', 'is parted in the middle']\", \"BOOLEAN['logical_and', 'true', '#5', '#9']\"]"}
{"id": "NLVR2_dev_dev-683-0-0", "input": "If one convertible is displayed completely horizontally, and the other convertible is angled facing rightward.", "output": "[\"SELECT['one convertible']\", \"BOOLEAN['#1', 'is displayed completely horizontally']\", \"SELECT['the other convertible']\", \"BOOLEAN['#3', 'is angled facing rightward']\", \"BOOLEAN['logical_and', 'true', '#2', '#4']\"]"}
{"id": "NLVR2_dev_dev-683-1-1", "input": "If the convertibles are facing in the same position in the image pair", "output": "[\"SELECT['images']\", \"PROJECT['convertibles in #REF', '#1']\", \"PROJECT['positions facing in of #REF', '#2']\", \"BOOLEAN['#3', 'are the same']\"]"}
{"id": "NLVR2_dev_dev-684-0-1", "input": "If each image contains one pencil case, and all pencil cases are displayed head-on and feature some blue component.", "output": "[\"SELECT['pencil cases']\", \"SELECT['images']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is equal to one']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to #6']\", \"FILTER['#1', 'that are displayed head-on']\", \"PROJECT['components of #REF', '#8']\", \"COMPARATIVE['#8', '#9', 'is blue']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#10']\", \"BOOLEAN['#11', 'is equal to #12']\", \"BOOLEAN['logical_and', 'true', '#7', '#13']\"]"}
{"id": "NLVR2_dev_dev-684-1-0", "input": "If at least two colored pencils are near a pencil case.", "output": "[\"SELECT['colored pencils']\", \"SELECT['pencil case']\", \"FILTER['#1', 'that are near #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-685-1-0", "input": "If there are exactly two ferrets with mask fur patterns.", "output": "[\"SELECT['ferrets']\", \"PROJECT['fur pattern of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is a mask']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-685-3-1", "input": "If in at least one image the is one black fur masked ferret staring forward.", "output": "[\"SELECT['images']\", \"PROJECT['ferret in #REF', '#1']\", \"FILTER['#2', 'that are masked']\", \"FILTER['#3', 'that are staring forward']\", \"PROJECT['fur of #REF', '#4']\", \"COMPARATIVE['#4', '#5', 'is black']\", \"GROUP['count', '#6', '#1']\", \"COMPARATIVE['#1', '#7', 'is equal to one']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-686-0-1", "input": "If there are at most 4 pillows in the image pair.", "output": "[\"SELECT['images']\", \"PROJECT['pillows in #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"AGGREGATE['sum', '#3']\", \"BOOLEAN['#4', 'is at most 4']\"]"}
{"id": "NLVR2_dev_dev-686-2-0", "input": "If the pillow count in the left image outnumbers that in the right image by at least three to one.", "output": "[\"SELECT['the left image']\", \"SELECT['the right image']\", \"PROJECT['pillows in #REF', '#1']\", \"PROJECT['pillows in #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['division', '#5', '#6']\", \"BOOLEAN['#7', 'is at least three']\"]"}
{"id": "NLVR2_dev_dev-687-0-0", "input": "If each image contains exactly two dogs, and one image features matching black-and-white dogs reclining on grass.", "output": "[\"SELECT['dogs']\", \"SELECT['grass']\", \"FILTER['#1', 'reclining on #2']\", \"FILTER['#3', 'that are black-and-white']\", \"FILTER['#4', 'that are matching']\", \"BOOLEAN['#5', 'are in one image']\", \"PROJECT['images of #REF', '#1']\", \"GROUP['count', '#1', '#7']\", \"COMPARATIVE['#7', '#8', 'is equal to two']\", \"AGGREGATE['count', '#9']\", \"SELECT['images']\", \"AGGREGATE['count', '#11']\", \"BOOLEAN['#10', 'is equal to #12']\", \"BOOLEAN['logical_and', 'true', '#6', '#13']\"]"}
{"id": "NLVR2_dev_dev-687-1-1", "input": "If there is a pair of dogs that are sitting in the grass together and another pair that is not.", "output": "[\"SELECT['pair of dogs']\", \"SELECT['grass']\", \"FILTER['#1', 'that are sitting together']\", \"FILTER['#3', 'that are in #2']\", \"DISCARD['#1', '#4']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#6', 'is at least one']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#8', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#7', '#9']\"]"}
{"id": "NLVR2_dev_dev-688-2-1", "input": "If the image on the left has a dog wearing a collar", "output": "[\"SELECT['dog']\", \"SELECT['collar']\", \"FILTER['#1', 'wearing #2']\", \"BOOLEAN['#3', 'is in the left image']\"]"}
{"id": "NLVR2_dev_dev-688-3-0", "input": "If the dog in the image on the left is wearing a black  collar.", "output": "[\"SELECT['left image']\", \"PROJECT['dog of #REF', '#1']\", \"SELECT['collar']\", \"FILTER['#3', 'that is black']\", \"BOOLEAN['#2', 'is wearing #4']\"]"}
{"id": "NLVR2_dev_dev-689-1-0", "input": "If no more than two animals are pictured.", "output": "[\"SELECT['animals']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is at most two']\"]"}
{"id": "NLVR2_dev_dev-689-3-1", "input": "If each image shows a single young hyena pup, and the pups on the left and right share similar type body poses.", "output": "[\"SELECT['hyena pups']\", \"FILTER['#1', 'that are young']\", \"SELECT['images']\", \"GROUP['count', '#2', '#3']\", \"COMPARATIVE['#3', '#4', 'is equal to one']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to #7']\", \"FILTER['#2', 'that are on the left']\", \"FILTER['#2', 'that are on the right']\", \"PROJECT['body poses of #REF', '#9']\", \"PROJECT['body poses of #REF', '#10']\", \"BOOLEAN['#11', 'are similar type to #12']\", \"BOOLEAN['logical_and', 'true', '#8', '#12']\"]"}
{"id": "NLVR2_dev_dev-690-2-0", "input": "If in at least one image there are at least two green leaves and two full lemons.", "output": "[\"SELECT['leaves']\", \"FILTER['#1', 'that are green']\", \"SELECT['lemons']\", \"FILTER['#3', 'that are full']\", \"SELECT['images']\", \"GROUP['count', '#2', '#5']\", \"COMPARATIVE['#5', '#6', 'is at least two']\", \"GROUP['count', '#4', '#7']\", \"COMPARATIVE['#7', '#8', 'is equal to two']\", \"AGGREGATE['count', '#9']\", \"BOOLEAN['#10', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-690-3-1", "input": "If in one image, half a lemon with cut side to the front is placed in front of two whole lemons and leaves.", "output": "[\"SELECT['half a lemon']\", \"SELECT['lemon']\", \"PROJECT['cut side of #REF', '#1']\", \"COMPARATIVE['#1', '#3', 'is to the front']\", \"FILTER['#2', 'that are whole']\", \"SELECT['leaves']\", \"FILTER['#4', 'that is placed in front of #6']\", \"FILTER['#5', 'that #7 is placed in front of']\", \"SELECT['images']\", \"GROUP['count', '#8', '#9']\", \"COMPARATIVE['#9', '#10', 'is equal to two']\", \"AGGREGATE['count', '#11']\", \"BOOLEAN['#12', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-691-2-0", "input": "If each image contains a single furry black dog, and all dogs have their mouths open with tongues showing.", "output": "[\"SELECT['dogs']\", \"FILTER['#1', 'that are black']\", \"FILTER['#2', 'that are furry']\", \"SELECT['images']\", \"GROUP['count', '#3', '#4']\", \"COMPARATIVE['#4', '#5', 'is equal to one']\", \"AGGREGATE['count', '#4']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to #8']\", \"PROJECT['mouths of #REF', '#1']\", \"COMPARATIVE['#1', '#10', 'are open']\", \"PROJECT['tongues of #REF', '#11']\", \"COMPARATIVE['#11', '#12', 'are showing']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#13']\", \"BOOLEAN['#14', 'is equal to #15']\", \"BOOLEAN['logical_and', 'true', '#9', '#16']\"]"}
{"id": "NLVR2_dev_dev-692-2-0", "input": "If there are exactly nine water bottles in total.", "output": "[\"SELECT['water bottles']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is equal to nine']\"]"}
{"id": "NLVR2_dev_dev-69-3-0", "input": "If there is at least one dog in the image pair wearing a leash", "output": "[\"SELECT['dog']\", \"SELECT['leash']\", \"FILTER['#1', 'that is wearing #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-693-0-0", "input": "If the broccoli is sitting on plates with some sort of blue design in the images.", "output": "[\"SELECT['broccoli']\", \"SELECT['plates']\", \"FILTER['#2', 'with some sort of blue design']\", \"FILTER['#1', 'sitting on #3']\", \"BOOLEAN['#4', 'is in the images']\"]"}
{"id": "NLVR2_dev_dev-694-2-1", "input": "If the black dog on the left is wearing a leash and collar.", "output": "[\"SELECT['dog']\", \"FILTER['#1', 'that is black']\", \"FILTER['#2', 'that is on the left']\", \"SELECT['leash']\", \"SELECT['collar']\", \"BOOLEAN['#3', 'is wearing #4']\", \"BOOLEAN['#3', 'is wearing #5']\", \"BOOLEAN['logical_and', 'true', '#6', '#7']\"]"}
{"id": "NLVR2_dev_dev-694-3-0", "input": "If each image features a solid black dog, and the dog on the left wears a leash.", "output": "[\"SELECT['dogs']\", \"FILTER['#1', 'that are solid black']\", \"SELECT['images']\", \"GROUP['count', '#2', '#3']\", \"COMPARATIVE['#3', '#4', 'is equal to one']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to #7']\", \"FILTER['#1', 'that is on the left']\", \"SELECT['leash']\", \"BOOLEAN['#9', 'wears #10']\", \"BOOLEAN['logical_and', 'true', '#8', '#10']\"]"}
{"id": "NLVR2_dev_dev-695-0-1", "input": "If there are three or more saxophones in total.", "output": "[\"SELECT['saxophones']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is at least three']\"]"}
{"id": "NLVR2_dev_dev-695-2-0", "input": "If there are at least two saxophones in the left image.", "output": "[\"SELECT['the left image']\", \"PROJECT['saxophones in #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at least two']\"]"}
{"id": "NLVR2_dev_dev-696-1-0", "input": "If in at least one inage their is a man with a grey suit with a paper sitting in a barber chair.", "output": "[\"SELECT['man']\", \"SELECT['suit']\", \"FILTER['#2', 'that is grey']\", \"FILTER['#1', 'that is with #3']\", \"SELECT['paper']\", \"FILTER['#4', 'that is with #5']\", \"SELECT['barber chair']\", \"FILTER['#6', 'that is sitting in #7']\", \"BOOLEAN['#8', 'is in at least one inage']\"]"}
{"id": "NLVR2_dev_dev-696-3-1", "input": "If in one image, a bearded man in a gray suit is sitting in a barber chair with one hand on a chair arm.", "output": "[\"SELECT['man']\", \"FILTER['#1', 'that is bearded']\", \"SELECT['suit']\", \"FILTER['#3', 'that is gray']\", \"FILTER['#2', 'in #4']\", \"SELECT['barber chair']\", \"FILTER['#5', 'sitting in #6']\", \"PROJECT['hands of #REF', '#7']\", \"PROJECT['arm of #REF', '#6']\", \"FILTER['#8', 'on #9']\", \"GROUP['count', '#10', '#7']\", \"COMPARATIVE['#7', '#11', 'is equal to one']\", \"BOOLEAN['#12', 'is in one image']\"]"}
{"id": "NLVR2_dev_dev-697-2-0", "input": "If a baby elephant is standing in the grass next to an adult elephant without tusks.", "output": "[\"SELECT['elephant']\", \"FILTER['#1', 'that is a baby']\", \"SELECT['the grass']\", \"FILTER['#2', 'standing in #3']\", \"FILTER['#1', 'that is an adult']\", \"SELECT['tusks']\", \"FILTER['#5', 'without #6']\", \"BOOLEAN['#4', 'is next to #7']\"]"}
{"id": "NLVR2_dev_dev-697-2-1", "input": "If a baby elephant is walking on grass in at least one of the images.", "output": "[\"SELECT['elephant']\", \"FILTER['#1', 'that is baby']\", \"SELECT['grass']\", \"FILTER['#2', 'walking on #3']\", \"BOOLEAN['#4', 'is in at least one image']\"]"}
{"id": "NLVR2_dev_dev-698-2-1", "input": "If there is a guinea pig that is not swimming.", "output": "[\"SELECT['guinea pigs']\", \"FILTER['#1', 'that are swimming']\", \"DISCARD['#1', '#2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-698-3-0", "input": "If one person in a bathing suit is in a pool with a guinea pig in the right image, and the person is behind the guinea pig.", "output": "[\"SELECT['right image']\", \"PROJECT['person in #REF', '#1']\", \"FILTER['#2', 'that is in bathing suit']\", \"PROJECT['pool in #REF', '#1']\", \"FILTER['#3', 'that is in #4']\", \"PROJECT['guinea pig in #REF', '#1']\", \"FILTER['#5', 'that is with #6']\", \"BOOLEAN['#2', 'is behind #6']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#9', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#10', '#8']\"]"}
{"id": "NLVR2_dev_dev-699-1-0", "input": "If the right image shows a forward-facing small animal elevated with all four paws off the ground.", "output": "[\"SELECT['animal']\", \"FILTER['#1', 'that is small']\", \"FILTER['#2', 'that is forward-facing']\", \"FILTER['#3', 'that is elevated']\", \"PROJECT['paws of #REF', '#4']\", \"SELECT['the ground']\", \"FILTER['#5', 'that are off #6']\", \"GROUP['count', '#7', '#4']\", \"COMPARATIVE['#4', '#8', 'is equal to four']\", \"BOOLEAN['#9', 'is in the right image']\"]"}
{"id": "NLVR2_dev_dev-70-0-0", "input": "If the skunk is inside of a coke can", "output": "[\"SELECT['skunk']\", \"SELECT['coke can']\", \"BOOLEAN['#1', 'is inside of #2']\"]"}
{"id": "NLVR2_dev_dev-700-0-1", "input": "If a dog is on a sofa.", "output": "[\"SELECT['dog']\", \"SELECT['sofa']\", \"FILTER['#1', 'that is on #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-70-0-1", "input": "If the skunk in the image on the right has its head stuck in a soda can.", "output": "[\"SELECT['right image']\", \"PROJECT['skunk of #REF', '#1']\", \"PROJECT['the head of #REF', '#2']\", \"SELECT['can']\", \"FILTER['#4', 'that is soda']\", \"BOOLEAN['#3', 'is stuck in #5']\"]"}
{"id": "NLVR2_dev_dev-700-2-0", "input": "If there is only one dog in each picture and they are basset hounds.", "output": "[\"SELECT['dogs']\", \"FILTER['#1', 'that are basset hounds']\", \"SELECT['pictures']\", \"GROUP['count', '#2', '#3']\", \"BOOLEAN['#4', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-701-0-1", "input": "If there is exactly one horse in the right image.", "output": "[\"SELECT['right image']\", \"PROJECT['horses of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-701-1-0", "input": "If an image shows a brown horse with a black mane in a trotting pose pulling a four wheeled cart leftward with a person in a hat holding the reins.", "output": "[\"SELECT['horse']\", \"FILTER['#1', 'that is brown']\", \"PROJECT['mane of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is black']\", \"FILTER['#4', 'that is in a trotting pose']\", \"SELECT['cart']\", \"FILTER['#6', 'that is four wheeled']\", \"FILTER['#5', 'that is pulling #7 leftward']\", \"SELECT['person']\", \"SELECT['hat']\", \"FILTER['#9', 'in #10']\", \"SELECT['reins']\", \"FILTER['#11', 'holding #12']\", \"FILTER['#8', 'that is with #13']\", \"BOOLEAN['#14', 'is in an image']\"]"}
{"id": "NLVR2_dev_dev-702-0-0", "input": "If there is a kindle on a shelf with a book with mountains to the left and a book with the sea to the right", "output": "[\"SELECT['kindle']\", \"SELECT['shelf']\", \"FILTER['#1', 'on #2']\", \"SELECT['book']\", \"FILTER['#4', 'with mountains']\", \"FILTER['#4', 'with the sea']\", \"BOOLEAN['#5', 'is to the left of #3']\", \"BOOLEAN['#6', 'is to the right of #3']\", \"BOOLEAN['logical_and', 'true', '#7', '#8']\"]"}
{"id": "NLVR2_dev_dev-703-1-0", "input": "If the image on the right features only a three story building made out of legos.", "output": "[\"SELECT['right image']\", \"PROJECT['building of #REF', '#1']\", \"FILTER['#2', 'that is three stories']\", \"FILTER['#3', 'that is made from legos']\", \"BOOLEAN['#1', 'only features #4']\"]"}
{"id": "NLVR2_dev_dev-704-1-0", "input": "If the left and right image contains at least two blue snow truck.", "output": "[\"SELECT['the left image']\", \"SELECT['the right image']\", \"PROJECT['snow trucks in #REF', '#1']\", \"PROJECT['snow trucks in #REF', '#2']\", \"FILTER['#3', 'that are blue']\", \"FILTER['#4', 'that are blue']\", \"AGGREGATE['count', '#5']\", \"AGGREGATE['count', '#6']\", \"ARITHMETIC['sum', '#7', '#8']\", \"BOOLEAN['#9', 'is at least two']\"]"}
{"id": "NLVR2_dev_dev-705-2-0", "input": "If in one image there are adult elephants with at least one young elephant.", "output": "[\"SELECT['elephants']\", \"FILTER['#1', 'that are adult']\", \"FILTER['#1', 'that are young']\", \"SELECT['images']\", \"GROUP['count', '#2', '#4']\", \"COMPARATIVE['#4', '#5', 'is at least two']\", \"GROUP['count', '#3', '#6']\", \"COMPARATIVE['#6', '#7', 'is at least one']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-706-1-0", "input": "If more people can sit at the table in the image on the right.", "output": "[\"SELECT['right image']\", \"PROJECT['table of #REF', '#1']\", \"SELECT['table']\", \"DISCARD['#3', '#2']\", \"SELECT['people']\", \"FILTER['#5', 'that can sit at #2']\", \"FILTER['#5', 'that can sit at #4']\", \"AGGREGATE['count', '#6']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is higher than #9']\"]"}
{"id": "NLVR2_dev_dev-706-2-1", "input": "If in one image, a dining table is shown with four chairs, while a dining table in the second image contains a storage unit.", "output": "[\"SELECT['one image']\", \"PROJECT['dining table in #REF', '#1']\", \"PROJECT['chairs in #REF', '#1']\", \"FILTER['#3', 'that are with #2']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to four']\", \"SELECT['second image']\", \"PROJECT['dining table in #REF', '#7']\", \"PROJECT['storage unit of #REF', '#8']\", \"AGGREGATE['count', '#9']\", \"BOOLEAN['#10', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#6', '#11']\"]"}
{"id": "NLVR2_dev_dev-707-2-0", "input": "If an image contains exactly two baboons in profile, who are face-to-face in a confrontational pose with at least one open-mouthed.", "output": "[\"SELECT['images']\", \"PROJECT['baboons in #REF', '#1']\", \"FILTER['#2', 'in profile']\", \"FILTER['#3', 'that are face-to-face']\", \"FILTER['#4', 'in a confrontational pose']\", \"FILTER['#5', 'that are open-mouthed']\", \"GROUP['count', '#5', '#1']\", \"GROUP['count', '#6', '#1']\", \"COMPARATIVE['#1', '#7', 'is equal to two']\", \"COMPARATIVE['#1', '#8', 'is at least one']\", \"INTERSECTION['#1', '#9', '#10']\", \"AGGREGATE['count', '#11']\", \"BOOLEAN['#12', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-707-3-1", "input": "If there are exactly three baboons with visible faces.", "output": "[\"SELECT['baboons']\", \"PROJECT['faces of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'are visible']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to three']\"]"}
{"id": "NLVR2_dev_dev-708-2-0", "input": "If there is a total of two dark green bottles.", "output": "[\"SELECT['bottles']\", \"FILTER['#1', 'that are dark green']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-708-3-1", "input": "If there are no more than thee bottles, and the bottles in one of the images are thinner than those in the other image, which are rounder.", "output": "[\"SELECT['one of the images']\", \"SELECT['the other image']\", \"PROJECT['bottles in #REF', '#1']\", \"PROJECT['bottles in #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['sum', '#5', '#6']\", \"BOOLEAN['#7', 'is at most thee']\", \"BOOLEAN['#3', 'are thinner than #4']\", \"BOOLEAN['logical_and', 'true', '#8', '#9']\"]"}
{"id": "NLVR2_dev_dev-709-0-0", "input": "If each image contains just one dispenser, and one image features a dispenser with a black push-button on the bottom.", "output": "[\"SELECT['dispenser']\", \"SELECT['images']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is equal to one']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to #6']\", \"PROJECT['bottom of #REF', '#1']\", \"SELECT['push-button']\", \"FILTER['#9', 'that is black']\", \"FILTER['#8', 'that has #10']\", \"BOOLEAN['#11', 'is in one image']\", \"BOOLEAN['logical_and', 'true', '#7', '#12']\"]"}
{"id": "NLVR2_dev_dev-709-2-1", "input": "If the left and right image contains the same number of wall soap dispenser with at least one solid plastic soap holder.", "output": "[\"SELECT['left image']\", \"SELECT['right image']\", \"PROJECT['wall soap dispensers in #REF', '#1']\", \"PROJECT['wall soap dispensers in #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to #6']\", \"PROJECT['soap holder in #REF', '#1']\", \"PROJECT['soap holder in #REF', '#1']\", \"FILTER['#8', 'that is solid plastic']\", \"FILTER['#9', 'that is solid plastic']\", \"AGGREGATE['count', '#10']\", \"AGGREGATE['count', '#11']\", \"ARITHMETIC['sum', '#12', '#13']\", \"BOOLEAN['#14', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#7', '#15']\"]"}
{"id": "NLVR2_dev_dev-710-0-0", "input": "If there at least two beds and two windows.", "output": "[\"SELECT['beds']\", \"SELECT['windows']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at least two']\", \"BOOLEAN['#4', 'is at least two']\", \"BOOLEAN['logical_and', 'true', '#5', '#6']\"]"}
{"id": "NLVR2_dev_dev-710-0-1", "input": "If all the windows are covered.", "output": "[\"SELECT['windows']\", \"FILTER['#1', 'that are covered']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to #4']\"]"}
{"id": "NLVR2_dev_dev-71-1-0", "input": "If the pig in the left image is heading left, and the pig in the right image is heading right.", "output": "[\"SELECT['left image']\", \"PROJECT['pig of #REF', '#1']\", \"BOOLEAN['#2', 'is heading left']\", \"SELECT['right image']\", \"PROJECT['pig of #REF', '#4']\", \"BOOLEAN['#5', 'is heading right']\", \"BOOLEAN['logical_and', 'true', '#3', '#6']\"]"}
{"id": "NLVR2_dev_dev-711-1-1", "input": "If both images are outside.", "output": "[\"SELECT['images']\", \"FILTER['#1', 'that are outside']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-711-3-0", "input": "If in at least one image there is open floor of dining tables and square chairs.", "output": "[\"SELECT['floor']\", \"FILTER['#1', 'that is open']\", \"SELECT['dining tables']\", \"SELECT['chairs']\", \"FILTER['#4', 'that are square']\", \"FILTER['#2', 'with #3']\", \"FILTER['#2', 'with #5']\", \"INTERSECTION['#2', '#6', '#7']\", \"BOOLEAN['#8', 'is in at least one image']\"]"}
{"id": "NLVR2_dev_dev-71-2-1", "input": "If the hog in the left image is facing left while the hog in the right image is facing right.", "output": "[\"SELECT['left image']\", \"SELECT['right image']\", \"PROJECT['hog of #REF', '#1']\", \"PROJECT['hog of #REF', '#2']\", \"BOOLEAN['#3', 'is facing left']\", \"BOOLEAN['#4', 'is facing right']\", \"BOOLEAN['logical_and', 'true', '#5', '#6']\"]"}
{"id": "NLVR2_dev_dev-712-2-1", "input": "If one of the images features a dog wearing a jacket.", "output": "[\"SELECT['dog']\", \"SELECT['jacket']\", \"FILTER['#1', 'that is wearing #2']\", \"BOOLEAN['#3', 'is in one image']\"]"}
{"id": "NLVR2_dev_dev-712-3-0", "input": "If one image features a dog facing forward and wearing a type of coat, and the other image features one real dog and at least one non-real dog face.", "output": "[\"SELECT['one image']\", \"PROJECT['dog in #REF', '#1']\", \"FILTER['#2', 'that is facing forward']\", \"SELECT['type of coat']\", \"FILTER['#3', 'that is wearing #4']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is at least one']\", \"SELECT['other image']\", \"PROJECT['dog in #REF', '#8']\", \"FILTER['#9', 'that is real']\", \"AGGREGATE['count', '#10']\", \"BOOLEAN['#11', 'is equal to one']\", \"PROJECT['dog face in #REF', '#8']\", \"FILTER['#13', 'that is non-real']\", \"AGGREGATE['count', '#14']\", \"BOOLEAN['#15', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#12', '#16']\", \"BOOLEAN['logical_and', 'true', '#7', '#17']\"]"}
{"id": "NLVR2_dev_dev-713-1-0", "input": "If both dogs are facing towards the right.", "output": "[\"SELECT['dogs']\", \"FILTER['#1', 'facing towards the right']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-713-2-1", "input": "If one dog is standing with tail extended, and facing rightward with its head and body.", "output": "[\"SELECT['dogs']\", \"FILTER['#1', 'that is standing']\", \"PROJECT['tail of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is extended']\", \"PROJECT['head of #REF', '#4']\", \"PROJECT['body of #REF', '#4']\", \"UNION['#5', '#6']\", \"FILTER['#5', 'that is facing rightward with #7']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-714-0-0", "input": "If there are more machines in the image on the right.", "output": "[\"SELECT['machines']\", \"SELECT['right image']\", \"AGGREGATE['count', '#1']\", \"FILTER['#1', 'that are in #2']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['difference', '#3', '#5']\", \"BOOLEAN['#5', 'is higher than #6']\"]"}
{"id": "NLVR2_dev_dev-714-0-1", "input": "If an image shows a side-by-side trio of same-style vending machines, each featuring red and yellow in their color schemes.", "output": "[\"SELECT['trio of vending machines']\", \"FILTER['#1', 'that are same-style']\", \"FILTER['#2', 'that are side-by-side']\", \"PROJECT['color schemes of #REF', '#3']\", \"FILTER['#3', 'that is featuring red in #4']\", \"FILTER['#5', 'that is featuring yellow in #4']\", \"BOOLEAN['#6', 'is in an image']\"]"}
{"id": "NLVR2_dev_dev-715-2-0", "input": "If the left image has 4 balloons of all different colors", "output": "[\"SELECT['left image']\", \"PROJECT['balloons in #REF', '#1']\", \"PROJECT['colors of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'are different']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#5', 'is equal to 4']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#7', 'is equal to 4']\", \"BOOLEAN['logical_and', 'true', '#6', '#8']\"]"}
{"id": "NLVR2_dev_dev-715-3-1", "input": "If the right image shows round balloons in various colors with strings descending from them.", "output": "[\"SELECT['right image']\", \"PROJECT['balloons in #REF', '#1']\", \"FILTER['#2', 'that are round']\", \"FILTER['#3', 'that are in various colors']\", \"PROJECT['strings of #REF', '#4']\", \"BOOLEAN['#4', 'is with #5 descending from them']\"]"}
{"id": "NLVR2_dev_dev-716-0-0", "input": "If the left image shows one camera-gazing bulldog in a sitting pose, and the right image shows one pale bulldog standing on all fours.", "output": "[\"SELECT['left image']\", \"PROJECT['bulldog in #REF', '#1']\", \"FILTER['#2', 'that is camera-gazing']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to one']\", \"SELECT['right image']\", \"PROJECT['bulldog in #REF', '#6']\", \"FILTER['#7', 'that is pale']\", \"FILTER['#8', 'that is standing on all fours']\", \"AGGREGATE['count', '#9']\", \"BOOLEAN['#10', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#5', '#11']\"]"}
{"id": "NLVR2_dev_dev-716-2-1", "input": "If in at least one image there is one small black eyed puppy wearing a costume.", "output": "[\"SELECT['puppy']\", \"FILTER['#1', 'that is black eyed']\", \"FILTER['#2', 'that is small']\", \"SELECT['costume']\", \"FILTER['#3', 'that is wearing #4']\", \"SELECT['images']\", \"GROUP['count', '#5', '#6']\", \"COMPARATIVE['#6', '#7', 'is equal to one']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-717-1-0", "input": "If the left and right image contains the same number of stingrays swimming facing different directions.", "output": "[\"SELECT['the left image']\", \"PROJECT['stingrays in #REF', '#1']\", \"FILTER['#2', 'that are swimming']\", \"PROJECT['direction facing of #REF', '#3']\", \"COMPARATIVE['#3', '#4', 'is different']\", \"AGGREGATE['count', '#5']\", \"SELECT['the right image']\", \"PROJECT['stingrays in #REF', '#7']\", \"FILTER['#8', 'that are swimming']\", \"PROJECT['direction facing of #REF', '#9']\", \"COMPARATIVE['#9', '#10', 'is different']\", \"AGGREGATE['count', '#11']\", \"BOOLEAN['#6', 'is equal to #12']\"]"}
{"id": "NLVR2_dev_dev-717-1-1", "input": "If the stingrays in the left and right images face opposite directions, and one image contains a stingray with vivid spots.", "output": "[\"SELECT['the left image']\", \"SELECT['the right image']\", \"PROJECT['stingrays in #REF', '#1']\", \"PROJECT['stingrays in #REF', '#2']\", \"PROJECT['direction face of #REF', '#3']\", \"PROJECT['direction face of #REF', '#4']\", \"BOOLEAN['#5', 'is the opposite of #6']\", \"SELECT['stingray']\", \"PROJECT['spots of #REF', '#8']\", \"COMPARATIVE['#8', '#9', 'are vivid']\", \"BOOLEAN['#10', 'is in one image']\", \"BOOLEAN['logical_and', 'true', '#7', '#11']\"]"}
{"id": "NLVR2_dev_dev-718-2-0", "input": "If multiple people are in a silver canoe heading righward in one image.", "output": "[\"SELECT['people']\", \"SELECT['canoe']\", \"FILTER['#2', 'that is silver']\", \"FILTER['#1', 'in #3']\", \"FILTER['#4', 'heading righward']\", \"PROJECT['images of #REF', '#5']\", \"GROUP['count', '#5', '#6']\", \"COMPARATIVE['#6', '#7', 'is at least two']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-718-2-1", "input": "If the left and right image contains the same number of canoes facing right.", "output": "[\"SELECT['canoes']\", \"FILTER['#1', 'that are facing right']\", \"FILTER['#2', 'in right image']\", \"FILTER['#2', 'in left image']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to #6']\"]"}
{"id": "NLVR2_dev_dev-719-1-0", "input": "If the left image shows one or more beakers containing only water and no ice.", "output": "[\"SELECT['the left image']\", \"PROJECT['beakers in #REF', '#1']\", \"SELECT['water']\", \"FILTER['#2', 'containing #3']\", \"SELECT['ice']\", \"FILTER['#4', 'that are not containing #5']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-719-2-1", "input": "If an image shows one clear glass with a diagonal line created across its front.", "output": "[\"SELECT['glass']\", \"FILTER['#1', 'that is clear']\", \"PROJECT['front of #REF', '#2']\", \"FILTER['#2', 'that is with a diagonal line created across #3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-720-1-1", "input": "If there are exactly two goats on mountains.", "output": "[\"SELECT['goats']\", \"SELECT['mountains']\", \"FILTER['#1', 'that are on #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-7-2-1", "input": "If all the containers are black.", "output": "[\"SELECT['containers']\", \"FILTER['#1', 'that are black']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#4', 'is equal to #3']\"]"}
{"id": "NLVR2_dev_dev-721-1-0", "input": "If at least one person is standing in front of a row of identical-looking red vending machines.", "output": "[\"SELECT['person']\", \"SELECT['vending machines']\", \"FILTER['#2', 'that are red']\", \"FILTER['#3', 'that are identical-looking']\", \"PROJECT['row of #REF', '#4']\", \"FILTER['#1', 'standing in front of #5']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-722-2-0", "input": "If one or more hunters pose in front of a dead animal.", "output": "[\"SELECT['hunters']\", \"SELECT['animal']\", \"FILTER['#2', 'that is dead']\", \"FILTER['#1', 'that pose in front of #3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-722-3-1", "input": "If there are at least one warthog facing to the right.", "output": "[\"SELECT['warthog']\", \"FILTER['#1', 'that is facing to the right']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-72-3-0", "input": "If there are exactly three zebras in total.", "output": "[\"SELECT['zebras']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is equal to three']\"]"}
{"id": "NLVR2_dev_dev-723-0-0", "input": "If there are 7 or more penguins present.", "output": "[\"SELECT['penguins']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is at least 7']\"]"}
{"id": "NLVR2_dev_dev-723-1-1", "input": "If there are two birds touching beaks in both of the images.", "output": "[\"SELECT['birds']\", \"PROJECT['beaks of #REF', '#1']\", \"FILTER['#1', 'that are touching #2']\", \"SELECT['images']\", \"GROUP['count', '#3', '#4']\", \"COMPARATIVE['#4', '#5', 'is equal to two']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-724-2-1", "input": "If right image shows one marmot, which is lying with its belly flat on a rock.", "output": "[\"SELECT['right image']\", \"PROJECT['marmot in #REF', '#1']\", \"FILTER['#2', 'that is lying']\", \"PROJECT['belly of #REF', '#3']\", \"PROJECT['rock in #REF', '#1']\", \"FILTER['#4', 'that is flat on #5']\", \"FILTER['#3', 'that has #6']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-724-3-0", "input": "If an animal is lying down on a stone in only one of the images.", "output": "[\"SELECT['animal']\", \"SELECT['stone']\", \"FILTER['#1', 'lying down on #2']\", \"PROJECT['images of #REF', '#3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-725-0-1", "input": "If there is three females in bikinis in the left image.", "output": "[\"SELECT['left image']\", \"PROJECT['females in #REF', '#1']\", \"PROJECT['bikinis in #REF', '#1']\", \"FILTER['#2', 'that are in #3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to three']\"]"}
{"id": "NLVR2_dev_dev-725-1-0", "input": "If three bikini models pose standing with rears to the camera, in front of water.", "output": "[\"SELECT['bikini models']\", \"SELECT['water']\", \"FILTER['#1', 'that pose standing in front of #2']\", \"PROJECT['rear of #REF', '#3']\", \"COMPARATIVE['#3', '#4', 'are to the camera']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to three']\"]"}
{"id": "NLVR2_dev_dev-726-2-1", "input": "If at least two wolves are standing in snow.", "output": "[\"SELECT['wolves']\", \"SELECT['snow']\", \"FILTER['#1', 'standing in #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least two']\"]"}
{"id": "NLVR2_dev_dev-726-3-0", "input": "If the left image shows one wolf standing on a non-snowy ground, and the right image shows one wolf standing on snowy ground.", "output": "[\"SELECT['the left image']\", \"PROJECT['wolves in #REF', '#1']\", \"PROJECT['ground in #REF', '#1']\", \"FILTER['#3', 'that is non-snowy']\", \"FILTER['#2', 'standing on #4']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to one']\", \"SELECT['the right image']\", \"PROJECT['wolves in #REF', '#8']\", \"PROJECT['ground in #REF', '#8']\", \"FILTER['#10', 'that is snowy']\", \"FILTER['#9', 'standing on #11']\", \"AGGREGATE['count', '#12']\", \"BOOLEAN['#13', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#7', '#14']\"]"}
{"id": "NLVR2_dev_dev-727-3-0", "input": "If a large brown dog is next to a woman in a light shirt.", "output": "[\"SELECT['dog']\", \"FILTER['#1', 'that is large']\", \"SELECT['woman']\", \"SELECT['shirt']\", \"FILTER['#4', 'that is light']\", \"FILTER['#3', 'in #5']\", \"FILTER['#2', 'next to #6']\", \"BOOLEAN['#7', 'is brown']\"]"}
{"id": "NLVR2_dev_dev-728-0-1", "input": "If the drums in the image on the right are placed on a mat.", "output": "[\"SELECT['right image']\", \"PROJECT['drums in #REF', '#1']\", \"PROJECT['mat in #REF', '#1']\", \"BOOLEAN['#2', 'are placed on #3']\"]"}
{"id": "NLVR2_dev_dev-729-1-1", "input": "If one image contains exactly three balloons, the other five or more.", "output": "[\"SELECT['one image']\", \"PROJECT['balloons in #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to three']\", \"SELECT['other image']\", \"PROJECT['balloons in #REF', '#5']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is at least five']\", \"BOOLEAN['logical_and', 'true', '#4', '#8']\"]"}
{"id": "NLVR2_dev_dev-729-2-0", "input": "If one image shows balloons with dangling, curving 'strings' that are not gathered together.", "output": "[\"SELECT['balloons']\", \"PROJECT['strings of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'are dangling']\", \"COMPARATIVE['#3', '#2', 'are curving']\", \"FILTER['#4', 'that are gathered together']\", \"DISCARD['#4', '#5']\", \"BOOLEAN['#6', 'is in one image']\"]"}
{"id": "NLVR2_dev_dev-7-3-0", "input": "If the left image shows at least one blue barrel with its top open, and the right image includes a black barrel with a silver lid that has two round openings on it.", "output": "[\"SELECT['left image']\", \"PROJECT['barrel in #REF', '#1']\", \"FILTER['#2', 'that is blue']\", \"PROJECT['top of #REF', '#3']\", \"COMPARATIVE['#3', '#4', 'is open']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is at least one']\", \"SELECT['right image']\", \"PROJECT['barrel in #REF', '#8']\", \"FILTER['#9', 'that is black']\", \"PROJECT['lid of #REF', '#10']\", \"COMPARATIVE['#10', '#11', 'is silver']\", \"PROJECT['openings of #REF', '#12']\", \"FILTER['#13', 'that are round']\", \"FILTER['#14', 'that #12 has']\", \"AGGREGATE['count', '#15']\", \"BOOLEAN['#16', 'is to two']\", \"BOOLEAN['logical_and', 'true', '#7', '#17']\"]"}
{"id": "NLVR2_dev_dev-730-1-0", "input": "If a single adult gorilla is depicted in each image, and the left image shows a gorilla with its hands crossed over its chest.", "output": "[\"SELECT['gorillas']\", \"FILTER['#1', 'that are adult']\", \"SELECT['images']\", \"GROUP['count', '#2', '#3']\", \"COMPARATIVE['#3', '#4', 'is equal to one']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to #7']\", \"SELECT['left image']\", \"FILTER['#1', 'that is in #9']\", \"PROJECT['hands of #REF', '#10']\", \"PROJECT['chest of #REF', '#10']\", \"BOOLEAN['#10', 'has #11 crossed over #12']\", \"BOOLEAN['logical_and', 'true', '#8', '#13']\"]"}
{"id": "NLVR2_dev_dev-731-0-0", "input": "If there is a dog on a green rug.", "output": "[\"SELECT['dog']\", \"SELECT['rug']\", \"FILTER['#2', 'that is green']\", \"BOOLEAN['#1', 'is on #3']\"]"}
{"id": "NLVR2_dev_dev-731-0-1", "input": "If an image shows a basset hound next to a tube shape, and the dog has at least one front paw propped over something.", "output": "[\"SELECT['basset hounds']\", \"SELECT['tube shape']\", \"FILTER['#1', 'that is next to #2']\", \"PROJECT['front paws of #REF', '#3']\", \"FILTER['#4', 'that are propped over something']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-73-2-0", "input": "If one of the hutches does not contain any glass.", "output": "[\"SELECT['hutches']\", \"SELECT['glass']\", \"FILTER['#1', 'that contain #2']\", \"DISCARD['#1', '#3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-732-1-0", "input": "If the left and right image contains the same number of sailboats with at least one with no sails out.", "output": "[\"SELECT['the left image']\", \"PROJECT['sailboats in #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"PROJECT['sails of #REF', '#2']\", \"FILTER['#4', 'that are out']\", \"GROUP['count', '#5', '#2']\", \"COMPARATIVE['#2', '#6', 'is equal to zero']\", \"AGGREGATE['count', '#7']\", \"SELECT['the right image']\", \"PROJECT['sailboats in #REF', '#9']\", \"AGGREGATE['count', '#10']\", \"PROJECT['sails of #REF', '#10']\", \"FILTER['#12', 'that are out']\", \"GROUP['count', '#13', '#10']\", \"COMPARATIVE['#10', '#14', 'is equal to zero']\", \"AGGREGATE['count', '#15']\", \"ARITHMETIC['sum', '#8', '#16']\", \"BOOLEAN['#3', 'is equal to #11']\", \"BOOLEAN['#17', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#18', '#19']\"]"}
{"id": "NLVR2_dev_dev-732-3-1", "input": "If one image has multiple unfurled sails, but the other does not.", "output": "[\"SELECT['one image']\", \"PROJECT['sails in #REF', '#1']\", \"FILTER['#2', 'that are unfurled']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least two']\", \"SELECT['the other image']\", \"PROJECT['sails in #REF', '#6']\", \"FILTER['#7', 'that are unfurled']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is lower than two']\", \"BOOLEAN['logical_and', 'true', '#5', '#10']\"]"}
{"id": "NLVR2_dev_dev-73-3-1", "input": "If an image shows a flat-topped wooden cabinet with arched windows on glass-fronted doors.", "output": "[\"SELECT['cabinet']\", \"FILTER['#1', 'that is flat-topped']\", \"FILTER['#2', 'that is wooden']\", \"SELECT['windows']\", \"FILTER['#4', 'that are arched']\", \"SELECT['doors']\", \"FILTER['#6', 'that are glass-fronted']\", \"FILTER['#5', 'on #7']\", \"FILTER['#3', 'with #8']\", \"BOOLEAN['#9', 'is in an image']\"]"}
{"id": "NLVR2_dev_dev-733-2-0", "input": "If a primate in the image on the left is baring its sharp teeth.", "output": "[\"SELECT['the image on the left']\", \"PROJECT['primate in #REF', '#1']\", \"PROJECT['teeth of #REF', '#2']\", \"FILTER['#3', 'that are sharp']\", \"BOOLEAN['#2', 'is baring #4']\"]"}
{"id": "NLVR2_dev_dev-733-2-1", "input": "If an image includes a brown monkey sitting with its head turned and its mouth open wide, baring its fangs.", "output": "[\"SELECT['monkey']\", \"FILTER['#1', 'that is brown']\", \"FILTER['#2', 'that is sitting']\", \"PROJECT['head of #REF', '#3']\", \"COMPARATIVE['#3', '#4', 'is turned']\", \"PROJECT['mouth of #REF', '#5']\", \"PROJECT['fangs of #REF', '#5']\", \"COMPARATIVE['#5', '#6', 'is open wide']\", \"COMPARATIVE['#5', '#7', 'are baring']\", \"INTERSECTION['#5', '#8', '#9']\", \"BOOLEAN['#10', 'is in an image']\"]"}
{"id": "NLVR2_dev_dev-734-0-1", "input": "If the right image contains at least five binders.", "output": "[\"SELECT['the right image']\", \"PROJECT['binders in #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at least five']\"]"}
{"id": "NLVR2_dev_dev-734-1-0", "input": "If one image shows the front of a single upright binder, and the other image shows the flat ends of a row of varied solid-colored binders.", "output": "[\"SELECT['one image']\", \"PROJECT['binder in #REF', '#1']\", \"FILTER['#2', 'that is upright']\", \"PROJECT['front of #REF', '#3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to one']\", \"SELECT['other image']\", \"PROJECT['binders in #REF', '#7']\", \"FILTER['#8', 'that are solid-colored']\", \"FILTER['#9', 'that are varied']\", \"FILTER['#10', 'that are in a row']\", \"PROJECT['flat ends of #REF', '#11']\", \"AGGREGATE['count', '#12']\", \"BOOLEAN['#13', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#6', '#14']\"]"}
{"id": "NLVR2_dev_dev-735-2-1", "input": "If at least one beaker is closed on top.", "output": "[\"SELECT['beakers']\", \"PROJECT['tops of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'are closed']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-736-1-1", "input": "If in at least one image there are at least three circle windows  with at least one triangle roof.", "output": "[\"SELECT['windows']\", \"FILTER['#1', 'that are circle']\", \"SELECT['roof']\", \"FILTER['#3', 'that is triangle']\", \"SELECT['images']\", \"GROUP['count', '#2', '#5']\", \"COMPARATIVE['#5', '#6', 'is at least three']\", \"GROUP['count', '#4', '#7']\", \"COMPARATIVE['#7', '#8', 'is at least one']\", \"AGGREGATE['count', '#9']\", \"BOOLEAN['#10', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-736-3-0", "input": "If buildings are built up on the side of steep cliffs.", "output": "[\"SELECT['buildings']\", \"SELECT['cliffs']\", \"FILTER['#2', 'that are steep']\", \"PROJECT['the side of #REF', '#3']\", \"BOOLEAN['#1', 'are built up on #4']\"]"}
{"id": "NLVR2_dev_dev-737-2-0", "input": "If there is a blue/green tint to all objects in the left image.", "output": "[\"SELECT['left image']\", \"PROJECT['objects of #REF', '#1']\", \"PROJECT['tint of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is blue/green']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to #6']\"]"}
{"id": "NLVR2_dev_dev-737-2-1", "input": "If each image contains one free-standing pump dispenser, and each dispenser has a nozzle facing leftward.", "output": "[\"SELECT['pump dispensers']\", \"FILTER['#1', 'that are free-standing']\", \"SELECT['images']\", \"GROUP['count', '#2', '#3']\", \"COMPARATIVE['#3', '#4', 'is equal to one']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to #7']\", \"PROJECT['nozzle of #REF', '#2']\", \"COMPARATIVE['#2', '#9', 'is facing leftward']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#10']\", \"BOOLEAN['#11', 'is equal to #12']\", \"BOOLEAN['logical_and', 'true', '#8', '#13']\"]"}
{"id": "NLVR2_dev_dev-738-0-0", "input": "If exactly one of the binders has two diagonal lines across its front.", "output": "[\"SELECT['binders']\", \"PROJECT['front of #REF', '#1']\", \"SELECT['lines']\", \"FILTER['#3', 'that are diagonal']\", \"GROUP['count', '#4', '#2']\", \"COMPARATIVE['#2', '#5', 'is equal to two']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-738-2-1", "input": "If there are two stripe on exactly one of the binders, and none on the other.", "output": "[\"SELECT['binders']\", \"PROJECT['stripes of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is equal to two']\", \"COMPARATIVE['#1', '#3', 'is equal to zero']\", \"AGGREGATE['count', '#4']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to one']\", \"BOOLEAN['#7', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#8', '#9']\"]"}
{"id": "NLVR2_dev_dev-739-2-1", "input": "If the left image shows an arch ceiling that starts above bookshelves, and the right image shows the view down one narrow aisle in a bookstore.", "output": "[\"SELECT['left image']\", \"PROJECT['arch ceiling in #REF', '#1']\", \"PROJECT['bookshelves in #REF', '#1']\", \"BOOLEAN['#2', 'starts above #3']\", \"SELECT['right image']\", \"PROJECT['bookstore in #REF', '#5']\", \"PROJECT['aisle in #REF', '#6']\", \"FILTER['#7', 'that is narrow']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#4', '#10']\"]"}
{"id": "NLVR2_dev_dev-739-3-0", "input": "If there are reading seats close to the bookshelves.", "output": "[\"SELECT['reading seats']\", \"SELECT['bookshelves']\", \"BOOLEAN['#1', 'are close to #2']\"]"}
{"id": "NLVR2_dev_dev-740-2-1", "input": "If coral with aqua blue tint is in the left image, and the right image contains tendrils of at least one anemone with a white center.", "output": "[\"SELECT['left image']\", \"PROJECT['coral in #REF', '#1']\", \"FILTER['#2', 'that has aqua blue tint']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least one']\", \"SELECT['right image']\", \"PROJECT['anemone in #REF', '#6']\", \"PROJECT['center of #REF', '#7']\", \"COMPARATIVE['#7', '#8', 'is white']\", \"PROJECT['tendrils of #REF', '#9']\", \"FILTER['#9', 'that has #10']\", \"AGGREGATE['count', '#11']\", \"BOOLEAN['#12', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#5', '#13']\"]"}
{"id": "NLVR2_dev_dev-740-3-0", "input": "If there is at least 1 fish swimming in the anemone", "output": "[\"SELECT['fish']\", \"SELECT['anemone']\", \"FILTER['#1', 'swimming with #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-74-1-0", "input": "If all foreground buses are angled heading right and are forward-turned.", "output": "[\"SELECT['buses']\", \"FILTER['#1', 'in the foreground']\", \"FILTER['#2', 'that are angled heading right']\", \"FILTER['#3', 'that are forward-turned']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#6', 'is equal to #5']\"]"}
{"id": "NLVR2_dev_dev-74-1-1", "input": "If buses are parked next to each other in the image on the left.", "output": "[\"SELECT['the image on the left']\", \"PROJECT['buses in #REF', '#1']\", \"BOOLEAN['#2', 'are parked next to each other']\"]"}
{"id": "NLVR2_dev_dev-741-1-0", "input": "If a chick with yellowish fluffy fur is standing in the green grass in the image on the left.", "output": "[\"SELECT['left image']\", \"PROJECT['chick in #REF', '#1']\", \"PROJECT['fur of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is fluffy']\", \"COMPARATIVE['#4', '#3', 'is yellowish']\", \"PROJECT['grass in #REF', '#1']\", \"FILTER['#6', 'that is green']\", \"FILTER['#5', 'that is standing in #7']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-741-1-1", "input": "If there are exactly two ducks in the right image.", "output": "[\"SELECT['right image']\", \"PROJECT['ducks of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-742-1-1", "input": "If an image includes an upright white pump-top bottle with its nozzle facing right and a lavender-colored upright bottle with an asymmetrical hourglass shape.", "output": "[\"SELECT['bottle']\", \"FILTER['#1', 'that is upright']\", \"FILTER['#2', 'that is white']\", \"FILTER['#3', 'that is pump-top']\", \"PROJECT['nozzle of #REF', '#4']\", \"COMPARATIVE['#4', '#5', 'is facing right']\", \"FILTER['#2', 'that is lavender-colored']\", \"PROJECT['shape of #REF', '#7']\", \"COMPARATIVE['#7', '#8', 'is an asymmetrical hourglass']\", \"SELECT['images']\", \"PROJECT['images of #REF', '#6']\", \"PROJECT['images of #REF', '#9']\", \"INTERSECTION['#10', '#11', '#12']\", \"AGGREGATE['count', '#13']\", \"BOOLEAN['#14', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-742-3-0", "input": "If in at least one image there is a single closed bottle of body wash standing straight up.", "output": "[\"SELECT['images']\", \"PROJECT['bottles of body wash in #REF', '#1']\", \"FILTER['#2', 'that are closed']\", \"FILTER['#3', 'that are standing straight up']\", \"GROUP['count', '#4', '#1']\", \"COMPARATIVE['#1', '#5', 'is equal to one']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-743-1-0", "input": "If in one image, a corgi is floating on a blue mat in a swimming pool that has advertising in the background on a wall beside the pool.", "output": "[\"SELECT['corgi']\", \"SELECT['mat']\", \"FILTER['#2', 'that is blue']\", \"FILTER['#1', 'floating on #3']\", \"SELECT['swimming pool']\", \"SELECT['advertising']\", \"FILTER['#6', 'in the background']\", \"SELECT['wall']\", \"FILTER['#8', 'beside #5']\", \"FILTER['#7', 'on #9']\", \"FILTER['#5', 'that has #10']\", \"FILTER['#4', 'in #11']\", \"BOOLEAN['#12', 'is in one image']\"]"}
{"id": "NLVR2_dev_dev-743-3-1", "input": "If one corgi is on a blue mat in a pool.", "output": "[\"SELECT['corgis']\", \"SELECT['mat']\", \"SELECT['pool']\", \"FILTER['#2', 'that is blue']\", \"FILTER['#4', 'that is in #3']\", \"FILTER['#1', 'that is on #5']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-744-2-0", "input": "If the right image contains exactly one large bird flying in a blue sky with no clouds.", "output": "[\"SELECT['right image']\", \"PROJECT['bird in #REF', '#1']\", \"FILTER['#2', 'that is large']\", \"FILTER['#3', 'that is flying']\", \"PROJECT['sky in #REF', '#1']\", \"FILTER['#5', 'that is blue']\", \"PROJECT['clouds in #REF', '#6']\", \"AGGREGATE['count', '#7']\", \"COMPARATIVE['#6', '#8', 'is equal to zero']\", \"FILTER['#4', 'that is in #9']\", \"AGGREGATE['count', '#10']\", \"BOOLEAN['#11', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-744-3-1", "input": "If there are at most two vultures.", "output": "[\"SELECT['vultures']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is at most two']\"]"}
{"id": "NLVR2_dev_dev-745-1-1", "input": "If there is at least 1 dog lying on top of another dog in the left image.", "output": "[\"SELECT['the left image']\", \"PROJECT['dogs in #REF', '#1']\", \"PROJECT['another dog in #REF', '#1']\", \"FILTER['#2', 'lying on top of #3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-745-3-0", "input": "If there are two white dogs and at least one of them is with a friend of a different species.", "output": "[\"SELECT['dogs']\", \"FILTER['#1', 'that are white']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to two']\", \"PROJECT['friend that #REF is with', '#1']\", \"PROJECT['species of #REF', '#5']\", \"COMPARATIVE['#5', '#6', 'is different']\", \"FILTER['#1', 'that is with #7']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#4', '#10']\"]"}
{"id": "NLVR2_dev_dev-746-2-1", "input": "If in at least one image there is a white alpaca face pointing directly forward.", "output": "[\"SELECT['alpacas']\", \"FILTER['#1', 'that is white']\", \"FILTER['#2', 'that is pointing directly forward']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-746-3-0", "input": "If the left image contains a single llama, which faces forward and is showing multiple lower teeth.", "output": "[\"SELECT['the left image']\", \"PROJECT['llamas in #REF', '#1']\", \"FILTER['#2', 'that face forward']\", \"PROJECT['lower teeth of #REF', '#3']\", \"FILTER['#4', 'that are showing']\", \"GROUP['count', '#5', '#3']\", \"COMPARATIVE['#3', '#6', 'is at least two']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is equal to one']\", \"BOOLEAN['#9', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#10', '#11']\"]"}
{"id": "NLVR2_dev_dev-747-0-0", "input": "If a chimp is in the water surrounded by greenery", "output": "[\"SELECT['chimp']\", \"SELECT['water']\", \"SELECT['greenery']\", \"FILTER['#2', 'surrounded by #3']\", \"BOOLEAN['#1', 'is in #4']\"]"}
{"id": "NLVR2_dev_dev-747-2-1", "input": "If one of the images in the pair shows a chimpanzee in the water.", "output": "[\"SELECT['chimpanzee']\", \"SELECT['water']\", \"FILTER['#1', 'that is in #2']\", \"BOOLEAN['#3', 'is in one image']\"]"}
{"id": "NLVR2_dev_dev-748-0-1", "input": "If there are at least three animals.", "output": "[\"SELECT['animals']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is at least three']\"]"}
{"id": "NLVR2_dev_dev-748-1-0", "input": "If the left and right image contains the same number of deer.", "output": "[\"SELECT['left image']\", \"SELECT['right image']\", \"PROJECT['deer in #REF', '#1']\", \"PROJECT['deer in #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to #6']\"]"}
{"id": "NLVR2_dev_dev-749-0-0", "input": "If an image includes no more than ten penguins, and none of them are facing the camera.", "output": "[\"SELECT['penguins']\", \"SELECT['images']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is at most ten']\", \"FILTER['#1', 'that are facing the camera']\", \"GROUP['count', '#5', '#4']\", \"COMPARATIVE['#4', '#6', 'is equal to zero']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-75-0-0", "input": "If each image shows one non-standing schnauzer in an indoor setting, and at least one of the dogs pictured looks up at the camera from a sitting pose.", "output": "[\"SELECT['images']\", \"PROJECT['schnauzers in #REF', '#1']\", \"FILTER['#2', 'that are non-standing']\", \"PROJECT['settings in #REF', '#1']\", \"FILTER['#4', 'that are indoor']\", \"FILTER['#3', 'in #5']\", \"GROUP['count', '#6', '#1']\", \"COMPARATIVE['#1', '#7', 'is equal to one']\", \"AGGREGATE['count', '#8']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#9', 'is equal to #10']\", \"FILTER['#2', 'that are sitting']\", \"FILTER['#12', 'that look up at the camera']\", \"AGGREGATE['count', '#13']\", \"BOOLEAN['#14', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#11', '#15']\"]"}
{"id": "NLVR2_dev_dev-750-3-0", "input": "If each image contains a single chow dog, and one image features a chow dog standing in profile with its body turned leftward and its head turned more forward.", "output": "[\"SELECT['chow dog']\", \"PROJECT['images of #REF', '#1']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is equal to one']\", \"SELECT['images']\", \"AGGREGATE['count', '#4']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to #7']\", \"FILTER['#1', 'standing in profile']\", \"PROJECT['body of #REF', '#9']\", \"COMPARATIVE['#9', '#10', 'is turned leftward']\", \"PROJECT['head of #REF', '#11']\", \"COMPARATIVE['#11', '#12', 'is turned more forward']\", \"BOOLEAN['#13', 'is in one image']\", \"BOOLEAN['logical_and', 'true', '#8', '#14']\"]"}
{"id": "NLVR2_dev_dev-751-1-0", "input": "If one of the saxophones is outdoors.", "output": "[\"SELECT['saxophones']\", \"FILTER['#1', 'that are outdoors']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-751-3-1", "input": "If right image shows one opened black case containing a saxophone.", "output": "[\"SELECT['the right image']\", \"PROJECT['cases in #REF', '#1']\", \"FILTER['#2', 'that are opened']\", \"FILTER['#3', 'that are black']\", \"PROJECT['saxophone in #REF', '#1']\", \"FILTER['#4', 'containing #5']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-752-0-0", "input": "If there are at least two dogs in the right image.", "output": "[\"SELECT['right image']\", \"PROJECT['dogs of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-752-1-1", "input": "If each image contains one spaniel outdoors in the grass, and the lefthand dog stands in profile turned leftward.", "output": "[\"SELECT['spaniel']\", \"FILTER['#1', 'that are outdoors']\", \"SELECT['grass']\", \"FILTER['#2', 'that are in #3']\", \"SELECT['images']\", \"GROUP['count', '#4', '#5']\", \"COMPARATIVE['#5', '#6', 'is equal to one']\", \"AGGREGATE['count', '#5']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is equal to #9']\", \"FILTER['#1', 'that is lefthand']\", \"FILTER['#11', 'that stands in profile']\", \"BOOLEAN['#12', 'is turned leftward']\", \"BOOLEAN['logical_and', 'true', '#10', '#13']\"]"}
{"id": "NLVR2_dev_dev-75-3-1", "input": "If at least one dog is laying on his stomach.", "output": "[\"SELECT['dog']\", \"PROJECT['stomach of #REF', '#1']\", \"FILTER['#1', 'that is laying on #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-753-1-0", "input": "If both tents have front doors.", "output": "[\"SELECT['tents']\", \"SELECT['front door']\", \"FILTER['#1', 'with #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-753-2-1", "input": "If both yurts have decks and one of them has an open door.", "output": "[\"SELECT['yurts']\", \"SELECT['decks']\", \"SELECT['door']\", \"FILTER['#3', 'that is open']\", \"FILTER['#1', 'that have #2']\", \"FILTER['#1', 'that has #4']\", \"AGGREGATE['count', '#5']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to two']\", \"BOOLEAN['#8', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#9', '#10']\"]"}
{"id": "NLVR2_dev_dev-754-1-0", "input": "If the left image shows one white golf ball just to the right of a hole without a pole in it.", "output": "[\"SELECT['left image']\", \"PROJECT['golf ball in #REF', '#1']\", \"FILTER['#2', 'that is white']\", \"PROJECT['hole in #REF', '#1']\", \"PROJECT['pole in #REF', '#4']\", \"GROUP['count', '#5', '#4']\", \"COMPARATIVE['#4', '#5', 'is equal to zero']\", \"FILTER['#3', 'that is to the right of #7']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-754-1-1", "input": "If one golf ball with a brand on the side is sitting on the green just to the right of the hole.", "output": "[\"SELECT['golf balls']\", \"PROJECT['side of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'has brand']\", \"SELECT['the green']\", \"FILTER['#3', 'sitting on #4']\", \"SELECT['the hole']\", \"FILTER['#5', 'just to the right of #6']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-755-2-0", "input": "If exactly one image shows a ferret eating pet food from a bowl, and the bowl is at least a couple inches tall.", "output": "[\"SELECT['ferret']\", \"SELECT['bowl']\", \"SELECT['pet food']\", \"FILTER['#1', 'that is eating #3']\", \"FILTER['#2', 'that is at least a couple inches tall']\", \"FILTER['#4', 'that is eating from #5']\", \"BOOLEAN['#6', 'is in one image']\"]"}
{"id": "NLVR2_dev_dev-755-3-1", "input": "If the right image contains exactly one ferret eating food out of a small dish.", "output": "[\"SELECT['the right image']\", \"PROJECT['ferrets in #REF', '#1']\", \"PROJECT['food in #REF', '#1']\", \"PROJECT['dishes in #REF', '#1']\", \"FILTER['#4', 'that are small']\", \"FILTER['#3', 'in #5']\", \"FILTER['#2', 'eating #6']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-756-0-1", "input": "If both pictures show an identical amout of lipstick swatches on an arm.", "output": "[\"SELECT['pictures']\", \"PROJECT['arms in #REF', '#1']\", \"PROJECT['lipstick swatches in #REF', '#1']\", \"FILTER['#3', 'on #2']\", \"GROUP['count', '#4', '#1']\", \"BOOLEAN['#5', 'are equal']\"]"}
{"id": "NLVR2_dev_dev-757-0-0", "input": "If in one image, the tv is to the right of two paintings hung vertically.", "output": "[\"SELECT['tv']\", \"SELECT['paintings']\", \"FILTER['#2', 'that are hung vertically']\", \"FILTER['#3', 'that #1 is to the right of']\", \"SELECT['images']\", \"GROUP['count', '#4', '#5']\", \"COMPARATIVE['#5', '#6', 'is equal to two']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-757-2-1", "input": "If there are shelves attached to the wall.", "output": "[\"SELECT['shelves']\", \"SELECT['wall']\", \"FILTER['#1', 'that are attached to #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-758-1-1", "input": "If at least one cup sits among several spread out coffee beans.", "output": "[\"SELECT['cup']\", \"SELECT['coffee beans']\", \"FILTER['#2', 'that are spread out']\", \"FILTER['#1', 'that sits among #3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least one']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#7', 'is at least two']\", \"BOOLEAN['logical_and', 'true', '#6', '#8']\"]"}
{"id": "NLVR2_dev_dev-758-3-0", "input": "If one cup has the lid on, and at least one cup does not have a lid on.", "output": "[\"SELECT['cup']\", \"PROJECT['lid of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is on']\", \"DISCARD['#1', '#3']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to one']\", \"BOOLEAN['#6', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-759-2-1", "input": "If there are two otters floating in the water next to each other on their backs", "output": "[\"SELECT['otters']\", \"SELECT['the water']\", \"FILTER['#1', 'floating in #2']\", \"PROJECT['backs of #REF', '#3']\", \"FILTER['#3', 'on #4']\", \"FILTER['#5', 'that are next to each other']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-759-3-0", "input": "If in one image, we have two otters, and in the other image, there is a seal.", "output": "[\"SELECT['one image']\", \"PROJECT['otters in #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to two']\", \"SELECT['other image']\", \"PROJECT['seal in #REF', '#5']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#4', '#8']\"]"}
{"id": "NLVR2_dev_dev-76-0-0", "input": "If a pair of lips showing the color of the lipstick.", "output": "[\"SELECT['pair of lips']\", \"SELECT['the lipstick']\", \"PROJECT['the color of #REF', '#2']\", \"BOOLEAN['#1', 'is showing #3']\"]"}
{"id": "NLVR2_dev_dev-760-0-1", "input": "If the birds in the image on the left are in the water.", "output": "[\"SELECT['left image']\", \"PROJECT['birds in #REF', '#1']\", \"PROJECT['water in #REF', '#1']\", \"BOOLEAN['#2', 'are in #3']\"]"}
{"id": "NLVR2_dev_dev-760-3-0", "input": "If exactly three white ducks are standing in a row on dry ground.", "output": "[\"SELECT['ducks']\", \"FILTER['#1', 'that are white']\", \"FILTER['#2', 'standing in a row']\", \"SELECT['dry ground']\", \"FILTER['#3', 'that are on #4']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to three']\"]"}
{"id": "NLVR2_dev_dev-761-2-0", "input": "If one of the images has 4 women wearing white bikinis standing next to the water.", "output": "[\"SELECT['women']\", \"SELECT['bikinis']\", \"FILTER['#2', 'that are white']\", \"FILTER['#1', 'wearing #3']\", \"SELECT['water']\", \"FILTER['#4', 'standing next to #5']\", \"SELECT['images']\", \"GROUP['count', '#6', '#7']\", \"COMPARATIVE['#7', '#8', 'is equal to 4']\", \"AGGREGATE['count', '#9']\", \"BOOLEAN['#10', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-761-2-1", "input": "If four girls are posing side-by-side in white bikinis in the right image.", "output": "[\"SELECT['the right image']\", \"PROJECT['girls in #REF', '#1']\", \"SELECT['bikinis']\", \"FILTER['#3', 'that are white']\", \"FILTER['#2', 'in #4']\", \"FILTER['#5', 'that are posing side-by-side']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to four']\"]"}
{"id": "NLVR2_dev_dev-762-0-0", "input": "If the image on the right has a single ferret with a dark furred chest and paler hind-quarters.", "output": "[\"SELECT['right image']\", \"PROJECT['ferret in #REF', '#1']\", \"PROJECT['chest of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is dark furred']\", \"PROJECT['hind-quarters of #REF', '#4']\", \"COMPARATIVE['#4', '#5', 'are paler']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-762-2-1", "input": "If there are at least five ferrets.", "output": "[\"SELECT['ferrets']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is at least five']\"]"}
{"id": "NLVR2_dev_dev-76-3-1", "input": "If there is at least one set of lightly shaded lips.", "output": "[\"SELECT['set of lips']\", \"FILTER['#1', 'that are lightly shaded']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-763-3-0", "input": "If at least one of the houses has exactly two chimney stacks.", "output": "[\"SELECT['houses']\", \"SELECT['chimney stacks']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is equal to two']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-764-0-1", "input": "If one of the images features three puppies sitting inside of a bin.", "output": "[\"SELECT['images']\", \"PROJECT['puppies in #REF', '#1']\", \"PROJECT['bin in #REF', '#1']\", \"FILTER['#2', 'sitting inside of #3']\", \"GROUP['count', '#4', '#1']\", \"COMPARATIVE['#1', '#5', 'is equal to three']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-765-1-0", "input": "If all images show red-orange dogs with non-blue eyes, upright heads and empty mouths, and one of the dogs pictured wears a collar.", "output": "[\"SELECT['dogs']\", \"FILTER['#1', 'that are red-orange']\", \"PROJECT['eyes of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'are non-blue']\", \"PROJECT['head of #REF', '#4']\", \"COMPARATIVE['#4', '#5', 'is upright']\", \"PROJECT['mouth of #REF', '#6']\", \"COMPARATIVE['#6', '#7', 'is empty']\", \"PROJECT['images of #REF', '#8']\", \"SELECT['images']\", \"AGGREGATE['count', '#9']\", \"AGGREGATE['count', '#10']\", \"BOOLEAN['#11', 'is equal to #12']\", \"PROJECT['dogs in #REF', '#10']\", \"SELECT['collar']\", \"FILTER['#14', 'that wear #15']\", \"AGGREGATE['count', '#16']\", \"BOOLEAN['#17', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#13', '#18']\"]"}
{"id": "NLVR2_dev_dev-766-0-0", "input": "If each image contains only one colorful keyboard.", "output": "[\"SELECT['keyboards']\", \"FILTER['#1', 'that are colorful']\", \"SELECT['images']\", \"GROUP['count', '#2', '#3']\", \"COMPARATIVE['#3', '#4', 'is equal to one']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to #7']\"]"}
{"id": "NLVR2_dev_dev-766-2-1", "input": "If there is a red and black keyboard sitting on a table.", "output": "[\"SELECT['keyboard']\", \"FILTER['#1', 'that is red and black']\", \"SELECT['table']\", \"BOOLEAN['#2', 'is sitting on #3']\"]"}
{"id": "NLVR2_dev_dev-767-3-1", "input": "If there is one bottle with a lid and one bottle without a lid.", "output": "[\"SELECT['bottle']\", \"SELECT['lid']\", \"FILTER['#1', 'that has #2']\", \"DISCARD['#1', '#3']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to one']\", \"BOOLEAN['#6', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#7', '#8']\"]"}
{"id": "NLVR2_dev_dev-768-1-0", "input": "If each image shows a single crab shell-side-up on the beach, and the right image features a crab mostly covered in sand.", "output": "[\"SELECT['crabs']\", \"FILTER['#1', 'that are shell-side-up']\", \"SELECT['beach']\", \"FILTER['#2', 'that are on #3']\", \"SELECT['images']\", \"GROUP['count', '#4', '#5']\", \"COMPARATIVE['#5', '#6', 'is equal to one']\", \"AGGREGATE['count', '#5']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is equal to #9']\", \"SELECT['right image']\", \"PROJECT['crab in #REF', '#11']\", \"PROJECT['sand in #REF', '#11']\", \"FILTER['#12', 'that is mostly covered in #13']\", \"AGGREGATE['count', '#14']\", \"BOOLEAN['#15', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#10', '#16']\"]"}
{"id": "NLVR2_dev_dev-768-3-1", "input": "If in the image to the right, the crab is at least half buried under sand.", "output": "[\"SELECT['crab']\", \"SELECT['sand']\", \"FILTER['#1', 'at least half buried under #2']\", \"BOOLEAN['#3', 'is in the image to the right']\"]"}
{"id": "NLVR2_dev_dev-769-1-0", "input": "If blue is a prominent color in at least one of the images.", "output": "[\"SELECT['images']\", \"PROJECT['colors in #REF', '#1']\", \"FILTER['#2', 'that is prominent']\", \"COMPARATIVE['#1', '#3', 'is blue']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-769-3-1", "input": "If the right image shows one young male graduate in a black robe in the foreground, and he wears a black cap with black tassel on the left.", "output": "[\"SELECT['right image']\", \"PROJECT['foreground of #REF', '#1']\", \"PROJECT['graduate in #REF', '#2']\", \"FILTER['#3', 'that is male']\", \"FILTER['#4', 'that is young']\", \"PROJECT['robe of #REF', '#5']\", \"COMPARATIVE['#5', '#6', 'is black']\", \"PROJECT['cap of #REF', '#7']\", \"FILTER['#8', 'that is black']\", \"PROJECT['tassel of #REF', '#9']\", \"COMPARATIVE['#9', '#10', 'is black']\", \"COMPARATIVE['#11', '#10', 'is on the left']\", \"FILTER['#7', 'that wears #12']\", \"AGGREGATE['count', '#13']\", \"BOOLEAN['#14', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-770-2-1", "input": "If in at least one image there are three chimney on top of the house.", "output": "[\"SELECT['houses']\", \"SELECT['chimneys']\", \"FILTER['#2', 'on top of #1']\", \"GROUP['count', '#3', '#1']\", \"COMPARATIVE['#1', '#4', 'is equal to three']\", \"BOOLEAN['#5', 'is in at least one image']\"]"}
{"id": "NLVR2_dev_dev-77-1-0", "input": "If each image shows one forward-facing panda holding foliage to its mouth and munching it.", "output": "[\"SELECT['pandas']\", \"FILTER['#1', 'that are forward-facing']\", \"PROJECT['mouth of #REF', '#2']\", \"SELECT['foliage']\", \"FILTER['#2', 'that are holding #4 to #3']\", \"FILTER['#5', 'that are munching #4']\", \"SELECT['images']\", \"GROUP['count', '#6', '#7']\", \"COMPARATIVE['#7', '#8', 'is equal to one']\", \"AGGREGATE['count', '#7']\", \"AGGREGATE['count', '#9']\", \"BOOLEAN['#10', 'is equal to #11']\"]"}
{"id": "NLVR2_dev_dev-771-0-0", "input": "If two laptops are facing the same direction.", "output": "[\"SELECT['laptops']\", \"PROJECT['direction facing of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is the same']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-771-0-1", "input": "If the laptop in the left image is angled to the right", "output": "[\"SELECT['left image']\", \"PROJECT['laptop of #REF', '#1']\", \"BOOLEAN['#2', 'is angled to the right']\"]"}
{"id": "NLVR2_dev_dev-77-1-1", "input": "If a panda shown with something besides bamboo to eat.", "output": "[\"SELECT['a panda']\", \"SELECT['something to eat']\", \"SELECT['bamboo']\", \"DISCARD['#2', '#3']\", \"BOOLEAN['#1', 'is shown with #4']\"]"}
{"id": "NLVR2_dev_dev-772-2-0", "input": "If in one image, mashed potatoes with brown gravy are in a white bowl with a visible spoon.", "output": "[\"SELECT['potatoes']\", \"FILTER['#1', 'that are mashed']\", \"SELECT['gravy']\", \"FILTER['#3', 'that is brown']\", \"FILTER['#2', 'with #4']\", \"SELECT['bowl']\", \"FILTER['#6', 'that is white']\", \"FILTER['#5', 'in #7']\", \"SELECT['spoon']\", \"FILTER['#9', 'that is visible']\", \"FILTER['#8', 'with #10']\", \"BOOLEAN['#11', 'is in one image']\"]"}
{"id": "NLVR2_dev_dev-772-2-1", "input": "If one of the images shows mashed potatoes with brown gravy.", "output": "[\"SELECT['potatoes']\", \"FILTER['#1', 'that are mashed']\", \"SELECT['gravy']\", \"FILTER['#3', 'that is brown']\", \"FILTER['#2', 'with #4']\", \"BOOLEAN['#5', 'is in one of the images']\"]"}
{"id": "NLVR2_dev_dev-773-2-0", "input": "If three towels are hanging on the wall above a white tub.", "output": "[\"SELECT['towels']\", \"SELECT['wall']\", \"SELECT['tub']\", \"FILTER['#3', 'that is white']\", \"FILTER['#2', 'that is above #4']\", \"FILTER['#1', 'that are hanging on #5']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to three']\"]"}
{"id": "NLVR2_dev_dev-773-2-1", "input": "If there are towels with stars on them.", "output": "[\"SELECT['towels']\", \"SELECT['stars']\", \"FILTER['#1', 'that has #2 on']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-774-2-0", "input": "If one of the images contains one or more sheep.", "output": "[\"SELECT['sheep']\", \"SELECT['images']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is at least one']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-774-2-1", "input": "If one image features a black-and-white dog in a green field near at least one black-faced sheep that is in motion.", "output": "[\"SELECT['dog']\", \"FILTER['#1', 'that is black-and-white']\", \"SELECT['field']\", \"FILTER['#3', 'that is green']\", \"FILTER['#2', 'in #4']\", \"SELECT['sheep']\", \"FILTER['#6', 'that are black-faced']\", \"FILTER['#7', 'that are in motion']\", \"FILTER['#5', 'near #8']\", \"BOOLEAN['#9', 'is in one image']\"]"}
{"id": "NLVR2_dev_dev-775-2-0", "input": "If at least one white dog is present with sheep in one image, and the other image features multiple white puppies near a wire fence.", "output": "[\"SELECT['one image']\", \"PROJECT['dogs in #REF', '#1']\", \"FILTER['#2', 'that are white']\", \"PROJECT['sheep in #REF', '#1']\", \"FILTER['#3', 'present with #4']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is at least one']\", \"SELECT['the other image']\", \"PROJECT['puppies in #REF', '#8']\", \"FILTER['#9', 'that are white']\", \"PROJECT['fence in #REF', '#8']\", \"FILTER['#11', 'that has wires']\", \"FILTER['#10', 'near #12']\", \"AGGREGATE['count', '#13']\", \"BOOLEAN['#14', 'is at least two']\", \"BOOLEAN['logical_and', 'true', '#7', '#15']\"]"}
{"id": "NLVR2_dev_dev-775-3-1", "input": "If in one of the images, there are both dogs and sheep.", "output": "[\"SELECT['images']\", \"PROJECT['dogs in #REF', '#1']\", \"PROJECT['sheep in #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"GROUP['count', '#3', '#1']\", \"COMPARATIVE['#1', '#4', 'is at least two']\", \"COMPARATIVE['#1', '#5', 'is at least two']\", \"INTERSECTION['#1', '#6', '#7']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-776-1-0", "input": "If an image shows a single golf ball with a green number on it.", "output": "[\"SELECT['golf balls']\", \"SELECT['number']\", \"FILTER['#2', 'that is green']\", \"FILTER['#1', 'with #3 on it']\", \"PROJECT['images of #REF', '#4']\", \"GROUP['count', '#4', '#5']\", \"COMPARATIVE['#5', '#6', 'is equal to one']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-776-2-1", "input": "If the left and right image contains no more than five white golf balls.", "output": "[\"SELECT['the left image']\", \"SELECT['the right image']\", \"PROJECT['golf balls in #REF', '#1']\", \"PROJECT['golf balls in #REF', '#2']\", \"FILTER['#3', 'that are white']\", \"FILTER['#4', 'that are white']\", \"AGGREGATE['count', '#5']\", \"AGGREGATE['count', '#6']\", \"ARITHMETIC['sum', '#7', '#8']\", \"BOOLEAN['#9', 'is at most five']\"]"}
{"id": "NLVR2_dev_dev-777-0-0", "input": "If the bus in the left image and the bus in the right image are facing in different directions.", "output": "[\"SELECT['left image']\", \"SELECT['right image']\", \"PROJECT['bus in #REF', '#1']\", \"PROJECT['bus in #REF', '#2']\", \"PROJECT['direction that #REF is facing', '#3']\", \"PROJECT['direction that #REF is facing', '#4']\", \"BOOLEAN['#5', 'is different than #6']\"]"}
{"id": "NLVR2_dev_dev-778-0-0", "input": "If each set shows two dogs that are similar in age, coloring, style, and look.", "output": "[\"SELECT['sets']\", \"PROJECT['dogs in #REF', '#1']\", \"PROJECT['age of #REF', '#2']\", \"PROJECT['coloring of #REF', '#2']\", \"PROJECT['style of #REF', '#2']\", \"PROJECT['look of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is similar']\", \"COMPARATIVE['#2', '#4', 'is similar']\", \"COMPARATIVE['#2', '#5', 'is similar']\", \"COMPARATIVE['#2', '#6', 'is similar']\", \"INTERSECTION['#2', '#7', '#8']\", \"INTERSECTION['#2', '#9', '#10']\", \"INTERSECTION['#2', '#11', '#12']\", \"GROUP['count', '#13', '#1']\", \"COMPARATIVE['#1', '#14', 'is equal to two']\", \"AGGREGATE['count', '#15']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#16', 'is equal to #17']\"]"}
{"id": "NLVR2_dev_dev-778-3-1", "input": "If one dog is facing forward, and the other looks to the side, and both dogs are tan with darker facial markings.", "output": "[\"SELECT['dogs']\", \"FILTER['#1', 'that is facing forward']\", \"FILTER['#1', 'that looks to the side']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to one']\", \"BOOLEAN['#5', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#6', '#7']\", \"FILTER['#1', 'that are tan']\", \"PROJECT['facial markings of #REF', '#9']\", \"COMPARATIVE['#9', '#10', 'are darker']\", \"AGGREGATE['count', '#11']\", \"BOOLEAN['#12', 'is equal to two']\", \"BOOLEAN['logical_and', 'true', '#8', '#13']\"]"}
{"id": "NLVR2_dev_dev-779-0-0", "input": "If one of the images shows a chimpanzee in a tree.", "output": "[\"SELECT['chimpanzee']\", \"SELECT['tree']\", \"FILTER['#1', 'that is in #2']\", \"BOOLEAN['#3', 'is in image']\"]"}
{"id": "NLVR2_dev_dev-78-0-1", "input": "If the right image contains two ferrets.", "output": "[\"SELECT['right image']\", \"PROJECT['ferrets of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-780-2-0", "input": "If people are getting their hair cut.", "output": "[\"SELECT['people']\", \"PROJECT['hair of #REF', '#1']\", \"BOOLEAN['#2', 'is getting cut']\"]"}
{"id": "NLVR2_dev_dev-781-3-0", "input": "If acorns are with something orange.", "output": "[\"SELECT['acorns']\", \"SELECT['something orange']\", \"BOOLEAN['#1', 'are with #2']\"]"}
{"id": "NLVR2_dev_dev-78-2-0", "input": "If in one image a pair of ferrets can be seen eating out of a food bowl.", "output": "[\"SELECT['ferrets']\", \"SELECT['food bowl']\", \"FILTER['#1', 'eating out of #2']\", \"PROJECT['images of #REF', '#3']\", \"GROUP['count', '#3', '#4']\", \"COMPARATIVE['#4', '#5', 'is equal to two']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-782-1-1", "input": "If the left image contains a barbell on its side to the left of a barbell standing upright on one end.", "output": "[\"SELECT['the left image']\", \"PROJECT['barbell in #REF', '#1']\", \"PROJECT['end of #REF', '#2']\", \"FILTER['#2', 'standing upright on #3']\", \"FILTER['#2', 'on its side']\", \"BOOLEAN['#5', 'is to the left of #4']\"]"}
{"id": "NLVR2_dev_dev-782-2-0", "input": "If in one of the images, one of the dumbbells is sitting upright, while another one is laying on its side next to it.", "output": "[\"SELECT['dumbbells']\", \"FILTER['#1', 'that is sitting upright']\", \"FILTER['#1', 'that is laying on its side']\", \"FILTER['#3', 'that is next to #2']\", \"BOOLEAN['#4', 'is in one image']\"]"}
{"id": "NLVR2_dev_dev-783-0-1", "input": "If the screen in the image on the right is turned at an angle.", "output": "[\"SELECT['right image']\", \"PROJECT['screen of #REF', '#1']\", \"BOOLEAN['#2', 'is turned at an angle']\"]"}
{"id": "NLVR2_dev_dev-783-3-0", "input": "If an image features one camera-facing flat monitor depicting a hot-air balloon scene on the screen.", "output": "[\"SELECT['monitors']\", \"FILTER['#1', 'that are camera-facing']\", \"FILTER['#2', 'that are flat']\", \"PROJECT['screen of #REF', '#3']\", \"SELECT['hot-air balloon scene']\", \"COMPARATIVE['#3', '#4', 'is depicting #5']\", \"PROJECT['images of #REF', '#6']\", \"GROUP['count', '#6', '#7']\", \"COMPARATIVE['#7', '#8', 'is equal to one']\", \"AGGREGATE['count', '#9']\", \"BOOLEAN['#10', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-784-1-0", "input": "If in one of the images there is one person in a book store holding  a book.", "output": "[\"SELECT['people']\", \"SELECT['book store']\", \"FILTER['#1', 'in #2']\", \"SELECT['book']\", \"FILTER['#3', 'holding #4']\", \"PROJECT['images of #REF', '#5']\", \"GROUP['count', '#5', '#6']\", \"COMPARATIVE['#6', '#7', 'is equal to one']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-785-1-0", "input": "If in each image, there is a reflection of the instrument.", "output": "[\"SELECT['instrument']\", \"PROJECT['reflection of #REF', '#1']\", \"SELECT['images']\", \"GROUP['count', '#2', '#3']\", \"COMPARATIVE['#3', '#4', 'is at least one']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to #7']\"]"}
{"id": "NLVR2_dev_dev-786-1-0", "input": "If the left image has a dog laying in the grass", "output": "[\"SELECT['left image']\", \"PROJECT['dog of #REF', '#1']\", \"SELECT['grass']\", \"BOOLEAN['#2', 'is laying in #3']\"]"}
{"id": "NLVR2_dev_dev-786-2-1", "input": "If there is only 1 dog standing on all fours and looking left.", "output": "[\"SELECT['dog']\", \"FILTER['#1', 'standing on all fours']\", \"FILTER['#2', 'that is looking left']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-787-1-0", "input": "If the left and right image contains the same number of stingrays hovering over the sand facing different directions.", "output": "[\"SELECT['the left image']\", \"PROJECT['stingrays in #REF', '#1']\", \"PROJECT['the sand in #REF', '#1']\", \"FILTER['#2', 'hovering over #3']\", \"PROJECT['direction facing of #REF', '#4']\", \"COMPARATIVE['#4', '#5', 'is different']\", \"AGGREGATE['count', '#6']\", \"SELECT['the right image']\", \"PROJECT['stingrays in #REF', '#8']\", \"PROJECT['the sand in #REF', '#8']\", \"FILTER['#9', 'hovering over #10']\", \"PROJECT['direction facing of #REF', '#11']\", \"COMPARATIVE['#11', '#12', 'is different']\", \"AGGREGATE['count', '#13']\", \"BOOLEAN['#7', 'is equal to #14']\"]"}
{"id": "NLVR2_dev_dev-787-2-1", "input": "If each image shows a stingray close to the bottom of the ocean but not with sand on top of it.", "output": "[\"SELECT['stingray']\", \"SELECT['the ocean']\", \"PROJECT['the bottom of #REF', '#2']\", \"FILTER['#1', 'close to #3']\", \"SELECT['sand']\", \"FILTER['#4', 'not with #5 on top of it']\", \"PROJECT['images of #REF', '#6']\", \"SELECT['images']\", \"AGGREGATE['count', '#7']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is equal to #10']\"]"}
{"id": "NLVR2_dev_dev-788-2-0", "input": "If there are two pizza with all of it's slices and one is on a metal tray.", "output": "[\"SELECT['pizzas']\", \"PROJECT['slices of #REF', '#1']\", \"FILTER['#1', 'with all of #2']\", \"SELECT['tray']\", \"FILTER['#4', 'that is metal']\", \"FILTER['#3', 'on #5']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to two']\", \"BOOLEAN['#8', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#9', '#10']\"]"}
{"id": "NLVR2_dev_dev-788-3-1", "input": "If the pizza in the image on the right sits on a red and white colored material.", "output": "[\"SELECT['right image']\", \"PROJECT['pizza in #REF', '#1']\", \"PROJECT['material in #REF', '#1']\", \"FILTER['#3', 'that is red and white colored']\", \"BOOLEAN['#2', 'sits on #4']\"]"}
{"id": "NLVR2_dev_dev-789-1-1", "input": "If a llama in the right image is carrying a pack.", "output": "[\"SELECT['right image']\", \"PROJECT['llama in #REF', '#1']\", \"PROJECT['pack in #REF', '#1']\", \"FILTER['#2', 'that is carrying #3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-79-0-1", "input": "If there are two dogs who are two different colors standing next to each other.", "output": "[\"SELECT['dogs']\", \"FILTER['#1', 'standing next to each other']\", \"PROJECT['colors of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'are different']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-790-1-0", "input": "If in at least one image there is a single piece of a flute on top of music paper.", "output": "[\"SELECT['flute']\", \"PROJECT['piece of #REF', '#1']\", \"SELECT['music paper']\", \"FILTER['#2', 'that is on top of #3']\", \"SELECT['images']\", \"GROUP['count', '#4', '#5']\", \"COMPARATIVE['#5', '#6', 'is equal to one']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-790-3-1", "input": "If the right image contains a single gold-colored flute displayed on sheet music, and the left image features at least two parallel metal flutes displayed on a flat surface.", "output": "[\"SELECT['the right image']\", \"PROJECT['flutes in #REF', '#1']\", \"FILTER['#2', 'that are gold-colored']\", \"PROJECT['sheet music in #REF', '#1']\", \"FILTER['#3', 'on #4']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to one']\", \"SELECT['the left image']\", \"PROJECT['flutes in #REF', '#8']\", \"FILTER['#9', 'that are metal']\", \"FILTER['#10', 'that are parallel']\", \"PROJECT['surface in #REF', '#8']\", \"FILTER['#12', 'that is flat']\", \"FILTER['#11', 'on #13']\", \"AGGREGATE['count', '#14']\", \"BOOLEAN['#15', 'is at least two']\", \"BOOLEAN['logical_and', 'true', '#7', '#16']\"]"}
{"id": "NLVR2_dev_dev-79-1-0", "input": "If all the dogs are wearing collars.", "output": "[\"SELECT['dogs']\", \"SELECT['collars']\", \"FILTER['#1', 'that are wearing #2']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to #5']\"]"}
{"id": "NLVR2_dev_dev-791-2-0", "input": "If there is at least one jellyfish heading in a downward direction.", "output": "[\"SELECT['jellyfish']\", \"PROJECT['direction heading in of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is downward']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-791-3-1", "input": "If at least one of the jellyfish is upside down in at least one of the images.", "output": "[\"SELECT['jellyfish']\", \"FILTER['#1', 'that is upside down']\", \"SELECT['images']\", \"GROUP['count', '#2', '#3']\", \"COMPARATIVE['#3', '#4', 'is at least one']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-792-0-1", "input": "If both beakers are the same size.", "output": "[\"SELECT['beakers']\", \"PROJECT['sizes of #REF', '#1']\", \"BOOLEAN['#2', 'are the same']\"]"}
{"id": "NLVR2_dev_dev-792-2-0", "input": "If each image shows an empty beaker with a four-sided shape printed on its front side.", "output": "[\"SELECT['beaker']\", \"FILTER['#1', 'that is empty']\", \"PROJECT['front side of #REF', '#2']\", \"PROJECT['shape printed on #REF', '#3']\", \"FILTER['#4', 'that is four-sided']\", \"FILTER['#2', 'that has #5']\", \"SELECT['images']\", \"GROUP['count', '#6', '#7']\", \"COMPARATIVE['#7', '#8', 'is at least one']\", \"AGGREGATE['count', '#7']\", \"AGGREGATE['count', '#9']\", \"BOOLEAN['#10', 'is equal to #11']\"]"}
{"id": "NLVR2_dev_dev-793-0-0", "input": "If there are 2, thinly feathered, brown headed birds facing right.", "output": "[\"SELECT['birds']\", \"FILTER['#1', 'that are thinly feathered']\", \"FILTER['#2', 'that are brown headed']\", \"FILTER['#3', 'that are facing right']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to 2']\"]"}
{"id": "NLVR2_dev_dev-794-1-1", "input": "If there is one dog standing in each image.", "output": "[\"SELECT['images']\", \"PROJECT['dogs in #REF', '#1']\", \"FILTER['#2', 'that are standing']\", \"GROUP['count', '#3', '#1']\", \"COMPARATIVE['#1', '#4', 'is equal to one']\", \"AGGREGATE['count', '#5']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#6', 'is equal to #7']\"]"}
{"id": "NLVR2_dev_dev-794-3-0", "input": "If all dogs have tall upright ears and brindle fur coloring, and no dogs wear harnesses or leashes.", "output": "[\"SELECT['dogs']\", \"PROJECT['ears of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'are upright']\", \"COMPARATIVE['#3', '#2', 'are tall']\", \"PROJECT['fur coloring of #REF', '#4']\", \"COMPARATIVE['#4', '#5', 'is brindle']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to #8']\", \"FILTER['#1', 'that wear harness']\", \"FILTER['#1', 'that wear leash']\", \"UNION['#10', '#11']\", \"AGGREGATE['count', '#12']\", \"BOOLEAN['#13', 'is equal to zero']\", \"BOOLEAN['logical_and', 'true', '#9', '#14']\"]"}
{"id": "NLVR2_dev_dev-795-0-1", "input": "If a gazebo with a thatch roof is surrounded by a water feature", "output": "[\"SELECT['gazebo']\", \"PROJECT['roof of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is a thatch roof']\", \"SELECT['a water feature']\", \"BOOLEAN['#3', 'is surrounded by #4']\"]"}
{"id": "NLVR2_dev_dev-795-2-0", "input": "If the right image shows an open structure with a roof made of plant material on a platform within a manmade pool.", "output": "[\"SELECT['structure']\", \"FILTER['#1', 'that is open']\", \"SELECT['roof']\", \"SELECT['plant material']\", \"FILTER['#3', 'made of #4']\", \"FILTER['#2', 'with #5']\", \"SELECT['platform']\", \"SELECT['pool']\", \"FILTER['#8', 'that is manmade']\", \"FILTER['#7', 'within #9']\", \"FILTER['#6', 'on #10']\", \"BOOLEAN['#11', 'is in the right image']\"]"}
{"id": "NLVR2_dev_dev-796-1-1", "input": "If there are exactly three hamsters.", "output": "[\"SELECT['hamsters']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is equal to three']\"]"}
{"id": "NLVR2_dev_dev-796-2-0", "input": "If there is a bowl sitting on wood shavings", "output": "[\"SELECT['bowl']\", \"SELECT['wood shavings']\", \"FILTER['#1', 'that is sitting on #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-797-3-0", "input": "If the laptop display in the left image faces left, and the laptop display in the right image faces right.", "output": "[\"SELECT['the left image']\", \"SELECT['the right image']\", \"PROJECT['the laptop display in #REF', '#1']\", \"PROJECT['the laptop display in #REF', '#2']\", \"BOOLEAN['#3', 'faces left']\", \"BOOLEAN['#4', 'faces right']\", \"BOOLEAN['logical_and', 'true', '#5', '#6']\"]"}
{"id": "NLVR2_dev_dev-798-0-1", "input": "If there are two babies with balloons at or on their head.", "output": "[\"SELECT['babies']\", \"SELECT['balloons']\", \"PROJECT['head of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is at #3']\", \"COMPARATIVE['#1', '#2', 'is on #3']\", \"UNION['#4', '#5']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-799-0-0", "input": "If the right image includes at least one foreground seal with its head off the ground and its mouth open wide.", "output": "[\"SELECT['right image']\", \"PROJECT['seal in #REF', '#1']\", \"FILTER['#2', 'that is foreground']\", \"PROJECT['head of #REF', '#3']\", \"PROJECT['ground in #REF', '#1']\", \"COMPARATIVE['#3', '#4', 'is off #5']\", \"PROJECT['mouth of #REF', '#6']\", \"COMPARATIVE['#6', '#7', 'is open wide']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-799-2-1", "input": "If there are at least 5 seelions sunning on the rocks surrounded by water.", "output": "[\"SELECT['seelions']\", \"SELECT['rocks']\", \"SELECT['water']\", \"FILTER['#1', 'sunning on #2']\", \"FILTER['#4', 'that is surrounded by water']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is at least 5']\"]"}
{"id": "NLVR2_dev_dev-800-0-1", "input": "If an image shows a sled driver in a yellow race vest with a team of no more than three dogs.", "output": "[\"SELECT['sled driver']\", \"PROJECT['race vest of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is yellow']\", \"PROJECT['dogs that are with #REF', '#3']\", \"FILTER['#4', 'that are in a team']\", \"SELECT['images']\", \"GROUP['count', '#5', '#6']\", \"COMPARATIVE['#6', '#7', 'is at most three']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-80-0-1", "input": "If there is a hamster holding food in it's hands", "output": "[\"SELECT['hamster']\", \"PROJECT['hands of #REF', '#1']\", \"SELECT['food']\", \"COMPARATIVE['#1', '#2', 'is holding #3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-800-1-0", "input": "If the sled driver in the image on the left is standing while the driver in the image on the right can't be seen.", "output": "[\"SELECT['the image on the left']\", \"SELECT['the image on the right']\", \"PROJECT['sled driver in #REF', '#1']\", \"PROJECT['sled driver in #REF', '#2']\", \"BOOLEAN['#3', 'is standing']\", \"BOOLEAN['#4', 'ca nt be seen']\", \"BOOLEAN['logical_and', 'true', '#5', '#6']\"]"}
{"id": "NLVR2_dev_dev-801-1-1", "input": "If there are 3 dogs at the beach in the image pair", "output": "[\"SELECT['image pair']\", \"PROJECT['dogs of #REF', '#1']\", \"SELECT['beach']\", \"FILTER['#2', 'that are at #3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to 3']\"]"}
{"id": "NLVR2_dev_dev-801-2-0", "input": "If there are 3 dogs on the beach.", "output": "[\"SELECT['dogs']\", \"SELECT['beach']\", \"FILTER['#1', 'on #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to 3']\"]"}
{"id": "NLVR2_dev_dev-802-1-1", "input": "If at least one bed is a four poster bed.", "output": "[\"SELECT['bed']\", \"SELECT['posters']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is equal to four']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-802-2-0", "input": "If the left and right image contains the same number of back wall canopies.", "output": "[\"SELECT['left image']\", \"SELECT['right image']\", \"PROJECT['back wall canopies in #REF', '#1']\", \"PROJECT['back wall canopies in #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to #6']\"]"}
{"id": "NLVR2_dev_dev-80-3-0", "input": "If one hamster is holding a round food item in its paws.", "output": "[\"SELECT['hamsters']\", \"SELECT['item']\", \"FILTER['#2', 'that is food']\", \"FILTER['#3', 'that is round']\", \"PROJECT['paws of #REF', '#1']\", \"FILTER['#1', 'holding #4 in #5']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-803-1-0", "input": "If there are exactly two containers on the right that are white or filled with a white liquid, and there are two or more containers on the left that are clear or filled with clear liquid.", "output": "[\"SELECT['containers']\", \"FILTER['#1', 'on the right']\", \"FILTER['#2', 'that are white']\", \"SELECT['liquid']\", \"FILTER['#4', 'that is white']\", \"FILTER['#2', 'filled with #5']\", \"UNION['#3', '#6']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is equal to two']\", \"FILTER['#1', 'on the left']\", \"FILTER['#10', 'that are clear']\", \"FILTER['#4', 'that is clear']\", \"FILTER['#10', 'filled with #12']\", \"UNION['#11', '#13']\", \"AGGREGATE['count', '#14']\", \"BOOLEAN['#15', 'is at least two']\", \"BOOLEAN['logical_and', 'true', '#9', '#16']\"]"}
{"id": "NLVR2_dev_dev-803-2-1", "input": "If one image includes one pump-top jar, which is clear and partly filled with a cream-colored substance.", "output": "[\"SELECT['jars']\", \"FILTER['#1', 'that are pump-top']\", \"FILTER['#2', 'that are clear']\", \"SELECT['substance']\", \"FILTER['#4', 'that is cream-colored']\", \"FILTER['#3', 'that are partly filled with #5']\", \"PROJECT['images of #REF', '#2']\", \"PROJECT['images of #REF', '#6']\", \"GROUP['count', '#2', '#7']\", \"GROUP['count', '#6', '#8']\", \"COMPARATIVE['#7', '#9', 'is equal to one']\", \"COMPARATIVE['#8', '#10', 'is equal to one']\", \"SELECT['images']\", \"INTERSECTION['#13', '#11', '#12']\", \"AGGREGATE['count', '#14']\", \"BOOLEAN['#15', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-804-0-0", "input": "If there are exactly two vending machines present.", "output": "[\"SELECT['vending machines']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-804-3-1", "input": "If there are two vending machines in the pair of images.", "output": "[\"SELECT['vending machines']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-805-0-0", "input": "If one sax has a mouthpiece in.", "output": "[\"SELECT['sax']\", \"PROJECT['mouthpiece of #REF', '#1']\", \"FILTER['#1', 'that has #2 in']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-805-0-1", "input": "If in at least one image there is a shiny silver saxophone with the large opening on the right side.", "output": "[\"SELECT['saxophone']\", \"FILTER['#1', 'that is shiny']\", \"FILTER['#2', 'that is silver']\", \"PROJECT['right side of #REF', '#3']\", \"COMPARATIVE['#3', '#4', 'has a large opening']\", \"BOOLEAN['#5', 'is in at least one image']\"]"}
{"id": "NLVR2_dev_dev-806-0-0", "input": "If the left image contains two parrots perched on a branch.", "output": "[\"SELECT['left image']\", \"PROJECT['parrots in #REF', '#1']\", \"PROJECT['branch in #REF', '#1']\", \"FILTER['#2', 'that are perched on #3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-806-2-1", "input": "If the left image shows two blue-and-yellow parrot-type birds perched side by side on a branch, and the right image shows a blue-and-yellow bird perched on green clustered seeds.", "output": "[\"SELECT['the left image']\", \"PROJECT['birds in #REF', '#1']\", \"FILTER['#2', 'that are blue-and-yellow']\", \"FILTER['#3', 'that are parrot-type']\", \"PROJECT['branch in #REF', '#1']\", \"FILTER['#4', 'that are perched side by side on #5']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to two']\", \"SELECT['the right image']\", \"PROJECT['bird in #REF', '#9']\", \"FILTER['#10', 'that is blue-and-yellow']\", \"PROJECT['seeds in #REF', '#9']\", \"FILTER['#12', 'that are green']\", \"FILTER['#13', 'that are clustered']\", \"BOOLEAN['#11', 'is perched on #14']\", \"BOOLEAN['logical_and', 'true', '#8', '#15']\"]"}
{"id": "NLVR2_dev_dev-807-1-0", "input": "If all the flutes are oriented vertically.", "output": "[\"SELECT['flutes']\", \"FILTER['#1', 'that are oriented vertically']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal #4']\"]"}
{"id": "NLVR2_dev_dev-807-1-1", "input": "If at least one image shows a horizontal row of upright metal wind instruments.", "output": "[\"SELECT['wind instruments']\", \"FILTER['#1', 'that are metal']\", \"FILTER['#2', 'that are upright']\", \"FILTER['#3', 'that are in a horizontal row']\", \"BOOLEAN['#4', 'is instruments at least one image']\"]"}
{"id": "NLVR2_dev_dev-808-3-1", "input": "If at least one bottle has a white cap.", "output": "[\"SELECT['bottles']\", \"PROJECT['cap of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is white']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-809-2-0", "input": "If there are a total of 2 pelicans whose bodies are facing directly left.", "output": "[\"SELECT['pelicans']\", \"PROJECT['bodies of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'are facing directly left']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-809-3-1", "input": "If at least one bird is in the water.", "output": "[\"SELECT['birds']\", \"SELECT['the water']\", \"FILTER['#1', 'in #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-810-0-0", "input": "If each loungewear outfit is modeled by a real person, and no loungewear top has sleeves that reach below the elbow.", "output": "[\"SELECT['loungewear outfits']\", \"SELECT['people']\", \"FILTER['#2', 'that are real']\", \"FILTER['#1', 'modeled by #3']\", \"AGGREGATE['count', '#4']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#5', 'is equal to #6']\", \"SELECT['loungewear tops']\", \"PROJECT['sleeves of #REF', '#8']\", \"PROJECT['elbow of #REF', '#3']\", \"FILTER['#8', 'where #9 reach below #10']\", \"AGGREGATE['count', '#11']\", \"BOOLEAN['#12', 'is equal to zero']\", \"BOOLEAN['logical_and', 'true', '#7', '#13']\"]"}
{"id": "NLVR2_dev_dev-811-3-0", "input": "If there is only one lamp, and it is next to a sofa.", "output": "[\"SELECT['lamp']\", \"SELECT['sofa']\", \"FILTER['#1', 'that is next to #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-811-3-1", "input": "If there are four window blinds.", "output": "[\"SELECT['window blinds']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is equal to four']\"]"}
{"id": "NLVR2_dev_dev-81-2-0", "input": "If an image contains exactly three safety pins, including two with white duck-shaped heads.", "output": "[\"SELECT['images']\", \"PROJECT['safety pins in #REF', '#1']\", \"PROJECT['head of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is white']\", \"COMPARATIVE['#2', '#3', 'is duck-shaped']\", \"INTERSECTION['#2', '#4', '#5']\", \"GROUP['count', '#2', '#1']\", \"GROUP['count', '#6', '#1']\", \"COMPARATIVE['#1', '#7', 'is equal to three']\", \"COMPARATIVE['#1', '#8', 'is equal to two']\", \"INTERSECTION['#1', '#9', '#10']\", \"AGGREGATE['count', '#11']\", \"BOOLEAN['#12', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-81-2-1", "input": "If there are diaper pins in each image.", "output": "[\"SELECT['diaper pins']\", \"PROJECT['images of #REF', '#1']\", \"SELECT['images']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to #5']\"]"}
{"id": "NLVR2_dev_dev-812-1-0", "input": "If there are two layered chocolate cakes in glass dishes.", "output": "[\"SELECT['chocolate cakes']\", \"FILTER['#1', 'that are two layered']\", \"SELECT['dishes']\", \"FILTER['#3', 'that are glass']\", \"FILTER['#2', 'that are in #4']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is at least two']\"]"}
{"id": "NLVR2_dev_dev-812-3-1", "input": "If there is one trifle bowl that has a pedestal bottom to lift it up off the table.", "output": "[\"SELECT['trifle bowls']\", \"SELECT['pedestal bottoms']\", \"SELECT['the table']\", \"FILTER['#2', 'that lift up #1 off #3']\", \"FILTER['#1', 'with #4']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-813-0-1", "input": "If in at least one image we are inside looking at church columns of white and light brown.", "output": "[\"SELECT['church columns']\", \"FILTER['#1', 'that are white and light brown']\", \"FILTER['#2', 'that are inside']\", \"BOOLEAN['#3', 'are in at least one image']\"]"}
{"id": "NLVR2_dev_dev-813-1-0", "input": "If the left image features ornate arch shapes above gray stone columns.", "output": "[\"SELECT['shapes']\", \"FILTER['#1', 'that are arch']\", \"FILTER['#2', 'that are ornate']\", \"SELECT['columns']\", \"FILTER['#4', 'that are stone']\", \"FILTER['#5', 'that are gray']\", \"FILTER['#3', 'above #6']\", \"BOOLEAN['#7', 'is in the left image']\"]"}
{"id": "NLVR2_dev_dev-814-2-1", "input": "If the interior of a yurt includes a lit stove with a vertical pipe, a burgundy entryway rug, and a fringed patterned purplish rug.", "output": "[\"SELECT['yurt']\", \"PROJECT['the interior of #REF', '#1']\", \"SELECT['stove']\", \"FILTER['#3', 'that is lit']\", \"SELECT['pipe']\", \"FILTER['#5', 'that is vertical']\", \"FILTER['#4', 'with #6']\", \"BOOLEAN['#7', 'is in #2']\", \"SELECT['entryway rug']\", \"FILTER['#9', 'that is burgundy']\", \"BOOLEAN['#10', 'is in #2']\", \"SELECT['rug']\", \"FILTER['#12', 'that is fringed patterned']\", \"FILTER['#13', 'that is purplish']\", \"BOOLEAN['#14', 'is in #2']\", \"BOOLEAN['logical_and', 'true', '#8', '#11']\", \"BOOLEAN['logical_and', 'true', '#15', '#16']\"]"}
{"id": "NLVR2_dev_dev-815-2-0", "input": "If there are two doors with at least four glass panels, one is open and one is closed.", "output": "[\"SELECT['doors']\", \"PROJECT['glass panels of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is at least four']\", \"FILTER['#4', 'that are open']\", \"FILTER['#4', 'that are closed']\", \"AGGREGATE['count', '#5']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to one']\", \"BOOLEAN['#8', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#9', '#10']\"]"}
{"id": "NLVR2_dev_dev-815-3-1", "input": "If the doors in the right image are closes.", "output": "[\"SELECT['right image']\", \"PROJECT['doors of #REF', '#1']\", \"BOOLEAN['#2', 'are closes']\"]"}
{"id": "NLVR2_dev_dev-816-1-0", "input": "If the pizza in the image on the left sits uncut on a pan.", "output": "[\"SELECT['left image']\", \"PROJECT['pizza of #REF', '#1']\", \"SELECT['pan']\", \"FILTER['#2', 'on #3']\", \"BOOLEAN['#4', 'sits uncut']\"]"}
{"id": "NLVR2_dev_dev-817-3-0", "input": "If an image shows small baboons sitting and looking on as a large baboon examines a backpack.", "output": "[\"SELECT['baboon']\", \"FILTER['#1', 'that are small']\", \"FILTER['#2', 'that are sitting']\", \"FILTER['#1', 'that is large']\", \"SELECT['backpack']\", \"FILTER['#4', 'that examines #5']\", \"FILTER['#3', 'looking on #6']\", \"BOOLEAN['#7', 'are in an image']\"]"}
{"id": "NLVR2_dev_dev-817-3-1", "input": "If there is a baboon looking at a backpack with youngsters watching", "output": "[\"SELECT['baboon']\", \"SELECT['backpack']\", \"FILTER['#1', 'looking at #2']\", \"FILTER['#1', 'that are youngsters']\", \"BOOLEAN['#4', 'are watching #3']\"]"}
{"id": "NLVR2_dev_dev-818-0-1", "input": "If a image shows one gorilla posing with a bent elbow and hand resting on the left-side leg.", "output": "[\"SELECT['gorilla']\", \"PROJECT['elbow of #REF', '#1']\", \"FILTER['#1', 'that is posing']\", \"COMPARATIVE['#3', '#2', 'is bent']\", \"PROJECT['hand of #REF', '#4']\", \"PROJECT['leg of #REF', '#4']\", \"FILTER['#6', 'that is left-side']\", \"COMPARATIVE['#4', '#5', 'is resting on #7']\", \"SELECT['images']\", \"GROUP['count', '#8', '#9']\", \"COMPARATIVE['#9', '#10', 'is equal to one']\", \"AGGREGATE['count', '#11']\", \"BOOLEAN['#12', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-818-3-0", "input": "If an image contains a gorilla laying on its back with its left hand on top of its head.", "output": "[\"SELECT['gorilla']\", \"PROJECT['back of #REF', '#1']\", \"FILTER['#1', 'laying on #2']\", \"PROJECT['left hand of #REF', '#3']\", \"PROJECT['head of #REF', '#3']\", \"COMPARATIVE['#3', '#4', 'is on top of #5']\", \"BOOLEAN['#6', 'is in an image']\"]"}
{"id": "NLVR2_dev_dev-819-1-0", "input": "If these dogs are all weaing pack equipment  to carry gear.", "output": "[\"SELECT['dogs']\", \"SELECT['pack equipment']\", \"SELECT['gear']\", \"FILTER['#2', 'that is to carry #3']\", \"FILTER['#1', 'that are weaing #4']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to #7']\"]"}
{"id": "NLVR2_dev_dev-819-1-1", "input": "If the combined images include two adult dobermans with erect ears wearing packs that strap to their backs.", "output": "[\"SELECT['dobermans']\", \"FILTER['#1', 'that are adult']\", \"PROJECT['ears of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'are erect']\", \"SELECT['packs']\", \"PROJECT['backs of #REF', '#4']\", \"FILTER['#5', 'that strap to #6']\", \"FILTER['#4', 'that are wearing #7']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-820-1-0", "input": "If in each image, at least four pieces of fruit are placed side by side in a straight line.", "output": "[\"SELECT['images']\", \"PROJECT['pieces of fruit in #REF', '#1']\", \"FILTER['#2', 'that are placed side by side']\", \"FILTER['#3', 'in a straight line']\", \"GROUP['count', '#4', '#1']\", \"COMPARATIVE['#1', '#5', 'is at least four']\", \"AGGREGATE['count', '#6']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#7', 'is equal to #8']\"]"}
{"id": "NLVR2_dev_dev-820-1-1", "input": "If in one of the images the lemons still have the leaves attached.", "output": "[\"SELECT['lemons']\", \"SELECT['leaves']\", \"FILTER['#1', 'with #2 attached']\", \"BOOLEAN['#3', 'is in one image']\"]"}
{"id": "NLVR2_dev_dev-82-1-0", "input": "If both images show multiple baboons at the edge of a paved surface.", "output": "[\"SELECT['baboons']\", \"SELECT['paved surface']\", \"PROJECT['edge of #REF', '#2']\", \"FILTER['#1', 'that are at #3']\", \"SELECT['images']\", \"GROUP['count', '#4', '#5']\", \"COMPARATIVE['#5', '#6', 'is at least two']\", \"AGGREGATE['count', '#5']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is equal to #9']\"]"}
{"id": "NLVR2_dev_dev-821-0-1", "input": "If the head of a broccoli is visible in the right image.", "output": "[\"SELECT['broccoli']\", \"PROJECT['the head of #REF', '#1']\", \"BOOLEAN['#2', 'is visible in the right image']\"]"}
{"id": "NLVR2_dev_dev-822-3-1", "input": "If the left and right image contains the same number of tented canopies.", "output": "[\"SELECT['left image']\", \"PROJECT['canopies of #REF', '#1']\", \"FILTER['#2', 'that are tented']\", \"AGGREGATE['count', '#3']\", \"SELECT['right image']\", \"PROJECT['canopies of #REF', '#5']\", \"FILTER['#6', 'that are tented']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#4', 'is equal to #8']\"]"}
{"id": "NLVR2_dev_dev-823-1-0", "input": "If each image includes one golden-haired spaniel, which has its tongue hanging out in one of the images.", "output": "[\"SELECT['images']\", \"PROJECT['spaniels in #REF', '#1']\", \"FILTER['#2', 'that are golden-haired']\", \"PROJECT['tongue of #REF', '#3']\", \"COMPARATIVE['#3', '#4', 'is hanging out']\", \"GROUP['count', '#3', '#1']\", \"GROUP['count', '#5', '#1']\", \"COMPARATIVE['#1', '#6', 'is equal to one']\", \"COMPARATIVE['#1', '#7', 'is equal to one']\", \"AGGREGATE['count', '#8']\", \"AGGREGATE['count', '#9']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#10', 'is equal to #12']\", \"BOOLEAN['#11', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#13', '#14']\"]"}
{"id": "NLVR2_dev_dev-823-2-1", "input": "If the left image contains at least three dogs sitting in grass.", "output": "[\"SELECT['the left image']\", \"PROJECT['dogs in #REF', '#1']\", \"PROJECT['grass in #REF', '#1']\", \"FILTER['#2', 'sitting in #3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least three']\"]"}
{"id": "NLVR2_dev_dev-824-1-0", "input": "If there are no less than 3 lip glosses in the image pair", "output": "[\"SELECT['lip glosses']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is at least 3']\"]"}
{"id": "NLVR2_dev_dev-824-2-1", "input": "If there is at least one image, there are at least two lip glosses one colored orange and one colored black.", "output": "[\"SELECT['lip glosses']\", \"FILTER['#1', 'that are colored orange']\", \"FILTER['#1', 'that are colored black']\", \"SELECT['images']\", \"GROUP['count', '#2', '#4']\", \"COMPARATIVE['#4', '#5', 'is at least one']\", \"GROUP['count', '#3', '#6']\", \"COMPARATIVE['#6', '#7', 'is at least one']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-825-1-0", "input": "If in one of the images, we see a test-tube shaped vase that has no flower.", "output": "[\"SELECT['vase']\", \"FILTER['#1', 'that is test-tube shaped']\", \"SELECT['flower']\", \"GROUP['count', '#3', '#2']\", \"COMPARATIVE['#2', '#4', 'is equal to zero']\", \"BOOLEAN['#5', 'is in one image']\"]"}
{"id": "NLVR2_dev_dev-825-2-1", "input": "If one of the images is of a single test tube that is empty.", "output": "[\"SELECT['images']\", \"PROJECT['test tubes in #REF', '#1']\", \"FILTER['#2', 'that are empty']\", \"GROUP['count', '#3', '#1']\", \"COMPARATIVE['#1', '#4', 'is equal to one']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-826-0-0", "input": "If none of the phones have an antenna, and at least one of them is shown completely closed, with its keys hidden from view.", "output": "[\"SELECT['phones']\", \"FILTER['#1', 'that has an antenna']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to zero']\", \"FILTER['#1', 'that is shown completely closed']\", \"PROJECT['keys of #REF', '#5']\", \"COMPARATIVE['#5', '#6', 'are hidden from view']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#4', '#9']\"]"}
{"id": "NLVR2_dev_dev-826-2-1", "input": "If the left and right image contains the same number of open and closed phones.", "output": "[\"SELECT['the left image']\", \"SELECT['the right image']\", \"PROJECT['phones in #REF', '#1']\", \"FILTER['#3', 'that are open']\", \"FILTER['#3', 'that are closed']\", \"AGGREGATE['count', '#4']\", \"AGGREGATE['count', '#5']\", \"PROJECT['phones in #REF', '#2']\", \"FILTER['#8', 'that are open']\", \"FILTER['#8', 'that are closed']\", \"AGGREGATE['count', '#9']\", \"AGGREGATE['count', '#10']\", \"BOOLEAN['#6', 'is equal to #11']\", \"BOOLEAN['#7', 'is equal to #12']\", \"BOOLEAN['logical_and', 'true', '#13', '#14']\"]"}
{"id": "NLVR2_dev_dev-827-3-0", "input": "If some of the cups are stacked on top of one another.", "output": "[\"SELECT['cups']\", \"FILTER['#1', 'that are stacked on top of one another']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at least two']\"]"}
{"id": "NLVR2_dev_dev-828-0-1", "input": "If several people are sitting at a table in one of the images.", "output": "[\"SELECT['people']\", \"SELECT['a table']\", \"FILTER['#1', 'sitting at #2']\", \"PROJECT['images of #REF', '#3']\", \"GROUP['count', '#3', '#4']\", \"COMPARATIVE['#4', '#5', 'is higher than two']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-828-3-0", "input": "If there are people dining at tables with white cloths and brown wooden chairs", "output": "[\"SELECT['people']\", \"SELECT['tables']\", \"SELECT['cloths']\", \"FILTER['#3', 'that are white']\", \"SELECT['chairs']\", \"FILTER['#5', 'that are brown']\", \"FILTER['#6', 'that are wooden']\", \"FILTER['#2', 'with #4']\", \"FILTER['#2', 'with #7']\", \"INTERSECTION['#2', '#8', '#9']\", \"BOOLEAN['#1', 'are dining at']\"]"}
{"id": "NLVR2_dev_dev-829-1-1", "input": "If one of the images has some vegetation/greenery visible.", "output": "[\"SELECT['vegetation/greenery']\", \"FILTER['#1', 'that is visible']\", \"BOOLEAN['#2', 'is in one of the images']\"]"}
{"id": "NLVR2_dev_dev-829-3-0", "input": "If in the left image, there are two ferrets--one solid white and one mixed gray.", "output": "[\"SELECT['left image']\", \"PROJECT['ferrets of #REF', '#1']\", \"FILTER['#2', 'that are solid white']\", \"FILTER['#2', 'that are mixed gray']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to one']\", \"BOOLEAN['#6', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#7', '#8']\"]"}
{"id": "NLVR2_dev_dev-8-3-0", "input": "If a riderless horse carriage is sitting on the grass.", "output": "[\"SELECT['horse carriage']\", \"SELECT['grass']\", \"FILTER['#1', 'that is riderless']\", \"FILTER['#3', 'that is sitting on #2']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-83-0-1", "input": "If in at least one image there is a pair of antelopes.", "output": "[\"SELECT['images']\", \"PROJECT['antelopes in #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is equal to two']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-830-1-0", "input": "If exactly two open brown cases holding paper are displayed in the left image.", "output": "[\"SELECT['left image']\", \"PROJECT['cases in #REF', '#1']\", \"FILTER['#2', 'that are brown']\", \"FILTER['#3', 'that are open']\", \"SELECT['paper']\", \"FILTER['#4', 'that are holding #5']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-8-3-1", "input": "If the left image shows the front of an empty cart facing right, and the right image shows a helmet-wearing girl in a right-facing two-wheeled cart pulled by a pony.", "output": "[\"SELECT['cart']\", \"FILTER['#1', 'that is empty']\", \"FILTER['#2', 'that is facing right']\", \"PROJECT['the front of #REF', '#3']\", \"BOOLEAN['#4', 'is in the left image']\", \"SELECT['girl']\", \"FILTER['#6', 'that is helmet-wearing']\", \"SELECT['cart']\", \"FILTER['#1', 'that is right-facing']\", \"FILTER['#9', 'that is two-wheeled']\", \"SELECT['pony']\", \"FILTER['#10', 'pulled by #11']\", \"FILTER['#7', 'in #12']\", \"BOOLEAN['#13', 'is in the right image']\", \"BOOLEAN['logical_and', 'true', '#5', '#14']\"]"}
{"id": "NLVR2_dev_dev-831-0-1", "input": "If there is broccoli on a towel.", "output": "[\"SELECT['broccoli']\", \"SELECT['towel']\", \"BOOLEAN['#1', 'is on #2']\"]"}
{"id": "NLVR2_dev_dev-831-3-0", "input": "If the left image shows broccoli florets in a roundish container, and the right image features broccoli florets on a wood-grain surface.", "output": "[\"SELECT['broccoli florets']\", \"SELECT['container']\", \"FILTER['#2', 'that is roundish']\", \"FILTER['#1', 'in #3']\", \"BOOLEAN['#4', 'are in the left image']\", \"SELECT['surface']\", \"FILTER['#6', 'that is wood-grain']\", \"FILTER['#1', 'on #7']\", \"BOOLEAN['#8', 'are in the right image']\", \"BOOLEAN['logical_and', 'true', '#5', '#9']\"]"}
{"id": "NLVR2_dev_dev-832-3-0", "input": "If one image contains at least one empty parked bus with a completely flat front, and the other image shows people standing next to a slope-front bus near glowing yellow traffic lights.", "output": "[\"SELECT['one image']\", \"PROJECT['buses in #REF', '#1']\", \"FILTER['#2', 'that are empty']\", \"FILTER['#3', 'that are parked']\", \"PROJECT['front of #REF', '#4']\", \"COMPARATIVE['#4', '#5', 'is completely flat']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is at least one']\", \"SELECT['the other image']\", \"PROJECT['people in #REF', '#9']\", \"PROJECT['bus in #REF', '#9']\", \"FILTER['#11', 'that has slope-front']\", \"PROJECT['traffic lights in #REF', '#9']\", \"FILTER['#13', 'that are glowing yellow']\", \"FILTER['#12', 'near #14']\", \"BOOLEAN['#10', 'are standing next to #15']\", \"BOOLEAN['logical_and', 'true', '#8', '#16']\"]"}
{"id": "NLVR2_dev_dev-832-3-1", "input": "If there is a stopped bus with people next to it and lit stop lights behind it", "output": "[\"SELECT['bus']\", \"FILTER['#1', 'that is stopped']\", \"SELECT['people']\", \"FILTER['#2', 'that is next to #3']\", \"PROJECT['stop lights of #REF', '#4']\", \"COMPARATIVE['#4', '#5', 'are lit']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-83-3-0", "input": "If a group of at least 7 antelope is seen in the right image.", "output": "[\"SELECT['right image']\", \"PROJECT['antelope in #REF', '#1']\", \"FILTER['#2', 'that are a group']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least 7']\"]"}
{"id": "NLVR2_dev_dev-834-0-0", "input": "If each image includes at least one uncapped marker-like makeup stick, along with its separate gold cap.", "output": "[\"SELECT['makeup stick']\", \"FILTER['#1', 'that are marker-like']\", \"FILTER['#2', 'that are uncapped']\", \"PROJECT['cap of #REF', '#3']\", \"FILTER['#4', 'that is gold']\", \"FILTER['#5', 'that is separate']\", \"FILTER['#3', 'that are with #6']\", \"SELECT['images']\", \"GROUP['count', '#7', '#8']\", \"COMPARATIVE['#8', '#9', 'is at least one']\", \"AGGREGATE['count', '#8']\", \"AGGREGATE['count', '#10']\", \"BOOLEAN['#11', 'is equal to #12']\"]"}
{"id": "NLVR2_dev_dev-835-0-1", "input": "If the cabinet on the right has drawers on it.", "output": "[\"SELECT['cabinet']\", \"FILTER['#1', 'on the right']\", \"PROJECT['drawers of #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least two']\"]"}
{"id": "NLVR2_dev_dev-835-1-0", "input": "If one cabinet has tall slender decorative legs and paned glass on the sides as well as the front.", "output": "[\"SELECT['cabinet']\", \"PROJECT['legs of #REF', '#1']\", \"FILTER['#2', 'that are decorative']\", \"FILTER['#3', 'that are slender']\", \"FILTER['#4', 'that are tall']\", \"FILTER['#1', 'that has #5']\", \"PROJECT['sides of #REF', '#6']\", \"FILTER['#7', 'that are paned glass']\", \"FILTER['#6', 'that has #8']\", \"PROJECT['front of #REF', '#9']\", \"FILTER['#10', 'that are paned glass']\", \"FILTER['#9', 'that has #11']\", \"AGGREGATE['count', '#12']\", \"BOOLEAN['#13', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-836-0-0", "input": "If one of the dogs is sitting in the grass.", "output": "[\"SELECT['dogs']\", \"SELECT['grass']\", \"FILTER['#1', 'sitting in #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-836-0-1", "input": "If an image contains a dog sitting in grass.", "output": "[\"SELECT['dog']\", \"SELECT['grass']\", \"FILTER['#1', 'sitting in #2']\", \"BOOLEAN['#3', 'is in an image']\"]"}
{"id": "NLVR2_dev_dev-837-2-1", "input": "If each of the boars has visible tusks.", "output": "[\"SELECT['boars']\", \"PROJECT['tusks of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'are visible']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to #5']\"]"}
{"id": "NLVR2_dev_dev-837-3-0", "input": "If each image includes exactly one target mark superimposed on a warthog in the foreground.", "output": "[\"SELECT['images']\", \"PROJECT['target marks in #REF', '#1']\", \"PROJECT['warthog in #REF', '#1']\", \"FILTER['#3', 'in the foreground']\", \"FILTER['#2', 'superimposed on #4']\", \"GROUP['count', '#5', '#1']\", \"COMPARATIVE['#1', '#6', 'is equal to one']\", \"AGGREGATE['count', '#7']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#8', 'is equal to #9']\"]"}
{"id": "NLVR2_dev_dev-838-0-1", "input": "If there are two penguins in the water.", "output": "[\"SELECT['penguins']\", \"SELECT['the water']\", \"FILTER['#1', 'in #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-838-3-0", "input": "If there are two penguins in the image pair", "output": "[\"SELECT['images']\", \"PROJECT['penguins in #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-839-0-0", "input": "If all of the birds are flying through the air.", "output": "[\"SELECT['birds']\", \"SELECT['air']\", \"FILTER['#1', 'flying through #2']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to #5']\"]"}
{"id": "NLVR2_dev_dev-839-0-1", "input": "If there are exactly two parrots in the left image.", "output": "[\"SELECT['the left image']\", \"PROJECT['parrots in #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-840-3-1", "input": "If one of the images includes three or fewer balloons.", "output": "[\"SELECT['images']\", \"PROJECT['balloons in #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is at most three']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-841-0-1", "input": "If the dogs appear to be facing opposite directions from each other; either towards or away.", "output": "[\"SELECT['dogs']\", \"PROJECT['directions facing of #REF', '#1']\", \"BOOLEAN['#2', 'are the opposite']\"]"}
{"id": "NLVR2_dev_dev-84-1-1", "input": "If a stylus is near a laptop in one of the images.", "output": "[\"SELECT['stylus']\", \"SELECT['laptop']\", \"FILTER['#1', 'that is near #2']\", \"BOOLEAN['#3', 'is in one image']\"]"}
{"id": "NLVR2_dev_dev-841-2-0", "input": "If the dog on the left is black and white, and the dog on the right is white with various brown shades.", "output": "[\"SELECT['dogs']\", \"FILTER['#1', 'that is on the left']\", \"BOOLEAN['#2', 'is black and white']\", \"FILTER['#1', 'that is on the right']\", \"FILTER['#4', 'that is white']\", \"BOOLEAN['#5', 'is with various brown shades']\", \"BOOLEAN['logical_and', 'true', '#3', '#6']\"]"}
{"id": "NLVR2_dev_dev-842-1-0", "input": "If a green wreath is hanging in the middle of the china cabinet.", "output": "[\"SELECT['wreath']\", \"FILTER['#1', 'that is green']\", \"SELECT['china cabinet']\", \"PROJECT['middle of #REF', '#3']\", \"FILTER['#2', 'that is hanging in #4']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-842-2-1", "input": "If one of the cabinets has a green wreath hanging on its front.", "output": "[\"SELECT['cabinets']\", \"SELECT['wreaths']\", \"FILTER['#2', 'that is green']\", \"PROJECT['front of #REF', '#1']\", \"COMPARATIVE['#1', '#3', 'is hanging on #4']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-84-3-0", "input": "If one image includes a silver stylus and a device with a blue keyboard base and an open screen propped up like an easel.", "output": "[\"SELECT['stylus']\", \"FILTER['#1', 'that is silver']\", \"SELECT['device']\", \"PROJECT['keyboard base of #REF', '#3']\", \"COMPARATIVE['#3', '#4', 'is blue']\", \"PROJECT['screen of #REF', '#3']\", \"FILTER['#6', 'that is open']\", \"FILTER['#7', 'that is propped like an easel']\", \"FILTER['#5', 'that has #8']\", \"UNION['#2', '#9']\", \"BOOLEAN['#10', 'is in one image']\"]"}
{"id": "NLVR2_dev_dev-843-2-1", "input": "If a young zebra in the image on the right is nursing.", "output": "[\"SELECT['zebra']\", \"FILTER['#1', 'that is young']\", \"FILTER['#2', 'that is nursing']\", \"BOOLEAN['#3', 'is in the image on the right']\"]"}
{"id": "NLVR2_dev_dev-843-3-0", "input": "If in the image on the left, a person is touching a zebra.", "output": "[\"SELECT['a person']\", \"SELECT['a zebra']\", \"FILTER['#1', 'touching #2']\", \"BOOLEAN['#3', 'is in the image on the left']\"]"}
{"id": "NLVR2_dev_dev-844-2-0", "input": "If each image contains a pair of similarly-colored birds posed near to one another and alongside each other.", "output": "[\"SELECT['images']\", \"PROJECT['birds in #REF', '#1']\", \"FILTER['#2', 'that are similarly-colored']\", \"FILTER['#3', 'that are posed near to one another']\", \"FILTER['#4', 'that are alongside each other']\", \"GROUP['count', '#5', '#1']\", \"COMPARATIVE['#1', '#6', 'is equal to two']\", \"AGGREGATE['count', '#7']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#8', 'is equal to #9']\"]"}
{"id": "NLVR2_dev_dev-844-2-1", "input": "If there are exactly two brightly-colored parrots in each picture and each pair is standing close together on a branch.", "output": "[\"SELECT['parrots']\", \"FILTER['#1', 'that are brightly-colored']\", \"FILTER['#2', 'that are standing close together']\", \"SELECT['branch']\", \"FILTER['#3', 'that are on #4']\", \"SELECT['pictures']\", \"GROUP['count', '#2', '#6']\", \"COMPARATIVE['#6', '#7', 'is equal to two']\", \"GROUP['count', '#5', '#8']\", \"COMPARATIVE['#8', '#9', 'is equal to two']\", \"AGGREGATE['count', '#6']\", \"AGGREGATE['count', '#10']\", \"BOOLEAN['#11', 'is equal to #12']\"]"}
{"id": "NLVR2_dev_dev-845-3-0", "input": "If there is a single fish with a white strip down its back and an opaque tail swimming near an anemone", "output": "[\"SELECT['fish']\", \"PROJECT['back of #REF', '#1']\", \"SELECT['strip']\", \"FILTER['#3', 'that is down #2']\", \"COMPARATIVE['#1', '#4', 'is white']\", \"PROJECT['tail of #REF', '#5']\", \"COMPARATIVE['#5', '#6', 'is opaque']\", \"SELECT['anemone']\", \"FILTER['#7', 'that are swimming near #8']\", \"AGGREGATE['count', '#9']\", \"BOOLEAN['#10', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-846-0-0", "input": "If in at least one image there is at least 1 circle crab cage that is holding at least five pound of stuff inside of it.", "output": "[\"SELECT['crab cage']\", \"FILTER['#1', 'that is circle']\", \"PROJECT['images of #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least one']\", \"PROJECT['stuff inside #REF', '#2']\", \"PROJECT['pounds of #REF', '#6']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is at least five']\", \"BOOLEAN['logical_and', 'true', '#5', '#9']\"]"}
{"id": "NLVR2_dev_dev-847-1-0", "input": "If one of the images has two separate trains on two separate tracks.", "output": "[\"SELECT['images']\", \"PROJECT['separate trains in #REF', '#1']\", \"PROJECT['separate tracks in #REF', '#1']\", \"FILTER['#2', 'on #3']\", \"GROUP['count', '#4', '#1']\", \"COMPARATIVE['#1', '#5', 'is equal to two']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-847-1-1", "input": "If an image shows just one train, which is angled heading leftward and has a multicolored stripe along with bottom of its side.", "output": "[\"SELECT['images']\", \"PROJECT['trains in #REF', '#1']\", \"FILTER['#2', 'that are angled heading leftward']\", \"PROJECT['side of #REF', '#3']\", \"PROJECT['bottom of #REF', '#4']\", \"SELECT['stripe']\", \"FILTER['#6', 'that is multicolored']\", \"COMPARATIVE['#3', '#5', 'has #7 along']\", \"GROUP['count', '#8', '#1']\", \"COMPARATIVE['#1', '#9', 'is equal to one']\", \"AGGREGATE['count', '#10']\", \"BOOLEAN['#11', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-848-1-0", "input": "If one of the wagon images is a close up of just the wagon's wheel.", "output": "[\"SELECT['wagon']\", \"PROJECT['wheel of #REF', '#1']\", \"PROJECT['close up of #REF', '#2']\", \"BOOLEAN['#3', 'is in one of the images']\"]"}
{"id": "NLVR2_dev_dev-849-2-1", "input": "If the right image features two side-by-side water bottles with black lids and anime-style characters decorating them.", "output": "[\"SELECT['right image']\", \"PROJECT['water bottles in #REF', '#1']\", \"FILTER['#2', 'that are side-by-side']\", \"PROJECT['lids of #REF', '#3']\", \"COMPARATIVE['#3', '#4', 'is black']\", \"SELECT['characters']\", \"FILTER['#6', 'that are anime-style']\", \"FILTER['#5', 'that #7 are decorating them']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-849-3-0", "input": "If the left and right image contains a total of two water bottles.", "output": "[\"SELECT['left image']\", \"PROJECT['water bottles of #REF', '#1']\", \"SELECT['right image']\", \"PROJECT['waters bottles of #REF', '#3']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['sum', '#5', '#6']\", \"BOOLEAN['#7', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-850-2-1", "input": "If in at least one image there are at least four bottle rows that together make a walking path.", "output": "[\"SELECT['images']\", \"PROJECT['bottle rows in #REF', '#1']\", \"FILTER['#2', 'that together make a walking path']\", \"GROUP['count', '#3', '#1']\", \"COMPARATIVE['#1', '#4', 'is at least four']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-85-1-0", "input": "If the left image shows a bookstore exterior with at least one person in front of it, and the right image shows a bookstore interior full of shelves of books.", "output": "[\"SELECT['left image']\", \"PROJECT['bookstore exterior in #REF', '#1']\", \"PROJECT['person in #REF', '#1']\", \"FILTER['#3', 'that is in front of #2']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least one']\", \"SELECT['right image']\", \"PROJECT['bookstore interior in #REF', '#7']\", \"PROJECT['shelves of books in #REF', '#7']\", \"FILTER['#8', 'that is full of #9']\", \"AGGREGATE['count', '#10']\", \"BOOLEAN['#11', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#6', '#12']\"]"}
{"id": "NLVR2_dev_dev-851-3-0", "input": "If chairs surround a table in the image on the right.", "output": "[\"SELECT['chairs']\", \"SELECT['a table']\", \"FILTER['#1', 'that surround #2']\", \"BOOLEAN['#3', 'are in the image on the right']\"]"}
{"id": "NLVR2_dev_dev-852-2-1", "input": "If one passenger automobile is driving in the snow.", "output": "[\"SELECT['passenger automobiles']\", \"SELECT['the snow']\", \"FILTER['#1', 'driving in #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-85-3-1", "input": "If at least one rack of books is sitting outside on the sidewalk.", "output": "[\"SELECT['books']\", \"PROJECT['rack of #REF', '#1']\", \"SELECT['sidewalk']\", \"FILTER['#2', 'sitting on #3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-853-1-0", "input": "If all the syringes have needles attached.", "output": "[\"SELECT['syringes']\", \"SELECT['needles']\", \"FILTER['#1', 'with #2 attached']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#5', 'is equal to #4']\"]"}
{"id": "NLVR2_dev_dev-853-1-1", "input": "If there are 2 syringes total.", "output": "[\"SELECT['syringes']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is equal to 2']\"]"}
{"id": "NLVR2_dev_dev-854-2-0", "input": "If there are two baby cribs.", "output": "[\"SELECT['baby cribs']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-854-3-1", "input": "If the left and right image contains the same number of canopies one circle and one tent.", "output": "[\"SELECT['the left image']\", \"SELECT['the right image']\", \"PROJECT['canopies in #REF', '#1']\", \"PROJECT['canopies in #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to #6']\", \"SELECT['images']\", \"PROJECT['canopies in #REF', '#8']\", \"FILTER['#9', 'that are circles']\", \"FILTER['#9', 'that are tents']\", \"AGGREGATE['count', '#10']\", \"AGGREGATE['count', '#11']\", \"BOOLEAN['#12', 'is equal to one']\", \"BOOLEAN['#13', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#14', '#15']\", \"BOOLEAN['logical_and', 'true', '#7', '#16']\"]"}
{"id": "NLVR2_dev_dev-855-0-0", "input": "If the image to the left features exactly one dog.", "output": "[\"SELECT['left image']\", \"PROJECT['dog of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-855-0-1", "input": "If there is one dog only with no leash in the right pic", "output": "[\"SELECT['right pic']\", \"PROJECT['dog of #REF', '#1']\", \"SELECT['leash']\", \"FILTER['#2', 'with #3']\", \"DISCARD['#2', '#4']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-856-1-1", "input": "If one image depicts a collie-type dog next to multiple white sheep and a standing person.", "output": "[\"SELECT['collie-type dog']\", \"SELECT['sheep']\", \"FILTER['#2', 'that are white']\", \"SELECT['person']\", \"FILTER['#4', 'that is standing']\", \"FILTER['#1', 'that is next to #5']\", \"FILTER['#3', 'that are next to #6']\", \"SELECT['images']\", \"GROUP['count', '#7', '#8']\", \"COMPARATIVE['#8', '#9', 'is at least two']\", \"AGGREGATE['count', '#10']\", \"BOOLEAN['#11', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-856-3-0", "input": "If there are more animals in the image on the right.", "output": "[\"SELECT['animals']\", \"SELECT['right image']\", \"FILTER['#1', 'that are in #2']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#3']\", \"ARITHMETIC['difference', '#4', '#5']\", \"BOOLEAN['#5', 'is higher than #6']\"]"}
{"id": "NLVR2_dev_dev-857-3-0", "input": "If an image shows a white vanity with shaped feet and a row of shelves between double cabinets under two separate inset sinks.", "output": "[\"SELECT['vanity']\", \"FILTER['#1', 'that is white']\", \"PROJECT['feet of #REF', '#2']\", \"BOOLEAN['#3', 'are shaped']\", \"SELECT['shelves']\", \"PROJECT['row of #REF', '#5']\", \"SELECT['double cabinets']\", \"FILTER['#6', 'between #7']\", \"SELECT['inset sinks']\", \"FILTER['#9', 'that are separate']\", \"BOOLEAN['#8', 'is under #10']\", \"BOOLEAN['logical_and', 'true', '#4', '#11']\"]"}
{"id": "NLVR2_dev_dev-857-3-1", "input": "If in one of the images, the counter space between the two wash basins is empty.", "output": "[\"SELECT['wash basins']\", \"SELECT['counter space']\", \"FILTER['#2', 'between #1']\", \"FILTER['#3', 'that is empty']\", \"BOOLEAN['#4', 'is in one of the images']\"]"}
{"id": "NLVR2_dev_dev-858-0-1", "input": "If a girl in long one piece pajamas is wearing mouse ears on her head in one of the images.", "output": "[\"SELECT['girl']\", \"SELECT['one piece pajamas']\", \"FILTER['#2', 'that are long']\", \"FILTER['#1', 'that is in #3']\", \"SELECT['mouse ears']\", \"PROJECT['head of #REF', '#4']\", \"FILTER['#4', 'that is wearing #5 on #6']\", \"BOOLEAN['#7', 'is in one image']\"]"}
{"id": "NLVR2_dev_dev-858-3-0", "input": "If the girl in one image is wearing pink polka-dotted pants.", "output": "[\"SELECT['girl']\", \"SELECT['pants']\", \"FILTER['#2', 'that are polka-dotted']\", \"FILTER['#3', 'that is pink']\", \"FILTER['#1', 'that is wearing #4']\", \"BOOLEAN['#5', 'is in one image']\"]"}
{"id": "NLVR2_dev_dev-859-1-0", "input": "If one image contains no more than 10 zebra, and the other image includes a mass of zebra too numerous to count, but no other large animals that are clearly visible.", "output": "[\"SELECT['one image']\", \"PROJECT['zebras in #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at most 10']\", \"SELECT['other image']\", \"PROJECT['mass of zebra in #REF', '#5']\", \"BOOLEAN['#6', 'is too numerous to count']\", \"PROJECT['animals in #REF', '#5']\", \"FILTER['#8', 'that are large']\", \"DISCARD['#9', '#6']\", \"AGGREGATE['count', '#10']\", \"BOOLEAN['#11', 'is equal to zero']\", \"BOOLEAN['logical_and', 'true', '#7', '#12']\", \"BOOLEAN['logical_and', 'true', '#4', '#13']\"]"}
{"id": "NLVR2_dev_dev-859-1-1", "input": "If at least one zebra is looking straight at the camera.", "output": "[\"SELECT['zebras']\", \"FILTER['#1', 'looking straight at the camera']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-860-0-0", "input": "If there's a total of 2 animals in both images.", "output": "[\"SELECT['both images']\", \"PROJECT['animals of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-861-0-0", "input": "If the combined images include at least four upright saxophones with bells angled rightward and mouthpieces attached.", "output": "[\"SELECT['images']\", \"PROJECT['saxophones in #REF', '#1']\", \"FILTER['#2', 'that are upright']\", \"PROJECT['bells of #REF', '#3']\", \"COMPARATIVE['#3', '#4', 'are angled rightward']\", \"PROJECT['mouthpieces in #REF', '#1']\", \"FILTER['#5', 'with #6 attached']\", \"GROUP['count', '#7', '#1']\", \"AGGREGATE['sum', '#8']\", \"BOOLEAN['#9', 'is at least four']\"]"}
{"id": "NLVR2_dev_dev-861-2-1", "input": "If a single instrument lies alone in each of the images.", "output": "[\"SELECT['images']\", \"PROJECT['instruments in #REF', '#1']\", \"FILTER['#2', 'that lie alone']\", \"GROUP['count', '#3', '#1']\", \"COMPARATIVE['#1', '#4', 'is equal to one']\", \"AGGREGATE['count', '#5']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#6', 'is equal to #7']\"]"}
{"id": "NLVR2_dev_dev-862-2-0", "input": "If an image shows a boat with unfurled sails and a blue-and-white body moving through the water.", "output": "[\"SELECT['boat']\", \"PROJECT['sails of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'are unfurled']\", \"PROJECT['body of #REF', '#3']\", \"COMPARATIVE['#3', '#4', 'is blue-and-white']\", \"SELECT['the water']\", \"FILTER['#5', 'moving through #6']\", \"BOOLEAN['#7', 'is in an image']\"]"}
{"id": "NLVR2_dev_dev-862-3-1", "input": "If the left and right image contains the same number of sailboats sailing opposite directions.", "output": "[\"SELECT['the left image']\", \"PROJECT['sailboats in #REF', '#1']\", \"PROJECT['direction sailing of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is the opposite']\", \"AGGREGATE['count', '#4']\", \"SELECT['the right image']\", \"PROJECT['sailboats in #REF', '#6']\", \"PROJECT['direction sailing of #REF', '#7']\", \"COMPARATIVE['#7', '#8', 'is the opposite']\", \"AGGREGATE['count', '#9']\", \"BOOLEAN['#5', 'is equal to #10']\"]"}
{"id": "NLVR2_dev_dev-863-2-1", "input": "If each image contains one beetle and one ball, and no beetle has all its legs on the surface of the ball.", "output": "[\"SELECT['beetles']\", \"SELECT['balls']\", \"SELECT['images']\", \"GROUP['count', '#1', '#3']\", \"COMPARATIVE['#3', '#4', 'is equal to one']\", \"GROUP['count', '#2', '#5']\", \"COMPARATIVE['#5', '#6', 'is equal to one']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is equal to #9']\", \"PROJECT['surface of #REF', '#2']\", \"PROJECT['legs of #REF', '#1']\", \"FILTER['#12', 'that are on #11']\", \"GROUP['count', '#12', '#1']\", \"GROUP['count', '#13', '#1']\", \"COMPARATIVE['#1', '#14', 'is equal to #15']\", \"AGGREGATE['count', '#16']\", \"BOOLEAN['#17', 'is equal to zero']\", \"BOOLEAN['logical_and', 'true', '#10', '#18']\"]"}
{"id": "NLVR2_dev_dev-863-3-0", "input": "If there are barely any shadows in any images of the dung beetle.", "output": "[\"SELECT['dung beetle']\", \"PROJECT['images of #REF', '#1']\", \"PROJECT['shadows in #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to zero']\"]"}
{"id": "NLVR2_dev_dev-864-3-1", "input": "If one image shows a closed white pencil case with an illustrated front overlapping an open spiral sketchbook.", "output": "[\"SELECT['pencil case']\", \"FILTER['#1', 'that is closed']\", \"FILTER['#2', 'that is white']\", \"PROJECT['front of #REF', '#3']\", \"COMPARATIVE['#3', '#4', 'is illustrated']\", \"SELECT['spiral sketchbook']\", \"FILTER['#6', 'that is open']\", \"FILTER['#5', 'overlapping #7']\", \"BOOLEAN['#8', 'is in one image']\"]"}
{"id": "NLVR2_dev_dev-865-0-0", "input": "If the left image features an empty wooden four-wheeled cart with bigger wheels on the right and smaller wheels on the left.", "output": "[\"SELECT['cart']\", \"FILTER['#1', 'that is empty']\", \"FILTER['#2', 'that is wooden']\", \"FILTER['#3', 'that is four-wheeled']\", \"PROJECT['wheels of #REF', '#4']\", \"FILTER['#5', 'on the right']\", \"FILTER['#5', 'on the left']\", \"PROJECT['size of #REF', '#6']\", \"PROJECT['size of #REF', '#7']\", \"COMPARATIVE['#4', '#8', 'is higher than #9']\", \"BOOLEAN['#10', 'is in the left image']\"]"}
{"id": "NLVR2_dev_dev-865-3-1", "input": "If both carts have four wheels.", "output": "[\"SELECT['carts']\", \"PROJECT['wheels of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is equal to four']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-866-3-0", "input": "If there are more containers of lipstick in the image on the left.", "output": "[\"SELECT['containers of lipstick']\", \"SELECT['left image']\", \"FILTER['#1', 'that are in #2']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#3']\", \"ARITHMETIC['difference', '#4', '#5']\", \"BOOLEAN['#5', 'is higher than #6']\"]"}
{"id": "NLVR2_dev_dev-866-3-1", "input": "If there is one uncovered lipstick in the right image.", "output": "[\"SELECT['the right image']\", \"PROJECT['lipsticks in #REF', '#1']\", \"FILTER['#2', 'that are uncovered']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-867-3-1", "input": "If the single dessert in the image on the right is being served in a glass container with a pedestal foot.", "output": "[\"SELECT['the image on the right']\", \"PROJECT['dessert in #REF', '#1']\", \"PROJECT['container in #REF', '#1']\", \"FILTER['#3', 'that is glass']\", \"FILTER['#4', 'with a pedestal foot']\", \"BOOLEAN['#2', 'is being served in #5']\"]"}
{"id": "NLVR2_dev_dev-868-0-1", "input": "If there are exactly two vases in the image pair.", "output": "[\"SELECT['image pair']\", \"PROJECT['vases of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-869-2-0", "input": "If one image shows one reclining hound, and a striped bird is standing face-to-face with it.", "output": "[\"SELECT['hounds']\", \"FILTER['#1', 'that is reclining']\", \"SELECT['birds']\", \"FILTER['#3', 'that is striped']\", \"FILTER['#2', 'that is standing face-to-face with #4']\", \"BOOLEAN['#5', 'is in one image']\"]"}
{"id": "NLVR2_dev_dev-869-3-1", "input": "If a bird is standing by a dog in the image on the right.", "output": "[\"SELECT['right image']\", \"PROJECT['bird in #REF', '#1']\", \"PROJECT['dog in #REF', '#1']\", \"FILTER['#2', 'that is standing by #3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-87-0-1", "input": "If there are 3 seals in the image pair", "output": "[\"SELECT['images']\", \"PROJECT['seals in #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to 3']\"]"}
{"id": "NLVR2_dev_dev-870-3-0", "input": "If at german shepherd dog is on a couch with a woman who is holding a box.", "output": "[\"SELECT['german shepherd dog']\", \"SELECT['couch']\", \"SELECT['woman']\", \"SELECT['box']\", \"FILTER['#3', 'that is holding #4']\", \"FILTER['#1', 'that is on #2']\", \"FILTER['#6', 'that is with #5']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-870-3-1", "input": "If a large brown dog is on the couch next to a blonde haired woman wearing pajamas.", "output": "[\"SELECT['dog']\", \"FILTER['#1', 'that is brown']\", \"FILTER['#2', 'that is large']\", \"SELECT['couch']\", \"FILTER['#3', 'that is on #4']\", \"SELECT['woman']\", \"FILTER['#6', 'that is blonde haired']\", \"SELECT['pajamas']\", \"FILTER['#7', 'wearing #8']\", \"BOOLEAN['#5', 'is next to #9']\"]"}
{"id": "NLVR2_dev_dev-871-0-0", "input": "If one sliding door is closed.", "output": "[\"SELECT['sliding doors']\", \"FILTER['#1', 'that are closed']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-871-2-1", "input": "If an image shows an open 'barn door' that slides on a black bar held by a u shape, and the door is weathered wood with at least one diagonal board.", "output": "[\"SELECT['barn door']\", \"FILTER['#1', 'that is open']\", \"SELECT['black bar']\", \"SELECT['u shape']\", \"FILTER['#3', 'held by #4']\", \"BOOLEAN['#2', 'slides on #5']\", \"SELECT['wood']\", \"FILTER['#7', 'that is weathered']\", \"FILTER['#1', 'that is #8']\", \"PROJECT['boards of #REF', '#9']\", \"FILTER['#10', 'that are diagonal']\", \"AGGREGATE['count', '#11']\", \"BOOLEAN['#12', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#6', '#13']\"]"}
{"id": "NLVR2_dev_dev-87-2-0", "input": "If we have here, two seals.", "output": "[\"SELECT['seals']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-872-0-0", "input": "If there are two goats standing on all fours.", "output": "[\"SELECT['goats']\", \"FILTER['#1', 'that are standing on all fours']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-872-1-1", "input": "If the right image features a long horned animal with its hind legs on the ground, one front paw extended forward, and its head and horns lowered.", "output": "[\"SELECT['animal']\", \"FILTER['#1', 'that is long horned']\", \"PROJECT['hind legs of #REF', '#2']\", \"SELECT['the ground']\", \"COMPARATIVE['#2', '#3', 'are on #4']\", \"PROJECT['front paw of #REF', '#5']\", \"COMPARATIVE['#5', '#6', 'is extended forward']\", \"PROJECT['head of #REF', '#7']\", \"PROJECT['horns of #REF', '#7']\", \"COMPARATIVE['#7', '#8', 'is lowered']\", \"COMPARATIVE['#7', '#9', 'are lowered']\", \"INTERSECTION['#7', '#10', '#11']\", \"BOOLEAN['#12', 'is in the right image']\"]"}
{"id": "NLVR2_dev_dev-873-1-1", "input": "If one image includes a dark-colored bird on a water buffalo's back.", "output": "[\"SELECT['bird']\", \"FILTER['#1', 'that is dark-colored']\", \"SELECT['water buffalo']\", \"PROJECT['back of #REF', '#3']\", \"FILTER['#2', 'on #4']\", \"BOOLEAN['#5', 'is in one image']\"]"}
{"id": "NLVR2_dev_dev-873-3-0", "input": "If an image features one water buffalo with at least one rightward-facing waterbird standing atop it.", "output": "[\"SELECT['water buffalo']\", \"SELECT['waterbirds']\", \"FILTER['#2', 'that are rightward-facing']\", \"FILTER['#3', 'that are standing atop #1']\", \"GROUP['count', '#4', '#1']\", \"COMPARATIVE['#1', '#5', 'is at least one']\", \"PROJECT['images of #REF', '#6']\", \"GROUP['count', '#6', '#7']\", \"COMPARATIVE['#7', '#8', 'is equal to one']\", \"AGGREGATE['count', '#9']\", \"BOOLEAN['#10', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-874-0-1", "input": "If the boat in the left image contains exactly three females.", "output": "[\"SELECT['left image']\", \"PROJECT['boat in #REF', '#1']\", \"PROJECT['females in #REF', '#1']\", \"FILTER['#3', 'that are in #2']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to three']\"]"}
{"id": "NLVR2_dev_dev-874-2-0", "input": "If the left and right image contains a total of six people and two boats.", "output": "[\"SELECT['left image']\", \"SELECT['right image']\", \"PROJECT['people of #REF', '#1']\", \"PROJECT['people of #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['sum', '#5', '#6']\", \"BOOLEAN['#7', 'is equal to six']\", \"PROJECT['boats of #REF', '#1']\", \"PROJECT['boats of #REF', '#2']\", \"AGGREGATE['count', '#9']\", \"AGGREGATE['count', '#10']\", \"ARITHMETIC['sum', '#11', '#12']\", \"BOOLEAN['#13', 'is equal to two']\", \"BOOLEAN['logical_and', 'true', '#8', '#14']\"]"}
{"id": "NLVR2_dev_dev-875-1-0", "input": "If the left image contains no more than one sea lion.", "output": "[\"SELECT['left image']\", \"PROJECT['sea lion of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at most one']\"]"}
{"id": "NLVR2_dev_dev-875-3-1", "input": "If the left image contains no more than two seals, and the right image shows at least seven seals in various poses on a gray rock slope.", "output": "[\"SELECT['left image']\", \"PROJECT['seals of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at most two']\", \"SELECT['right image']\", \"PROJECT['seals of #REF', '#5']\", \"FILTER['#6', 'in various poses']\", \"SELECT['slope']\", \"FILTER['#8', 'that is rock']\", \"FILTER['#9', 'that is gray']\", \"FILTER['#7', 'on #10']\", \"AGGREGATE['count', '#11']\", \"BOOLEAN['#12', 'is at least seven']\", \"BOOLEAN['logical_and', 'true', '#4', '#13']\"]"}
{"id": "NLVR2_dev_dev-876-1-0", "input": "If the left and right image contains the same number of mittens with at least one set purple.", "output": "[\"SELECT['mittens']\", \"SELECT['left image']\", \"SELECT['right image']\", \"FILTER['#1', 'that is in #2']\", \"FILTER['#1', 'that is in #3']\", \"AGGREGATE['count', '#4']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to #7']\", \"FILTER['#1', 'that are purple']\", \"BOOLEAN['#9', 'is at least two']\", \"BOOLEAN['logical_and', 'true', '#8', '#10']\"]"}
{"id": "NLVR2_dev_dev-876-3-1", "input": "If in one image a pair of mitten thumbs are pointed the same way, but are in opposing directions in the second image.", "output": "[\"SELECT['one image']\", \"PROJECT['pair of mitten thumbs in #REF', '#1']\", \"PROJECT['directions pointed in of #REF', '#2']\", \"BOOLEAN['#3', 'are the same']\", \"SELECT['the second image']\", \"PROJECT['pair of mitten thumbs in #REF', '#5']\", \"PROJECT['directions pointed in of #REF', '#6']\", \"BOOLEAN['#7', 'are opposing']\", \"BOOLEAN['logical_and', 'true', '#4', '#8']\"]"}
{"id": "NLVR2_dev_dev-877-3-0", "input": "If in one image the car's top is up", "output": "[\"SELECT['car']\", \"PROJECT['top of #REF', '#1']\", \"FILTER['#2', 'that is up']\", \"FILTER['#1', 'that has #3']\", \"BOOLEAN['#4', 'is in one image']\"]"}
{"id": "NLVR2_dev_dev-877-3-1", "input": "If convertible mustangs are parked in a lot with out lines in the image pair", "output": "[\"SELECT['mustangs']\", \"FILTER['#1', 'that are convertible']\", \"SELECT['lot']\", \"FILTER['#3', 'with out lines']\", \"FILTER['#2', 'parked in #4']\", \"BOOLEAN['#5', 'are in the image pair']\"]"}
{"id": "NLVR2_dev_dev-878-1-1", "input": "If the left and right image contains a total of two rams.", "output": "[\"SELECT['left image']\", \"SELECT['right images']\", \"PROJECT['rams of #REF', '#1']\", \"PROJECT['rams of #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['sum', '#5', '#6']\", \"BOOLEAN['#7', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-878-2-0", "input": "If all horned animals shown are facing the same direction.", "output": "[\"SELECT['animals']\", \"FILTER['#1', 'that are horned']\", \"PROJECT['direction facing of #REF', '#2']\", \"BOOLEAN['#3', 'are all the same']\"]"}
{"id": "NLVR2_dev_dev-879-1-0", "input": "If a fork is next to an oval white plate containing broccoli florets and other ingredients in the left image.", "output": "[\"SELECT['fork']\", \"SELECT['plate']\", \"FILTER['#2', 'that is an oval']\", \"FILTER['#3', 'that is white']\", \"SELECT['broccoli florets']\", \"FILTER['#4', 'containing #5']\", \"SELECT['ingredients']\", \"DISCARD['#7', '#5']\", \"FILTER['#4', 'containing #8']\", \"INTERSECTION['#4', '#6', '#9']\", \"FILTER['#1', 'next to']\", \"BOOLEAN['#11', 'is in the left image']\"]"}
{"id": "NLVR2_dev_dev-879-1-1", "input": "If the food in each of the images is sitting in a dish.", "output": "[\"SELECT['food']\", \"SELECT['dish']\", \"FILTER['#1', 'sitting in #2']\", \"SELECT['images']\", \"PROJECT['images of #REF', '#3']\", \"AGGREGATE['count', '#4']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to #7']\"]"}
{"id": "NLVR2_dev_dev-880-0-0", "input": "If a person is interacting with a guinea pig.", "output": "[\"SELECT['person']\", \"SELECT['guinea pigs']\", \"FILTER['#1', 'that is interacting with #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-880-2-1", "input": "If there is a guinea pig receiving attention from a human.", "output": "[\"SELECT['guinea pig']\", \"SELECT['human']\", \"FILTER['#1', 'that is receiving attention from #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-881-2-0", "input": "If the left image contains two dogs.", "output": "[\"SELECT['left image']\", \"PROJECT['dogs of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-881-3-1", "input": "If the left image contains twice as many dogs as the right image.", "output": "[\"SELECT['left image']\", \"SELECT['right image']\", \"PROJECT['dogs in #REF', '#1']\", \"PROJECT['dogs in #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['division', '#5', '#6']\", \"BOOLEAN['#7', 'is at least two']\"]"}
{"id": "NLVR2_dev_dev-88-2-0", "input": "If at least one animal is brown.", "output": "[\"SELECT['animals']\", \"FILTER['#1', 'that are brown']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-882-0-0", "input": "If all dogs are photographed outside with their mouths open and at least one dog is actively moving.", "output": "[\"SELECT['dogs']\", \"FILTER['#1', 'that are photographed outside']\", \"PROJECT['mouths of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'are open']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to #6']\", \"FILTER['#4', 'that is actively moving']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#7', '#10']\"]"}
{"id": "NLVR2_dev_dev-882-1-1", "input": "If the dog on the right is running forward on dirt with long orange-blond hair flying and mouth open.", "output": "[\"SELECT['dogs']\", \"FILTER['#1', 'that is on the right']\", \"FILTER['#2', 'that is running forward']\", \"SELECT['dirt']\", \"FILTER['#3', 'that is on #4']\", \"PROJECT['hair of #REF', '#5']\", \"COMPARATIVE['#5', '#6', 'is orange-blond']\", \"COMPARATIVE['#7', '#6', 'is long']\", \"COMPARATIVE['#8', '#6', 'is flying']\", \"PROJECT['mouth of #REF', '#9']\", \"BOOLEAN['#10', 'is open']\"]"}
{"id": "NLVR2_dev_dev-883-3-0", "input": "If a framed painting can be seen hanging on the wall in one of the images.", "output": "[\"SELECT['painting']\", \"FILTER['#1', 'that is framed']\", \"SELECT['the wall']\", \"FILTER['#2', 'hanging on #3']\", \"BOOLEAN['#4', 'is in one of the images']\"]"}
{"id": "NLVR2_dev_dev-884-0-0", "input": "If there are at least six pillows in total.", "output": "[\"SELECT['pillows']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is at least six']\"]"}
{"id": "NLVR2_dev_dev-884-0-1", "input": "If in at least one image there is a clear blown up water pillow with one circle in the middle.", "output": "[\"SELECT['water pillow']\", \"FILTER['#1', 'that is blown up']\", \"FILTER['#2', 'that is clear']\", \"PROJECT['middle of #REF', '#3']\", \"FILTER['#3', 'that has circle in #4']\", \"BOOLEAN['#5', 'is in at least one image']\"]"}
{"id": "NLVR2_dev_dev-885-1-0", "input": "If the left image shows a human hand being stuck in front of a dog's face", "output": "[\"SELECT['left image']\", \"PROJECT['human hand in #REF', '#1']\", \"PROJECT['dog in #REF', '#1']\", \"PROJECT['face of #REF', '#3']\", \"FILTER['#2', 'that is being stuck in front of #4']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-885-2-1", "input": "If an image shows at least one standing human leg next to a dog in an outdoor setting.", "output": "[\"SELECT['human legs']\", \"FILTER['#1', 'that are standing']\", \"SELECT['dog']\", \"FILTER['#2', 'next to #3']\", \"FILTER['#4', 'in an outdoor setting']\", \"PROJECT['images of #REF', '#5']\", \"GROUP['count', '#5', '#6']\", \"COMPARATIVE['#6', '#7', 'is at least one']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-886-1-0", "input": "If in the right image, a gooseneck floor lamp curves over a round table.", "output": "[\"SELECT['floor lamp']\", \"FILTER['#1', 'that is gooseneck']\", \"SELECT['table']\", \"FILTER['#3', 'that is round']\", \"FILTER['#2', 'that curves over #4']\", \"BOOLEAN['#5', 'is in the right image']\"]"}
{"id": "NLVR2_dev_dev-886-2-1", "input": "If the lamp in the image on the right is hanging over the furniture.", "output": "[\"SELECT['right image']\", \"PROJECT['lamp of #REF', '#1']\", \"PROJECT['furniture of #REF', '#1']\", \"BOOLEAN['#2', 'is hanging over #3']\"]"}
{"id": "NLVR2_dev_dev-887-0-1", "input": "If the left and right image contains four bananas.", "output": "[\"SELECT['the left image']\", \"SELECT['the right image']\", \"PROJECT['bananas in #REF', '#1']\", \"PROJECT['bananas in #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['sum', '#5', '#6']\", \"BOOLEAN['#7', 'is equal to four']\"]"}
{"id": "NLVR2_dev_dev-888-2-1", "input": "If a white and brown dog is standing in fallen leaves.", "output": "[\"SELECT['dog']\", \"FILTER['#1', 'that is white and brown']\", \"SELECT['leaves']\", \"FILTER['#3', 'that have fallen']\", \"BOOLEAN['#2', 'is standing in #4']\"]"}
{"id": "NLVR2_dev_dev-888-3-0", "input": "If in one of the images in each pair a dog is standing on fallen maple leaves.", "output": "[\"SELECT['dog']\", \"SELECT['maple leaves']\", \"FILTER['#2', 'that have fallen']\", \"FILTER['#1', 'standing on #3']\", \"BOOLEAN['#4', 'is in one of the images in each pair']\"]"}
{"id": "NLVR2_dev_dev-889-0-1", "input": "If one image shows a herd of at least 20 llamas led by multiple camera-facing white llamas, with mountain peaks behind them.", "output": "[\"SELECT['llamas']\", \"FILTER['#1', 'that are white']\", \"FILTER['#2', 'that are camera-facing']\", \"FILTER['#1', 'led by multiple #3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least 20']\", \"SELECT['mountain peaks']\", \"BOOLEAN['#7', 'are behind #1']\", \"BOOLEAN['logical_and', 'true', '#6', '#8']\"]"}
{"id": "NLVR2_dev_dev-889-1-0", "input": "If there are people and llamas in the left image.", "output": "[\"SELECT['people']\", \"SELECT['llamas']\", \"BOOLEAN['#1', 'are in left image']\", \"BOOLEAN['#2', 'are in left image']\", \"BOOLEAN['logical_and', 'true', '#3', '#4']\"]"}
{"id": "NLVR2_dev_dev-890-1-0", "input": "If the right image includes at least one man riding bareback on a horned animal on a dirt track flanked by spectators.", "output": "[\"SELECT['the right image']\", \"PROJECT['men in #REF', '#1']\", \"PROJECT['animals in #REF', '#1']\", \"FILTER['#3', 'that are horned']\", \"FILTER['#2', 'riding bareback on #4']\", \"PROJECT['dirt track in #REF', '#1']\", \"FILTER['#5', 'on #6']\", \"PROJECT['spectators in #REF', '#1']\", \"FILTER['#7', 'flanked by #8']\", \"AGGREGATE['count', '#9']\", \"BOOLEAN['#10', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-89-1-0", "input": "If an image shows exactly one stemmed glass of red wine with a sunset in the background.", "output": "[\"SELECT['glasses of red wine']\", \"FILTER['#1', 'that are stemmed']\", \"SELECT['sunset']\", \"FILTER['#3', 'in the background']\", \"FILTER['#2', 'with #4']\", \"PROJECT['images of #REF', '#5']\", \"GROUP['count', '#5', '#6']\", \"COMPARATIVE['#6', '#7', 'is equal to one']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-891-2-0", "input": "If in one image, a mountain dog is standing with its body pointed towards the right.", "output": "[\"SELECT['mountain dog']\", \"FILTER['#1', 'that is standing']\", \"PROJECT['body of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is pointed towards the right']\", \"BOOLEAN['#4', 'is in one image']\"]"}
{"id": "NLVR2_dev_dev-891-3-1", "input": "If there is at most 1 adult dog facing left.", "output": "[\"SELECT['dogs']\", \"FILTER['#1', 'that are adults']\", \"FILTER['#2', 'that are facing left']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at most one']\"]"}
{"id": "NLVR2_dev_dev-89-2-1", "input": "If a bottle of wine is near at least one glass of red wine in one of the images.", "output": "[\"SELECT['bottle of wine']\", \"SELECT['glass']\", \"SELECT['wine']\", \"FILTER['#3', 'that is red']\", \"FILTER['#2', 'with #4']\", \"FILTER['#1', 'near #5']\", \"BOOLEAN['#6', 'is in one of the images']\"]"}
{"id": "NLVR2_dev_dev-892-1-0", "input": "If the left and right images show similar canoe designs, and at least one image shows multiple canoes side-by-side.", "output": "[\"SELECT['the left image']\", \"SELECT['the right image']\", \"PROJECT['canoes in #REF', '#1']\", \"PROJECT['canoes in #REF', '#2']\", \"PROJECT['designs of #REF', '#3']\", \"PROJECT['designs of #REF', '#4']\", \"BOOLEAN['#5', 'are similar to #6']\", \"SELECT['images']\", \"PROJECT['canoes in #REF', '#8']\", \"FILTER['#9', 'that are side-by-side']\", \"GROUP['count', '#10', '#8']\", \"COMPARATIVE['#8', '#11', 'is at least two']\", \"AGGREGATE['count', '#12']\", \"BOOLEAN['#13', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#7', '#14']\"]"}
{"id": "NLVR2_dev_dev-892-1-1", "input": "If the left and right image contains a total of two wooden boats.", "output": "[\"SELECT['left image']\", \"PROJECT['boats in #REF', '#1']\", \"FILTER['#2', 'that are wooden']\", \"AGGREGATE['count', '#3']\", \"SELECT['right image']\", \"PROJECT['boats in #REF', '#5']\", \"FILTER['#6', 'that are wooden']\", \"AGGREGATE['count', '#7']\", \"ARITHMETIC['sum', '#4', '#8']\", \"BOOLEAN['#9', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-893-1-1", "input": "If an image shows a forward facing model in a pastel wrap with at least one hand gripping a matching towel around her neck.", "output": "[\"SELECT['model']\", \"FILTER['#1', 'that is forward facing']\", \"SELECT['pastel wrap']\", \"FILTER['#2', 'in #3']\", \"PROJECT['hands of #REF', '#4']\", \"SELECT['towel']\", \"FILTER['#6', 'that is matching #3']\", \"PROJECT['neck of #REF', '#4']\", \"FILTER['#7', 'that is around #8']\", \"FILTER['#5', 'that are gripping #9']\", \"GROUP['count', '#10', '#4']\", \"COMPARATIVE['#4', '#11', 'is at least one']\", \"BOOLEAN['#12', 'is in an image']\"]"}
{"id": "NLVR2_dev_dev-893-2-0", "input": "If in each image, a woman is drying her face with a towel.", "output": "[\"SELECT['woman']\", \"PROJECT['face of #REF', '#1']\", \"SELECT['a towel']\", \"FILTER['#1', 'drying #2']\", \"FILTER['#4', 'with #3']\", \"PROJECT['images of #REF', '#5']\", \"AGGREGATE['count', '#6']\", \"SELECT['images']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#7', 'is equal to #9']\"]"}
{"id": "NLVR2_dev_dev-894-2-0", "input": "If the left and right image contains a total of three legs and two knee braces.", "output": "[\"SELECT['left image']\", \"SELECT['right image']\", \"PROJECT['legs of #REF', '#1']\", \"PROJECT['legs of #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['sum', '#5', '#6']\", \"BOOLEAN['#7', 'is equal to three']\", \"PROJECT['knee braces of #REF', '#1']\", \"PROJECT['knee braces of #REF', '#2']\", \"AGGREGATE['count', '#9']\", \"AGGREGATE['count', '#10']\", \"ARITHMETIC['sum', '#11', '#12']\", \"BOOLEAN['#13', 'is equal to two']\", \"BOOLEAN['logical_and', 'true', '#8', '#13']\"]"}
{"id": "NLVR2_dev_dev-894-3-1", "input": "If one image shows one leg, which wears a black knee brace, and the other image shows a pair of legs, but only one wears a black knee brace.", "output": "[\"SELECT['one image']\", \"PROJECT['legs in #REF', '#1']\", \"PROJECT['knee braces in #REF', '#1']\", \"FILTER['#3', 'that are black']\", \"FILTER['#2', 'that wear #4']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to one']\", \"BOOLEAN['#7', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#8', '#9']\", \"SELECT['the other image']\", \"PROJECT['legs in #REF', '#11']\", \"PROJECT['knee braces in #REF', '#11']\", \"FILTER['#13', 'that are black']\", \"FILTER['#12', 'that wear #14']\", \"AGGREGATE['count', '#12']\", \"AGGREGATE['count', '#15']\", \"BOOLEAN['#16', 'is equal to two']\", \"BOOLEAN['#17', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#18', '#19']\", \"BOOLEAN['logical_and', 'true', '#10', '#20']\"]"}
{"id": "NLVR2_dev_dev-895-0-0", "input": "If the left image contains exactly two pandas.", "output": "[\"SELECT['left image']\", \"PROJECT['pandas of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-895-0-1", "input": "If an image shows multiple people in protective sky-blue garments holding pandas on their laps", "output": "[\"SELECT['people']\", \"PROJECT['protective garments of #REF', '#1']\", \"FILTER['#2', 'that are sky-blue']\", \"FILTER['#1', 'that has #3']\", \"SELECT['pandas']\", \"PROJECT['laps of #REF', '#4']\", \"FILTER['#5', 'that are on #6']\", \"FILTER['#4', 'that has #7']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is at least two']\"]"}
{"id": "NLVR2_dev_dev-896-3-0", "input": "If in at least one image there are five bottles of beer.", "output": "[\"SELECT['beer']\", \"PROJECT['bottles of #REF', '#1']\", \"SELECT['images']\", \"GROUP['count', '#2', '#3']\", \"COMPARATIVE['#3', '#4', 'is equal to five']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-897-3-0", "input": "If one image shows a bottle next to a white cylinder but not overlapping it, and the other image shows a single upright bottle.", "output": "[\"SELECT['one image']\", \"PROJECT['bottle in #REF', '#1']\", \"PROJECT['cylinder in #REF', '#1']\", \"FILTER['#3', 'that is white']\", \"FILTER['#2', 'that is next to #4']\", \"BOOLEAN['#5', 'is not overlapping #4']\", \"SELECT['the other image']\", \"PROJECT['bottles in #REF', '#7']\", \"FILTER['#8', 'that are upright']\", \"AGGREGATE['count', '#9']\", \"BOOLEAN['#10', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#6', '#11']\"]"}
{"id": "NLVR2_dev_dev-897-3-1", "input": "If the perfume on the right is next to its box.", "output": "[\"SELECT['perfume']\", \"FILTER['#1', 'on the right']\", \"PROJECT['box of #REF', '#2']\", \"BOOLEAN['#2', 'is next to #3']\"]"}
{"id": "NLVR2_dev_dev-898-0-0", "input": "If an image features a bluish vase with orange flowers in it, standing in front of an open window.", "output": "[\"SELECT['vase']\", \"FILTER['#1', 'that is bluish']\", \"SELECT['flowers']\", \"FILTER['#3', 'that are orange']\", \"FILTER['#2', 'with #4 in it']\", \"SELECT['window']\", \"FILTER['#6', 'that is open']\", \"FILTER['#5', 'standing in front of #7']\", \"BOOLEAN['#8', 'is in an image']\"]"}
{"id": "NLVR2_dev_dev-899-1-1", "input": "If the left image contains a dog that is standing up and turned forward, and the right image features a dog wearing a blue collar with its head and gaze raised.", "output": "[\"SELECT['left image']\", \"PROJECT['dog in #REF', '#1']\", \"FILTER['#2', 'that is standing up']\", \"FILTER['#3', 'that is turned forward']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least one']\", \"SELECT['right image']\", \"PROJECT['dog in #REF', '#7']\", \"PROJECT['collar of #REF', '#8']\", \"COMPARATIVE['#8', '#9', 'is blue']\", \"PROJECT['head of #REF', '#10']\", \"COMPARATIVE['#10', '#11', 'is raised']\", \"PROJECT['gaze of #REF', '#12']\", \"COMPARATIVE['#12', '#13', 'is raised']\", \"AGGREGATE['count', '#14']\", \"BOOLEAN['#15', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#6', '#16']\"]"}
{"id": "NLVR2_dev_dev-899-3-0", "input": "If one of the dogs' collars is bright blue.", "output": "[\"SELECT['dog']\", \"PROJECT['collar of #REF', '#1']\", \"FILTER['#2', 'that is bright blue']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-90-0-0", "input": "If there is a wooden desk with a laptop and an office chair on wheels", "output": "[\"SELECT['desk']\", \"FILTER['#1', 'that is wooden']\", \"SELECT['laptop']\", \"FILTER['#2', 'with #3']\", \"SELECT['office chair']\", \"FILTER['#5', 'on wheels']\", \"BOOLEAN['#4', 'has #6']\"]"}
{"id": "NLVR2_dev_dev-900-0-1", "input": "If there are 2 pairs of mittens shown.", "output": "[\"SELECT['mittens']\", \"PROJECT['pairs of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-900-1-0", "input": "If a mitten is being worn in one image and the mittens are not being worn in the other image.", "output": "[\"SELECT['one image']\", \"PROJECT['mitten in #REF', '#1']\", \"FILTER['#2', 'that is being worn']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least one']\", \"SELECT['other image']\", \"PROJECT['mittens in #REF', '#6']\", \"FILTER['#7', 'that are being worn']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is equal to zero']\", \"BOOLEAN['logical_and', 'true', '#5', '#10']\"]"}
{"id": "NLVR2_dev_dev-90-1-1", "input": "If an image shows a laptop on a pull-out tray of a desk surrounded by shelves, with a chair on wheels next to it.", "output": "[\"SELECT['laptop']\", \"SELECT['desk']\", \"SELECT['shelves']\", \"FILTER['#2', 'surrounded by #3']\", \"PROJECT['pull-out tray of #REF', '#4']\", \"FILTER['#1', 'on #5']\", \"SELECT['chair']\", \"FILTER['#7', 'on wheels']\", \"FILTER['#8', 'next to #6']\", \"FILTER['#6', 'with #9']\", \"BOOLEAN['#10', 'is in an image']\"]"}
{"id": "NLVR2_dev_dev-902-1-0", "input": "If in at least one image there is a single round horned ox laying in the water facing right foward.", "output": "[\"SELECT['ox']\", \"FILTER['#1', 'that is round horned']\", \"FILTER['#2', 'that is single']\", \"SELECT['water']\", \"FILTER['#3', 'laying in #4']\", \"FILTER['#5', 'that is facing right foward']\", \"PROJECT['images of #REF', '#6']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-903-2-1", "input": "If at least one of the dogs has a small toy in front of him.", "output": "[\"SELECT['dogs']\", \"SELECT['toys']\", \"FILTER['#2', 'that is small']\", \"FILTER['#1', 'that has #3 in front of']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-904-1-1", "input": "If the right image has a boat with 3 sails  open", "output": "[\"SELECT['right image']\", \"PROJECT['boat in #REF', '#1']\", \"PROJECT['sails of #REF', '#2']\", \"FILTER['#3', 'that are open']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to 3']\"]"}
{"id": "NLVR2_dev_dev-904-2-0", "input": "If both boats are heading to the right.", "output": "[\"SELECT['boats']\", \"FILTER['#1', 'that are heading to the right']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-905-3-0", "input": "If the right image has no more than one golf ball.", "output": "[\"SELECT['right image']\", \"PROJECT['golf balls in #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at most one']\"]"}
{"id": "NLVR2_dev_dev-905-3-1", "input": "If a putter is next to a single ball in one of the images.", "output": "[\"SELECT['putter']\", \"SELECT['ball']\", \"FILTER['#2', 'that #1 is next to']\", \"SELECT['images']\", \"GROUP['count', '#3', '#4']\", \"COMPARATIVE['#4', '#5', 'is equal to one']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-906-2-0", "input": "If one of the bowls is white, and one of the substances does not have any green seasoning.", "output": "[\"SELECT['bowls']\", \"FILTER['#1', 'that are white']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to one']\", \"SELECT['substances']\", \"SELECT['seasoning']\", \"FILTER['#6', 'that is green']\", \"FILTER['#5', 'with #7']\", \"DISCARD['#5', '#8']\", \"AGGREGATE['count', '#9']\", \"BOOLEAN['#10', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#4', '#11']\"]"}
{"id": "NLVR2_dev_dev-906-3-1", "input": "If each image shows a creamy mashed food mixed with chopped green bits and served in a round bowl.", "output": "[\"SELECT['food']\", \"FILTER['#1', 'that is creamy']\", \"FILTER['#2', 'that is mashed']\", \"SELECT['green bits']\", \"FILTER['#4', 'that are chopped']\", \"FILTER['#3', 'mixed with #5']\", \"SELECT['bowl']\", \"FILTER['#7', 'that is round']\", \"FILTER['#6', 'served in #8']\", \"PROJECT['images of #REF', '#9']\", \"SELECT['images']\", \"AGGREGATE['count', '#10']\", \"AGGREGATE['count', '#11']\", \"BOOLEAN['#12', 'is equal to #13']\"]"}
{"id": "NLVR2_dev_dev-907-0-1", "input": "If at least one dog is creating a splash of water and at least two dogs have a front paw lifted off the ground.", "output": "[\"SELECT['dogs']\", \"SELECT['splash of water']\", \"FILTER['#1', 'creating #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least one']\", \"PROJECT['front paw of #REF', '#1']\", \"SELECT['the ground']\", \"COMPARATIVE['#1', '#6', 'is lifted off #7']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is at least two']\", \"BOOLEAN['logical_and', 'true', '#5', '#10']\"]"}
{"id": "NLVR2_dev_dev-907-1-0", "input": "If a dog has both front paws off the ground.", "output": "[\"SELECT['dog']\", \"PROJECT['front paws of #REF', '#1']\", \"SELECT['ground']\", \"FILTER['#2', 'that are off #3']\", \"GROUP['count', '#4', '#1']\", \"COMPARATIVE['#1', '#5', 'is equal to two']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-908-3-0", "input": "If there are two circle pizza.", "output": "[\"SELECT['pizzas']\", \"FILTER['#1', 'that are circle']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-908-3-1", "input": "If one pizza contains pepperoni.", "output": "[\"SELECT['pizza']\", \"SELECT['pepperoni']\", \"FILTER['#1', 'that contains #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-909-0-0", "input": "If in one image, there is a wine glass to the left of a wine bottle.", "output": "[\"SELECT['wine glass']\", \"SELECT['wine bottle']\", \"FILTER['#1', 'that is to the left of #2']\", \"BOOLEAN['#3', 'is in one image']\"]"}
{"id": "NLVR2_dev_dev-909-2-1", "input": "If in at least one image there is a bottle of wine and a glass with red wine in it.", "output": "[\"SELECT['bottle of wine']\", \"SELECT['glass']\", \"SELECT['red wine']\", \"FILTER['#2', 'with #3 in it']\", \"PROJECT['images of #REF', '#1']\", \"PROJECT['images of #REF', '#4']\", \"SELECT['images']\", \"INTERSECTION['#7', '#5', '#6']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-9-1-0", "input": "If one image shows a single open-mouthed pup, and the other shows at least one blue-eyed dog with upright ears.", "output": "[\"SELECT['one image']\", \"PROJECT['pup in #REF', '#1']\", \"FILTER['#2', 'that is open-mouthed']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to one']\", \"SELECT['other image']\", \"PROJECT['dog in #REF', '#6']\", \"FILTER['#7', 'that is blue-eyed']\", \"FILTER['#8', 'that is with upright ears']\", \"AGGREGATE['count', '#9']\", \"BOOLEAN['#10', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#5', '#11']\"]"}
{"id": "NLVR2_dev_dev-910-1-0", "input": "If there is a little boy touching a marmot head to head", "output": "[\"SELECT['boy']\", \"FILTER['#1', 'that is little']\", \"SELECT['marmot']\", \"FILTER['#2', 'that is touching #3']\", \"FILTER['#4', 'that is head to head']\"]"}
{"id": "NLVR2_dev_dev-910-2-1", "input": "If there is exactly one boy and one marmot in the right image.", "output": "[\"SELECT['the right image']\", \"PROJECT['boys in #REF', '#1']\", \"PROJECT['marmots in #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to one']\", \"BOOLEAN['#5', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#6', '#7']\"]"}
{"id": "NLVR2_dev_dev-91-1-0", "input": "If there is one dog standing in the grass and one dog sitting on carpet.", "output": "[\"SELECT['dogs']\", \"SELECT['grass']\", \"SELECT['carpet']\", \"FILTER['#1', 'that is sitting in #2']\", \"FILTER['#1', 'that is sitting on #3']\", \"AGGREGATE['count', '#4']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to one']\", \"BOOLEAN['#7', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#8', '#9']\"]"}
{"id": "NLVR2_dev_dev-91-1-1", "input": "If there are two dogs, and one of them is indoors while the other one is outdoors.", "output": "[\"SELECT['dogs']\", \"FILTER['#1', 'that are indoors']\", \"FILTER['#1', 'that are outdoors']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to one']\", \"BOOLEAN['#5', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#6', '#7']\"]"}
{"id": "NLVR2_dev_dev-911-1-0", "input": "If the right image contains customers standing in front of a glass display case.", "output": "[\"SELECT['customers']\", \"SELECT['display case']\", \"FILTER['#2', 'that is glass']\", \"FILTER['#1', 'standing in front of #3']\", \"BOOLEAN['#4', 'is in right image']\"]"}
{"id": "NLVR2_dev_dev-912-3-0", "input": "If two burds are pirched together on a tree branch", "output": "[\"SELECT['burds']\", \"SELECT['tree branch']\", \"FILTER['#1', 'that are pirched on #2']\", \"FILTER['#3', 'that are together']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-912-3-1", "input": "If two birds are touching heads.", "output": "[\"SELECT['birds']\", \"PROJECT['heads of #REF', '#1']\", \"FILTER['#2', 'that are touching']\", \"FILTER['#1', 'that has #3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-913-1-1", "input": "If one bottle is at least partly green.", "output": "[\"SELECT['bottles']\", \"FILTER['#1', 'that are at least partly green']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-913-3-0", "input": "If the left image contains at least two bottles.", "output": "[\"SELECT['left image']\", \"PROJECT['bottles of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at least two']\"]"}
{"id": "NLVR2_dev_dev-914-2-0", "input": "If the skunk in the right image is looking straight ahead.", "output": "[\"SELECT['right image']\", \"PROJECT['skunk in #REF', '#1']\", \"BOOLEAN['#2', 'is looking straight ahead']\"]"}
{"id": "NLVR2_dev_dev-914-2-1", "input": "If left and right images show a skunk in partial profile with its tail raised, and at least one image shows a real skunk with white striped back.", "output": "[\"SELECT['skunk']\", \"FILTER['#1', 'in partial profile']\", \"PROJECT['tail of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is raised']\", \"BOOLEAN['#4', 'is in the left image']\", \"BOOLEAN['#4', 'is in the right image']\", \"BOOLEAN['logical_and', 'true', '#5', '#6']\", \"FILTER['#1', 'that is real']\", \"PROJECT['back of #REF', '#8']\", \"COMPARATIVE['#8', '#9', 'is white striped']\", \"BOOLEAN['#10', 'is in at least one image']\", \"BOOLEAN['logical_and', 'true', '#7', '#11']\"]"}
{"id": "NLVR2_dev_dev-915-1-0", "input": "If a beetle is facing left in one of the images.", "output": "[\"SELECT['beetle']\", \"FILTER['#1', 'that is facing left']\", \"BOOLEAN['#2', 'is in one of the images']\"]"}
{"id": "NLVR2_dev_dev-915-1-1", "input": "If there are two beetles facing in opposite directions.", "output": "[\"SELECT['beetles']\", \"PROJECT['directions that #REF facing', '#1']\", \"COMPARATIVE['#1', '#2', 'is opposite']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-916-1-0", "input": "If one image shows anemone tendrils with peach coloring sprouting from black-and-white zebra striped stalks.", "output": "[\"SELECT['anemone tendrils']\", \"PROJECT['coloring of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is peach']\", \"SELECT['stalks']\", \"FILTER['#4', 'that are black-and-white']\", \"FILTER['#5', 'that are zebra striped']\", \"FILTER['#3', 'sprouting from #6']\", \"BOOLEAN['#7', 'are in one image']\"]"}
{"id": "NLVR2_dev_dev-916-2-1", "input": "If at least one of anemones is white with dark stripes.", "output": "[\"SELECT['anemones']\", \"FILTER['#1', 'that are white']\", \"SELECT['stripes']\", \"FILTER['#3', 'that are dark']\", \"FILTER['#2', 'that have #4']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-917-2-0", "input": "If the head scarf of one of the dogs has a plaid pattern on it.", "output": "[\"SELECT['dogs']\", \"PROJECT['head scarves of #REF', '#1']\", \"PROJECT['patterns of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is plaid']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-917-3-1", "input": "If in at least one image there is a brown dog with a brown leash and checkered scarf.", "output": "[\"SELECT['dog']\", \"FILTER['#1', 'that is brown']\", \"SELECT['leash']\", \"FILTER['#3', 'that is brown']\", \"SELECT['scarf']\", \"FILTER['#5', 'that is checkered']\", \"FILTER['#2', 'with #4']\", \"FILTER['#2', 'with #6']\", \"INTERSECTION['#2', '#7', '#8']\", \"BOOLEAN['#9', 'is in at least one image']\"]"}
{"id": "NLVR2_dev_dev-918-1-0", "input": "If a roll of paper towels is hanging on a paper towel holder.", "output": "[\"SELECT['roll of paper towels']\", \"SELECT['paper towel holder']\", \"BOOLEAN['#1', 'is hanging on #2']\"]"}
{"id": "NLVR2_dev_dev-918-2-1", "input": "If a roll of paper towels is in a holder", "output": "[\"SELECT['roll of paper towels']\", \"SELECT['holder']\", \"BOOLEAN['#1', 'is in #2']\"]"}
{"id": "NLVR2_dev_dev-919-3-0", "input": "If there are at least two long cylindrical vases containing white flowers in the left image.", "output": "[\"SELECT['left image']\", \"PROJECT['vases in #REF', '#1']\", \"FILTER['#2', 'that are cylindrical']\", \"FILTER['#3', 'that are long']\", \"PROJECT['flowers in #REF', '#4']\", \"FILTER['#5', 'that are white']\", \"FILTER['#4', 'that has #6']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is at least two']\"]"}
{"id": "NLVR2_dev_dev-920-0-1", "input": "If a single pencil case is open to display color pencils, the pencils are painted in the color they are", "output": "[\"SELECT['pencil case']\", \"SELECT['color pencils']\", \"FILTER['#1', 'that is open to display #2']\", \"PROJECT['colors of #REF', '#2']\", \"BOOLEAN['#2', 'are painted in #4']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#6', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#7', '#5']\"]"}
{"id": "NLVR2_dev_dev-92-0-1", "input": "If both images have a window visible in the background.", "output": "[\"SELECT['window']\", \"SELECT['background']\", \"FILTER['#1', 'that is in #2']\", \"PROJECT['images of #REF', '#3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-920-2-0", "input": "If in the right image, there's a single pink pencil case with several colored pencils inside.", "output": "[\"SELECT['right image']\", \"PROJECT['pencil case in #REF', '#1']\", \"FILTER['#2', 'that is pink']\", \"SELECT['pencils']\", \"FILTER['#4', 'that are inside #3']\", \"FILTER['#5', 'that are colored']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to one']\", \"BOOLEAN['#8', 'is at least two']\", \"BOOLEAN['logical_and', 'true', '#9', '#10']\"]"}
{"id": "NLVR2_dev_dev-921-2-1", "input": "If all storage units pictured are footed, and one has two sliding wooden doors in the base and an open-backed hutch on top.", "output": "[\"SELECT['storage units']\", \"FILTER['#1', 'that are footed']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#4', 'is equal to #3']\", \"PROJECT['base of #REF', '#2']\", \"PROJECT['sliding doors of #REF', '#2']\", \"FILTER['#7', 'that are wooden']\", \"FILTER['#8', 'in #6']\", \"GROUP['count', '#9', '#2']\", \"COMPARATIVE['#2', '#10', 'is equal to two']\", \"SELECT['hutch']\", \"FILTER['#12', 'that is open-backed']\", \"FILTER['#13', 'on top of #11']\", \"FILTER['#11', 'with #14']\", \"AGGREGATE['count', '#15']\", \"BOOLEAN['#16', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#5', '#17']\"]"}
{"id": "NLVR2_dev_dev-921-3-0", "input": "If there are wooden shelves, but there is nothing in the shelves.", "output": "[\"SELECT['shelves']\", \"FILTER['#1', 'that are wooden']\", \"BOOLEAN['#2', 'if nothing is in #REF']\"]"}
{"id": "NLVR2_dev_dev-92-2-0", "input": "If one woman is wearing a night gown.", "output": "[\"SELECT['women']\", \"SELECT['night gown']\", \"FILTER['#1', 'wearing #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-922-0-0", "input": "If the left image contains no more than three ducks.", "output": "[\"SELECT['the left image']\", \"PROJECT['ducks in #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at most three']\"]"}
{"id": "NLVR2_dev_dev-922-2-1", "input": "If there are four or more animals very close to each other on the grass in the image to the left.", "output": "[\"SELECT['left image']\", \"PROJECT['animals in #REF', '#1']\", \"PROJECT['grass in #REF', '#1']\", \"FILTER['#2', 'that are on #3']\", \"FILTER['#4', 'that are very close to each other']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is at least four']\"]"}
{"id": "NLVR2_dev_dev-923-1-0", "input": "If only one gerbil per picture.", "output": "[\"SELECT['gerbils']\", \"SELECT['pictures']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is equal to one']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to #6']\"]"}
{"id": "NLVR2_dev_dev-924-3-0", "input": "If at least one piece of dough is sitting on a surface that has been dusted with flour.", "output": "[\"SELECT['pieces of dough']\", \"SELECT['surface']\", \"SELECT['flour']\", \"FILTER['#2', 'that has been dusted with #3']\", \"FILTER['#1', 'sitting on #4']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-924-3-1", "input": "If three or more fingers are visible.", "output": "[\"SELECT['fingers']\", \"FILTER['#1', 'that are visible']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at least three']\"]"}
{"id": "NLVR2_dev_dev-925-0-0", "input": "If there are 10 cups in one image", "output": "[\"SELECT['images']\", \"PROJECT['cups in #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is equal to 10']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-925-3-1", "input": "If there are more teacups in the image on the right.", "output": "[\"SELECT['teacups']\", \"SELECT['right image']\", \"FILTER['#1', 'that are in #2']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#3']\", \"ARITHMETIC['difference', '#4', '#5']\", \"BOOLEAN['#5', 'is higher than #6']\"]"}
{"id": "NLVR2_dev_dev-926-0-0", "input": "If there are yellow flowers on one of the centered coffee tables.", "output": "[\"SELECT['flowers']\", \"FILTER['#1', 'that are yellow']\", \"SELECT['coffee tables']\", \"FILTER['#3', 'that are centered']\", \"FILTER['#4', 'that #2 are on']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-926-1-1", "input": "If the left and right image contains a total of six blinds.", "output": "[\"SELECT['left image']\", \"PROJECT['blinds in #REF', '#1']\", \"SELECT['right image']\", \"PROJECT['blinds in #REF', '#3']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['sum', '#5', '#6']\", \"BOOLEAN['#7', 'is equal to six']\"]"}
{"id": "NLVR2_dev_dev-927-0-0", "input": "If at least five orange dogs without collars sit upright in a row, gazing intently, in one image, and the other image includes dogs in collars arranged more or less in a row.", "output": "[\"SELECT['one image']\", \"PROJECT['dogs in #REF', '#1']\", \"FILTER['#2', 'that are orange']\", \"SELECT['collars']\", \"FILTER['#3', 'without #4']\", \"FILTER['#5', 'that sit upright']\", \"FILTER['#6', 'in a row']\", \"FILTER['#7', 'that are gazing intently']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is at least five']\", \"SELECT['the other image']\", \"PROJECT['dogs in #REF', '#11']\", \"FILTER['#12', 'in #4']\", \"BOOLEAN['#13', 'are arranged more or less in a row']\", \"BOOLEAN['logical_and', 'true', '#10', '#14']\"]"}
{"id": "NLVR2_dev_dev-927-1-1", "input": "If the left image contains no more than four dogs.", "output": "[\"SELECT['the left image']\", \"PROJECT['dogs in #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at most four']\"]"}
{"id": "NLVR2_dev_dev-928-0-0", "input": "If in at least one image there is  one yellow boat facing left and forward.", "output": "[\"SELECT['images']\", \"PROJECT['boats in #REF', '#1']\", \"FILTER['#2', 'that are yellow']\", \"FILTER['#3', 'that are facing left']\", \"FILTER['#4', 'that are facing forward']\", \"GROUP['count', '#5', '#1']\", \"COMPARATIVE['#1', '#6', 'is equal to one']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-928-2-1", "input": "If there is at least canoe in the grass in one picture and one canoe in the water in the other image.", "output": "[\"SELECT['one image']\", \"PROJECT['canoe in #REF', '#1']\", \"PROJECT['grass in #REF', '#1']\", \"FILTER['#2', 'that is in #3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least one']\", \"SELECT['other image']\", \"PROJECT['canoe in #REF', '#7']\", \"PROJECT['water in #REF', '#7']\", \"FILTER['#8', 'that is in #9']\", \"AGGREGATE['count', '#10']\", \"BOOLEAN['#11', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#6', '#12']\"]"}
{"id": "NLVR2_dev_dev-929-0-0", "input": "If the image on the left depicts just 4 balloons.", "output": "[\"SELECT['the image on the left']\", \"PROJECT['balloons in #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to 4']\"]"}
{"id": "NLVR2_dev_dev-929-1-1", "input": "If each image shows upright balloons on strings, but the right image contains more balloons than the left image.", "output": "[\"SELECT['balloons']\", \"FILTER['#1', 'that are upright']\", \"FILTER['#2', 'that are on strings']\", \"SELECT['images']\", \"GROUP['count', '#3', '#4']\", \"COMPARATIVE['#4', '#5', 'is at least one']\", \"AGGREGATE['count', '#4']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to #8']\", \"SELECT['right image']\", \"SELECT['left image']\", \"FILTER['#1', 'that are in']\", \"FILTER['#1', 'that are in']\", \"AGGREGATE['count', '#12']\", \"AGGREGATE['count', '#13']\", \"BOOLEAN['#14', 'is higher than #15']\", \"BOOLEAN['logical_and', 'true', '#9', '#16']\"]"}
{"id": "NLVR2_dev_dev-93-0-1", "input": "If the hyena in the image on the left is lying with its head directly on the ground.", "output": "[\"SELECT['hyena']\", \"FILTER['#1', 'that is lying']\", \"PROJECT['head of #REF', '#2']\", \"SELECT['the ground']\", \"COMPARATIVE['#2', '#3', 'is directly on #4']\", \"BOOLEAN['#5', 'is in the image on the left']\"]"}
{"id": "NLVR2_dev_dev-930-1-0", "input": "If in the image to the left, we see a younger goat.", "output": "[\"SELECT['the image to the left']\", \"PROJECT['goat in #REF', '#1']\", \"BOOLEAN['#2', 'is young']\"]"}
{"id": "NLVR2_dev_dev-9-3-1", "input": "If there is exactly two white dogs in the left image.", "output": "[\"SELECT['left image']\", \"PROJECT['dogs in #REF', '#1']\", \"FILTER['#2', 'that are white']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-93-1-0", "input": "If the left and right image contains the same number of hy", "output": "[\"SELECT['left image']\", \"PROJECT['hy of #REF', '#1']\", \"SELECT['right image']\", \"PROJECT['hy of #REF', '#3']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to #6']\"]"}
{"id": "NLVR2_dev_dev-931-1-1", "input": "If an image shows a single hyena, which holds part of a carcass completely off the ground in its mouth.", "output": "[\"SELECT['images']\", \"PROJECT['hyenas in #REF', '#1']\", \"PROJECT['carcass in #REF', '#1']\", \"PROJECT['part of #REF', '#3']\", \"PROJECT['mouth of #REF', '#2']\", \"PROJECT['the ground in #REF', '#1']\", \"FILTER['#4', 'completely off #6']\", \"FILTER['#2', 'where #5 holds #7']\", \"GROUP['count', '#8', '#1']\", \"COMPARATIVE['#1', '#9', 'is equal to one']\", \"AGGREGATE['count', '#10']\", \"BOOLEAN['#11', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-932-0-1", "input": "If two birds are perched together in the image on the left.", "output": "[\"SELECT['birds']\", \"FILTER['#1', 'that are perched together']\", \"FILTER['#2', 'in left image']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-932-3-0", "input": "If the left image contains exactly two parrots with green wings.", "output": "[\"SELECT['left image']\", \"PROJECT['parrots of #REF', '#1']\", \"PROJECT['wings of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'are green']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-933-3-0", "input": "If in at least one of the images, two cheetahs are pulling on opposite ends of a piece of an animal.", "output": "[\"SELECT['cheetahs']\", \"SELECT['piece of an animal']\", \"PROJECT['opposite ends of #REF', '#2']\", \"FILTER['#1', 'pulling on #3']\", \"PROJECT['images of #REF', '#4']\", \"GROUP['count', '#4', '#5']\", \"COMPARATIVE['#5', '#6', 'is equal to two']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-934-0-0", "input": "If the left and right image contains the same number of dogs with at least one sitting and wearing a collar.", "output": "[\"SELECT['dogs']\", \"FILTER['#1', 'that is sitting']\", \"SELECT['collar']\", \"FILTER['#2', 'that is wearing #3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least one']\", \"SELECT['left image']\", \"SELECT['right image']\", \"FILTER['#1', 'that are in #7']\", \"FILTER['#1', 'that are in #8']\", \"AGGREGATE['count', '#9']\", \"AGGREGATE['count', '#10']\", \"BOOLEAN['#11', 'is equal to #12']\", \"BOOLEAN['logical_and', 'true', '#13', '#6']\"]"}
{"id": "NLVR2_dev_dev-934-2-1", "input": "If the left image shows a small brown dog with its mouth open.\\", "output": "[\"SELECT['dog']\", \"FILTER['#1', 'that is small']\", \"FILTER['#2', 'that is brown']\", \"PROJECT['mouth of #REF', '#3']\", \"COMPARATIVE['#3', '#4', 'is open']\", \"BOOLEAN['#5', 'is in the left image']\"]"}
{"id": "NLVR2_dev_dev-935-0-0", "input": "If each image shows two sneakers, and only one image features a matched pair of black sneakers trimmed with purple and aqua.", "output": "[\"SELECT['images']\", \"PROJECT['sneakers in #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is equal to two']\", \"AGGREGATE['count', '#4']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#5', 'is equal to #6']\", \"SELECT['pair of sneakers']\", \"FILTER['#8', 'that are black']\", \"FILTER['#9', 'that are matched']\", \"PROJECT['trim of #REF', '#10']\", \"COMPARATIVE['#10', '#11', 'is purple and aqua']\", \"BOOLEAN['#12', 'is in only one image']\", \"BOOLEAN['logical_and', 'true', '#7', '#13']\"]"}
{"id": "NLVR2_dev_dev-935-2-1", "input": "If in the image to the right, all shoelaces are the same color.", "output": "[\"SELECT['right image']\", \"PROJECT['shoelaces in #REF', '#1']\", \"PROJECT['color of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'are the same']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to #6']\"]"}
{"id": "NLVR2_dev_dev-936-2-1", "input": "If the combined images contain exactly two yellow balls and no more than three white balls.", "output": "[\"SELECT['combined images']\", \"PROJECT['balls of #REF', '#1']\", \"FILTER['#2', 'that are yellow']\", \"FILTER['#2', 'that are white']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to two']\", \"BOOLEAN['#6', 'is at most three']\", \"BOOLEAN['logical_and', 'true', '#7', '#8']\"]"}
{"id": "NLVR2_dev_dev-936-3-0", "input": "If in at least one image there is a pair of golf balls one behind the other.", "output": "[\"SELECT['one golf ball']\", \"SELECT['the other golf ball']\", \"FILTER['#1', 'behind #2']\", \"BOOLEAN['#3', 'is in at least one image']\"]"}
{"id": "NLVR2_dev_dev-937-0-1", "input": "If there are 2 boats woth a total of 3 sails in the image pair", "output": "[\"SELECT['images']\", \"PROJECT['boats in #REF', '#1']\", \"PROJECT['sails of #REF', '#2']\", \"GROUP['count', '#2', '#1']\", \"AGGREGATE['sum', '#4']\", \"BOOLEAN['#5', 'is equal to 2']\", \"GROUP['count', '#3', '#2']\", \"AGGREGATE['sum', '#7']\", \"BOOLEAN['#8', 'is equal to 3']\", \"BOOLEAN['logical_and', 'true', '#6', '#9']\"]"}
{"id": "NLVR2_dev_dev-937-3-0", "input": "If one boat is sailing to the right and the other is sailing to the left.", "output": "[\"SELECT['boats']\", \"FILTER['#1', 'sailing to the right']\", \"FILTER['#1', 'sailing to the left']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to one']\", \"BOOLEAN['#5', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#6', '#7']\"]"}
{"id": "NLVR2_dev_dev-938-3-1", "input": "If the left and right image contains the same number of mini horses facing the same direction pulling a cart.", "output": "[\"SELECT['left image']\", \"SELECT['right image']\", \"SELECT['horses']\", \"FILTER['#3', 'that are mini']\", \"FILTER['#4', 'facing the same direction']\", \"SELECT['cart']\", \"FILTER['#5', 'pulling #6']\", \"FILTER['#7', 'in #1']\", \"FILTER['#7', 'in #2']\", \"AGGREGATE['count', '#8']\", \"AGGREGATE['count', '#9']\", \"BOOLEAN['#10', 'is the same as #11']\"]"}
{"id": "NLVR2_dev_dev-939-0-1", "input": "If one of the instruments shown has metal keyhole covers, and is standing straight up on its end; the other instrument is made of glass that has been painted.", "output": "[\"SELECT['one instrument']\", \"SELECT['keyhole covers']\", \"FILTER['#2', 'that are metal']\", \"BOOLEAN['#1', 'has #3']\", \"PROJECT['end of #REF', '#1']\", \"BOOLEAN['#1', 'is standing straight up on #5']\", \"BOOLEAN['logical_and', 'true', '#4', '#6']\", \"SELECT['the other instrument']\", \"SELECT['glass']\", \"FILTER['#9', 'that has been painted']\", \"BOOLEAN['#8', 'is made of #10']\", \"BOOLEAN['logical_and', 'true', '#7', '#11']\"]"}
{"id": "NLVR2_dev_dev-939-2-0", "input": "If one flute is resting on a holder.", "output": "[\"SELECT['flutes']\", \"SELECT['holder']\", \"FILTER['#1', 'resting on #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-94-0-0", "input": "If one of the images shows a woman running with her dog next to her.", "output": "[\"SELECT['woman']\", \"SELECT['dog']\", \"FILTER['#1', 'that is running']\", \"FILTER['#3', 'that is next to #2']\", \"BOOLEAN['#4', 'is in one image']\"]"}
{"id": "NLVR2_dev_dev-940-0-0", "input": "If one of the images shows no more than two stingrays swimming exposing their belly.", "output": "[\"SELECT['stingrays']\", \"FILTER['#1', 'that are swimming']\", \"PROJECT['belly of #REF', '#2']\", \"FILTER['#2', 'that are exposing #3']\", \"SELECT['images']\", \"GROUP['count', '#4', '#5']\", \"COMPARATIVE['#5', '#6', 'is at most two']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-940-3-1", "input": "If one image contains more than ten times as many stingray as the other image.", "output": "[\"SELECT['one image']\", \"PROJECT['stingrays in #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"SELECT['other image']\", \"PROJECT['stingrays in #REF', '#4']\", \"AGGREGATE['count', '#5']\", \"ARITHMETIC['division', '#3', '#6']\", \"BOOLEAN['#7', 'is at least ten']\"]"}
{"id": "NLVR2_dev_dev-94-1-1", "input": "If the right image contains one human interacting with one dog.", "output": "[\"SELECT['right image']\", \"PROJECT['human in #REF', '#1']\", \"PROJECT['dog in #REF', '#1']\", \"FILTER['#2', 'that is interacting with #3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-941-1-1", "input": "If in the left image, there are two pugs--one sitting and the other laying down.", "output": "[\"SELECT['left image']\", \"PROJECT['pugs in #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to two']\", \"FILTER['#2', 'that is sitting']\", \"FILTER['#2', 'that is laying down']\", \"AGGREGATE['count', '#5']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to one']\", \"BOOLEAN['#8', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#9', '#10']\", \"BOOLEAN['logical_and', 'true', '#4', '#11']\"]"}
{"id": "NLVR2_dev_dev-941-3-0", "input": "If each image contains 2 pugs, and the image on the left shows both dogs with tongues sticking out.", "output": "[\"SELECT['images']\", \"PROJECT['pugs in #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is equal to two']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#6', 'is equal to #5']\", \"SELECT['the image on the left']\", \"PROJECT['dogs in #REF', '#8']\", \"PROJECT['tongue of #REF', '#9']\", \"COMPARATIVE['#9', '#10', 'is sticking out']\", \"AGGREGATE['count', '#11']\", \"BOOLEAN['#12', 'is equal to two']\", \"BOOLEAN['logical_and', 'true', '#7', '#13']\"]"}
{"id": "NLVR2_dev_dev-942-1-1", "input": "If in the image to the right, there are green shirts for sale.", "output": "[\"SELECT['shirts']\", \"FILTER['#1', 'that are green']\", \"FILTER['#2', 'that are for sale']\", \"BOOLEAN['#3', 'is in the right image']\"]"}
{"id": "NLVR2_dev_dev-943-1-1", "input": "If every time a black binder is featured in an image, it is completely segregated from any binders of color.", "output": "[\"SELECT['binders']\", \"FILTER['#1', 'that are black']\", \"FILTER['#1', 'that are of color']\", \"FILTER['#2', 'that are completely segregated from #3']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to #6']\"]"}
{"id": "NLVR2_dev_dev-943-2-0", "input": "If the inside clasps are visible on two binders.", "output": "[\"SELECT['clasps']\", \"FILTER['#1', 'that are inside']\", \"SELECT['binders']\", \"COMPARATIVE['#3', '#2', 'are visible']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-944-3-0", "input": "If there is at least one puppy with predominantly black fur.", "output": "[\"SELECT['puppy']\", \"PROJECT['fur of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is predominantly black']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-945-0-0", "input": "If an image shows a marmot's tilted head with vivid yellow teeth showing.", "output": "[\"SELECT['marmot']\", \"PROJECT['head of #REF', '#1']\", \"FILTER['#2', 'that is tilted']\", \"PROJECT['teeth of #REF', '#1']\", \"FILTER['#4', 'that are vivid yellow']\", \"FILTER['#3', 'that is showing #5']\", \"BOOLEAN['#6', 'is in an image']\"]"}
{"id": "NLVR2_dev_dev-945-0-1", "input": "If the left and right image contains the same number of groundhogs with at least one with yellow teeth.", "output": "[\"SELECT['the left image']\", \"PROJECT['groundhogs in #REF', '#1']\", \"PROJECT['teeth of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'are yellow']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#4']\", \"SELECT['the right image']\", \"PROJECT['groundhogs in #REF', '#7']\", \"PROJECT['teeth of #REF', '#8']\", \"COMPARATIVE['#8', '#9', 'are yellow']\", \"AGGREGATE['count', '#8']\", \"AGGREGATE['count', '#10']\", \"ARITHMETIC['sum', '#6', '#12']\", \"BOOLEAN['#5', 'is equal to #11']\", \"BOOLEAN['#13', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#14', '#15']\"]"}
{"id": "NLVR2_dev_dev-946-0-0", "input": "If the left and right image contains the same number of  babies in animal towels.", "output": "[\"SELECT['babies']\", \"SELECT['animal towels']\", \"FILTER['#1', 'that are in #2']\", \"SELECT['left image']\", \"SELECT['right image']\", \"FILTER['#3', 'that are in #4']\", \"FILTER['#3', 'that are in #5']\", \"AGGREGATE['count', '#6']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is equal to #9']\"]"}
{"id": "NLVR2_dev_dev-947-0-1", "input": "If one image shows the head of a small brown animal peering up out of a hole in the ground.", "output": "[\"SELECT['animal']\", \"FILTER['#1', 'that is brown']\", \"FILTER['#2', 'that is small']\", \"PROJECT['the head of #REF', '#3']\", \"SELECT['hole']\", \"SELECT['ground']\", \"FILTER['#5', 'that is in #6']\", \"FILTER['#4', 'peering up out of #7']\", \"BOOLEAN['#8', 'is in one image']\"]"}
{"id": "NLVR2_dev_dev-947-3-0", "input": "If the left and right image contains the same number of groundhogs with at least one sitting on there butts", "output": "[\"SELECT['the left image']\", \"SELECT['the right image']\", \"PROJECT['groundhogs in #REF', '#1']\", \"PROJECT['groundhogs in #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to #6']\", \"PROJECT['butts of #REF', '#3']\", \"PROJECT['butts of #REF', '#4']\", \"FILTER['#3', 'sitting on #8']\", \"FILTER['#4', 'sitting on #9']\", \"AGGREGATE['count', '#10']\", \"AGGREGATE['count', '#11']\", \"ARITHMETIC['sum', '#12', '#13']\", \"BOOLEAN['#14', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#7', '#15']\"]"}
{"id": "NLVR2_dev_dev-948-0-1", "input": "If banners hang from the ceiling in the room in the image on the left.", "output": "[\"SELECT['left image']\", \"PROJECT['room of #REF', '#1']\", \"PROJECT['ceiling of #REF', '#2']\", \"SELECT['banners']\", \"BOOLEAN['#4', 'hang from #3']\"]"}
{"id": "NLVR2_dev_dev-948-2-0", "input": "If an image shows a shop interior with a row of chalkboards on the wall and spindle-back chairs around tables.", "output": "[\"SELECT['shop']\", \"PROJECT['interior of #REF', '#1']\", \"SELECT['row of chalkboards']\", \"SELECT['wall']\", \"FILTER['#3', 'on #4']\", \"FILTER['#2', 'with #5']\", \"SELECT['chairs']\", \"FILTER['#7', 'that are spindle-back']\", \"SELECT['tables']\", \"FILTER['#8', 'around #9']\", \"FILTER['#6', 'with #10']\", \"BOOLEAN['#11', 'is in an image']\"]"}
{"id": "NLVR2_dev_dev-949-3-0", "input": "If there is a dome in the left image.", "output": "[\"SELECT['dome']\", \"BOOLEAN['#1', 'is in left image']\"]"}
{"id": "NLVR2_dev_dev-95-0-1", "input": "If in one of the images, there are a pair of shoes.", "output": "[\"SELECT['pair of shoes']\", \"BOOLEAN['#1', 'is in one of the images']\"]"}
{"id": "NLVR2_dev_dev-950-1-0", "input": "If an image shows a hamster with greens to eat, next to a wooden structure with one hole and one arch doorway.", "output": "[\"SELECT['hamster']\", \"SELECT['greens to eat']\", \"FILTER['#1', 'with #2']\", \"SELECT['structure']\", \"FILTER['#4', 'that is wooden']\", \"PROJECT['holes of #REF', '#5']\", \"GROUP['count', '#6', '#5']\", \"COMPARATIVE['#5', '#7', 'is equal to one']\", \"PROJECT['doorways of #REF', '#5']\", \"FILTER['#9', 'that have arches']\", \"GROUP['count', '#10', '#5']\", \"COMPARATIVE['#5', '#11', 'is equal to one']\", \"INTERSECTION['#5', '#8', '#12']\", \"FILTER['#3', 'next to #13']\", \"BOOLEAN['#14', 'is in an image']\"]"}
{"id": "NLVR2_dev_dev-950-2-1", "input": "If a hamster is standing on its hind legs in the right image.", "output": "[\"SELECT['hamster']\", \"PROJECT['hind legs of #REF', '#1']\", \"FILTER['#1', 'standing on #2']\", \"BOOLEAN['#3', 'is in the right image']\"]"}
{"id": "NLVR2_dev_dev-951-1-0", "input": "If in the image on the right, the dog's body is facing to the right.", "output": "[\"SELECT['right image']\", \"PROJECT['dog of #REF', '#1']\", \"PROJECT['the body of #REF', '#2']\", \"BOOLEAN['#3', 'is facing right']\"]"}
{"id": "NLVR2_dev_dev-951-1-1", "input": "If the dog in one of the images is sitting down.", "output": "[\"SELECT['dog']\", \"FILTER['#1', 'that is sitting down']\", \"BOOLEAN['#2', 'is in one of the images']\"]"}
{"id": "NLVR2_dev_dev-952-3-1", "input": "If two buildings sit next to each other in the image on the left.", "output": "[\"SELECT['left image']\", \"PROJECT['buildings in #REF', '#1']\", \"FILTER['#2', 'that sit next to each other']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-953-2-0", "input": "If each image contains one hound puppy, no puppy is on grass, and one image shows a puppy standing on all fours.", "output": "[\"SELECT['hound puppies']\", \"SELECT['images']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is equal to one']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to #6']\", \"SELECT['grass']\", \"FILTER['#1', 'that are on #8']\", \"AGGREGATE['count', '#9']\", \"BOOLEAN['#10', 'is equal to zero']\", \"FILTER['#1', 'that is standing on all fours']\", \"BOOLEAN['#12', 'is in one image']\", \"BOOLEAN['#7', 'and #11 are true']\", \"BOOLEAN['#14', 'and #13 are true']\"]"}
{"id": "NLVR2_dev_dev-953-3-1", "input": "If a dog in the image on the left is sitting down.", "output": "[\"SELECT['left image']\", \"PROJECT['dog in #REF', '#1']\", \"FILTER['#2', 'that is sitting down']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-954-0-0", "input": "If one image shows multiple dogs posed sitting upright, and the other image shows a single large-breed dog.", "output": "[\"SELECT['one image']\", \"PROJECT['dogs in #REF', '#1']\", \"FILTER['#2', 'that are posed sitting upright']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least two']\", \"SELECT['other image']\", \"PROJECT['dog in #REF', '#6']\", \"FILTER['#7', 'that is large-breed']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#5', '#10']\"]"}
{"id": "NLVR2_dev_dev-955-0-0", "input": "If these images show sea creatures, but none of these creatures are fish.", "output": "[\"SELECT['images']\", \"PROJECT['sea creatures in #REF', '#1']\", \"FILTER['#2', 'that are fish']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least two']\", \"BOOLEAN['#5', 'is equal to zero']\", \"BOOLEAN['logical_and', 'true', '#6', '#7']\"]"}
{"id": "NLVR2_dev_dev-955-0-1", "input": "If one image shows an orange colored anemone that is spiky, while the other image shows an anemone that is more finger or tentacle-like and has purple in the image.", "output": "[\"SELECT['one image']\", \"PROJECT['anemone in #REF', '#1']\", \"PROJECT['color of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is orange']\", \"BOOLEAN['#4', 'is spiky']\", \"SELECT['the other image']\", \"PROJECT['anemone in #REF', '#6']\", \"FILTER['#7', 'that is more finger or tentacle-like']\", \"PROJECT['color of #REF', '#8']\", \"BOOLEAN['#9', 'is purple']\", \"BOOLEAN['logical_and', 'true', '#5', '#10']\"]"}
{"id": "NLVR2_dev_dev-956-1-0", "input": "If in at least one of the images in each pair there are at least three wine bottle together in a line.", "output": "[\"SELECT['images']\", \"PROJECT['pairs of #REF', '#1']\", \"PROJECT['wine bottles in #REF', '#1']\", \"FILTER['#3', 'that are together in a line']\", \"GROUP['count', '#4', '#1']\", \"COMPARATIVE['#1', '#5', 'is at least three']\", \"GROUP['count', '#6', '#2']\", \"COMPARATIVE['#2', '#7', 'is at least one']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is equal to #10']\"]"}
{"id": "NLVR2_dev_dev-956-3-1", "input": "If there is at least 1 wine glass with some red wine it, sitting by a wine bottle.", "output": "[\"SELECT['wine glasses']\", \"SELECT['wine']\", \"FILTER['#2', 'that is red']\", \"FILTER['#1', 'with #3 in it']\", \"SELECT['wine bottle']\", \"FILTER['#4', 'sitting by #5']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-957-1-1", "input": "If at least one leftward-facing buffalo is in an action pose stirring up a cloud of dirt in the right image.", "output": "[\"SELECT['right image']\", \"PROJECT['buffalo in #REF', '#1']\", \"FILTER['#2', 'that is leftward-facing']\", \"FILTER['#3', 'that is in action pose']\", \"PROJECT['cloud of dirt in #REF', '#1']\", \"FILTER['#4', 'that is stirring up #5']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-957-3-0", "input": "If there are at most 3 water buffalos in the image pair.", "output": "[\"SELECT['image pair']\", \"PROJECT['water buffalos in #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at most 3']\"]"}
{"id": "NLVR2_dev_dev-958-0-1", "input": "If there is an l sharped bar with no more than two l turns in the bar table.", "output": "[\"SELECT['bar']\", \"FILTER['#1', 'that is l sharped']\", \"PROJECT['bar table of #REF', '#2']\", \"PROJECT['l turns of #REF', '#3']\", \"GROUP['count', '#4', '#2']\", \"COMPARATIVE['#2', '#5', 'is at most two']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-958-2-0", "input": "If all the chairs have backs.", "output": "[\"SELECT['chairs']\", \"FILTER['#1', 'that have a back']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#4', 'is equal to #3']\"]"}
{"id": "NLVR2_dev_dev-959-1-1", "input": "If there are exactly three containers.", "output": "[\"SELECT['containers']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is equal to three']\"]"}
{"id": "NLVR2_dev_dev-959-2-0", "input": "If the left and right image contains a total of three containers.", "output": "[\"SELECT['left image']\", \"SELECT['right image']\", \"PROJECT['containers in #REF', '#1']\", \"PROJECT['containers in #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"ARITHMETIC['sum', '#5', '#6']\", \"BOOLEAN['#7', 'is equal to three']\"]"}
{"id": "NLVR2_dev_dev-960-2-0", "input": "If no image contains real adult wild cats, and one image contains twice as many juvenile cheetahs as the other image.", "output": "[\"SELECT['wild cats']\", \"FILTER['#1', 'that are adult']\", \"FILTER['#2', 'that are real']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to zero']\", \"SELECT['one image']\", \"PROJECT['cheetahs in #REF', '#6']\", \"FILTER['#7', 'that are juvenile']\", \"AGGREGATE['count', '#8']\", \"SELECT['other image']\", \"PROJECT['cheetahs in #REF', '#10']\", \"FILTER['#11', 'that are juvenile']\", \"AGGREGATE['count', '#12']\", \"ARITHMETIC['division', '#9', '#13']\", \"BOOLEAN['#14', 'is at least two']\", \"BOOLEAN['logical_and', 'true', '#5', '#15']\"]"}
{"id": "NLVR2_dev_dev-960-3-1", "input": "If there is at least two cheetahs in the right image.", "output": "[\"SELECT['the right image']\", \"PROJECT['cheetahs in #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at least two']\"]"}
{"id": "NLVR2_dev_dev-96-1-0", "input": "If the panda in one of the images is opening its mouth to eat.", "output": "[\"SELECT['panda']\", \"PROJECT['mouth of #REF', '#1']\", \"FILTER['#1', 'that is opening #2 to eat']\", \"BOOLEAN['#3', 'is in one of the images']\"]"}
{"id": "NLVR2_dev_dev-961-0-0", "input": "If each image shows at least five different shades of lipstick.", "output": "[\"SELECT['images']\", \"PROJECT['different shades of lipstick in #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is at least five']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#6', 'is equal to #5']\"]"}
{"id": "NLVR2_dev_dev-96-1-1", "input": "If there is a lone panda bear sitting in the forest in the center of both images.", "output": "[\"SELECT['panda bears']\", \"SELECT['forest']\", \"FILTER['#1', 'sitting in #2']\", \"FILTER['#3', 'in the center']\", \"PROJECT['images of #REF', '#4']\", \"GROUP['count', '#4', '#5']\", \"COMPARATIVE['#5', '#6', 'is equal to one']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-962-0-0", "input": "If at least one of the dogs is sitting on a wooden floor.", "output": "[\"SELECT['dog']\", \"SELECT['floor']\", \"FILTER['#2', 'that is wooden']\", \"FILTER['#1', 'sitting on #3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-962-3-1", "input": "If am image contains two dogs.", "output": "[\"SELECT['images']\", \"PROJECT['dogs in #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is equal to two']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-963-1-0", "input": "If the left and right image contains the same number women in bikinis.", "output": "[\"SELECT['the left image']\", \"SELECT['the right image']\", \"PROJECT['women in #REF', '#1']\", \"PROJECT['women in #REF', '#2']\", \"SELECT['bikinis']\", \"FILTER['#3', 'in #5']\", \"FILTER['#4', 'in #5']\", \"AGGREGATE['count', '#6']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is equal to #9']\"]"}
{"id": "NLVR2_dev_dev-963-1-1", "input": "If one image contains several bikini models, and the other image features just one model, whose bikini bottom has aqua coloring.", "output": "[\"SELECT['one image']\", \"PROJECT['bikini models in #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is higher than two']\", \"SELECT['the other image']\", \"PROJECT['models in #REF', '#5']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to one']\", \"PROJECT['bikini bottom of #REF', '#6']\", \"PROJECT['coloring of #REF', '#9']\", \"BOOLEAN['#10', 'is aqua']\", \"BOOLEAN['logical_and', 'true', '#8', '#11']\", \"BOOLEAN['logical_and', 'true', '#4', '#12']\"]"}
{"id": "NLVR2_dev_dev-964-2-1", "input": "If two birds are flying in the air.", "output": "[\"SELECT['birds']\", \"FILTER['#1', 'that are flying in the air']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-964-3-0", "input": "If all of the geese share the same coloring, and the left image contains exactly two geese.", "output": "[\"SELECT['geese']\", \"PROJECT['coloring of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'are the same']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to #5']\", \"SELECT['left image']\", \"FILTER['#1', 'that are in #7']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is equal to two']\", \"BOOLEAN['logical_and', 'true', '#6', '#10']\"]"}
{"id": "NLVR2_dev_dev-965-0-0", "input": "If one of the pictures shows high heeled shoes on a white shelf.", "output": "[\"SELECT['shoes']\", \"FILTER['#1', 'that are high heeled']\", \"SELECT['shelf']\", \"FILTER['#3', 'that is white']\", \"FILTER['#2', 'on #4']\", \"BOOLEAN['#5', 'are in one of the pictures']\"]"}
{"id": "NLVR2_dev_dev-966-1-0", "input": "If there are 3 cheetahs pictured.", "output": "[\"SELECT['cheetahs']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#2', 'is equal to 3']\"]"}
{"id": "NLVR2_dev_dev-966-1-1", "input": "If the right image contains at least two cheetahs.", "output": "[\"SELECT['right image']\", \"PROJECT['cheetahs of #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at least two']\"]"}
{"id": "NLVR2_dev_dev-967-0-0", "input": "If one cabinet is royal blue with decorative legs and scrollwork along the botttom edge.", "output": "[\"SELECT['cabinets']\", \"FILTER['#1', 'that is royal blue']\", \"FILTER['#2', 'that is with decorative legs']\", \"PROJECT['botttom edge of #REF', '#3']\", \"FILTER['#3', 'that has scrollwork along #4']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-967-0-1", "input": "If a chair is located near the cabinet in the image on the right.", "output": "[\"SELECT['the image on the right']\", \"PROJECT['chair in #REF', '#1']\", \"PROJECT['the cabinet in #REF', '#1']\", \"BOOLEAN['#2', 'is near #3']\"]"}
{"id": "NLVR2_dev_dev-968-2-1", "input": "If a bird is standing.", "output": "[\"SELECT['bird']\", \"BOOLEAN['#1', 'is standing']\"]"}
{"id": "NLVR2_dev_dev-968-3-0", "input": "If each image contains exactly one eagle with outspread wings flying in a clear blue sky.", "output": "[\"SELECT['eagles']\", \"PROJECT['wings of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'are outspread']\", \"SELECT['sky']\", \"FILTER['#4', 'that is clear']\", \"FILTER['#5', 'that is blue']\", \"FILTER['#3', 'flying in #6']\", \"PROJECT['images of #REF', '#7']\", \"GROUP['count', '#7', '#8']\", \"COMPARATIVE['#8', '#9', 'is equal to one']\", \"AGGREGATE['count', '#10']\", \"SELECT['images']\", \"AGGREGATE['count', '#12']\", \"BOOLEAN['#11', 'is equal to #13']\"]"}
{"id": "NLVR2_dev_dev-969-0-0", "input": "If in at least one image there is a church with a cross at the top facing right and forward.", "output": "[\"SELECT['church']\", \"SELECT['cross']\", \"PROJECT['top of #REF', '#1']\", \"FILTER['#2', 'at #3']\", \"COMPARATIVE['#1', '#4', 'is facing right']\", \"COMPARATIVE['#1', '#4', 'is facing forward']\", \"INTERSECTION['#1', '#5', '#6']\", \"BOOLEAN['#7', 'is in at least one image']\"]"}
{"id": "NLVR2_dev_dev-969-0-1", "input": "If at least one image is taken from up above.", "output": "[\"SELECT['image']\", \"FILTER['#1', 'that is taken from up above']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-970-1-0", "input": "If one of the images shows at least one boar standing in liquid water.", "output": "[\"SELECT['boars']\", \"SELECT['liquid water']\", \"FILTER['#1', 'that are standing in #2']\", \"SELECT['images']\", \"GROUP['count', '#3', '#4']\", \"COMPARATIVE['#4', '#5', 'is at least one']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-97-1-0", "input": "If an image shows an arch shape on a yellow wall on one side, and a black beam with inset lights spanning the ceiling over seating furniture.", "output": "[\"SELECT['arch shape']\", \"SELECT['wall']\", \"FILTER['#2', 'that is yellow']\", \"BOOLEAN['#1', 'is on #3 on one side']\", \"SELECT['beam']\", \"FILTER['#5', 'that is black']\", \"SELECT['inset lights']\", \"FILTER['#6', 'with #7']\", \"SELECT['ceiling']\", \"SELECT['seating furniture']\", \"FILTER['#9', 'over #10']\", \"BOOLEAN['#8', 'is spanning #11']\", \"BOOLEAN['logical_and', 'true', '#4', '#12']\"]"}
{"id": "NLVR2_dev_dev-971-3-1", "input": "If there are more rolls in the image on the right.", "output": "[\"SELECT['rolls']\", \"SELECT['right image']\", \"FILTER['#1', 'that are in #2']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#3']\", \"ARITHMETIC['difference', '#4', '#5']\", \"BOOLEAN['#5', 'is higher than #6']\"]"}
{"id": "NLVR2_dev_dev-972-0-0", "input": "If the dog in the image on the right has its tongue hanging out.", "output": "[\"SELECT['right image']\", \"PROJECT['dog of #REF', '#1']\", \"PROJECT['tongue of #REF', '#2']\", \"BOOLEAN['#3', 'is hanging out']\"]"}
{"id": "NLVR2_dev_dev-972-0-1", "input": "If one doberman faces forward and wears a collar, and the other doberman has its head turned and wears no collar.", "output": "[\"SELECT['doberman']\", \"FILTER['#1', 'that faces forward']\", \"FILTER['#2', 'that wears a collar']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to one']\", \"PROJECT['head of #REF', '#1']\", \"COMPARATIVE['#1', '#6', 'is turned']\", \"FILTER['#7', 'that wears a collar']\", \"DISCARD['#7', '#8']\", \"AGGREGATE['count', '#9']\", \"BOOLEAN['#10', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#5', '#11']\"]"}
{"id": "NLVR2_dev_dev-97-3-1", "input": "If there are people sitting in the left image.", "output": "[\"SELECT['people']\", \"FILTER['#1', 'that are sitting']\", \"SELECT['left image']\", \"BOOLEAN['#2', 'are in #3']\"]"}
{"id": "NLVR2_dev_dev-973-3-0", "input": "If there are four blonde women.", "output": "[\"SELECT['women']\", \"FILTER['#1', 'that are blonde']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to four']\"]"}
{"id": "NLVR2_dev_dev-974-2-1", "input": "If there are exactly three juvenile cheetahs.", "output": "[\"SELECT['cheetahs']\", \"FILTER['#1', 'that are juvenile']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to three']\"]"}
{"id": "NLVR2_dev_dev-974-3-0", "input": "If only one cheetah is eating a carcass in one of the images.", "output": "[\"SELECT['cheetah']\", \"SELECT['carcass']\", \"FILTER['#1', 'that is eating #2']\", \"SELECT['images']\", \"GROUP['count', '#3', '#4']\", \"COMPARATIVE['#4', '#5', 'is equal to one']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-975-0-1", "input": "If in at least one image there is a single needle pointing left.", "output": "[\"SELECT['needle']\", \"FILTER['#1', 'that is pointing left']\", \"SELECT['images']\", \"GROUP['count', '#2', '#3']\", \"COMPARATIVE['#3', '#4', 'is equal to one']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-975-2-0", "input": "If an image shows at least seven syringes arrayed fanning out, with their points together.", "output": "[\"SELECT['images']\", \"PROJECT['syringes in #REF', '#1']\", \"FILTER['#2', 'that are arrayed fanning out']\", \"PROJECT['points of #REF', '#3']\", \"COMPARATIVE['#3', '#4', 'are together']\", \"GROUP['count', '#5', '#1']\", \"COMPARATIVE['#1', '#6', 'is at least seven']\", \"AGGREGATE['count', '#7']\", \"BOOLEAN['#8', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-976-0-1", "input": "If the left image shows a small brown pony hitched to a cart without a rider in it.", "output": "[\"SELECT['pony']\", \"FILTER['#1', 'that is small']\", \"FILTER['#2', 'that is brown']\", \"SELECT['cart']\", \"SELECT['rider']\", \"FILTER['#4', 'without #5 in it']\", \"FILTER['#3', 'hitched to #6']\", \"BOOLEAN['#7', 'is in the left image']\"]"}
{"id": "NLVR2_dev_dev-976-2-0", "input": "If the cart in the left image has two wheels.", "output": "[\"SELECT['left image']\", \"PROJECT['cart of #REF', '#1']\", \"PROJECT['wheels of #REF', '#2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-977-2-0", "input": "If a glass of juice has an orange slice on it's rim", "output": "[\"SELECT['glass of juice']\", \"PROJECT['rim of #REF', '#1']\", \"SELECT['orange slice']\", \"BOOLEAN['#3', 'is on #2']\"]"}
{"id": "NLVR2_dev_dev-977-3-1", "input": "If in the left image, there are at least 14 fruit slices.", "output": "[\"SELECT['the left image']\", \"PROJECT['fruit slices in #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at least 14']\"]"}
{"id": "NLVR2_dev_dev-978-1-0", "input": "If none of the dogs appear to have leashes.", "output": "[\"SELECT['dogs']\", \"SELECT['leashes']\", \"FILTER['#1', 'that have #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to zero']\"]"}
{"id": "NLVR2_dev_dev-978-2-1", "input": "If in both images, the dog's body is facing left.", "output": "[\"SELECT['dog']\", \"PROJECT['body of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is facing left']\", \"PROJECT['images of #REF', '#3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-979-1-0", "input": "If one of the bracelets has blue seed beads.", "output": "[\"SELECT['bracelets']\", \"PROJECT['seed beads of #REF', '#1']\", \"FILTER['#2', 'that are blue']\", \"FILTER['#1', 'that has #3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-980-1-0", "input": "If there is a light pink lipstick on the left image and a dark pink one on the right.", "output": "[\"SELECT['lipstick']\", \"FILTER['#1', 'that is light pink']\", \"FILTER['#1', 'that is dark pink']\", \"BOOLEAN['#2', 'is in left image']\", \"BOOLEAN['#3', 'is in right image']\", \"BOOLEAN['logical_and', 'true', '#4', '#5']\"]"}
{"id": "NLVR2_dev_dev-980-1-1", "input": "If all makeup elements are not touching any other element", "output": "[\"SELECT['makeup elements']\", \"SELECT['elements']\", \"DISCARD['#2', '#1']\", \"FILTER['#1', 'that are touching #3']\", \"DISCARD['#1', '#4']\", \"AGGREGATE['count', '#1']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#7', 'is equal to #6']\"]"}
{"id": "NLVR2_dev_dev-981-1-1", "input": "If in one of the images, a person's hand is reaching into the pile of phones.", "output": "[\"SELECT['person']\", \"PROJECT['hand of #REF', '#1']\", \"SELECT['phones']\", \"PROJECT['pile of #REF', '#3']\", \"FILTER['#2', 'reaching into #4']\", \"BOOLEAN['#5', 'is in one of the images']\"]"}
{"id": "NLVR2_dev_dev-982-2-0", "input": "If there is a person holding one of the dogs.", "output": "[\"SELECT['person']\", \"SELECT['dogs']\", \"FILTER['#2', 'that #1 is holding']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-982-2-1", "input": "If the dog in the image on the right is outdoors.", "output": "[\"SELECT['right image']\", \"PROJECT['dog in #REF', '#1']\", \"BOOLEAN['#2', 'is outdoors']\"]"}
{"id": "NLVR2_dev_dev-98-3-0", "input": "If the right image contains one large bird that is flying above the ocean.", "output": "[\"SELECT['right image']\", \"PROJECT['bird of #REF', '#1']\", \"SELECT['ocean']\", \"FILTER['#2', 'flying above #3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-983-2-0", "input": "If the left and right image contains the same number of flutes facing the same directions.", "output": "[\"SELECT['the left image']\", \"PROJECT['flutes in #REF', '#1']\", \"PROJECT['direction facing of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is the same']\", \"AGGREGATE['count', '#4']\", \"SELECT['the right image']\", \"PROJECT['flutes in #REF', '#6']\", \"PROJECT['direction facing of #REF', '#7']\", \"COMPARATIVE['#7', '#8', 'is the same']\", \"AGGREGATE['count', '#9']\", \"BOOLEAN['#5', 'is equal to #10']\"]"}
{"id": "NLVR2_dev_dev-983-2-1", "input": "If each image contains exactly one flute and nothing else, displayed diagonally.", "output": "[\"SELECT['flutes']\", \"FILTER['#1', 'that are displayed diagonally']\", \"SELECT['images']\", \"GROUP['count', '#2', '#3']\", \"COMPARATIVE['#3', '#4', 'is equal to one']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to #7']\", \"PROJECT['#REF that contains nothing', '#3']\", \"DISCARD['#9', '#2']\", \"AGGREGATE['count', '#10']\", \"BOOLEAN['#6', 'is equal to #11']\", \"BOOLEAN['logical_and', 'true', '#8', '#12']\"]"}
{"id": "NLVR2_dev_dev-984-2-1", "input": "If at least one llama is carrying a pack.", "output": "[\"SELECT['llamas']\", \"SELECT['a pack']\", \"FILTER['#1', 'carrying #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-984-3-0", "input": "If treeless hills are behind a group of llamas, with at least one wearing a pack, in the left image.", "output": "[\"SELECT['left image']\", \"PROJECT['llamas in #REF', '#1']\", \"FILTER['#2', 'that are in a group']\", \"PROJECT['hills in #REF', '#1']\", \"FILTER['#4', 'that are treeless']\", \"FILTER['#3', 'that #5 are behind']\", \"PROJECT['pack in #REF', '#1']\", \"FILTER['#6', 'that is wearing #7']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-985-2-0", "input": "If the left image contains no more than one antelope.", "output": "[\"SELECT['left image']\", \"PROJECT['antelope in #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at most one']\"]"}
{"id": "NLVR2_dev_dev-986-0-1", "input": "If one of the images shows a brown acorn and a green acorn growing from the same stem.", "output": "[\"SELECT['acorns']\", \"FILTER['#1', 'that is brown']\", \"FILTER['#1', 'that is green']\", \"PROJECT['stem of #REF', '#2']\", \"PROJECT['stem of #REF', '#3']\", \"COMPARATIVE['#2', '#4', 'is the same as #5']\", \"BOOLEAN['#6', 'is in one image']\"]"}
{"id": "NLVR2_dev_dev-986-3-0", "input": "If there are both green and brown acorns in one image, and only green acorns in the other image.", "output": "[\"SELECT['one image']\", \"PROJECT['acorns in #REF', '#1']\", \"FILTER['#2', 'that are green']\", \"FILTER['#2', 'that are brown']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least one']\", \"BOOLEAN['#6', 'is at least one']\", \"BOOLEAN['logical_and', 'true', '#7', '#8']\", \"SELECT['other image']\", \"PROJECT['acorns in #REF', '#10']\", \"FILTER['#11', 'that are green']\", \"AGGREGATE['count', '#11']\", \"AGGREGATE['count', '#12']\", \"BOOLEAN['#13', 'is equal to #14']\", \"BOOLEAN['logical_and', 'true', '#9', '#15']\"]"}
{"id": "NLVR2_dev_dev-987-0-1", "input": "If each image contains no more than one dog, and one image shows a woman posing next to a large breed dog that is sitting upright.", "output": "[\"SELECT['dogs']\", \"SELECT['images']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is at most one']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to #6']\", \"SELECT['woman']\", \"PROJECT['breed of #REF', '#1']\", \"COMPARATIVE['#1', '#9', 'is large']\", \"FILTER['#10', 'that is sitting upright']\", \"FILTER['#8', 'that is posing next to #11']\", \"BOOLEAN['#12', 'is in one image']\", \"BOOLEAN['logical_and', 'true', '#7', '#13']\"]"}
{"id": "NLVR2_dev_dev-987-3-0", "input": "If a woman is crouched near the dog in the image on the right.", "output": "[\"SELECT['the image on the right']\", \"PROJECT['the dog in #REF', '#1']\", \"PROJECT['woman in #REF', '#1']\", \"BOOLEAN['#3', 'is crouched near #2']\"]"}
{"id": "NLVR2_dev_dev-988-1-0", "input": "If the vases in the image on the left are not the same height.", "output": "[\"SELECT['the image on the left']\", \"PROJECT['the vases in #REF', '#1']\", \"PROJECT['heights of #REF', '#2']\", \"BOOLEAN['#3', 'are not the same']\"]"}
{"id": "NLVR2_dev_dev-988-2-1", "input": "If two vases in each image are the same size and shape, and have complimentary, but not identical designs.", "output": "[\"SELECT['images']\", \"PROJECT['vases in #REF', '#1']\", \"PROJECT['size of #REF', '#2']\", \"PROJECT['shape of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is the same']\", \"COMPARATIVE['#2', '#4', 'is the same']\", \"INTERSECTION['#2', '#5', '#6']\", \"PROJECT['designs of #REF', '#7']\", \"COMPARATIVE['#7', '#8', 'are complimentary']\", \"COMPARATIVE['#7', '#8', 'are not identical']\", \"INTERSECTION['#7', '#9', '#10']\", \"GROUP['count', '#11', '#1']\", \"COMPARATIVE['#1', '#12', 'is equal to two']\", \"AGGREGATE['count', '#13']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#14', 'is equal to #15']\"]"}
{"id": "NLVR2_dev_dev-989-0-0", "input": "If each image contains at least one black-and-white spotted newborn pup, and the right image contains more pups overall than the left image.", "output": "[\"SELECT['images']\", \"PROJECT['pups in #REF', '#1']\", \"FILTER['#2', 'that are black-and-white spotted']\", \"FILTER['#3', 'that are newborn']\", \"GROUP['count', '#4', '#1']\", \"COMPARATIVE['#1', '#5', 'is at least one']\", \"AGGREGATE['count', '#6']\", \"AGGREGATE['count', '#1']\", \"BOOLEAN['#7', 'is equal to #8']\", \"SELECT['the right image']\", \"SELECT['the left image']\", \"PROJECT['pups in #REF', '#10']\", \"PROJECT['pups in #REF', '#11']\", \"AGGREGATE['count', '#12']\", \"AGGREGATE['count', '#13']\", \"BOOLEAN['#14', 'is higher than #15']\", \"BOOLEAN['logical_and', 'true', '#9', '#16']\"]"}
{"id": "NLVR2_dev_dev-989-1-1", "input": "If there is at least two new born dogs in the left image.", "output": "[\"SELECT['left image']\", \"PROJECT['dogs of #REF', '#1']\", \"FILTER['#2', 'that are new born']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least two']\"]"}
{"id": "NLVR2_dev_dev-99-0-0", "input": "If one dog stands on all fours in green grass near some type of flowers, and the dog's body is turned leftward.", "output": "[\"SELECT['dogs']\", \"PROJECT['all fours of #REF', '#1']\", \"FILTER['#1', 'that stand on #2']\", \"SELECT['grass']\", \"FILTER['#4', 'that is green']\", \"FILTER['#3', 'in #5']\", \"SELECT['flowers']\", \"FILTER['#6', 'near #7']\", \"PROJECT['body of #REF', '#8']\", \"COMPARATIVE['#8', '#9', 'is turned leftward']\", \"AGGREGATE['count', '#10']\", \"BOOLEAN['#11', 'is equal to one']\"]"}
{"id": "NLVR2_dev_dev-990-0-0", "input": "If each image contains a single dark bottle of wine, and no image contains a wine glass.", "output": "[\"SELECT['bottle of wine']\", \"FILTER['#1', 'that is dark']\", \"SELECT['images']\", \"GROUP['count', '#2', '#3']\", \"COMPARATIVE['#3', '#4', 'is equal to one']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#5']\", \"BOOLEAN['#6', 'is equal to #7']\", \"SELECT['wine glass']\", \"AGGREGATE['count', '#9']\", \"BOOLEAN['#10', 'is equal to zero']\", \"BOOLEAN['logical_and', 'true', '#8', '#11']\"]"}
{"id": "NLVR2_dev_dev-990-1-1", "input": "If there is a number on the label on the bottle in one of the images.", "output": "[\"SELECT['bottle']\", \"PROJECT['label of #REF', '#1']\", \"FILTER['#2', 'that has a number on']\", \"FILTER['#1', 'that has #3']\", \"BOOLEAN['#4', 'is in one image']\"]"}
{"id": "NLVR2_dev_dev-991-0-1", "input": "If at least one panda is sitting near a fallen branch on the ground.", "output": "[\"SELECT['pandas']\", \"SELECT['branch']\", \"FILTER['#2', 'that has fallen']\", \"SELECT['the ground']\", \"FILTER['#3', 'on #4']\", \"FILTER['#1', 'sitting near #5']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-991-1-0", "input": "If each image contains one panda grasping some kind of stalk, and the left image features an open-mouthed camera-facing panda chewing on a green stalk.", "output": "[\"SELECT['pandas']\", \"SELECT['stalks']\", \"FILTER['#1', 'that are grasping #2']\", \"SELECT['images']\", \"GROUP['count', '#3', '#4']\", \"COMPARATIVE['#4', '#5', 'is equal to one']\", \"AGGREGATE['count', '#4']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is equal to #8']\", \"SELECT['left image']\", \"FILTER['#1', 'that is in']\", \"FILTER['#11', 'that is open-mouthed']\", \"FILTER['#12', 'that is camera-facing']\", \"FILTER['#2', 'that is green']\", \"BOOLEAN['#13', 'is chewing on #14']\", \"BOOLEAN['logical_and', 'true', '#9', '#15']\"]"}
{"id": "NLVR2_dev_dev-99-2-1", "input": "If the dog in the image on the right is facing toward the right.", "output": "[\"SELECT['right image']\", \"PROJECT['dog of #REF', '#1']\", \"BOOLEAN['#2', 'is facing toward the right']\"]"}
{"id": "NLVR2_dev_dev-992-2-0", "input": "If at least one of the bottles is wrapped in a wet looking paper towel.", "output": "[\"SELECT['bottles']\", \"SELECT['paper towel']\", \"FILTER['#2', 'that is wet looking']\", \"FILTER['#1', 'that is wrapped in #3']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-992-2-1", "input": "If a bottle is wrapped in paper.", "output": "[\"SELECT['bottle']\", \"SELECT['paper']\", \"BOOLEAN['#1', 'is wrapped in #2']\"]"}
{"id": "NLVR2_dev_dev-993-3-0", "input": "If there is a large monitor with a blue screen.", "output": "[\"SELECT['monitor']\", \"PROJECT['screen of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is blue']\", \"BOOLEAN['#3', 'is large']\"]"}
{"id": "NLVR2_dev_dev-994-1-0", "input": "If there are at most 3 zebras in the image on the left.", "output": "[\"SELECT['the image on the left']\", \"PROJECT['zebras in #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is at most 3']\"]"}
{"id": "NLVR2_dev_dev-994-2-1", "input": "If each image in the pair shows more than five zebras.", "output": "[\"SELECT['zebras']\", \"SELECT['images']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is higher than five']\", \"AGGREGATE['count', '#4']\", \"BOOLEAN['#5', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-995-1-1", "input": "If one of the boats appears to be facing forward, the other does not.", "output": "[\"SELECT['boats']\", \"FILTER['#1', 'that appears to be facing forward']\", \"DISCARD['#1', '#2']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to one']\", \"BOOLEAN['#5', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#6', '#7']\"]"}
{"id": "NLVR2_dev_dev-995-3-0", "input": "If two boats are pointed right.", "output": "[\"SELECT['boats']\", \"FILTER['#1', 'that are pointed right']\", \"AGGREGATE['count', '#2']\", \"BOOLEAN['#3', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-996-0-1", "input": "If the left and right image contains a total of two green canopies.", "output": "[\"SELECT['left image']\", \"PROJECT['canopies of #REF', '#1']\", \"FILTER['#2', 'that are green']\", \"AGGREGATE['count', '#3']\", \"SELECT['right image']\", \"PROJECT['canopies of #REF', '#5']\", \"FILTER['#6', 'that are green']\", \"AGGREGATE['count', '#7']\", \"ARITHMETIC['sum', '#4', '#8']\", \"BOOLEAN['#9', 'is equal to two']\"]"}
{"id": "NLVR2_dev_dev-996-3-0", "input": "If the canopy in both images is partially open.", "output": "[\"SELECT['both images']\", \"PROJECT['canopy of #REF', '#1']\", \"BOOLEAN['#2', 'is partially open']\"]"}
{"id": "NLVR2_dev_dev-997-0-1", "input": "If a man is on his boat in the water in one of the images, and the man is near his boat on land in the other.", "output": "[\"SELECT['one image']\", \"PROJECT['man in #REF', '#1']\", \"PROJECT['boat in #REF', '#1']\", \"PROJECT['the water in #REF', '#1']\", \"FILTER['#3', 'in #4']\", \"BOOLEAN['#2', 'is on #5']\", \"SELECT['the other image']\", \"PROJECT['man in #REF', '#7']\", \"PROJECT['boat in #REF', '#7']\", \"PROJECT['land in #REF', '#7']\", \"FILTER['#9', 'on #10']\", \"BOOLEAN['#8', 'is near #11']\", \"BOOLEAN['logical_and', 'true', '#6', '#12']\"]"}
{"id": "NLVR2_dev_dev-997-1-0", "input": "If the left and right image contains the same number of boats with one sitting on the grass.", "output": "[\"SELECT['the left image']\", \"SELECT['the right image']\", \"PROJECT['boats in #REF', '#1']\", \"PROJECT['boats in #REF', '#2']\", \"PROJECT['the grass in #REF', '#1']\", \"PROJECT['the grass in #REF', '#2']\", \"FILTER['#3', 'sitting on #5']\", \"FILTER['#4', 'sitting on #6']\", \"AGGREGATE['count', '#3']\", \"AGGREGATE['count', '#4']\", \"AGGREGATE['count', '#7']\", \"AGGREGATE['count', '#8']\", \"BOOLEAN['#9', 'is equal to #10']\", \"ARITHMETIC['sum', '#11', '#12']\", \"BOOLEAN['#14', 'is equal to one']\", \"BOOLEAN['logical_and', 'true', '#13', '#15']\"]"}
{"id": "NLVR2_dev_dev-998-2-1", "input": "If in at least one image there is a single jellyfish with it cap  toward the top.", "output": "[\"SELECT['jellyfish']\", \"PROJECT['cap of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is toward the top']\", \"PROJECT['images of #REF', '#3']\", \"GROUP['count', '#3', '#4']\", \"COMPARATIVE['#4', '#5', 'is equal to one']\", \"AGGREGATE['count', '#6']\", \"BOOLEAN['#7', 'is at least one']\"]"}
{"id": "NLVR2_dev_dev-999-2-1", "input": "If the bananas do not have a produce sticker on them.", "output": "[\"SELECT['bananas']\", \"SELECT['produce sticker']\", \"FILTER['#1', 'that has #2 on']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is equal to zero']\"]"}
{"id": "NLVR2_dev_dev-999-3-0", "input": "If there are bananas with stickers on them", "output": "[\"SELECT['bananas']\", \"SELECT['stickers']\", \"FILTER['#1', 'that have on #2']\", \"AGGREGATE['count', '#3']\", \"BOOLEAN['#4', 'is at least one']\"]"}
{"id": "SPIDER_dev_0", "input": "How many singers do we have?", "output": "[\"SELECT['singers']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "SPIDER_dev_1", "input": "What is the total number of singers?", "output": "[\"SELECT['singers']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "SPIDER_dev_10", "input": "Show all countries and the number of singers in each country.", "output": "[\"SELECT['countries']\", \"PROJECT['singers in #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"UNION['#1', '#3']\"]"}
{"id": "SPIDER_dev_100", "input": "What is the name of the different car makers who produced a car in 1970?", "output": "[\"SELECT['different car makers']\", \"FILTER['#1', 'who produced a car']\", \"FILTER['#2', 'in 1970']\", \"PROJECT['the name of #REF', '#3']\"]"}
{"id": "SPIDER_dev_101", "input": "Find the make and production time of the cars that were produced in the earliest year?", "output": "[\"SELECT['cars']\", \"PROJECT['years #REF were produced', '#1']\", \"COMPARATIVE['#1', '#2', 'is the earliest']\", \"PROJECT['make of #REF', '#3']\", \"PROJECT['production time of #REF', '#3']\", \"UNION['#4', '#5']\"]"}
{"id": "SPIDER_dev_102", "input": "What is the maker of the cars produced in the earliest year and what year was it?", "output": "[\"SELECT['cars']\", \"PROJECT['years #REF was produced', '#1']\", \"PROJECT['the earliest #REF', '#2']\", \"COMPARATIVE['#1', '#2', 'is #3']\", \"PROJECT['the maker of #REF', '#4']\", \"UNION['#5', '#3']\"]"}
{"id": "SPIDER_dev_103", "input": "Which distinct car models are the produced after 1980?", "output": "[\"SELECT['car models']\", \"FILTER['#1', 'produced after 1980']\", \"PROJECT['distinct #REF', '#2']\"]"}
{"id": "SPIDER_dev_104", "input": "What are the different models for the cars produced after 1980?", "output": "[\"SELECT['cars']\", \"FILTER['#1', 'produced after 1980']\", \"PROJECT['different models of #REF', '#2']\"]"}
{"id": "SPIDER_dev_105", "input": "How many car makers are there in each continents? List the continent name and the count.", "output": "[\"SELECT['continents']\", \"PROJECT['car makers on #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"UNION['#1', '#3']\"]"}
{"id": "SPIDER_dev_106", "input": "What is the name of each continent and how many car makers are there in each one?", "output": "[\"SELECT['continents']\", \"PROJECT['names of #REF', '#1']\", \"PROJECT['car makers of #REF', '#1']\", \"GROUP['count', '#3', '#1']\", \"UNION['#2', '#4']\"]"}
{"id": "SPIDER_dev_107", "input": "Which of the countries has the most car makers? List the country name.", "output": "[\"SELECT['countries']\", \"PROJECT['car makers in #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"SUPERLATIVE['max', '#1', '#3']\", \"PROJECT['name of #REF', '#4']\"]"}
{"id": "SPIDER_dev_108", "input": "What is the name of the country with the most car makers?", "output": "[\"SELECT['car makers']\", \"PROJECT['countries of #REF', '#1']\", \"GROUP['count', '#1', '#2']\", \"COMPARATIVE['#2', '#3', 'is the highest']\", \"PROJECT['the name of #REF', '#4']\"]"}
{"id": "SPIDER_dev_109", "input": "How many car models are produced by each maker? Only list the count and the maker full name.", "output": "[\"SELECT['makers']\", \"PROJECT['car models produced by #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"PROJECT['full name of #REF', '#1']\", \"UNION['#3', '#4']\"]"}
{"id": "SPIDER_dev_11", "input": "How many singers are from each country?", "output": "[\"SELECT['countries']\", \"PROJECT['singers from #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"UNION['#1', '#3']\"]"}
{"id": "SPIDER_dev_110", "input": "What is the number of car models that are produced by each maker and what is the id and full name of each maker?", "output": "[\"SELECT['car makers']\", \"PROJECT['car models of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"PROJECT['ids of #REF', '#1']\", \"PROJECT['full names of #REF', '#1']\", \"UNION['#3', '#4', '#5']\"]"}
{"id": "SPIDER_dev_111", "input": "What is the accelerate of the car make amc hornet sportabout (sw)?", "output": "[\"SELECT['car']\", \"FILTER['#1', 'that is make is amc hornet sportabout sw']\", \"PROJECT['accelerate of #REF', '#2']\"]"}
{"id": "SPIDER_dev_112", "input": "How much does the car accelerate that makes amc hornet sportabout (sw)?", "output": "[\"SELECT['the amc hornet sportabout ( sw )']\", \"PROJECT['how much #REF accelerates', '#1']\"]"}
{"id": "SPIDER_dev_113", "input": "How many car makers are there in france?", "output": "[\"SELECT['car makers']\", \"FILTER['#1', 'in france']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "SPIDER_dev_114", "input": "What is the number of makers of cars in France?", "output": "[\"SELECT['cars']\", \"PROJECT['makers of #REF', '#1']\", \"FILTER['#2', 'that are in France']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "SPIDER_dev_115", "input": "How many car models are produced in the usa?", "output": "[\"SELECT['car models']\", \"FILTER['#1', 'produced in the usa']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "SPIDER_dev_116", "input": "What is the count of the car models produced in the United States?", "output": "[\"SELECT['car models']\", \"FILTER['#1', 'produced in the United States']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "SPIDER_dev_117", "input": "What is the average miles per gallon(mpg) of the cars with 4 cylinders?", "output": "[\"SELECT['cars']\", \"SELECT['cylinders']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is 4']\", \"PROJECT['miles per gallon of #REF', '#4']\", \"AGGREGATE['avg', '#5']\"]"}
{"id": "SPIDER_dev_118", "input": "What is the average miles per gallon of all the cars with 4 cylinders?", "output": "[\"SELECT['cars']\", \"PROJECT['cylinders of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is 4']\", \"PROJECT['miles per gallon of #REF', '#4']\", \"AGGREGATE['avg', '#5']\"]"}
{"id": "SPIDER_dev_119", "input": "What is the smallest weight of the car produced with 8 cylinders on 1974?", "output": "[\"SELECT['car']\", \"SELECT['cylinders']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is 8']\", \"FILTER['#4', 'on 1974']\", \"PROJECT['weight of #REF', '#5']\", \"AGGREGATE['min', '#6']\"]"}
{"id": "SPIDER_dev_12", "input": "List all song names by singers above the average age.", "output": "[\"SELECT['singers']\", \"PROJECT['ages of #REF', '#1']\", \"AGGREGATE['avg', '#2']\", \"COMPARATIVE['#1', '#2', 'is higher than #3']\", \"PROJECT['songs of #REF', '#4']\", \"PROJECT['names of #REF', '#5']\"]"}
{"id": "SPIDER_dev_120", "input": "What is the minimum weight of the car with 8 cylinders produced in 1974?", "output": "[\"SELECT['car']\", \"SELECT['cylinder']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is 8']\", \"FILTER['#4', 'produced in 1974']\", \"PROJECT['weight of #REF', '#5']\", \"PROJECT['#REF', '#6']\", \"GROUP['min', '#7', '#6']\", \"UNION['#6', '#8']\"]"}
{"id": "SPIDER_dev_121", "input": "What are all the makers and models?", "output": "[\"SELECT['models']\", \"PROJECT['makers of #REF', '#1']\", \"UNION['#1', '#2']\"]"}
{"id": "SPIDER_dev_122", "input": "What are the makers and models?", "output": "[\"SELECT['makers']\", \"SELECT['models']\", \"UNION['#1', '#2']\"]"}
{"id": "SPIDER_dev_123", "input": "What are the countries having at least one car maker? List name and id.", "output": "[\"SELECT['countries']\", \"PROJECT['car makers in #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is at least one']\", \"PROJECT['names of #REF', '#4']\", \"PROJECT['ids of #REF', '#4']\", \"UNION['#5', '#6']\"]"}
{"id": "SPIDER_dev_124", "input": "What are the names and ids of all countries with at least one car maker?", "output": "[\"SELECT['countries']\", \"FILTER['#1', 'with car maker']\", \"PROJECT['names of #REF', '#2']\", \"PROJECT['ids of #REF', '#2']\", \"UNION['#3', '#4']\"]"}
{"id": "SPIDER_dev_125", "input": "What is the number of the cars with horsepower more than 150?", "output": "[\"SELECT['cars']\", \"PROJECT['horsepower of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is higher than 150']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "SPIDER_dev_126", "input": "What is the number of cars with a horsepower greater than 150?", "output": "[\"SELECT['cars']\", \"PROJECT['horsepower of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is higher than 150']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "SPIDER_dev_127", "input": "What is the average weight of cars each year?", "output": "[\"SELECT['cars']\", \"PROJECT['years of #REF', '#1']\", \"PROJECT['weights of #REF', '#1']\", \"GROUP['avg', '#3', '#2']\", \"UNION['#2', '#4']\"]"}
{"id": "SPIDER_dev_128", "input": "What is the average weight and year for each year?", "output": "[\"SELECT['years']\", \"PROJECT['weights of #REF', '#1']\", \"GROUP['avg', '#2', '#1']\", \"UNION['#1', '#3']\"]"}
{"id": "SPIDER_dev_129", "input": "Which countries in europe have at least 3 car manufacturers?", "output": "[\"SELECT['countries']\", \"FILTER['#1', 'in europe']\", \"PROJECT['car manufacturers in #REF', '#2']\", \"GROUP['count', '#3', '#2']\", \"COMPARATIVE['#2', '#4', 'is at least 3']\"]"}
{"id": "SPIDER_dev_13", "input": "What are all the song names by singers who are older than average?", "output": "[\"SELECT['singers']\", \"FILTER['#1', 'who are older than average']\", \"PROJECT['songs of #REF', '#2']\", \"PROJECT['names of #REF', '#3']\"]"}
{"id": "SPIDER_dev_130", "input": "What are the names of all European countries with at least 3 manufacturers?", "output": "[\"SELECT['European countries']\", \"PROJECT['manufacturers in #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is at least 3']\", \"PROJECT['names of #REF', '#4']\"]"}
{"id": "SPIDER_dev_131", "input": "What is the maximum horsepower and the make of the car models with 3 cylinders?", "output": "[\"SELECT['car models']\", \"PROJECT['cylinders of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is 3']\", \"PROJECT['horsepower of #REF', '#4']\", \"GROUP['max', '#5', '#4']\", \"PROJECT['make of #REF', '#4']\", \"UNION['#6', '#7']\"]"}
{"id": "SPIDER_dev_132", "input": "What is the largest amount of horsepower for the models with 3 cylinders and what make is it?", "output": "[\"SELECT['models']\", \"FILTER['#1', 'with 3 cylinders']\", \"PROJECT['horsepowers of #REF', '#2']\", \"AGGREGATE['max', '#3']\", \"COMPARATIVE['#2', '#3', 'is #4']\", \"PROJECT['the make of #REF', '#5']\", \"UNION['#4', '#6']\"]"}
{"id": "SPIDER_dev_133", "input": "Which model saves the most gasoline? That is to say, have the maximum miles per gallon.", "output": "[\"SELECT['models']\", \"PROJECT['miles per gallon of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is the highest']\"]"}
{"id": "SPIDER_dev_134", "input": "What is the car model with the highest mpg?", "output": "[\"SELECT['car models']\", \"PROJECT['mpg of #REF', '#1']\", \"SUPERLATIVE['max', '#1', '#2']\"]"}
{"id": "SPIDER_dev_135", "input": "What is the average horsepower of the cars before 1980?", "output": "[\"SELECT['cars']\", \"FILTER['#1', 'before 1980']\", \"PROJECT['horsepower of #REF', '#2']\", \"AGGREGATE['avg', '#3']\"]"}
{"id": "SPIDER_dev_136", "input": "What is the average horsepower for all cars produced before 1980?", "output": "[\"SELECT['cars']\", \"FILTER['#1', 'produced before 1980']\", \"PROJECT['horsepower of #REF', '#2']\", \"AGGREGATE['avg', '#3']\"]"}
{"id": "SPIDER_dev_137", "input": "What is the average edispl of the cars of model volvo?", "output": "[\"SELECT['cars']\", \"FILTER['#1', 'of model volvo']\", \"PROJECT['the edispl of #REF', '#2']\", \"AGGREGATE['avg', '#3']\"]"}
{"id": "SPIDER_dev_138", "input": "What is the average edispl for all volvos?", "output": "[\"SELECT['volvos']\", \"PROJECT['edispl of #REF', '#1']\", \"AGGREGATE['avg', '#2']\"]"}
{"id": "SPIDER_dev_139", "input": "What is the maximum accelerate for different number of cylinders?", "output": "[\"SELECT['different numbers of cylinders']\", \"PROJECT['accelerates of #REF', '#1']\", \"GROUP['max', '#2', '#1']\", \"UNION['#1', '#3']\"]"}
{"id": "SPIDER_dev_14", "input": "Show location and name for all stadiums with a capacity between 5000 and 10000.", "output": "[\"SELECT['stadiums']\", \"PROJECT['capacities of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is at least 5000']\", \"COMPARATIVE['#1', '#2', 'is at most 10000']\", \"INTERSECTION['#1', '#3', '#4']\", \"PROJECT['locations of #REF', '#5']\", \"PROJECT['names of #REF', '#5']\", \"UNION['#6', '#7']\"]"}
{"id": "SPIDER_dev_140", "input": "What is the maximum accelerate for all the different cylinders?", "output": "[\"SELECT['different cylinders']\", \"PROJECT['accelerate of #REF', '#1']\", \"AGGREGATE['max', '#2']\"]"}
{"id": "SPIDER_dev_141", "input": "Which model has the most version(make) of cars?", "output": "[\"SELECT['cars']\", \"SELECT['models']\", \"PROJECT['version of #REF', '#1']\", \"GROUP['count', '#3', '#2']\", \"SUPERLATIVE['max', '#2', '#4']\"]"}
{"id": "SPIDER_dev_142", "input": "What model has the most different versions?", "output": "[\"SELECT['models']\", \"PROJECT['different versions of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"SUPERLATIVE['max', '#1', '#3']\"]"}
{"id": "SPIDER_dev_143", "input": "How many cars have more than 4 cylinders?", "output": "[\"SELECT['cars']\", \"PROJECT['cylinders', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is more than 4']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "SPIDER_dev_144", "input": "What is the number of cars with more than 4 cylinders?", "output": "[\"SELECT['cars']\", \"PROJECT['cylinders of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is higher than 4']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "SPIDER_dev_145", "input": "how many cars were produced in 1980?", "output": "[\"SELECT['cars']\", \"FILTER['#1', 'that were produced in 1980']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "SPIDER_dev_146", "input": "In 1980, how many cars were made?", "output": "[\"SELECT['cars']\", \"FILTER['#1', 'made in 1980']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "SPIDER_dev_147", "input": "How many car models were produced by the maker with full name American Motor Company?", "output": "[\"SELECT['makers']\", \"PROJECT['full names of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is American Motor Company']\", \"PROJECT['car models produced by #REF', '#3']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "SPIDER_dev_148", "input": "What is the number of car models created by the car maker American Motor Company?", "output": "[\"SELECT['car models']\", \"FILTER['#1', 'created by the car maker American Motor Company']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "SPIDER_dev_149", "input": "Which makers designed more than 3 car models? List full name and the id.", "output": "[\"SELECT['makers']\", \"PROJECT['cars models of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is higher than 3']\", \"PROJECT['full names of #REF', '#4']\", \"PROJECT['ids of #REF', '#4']\", \"UNION['#5', '#6']\"]"}
{"id": "SPIDER_dev_15", "input": "What are the locations and names of all stadiums with capacity between 5000 and 10000?", "output": "[\"SELECT['stadiums']\", \"PROJECT['capacities of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is at least 5000']\", \"COMPARATIVE['#1', '#2', 'is at most 10000']\", \"INTERSECTION['#1', '#3', '#4']\", \"PROJECT['locations of #REF', '#5']\", \"PROJECT['names of #REF', '#5']\", \"UNION['#6', '#7']\"]"}
{"id": "SPIDER_dev_150", "input": "What are the names and ids of all makers with more than 3 models?", "output": "[\"SELECT['makers']\", \"PROJECT['models of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is higher than 3']\", \"PROJECT['names of #REF', '#4']\", \"PROJECT['ids of #REF', '#4']\", \"UNION['#5', '#6']\"]"}
{"id": "SPIDER_dev_151", "input": "Which distinctive models are produced by maker with the full name General Motors or weighing more than 3500?", "output": "[\"SELECT['distinctive models']\", \"FILTER['#1', 'which are produced by maker with the full name General Motors']\", \"FILTER['#1', 'weighing more than 3500']\", \"UNION['#2', '#3']\"]"}
{"id": "SPIDER_dev_152", "input": "What are the different models created by either the car maker General Motors or weighed more than 3500?", "output": "[\"SELECT['models']\", \"FILTER['#1', 'created by General Motors']\", \"FILTER['#1', 'that weighed more than 3500']\", \"UNION['#2', '#3']\", \"PROJECT['different #REF', '#4']\"]"}
{"id": "SPIDER_dev_153", "input": "In which years cars were produced weighing no less than 3000 and no more than 4000?", "output": "[\"SELECT['cars']\", \"SELECT['weigh of cars']\", \"COMPARATIVE['#1', '#2', 'at least 3000']\", \"COMPARATIVE['#3', '#2', 'at most 4000']\", \"PROJECT['years produced of #REF', '#4']\"]"}
{"id": "SPIDER_dev_154", "input": "What are the different years in which there were cars produced that weighed less than 4000 and also cars that weighted more than 3000?", "output": "[\"SELECT['cars']\", \"PROJECT['weight of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is lower than 4000']\", \"COMPARATIVE['#1', '#2', 'is higher than 3000']\", \"SELECT['the different years produced']\", \"INTERSECTION['#5', '#3', '#4']\"]"}
{"id": "SPIDER_dev_155", "input": "What is the horsepower of the car with the largest accelerate?", "output": "[\"SELECT['car']\", \"PROJECT['accelerate of #REF', '#1']\", \"SUPERLATIVE['max', '#1', '#2']\", \"PROJECT['horsepower of #REF', '#3']\"]"}
{"id": "SPIDER_dev_156", "input": "What is the horsepower of the car with the greatest accelerate?", "output": "[\"SELECT['cars']\", \"PROJECT['accelerate of #REF', '#1']\", \"SUPERLATIVE['max', '#1', '#2']\", \"PROJECT['horsepower of #REF', '#3']\"]"}
{"id": "SPIDER_dev_157", "input": "For model volvo, how many cylinders does the car with the least accelerate have?", "output": "[\"SELECT['cars']\", \"PROJECT['models of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is volvo']\", \"PROJECT['accelerate of #REF', '#3']\", \"SUPERLATIVE['min', '#3', '#4']\", \"PROJECT['cylinders of #REF', '#5']\", \"AGGREGATE['count', '#6']\"]"}
{"id": "SPIDER_dev_158", "input": "For a volvo model, how many cylinders does the version with least accelerate have?", "output": "[\"SELECT['volvo models']\", \"PROJECT['versions of #REF', '#1']\", \"PROJECT['accelerate of #REF', '#2']\", \"SUPERLATIVE['min', '#2', '#3']\", \"PROJECT['cylinders of #REF', '#4']\", \"AGGREGATE['count', '#5']\"]"}
{"id": "SPIDER_dev_159", "input": "How many cars have a larger accelerate than the car with the largest horsepower?", "output": "[\"SELECT['cars']\", \"PROJECT['horsepower of #REF', '#1']\", \"SUPERLATIVE['max', '#1', '#2']\", \"PROJECT['accelerate of #REF', '#1']\", \"PROJECT['accelerate of #REF', '#3']\", \"COMPARATIVE['#1', '#4', 'is higher than #5']\", \"AGGREGATE['count', '#6']\"]"}
{"id": "SPIDER_dev_16", "input": "What is the maximum capacity and the average of all stadiums?", "output": "[\"SELECT['stadiums']\", \"PROJECT['capacities of #REF', '#1']\", \"AGGREGATE['max', '#2']\", \"AGGREGATE['avg', '#2']\", \"UNION['#3', '#4']\"]"}
{"id": "SPIDER_dev_160", "input": "What is the number of cars with a greater accelerate than the one with the most horsepower?", "output": "[\"SELECT['cars']\", \"PROJECT['horsepower of #REF', '#1']\", \"SUPERLATIVE['max', '#1', '#2']\", \"PROJECT['accelerate of #REF', '#1']\", \"PROJECT['accelerate of #REF', '#3']\", \"COMPARATIVE['#1', '#4', 'is higher than #5']\", \"AGGREGATE['count', '#6']\"]"}
{"id": "SPIDER_dev_161", "input": "How many countries has more than 2 car makers?", "output": "[\"SELECT['countries']\", \"PROJECT['car makers of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is more than 2']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "SPIDER_dev_162", "input": "What is the number of countries with more than 2 car makers?", "output": "[\"SELECT['countries']\", \"PROJECT['car makers of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is higher than 2']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "SPIDER_dev_163", "input": "How many cars has over 6 cylinders?", "output": "[\"SELECT['cars']\", \"PROJECT['cylinders of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is higher than 6']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "SPIDER_dev_164", "input": "What is the number of cars with over 6 cylinders?", "output": "[\"SELECT['cars']\", \"PROJECT['cylinders of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is more than 6']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "SPIDER_dev_165", "input": "For the cars with 4 cylinders, which model has the largest horsepower?", "output": "[\"SELECT['cars']\", \"PROJECT['cylinders of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is 4']\", \"PROJECT['models of #REF', '#4']\", \"PROJECT['horsepower of #REF', '#5']\", \"SUPERLATIVE['max', '#5', '#6']\"]"}
{"id": "SPIDER_dev_166", "input": "For all of the 4 cylinder cars, which model has the most horsepower?", "output": "[\"SELECT['cars']\", \"PROJECT['cylinders of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is 4']\", \"PROJECT['horsepower of #REF', '#4']\"]"}
{"id": "SPIDER_dev_167", "input": "Among the cars with more than lowest horsepower, which ones do not have more than 3 cylinders? List the car makeid and make name.", "output": "[\"SELECT['cars']\", \"PROJECT['horsepower of #REF', '#1']\", \"SUPERLATIVE['min', '#1', '#2']\", \"DISCARD['#1', '#3']\", \"PROJECT['cylinders of #REF', '#4']\", \"GROUP['count', '#5', '#4']\", \"COMPARATIVE['#4', '#6', 'is at most 3']\", \"PROJECT['makeids of #REF', '#7']\", \"PROJECT['make names of #REF', '#7']\", \"UNION['#8', '#9']\"]"}
{"id": "SPIDER_dev_168", "input": "Among the cars that do not have the minimum horsepower, what are the make ids and names of all those with less than 4 cylinders?", "output": "[\"SELECT['cars']\", \"PROJECT['horsepowers of #REF', '#1']\", \"AGGREGATE['min', '#2']\", \"COMPARATIVE['#1', '#2', 'is higher than #3']\", \"PROJECT['cylinders of #REF', '#4']\", \"COMPARATIVE['#4', '#5', 'is lower than 4']\", \"PROJECT['make ids of #REF', '#6']\", \"PROJECT['names of #REF', '#6']\", \"UNION['#7', '#8']\"]"}
{"id": "SPIDER_dev_169", "input": "What is the maximum miles per gallon of the car with 8 cylinders or produced before 1980?", "output": "[\"SELECT['cars']\", \"FILTER['#1', 'with 8 cylinders']\", \"FILTER['#1', 'produced before 1980']\", \"UNION['#2', '#3']\", \"PROJECT['miles per gallon of #REF', '#4']\", \"AGGREGATE['max', '#5']\"]"}
{"id": "SPIDER_dev_17", "input": "What is the average and maximum capacities for all stadiums?", "output": "[\"SELECT['stadiums']\", \"PROJECT['capacities of #REF', '#1']\", \"AGGREGATE['avg', '#2']\", \"AGGREGATE['max', '#2']\", \"UNION['#3', '#4']\"]"}
{"id": "SPIDER_dev_170", "input": "What is the maximum mpg of the cars that had 8 cylinders or that were produced before 1980?", "output": "[\"SELECT['cars']\", \"FILTER['#1', 'that had 8 cylinders']\", \"FILTER['#1', 'that were produced before 1980']\", \"UNION['#2', '#3']\", \"PROJECT['mpg of #REF', '#4']\", \"AGGREGATE['max', '#5']\"]"}
{"id": "SPIDER_dev_171", "input": "Which models are lighter than 3500 but not built by the 'Ford Motor Company'?", "output": "[\"SELECT['models']\", \"FILTER['#1', 'lighter than 3500']\", \"FILTER['#1', 'not built by Ford Motor Company']\", \"INTERSECTION['#1', '#2', '#3']\"]"}
{"id": "SPIDER_dev_172", "input": "What are the different models wthat are lighter than 3500 but were not built by the Ford Motor Company?", "output": "[\"SELECT['models']\", \"PROJECT['size of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is lighter than 3500']\", \"FILTER['#3', 'built by Ford Motor Company']\", \"DISCARD['#3', '#4']\"]"}
{"id": "SPIDER_dev_173", "input": "What are the name of the countries where there is not a single car maker?", "output": "[\"SELECT['countries']\", \"FILTER['#1', 'with car maker']\", \"DISCARD['#1', '#2']\", \"PROJECT['name of #REF', '#3']\"]"}
{"id": "SPIDER_dev_174", "input": "What are the names of the countries with no car makers?", "output": "[\"SELECT['countries']\", \"FILTER['#1', 'with no car makers']\", \"PROJECT['names of #REF', '#2']\"]"}
{"id": "SPIDER_dev_175", "input": "Which are the car makers which produce at least 2 models and more than 3 car makers? List the id and the maker.", "output": "[\"SELECT['car makers']\", \"PROJECT['the models that #REF produce', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is at least 2']\", \"PROJECT['the car makers that #REF produce', '#1']\", \"GROUP['count', '#5', '#1']\", \"COMPARATIVE['#1', '#6', 'is more than 3']\", \"INTERSECTION['#1', '#4', '#7']\", \"PROJECT['the ids of #REF', '#8']\", \"UNION['#8', '#9']\"]"}
{"id": "SPIDER_dev_176", "input": "What are the ids and makers of all car makers that produce at least 2 models and make more than 3 cars?", "output": "[\"SELECT['car makers']\", \"PROJECT['models of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is at least 2']\", \"PROJECT['cars that #REF make', '#4']\", \"GROUP['count', '#5', '#4']\", \"COMPARATIVE['#4', '#6', 'is higher than 3']\", \"PROJECT['ids of #REF', '#7']\", \"PROJECT['makers of #REF', '#7']\", \"UNION['#8', '#9']\"]"}
{"id": "SPIDER_dev_177", "input": "What are the id and names of the countries which have more than 3 car makers or produce the 'fiat' model?", "output": "[\"SELECT['countries']\", \"PROJECT['car makers of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is higher than 3']\", \"PROJECT['models #REF produce', '#1']\", \"COMPARATIVE['#1', '#5', 'is fiat']\", \"UNION['#4', '#6']\", \"PROJECT['ids of #REF', '#7']\", \"PROJECT['names of #REF', '#7']\", \"UNION['#8', '#9']\"]"}
{"id": "SPIDER_dev_178", "input": "What are the ids and names of all countries that either have more than 3 car makers or produce fiat model?", "output": "[\"SELECT['countries']\", \"PROJECT['makers', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is more than 3']\", \"FILTER['#1', 'that produce fiat model']\", \"UNION['#4', '#5']\", \"PROJECT['the ids of #REF', '#6']\", \"PROJECT['the names of #REF', '#6']\", \"UNION['#7', '#8']\"]"}
{"id": "SPIDER_dev_179", "input": "Which country does Airline \"JetBlue Airways\" belong to?", "output": "[\"SELECT['Airline JetBlue Airways']\", \"PROJECT['Which country does #REF belong to', '#1']\"]"}
{"id": "SPIDER_dev_18", "input": "What is the name and capacity for the stadium with highest average attendance?", "output": "[\"SELECT['stadiums']\", \"PROJECT['attendances of #REF', '#1']\", \"GROUP['avg', '#2', '#1']\", \"SUPERLATIVE['max', '#1', '#3']\", \"PROJECT['name of #REF', '#4']\", \"PROJECT['capacity of #REF', '#4']\", \"UNION['#5', '#6']\"]"}
{"id": "SPIDER_dev_180", "input": "What country is Jetblue Airways affiliated with?", "output": "[\"SELECT['Jetblue Airways']\", \"PROJECT['country #REF is affiliated with', '#1']\"]"}
{"id": "SPIDER_dev_181", "input": "What is the abbreviation of Airline \"JetBlue Airways\"?", "output": "[\"SELECT['abbreviations']\", \"FILTER['#1', 'of Airline JetBlue Airways']\"]"}
{"id": "SPIDER_dev_182", "input": "Which abbreviation corresponds to Jetblue Airways?", "output": "[\"SELECT['Jetblue Airways']\", \"PROJECT['abbreviation of #REF', '#1']\"]"}
{"id": "SPIDER_dev_183", "input": "List all airline names and their abbreviations in \"USA\".", "output": "[\"SELECT['airlines']\", \"PROJECT['names of #REF', '#1']\", \"PROJECT['abbreviations of #REF', '#2']\", \"UNION['#2', '#3']\", \"FILTER['#4', 'in USA']\"]"}
{"id": "SPIDER_dev_184", "input": "What are the airline names and abbreviations for airlines in the USA?", "output": "[\"SELECT['airlines']\", \"FILTER['#1', 'in the USA']\", \"PROJECT['names of #REF', '#2']\", \"PROJECT['abbreviations of #REF', '#2']\", \"UNION['#3', '#4']\"]"}
{"id": "SPIDER_dev_185", "input": "List the airport code and name in the city of Anthony.", "output": "[\"SELECT['airports']\", \"FILTER['#1', 'in the city of Anthony']\", \"PROJECT['airport code of #REF', '#2']\", \"PROJECT['airport name of #REF', '#2']\", \"UNION['#3', '#4']\"]"}
{"id": "SPIDER_dev_186", "input": "Give the airport code and airport name corresonding to the city Anthony.", "output": "[\"SELECT['Anthony']\", \"PROJECT['airport code of #REF', '#1']\", \"PROJECT['airport name of #REF', '#1']\", \"UNION['#2', '#3']\"]"}
{"id": "SPIDER_dev_187", "input": "How many airlines do we have?", "output": "[\"SELECT['airlines']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "SPIDER_dev_189", "input": "How many airports do we have?", "output": "[\"SELECT['airports']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "SPIDER_dev_19", "input": "What is the name and capacity for the stadium with the highest average attendance?", "output": "[\"SELECT['stadiums']\", \"PROJECT['attendances of #REF', '#1']\", \"GROUP['avg', '#2', '#1']\", \"SUPERLATIVE['max', '#1', '#3']\", \"PROJECT['name of #REF', '#4']\", \"PROJECT['capacity of #REF', '#4']\", \"UNION['#5', '#6']\"]"}
{"id": "SPIDER_dev_190", "input": "Return the number of  airports.", "output": "[\"SELECT['airports']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "SPIDER_dev_192", "input": "Return the number of flights.", "output": "[\"SELECT['flights']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "SPIDER_dev_193", "input": "Which airline has abbreviation 'UAL'?", "output": "[\"SELECT['airlines']\", \"PROJECT['abbreviation of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is UAL']\"]"}
{"id": "SPIDER_dev_194", "input": "Give the airline with abbreviation 'UAL'.", "output": "[\"SELECT['airlines']\", \"PROJECT['abbreviations of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is UAL']\"]"}
{"id": "SPIDER_dev_195", "input": "How many airlines are from USA?", "output": "[\"SELECT['airlines']\", \"FILTER['#1', 'from USA']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "SPIDER_dev_196", "input": "Return the number of airlines in the USA.", "output": "[\"SELECT['airlines']\", \"FILTER['#1', 'in the USA']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "SPIDER_dev_197", "input": "Which city and country is the Alton airport at?", "output": "[\"SELECT['Alton airport']\", \"PROJECT['city of #REF', '#1']\", \"PROJECT['country of #REF', '#1']\", \"UNION['#2', '#3']\"]"}
{"id": "SPIDER_dev_198", "input": "Give the city and country for the Alton airport.", "output": "[\"SELECT['Alton airport']\", \"PROJECT['city of #REF', '#1']\", \"PROJECT['country of #REF', '#1']\", \"UNION['#2', '#3']\"]"}
{"id": "SPIDER_dev_199", "input": "What is the airport name for airport 'AKO'?", "output": "[\"SELECT['airport names']\", \"PROJECT['airports with #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is AKO']\"]"}
{"id": "SPIDER_dev_2", "input": "Show name, country, age for all singers ordered by age from the oldest to the youngest.", "output": "[\"SELECT['singers']\", \"PROJECT['names of #REF', '#1']\", \"PROJECT['countries of #REF', '#1']\", \"PROJECT['ages of #REF', '#1']\", \"UNION['#2', '#3', '#4']\", \"SORT['#5', '#4', 'from oldest to youngest']\"]"}
{"id": "SPIDER_dev_20", "input": "How many concerts are there in year 2014 or 2015?", "output": "[\"SELECT['concerts']\", \"FILTER['#1', 'in 2014']\", \"FILTER['#1', 'in 2015']\", \"UNION['#2', '#3']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "SPIDER_dev_200", "input": "Return the name of the airport with code 'AKO'.", "output": "[\"SELECT['airports']\", \"PROJECT['codes of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is AKO']\", \"PROJECT['name of #REF', '#3']\"]"}
{"id": "SPIDER_dev_201", "input": "What are airport names at City 'Aberdeen'?", "output": "[\"SELECT['Aberdeen']\", \"PROJECT['airport names at #REF', '#1']\"]"}
{"id": "SPIDER_dev_202", "input": "What are the names of airports in Aberdeen?", "output": "[\"SELECT['airports']\", \"FILTER['#1', 'in Aberdeen']\", \"PROJECT['names of #REF', '#2']\"]"}
{"id": "SPIDER_dev_203", "input": "How many flights depart from 'APG'?", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'that depart from APG']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "SPIDER_dev_204", "input": "Count the number of flights departing from 'APG'.", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'departing from APG']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "SPIDER_dev_205", "input": "How many flights have destination ATO?", "output": "[\"SELECT['flights']\", \"PROJECT['destinations of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is ATO']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "SPIDER_dev_206", "input": "Count the number of flights into ATO.", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'into ATO']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "SPIDER_dev_207", "input": "How many flights depart from City Aberdeen?", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'that depart from the City Aberdeen']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "SPIDER_dev_208", "input": "Return the number of flights departing from Aberdeen.", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'departing from Aberdeen']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "SPIDER_dev_209", "input": "How many flights arriving in Aberdeen city?", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'arriving in Aberdeen city']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "SPIDER_dev_21", "input": "How many concerts occurred in 2014 or 2015?", "output": "[\"SELECT['concerts']\", \"FILTER['#1', 'that occurred in 2014']\", \"FILTER['#1', 'that occurred in 2015']\", \"UNION['#2', '#3']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "SPIDER_dev_210", "input": "Return the number of flights arriving in Aberdeen.", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'arriving in Aberdeen']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "SPIDER_dev_211", "input": "How many flights depart from City 'Aberdeen' and have destination City 'Ashley'?", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'that depart from City Aberdeen']\", \"FILTER['#2', 'that have destination City Ashley']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "SPIDER_dev_212", "input": "How many flights fly from Aberdeen to Ashley?", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from Aberdeen']\", \"FILTER['#1', 'to Ashley']\", \"INTERSECTION['#1', '#2', '#3']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "SPIDER_dev_213", "input": "How many flights does airline 'JetBlue Airways' have?", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'of JetBlue Airways']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "SPIDER_dev_214", "input": "Give the number of Jetblue Airways flights.", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'of Jetblue Airways']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "SPIDER_dev_215", "input": "How many 'United Airlines' flights go to Airport 'ASY'?", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'on United Airlines']\", \"PROJECT['Airport #REF go to', '#2']\", \"COMPARATIVE['#2', '#3', 'is ASY']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "SPIDER_dev_216", "input": "Count the number of United Airlines flights arriving in ASY Airport.", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'of United Airlines']\", \"FILTER['#2', 'arriving in ASY Airport']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "SPIDER_dev_217", "input": "How many 'United Airlines' flights depart from Airport 'AHD'?", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'on United Airlines']\", \"PROJECT['Airport #REF depart from', '#2']\", \"COMPARATIVE['#2', '#3', 'is AHD']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "SPIDER_dev_218", "input": "Return the number of United Airlines flights leaving from AHD Airport.", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'of United Airlines']\", \"FILTER['#2', 'leaving from AHD Airport']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "SPIDER_dev_219", "input": "How many United Airlines flights go to City 'Aberdeen'?", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'on United Airlines']\", \"PROJECT['City #REF go to', '#2']\", \"COMPARATIVE['#2', '#3', 'is Aberdeen']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "SPIDER_dev_22", "input": "Show the stadium name and the number of concerts in each stadium.", "output": "[\"SELECT['stadiums']\", \"PROJECT['names of #REF', '#1']\", \"PROJECT['concerts in #REF', '#1']\", \"GROUP['count', '#3', '#1']\", \"UNION['#2', '#4']\"]"}
{"id": "SPIDER_dev_220", "input": "Count the number of United Airlines flights that arrive in Aberdeen.", "output": "[\"SELECT['United Airlines']\", \"PROJECT['flights of #REF', '#1']\", \"FILTER['#2', 'that arrive in Aberdeen']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "SPIDER_dev_221", "input": "Which city has most number of arriving flights?", "output": "[\"SELECT['cities']\", \"PROJECT['arriving flights in #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"SUPERLATIVE['max', '#1', '#3']\"]"}
{"id": "SPIDER_dev_222", "input": "Which city has the most frequent destination airport?", "output": "[\"SELECT['airports']\", \"FILTER['#1', 'that is the most frequent destination']\", \"PROJECT['city that has #REF', '#2']\"]"}
{"id": "SPIDER_dev_223", "input": "Which city has most number of departing flights?", "output": "[\"SELECT['cities']\", \"PROJECT['flights of #REF', '#1']\", \"FILTER['#2', 'that are departing']\", \"GROUP['count', '#3', '#1']\", \"SUPERLATIVE['max', '#1', '#4']\"]"}
{"id": "SPIDER_dev_224", "input": "Which city is the most frequent source airport?", "output": "[\"SELECT['airport']\", \"FILTER['#1', 'that is source']\", \"FILTER['#2', 'that is most frequent']\", \"PROJECT['city that has #REF', '#3']\"]"}
{"id": "SPIDER_dev_225", "input": "What is the code of airport that has the highest number of flights?", "output": "[\"SELECT['airports']\", \"PROJECT['flights', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is the highest']\", \"PROJECT['the code of #REF', '#4']\"]"}
{"id": "SPIDER_dev_226", "input": "What is the airport code of the airport with the most flights?", "output": "[\"SELECT['airports']\", \"PROJECT['flights of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is the highest']\", \"PROJECT['the airport code of #REF', '#4']\"]"}
{"id": "SPIDER_dev_227", "input": "What is the code of airport that has fewest number of flights?", "output": "[\"SELECT['airports']\", \"PROJECT['flights of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"SUPERLATIVE['min', '#1', '#3']\", \"PROJECT['code of #REF', '#4']\"]"}
{"id": "SPIDER_dev_228", "input": "Give the code of the airport with the least flights.", "output": "[\"SELECT['airports']\", \"PROJECT['flights of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"SUPERLATIVE['min', '#1', '#3']\", \"PROJECT['code of #REF', '#4']\"]"}
{"id": "SPIDER_dev_229", "input": "Which airline has most number of flights?", "output": "[\"SELECT['airlines']\", \"PROJECT['flights of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"SUPERLATIVE['max', '#1', '#3']\"]"}
{"id": "SPIDER_dev_23", "input": "For each stadium, how many concerts play there?", "output": "[\"SELECT['stadiums']\", \"PROJECT['concerts that play in #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"UNION['#1', '#3']\"]"}
{"id": "SPIDER_dev_230", "input": "What airline serves the most flights?", "output": "[\"SELECT['airlines']\", \"PROJECT['flights #REF serves', '#1']\", \"GROUP['count', '#2', '#1']\", \"SUPERLATIVE['max', '#1', '#3']\"]"}
{"id": "SPIDER_dev_231", "input": "Find the abbreviation and country of the airline that has fewest number of flights?", "output": "[\"SELECT['airlines']\", \"PROJECT['flights of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"SUPERLATIVE['min', '#1', '#3']\", \"PROJECT['abbreviation of #REF', '#4']\", \"PROJECT['country of #REF', '#4']\", \"UNION['#5', '#6']\"]"}
{"id": "SPIDER_dev_232", "input": "What is the abbreviation of the airline has the fewest flights and what country is it in?", "output": "[\"SELECT['airlines']\", \"PROJECT['flights of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"SUPERLATIVE['min', '#1', '#3']\", \"PROJECT['abbreviation of #REF', '#4']\", \"PROJECT['country of #REF', '#4']\", \"UNION['#5', '#6']\"]"}
{"id": "SPIDER_dev_233", "input": "What are airlines that have some flight departing from airport 'AHD'?", "output": "[\"SELECT['airlines']\", \"PROJECT['flights of #REF', '#1']\", \"PROJECT['airports #REF depart from', '#2']\", \"COMPARATIVE['#1', '#3', 'is AHD']\"]"}
{"id": "SPIDER_dev_234", "input": "Which airlines have a flight with source airport AHD?", "output": "[\"SELECT['airlines']\", \"PROJECT['flights of #REF', '#1']\", \"PROJECT['source airports of #REF', '#2']\", \"COMPARATIVE['#1', '#3', 'is AHD']\"]"}
{"id": "SPIDER_dev_235", "input": "What are airlines that have flights arriving at airport 'AHD'?", "output": "[\"SELECT['airlines']\", \"PROJECT['flights of #REF', '#1']\", \"PROJECT['airport #REF arrive at', '#2']\", \"COMPARATIVE['#1', '#3', 'is AHD']\"]"}
{"id": "SPIDER_dev_236", "input": "Which airlines have a flight with destination airport AHD?", "output": "[\"SELECT['flights']\", \"PROJECT['destination airports of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is AHD']\", \"PROJECT['airlines of #REF', '#3']\"]"}
{"id": "SPIDER_dev_237", "input": "Find all airlines that have flights from both airports 'APG' and 'CVO'.", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from the airport APG']\", \"FILTER['#1', 'from the airport CVO']\", \"PROJECT['airlines of #REF', '#2']\", \"PROJECT['airlines of #REF', '#3']\", \"SELECT['airlines']\", \"INTERSECTION['#6', '#4', '#5']\"]"}
{"id": "SPIDER_dev_238", "input": "Which airlines have departing flights from both APG and CVO airports?", "output": "[\"SELECT['airlines']\", \"PROJECT['flights of #REF', '#1']\", \"PROJECT['airports #REF depart from', '#2']\", \"COMPARATIVE['#1', '#3', 'is APG']\", \"COMPARATIVE['#1', '#3', 'is CVO']\", \"INTERSECTION['#1', '#4', '#5']\"]"}
{"id": "SPIDER_dev_239", "input": "Find all airlines that have flights from airport 'CVO' but not from 'APG'.", "output": "[\"SELECT['airlines']\", \"PROJECT['flights of #REF', '#1']\", \"PROJECT['airports of #REF', '#2']\", \"COMPARATIVE['#1', '#3', 'is CVO']\", \"COMPARATIVE['#1', '#3', 'is not APG']\", \"INTERSECTION['#1', '#4', '#5']\"]"}
{"id": "SPIDER_dev_24", "input": "Show the stadium name and capacity with most number of concerts in year 2014 or after.", "output": "[\"SELECT['stadiums']\", \"PROJECT['concerts in #REF', '#1']\", \"FILTER['#2', 'in years 2014 and after']\", \"GROUP['count', '#3', '#1']\", \"SUPERLATIVE['max', '#1', '#4']\", \"PROJECT['name of #REF', '#5']\", \"PROJECT['capacity of #REF', '#5']\", \"UNION['#6', '#7']\"]"}
{"id": "SPIDER_dev_240", "input": "Which airlines have departures from CVO but not from APG airports?", "output": "[\"SELECT['airlines']\", \"FILTER['#1', 'that have departures from CVO airports']\", \"FILTER['#2', 'that have departures from APG airports']\", \"DISCARD['#2', '#3']\"]"}
{"id": "SPIDER_dev_241", "input": "Find all airlines that have at least 10 flights.", "output": "[\"SELECT['airlines']\", \"PROJECT['flights of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is at least 10']\"]"}
{"id": "SPIDER_dev_242", "input": "Which airlines have at least 10 flights?", "output": "[\"SELECT['airlines']\", \"PROJECT['flights of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is at least 10']\"]"}
{"id": "SPIDER_dev_243", "input": "Find all airlines that have fewer than 200 flights.", "output": "[\"SELECT['airlines']\", \"PROJECT['flights of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is lower than 200']\"]"}
{"id": "SPIDER_dev_244", "input": "Which airlines have less than 200 flights?", "output": "[\"SELECT['airlines']\", \"PROJECT['flights of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is lower than 200']\"]"}
{"id": "SPIDER_dev_245", "input": "What are flight numbers of Airline \"United Airlines\"?", "output": "[\"SELECT['United Airlines']\", \"PROJECT['flight numbers of #REF', '#1']\"]"}
{"id": "SPIDER_dev_246", "input": "Which flight numbers correspond to United Airlines flights?", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'from United Airlines']\", \"PROJECT['flight numbers of #REF', '#2']\"]"}
{"id": "SPIDER_dev_247", "input": "What are flight numbers of flights departing from Airport \"APG\"?", "output": "[\"SELECT['flights']\", \"PROJECT['Airport #REF depart from', '#1']\", \"COMPARATIVE['#1', '#2', 'is APG']\", \"PROJECT['flight numbers of #REF', '#3']\"]"}
{"id": "SPIDER_dev_248", "input": "Give the flight numbers of flights leaving from APG.", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'leaving from APG']\", \"PROJECT['flight numbers of #REF', '#2']\"]"}
{"id": "SPIDER_dev_249", "input": "What are flight numbers of flights arriving at Airport \"APG\"?", "output": "[\"SELECT['flights']\", \"PROJECT['Airport #REF arrive at', '#1']\", \"COMPARATIVE['#1', '#2', 'is APG']\", \"PROJECT['flight numbers of #REF', '#3']\"]"}
{"id": "SPIDER_dev_25", "input": "What is the name and capacity of the stadium with the most concerts after 2013?", "output": "[\"SELECT['stadiums']\", \"PROJECT['concerts', '#1']\", \"GROUP['count', '#2', '#1']\", \"FILTER['#3', 'which are after 2013']\", \"COMPARATIVE['#1', '#4', 'is the highest']\", \"PROJECT['the name of #REF', '#5']\", \"PROJECT['the capacity of #REF', '#5']\", \"UNION['#6', '#7']\"]"}
{"id": "SPIDER_dev_250", "input": "Give the flight numbers of flights landing at APG.", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'landing at APG']\", \"PROJECT['flight numbers of #REF', '#2']\"]"}
{"id": "SPIDER_dev_251", "input": "What are flight numbers of flights departing from City \"Aberdeen \"?", "output": "[\"SELECT['flights']\", \"PROJECT['City #REF depart from', '#1']\", \"COMPARATIVE['#1', '#2', 'is Aberdeen']\", \"PROJECT['flight numbers of #REF', '#3']\"]"}
{"id": "SPIDER_dev_252", "input": "Give the flight numbers of flights leaving from Aberdeen.", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'leaving from Aberdeen']\", \"PROJECT['flight numbers of #REF', '#2']\"]"}
{"id": "SPIDER_dev_253", "input": "What are flight numbers of flights arriving at City \"Aberdeen\"?", "output": "[\"SELECT['flights']\", \"PROJECT['City #REF arrive at', '#1']\", \"COMPARATIVE['#1', '#2', 'is Aberdeen']\", \"PROJECT['flight numbers of #REF', '#3']\"]"}
{"id": "SPIDER_dev_254", "input": "Give the flight numbers of flights arriving in Aberdeen.", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'arriving in Aberdeen']\", \"PROJECT['flight numbers of #REF', '#2']\"]"}
{"id": "SPIDER_dev_255", "input": "Find the number of flights landing in the city of Aberdeen or Abilene.", "output": "[\"SELECT['flights']\", \"PROJECT['cities #REF are landing in', '#1']\", \"COMPARATIVE['#1', '#2', 'is Aberdeen']\", \"COMPARATIVE['#1', '#2', 'is Abilene']\", \"UNION['#3', '#4']\", \"AGGREGATE['count', '#5']\"]"}
{"id": "SPIDER_dev_256", "input": "How many flights land in Aberdeen or Abilene?", "output": "[\"SELECT['flights']\", \"FILTER['#1', 'that land in Aberdeen']\", \"FILTER['#1', 'that land in Abilene']\", \"UNION['#2', '#3']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "SPIDER_dev_257", "input": "Find the name of airports which do not have any flight in and out.", "output": "[\"SELECT['airports']\", \"FILTER['#1', 'which do not have any flights in and out']\", \"PROJECT['names of #REF', '#2']\"]"}
{"id": "SPIDER_dev_258", "input": "Which airports do not have departing or arriving flights?", "output": "[\"SELECT['airports']\", \"PROJECT['departing flights of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is zero']\", \"PROJECT['arriving flights of #REF', '#1']\", \"GROUP['count', '#5', '#1']\", \"COMPARATIVE['#1', '#6', 'is zero']\", \"INTERSECTION['#1', '#4', '#7']\"]"}
{"id": "SPIDER_dev_26", "input": "Which year has most number of concerts?", "output": "[\"SELECT['years']\", \"PROJECT['concerts of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"SUPERLATIVE['max', '#1', '#3']\"]"}
{"id": "SPIDER_dev_260", "input": "Count the number of employees", "output": "[\"SELECT['employees']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "SPIDER_dev_261", "input": "Sort employee names by their age in ascending order.", "output": "[\"SELECT['employees']\", \"PROJECT['names of #REF', '#1']\", \"PROJECT['ages of #REF', '#1']\", \"SORT['#2', '#3', 'in ascending order']\"]"}
{"id": "SPIDER_dev_262", "input": "List the names of employees and sort in ascending order of age.", "output": "[\"SELECT['employees']\", \"PROJECT['names of #REF', '#1']\", \"PROJECT['ages of #REF', '#1']\", \"SORT['#2', '#3', 'in ascending order']\"]"}
{"id": "SPIDER_dev_263", "input": "What is the number of employees from each city?", "output": "[\"SELECT['cities']\", \"PROJECT['employees from #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"UNION['#1', '#3']\"]"}
{"id": "SPIDER_dev_264", "input": "Count the number of employees for each city.", "output": "[\"SELECT['cities']\", \"PROJECT['employees in #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"UNION['#1', '#3']\"]"}
{"id": "SPIDER_dev_265", "input": "Which cities do more than one employee under age 30 come from?", "output": "[\"SELECT['cities']\", \"PROJECT['employees from #REF', '#1']\", \"PROJECT['ages of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is under 30']\", \"GROUP['count', '#4', '#1']\", \"COMPARATIVE['#1', '#5', 'is more than one']\"]"}
{"id": "SPIDER_dev_266", "input": "Find the cities that have more than one employee under age 30.", "output": "[\"SELECT['cities']\", \"PROJECT['employees of #REF', '#1']\", \"PROJECT['ages of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is under 30']\", \"GROUP['count', '#4', '#1']\", \"COMPARATIVE['#1', '#5', 'is more than one']\"]"}
{"id": "SPIDER_dev_267", "input": "Find the number of shops in each location.", "output": "[\"SELECT['locations']\", \"PROJECT['shops in #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"UNION['#1', '#3']\"]"}
{"id": "SPIDER_dev_268", "input": "How many shops are there in each location?", "output": "[\"SELECT['locations']\", \"PROJECT['shops in #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"UNION['#1', '#3']\"]"}
{"id": "SPIDER_dev_269", "input": "Find the manager name and district of the shop whose number of products is the largest.", "output": "[\"SELECT['shops']\", \"PROJECT['products of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"SUPERLATIVE['max', '#1', '#3']\", \"PROJECT['manager name of #REF', '#4']\", \"PROJECT['district of #REF', '#4']\", \"UNION['#5', '#6']\"]"}
{"id": "SPIDER_dev_27", "input": "What is the year that had the most concerts?", "output": "[\"SELECT['concert']\", \"PROJECT['years of #REF', '#1']\", \"GROUP['count', '#1', '#2']\", \"SUPERLATIVE['max', '#2', '#3']\"]"}
{"id": "SPIDER_dev_270", "input": "What are the manager name and district of the shop that sells the largest number of products?", "output": "[\"SELECT['shops']\", \"PROJECT['products #REF sells', '#1']\", \"GROUP['count', '#2', '#1']\", \"SUPERLATIVE['max', '#1', '#3']\", \"PROJECT['manager of #REF', '#4']\", \"PROJECT['name of #REF', '#5']\", \"PROJECT['district of #REF', '#4']\", \"UNION['#6', '#7']\"]"}
{"id": "SPIDER_dev_271", "input": "find the minimum and maximum number of products of all stores.", "output": "[\"SELECT['products']\", \"FILTER['#1', 'of all stores']\", \"AGGREGATE['min', '#2']\", \"AGGREGATE['max', '#2']\", \"UNION['#3', '#4']\"]"}
{"id": "SPIDER_dev_272", "input": "What are the minimum and maximum number of products across all the shops?", "output": "[\"SELECT['shops']\", \"PROJECT['products of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"AGGREGATE['max', '#3']\", \"AGGREGATE['min', '#3']\", \"UNION['#4', '#5']\"]"}
{"id": "SPIDER_dev_273", "input": "Return the name, location and district of all shops in descending order of number of products.", "output": "[\"SELECT['shops']\", \"PROJECT['names of #REF', '#1']\", \"PROJECT['locations of #REF', '#1']\", \"PROJECT['districts of #REF', '#1']\", \"PROJECT['products of #REF', '#1']\", \"GROUP['count', '#5', '#1']\", \"UNION['#2', '#3', '#4']\", \"SORT['#7', '#6', 'in descending order']\"]"}
{"id": "SPIDER_dev_274", "input": "Sort all the shops by number products in descending order, and return the name, location and district of each shop.", "output": "[\"SELECT['shops']\", \"PROJECT['names of #REF', '#1']\", \"PROJECT['locations of #REF', '#1']\", \"PROJECT['districts of #REF', '#1']\", \"PROJECT['products of #REF', '#1']\", \"GROUP['count', '#5', '#1']\", \"UNION['#2', '#3', '#4']\", \"SORT['#7', '#6', 'in descending order']\"]"}
{"id": "SPIDER_dev_275", "input": "Find the names of stores whose number products is more than the average number of products.", "output": "[\"SELECT['stores']\", \"PROJECT['products in #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"AGGREGATE['avg', '#3']\", \"COMPARATIVE['#1', '#3', 'is higher than #4']\", \"PROJECT['names of #REF', '#5']\"]"}
{"id": "SPIDER_dev_276", "input": "Which shops' number products is above the average? Give me the shop names.", "output": "[\"SELECT['shops']\", \"PROJECT['products of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"AGGREGATE['avg', '#3']\", \"COMPARATIVE['#1', '#3', 'is higher than #4']\", \"PROJECT['names of #REF', '#5']\"]"}
{"id": "SPIDER_dev_277", "input": "find the name of employee who was awarded the most times in the evaluation.", "output": "[\"SELECT['employees']\", \"PROJECT['times #REF was awarded in the evaluation', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is the highest']\", \"PROJECT['the name of #REF', '#4']\"]"}
{"id": "SPIDER_dev_278", "input": "Which employee received the most awards in evaluations? Give me the employee name.", "output": "[\"SELECT['employees']\", \"PROJECT['evaluations of #REF', '#1']\", \"PROJECT['awards in #REF', '#2']\", \"GROUP['count', '#3', '#1']\", \"SUPERLATIVE['max', '#1', '#4']\", \"PROJECT['name of #REF', '#5']\"]"}
{"id": "SPIDER_dev_279", "input": "Find the name of the employee who got the highest one time bonus.", "output": "[\"SELECT['employees']\", \"PROJECT['one time bonuses of #REF', '#1']\", \"SUPERLATIVE['max', '#1', '#2']\", \"PROJECT['name of #REF', '#3']\"]"}
{"id": "SPIDER_dev_28", "input": "Show the stadium names without any concert.", "output": "[\"SELECT['stadiums']\", \"FILTER['#1', 'without concerts']\", \"PROJECT['names of #REF', '#2']\"]"}
{"id": "SPIDER_dev_280", "input": "Which employee received the biggest bonus? Give me the employee name.", "output": "[\"SELECT['employees']\", \"PROJECT['bonuses that #REF received', '#1']\", \"COMPARATIVE['#1', '#2', 'is the biggest']\", \"PROJECT['the name of #REF', '#3']\"]"}
{"id": "SPIDER_dev_281", "input": "Find the names of employees who never won any award in the evaluation.", "output": "[\"SELECT['employees']\", \"FILTER['#1', 'who won any award in the evaluation']\", \"DISCARD['#1', '#2']\", \"PROJECT['names of #REF', '#3']\"]"}
{"id": "SPIDER_dev_282", "input": "What are the names of the employees who never received any evaluation?", "output": "[\"SELECT['employees']\", \"PROJECT['evaluations of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'equal to zero']\", \"PROJECT['names of #REF', '#4']\"]"}
{"id": "SPIDER_dev_283", "input": "What is the name of the shop that is hiring the largest number of employees?", "output": "[\"SELECT['shops']\", \"PROJECT['employees #REF are hiring', '#1']\", \"GROUP['count', '#2', '#1']\", \"SUPERLATIVE['max', '#1', '#3']\", \"PROJECT['name of #REF', '#4']\"]"}
{"id": "SPIDER_dev_284", "input": "Which shop has the most employees? Give me the shop name.", "output": "[\"SELECT['shops']\", \"PROJECT['employees', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is the highest']\", \"PROJECT['the name of #REF', '#4']\"]"}
{"id": "SPIDER_dev_285", "input": "Find the name of the shops that do not hire any employee.", "output": "[\"SELECT['shops']\", \"FILTER['#1', 'that hire employees']\", \"DISCARD['#1', '#2']\", \"PROJECT['names of #REF', '#3']\"]"}
{"id": "SPIDER_dev_286", "input": "Which shops run with no employees? Find the shop names", "output": "[\"SELECT['shops']\", \"FILTER['#1', 'that run with no employees']\", \"PROJECT['names of #REF', '#2']\"]"}
{"id": "SPIDER_dev_287", "input": "Find the number of employees hired in each shop; show the shop name as well.", "output": "[\"SELECT['shops']\", \"PROJECT['employees hired in #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"PROJECT['shop names of #REF', '#1']\", \"UNION['#3', '#4']\"]"}
{"id": "SPIDER_dev_288", "input": "For each shop, return the number of employees working there and the name of the shop.", "output": "[\"SELECT['shops']\", \"PROJECT['employees working in #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"PROJECT['names of #REF', '#1']\", \"UNION['#3', '#4']\"]"}
{"id": "SPIDER_dev_289", "input": "What is total bonus given in all evaluations?", "output": "[\"SELECT['evaluations']\", \"PROJECT['bonus given in all #REF', '#1']\", \"GROUP['sum', '#2', '#1']\", \"UNION['#1', '#3']\"]"}
{"id": "SPIDER_dev_29", "input": "What are the names of the stadiums without any concerts?", "output": "[\"SELECT['stadiums']\", \"FILTER['#1', 'with concerts']\", \"DISCARD['#1', '#2']\", \"PROJECT['names of #REF', '#3']\"]"}
{"id": "SPIDER_dev_290", "input": "Find the total amount of bonus given in all the evaluations.", "output": "[\"SELECT['evaluations']\", \"PROJECT['bonuses given in #REF', '#1']\", \"AGGREGATE['sum', '#2']\"]"}
{"id": "SPIDER_dev_291", "input": "Give me all the information about hiring.", "output": "[\"SELECT['hiring']\", \"PROJECT['all information about #REF', '#1']\"]"}
{"id": "SPIDER_dev_292", "input": "What is all the information about hiring?", "output": "[\"SELECT['information']\", \"FILTER['#1', 'about hiring']\", \"PROJECT['all of the #REF', '#2']\"]"}
{"id": "SPIDER_dev_293", "input": "Which district has both stores with less than 3000 products and stores with more than 10000 products?", "output": "[\"SELECT['districts']\", \"PROJECT['stores of #REF', '#1']\", \"PROJECT['products of #REF', '#2']\", \"GROUP['count', '#3', '#2']\", \"COMPARATIVE['#1', '#4', 'is lower than 3000']\", \"COMPARATIVE['#1', '#4', 'is higher than 10000']\", \"INTERSECTION['#1', '#5', '#6']\"]"}
{"id": "SPIDER_dev_294", "input": "Find the districts in which there are both shops selling less than 3000 products and shops selling more than 10000 products.", "output": "[\"SELECT['districts']\", \"PROJECT['shops in #REF', '#1']\", \"PROJECT['products #REF sell', '#2']\", \"GROUP['count', '#3', '#2']\", \"COMPARATIVE['#2', '#4', 'is lower than 3000']\", \"COMPARATIVE['#2', '#4', 'is higher than 10000']\", \"INTERSECTION['#1', '#5', '#6']\"]"}
{"id": "SPIDER_dev_295", "input": "How many different store locations are there?", "output": "[\"SELECT['stores']\", \"PROJECT['different locations of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "SPIDER_dev_296", "input": "Count the number of distinct store locations.", "output": "[\"SELECT['stores']\", \"PROJECT['distinct locations of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "SPIDER_dev_297", "input": "How many documents do we have?", "output": "[\"SELECT['documents']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "SPIDER_dev_299", "input": "List document IDs, document names, and document descriptions for all documents.", "output": "[\"SELECT['documents']\", \"PROJECT['document IDs of #REF', '#1']\", \"PROJECT['document names of #REF', '#1']\", \"PROJECT['document descriptions of #REF', '#1']\", \"UNION['#2', '#3', '#4']\"]"}
{"id": "SPIDER_dev_3", "input": "What are the names, countries, and ages for every singer in descending order of age?", "output": "[\"SELECT['singers']\", \"PROJECT['the names of every #REF', '#1']\", \"PROJECT['the countries of every #REF', '#1']\", \"PROJECT['the ages of every #REF', '#1']\", \"UNION['#2', '#3', '#4']\", \"SORT['#5', '#4', 'descending order of']\"]"}
{"id": "SPIDER_dev_30", "input": "Show countries where a singer above age 40 and a singer below 30 are from.", "output": "[\"SELECT['countries']\", \"PROJECT['singers from #REF', '#1']\", \"PROJECT['ages of #REF', '#2']\", \"COMPARATIVE['#1', '#3', 'is above 40']\", \"COMPARATIVE['#1', '#3', 'is below 30']\", \"INTERSECTION['#1', '#4', '#5']\"]"}
{"id": "SPIDER_dev_300", "input": "What are the ids, names, and descriptions for all documents?", "output": "[\"SELECT['documents']\", \"PROJECT['ids of #REF', '#1']\", \"PROJECT['names of #REF', '#1']\", \"PROJECT['descriptions of #REF', '#1']\", \"UNION['#2', '#3', '#4']\"]"}
{"id": "SPIDER_dev_301", "input": "What is the document name and template id for document with description with the letter 'w' in it?", "output": "[\"SELECT['documents']\", \"PROJECT['descriptions of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'has the letter w']\", \"PROJECT['document name of #REF', '#3']\", \"PROJECT['template id of #REF', '#3']\", \"UNION['#4', '#5']\"]"}
{"id": "SPIDER_dev_302", "input": "Return the names and template ids for documents that contain the letter w in their description.", "output": "[\"SELECT['documents']\", \"PROJECT['descriptions of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'contain the letter w']\", \"PROJECT['names of #REF', '#3']\", \"PROJECT['templates of #REF', '#3']\", \"PROJECT['ids of #REF', '#5']\", \"UNION['#4', '#6']\"]"}
{"id": "SPIDER_dev_303", "input": "What is the document id, template id and description for document named \"Robbin CV\"?", "output": "[\"SELECT['documents']\", \"FILTER['#1', 'named Robbin CV']\", \"PROJECT['the document id of #REF', '#2']\", \"PROJECT['the template id of #REF', '#2']\", \"PROJECT['the description of #REF', '#2']\", \"UNION['#3', '#4', '#5']\"]"}
{"id": "SPIDER_dev_304", "input": "Return the document id, template id, and description for the document with the name Robbin CV.", "output": "[\"SELECT['documents']\", \"FILTER['#1', 'with the name Robbin CV']\", \"PROJECT['document id of #REF', '#2']\", \"PROJECT['template id of #REF', '#2']\", \"PROJECT['description of #REF', '#2']\", \"UNION['#3', '#4', '#5']\"]"}
{"id": "SPIDER_dev_305", "input": "How many different templates do all document use?", "output": "[\"SELECT['documents']\", \"PROJECT['templates of #REF', '#1']\", \"PROJECT['different #REF', '#2']\", \"GROUP['count', '#3', '#2']\", \"UNION['#2', '#4']\"]"}
{"id": "SPIDER_dev_306", "input": "Count the number of different templates used for documents.", "output": "[\"SELECT['documents']\", \"PROJECT['different templates used for #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "SPIDER_dev_307", "input": "How many documents are using the template with type code 'PPT'?", "output": "[\"SELECT['documents']\", \"PROJECT['templates #REF use', '#1']\", \"PROJECT['type codes of #REF', '#2']\", \"COMPARATIVE['#1', '#3', 'is PPT']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "SPIDER_dev_308", "input": "Count the number of documents that use the PPT template type.", "output": "[\"SELECT['documents']\", \"PROJECT['template types of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is PPT']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "SPIDER_dev_309", "input": "Show all template ids and number of documents using each template.", "output": "[\"SELECT['templates']\", \"PROJECT['documents using #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"PROJECT['ids of #REF', '#1']\", \"UNION['#4', '#3']\"]"}
{"id": "SPIDER_dev_31", "input": "Show names for all stadiums except for stadiums having a concert in year 2014.", "output": "[\"SELECT['stadiums']\", \"FILTER['#1', 'that have concerts']\", \"FILTER['#2', 'in the year 2014']\", \"DISCARD['#1', '#3']\", \"PROJECT['names of #REF', '#4']\"]"}
{"id": "SPIDER_dev_310", "input": "What are all different template ids used for documents, and how many times were each of them used?", "output": "[\"SELECT['documents']\", \"PROJECT['template ids used for #REF', '#1']\", \"PROJECT['the different #REF', '#2']\", \"GROUP['count', '#1', '#3']\", \"UNION['#3', '#4']\"]"}
{"id": "SPIDER_dev_311", "input": "What is the id and type code for the template used by the most documents?", "output": "[\"SELECT['templates']\", \"SELECT['']\", \"FILTER['#1', 'used by the most documents']\", \"PROJECT['the id of #REF', '#3']\", \"PROJECT['the type code for #REF', '#3']\", \"UNION['#4', '#5']\"]"}
{"id": "SPIDER_dev_312", "input": "Return the id and type code of the template that is used for the greatest number of documents.", "output": "[\"SELECT['templates']\", \"PROJECT['documents that used #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is greatest']\", \"PROJECT['id of #REF', '#4']\", \"PROJECT['type code of #REF', '#4']\", \"UNION['#5', '#6']\"]"}
{"id": "SPIDER_dev_313", "input": "Show ids for all templates that are used by more than one document.", "output": "[\"SELECT['templates']\", \"PROJECT['documents that used #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is more than one']\", \"PROJECT['ids of #REF', '#4']\"]"}
{"id": "SPIDER_dev_314", "input": "What are the template ids of any templates used in more than a single document?", "output": "[\"SELECT['templates']\", \"FILTER['#1', 'used in more than a single document']\", \"PROJECT['the template ids of #REF', '#2']\"]"}
{"id": "SPIDER_dev_315", "input": "Show ids for all templates not used by any document.", "output": "[\"SELECT['templates']\", \"FILTER['#1', 'not used by documents']\", \"PROJECT['ids of #REF', '#2']\"]"}
{"id": "SPIDER_dev_316", "input": "What are the ids for templates that are not used in any documents?", "output": "[\"SELECT['templates']\", \"FILTER['#1', 'used in documents']\", \"DISCARD['#1', '#2']\", \"PROJECT['ids of #REF', '#3']\"]"}
{"id": "SPIDER_dev_317", "input": "How many templates do we have?", "output": "[\"SELECT['templates']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "SPIDER_dev_318", "input": "Count the number of templates.", "output": "[\"SELECT['templates']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "SPIDER_dev_319", "input": "Show template ids, version numbers, and template type codes for all templates.", "output": "[\"SELECT['templates']\", \"PROJECT['template ids of #REF', '#1']\", \"PROJECT['version numbers of #REF', '#1']\", \"PROJECT['template type codes of #REF', '#1']\", \"UNION['#2', '#3', '#4']\"]"}
{"id": "SPIDER_dev_32", "input": "What are the names of all stadiums that did not have a concert in 2014?", "output": "[\"SELECT['stadiums']\", \"FILTER['#1', 'that did not have a concert']\", \"FILTER['#2', 'in 2014']\", \"PROJECT['names of #REF', '#3']\"]"}
{"id": "SPIDER_dev_320", "input": "What are the ids, version numbers, and type codes for each template?", "output": "[\"SELECT['templates']\", \"PROJECT['ids of #REF', '#1']\", \"PROJECT['version numbers of #REF', '#1']\", \"PROJECT['type codes of #REF', '#1']\", \"UNION['#2', '#3', '#4']\"]"}
{"id": "SPIDER_dev_321", "input": "Show all distinct template type codes for all templates.", "output": "[\"SELECT['templates']\", \"PROJECT['template types of #REF', '#1']\", \"PROJECT['distinct codes of #REF', '#2']\"]"}
{"id": "SPIDER_dev_322", "input": "What are the different template type codes?", "output": "[\"SELECT['template types']\", \"PROJECT['different codes of #REF', '#1']\"]"}
{"id": "SPIDER_dev_323", "input": "What are the ids of templates with template type code PP or PPT?", "output": "[\"SELECT['templates']\", \"PROJECT['template type codes of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is PP']\", \"COMPARATIVE['#1', '#2', 'is PPT']\", \"UNION['#3', '#4']\", \"PROJECT['ids of #REF', '#5']\"]"}
{"id": "SPIDER_dev_324", "input": "Return the ids of templates that have the code PP or PPT.", "output": "[\"SELECT['templates']\", \"PROJECT['codes of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is PP']\", \"COMPARATIVE['#1', '#2', 'is PPT']\", \"UNION['#3', '#4']\", \"PROJECT['ids of #REF', '#5']\"]"}
{"id": "SPIDER_dev_325", "input": "How many templates have template type code CV?", "output": "[\"SELECT['templates']\", \"PROJECT['template type codes of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is CV']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "SPIDER_dev_326", "input": "Count the number of templates of the type CV.", "output": "[\"SELECT['templates']\", \"PROJECT['types of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is CV']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "SPIDER_dev_327", "input": "What is the version number and template type code for the template with version number later than 5?", "output": "[\"SELECT['templates']\", \"PROJECT['version numbers of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is higher than 5']\", \"PROJECT['version numbers of #REF', '#3']\", \"PROJECT['template type codes of #REF', '#3']\", \"UNION['#4', '#5']\"]"}
{"id": "SPIDER_dev_328", "input": "Return the version numbers and template type codes of templates with a version number greater than 5.", "output": "[\"SELECT['templates']\", \"PROJECT['version numbers of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is higher than 5']\", \"PROJECT['version numbers of #REF', '#3']\", \"PROJECT['template type codes of #REF', '#3']\", \"UNION['#4', '#5']\"]"}
{"id": "SPIDER_dev_329", "input": "Show all template type codes and number of templates for each.", "output": "[\"SELECT['template type codes']\", \"PROJECT['templates of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"UNION['#1', '#3']\"]"}
{"id": "SPIDER_dev_33", "input": "Show the name and theme for all concerts and the number of singers in each concert.", "output": "[\"SELECT['concerts']\", \"PROJECT['names of #REF', '#1']\", \"PROJECT['themes of #REF', '#1']\", \"PROJECT['singers in #REF', '#1']\", \"GROUP['count', '#4', '#1']\", \"UNION['#2', '#3', '#5']\"]"}
{"id": "SPIDER_dev_330", "input": "What are the different template type codes, and how many templates correspond to each?", "output": "[\"SELECT['template']\", \"PROJECT['type codes of #REF', '#1']\", \"PROJECT['different #REF', '#2']\", \"GROUP['count', '#1', '#3']\", \"UNION['#3', '#4']\"]"}
{"id": "SPIDER_dev_331", "input": "Which template type code has most number of templates?", "output": "[\"SELECT['template type codes']\", \"PROJECT['templates of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"SUPERLATIVE['max', '#1', '#3']\"]"}
{"id": "SPIDER_dev_332", "input": "Return the type code of the template type that the most templates belong to.", "output": "[\"SELECT['template types']\", \"PROJECT['templates that belong to #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"SUPERLATIVE['max', '#1', '#3']\", \"PROJECT['type code of #REF', '#4']\"]"}
{"id": "SPIDER_dev_333", "input": "Show all template type codes with less than three templates.", "output": "[\"SELECT['template type codes']\", \"PROJECT['templates of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is lower than three']\"]"}
{"id": "SPIDER_dev_334", "input": "What are the codes of template types that have fewer than 3 templates?", "output": "[\"SELECT['template types']\", \"PROJECT['templates of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is lower than 3']\", \"PROJECT['codes of #REF', '#4']\"]"}
{"id": "SPIDER_dev_335", "input": "What the smallest version number and its template type code?", "output": "[\"SELECT['version numbers']\", \"FILTER['#1', 'that is the smallest']\", \"PROJECT['template type code of #REF', '#2']\", \"UNION['#2', '#3']\"]"}
{"id": "SPIDER_dev_336", "input": "Return the lowest version number, along with its corresponding template type code.", "output": "[\"SELECT['version numbers']\", \"AGGREGATE['min', '#1']\", \"PROJECT['template type code of #REF', '#2']\", \"UNION['#2', '#3']\"]"}
{"id": "SPIDER_dev_337", "input": "What is the template type code of the template used by document with the name \"Data base\"?", "output": "[\"SELECT['documents']\", \"FILTER['#1', 'with the name Data base']\", \"PROJECT['template used by #REF', '#2']\", \"PROJECT['template type code of #REF', '#3']\"]"}
{"id": "SPIDER_dev_338", "input": "Return the template type code of the template that is used by a document named Data base.", "output": "[\"SELECT['templates']\", \"PROJECT['documents that used #REF', '#1']\", \"FILTER['#2', 'named Data base']\", \"PROJECT['template type code of #REF', '#3']\"]"}
{"id": "SPIDER_dev_339", "input": "Show all document names using templates with template type code BK.", "output": "[\"SELECT['templates']\", \"PROJECT['template type codes of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is BK']\", \"PROJECT['documents using #REF', '#3']\", \"PROJECT['names of #REF', '#4']\"]"}
{"id": "SPIDER_dev_34", "input": "What are the names, themes, and number of singers for every concert?", "output": "[\"SELECT['concerts']\", \"PROJECT['names of #REF', '#1']\", \"PROJECT['themes of #REF', '#1']\", \"PROJECT['singers of #REF', '#1']\", \"GROUP['count', '#4', '#1']\", \"UNION['#2', '#3', '#5']\"]"}
{"id": "SPIDER_dev_340", "input": "What are the names of documents that use templates with the code BK?", "output": "[\"SELECT['documents']\", \"PROJECT['templates of #REF', '#1']\", \"PROJECT['codes of #REF', '#2']\", \"COMPARATIVE['#1', '#3', 'is BK']\", \"PROJECT['names of #REF', '#4']\"]"}
{"id": "SPIDER_dev_341", "input": "Show all template type codes and the number of documents using each type.", "output": "[\"SELECT['template type codes']\", \"PROJECT['documents using #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"UNION['#1', '#3']\"]"}
{"id": "SPIDER_dev_342", "input": "What are the different template type codes, and how many documents use each type?", "output": "[\"SELECT['template type codes']\", \"PROJECT['different #REF', '#1']\", \"PROJECT['documents that use #REF', '#2']\", \"GROUP['count', '#3', '#2']\", \"UNION['#2', '#4']\"]"}
{"id": "SPIDER_dev_343", "input": "Which template type code is used by most number of documents?", "output": "[\"SELECT['template type codes']\", \"PROJECT['documents of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"SUPERLATIVE['max', '#1', '#3']\"]"}
{"id": "SPIDER_dev_344", "input": "Return the code of the template type that is most commonly used in documents.", "output": "[\"SELECT['template types']\", \"PROJECT['documents #REF is used in', '#1']\", \"GROUP['count', '#2', '#1']\", \"SUPERLATIVE['max', '#1', '#3']\", \"PROJECT['code of #REF', '#4']\"]"}
{"id": "SPIDER_dev_345", "input": "Show all template type codes that are not used by any document.", "output": "[\"SELECT['template type codes']\", \"FILTER['#1', 'not used by documents']\"]"}
{"id": "SPIDER_dev_346", "input": "What are the codes of template types that are not used for any document?", "output": "[\"SELECT['template types']\", \"FILTER['#1', 'not used for any documents']\", \"PROJECT['codes of #REF', '#2']\"]"}
{"id": "SPIDER_dev_347", "input": "Show all template type codes and descriptions.", "output": "[\"SELECT['template types']\", \"PROJECT['codes of #REF', '#1']\", \"PROJECT['descriptions of #REF', '#1']\", \"UNION['#2', '#3']\"]"}
{"id": "SPIDER_dev_348", "input": "What are the type codes and descriptions for all template types?", "output": "[\"SELECT['template types']\", \"PROJECT['type codes of #REF', '#1']\", \"PROJECT['descriptions of #REF', '#1']\", \"UNION['#2', '#3']\"]"}
{"id": "SPIDER_dev_349", "input": "What is the template type descriptions for template type code \"AD\".", "output": "[\"SELECT['template type']\", \"FILTER['#1', 'with code AD']\", \"PROJECT['descriptions of #REF', '#2']\"]"}
{"id": "SPIDER_dev_35", "input": "List singer names and number of concerts for each singer.", "output": "[\"SELECT['singers']\", \"PROJECT['names of #REF', '#1']\", \"PROJECT['concerts of #REF', '#1']\", \"GROUP['count', '#3', '#1']\", \"UNION['#2', '#4']\"]"}
{"id": "SPIDER_dev_350", "input": "Return the template type description of the template type with the code AD.", "output": "[\"SELECT['template types']\", \"PROJECT['codes of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is AD']\", \"PROJECT['template type description of #REF', '#3']\"]"}
{"id": "SPIDER_dev_351", "input": "What is the template type code for template type description \"Book\".", "output": "[\"SELECT['template types']\", \"PROJECT['descriptions of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is Book']\", \"PROJECT['the template type code of #REF', '#3']\"]"}
{"id": "SPIDER_dev_352", "input": "Return the type code of the template type with the description \"Book\".", "output": "[\"SELECT['template types']\", \"PROJECT['descriptions of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is Book']\", \"PROJECT['type code of #REF', '#3']\"]"}
{"id": "SPIDER_dev_353", "input": "What are the distinct template type descriptions for the templates ever used by any document?", "output": "[\"SELECT['templates']\", \"FILTER['#1', 'used by any documents']\", \"PROJECT['type description of #REF', '#2']\", \"FILTER['#3', 'that are distinct']\"]"}
{"id": "SPIDER_dev_354", "input": "Return the different descriptions for templates that have been used in a document.", "output": "[\"SELECT['templates']\", \"FILTER['#1', 'that have been used in a document']\", \"PROJECT['different descriptions of #REF', '#2']\"]"}
{"id": "SPIDER_dev_355", "input": "What are the template ids with template type description \"Presentation\".", "output": "[\"SELECT['template ids']\", \"PROJECT['template type descriptions of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is Presentation']\"]"}
{"id": "SPIDER_dev_356", "input": "Return the ids corresponding to templates with the description 'Presentation'.", "output": "[\"SELECT['templates']\", \"FILTER['#1', 'with description Presentation']\", \"PROJECT['ids of #REF', '#2']\"]"}
{"id": "SPIDER_dev_357", "input": "How many paragraphs in total?", "output": "[\"SELECT['paragraphs']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "SPIDER_dev_358", "input": "Count the number of paragraphs.", "output": "[\"SELECT['paragraphs']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "SPIDER_dev_359", "input": "How many paragraphs for the document with name 'Summer Show'?", "output": "[\"SELECT['documents']\", \"FILTER['#1', 'with name Summer Show']\", \"PROJECT['paragraphs in #REF', '#2']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "SPIDER_dev_36", "input": "What are the names of the singers and number of concerts for each person?", "output": "[\"SELECT['singers']\", \"PROJECT['names of #REF', '#1']\", \"PROJECT['concerts of #REF', '#1']\", \"GROUP['count', '#3', '#1']\", \"UNION['#2', '#4']\"]"}
{"id": "SPIDER_dev_360", "input": "Count the number of paragraphs in the document named 'Summer Show'.", "output": "[\"SELECT['documents']\", \"FILTER['#1', 'named Summer Show']\", \"PROJECT['paragraphs in #REF', '#2']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "SPIDER_dev_361", "input": "Show paragraph details for paragraph with text 'Korea'.", "output": "[\"SELECT['paragraphs']\", \"PROJECT['text of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is Korea']\", \"PROJECT['paragraph details of #REF', '#3']\"]"}
{"id": "SPIDER_dev_362", "input": "What are the details for the paragraph that includes the text 'Korea'?", "output": "[\"SELECT['paragraphs']\", \"FILTER['#1', 'with text Korea']\", \"PROJECT['details of #REF', '#2']\"]"}
{"id": "SPIDER_dev_363", "input": "Show all paragraph ids and texts for the document with name 'Welcome to NY'.", "output": "[\"SELECT['documents']\", \"PROJECT['names of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is Welcome to NY']\", \"PROJECT['paragraphs of #REF', '#3']\", \"PROJECT['paragraph ids of #REF', '#4']\", \"PROJECT['texts of #REF', '#4']\", \"UNION['#5', '#6']\"]"}
{"id": "SPIDER_dev_364", "input": "What are the ids and texts of paragraphs in the document titled 'Welcome to NY'?", "output": "[\"SELECT['documents']\", \"FILTER['#1', 'titled Welcome to NY']\", \"PROJECT['paragraphs of #REF', '#2']\", \"PROJECT['ids of #REF', '#3']\", \"PROJECT['texts of #REF', '#3']\", \"UNION['#4', '#5']\"]"}
{"id": "SPIDER_dev_365", "input": "Show all paragraph texts for the document \"Customer reviews\".", "output": "[\"SELECT['documents']\", \"FILTER['#1', 'that is Customer reviews']\", \"PROJECT['paragraph texts of #REF', '#2']\"]"}
{"id": "SPIDER_dev_366", "input": "What are the paragraph texts for the document with the name 'Customer reviews'?", "output": "[\"SELECT['documents']\", \"FILTER['#1', 'if name Customer reviews']\", \"PROJECT['paragraph texts for #REF', '#2']\"]"}
{"id": "SPIDER_dev_367", "input": "Show all document ids and the number of paragraphs in each document. Order by document id.", "output": "[\"SELECT['documents']\", \"PROJECT['document ids of #REF', '#1']\", \"PROJECT['paragraphs of #REF', '#1']\", \"GROUP['count', '#3', '#1']\", \"UNION['#2', '#4']\", \"SORT['#5', '#2']\"]"}
{"id": "SPIDER_dev_368", "input": "Return the different document ids along with the number of paragraphs corresponding to each, ordered by id.", "output": "[\"SELECT['document ids']\", \"PROJECT['the different #REF', '#1']\", \"PROJECT['paragraphs in #REF', '#2']\", \"GROUP['count', '#3', '#2']\", \"UNION['#2', '#4']\", \"SORT['#5', '#2']\"]"}
{"id": "SPIDER_dev_369", "input": "Show all document ids, names and the number of paragraphs in each document.", "output": "[\"SELECT['documents']\", \"PROJECT['document ids of #REF', '#1']\", \"PROJECT['names of #REF', '#1']\", \"PROJECT['paragraphs of #REF', '#1']\", \"GROUP['count', '#4', '#1']\", \"UNION['#2', '#3', '#5']\"]"}
{"id": "SPIDER_dev_37", "input": "List all singer names in concerts in year 2014.", "output": "[\"SELECT['concerts']\", \"FILTER['#1', 'in year 2014']\", \"PROJECT['singer names from #REF', '#2']\"]"}
{"id": "SPIDER_dev_370", "input": "What are the ids and names of each document, as well as the number of paragraphs in each?", "output": "[\"SELECT['documents']\", \"PROJECT['ids of #REF', '#1']\", \"PROJECT['names of #REF', '#1']\", \"PROJECT['paragraphs of #REF', '#1']\", \"GROUP['count', '#4', '#1']\", \"UNION['#2', '#3', '#5']\"]"}
{"id": "SPIDER_dev_371", "input": "List all document ids with at least two paragraphs.", "output": "[\"SELECT['documents']\", \"PROJECT['paragraphs in #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is at least two']\", \"PROJECT['ids of #REF', '#4']\"]"}
{"id": "SPIDER_dev_372", "input": "What are the ids of documents that have 2 or more paragraphs?", "output": "[\"SELECT['documents']\", \"PROJECT['paragraphs of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is at least 2']\", \"PROJECT['ids of #REF', '#4']\"]"}
{"id": "SPIDER_dev_373", "input": "What is the document id and name with greatest number of paragraphs?", "output": "[\"SELECT['documents']\", \"PROJECT['paragraphs of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is the greatest']\", \"PROJECT['the document id of #REF', '#4']\", \"PROJECT['the name of #REF', '#4']\", \"UNION['#5', '#6']\"]"}
{"id": "SPIDER_dev_374", "input": "Return the id and name of the document with the most paragraphs.", "output": "[\"SELECT['documents']\", \"PROJECT['paragraphs in #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"SUPERLATIVE['max', '#1', '#3']\", \"PROJECT['id of #REF', '#4']\", \"PROJECT['name of #REF', '#4']\", \"UNION['#5', '#6']\"]"}
{"id": "SPIDER_dev_375", "input": "What is the document id with least number of paragraphs?", "output": "[\"SELECT['document ids']\", \"PROJECT['paragraphs', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is the least']\"]"}
{"id": "SPIDER_dev_376", "input": "Return the id of the document with the fewest paragraphs.", "output": "[\"SELECT['documents']\", \"PROJECT['paragraphs of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"SUPERLATIVE['min', '#1', '#3']\", \"PROJECT['id of #REF', '#4']\"]"}
{"id": "SPIDER_dev_377", "input": "What is the document id with 1 to 2 paragraphs?", "output": "[\"SELECT['documents']\", \"PROJECT['paragraphs of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is at least 1']\", \"COMPARATIVE['#1', '#3', 'is at most 2']\", \"SELECT['document id']\", \"INTERSECTION['#6', '#4', '#5']\"]"}
{"id": "SPIDER_dev_378", "input": "Give the ids of documents that have between one and two paragraphs.", "output": "[\"SELECT['documents']\", \"PROJECT['paragraphs of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is at least one']\", \"COMPARATIVE['#1', '#3', 'is at most two']\", \"INTERSECTION['#1', '#4', '#5']\", \"PROJECT['ids of #REF', '#6']\"]"}
{"id": "SPIDER_dev_379", "input": "Show the document id with paragraph text 'Brazil' and 'Ireland'.", "output": "[\"SELECT['document ids']\", \"PROJECT['paragraphs of #REF', '#1']\", \"PROJECT['text of #REF', '#2']\", \"COMPARATIVE['#1', '#3', 'is Brazil']\", \"COMPARATIVE['#1', '#3', 'is Ireland']\", \"INTERSECTION['#1', '#4', '#5']\"]"}
{"id": "SPIDER_dev_38", "input": "What are the names of the singers who performed in a concert in 2014?", "output": "[\"SELECT['concerts']\", \"FILTER['#1', 'in 2014']\", \"PROJECT['singers who performed in #REF', '#2']\", \"PROJECT['the names of #REF', '#3']\"]"}
{"id": "SPIDER_dev_380", "input": "What are the ids of documents that contain the paragraph text 'Brazil' and 'Ireland'?", "output": "[\"SELECT['documents']\", \"FILTER['#1', 'that contain the paragraph text Brazil']\", \"FILTER['#1', 'that contain the paragraph text Ireland']\", \"INTERSECTION['#1', '#2', '#3']\", \"PROJECT['ids of #REF', '#4']\"]"}
{"id": "SPIDER_dev_381", "input": "How many teachers are there?", "output": "[\"SELECT['teachers']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "SPIDER_dev_382", "input": "What is the total count of teachers?", "output": "[\"SELECT['teachers']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "SPIDER_dev_383", "input": "List the names of teachers in ascending order of age.", "output": "[\"SELECT['teachers']\", \"PROJECT['names of #REF', '#1']\", \"PROJECT['ages of #REF', '#1']\", \"SORT['#2', '#3', 'in ascending order']\"]"}
{"id": "SPIDER_dev_384", "input": "What are the names of the teachers ordered by ascending age?", "output": "[\"SELECT['teachers']\", \"PROJECT['names of #REF', '#1']\", \"PROJECT['ages of #REF', '#1']\", \"SORT['#2', '#3', 'ascending']\"]"}
{"id": "SPIDER_dev_385", "input": "What are the age and hometown of teachers?", "output": "[\"SELECT['teachers']\", \"PROJECT['ages of #REF', '#1']\", \"PROJECT['hometowns of #REF', '#1']\", \"UNION['#2', '#3']\"]"}
{"id": "SPIDER_dev_386", "input": "What is the age and hometown of every teacher?", "output": "[\"SELECT['teachers']\", \"PROJECT['ages of #REF', '#1']\", \"PROJECT['hometowns of #REF', '#1']\", \"UNION['#2', '#3']\"]"}
{"id": "SPIDER_dev_387", "input": "List the name of teachers whose hometown is not \"Little Lever Urban District\".", "output": "[\"SELECT['teachers']\", \"PROJECT['hometowns of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is not Little Lever Urban District']\", \"PROJECT['names of #REF', '#3']\"]"}
{"id": "SPIDER_dev_388", "input": "What are the names of the teachers whose hometown is not \"Little Lever Urban District\"?", "output": "[\"SELECT['teachers']\", \"FILTER['#1', 'whose hometown is Little Lever Urban District']\", \"DISCARD['#1', '#2']\", \"PROJECT['the names of #REF', '#3']\"]"}
{"id": "SPIDER_dev_389", "input": "Show the name of teachers aged either 32 or 33?", "output": "[\"SELECT['teachers']\", \"FILTER['#1', 'aged 32']\", \"FILTER['#1', 'aged 33']\", \"UNION['#2', '#3']\", \"PROJECT['names of #REF', '#4']\"]"}
{"id": "SPIDER_dev_39", "input": "what is the name and nation of the singer who have a song having 'Hey' in its name?", "output": "[\"SELECT['singers']\", \"FILTER['#1', 'who have a song having Hey in its name']\", \"PROJECT['the name of #REF', '#2']\", \"PROJECT['the nation of #REF', '#2']\", \"UNION['#3', '#4']\"]"}
{"id": "SPIDER_dev_390", "input": "What are the names of the teachers who are aged either 32 or 33?", "output": "[\"SELECT['teachers']\", \"FILTER['#1', 'who are aged 32']\", \"FILTER['#1', 'who are aged 33']\", \"INTERSECTION['#1', '#2', '#3']\", \"PROJECT['names of #REF', '#4']\"]"}
{"id": "SPIDER_dev_391", "input": "What is the hometown of the youngest teacher?", "output": "[\"SELECT['teachers']\", \"PROJECT['youngest of #REF', '#1']\", \"PROJECT['hometown of #REF', '#2']\"]"}
{"id": "SPIDER_dev_392", "input": "Where is the youngest teacher from?", "output": "[\"SELECT['teachers']\", \"PROJECT['the youngest of #REF', '#1']\", \"PROJECT['Where is #REF from', '#2']\"]"}
{"id": "SPIDER_dev_393", "input": "Show different hometown of teachers and the number of teachers from each hometown.", "output": "[\"SELECT['teachers']\", \"PROJECT['hometowns of #REF', '#1']\", \"PROJECT['different #REF', '#2']\", \"GROUP['count', '#1', '#3']\", \"UNION['#3', '#4']\"]"}
{"id": "SPIDER_dev_394", "input": "For each hometown, how many teachers are there?", "output": "[\"SELECT['hometowns']\", \"PROJECT['teachers in #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"UNION['#1', '#3']\"]"}
{"id": "SPIDER_dev_395", "input": "List the most common hometown of teachers.", "output": "[\"SELECT['hometowns']\", \"PROJECT['teachers from #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"SUPERLATIVE['max', '#1', '#3']\"]"}
{"id": "SPIDER_dev_396", "input": "What is the most commmon hometowns for teachers?", "output": "[\"SELECT['teachers']\", \"PROJECT['hometowns of #REF', '#1']\", \"GROUP['count', '#1', '#2']\", \"PROJECT['most commmon of #REF', '#3']\"]"}
{"id": "SPIDER_dev_397", "input": "Show the hometowns shared by at least two teachers.", "output": "[\"SELECT['hometowns']\", \"PROJECT['teachers from #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is at least two']\"]"}
{"id": "SPIDER_dev_398", "input": "What are the towns from which at least two teachers come from?", "output": "[\"SELECT['towns']\", \"PROJECT['teachers who come from #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is at least two']\"]"}
{"id": "SPIDER_dev_399", "input": "Show names of teachers and the courses they are arranged to teach.", "output": "[\"SELECT['teachers']\", \"PROJECT['courses #REF are arranged to teach', '#1']\", \"UNION['#1', '#2']\"]"}
{"id": "SPIDER_dev_4", "input": "What is the average, minimum, and maximum age of all singers from France?", "output": "[\"SELECT['singers']\", \"FILTER['#1', 'from France']\", \"PROJECT['ages of #REF', '#2']\", \"GROUP['avg', '#3', '#2']\", \"PROJECT['ages of #REF', '#2']\", \"GROUP['min', '#5', '#2']\", \"PROJECT['ages of #REF', '#2']\", \"GROUP['max', '#7', '#2']\", \"UNION['#4', '#6', '#8']\"]"}
{"id": "SPIDER_dev_40", "input": "What is the name and country of origin of every singer who has a song with the word 'Hey' in its title?", "output": "[\"SELECT['songs']\", \"PROJECT['titles of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'has the word Hey']\", \"PROJECT['singers of #REF', '#3']\", \"PROJECT['name of #REF', '#4']\", \"PROJECT['country of origin of #REF', '#4']\", \"UNION['#5', '#6']\"]"}
{"id": "SPIDER_dev_400", "input": "What is the name of each teacher and what course they teach?", "output": "[\"SELECT['teachers']\", \"PROJECT['names of #REF', '#1']\", \"PROJECT['courses #REF teach', '#1']\", \"PROJECT['names of #REF', '#3']\", \"UNION['#2', '#4']\"]"}
{"id": "SPIDER_dev_401", "input": "Show names of teachers and the courses they are arranged to teach in ascending alphabetical order of the teacher's name.", "output": "[\"SELECT['teachers']\", \"PROJECT['names of #REF', '#1']\", \"PROJECT['courses #REF are arranged to teach', '#1']\", \"UNION['#2', '#3']\", \"SORT['#4', '#2', 'in alphabetical order']\"]"}
{"id": "SPIDER_dev_402", "input": "What are the names of the teachers and the courses they teach in ascending alphabetical order by the name of the teacher?", "output": "[\"SELECT['teachers']\", \"PROJECT['courses that #REF teach', '#1']\", \"PROJECT['the names of #REF', '#1']\", \"PROJECT['the names of #REF', '#2']\", \"UNION['#3', '#4']\", \"SORT['#5', '#3', 'in ascending alphabetical order']\"]"}
{"id": "SPIDER_dev_403", "input": "Show the name of the teacher for the math course.", "output": "[\"SELECT['teachers']\", \"FILTER['#1', 'for the math course']\", \"PROJECT['name of #REF', '#2']\"]"}
{"id": "SPIDER_dev_404", "input": "What are the names of the people who teach math courses?", "output": "[\"SELECT['people']\", \"FILTER['#1', 'who teach math courses']\", \"PROJECT['the names of #REF', '#2']\"]"}
{"id": "SPIDER_dev_405", "input": "Show names of teachers and the number of courses they teach.", "output": "[\"SELECT['teachers']\", \"PROJECT['names of #REF', '#1']\", \"PROJECT['courses #REF teach', '#1']\", \"GROUP['count', '#3', '#1']\", \"UNION['#2', '#4']\"]"}
{"id": "SPIDER_dev_406", "input": "What are the names of the teachers and how many courses do they teach?", "output": "[\"SELECT['teachers']\", \"PROJECT['names of #REF', '#1']\", \"PROJECT['courses #REF teach', '#1']\", \"GROUP['count', '#3', '#1']\", \"UNION['#2', '#4']\"]"}
{"id": "SPIDER_dev_407", "input": "Show names of teachers that teach at least two courses.", "output": "[\"SELECT['teachers']\", \"PROJECT['courses that #REF teach', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is at least two']\", \"PROJECT['names of #REF', '#4']\"]"}
{"id": "SPIDER_dev_408", "input": "What are the names of the teachers who teach at least two courses?", "output": "[\"SELECT['teachers']\", \"PROJECT['courses #REF teach', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is at least two']\", \"PROJECT['names of #REF', '#4']\"]"}
{"id": "SPIDER_dev_409", "input": "List the names of teachers who have not been arranged to teach courses.", "output": "[\"SELECT['teachers']\", \"FILTER['#1', 'who have been arranged to teach courses']\", \"DISCARD['#1', '#2']\", \"PROJECT['names of #REF', '#3']\"]"}
{"id": "SPIDER_dev_41", "input": "Find the name and location of the stadiums which some concerts happened in the years of both 2014 and 2015.", "output": "[\"SELECT['stadiums']\", \"PROJECT['years concerts happened in #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is 2014']\", \"COMPARATIVE['#1', '#2', 'is 2015']\", \"INTERSECTION['#1', '#3', '#4']\", \"PROJECT['names of #REF', '#5']\", \"PROJECT['locations of #REF', '#5']\", \"UNION['#6', '#7']\"]"}
{"id": "SPIDER_dev_410", "input": "What are the names of the teachers whose courses have not been arranged?", "output": "[\"SELECT['courses']\", \"FILTER['#1', 'that have been arranged']\", \"DISCARD['#1', '#2']\", \"PROJECT['the teachers of #REF', '#3']\", \"PROJECT['the names of #REF', '#4']\"]"}
{"id": "SPIDER_dev_411", "input": "How many visitors below age 30 are there?", "output": "[\"SELECT['visitors']\", \"PROJECT['ages of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is below 30']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "SPIDER_dev_412", "input": "Find the names of the visitors whose membership level is higher than 4, and order the results by the level from high to low.", "output": "[\"SELECT['visitors']\", \"PROJECT['membership levels of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is higher than 4']\", \"PROJECT['names of #REF', '#3']\", \"PROJECT['membership levels of #REF', '#3']\", \"SORT['#4', '#5', 'from high to low']\"]"}
{"id": "SPIDER_dev_413", "input": "What is the average age of the visitors whose membership level is not higher than 4?", "output": "[\"SELECT['visitors']\", \"PROJECT['membership level of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is at most 4']\", \"PROJECT['ages of #REF', '#3']\", \"AGGREGATE['avg', '#4']\"]"}
{"id": "SPIDER_dev_414", "input": "Find the name and membership level of the visitors whose membership level is higher than 4, and sort by their age from old to young.", "output": "[\"SELECT['visitors']\", \"PROJECT['membership levels of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is higher than 4']\", \"PROJECT['names of #REF', '#3']\", \"PROJECT['membership levels of #REF', '#3']\", \"PROJECT['ages of #REF', '#3']\", \"UNION['#4', '#5']\", \"SORT['#7', '#6', 'from old to young']\"]"}
{"id": "SPIDER_dev_415", "input": "Find the id and name of the museum that has the most staff members?", "output": "[\"SELECT['museums']\", \"PROJECT['staff members of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"SUPERLATIVE['max', '#1', '#3']\", \"PROJECT['name of #REF', '#4']\", \"PROJECT['id of #REF', '#4']\", \"UNION['#6', '#5']\"]"}
{"id": "SPIDER_dev_416", "input": "Find the average number of staff working for the museums that were open before 2009.", "output": "[\"SELECT['museums']\", \"FILTER['#1', 'that were open before 2009']\", \"PROJECT['staff working for #REF', '#2']\", \"AGGREGATE['avg', '#3']\"]"}
{"id": "SPIDER_dev_417", "input": "What are the opening year and staff number of the museum named Plaza Museum?", "output": "[\"SELECT['museums']\", \"FILTER['#1', 'named Plaza Museum']\", \"PROJECT['opening year of #REF', '#2']\", \"PROJECT['staff of #REF', '#2']\", \"AGGREGATE['count', '#4']\", \"UNION['#3', '#5']\"]"}
{"id": "SPIDER_dev_418", "input": "find the names of museums which have more staff than the minimum staff number of all museums opened after 2010.", "output": "[\"SELECT['museums']\", \"FILTER['#1', 'that opened after 2010']\", \"PROJECT['staff', '#2']\", \"GROUP['count', '#3', '#2']\", \"AGGREGATE['min', '#4']\", \"PROJECT['staff of #REF', '#1']\", \"GROUP['count', '#6', '#1']\", \"COMPARATIVE['#1', '#7', 'larger than #5']\", \"PROJECT['names of #REF', '#8']\"]"}
{"id": "SPIDER_dev_419", "input": "find the id, name and age for visitors who visited some museums more than once.", "output": "[\"SELECT['visitors']\", \"PROJECT['museums #REF visited', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is more than one']\", \"PROJECT['the ids of #REF', '#4']\", \"PROJECT['the names of #REF', '#4']\", \"PROJECT['the ages of #REF', '#4']\", \"UNION['#5', '#6', '#7']\"]"}
{"id": "SPIDER_dev_42", "input": "What are the names and locations of the stadiums that had concerts that occurred in both 2014 and 2015?", "output": "[\"SELECT['stadiums']\", \"FILTER['#1', 'that had concerts in 2014']\", \"FILTER['#1', 'that had concerts in 2015']\", \"SELECT['the names']\", \"INTERSECTION['#4', '#2', '#3']\", \"SELECT['the locations']\", \"INTERSECTION['#6', '#2', '#3']\", \"UNION['#5', '#7']\"]"}
{"id": "SPIDER_dev_420", "input": "What are the id, name and membership level of visitors who have spent the largest amount of money in total in all museum tickets?", "output": "[\"SELECT['visitors']\", \"PROJECT['museum tickets of #REF', '#1']\", \"PROJECT['monies spent on #REF', '#2']\", \"GROUP['sum', '#3', '#1']\", \"COMPARATIVE['#1', '#4', 'is the largest']\", \"PROJECT['the ids of #REF', '#5']\", \"PROJECT['the names of #REF', '#5']\", \"PROJECT['the membership levels of #REF', '#5']\", \"UNION['#6', '#7', '#8']\"]"}
{"id": "SPIDER_dev_421", "input": "What are the id and name of the museum visited most times?", "output": "[\"SELECT['museums']\", \"PROJECT['times visited of #REF', '#1']\", \"SUPERLATIVE['max', '#1', '#2']\", \"PROJECT['id of #REF', '#3']\", \"PROJECT['name of #REF', '#3']\", \"UNION['#4', '#5']\"]"}
{"id": "SPIDER_dev_422", "input": "What is the name of the museum that had no visitor yet?", "output": "[\"SELECT['museums']\", \"FILTER['#1', 'that had no visitor yet']\", \"PROJECT['name of #REF', '#2']\"]"}
{"id": "SPIDER_dev_423", "input": "Find the name and age of the visitor who bought the most tickets at once.", "output": "[\"SELECT['visitors']\", \"PROJECT['tickets #REF bought at once', '#1']\", \"GROUP['count', '#2', '#1']\", \"SUPERLATIVE['max', '#1', '#3']\", \"PROJECT['name of #REF', '#4']\", \"PROJECT['age of #REF', '#4']\", \"UNION['#5', '#6']\"]"}
{"id": "SPIDER_dev_424", "input": "What are the average and maximum number of tickets bought in all visits?", "output": "[\"SELECT['visits']\", \"PROJECT['tickets bought in #REF', '#1']\", \"AGGREGATE['count', '#2']\", \"AGGREGATE['avg', '#3']\", \"AGGREGATE['max', '#3']\", \"UNION['#4', '#5']\"]"}
{"id": "SPIDER_dev_425", "input": "What is the total ticket expense of the visitors whose membership level is 1?", "output": "[\"SELECT['visitors']\", \"FILTER['#1', 'whose membership level is 1']\", \"PROJECT['ticket expense of #REF', '#2']\", \"GROUP['sum', '#3', '#2']\", \"UNION['#2', '#4']\"]"}
{"id": "SPIDER_dev_426", "input": "What is the name of the visitor who visited both a museum opened before 2009 and a museum opened after 2011?", "output": "[\"SELECT['museums']\", \"FILTER['#1', 'that opened before 2009']\", \"FILTER['#1', 'that opened after 2011']\", \"SELECT['the visitor']\", \"INTERSECTION['#4', '#2', '#3']\", \"PROJECT['name of #REF', '#5']\"]"}
{"id": "SPIDER_dev_427", "input": "Find the number of visitors who did not visit any museum opened after 2010.", "output": "[\"SELECT['museums']\", \"FILTER['#1', 'opened after 2010']\", \"PROJECT['visitors of #REF', '#1']\", \"PROJECT['visitors of #REF', '#2']\", \"DISCARD['#3', '#4']\", \"AGGREGATE['count', '#5']\"]"}
{"id": "SPIDER_dev_428", "input": "How many museums were opened after 2013 or before 2008?", "output": "[\"SELECT['museums']\", \"FILTER['#1', 'opened after 2013']\", \"FILTER['#1', 'opened after 2008']\", \"UNION['#2', '#3']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "SPIDER_dev_429", "input": "Find the total number of players.", "output": "[\"SELECT['players']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "SPIDER_dev_43", "input": "Find the number of concerts happened in the stadium with the highest capacity.", "output": "[\"SELECT['stadiums']\", \"PROJECT['capacities of #REF', '#1']\", \"SUPERLATIVE['max', '#1', '#2']\", \"PROJECT['concerts that happened in #REF', '#3']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "SPIDER_dev_431", "input": "Find the total number of matches.", "output": "[\"SELECT['matches']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "SPIDER_dev_432", "input": "Count the number of matches.", "output": "[\"SELECT['matches']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "SPIDER_dev_433", "input": "List the first name and birth date of all players from the country with code USA.", "output": "[\"SELECT['players']\", \"PROJECT['countries of #REF', '#1']\", \"PROJECT['code of #REF', '#2']\", \"COMPARATIVE['#1', '#3', 'is USA']\", \"PROJECT['first names of #REF', '#4']\", \"PROJECT['birth dates of #REF', '#4']\", \"UNION['#5', '#6']\"]"}
{"id": "SPIDER_dev_434", "input": "What are the first names and birth dates of players from the USA?", "output": "[\"SELECT['players']\", \"FILTER['#1', 'from the USA']\", \"PROJECT['first names of #REF', '#2']\", \"PROJECT['birth dates of #REF', '#2']\", \"UNION['#3', '#4']\"]"}
{"id": "SPIDER_dev_435", "input": "Find the average age of losers and winners of all matches.", "output": "[\"SELECT['matches']\", \"PROJECT['winners of #REF', '#1']\", \"PROJECT['losers of #REF', '#1']\", \"UNION['#2', '#3']\", \"PROJECT['ages of #REF', '#4']\", \"AGGREGATE['avg', '#5']\"]"}
{"id": "SPIDER_dev_436", "input": "What are the average ages of losers and winners across matches?", "output": "[\"SELECT['matches']\", \"PROJECT['losers of #REF', '#1']\", \"PROJECT['winners of #REF', '#1']\", \"PROJECT['ages of #REF', '#2']\", \"PROJECT['ages of #REF', '#3']\", \"AGGREGATE['avg', '#4']\", \"AGGREGATE['avg', '#5']\", \"UNION['#6', '#7']\"]"}
{"id": "SPIDER_dev_437", "input": "Find the average rank of winners in all matches.", "output": "[\"SELECT['matches']\", \"PROJECT['winners in #REF', '#1']\", \"PROJECT['ranks of #REF', '#2']\", \"AGGREGATE['avg', '#3']\"]"}
{"id": "SPIDER_dev_438", "input": "What is the average rank for winners in all matches?", "output": "[\"SELECT['winners']\", \"PROJECT['rank of #REF in all matches', '#1']\", \"AGGREGATE['avg', '#2']\"]"}
{"id": "SPIDER_dev_439", "input": "Find the highest rank of losers in all matches.", "output": "[\"SELECT['matches']\", \"PROJECT['losers of #REF', '#1']\", \"PROJECT['ranks of #REF', '#2']\", \"AGGREGATE['max', '#3']\"]"}
{"id": "SPIDER_dev_44", "input": "What are the number of concerts that occurred in the stadium with the largest capacity?", "output": "[\"SELECT['stadiums']\", \"PROJECT['capacities of #REF', '#1']\", \"SUPERLATIVE['max', '#1', '#2']\", \"PROJECT['concerts that occurred in #REF', '#3']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "SPIDER_dev_440", "input": "What is the best rank of losers across all matches?", "output": "[\"SELECT['matches']\", \"PROJECT['losers of #REF', '#1']\", \"PROJECT['ranks of #REF', '#2']\", \"PROJECT['the best #REF', '#3']\"]"}
{"id": "SPIDER_dev_441", "input": "find the number of distinct country codes of all players.", "output": "[\"SELECT['players']\", \"PROJECT['country codes of #REF', '#1']\", \"PROJECT['distinct #REF', '#2']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "SPIDER_dev_442", "input": "How many distinct countries do players come from?", "output": "[\"SELECT['players']\", \"PROJECT['distinct countries #REF come from', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "SPIDER_dev_443", "input": "Find the number of distinct name of losers.", "output": "[\"SELECT['losers']\", \"PROJECT['distinct names of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "SPIDER_dev_444", "input": "How many different loser names are there?", "output": "[\"SELECT['loser names']\", \"PROJECT['different #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"UNION['#1', '#3']\"]"}
{"id": "SPIDER_dev_445", "input": "Find the name of tourney that has more than 10 matches.", "output": "[\"SELECT['tourneys']\", \"PROJECT['matches of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is higher than 10']\", \"PROJECT['name of #REF', '#4']\"]"}
{"id": "SPIDER_dev_446", "input": "What are the names of tournaments that have more than 10 matches?", "output": "[\"SELECT['tournaments']\", \"PROJECT['matches of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is higher than 10']\", \"PROJECT['names of #REF', '#4']\"]"}
{"id": "SPIDER_dev_447", "input": "List the names of all winners who played in both 2013 and 2016.", "output": "[\"SELECT['winners']\", \"FILTER['#1', 'who played in 2013']\", \"FILTER['#1', 'who played in 2016']\", \"INTERSECTION['#1', '#2', '#3']\", \"PROJECT['names of #REF', '#4']\"]"}
{"id": "SPIDER_dev_448", "input": "What are the names of players who won in both 2013 and 2016?", "output": "[\"SELECT['players']\", \"FILTER['#1', 'who won in 2013']\", \"FILTER['#1', 'who won in 2016']\", \"INTERSECTION['#1', '#2', '#3']\", \"PROJECT['names of #REF', '#4']\"]"}
{"id": "SPIDER_dev_449", "input": "List the number of all matches who played in years of 2013 or 2016.", "output": "[\"SELECT['matches']\", \"FILTER['#1', 'played in 2013']\", \"FILTER['#1', 'played in 2016']\", \"UNION['#2', '#3']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "SPIDER_dev_45", "input": "Find the number of pets whose weight is heavier than 10.", "output": "[\"SELECT['pets']\", \"PROJECT['weights of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is higher than 10']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "SPIDER_dev_450", "input": "How many matches were played in 2013 or 2016?", "output": "[\"SELECT['matches']\", \"FILTER['#1', 'played in 2013']\", \"FILTER['#1', 'played in 2016']\", \"UNION['#2', '#3']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "SPIDER_dev_451", "input": "What are the country code and first name of the players who won in both tourney WTA Championships and Australian Open?", "output": "[\"SELECT['players']\", \"PROJECT['tourneys #REF won', '#1']\", \"COMPARATIVE['#1', '#2', 'is WTA Championships']\", \"COMPARATIVE['#1', '#2', 'is Australian Open']\", \"INTERSECTION['#1', '#3', '#4']\", \"PROJECT['country codes of #REF', '#5']\", \"PROJECT['first names of #REF', '#5']\", \"UNION['#6', '#7']\"]"}
{"id": "SPIDER_dev_452", "input": "What are the first names and country codes for players who won both the WTA Championships and the Australian Open?", "output": "[\"SELECT['players']\", \"FILTER['#1', 'who won WTA Championships']\", \"FILTER['#1', 'who won Australian Open']\", \"INTERSECTION['#1', '#2', '#3']\", \"PROJECT['first names of #REF', '#4']\", \"PROJECT['country codes for #REF', '#4']\", \"UNION['#5', '#6']\"]"}
{"id": "SPIDER_dev_453", "input": "Find the first name and country code of the oldest player.", "output": "[\"SELECT['players']\", \"PROJECT['oldest #REF', '#1']\", \"PROJECT['first name of #REF', '#2']\", \"PROJECT['country code of #REF', '#2']\", \"UNION['#3', '#4']\"]"}
{"id": "SPIDER_dev_454", "input": "What is the first name and country code of the oldest player?", "output": "[\"SELECT['players']\", \"PROJECT['the oldest #REF', '#1']\", \"PROJECT['the first name of #REF', '#2']\", \"PROJECT['the country code of #REF', '#2']\", \"UNION['#3', '#4']\"]"}
{"id": "SPIDER_dev_455", "input": "List the first and last name of all players in the order of birth date.", "output": "[\"SELECT['players']\", \"PROJECT['first names of #REF', '#1']\", \"PROJECT['last names of #REF', '#1']\", \"PROJECT['birth dates of #REF', '#1']\", \"UNION['#2', '#3']\", \"SORT['#5', '#4']\"]"}
{"id": "SPIDER_dev_456", "input": "What are the full names of all players, sorted by birth date?", "output": "[\"SELECT['players']\", \"PROJECT['full names of #REF', '#1']\", \"PROJECT['birth dates of #REF', '#1']\", \"SORT['#2', '#3']\"]"}
{"id": "SPIDER_dev_457", "input": "List the first and last name of all players who are left / L hand in the order of birth date.", "output": "[\"SELECT['players']\", \"PROJECT['hand of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is left / L']\", \"PROJECT['first names of #REF', '#3']\", \"PROJECT['last names of #REF', '#3']\", \"PROJECT['birth dates of #REF', '#3']\", \"UNION['#4', '#5']\", \"SORT['#7', '#6']\"]"}
{"id": "SPIDER_dev_458", "input": "What are the full names of all left handed players, in order of birth date?", "output": "[\"SELECT['players']\", \"FILTER['#1', 'that are left handed']\", \"PROJECT['full names of #REF', '#2']\", \"PROJECT['birth dates of #REF', '#2']\", \"SORT['#3', '#4']\"]"}
{"id": "SPIDER_dev_459", "input": "Find the first name and country code of the player who did the most number of tours.", "output": "[\"SELECT['players']\", \"PROJECT['tours of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"SUPERLATIVE['max', '#1', '#3']\", \"PROJECT['first name of #REF', '#4']\", \"PROJECT['country code of #REF', '#4']\", \"UNION['#5', '#6']\"]"}
{"id": "SPIDER_dev_46", "input": "How many pets have a greater weight than 10?", "output": "[\"SELECT['pets']\", \"PROJECT['weights of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is greater than 10']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "SPIDER_dev_460", "input": "What is the first name and country code of the player with the most tours?", "output": "[\"SELECT['players']\", \"PROJECT['tours of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"SUPERLATIVE['max', '#1', '#3']\", \"PROJECT['first name of #REF', '#4']\", \"PROJECT['country code of #REF', '#4']\", \"UNION['#5', '#6']\"]"}
{"id": "SPIDER_dev_461", "input": "Find the year that has the most number of matches.", "output": "[\"SELECT['years']\", \"PROJECT['matches in #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"SUPERLATIVE['max', '#1', '#3']\"]"}
{"id": "SPIDER_dev_462", "input": "Which year had the most matches?", "output": "[\"SELECT['matches']\", \"PROJECT['year of #REF', '#1']\", \"GROUP['count', '#1', '#2']\", \"SUPERLATIVE['max', '#2', '#3']\"]"}
{"id": "SPIDER_dev_463", "input": "Find the name and rank points of the winner who won the most times.", "output": "[\"SELECT['winners']\", \"PROJECT['times #REF won', '#1']\", \"GROUP['count', '#2', '#1']\", \"SUPERLATIVE['max', '#1', '#3']\", \"PROJECT['name of #REF', '#4']\", \"PROJECT['rank points of #REF', '#4']\", \"UNION['#5', '#6']\"]"}
{"id": "SPIDER_dev_464", "input": "What is the name of the winner who has won the most matches, and how many rank points does this player have?", "output": "[\"SELECT['winners']\", \"PROJECT['won', '#1']\", \"GROUP['count', '#2', '#1']\", \"SUPERLATIVE['max', '#1', '#3']\", \"PROJECT['the name of #REF', '#4']\", \"PROJECT['rank points #REF has', '#4']\", \"GROUP['count', '#6', '#4']\", \"UNION['#5', '#7']\"]"}
{"id": "SPIDER_dev_465", "input": "Find the name of the winner who has the highest rank points and participated in the Australian Open tourney.", "output": "[\"SELECT['winners']\", \"PROJECT['tourneys #REF participated in', '#1']\", \"COMPARATIVE['#1', '#2', 'is Australian Open']\", \"PROJECT['rank points of #REF', '#3']\", \"SUPERLATIVE['max', '#3', '#4']\", \"PROJECT['name of #REF', '#5']\"]"}
{"id": "SPIDER_dev_466", "input": "What is the name of the winner with the most rank points who participated in the Australian Open tournament?", "output": "[\"SELECT['winners']\", \"FILTER['#1', 'who participated in the Australian Open tournament']\", \"PROJECT['rank points of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is the highest']\", \"PROJECT['the name of #REF', '#4']\"]"}
{"id": "SPIDER_dev_467", "input": "find the names of loser and winner who played in the match with greatest number of minutes.", "output": "[\"SELECT['match']\", \"PROJECT['minutes of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"SUPERLATIVE['max', '#1', '#3']\", \"PROJECT['winner of #REF', '#4']\", \"PROJECT['name of #REF', '#5']\", \"PROJECT['loser of #REF', '#4']\", \"PROJECT['name of #REF', '#7']\", \"UNION['#6', '#8']\"]"}
{"id": "SPIDER_dev_468", "input": "What are the names of the winner and loser who played in the longest match?", "output": "[\"SELECT['matches']\", \"FILTER['#1', 'that was the longest']\", \"PROJECT['winner of #REF', '#2']\", \"PROJECT['name of #REF', '#3']\", \"PROJECT['loser of #REF', '#2']\", \"PROJECT['name of #REF', '#5']\", \"UNION['#4', '#6']\"]"}
{"id": "SPIDER_dev_469", "input": "Find the average ranking for each player and their first name.", "output": "[\"SELECT['players']\", \"PROJECT['rankings of #REF', '#1']\", \"GROUP['avg', '#2', '#1']\", \"PROJECT['first names of #REF', '#1']\", \"UNION['#3', '#4']\"]"}
{"id": "SPIDER_dev_47", "input": "Find the weight of the youngest dog.", "output": "[\"SELECT['dogs']\", \"PROJECT['youngness of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is youngest']\", \"PROJECT['weight of #REF', '#3']\"]"}
{"id": "SPIDER_dev_470", "input": "What are the first names of all players, and their average rankings?", "output": "[\"SELECT['players']\", \"PROJECT['first names of #REF', '#1']\", \"PROJECT['rankings of #REF', '#1']\", \"GROUP['avg', '#3', '#1']\", \"UNION['#2', '#4']\"]"}
{"id": "SPIDER_dev_471", "input": "Find the total ranking points for each player and their first name.", "output": "[\"SELECT['players']\", \"PROJECT['ranking points of #REF', '#1']\", \"GROUP['sum', '#2', '#1']\", \"PROJECT['first names of #REF', '#1']\", \"UNION['#3', '#4']\"]"}
{"id": "SPIDER_dev_472", "input": "What are the first names of all players, and their total ranking points?", "output": "[\"SELECT['players']\", \"PROJECT['the first names of all #REF', '#1']\", \"PROJECT['ranking of all #REF', '#1']\", \"GROUP['sum', '#3', '#1']\", \"UNION['#2', '#4']\"]"}
{"id": "SPIDER_dev_473", "input": "find the number of players for each country.", "output": "[\"SELECT['players']\", \"PROJECT['countries of #REF', '#1']\", \"GROUP['count', '#1', '#2']\", \"UNION['#2', '#3']\"]"}
{"id": "SPIDER_dev_474", "input": "How many players are from each country?", "output": "[\"SELECT['countries']\", \"PROJECT['players from #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"UNION['#1', '#3']\"]"}
{"id": "SPIDER_dev_475", "input": "find the code of the country where has the greatest number of players.", "output": "[\"SELECT['countries']\", \"PROJECT['players of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is greatest']\", \"PROJECT['code of #REF', '#4']\"]"}
{"id": "SPIDER_dev_476", "input": "What is the code of the country with the most players?", "output": "[\"SELECT['countries']\", \"PROJECT['players', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is the highest']\", \"PROJECT['the code of #REF', '#4']\"]"}
{"id": "SPIDER_dev_477", "input": "Find the codes of countries that have more than 50 players.", "output": "[\"SELECT['countries']\", \"PROJECT['players of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is higher than 50']\", \"PROJECT['codes of #REF', '#4']\"]"}
{"id": "SPIDER_dev_478", "input": "What are the codes of countries with more than 50 players?", "output": "[\"SELECT['countries']\", \"PROJECT['players of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is higher than 50']\", \"PROJECT['codes of #REF', '#4']\"]"}
{"id": "SPIDER_dev_479", "input": "Find the total number of tours for each ranking date.", "output": "[\"SELECT['ranking dates']\", \"PROJECT['tours on #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"UNION['#1', '#3']\"]"}
{"id": "SPIDER_dev_48", "input": "How much does the youngest dog weigh?", "output": "[\"SELECT['dogs']\", \"PROJECT['the youngest #REF', '#1']\", \"PROJECT['how much #REF weigh', '#2']\"]"}
{"id": "SPIDER_dev_480", "input": "How many total tours were there for each ranking date?", "output": "[\"SELECT['ranking dates']\", \"PROJECT['tours of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"UNION['#1', '#3']\"]"}
{"id": "SPIDER_dev_481", "input": "Find the number of matches happened in each year.", "output": "[\"SELECT['years']\", \"PROJECT['matches in #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"UNION['#1', '#3']\"]"}
{"id": "SPIDER_dev_482", "input": "How many matches were played in each year?", "output": "[\"SELECT['years']\", \"PROJECT['matches in #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"UNION['#1', '#3']\"]"}
{"id": "SPIDER_dev_483", "input": "Find the name and rank of the 3 youngest winners across all matches.", "output": "[\"SELECT['matches']\", \"PROJECT['winners of #REF', '#1']\", \"PROJECT['the 3 youngest #REF', '#2']\", \"PROJECT['names of #REF', '#3']\", \"PROJECT['ranks of #REF', '#3']\", \"UNION['#4', '#5']\"]"}
{"id": "SPIDER_dev_484", "input": "What are the names and ranks of the three youngest winners across all matches?", "output": "[\"SELECT['matches']\", \"PROJECT['winners of #REF', '#1']\", \"PROJECT['youngness of #REF', '#2']\", \"SUPERLATIVE['max', '#2', '#3']\", \"DISCARD['#2', '#4']\", \"SUPERLATIVE['max', '#4', '#3']\", \"DISCARD['#5', '#6']\", \"SUPERLATIVE['max', '#7', '#3']\", \"UNION['#4', '#6', '#8']\", \"PROJECT['names of #REF', '#9']\", \"PROJECT['ranks of #REF', '#9']\", \"UNION['#10', '#11']\"]"}
{"id": "SPIDER_dev_485", "input": "How many different winners both participated in the WTA Championships and were left handed?", "output": "[\"SELECT['winners']\", \"FILTER['#1', 'who participated in the WTA Championships']\", \"FILTER['#1', 'who were left handed']\", \"INTERSECTION['#1', '#2', '#3']\", \"PROJECT['different #REF', '#4']\", \"GROUP['count', '#5', '#4']\", \"UNION['#4', '#6']\"]"}
{"id": "SPIDER_dev_486", "input": "Find the number of left handed winners who participated in the WTA Championships.", "output": "[\"SELECT['winners']\", \"FILTER['#1', 'who are left handed']\", \"FILTER['#2', 'who participated in the WTA Championships']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "SPIDER_dev_487", "input": "Find the first name, country code and birth date of the winner who has the highest rank points in all matches.", "output": "[\"SELECT['winners']\", \"PROJECT['matches of #REF', '#1']\", \"PROJECT['rank points in #REF', '#2']\", \"SUPERLATIVE['max', '#1', '#3']\", \"PROJECT['first name of #REF', '#4']\", \"PROJECT['country of #REF', '#4']\", \"PROJECT['code of #REF', '#5']\", \"PROJECT['birth date of #REF', '#4']\", \"UNION['#5', '#7', '#8']\"]"}
{"id": "SPIDER_dev_488", "input": "What is the first name, country code, and birth date of the player with the most winner rank points across all matches?", "output": "[\"SELECT['matches']\", \"PROJECT['players of #REF', '#1']\", \"PROJECT['winner rank points of #REF', '#2']\", \"GROUP['sum', '#3', '#2']\", \"SUPERLATIVE['max', '#2', '#4']\", \"PROJECT['first name of #REF', '#5']\", \"PROJECT['country code of #REF', '#5']\", \"PROJECT['births date of #REF', '#5']\", \"UNION['#6', '#7', '#8']\"]"}
{"id": "SPIDER_dev_489", "input": "Find the number of players for each hand type.", "output": "[\"SELECT['hand types']\", \"PROJECT['players of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"UNION['#1', '#3']\"]"}
{"id": "SPIDER_dev_49", "input": "Find the maximum weight for each type of pet. List the maximum weight and pet type.", "output": "[\"SELECT['pets']\", \"SELECT['types of pets']\", \"PROJECT['weights of #REF', '#2']\", \"GROUP['max', '#3', '#2']\", \"UNION['#4', '#2']\"]"}
{"id": "SPIDER_dev_490", "input": "How many players are there for each hand type?", "output": "[\"SELECT['hand types']\", \"PROJECT['players of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"UNION['#1', '#3']\"]"}
{"id": "SPIDER_dev_491", "input": "How many ships ended up being 'Captured'?", "output": "[\"SELECT['ships']\", \"FILTER['#1', 'that ended up being Captured']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "SPIDER_dev_492", "input": "List the name and tonnage ordered by in descending alphaetical order for the names.", "output": "[\"SELECT['names']\", \"SELECT['tonnages']\", \"UNION['#1', '#2']\", \"SORT['#3', '#1', 'in descending alphaetical order']\"]"}
{"id": "SPIDER_dev_493", "input": "List the name, date and result of each battle.", "output": "[\"SELECT['battles']\", \"PROJECT['names of #REF', '#1']\", \"PROJECT['dates of #REF', '#1']\", \"PROJECT['results of #REF', '#1']\", \"UNION['#2', '#3', '#4']\"]"}
{"id": "SPIDER_dev_494", "input": "What is maximum and minimum death toll caused each time?", "output": "[\"SELECT['death tolls']\", \"AGGREGATE['max', '#1']\", \"AGGREGATE['min', '#1']\", \"UNION['#2', '#3']\"]"}
{"id": "SPIDER_dev_495", "input": "What is the average number of injuries caused each time?", "output": "[\"SELECT['injuries']\", \"FILTER['#1', 'caused each time']\", \"AGGREGATE['count', '#2']\", \"PROJECT['time', '#3']\", \"GROUP['avg', '#3', '#4']\", \"UNION['#4', '#5']\"]"}
{"id": "SPIDER_dev_496", "input": "What are the death and injury situations caused by the ship with tonnage 't'?", "output": "[\"SELECT['ships']\", \"PROJECT['tonnages of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is t']\", \"PROJECT['death situations caused by #REF', '#3']\", \"PROJECT['injury situations caused by #REF', '#3']\", \"UNION['#4', '#5']\"]"}
{"id": "SPIDER_dev_497", "input": "What are the name and results of the battles when the bulgarian commander is not 'Boril'", "output": "[\"SELECT['battles']\", \"PROJECT['bulgarian commanders of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is not Boril']\", \"PROJECT['names of #REF', '#3']\", \"PROJECT['results of #REF', '#3']\", \"UNION['#4', '#5']\"]"}
{"id": "SPIDER_dev_498", "input": "What are the different ids and names of the battles that lost any 'Brig' type shipes?", "output": "[\"SELECT['battles']\", \"FILTER['#1', 'that lost any Brig type shipes']\", \"PROJECT['the different ids of #REF', '#2']\", \"PROJECT['the names of #REF', '#2']\", \"UNION['#3', '#4']\"]"}
{"id": "SPIDER_dev_499", "input": "What are the ids and names of the battles that led to more than 10 people killed in total.", "output": "[\"SELECT['battles']\", \"PROJECT['killed', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is more than 10']\", \"PROJECT['the ids of #REF', '#4']\", \"PROJECT['the names of #REF', '#4']\", \"UNION['#5', '#6']\"]"}
{"id": "SPIDER_dev_5", "input": "What is the average, minimum, and maximum age for all French singers?", "output": "[\"SELECT['singers']\", \"FILTER['#1', 'who are French']\", \"PROJECT['ages of #REF', '#2']\", \"AGGREGATE['avg', '#3']\", \"AGGREGATE['min', '#3']\", \"AGGREGATE['max', '#3']\", \"UNION['#4', '#5', '#6']\"]"}
{"id": "SPIDER_dev_50", "input": "List the maximum weight and type for each type of pet.", "output": "[\"SELECT['pets']\", \"PROJECT['types of #REF', '#1']\", \"PROJECT['weights of #REF', '#2']\", \"GROUP['max', '#3', '#2']\", \"UNION['#4', '#2']\"]"}
{"id": "SPIDER_dev_500", "input": "What is the ship id and name that caused most total injuries?", "output": "[\"SELECT['ships']\", \"SELECT['injuries']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is the highest']\", \"PROJECT['the ship id of #REF', '#4']\", \"PROJECT['the name of #REF', '#4']\", \"UNION['#5', '#6']\"]"}
{"id": "SPIDER_dev_501", "input": "What are the distinct battle names which are between bulgarian commander 'Kaloyan' and latin commander 'Baldwin I'?", "output": "[\"SELECT['battles']\", \"FILTER['#1', 'between bulgarian commander Kaloyan']\", \"FILTER['#2', 'between latin commander Baldwin']\", \"PROJECT['names of #REF', '#3']\"]"}
{"id": "SPIDER_dev_502", "input": "How many different results are there for the battles?", "output": "[\"SELECT['battles']\", \"PROJECT['different results of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "SPIDER_dev_503", "input": "How many battles did not lose any ship with tonnage '225'?", "output": "[\"SELECT['battles']\", \"PROJECT['ships lose of #REF', '#1']\", \"PROJECT['tonnages of #REF', '#2']\", \"COMPARATIVE['#2', '#3', 'is equal to 225']\", \"GROUP['count', '#4', '#1']\", \"COMPARATIVE['#1', '#5', 'is equal to zero']\", \"AGGREGATE['count', '#6']\"]"}
{"id": "SPIDER_dev_504", "input": "List the name and date the battle that has lost the ship named 'Lettice' and the ship named 'HMS Atalanta'", "output": "[\"SELECT['battles']\", \"PROJECT['ships lost in #REF', '#1']\", \"PROJECT['names of #REF', '#2']\", \"COMPARATIVE['#1', '#3', 'is Lettice']\", \"COMPARATIVE['#1', '#3', 'is HMS Atalanta']\", \"INTERSECTION['#1', '#4', '#5']\", \"PROJECT['name of #REF', '#6']\", \"PROJECT['date of #REF', '#6']\", \"UNION['#7', '#8']\"]"}
{"id": "SPIDER_dev_505", "input": "Show names, results and bulgarian commanders of the battles with no ships lost in the 'English Channel'.", "output": "[\"SELECT['the battles']\", \"PROJECT['ships lost in the English Channel of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is equal to zero']\", \"PROJECT['names of #REF', '#4']\", \"PROJECT['results of #REF', '#4']\", \"PROJECT['bulgarian commanders of #REF', '#4']\", \"UNION['#5', '#6', '#7']\"]"}
{"id": "SPIDER_dev_506", "input": "What are the notes of the death events which has substring 'East'?", "output": "[\"SELECT['death events']\", \"FILTER['#1', 'which has substring East']\", \"PROJECT['notes of #REF', '#2']\"]"}
{"id": "SPIDER_dev_51", "input": "Find number of pets owned by students who are older than 20.", "output": "[\"SELECT['students']\", \"FILTER['#1', 'older than 20']\", \"PROJECT['pets of #REF', '#2']\", \"AGGREGATE['count', '#3']\"]"}
{"id": "SPIDER_dev_52", "input": "How many pets are owned by students that have an age greater than 20?", "output": "[\"SELECT['students']\", \"PROJECT['ages of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is higher than 20']\", \"PROJECT['pets owned by #REF', '#3']\", \"AGGREGATE['count', '#4']\"]"}
{"id": "SPIDER_dev_53", "input": "Find the number of dog pets that are raised by female students (with sex F).", "output": "[\"SELECT['students']\", \"FILTER['#1', 'that are female']\", \"PROJECT['dog pets raised by #REF', '#2']\", \"GROUP['count', '#3', '#2']\", \"AGGREGATE['sum', '#4']\"]"}
{"id": "SPIDER_dev_54", "input": "How many dog pets are raised by female students?", "output": "[\"SELECT['students']\", \"FILTER['#1', 'that are female']\", \"PROJECT['dog pets that are raised by #REF', '#2']\", \"GROUP['count', '#3', '#2']\", \"AGGREGATE['sum', '#4']\"]"}
{"id": "SPIDER_dev_55", "input": "Find the number of distinct type of pets.", "output": "[\"SELECT['pets']\", \"PROJECT['distinct types of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "SPIDER_dev_56", "input": "How many different types of pet are there?", "output": "[\"SELECT['pets']\", \"PROJECT['different types of #REF', '#1']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "SPIDER_dev_57", "input": "Find the first name of students who have cat or dog pet.", "output": "[\"SELECT['students']\", \"PROJECT['pets of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is dog']\", \"COMPARATIVE['#1', '#2', 'is cat']\", \"UNION['#3', '#4']\", \"PROJECT['first names of #REF', '#5']\"]"}
{"id": "SPIDER_dev_58", "input": "What are the first names of every student who has a cat or dog as a pet?", "output": "[\"SELECT['students']\", \"PROJECT['pets of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is cat']\", \"COMPARATIVE['#1', '#2', 'is dog']\", \"UNION['#3', '#4']\", \"PROJECT['first names of #REF', '#5']\"]"}
{"id": "SPIDER_dev_59", "input": "Find the first name of students who have both cat and dog pets.", "output": "[\"SELECT['students']\", \"FILTER['#1', 'who have cats']\", \"FILTER['#1', 'who have dog pets']\", \"INTERSECTION['#1', '#2', '#3']\", \"PROJECT['first names of #REF', '#4']\"]"}
{"id": "SPIDER_dev_6", "input": "Show the name and the release year of the song by the youngest singer.", "output": "[\"SELECT['songs']\", \"PROJECT['singers of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is youngest']\", \"PROJECT['name of #REF', '#3']\", \"PROJECT['release year of #REF', '#3']\", \"UNION['#4', '#5']\"]"}
{"id": "SPIDER_dev_60", "input": "What are the students' first names who have both cats and dogs as pets?", "output": "[\"SELECT['students']\", \"PROJECT['pets of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is cats']\", \"COMPARATIVE['#1', '#2', 'is dogs']\", \"SELECT['first names']\", \"INTERSECTION['#5', '#3', '#4']\"]"}
{"id": "SPIDER_dev_61", "input": "Find the major and age of students who do not have a cat pet.", "output": "[\"SELECT['students']\", \"PROJECT['pets of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is not cat']\", \"PROJECT['major of #REF', '#3']\", \"PROJECT['age of #REF', '#3']\", \"UNION['#4', '#5']\"]"}
{"id": "SPIDER_dev_62", "input": "What major is every student who does not own a cat as a pet, and also how old are they?", "output": "[\"SELECT['students']\", \"FILTER['#1', 'who do not own cats as a pet']\", \"PROJECT['major of #REF', '#2']\", \"PROJECT['how old are #REF', '#2']\", \"UNION['#3', '#4']\"]"}
{"id": "SPIDER_dev_63", "input": "Find the id of students who do not have a cat pet.", "output": "[\"SELECT['students']\", \"PROJECT['pets of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is not cat']\", \"PROJECT['id of #REF', '#3']\"]"}
{"id": "SPIDER_dev_64", "input": "What are the ids of the students who do not own cats as pets?", "output": "[\"SELECT['students']\", \"FILTER['#1', 'who own cats as pets']\", \"DISCARD['#1', '#2']\", \"PROJECT['the ids of #REF', '#3']\"]"}
{"id": "SPIDER_dev_65", "input": "Find the first name and age of students who have a dog but do not have a cat as a pet.", "output": "[\"SELECT['students']\", \"PROJECT['pets of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is dog']\", \"COMPARATIVE['#1', '#2', 'is not cat']\", \"INTERSECTION['#1', '#3', '#4']\", \"PROJECT['first names of #REF', '#5']\", \"PROJECT['ages of #REF', '#5']\", \"UNION['#6', '#7']\"]"}
{"id": "SPIDER_dev_66", "input": "What is the first name of every student who has a dog but does not have a cat?", "output": "[\"SELECT['students']\", \"FILTER['#1', 'who has a dog']\", \"FILTER['#2', 'who has a cat']\", \"DISCARD['#2', '#3']\", \"PROJECT['first name of #REF', '#4']\"]"}
{"id": "SPIDER_dev_67", "input": "Find the type and weight of the youngest pet.", "output": "[\"SELECT['pets']\", \"PROJECT['youngest #REF', '#1']\", \"PROJECT['type of #REF', '#2']\", \"PROJECT['weight of #REF', '#2']\", \"UNION['#3', '#4']\"]"}
{"id": "SPIDER_dev_68", "input": "What type of pet is the youngest animal, and how much does it weigh?", "output": "[\"SELECT['pets']\", \"FILTER['#1', 'which is the youngest animal']\", \"PROJECT['the type of #REF', '#2']\", \"PROJECT['how much does #REF weigh', '#2']\", \"UNION['#3', '#4']\"]"}
{"id": "SPIDER_dev_69", "input": "Find the id and weight of all pets whose age is older than 1.", "output": "[\"SELECT['pets']\", \"PROJECT['ages of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is higher than 1']\", \"PROJECT['ids of #REF', '#3']\", \"PROJECT['weights of #REF', '#3']\", \"UNION['#4', '#5']\"]"}
{"id": "SPIDER_dev_7", "input": "What are the names and release years for all the songs of the youngest singer?", "output": "[\"SELECT['singers']\", \"FILTER['#1', 'that is the youngest']\", \"PROJECT['songs of #REF', '#2']\", \"PROJECT['names of #REF', '#3']\", \"PROJECT['release years of #REF', '#3']\", \"UNION['#4', '#5']\"]"}
{"id": "SPIDER_dev_70", "input": "What is the id and weight of every pet who is older than 1?", "output": "[\"SELECT['pets']\", \"FILTER['#1', 'who is older than 1']\", \"PROJECT['the id of #REF', '#2']\", \"PROJECT['the weight of #REF', '#2']\", \"UNION['#3', '#4']\"]"}
{"id": "SPIDER_dev_71", "input": "Find the average and maximum age for each type of pet.", "output": "[\"SELECT['pets']\", \"PROJECT['types of #REF', '#1']\", \"PROJECT['ages of #REF', '#2']\", \"GROUP['avg', '#3', '#2']\", \"GROUP['max', '#3', '#2']\", \"UNION['#4', '#5']\"]"}
{"id": "SPIDER_dev_72", "input": "What is the average and maximum age for each pet type?", "output": "[\"SELECT['pet types']\", \"PROJECT['ages of #REF', '#1']\", \"GROUP['avg', '#2', '#1']\", \"GROUP['max', '#2', '#1']\", \"UNION['#3', '#4']\"]"}
{"id": "SPIDER_dev_73", "input": "Find the average weight for each pet type.", "output": "[\"SELECT['pet types']\", \"PROJECT['weights of #REF', '#1']\", \"GROUP['avg', '#2', '#1']\", \"UNION['#1', '#3']\"]"}
{"id": "SPIDER_dev_74", "input": "What is the average weight for each type of pet?", "output": "[\"SELECT['pets']\", \"PROJECT['types of #REF', '#1']\", \"PROJECT['weights of #REF', '#2']\", \"GROUP['avg', '#3', '#2']\", \"UNION['#2', '#4']\"]"}
{"id": "SPIDER_dev_75", "input": "Find the first name and age of students who have a pet.", "output": "[\"SELECT['students']\", \"FILTER['#1', 'who have a pet']\", \"PROJECT['first names of #REF', '#2']\", \"PROJECT['ages of #REF', '#2']\", \"UNION['#3', '#4']\"]"}
{"id": "SPIDER_dev_76", "input": "What are the different first names and ages of the students who do have pets?", "output": "[\"SELECT['students']\", \"FILTER['#1', 'that have pets']\", \"PROJECT['different first names of #REF', '#2']\", \"PROJECT['ages of #REF', '#2']\", \"UNION['#3', '#4']\"]"}
{"id": "SPIDER_dev_77", "input": "Find the id of the pet owned by student whose last name is ‘Smith’.", "output": "[\"SELECT['students']\", \"PROJECT['last names of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is Smith']\", \"PROJECT['pet owned by #REF', '#3']\", \"PROJECT['id of #REF', '#4']\"]"}
{"id": "SPIDER_dev_78", "input": "What is the id of the pet owned by the student whose last name is 'Smith'?", "output": "[\"SELECT['students']\", \"PROJECT['last names of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is Smith']\", \"PROJECT['pet owned by #REF', '#3']\", \"PROJECT['id of #REF', '#4']\"]"}
{"id": "SPIDER_dev_79", "input": "Find the number of pets for each student who has any pet and student id.", "output": "[\"SELECT['students']\", \"FILTER['#1', 'who have any pet']\", \"PROJECT['pets of #REF', '#2']\", \"GROUP['count', '#3', '#2']\", \"PROJECT['student ids of #REF', '#2']\", \"UNION['#4', '#5']\"]"}
{"id": "SPIDER_dev_8", "input": "What are all distinct countries where singers above age 20 are from?", "output": "[\"SELECT['singers']\", \"PROJECT['ages of #REF', '#1']\", \"COMPARATIVE['#1', '#2', 'is higher than 20']\", \"PROJECT['distinct countries #REF are from', '#3']\"]"}
{"id": "SPIDER_dev_80", "input": "For students who have pets, how many pets does each student have? list their ids instead of names.", "output": "[\"SELECT['students']\", \"FILTER['#1', 'who have pets']\", \"PROJECT['pets of #REF', '#2']\", \"GROUP['count', '#3', '#2']\", \"UNION['#2', '#4']\"]"}
{"id": "SPIDER_dev_81", "input": "Find the first name and gender of student who have more than one pet.", "output": "[\"SELECT['students']\", \"PROJECT['pets of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is higher than one']\", \"PROJECT['first names of #REF', '#4']\", \"PROJECT['gender of #REF', '#4']\", \"UNION['#5', '#6']\"]"}
{"id": "SPIDER_dev_82", "input": "What is the first name and gender of the all the students who have more than one pet?", "output": "[\"SELECT['students']\", \"PROJECT['pets of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"COMPARATIVE['#1', '#3', 'is more than one']\", \"PROJECT['first names of #REF', '#4']\", \"PROJECT['genders of #REF', '#4']\", \"UNION['#5', '#6']\"]"}
{"id": "SPIDER_dev_83", "input": "Find the last name of the student who has a cat that is age 3.", "output": "[\"SELECT['students']\", \"PROJECT['cats of #REF', '#1']\", \"PROJECT['ages of #REF', '#2']\", \"COMPARATIVE['#1', '#3', 'is 3']\", \"PROJECT['last name of #REF', '#4']\"]"}
{"id": "SPIDER_dev_84", "input": "What is the last name of the student who has a cat that is 3 years old?", "output": "[\"SELECT['students']\", \"FILTER['#1', 'who has a cat that is 3 years old']\", \"PROJECT['last name of #REF', '#2']\"]"}
{"id": "SPIDER_dev_85", "input": "Find the average age of students who do not have any pet.", "output": "[\"SELECT['students']\", \"FILTER['#1', 'who do not have pets']\", \"PROJECT['ages of #REF', '#2']\", \"AGGREGATE['avg', '#3']\"]"}
{"id": "SPIDER_dev_86", "input": "What is the average age for all students who do not own any pets?", "output": "[\"SELECT['students']\", \"FILTER['#1', 'who own pets']\", \"DISCARD['#1', '#2']\", \"PROJECT['the age for all #REF', '#3']\", \"AGGREGATE['avg', '#4']\"]"}
{"id": "SPIDER_dev_87", "input": "How many continents are there?", "output": "[\"SELECT['continents']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "SPIDER_dev_88", "input": "What is the number of continents?", "output": "[\"SELECT['continents']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "SPIDER_dev_89", "input": "How many countries does each continent have? List the continent id, continent name and the number of countries.", "output": "[\"SELECT['continents']\", \"PROJECT['countries of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"PROJECT['continent ids of #REF', '#1']\", \"PROJECT['continent names of #REF', '#1']\", \"UNION['#4', '#5', '#3']\"]"}
{"id": "SPIDER_dev_9", "input": "What are  the different countries with singers above age 20?", "output": "[\"SELECT['countries']\", \"PROJECT['singers of #REF', '#1']\", \"PROJECT['ages of #REF', '#2']\", \"COMPARATIVE['#1', '#3', 'is higher than 20']\", \"PROJECT['different #REF', '#4']\"]"}
{"id": "SPIDER_dev_90", "input": "For each continent, list its id, name, and how many countries it has?", "output": "[\"SELECT['continents']\", \"PROJECT['ids of #REF', '#1']\", \"PROJECT['names of #REF', '#1']\", \"PROJECT['countries of #REF', '#1']\", \"GROUP['count', '#4', '#1']\", \"UNION['#2', '#3', '#5']\"]"}
{"id": "SPIDER_dev_91", "input": "How many countries are listed?", "output": "[\"SELECT['countries']\", \"FILTER['#1', 'that are listed']\", \"AGGREGATE['count', '#2']\"]"}
{"id": "SPIDER_dev_92", "input": "How many countries exist?", "output": "[\"SELECT['countries']\", \"AGGREGATE['count', '#1']\"]"}
{"id": "SPIDER_dev_93", "input": "How many models does each car maker produce? List maker full name, id and the number.", "output": "[\"SELECT['car makers']\", \"PROJECT['models #REF produce', '#1']\", \"GROUP['count', '#2', '#1']\", \"PROJECT['full name of #REF', '#1']\", \"PROJECT['id of #REF', '#1']\", \"UNION['#4', '#5', '#3']\"]"}
{"id": "SPIDER_dev_94", "input": "What is the full name of each car maker, along with its id and how many models it produces?", "output": "[\"SELECT['car makers']\", \"PROJECT['models of #REF', '#1']\", \"GROUP['count', '#2', '#1']\", \"PROJECT['full names of #REF', '#1']\", \"PROJECT['ids of #REF', '#1']\", \"UNION['#4', '#5', '#3']\"]"}
{"id": "SPIDER_dev_95", "input": "Which model of the car has the minimum horsepower?", "output": "[\"SELECT['cars']\", \"PROJECT['horsepower of #REF', '#1']\", \"AGGREGATE['min', '#2']\", \"COMPARATIVE['#1', '#2', 'is equal to #3']\", \"PROJECT['model of #REF', '#4']\"]"}
{"id": "SPIDER_dev_96", "input": "What is the model of the car with the smallest amount of horsepower?", "output": "[\"SELECT['cars']\", \"PROJECT['horsepower of #REF', '#1']\", \"SUPERLATIVE['min', '#1', '#2']\", \"PROJECT['model of #REF', '#3']\"]"}
{"id": "SPIDER_dev_97", "input": "Find the model of the car whose weight is below the average weight.", "output": "[\"SELECT['cars']\", \"PROJECT['models of #REF', '#1']\", \"PROJECT['weights of #REF', '#2']\", \"AGGREGATE['avg', '#3']\", \"COMPARATIVE['#2', '#3', 'is lower than #4']\"]"}
{"id": "SPIDER_dev_98", "input": "What is the model for the car with a weight smaller than the average?", "output": "[\"SELECT['cars']\", \"PROJECT['weights of #REF', '#1']\", \"AGGREGATE['avg', '#2']\", \"COMPARATIVE['#1', '#2', 'is lower than #3']\", \"PROJECT['model of #REF', '#4']\"]"}
{"id": "SPIDER_dev_99", "input": "Find the name of the makers that produced some cars in the year of 1970?", "output": "[\"SELECT['cars']\", \"FILTER['#1', 'produced in 1970']\", \"PROJECT['makers of #REF', '#2']\", \"PROJECT['names of #REF', '#3']\"]"}
