{"input": "How many dog pets are raised by female students? <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Student, comparative #1 #1 equal/F col:Student/Sex, project tbl:Has_Pets #2, aggregate count #3", "alternatives": "select val:Student, project tbl:Pets #1, comparative #2 #2 equal/F col:Student/Sex, aggregate count #3"}
{"input": "Which airlines have a flight with source airport AHD? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select col:flights, project tbl:flights #1, project col:flights/SourceAirport #2, comparative #1 #3 equal/AHD", "alternatives": "select col:airlines, project tbl:flights #1, project col:airports/SourceAirport #2, comparative #1 #3 equal/AHD"}
{"input": "What are the first names of all players, and their total ranking points? <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:players, project col:players/first_name #1, project col:players/ranking_points #1, group #3 #1, union #2 #4", "alternatives": "select tbl:players, union #2 #4, project col:players/ranking_points #1, group #3 #1, project col:players/first_name #1"}
{"input": "Show ids for all templates that are used by more than one document. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Templates, project tbl:Documents #1, group #2 #1, comparative #1 #3 great/1, project col:Documents/Template_ID #4", "alternatives": "select col:Templates, project tbl:Documents #1, comparative #1 #3  equal1, group #2 #1, project col:Documents/Template_ID #4"}
{"input": "What are the ids and texts of paragraphs in the document titled 'Welcome to NY'? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Paragraphs, comparative #1 #1 equal/Welcome to NY col:Documents/Document_Name, project col:Paragraphs/Paragraph_ID #2, project col:Paragraphs/Paragraph_Text #2, union #3 #4", "alternatives": "select tbl:Paragraphs, comparative #1 #1 equal/Welcome to NY col:Documents/Document_Name, project col:Paragraphs/Paragraph_ID #2, project col:Paragraphs/Paragraph_Text #2, union #3 #4."}
{"input": "Find the names of employees who never won any award in the evaluation. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select tbl:evaluation, project tbl:evaluation #1, select tbl:employee, discard #3 #2, project col:employee/Name #4", "alternatives": "select tbl:employee, comparative #1 #1 tbl:evaluation, discard #1 #2, project col:employee/Name #3"}
{"input": "Return the names and template ids for documents that contain the letter w in their description. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, project col:Documents/Document_Description #1, comparative #1 #2 like%w%, project col:Documents/Document_Name #3, project col:Documents/Document_ID #3, union #4 #5", "alternatives": "select tbl:Documents, project col:Documents/Document_Name #3, comparative #1 #2 like%w%, project col:Documents/Document_Description #1, project col:Documents/Document_ID #3, union #4 #5"}
{"input": "What is the id of the order which has the most items? <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select col:Orders, superlative max #1 #1, project col:Order_Items/order_item_id #2", "alternatives": "select tbl:Orders, project tbl:Order_Items #1, group #2 #1, superlative max #1 #3, project col:Orders/order_id #4"}
{"input": "How many documents are using the template with type code 'PPT'? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Templates, project tbl:Templates #1, project col:Templates/Template_Type_Code #2, comparative #1 #3 equal/PPT, aggregate count #4", "alternatives": "select tbl:Templates, project tbl:Templates #1, aggregate count #4, comparative #1 #3 equal/PPT, project col:Templates/Template_Type_Code #2"}
{"input": "Show all paragraph texts for the document \"Customer reviews\". <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, comparative #1 #1 equal/Customer reviews col:Documents/Document_Name, project col:Paragraphs/Paragraph_Text #2", "alternatives": "select tbl:Documents, comparative #1 #1greatequal//Customer reviews col:Documents/Document_Name, project col:Paragraphs/Paragraph_Text #2"}
{"input": "Which airlines have departing flights from both APG and CVO airports? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select col:airlines, project tbl:flights #1, comparative #1 #2 equal/APG, comparative #1 #2 equal/CVO, intersection #1 #3 #4", "alternatives": "select col:airlines, project tbl:flights #1, comparative #1 #2 equal/CVO, comparative #1 #2 equal/APG, intersection #1 #3 #4"}
{"input": "Return the number of flights departing from Aberdeen. <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, comparative #1 #1 equal/Aberdeen col:airports/AirportName, aggregate count #2", "alternatives": "select tbl:flights, comparative #1 #1lessequal//Aberdeen col:airports/AirportName, aggregate count #2"}
{"input": "Find the number of pets for each student who has any pet and student id. <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select col:Has_Pets, project tbl:Has_Pets #1, group #2 #1, project col:Has_Pets/StuID #1, union #3 #4", "alternatives": "select col:Has_Pets, group #2 #1, project tbl:Has_Pets #1, project col:Has_Pets/StuID #1, union #3 #4"}
{"input": "What are the template ids with template type description \"Presentation\". <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Ref_Template_Types, project tbl:Ref_Template_Types #1, comparative #1 #2 equal/Presentation, project col:Ref_Template_Types/Template_Type_Description #3, project col:Ref_Template_Types/Template_ID #4", "alternatives": "select tbl:Ref_Template_Types, project col:Ref_Template_Types/Template_Type_Description #3, comparative #1 #2great//Presentation, project tbl:Ref_Template_Types #1, project col:Ref_Template_Types/Template_ID #4"}
{"input": "What are the codes of countries with more than 50 players? <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:players, project tbl:players #1, group #2 #1, comparative #1 #3 great/50, project col:players/country_code #4", "alternatives": "select col:players, project tbl:players #1, comparative #1 #3 great/50, group #2 #1, project col:players/country_code #4"}
{"input": "For each stadium, how many concerts play there? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select col:stadium, project tbl:concert #1, group #2 #1, union #1 #3", "alternatives": "select col:city, project tbl:concert #1, group #2 #1, union #1 #3"}
{"input": "What is the name of the visitor who visited both a museum opened before 2009 and a museum opened after 2011? <tbl> museum visitor visit </tbl> <col> Museum_ID Name Num_of_Staff Open_Year ID Name Level_of_membership Age Museum_ID visitor_ID Num_of_Ticket Total_spent </col>", "prediction": "select tbl:visit, comparative #1 #1 great/2011 col:visit/Open_Year, comparative #1 #1 less/2009 col:visit/Open_Year, project tbl:visit #2, project col:visit/Name #3, project col:visit/Name #5", "alternatives": "select tbl:museum, comparative #1 #1 great/2011 col:museum/Open_Year, comparative #1 #1 less/2009 col:museum/Open_Year, project tbl:visitor #1, intersection #4 #2 #3, project col:visitor/Name #5"}
{"input": "When was the order placed whose shipment tracking number is 3452? Give me the date. <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Orders, project tbl:Shipments #1, project col:Shipments/shipment_tracking_number #2, comparative #1 #3 equal/3452, project col:Orders/date_order_placed #4", "alternatives": "select tbl:Orders, project col:Orders/date_order_placed #4, project col:Shipments/shipment_tracking_number #2, comparative #1 #3 equal/3452, project tbl:Shipments #1"}
{"input": "What is total bonus given in all evaluations? <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select tbl:evaluation, project col:evaluation/Bonus #1, aggregate sum #2", "alternatives": "select tbl:evaluation, project col:evaluation/Bonuse #1, aggregate sum #2"}
{"input": "List categories that have at least two books after year 1989. <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select col:book, project tbl:book_club #1, comparative #2 #2 great/1989 col:book_club/Year, group #3 #1, comparative #1 #4 greatequal/2", "alternatives": "select col:book, project tbl:book #1, comparative #2 #2 great/1989 col:book/Year, group #3 #1, comparative #1 #4 greatequal/2"}
{"input": "What is the average age for all students who do not own any pets? <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Student, comparative #1 #1 tbl:Has_Pets, discard #1 #2, project col:Student/Age #3, aggregate avg #4", "alternatives": "select tbl:Student, project col:Student/Age #3, discard #1 #2, comparative #1 #1 tbl:Has_Pets, aggregate avg #4"}
{"input": "Show names for all stadiums except for stadiums having a concert in year 2014. <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:stadium, project tbl:concert #1, project col:stadium/Year #2, comparative #1 #3 equal/2014, discard #1 #4, project col:stadium/Name #5", "alternatives": "select tbl:stadium, project tbl:concert #1, discard #1 #4, comparative #1 #3 equal/2014, project col:stadium/Year #2, project col:stadium/Name #5"}
{"input": "How many countries are listed? <tbl> continents countries car_makers model_list car_names cars_data </tbl> <col> ContId Continent CountryId CountryName Continent Id Maker FullName Country ModelId Maker Model MakeId Model Make Id MPG Cylinders Edispl Horsepower Weight Accelerate Year </col>", "prediction": "select tbl:countries, aggregate count #1", "alternatives": "select tbl:countries, comparative #1 #1 none, aggregate count #2"}
{"input": "Which airlines have a flight with destination airport AHD? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select col:flights, project tbl:flights #1, project col:flights/Airport #2, comparative #1 #3 equal/AHD", "alternatives": "select col:flights, project tbl:flights #1, project col:flights/Airport #2, comparative #1 #3 equal/AHD"}
{"input": "How many pets have a greater weight than 10? <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Pets, project col:Has_Pets/weight #1, comparative #1 #2 great/10, aggregate count #3", "alternatives": "select tbl:Pets, project col:Has_Pets/weight #1, comparative #1 #2 lessequal/10, aggregate count #3"}
{"input": "Find the codes of countries that have more than 50 players. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:players, project tbl:players #1, group #2 #1, comparative #1 #3 great/50, project col:players/country_code #4", "alternatives": "select col:players, project tbl:players #1, comparative #1 #3 great/50, group #2 #1, project col:players/country_code #4"}
{"input": "What are the airline names and abbreviations for airlines in the USA? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:airlines, comparative #1 #1 equal/USA col:airlines/Country, project col:airlines/Airline #2, project col:airlines/Abbreviation #2, union #3 #4", "alternatives": "select tbl:airlines, project col:airlines/Abbreviation #2, project col:airlines/Airline #2, comparative #1 #1 equal/USA col:airlines/Country, union #3 #4"}
{"input": "Which customers have ever canceled the purchase of the product \"food\" (the item status is \"Cancel\")? <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Products, project tbl:Order_Items #1, comparative #1 #2 equal/food, project col:Order_Items/order_status #3, comparative #3 #4 equal/Cancel, project col:Customers/customer_name #5", "alternatives": "select tbl:Products, project tbl:Order_Items #1, comparative #3 #4 equal/Cancel, project col:Order_Items/order_status #3, comparative #1 #2 equal/food, project col:Customers/customer_name #5"}
{"input": "Count the number of templates of the type CV. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Templates, comparative #1 #1 equal/CV col:Templates/Template_Type_Code, aggregate count #2", "alternatives": "select tbl:Templates, project col:Templates/Template_Type_Code #1, comparative #1 #2 equal/CV, aggregate count #3"}
{"input": "For each customer who has at least two orders, find the customer name and number of orders made. <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select col:Customers, project tbl:Orders #1, group #2 #1, comparative #1 #3 greatequal/2, project col:Customers/customer_name #4, project tbl:Orders #4, group #6 #4, union #5 #7", "alternatives": "select col:Customers, project tbl:Orders #1, group #2 #1, comparative #1 #3 greatequal/2, project col:Customers/customer_name #4, project tbl:Orders #4, group #5 #4, union #6 #6"}
{"input": "Count the number of employees for each city. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select col:employee, project tbl:employee #1, group #2 #1, union #1 #3", "alternatives": "select col:employee, project tbl:employee #1, group #2 #1, union #1 #3"}
{"input": "What are the different template type codes, and how many templates correspond to each? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Templates, project col:Templates/Template_Type_Code #1, group #1 #2, union #2 #3", "alternatives": "select col:Templates, project tbl:Templates #1, group #2 #1, union #1 #3"}
{"input": "Which city and country is the Alton airport at? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select val:airports, project col:airports/City #1, project col:airports/Country #1, union #2 #3", "alternatives": "select val:airports, project col:airports/City #1, project col:airports/Country #1, union #2 #3"}
{"input": "Show the movie titles and book titles for all companies in China. <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select tbl:company, comparative #1 #1 equal/China col:culture_company/Company_name, project col:film/Title #2, project col:book/Title #2, union #3 #4", "alternatives": "select tbl:culture_company, comparative #1 #1 equal/China col:culture_company/Incorporated_in, project tbl:movie #2, project col:movie/Title #3, project tbl:book_club #2, project col:book_club/Book_Title #5, union #4 #6"}
{"input": "List the maximum weight and type for each type of pet. <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Pets, project col:Pets/weight #1, group #2 #1, project col:Pets/Type #1, union #3 #4", "alternatives": "select tbl:Pets, project col:Pets/weight #1, group #2 #1, union #3 #4, project col:Pets/Type #1"}
{"input": "Show name, country, age for all singers ordered by age from the oldest to the youngest. <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:song, project col:song/Song_Name #1, project col:song/Country #1, project col:song/Age #1, sort #2 #3 descending", "alternatives": "select tbl:song, project col:song/Song_Name #1, project col:song/Country #1, project col:song/Age #1, sort #3 #4 descending"}
{"input": "How many books fall into each category? <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select col:book, project tbl:book_club #1, group #2 #1, union #1 #3", "alternatives": "select col:book, project tbl:book #1, group #2 #1, union #1 #3"}
{"input": "Find the first name, country code and birth date of the winner who has the highest rank points in all matches. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:matches, project col:matches/winner_rank_points #1, group #2 #1, superlative max #1 #3, project col:matches/first_name #4, project col:matches/country_code #4, project col:matches/birth_date #4, union #5 #6 #7", "alternatives": "select tbl:matches, project col:matches/winner_rank_points #1, project col:matches/first_name #4, superlative max #1 #3, group #2 #1, project col:matches/country_code #4, project col:matches/birth_date #4, union #5 #6 #7"}
{"input": "Find the average rank of winners in all matches. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:matches, project col:matches/winner_rank #1, aggregate avg #2", "alternatives": "select tbl:matches, project col:matches/winner_rank #1, aggregate avg #2"}
{"input": "What are the ids and texts of paragraphs in the document titled 'Welcome to NY'? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Paragraphs, comparative #1 #1 equal/Welcome to NY col:Documents/Document_Name, project col:Paragraphs/Paragraph_ID #2, project col:Paragraphs/Paragraph_Text #2, union #3 #4", "alternatives": "select tbl:Paragraphs, comparative #1 #1greatequal//Welcome to NY col:Documents/Document_Name, union #3 #4, project col:Paragraphs/Paragraph_Text #2, project col:Paragraphs/Paragraph_ID #2"}
{"input": "Count the number of employees for each city. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select col:employee, project tbl:employee #1, group #2 #1, union #1 #3", "alternatives": "select col:employee, project none #1, group #2 #1, union #1 #3"}
{"input": "What is the most commmon hometowns for teachers? <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select col:teacher, project tbl:teacher #1, group #2 #1, superlative max #1 #3", "alternatives": "select col:teacher, project tbl:teacher #1, group #2 #1, superlative max #1 #3"}
{"input": "How many visitors below age 30 are there? <tbl> museum visitor visit </tbl> <col> Museum_ID Name Num_of_Staff Open_Year ID Name Level_of_membership Age Museum_ID visitor_ID Num_of_Ticket Total_spent </col>", "prediction": "select tbl:visit, project tbl:visit #1, comparative #2 #2 less/30 col:visit/Age, aggregate count #3", "alternatives": "select tbl:visit, project tbl:visit #1, comparative #2 #2 lessequal/30 col:visit/Age, aggregate count #3"}
{"input": "Show the name of teachers aged either 32 or 33? <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select tbl:teacher, project col:teacher/Age #1, comparative #1 #2 equal/32, comparative #1 #2 equal/33, union #3 #4, project col:teacher/Name #5", "alternatives": "select tbl:teacher, project none #1, comparative #1 #2 equal/32, comparative #1 #2 equal/33, union #3 #4, project col:teacher/Name #5"}
{"input": "What are the different template type codes? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Ref_Template_Types", "alternatives": "select tbl:Ref_Template_Types"}
{"input": "What are the average ages of losers and winners across matches? <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:matches, project col:matches/loser_age #1, project col:matches/winner_name #1, aggregate avg #2, aggregate avg #3, union #4 #5", "alternatives": "select tbl:matches, project col:matches/loser_age #1, project col:matches/winner_age #1, project col:matches/loser_age #2, project col:matches/winner_age #3, aggregate avg #4, aggregate avg #5, union #6 #7"}
{"input": "Which order deals with the most items? Return the order id. <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select col:Orders, project tbl:Order_Items #1, group #2 #1, superlative max #1 #3, project col:Orders/order_id #4", "alternatives": "select col:Orders, group #2 #1, project tbl:Order_Items #1, superlative max #1 #3, project col:Orders/order_id #4"}
{"input": "Find the first name and age of students who have a pet. <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Student, comparative #1 #1 tbl:Has_Pets, project col:Student/Fname #2, project col:Student/Age #2, union #3 #4", "alternatives": "select tbl:Student, comparative #1 #1 tbl:Has_Pet, project col:Student/Fname #2, project col:Student/Age #2, union #3 #4"}
{"input": "Find the total number of tours for each ranking date. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:rankings, project tbl:turnouts #1, group #2 #1, union #1 #3", "alternatives": "select col:rankings, project tbl:rollings #1, group #2 #1, union #1 #3"}
{"input": "How many book clubs are there? <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select tbl:book_club, aggregate count #1", "alternatives": "select tbl: book_club, aggregate count #1"}
{"input": "What is maximum and minimum death toll caused each time? <tbl> battle ship death </tbl> <col> id name date bulgarian_commander latin_commander result lost_in_battle id name tonnage ship_type location disposition_of_ship caused_by_ship_id id note killed injured </col>", "prediction": "select col:death, project col:death/tonnage #1, group #2 #1, union #1 #3", "alternatives": "select col:death, project col:death/tonnage #1, group #2 #1, aggregate max #3, union #4 #3"}
{"input": "What is the name and country of origin of every singer who has a song with the word 'Hey' in its title? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:song, project col:song/Song_Name #1, comparative #1 #2 like%Hey%, project col:song/Song_Name #3, project col:song/Country #3, union #4 #5", "alternatives": "select tbl:song, project none #1, comparative #1 #2 like%Hey%, project col:song/Song_Name #3, project col:song/Country #3, union #4 #5"}
{"input": "Find the abbreviation and country of the airline that has fewest number of flights? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:airlines, project tbl:flights #1, group #2 #1, superlative min #1 #3, project col:airlines/Airline #4, project col:airlines/Country #4, union #5 #6", "alternatives": "select tbl:airlines, project tbl:flights #1, project col:airlines/Airline #4, superlative min #1 #3, group #2 #1, project col:airlines/Country #4, union #5 #6"}
{"input": "List all airline names and their abbreviations in \"USA\". <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:airlines, comparative #1 #1 equal/USA col:airlines/CountryName, project col:airlines/Airline #2, project col:airlines/Abbreviation #2, union #3 #4", "alternatives": "select tbl:airlines, project col:airlines/Abbreviation #2, project col:airlines/Airline #2, comparative #1 #1 equal/USA col:airlines/CountryName, union #3 #4"}
{"input": "What are the distinct ids of products ordered between 1975-01-01 and 1976-01-01?? <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Products, comparative #1 #1 great/1975-01-01 col:Order_Items/date_order_placed, comparative #2 #2 less/1976-01-01 col:Order_Items/date_order_placed, project col:Products/product_id #3", "alternatives": "select col:Order_Items, comparative #1 #1 lessequal/1976-01-01 col:Orders/date_order_placed, comparative #2 #2 greatequal/1975-01-01 col:Orders/date_order_placed"}
{"input": "What is the airport code of the airport with the most flights? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select col:airports, project tbl:flights #1, group #2 #1, superlative max #1 #3, project col:airports/AirportCode #4", "alternatives": "select col:airports, project col:airports/AirportCode #4, group #2 #1, superlative max #1 #3, project tbl:flights #1"}
{"input": "Find the id of the pet owned by student whose last name is ‘Smith’. <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Student, project col:Student/LName #1, comparative #1 #2 equal/Smith, project tbl:Has_Pets #3, project col:Has_Pets/PetID #4", "alternatives": "select tbl:Student, project tbl:Has_Pet #1, comparative #1 #2 equal/Smith, project tbl:Has_Pet #3, project col:Has_Pet/PetID #4"}
{"input": "Give me the names of customers who have placed orders between 2009-01-01 and 2010-01-01. <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Customers, project tbl:Orders #1, comparative #1 #2 greatequal/2009-01-01, comparative #3 #2 lessequal/2010-01-01 col:Orders/date_order_placed, project col:Customers/customer_name #4", "alternatives": "select tbl:Customers, comparative #1 #1 lessequal/2010-01-01 col:Orders/date_order_placed, comparative #2 #2 greatequal/2009-01-01 col:Orders/date_order_placed, project col:Customers/customer_name #3"}
{"input": "List singer names and number of concerts for each singer. <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select col:concert, project col:song/Song_Name #1, project tbl:song_in_concert #1, group #3 #1, union #2 #4", "alternatives": "select col:singer, project col:singer/Name #1, project tbl:singer_in_concert #1, group #3 #1, union #2 #4"}
{"input": "Give me a list of id and status of orders which belong to the customer named \"Jeramie\". <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Customers, comparative #1 #1 equal/Jeramie col:Customers/customer_name, project tbl:Orders #2, project col:Orders/order_id #3, project col:Orders/order_status #3, union #4 #5", "alternatives": "select tbl:Customers, comparative #1 #1less//Jeramie col:Customers/customer_name, project col:Orders/order_status #3, project col:Orders/order_id #3, project tbl:Orders #2, union #4 #5"}
{"input": "What is the average weight for each type of pet? <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Pets, project col:Pets/weight #1, group #2 #1, union #1 #3", "alternatives": "select tbl:Pets, project col:Pets/Weight #1, group #2 #1, union #1 #3"}
{"input": "List the airport code and name in the city of Anthony. <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:airports, project col:airports/AirportCode #1, project col:airports/AirportName #1, comparative #2 #3 equal/Anthony, union #2 #4", "alternatives": "select tbl:airports, project col:airports/AirportCode #1, project col:airports/AirportName #1, union #2 #3, comparative #4 #1 equal/Anthony"}
{"input": "Which customers have both \"On Road\" and \"Shipped\" as order status? List the customer ids. <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Customers, project tbl:Orders #1, comparative #1 #2 equal/On Road, comparative #1 #2 equal/Shipped, intersection #1 #3 #4, project col:Customers/customer_id #5", "alternatives": "select tbl:Customers, project tbl:Orders #1, comparative #1 #2 equal/Shipped, comparative #1 #2 equal/On Road, intersection #1 #3 #4, project col:Customers/customer_id #5"}
{"input": "Which year had the most matches? <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:matches, project tbl:matches #1, group #2 #1, superlative max #1 #3", "alternatives": "select tbl:matches, project col:matches/year #1, group #1 #2, superlative max #2 #3"}
{"input": "List the names of teachers who have not been arranged to teach courses. <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select tbl:teacher, comparative #1 #1 tbl:course_arrangement, discard #1 #2, project col:teacher/Name #3", "alternatives": "select tbl:teacher, comparative #1 #1 tbl:course_arrangement, discard #1 #2, project col:teacher/Name #3"}
{"input": "Find the name and location of the stadiums which some concerts happened in the years of both 2014 and 2015. <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:stadium, project tbl:concert #1, comparative #1 #2 equal/2014, comparative #1 #2 equal/2015, intersection #1 #3 #4, project col:stadium/Name #5, project col:stadium/Location #5, union #6 #7", "alternatives": "select tbl:concert, project tbl:concert #1, comparative #1 #2 equal/2014, comparative #1 #2 equal/2015, intersection #1 #3 #4, project col:stadium/Name #5, project col:stadium/Location #5, union #6 #7."}
{"input": "List the names of teachers who have not been arranged to teach courses. <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select tbl:teacher, comparative #1 #1 tbl:course_arrangement, discard #1 #2, project col:teacher/Name #3", "alternatives": "select tbl:teacher, project tbl:course_arrange #1, select tbl:teacher, discard #3 #2, project col:teacher/Name #4"}
{"input": "How many different loser names are there? <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:matches, aggregate count #2", "alternatives": "select col:matches, aggregate count #2"}
{"input": "What is the name and capacity for the stadium with the highest average attendance? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:stadium, project col:stadium/Average #1, group #2 #1, superlative max #1 #3, project col:stadium/Name #4, project col:stadium/Capacity #4, union #5 #6", "alternatives": "select tbl:stadium, project col:stadium/Average #1, project col:stadium/Capacity #4, superlative max #1 #3, project col:stadium/Name #4, group #2 #1, union #5 #6"}
{"input": "How many matches were played in each year? <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:matches, project tbl:matches #1, group #2 #1, union #1 #3", "alternatives": "select col:matches, project none #1, group #2 #1, union #1 #3"}
{"input": "Find the type and weight of the youngest pet. <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Pets, superlative min #1 #1, project col:Pets/PetType #2, project col:Pets/weight #2, union #3 #4", "alternatives": "select tbl:Pets, project col:Pets/pet_age #1, superlative min #1 #2, project col:Pets/PetType #3, project col:Pets/weight #3, union #4 #5"}
{"input": "List the name and date the battle that has lost the ship named 'Lettice' and the ship named 'HMS Atalanta' <tbl> battle ship death </tbl> <col> id name date bulgarian_commander latin_commander result lost_in_battle id name tonnage ship_type location disposition_of_ship caused_by_ship_id id note killed injured </col>", "prediction": "select tbl:ship, comparative #1 #1 equal/Lettice col:ship/name, comparative #1 #1 equal/HMS Atalanta col:ship/name, project tbl:battle #2, project col:battle/name #3, project col:battle/date #3, union #4 #5", "alternatives": "select tbl:battle, project tbl:ship #1, project col:ship/name #2, comparative #1 #3 equal/Lettice, comparative #1 #3 equal/HMS Atalanta, intersection #1 #4 #5, project col:battle/name #6, project col:battle/date #6, union #7 #8"}
{"input": "List the first and last name of all players in the order of birth date. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:players, project col:players/first_name #1, project col:players/last_name #1, project col:players/birth_date #1, union #2 #3, sort #5 #4", "alternatives": "select tbl:players, project col:players/last_name #1, project col:players/first_name #1, project col:players/birth_date #1, union #2 #3, sort #5 #4"}
{"input": "List the name, date and result of each battle. <tbl> battle ship death </tbl> <col> id name date bulgarian_commander latin_commander result lost_in_battle id name tonnage ship_type location disposition_of_ship caused_by_ship_id id note killed injured </col>", "prediction": "select tbl:battle, project col:battle/name #1, project col:battle/date #1, project col:battle/Result #1, union #2 #3 #4", "alternatives": "select col:battle, project col:battle/name #1, project col:battle/date #1, project col:battle/result #1, union #2 #3 #4"}
{"input": "Find all airlines that have flights from both airports 'APG' and 'CVO'. <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:airlines, project tbl:flights #1, comparative #1 #2 equal/APG, comparative #1 #2 equal/CVO, intersection #1 #3 #4, project col:airlines/Airline #5", "alternatives": "select tbl:airlines, project tbl:flights #1, comparative #1 #2 equal/CVO, comparative #1 #2 equal/APG, intersection #1 #3 #4, project col:airlines/Airline #5"}
{"input": "How many different results are there for the battles? <tbl> battle ship death </tbl> <col> id name date bulgarian_commander latin_commander result lost_in_battle id name tonnage ship_type location disposition_of_ship caused_by_ship_id id note killed injured </col>", "prediction": "select tbl:battle, project col:battle/result #1, aggregate count #3", "alternatives": "select tbl:bathroom, project col:bathroom/result #1, aggregate count #3"}
{"input": "Give the code of the airport with the least flights. <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:airports, project tbl:flights #1, group #2 #1, superlative min #1 #3, project col:airports/AirportCode #4", "alternatives": "select tbl:airports, superlative min #1 #3, group #2 #1, project tbl:flights #1, project col:airports/AirportCode #4"}
{"input": "What are the age and hometown of teachers? <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select tbl:teacher, project col:teacher/Age #1, project col:teacher/Hometown #1, union #2 #3", "alternatives": "select tbl:trainer, project col:teacher/Age #1, project col:teacher/Hometown #1, union #2 #3"}
{"input": "How many different store locations are there? <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select col:shop, aggregate count #1", "alternatives": "select tbl:shop, aggregate count #2"}
{"input": "What is the average weight for each type of pet? <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Pets, project col:Pets/weight #1, group #2 #1, union #1 #3", "alternatives": "select tbl:Pets, project col:Pets/PetType #1, project col:Pets/weight #2, group #3 #2, union #2 #4"}
{"input": "What are the template ids of any templates used in more than a single document? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Templates, project tbl:Documents #1, group #2 #1, comparative #1 #3 great/1, project col:Templates/Template_ID #4", "alternatives": "select col:Documents, project tbl:Documents #1, group #2 #1, comparative #1 #3 great/1, project col:Documents/Template_ID #4"}
{"input": "find the minimum and maximum number of products of all stores. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select tbl:shop, project col:shop/Number_products #1, aggregate min #2, aggregate max #2, union #3 #4", "alternatives": "select col:shop, comparative #1 #1 tbl:shop, aggregate min #2, aggregate max #2, union #3 #4"}
{"input": "Find the name of the winner who has the highest rank points and participated in the Australian Open tourney. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:matches, comparative #1 #1 equal/Australian Open col:matches/turner_level, project col:matches/winner_rank_points #2, superlative max #2 #3, project col:matches/winner_name #4", "alternatives": "select col:matches, project tbl:matches #1, comparative #1 #2 equal/Australian Open, project col:matches/winner_rank_points #3, superlative max #1 #4, project col:matches/winner_name #5"}
{"input": "Find the number of dog pets that are raised by female students (with sex F). <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Student, project col:Student/Sex #1, comparative #1 #2 equal/F, project tbl:Has_Pets #3, aggregate count #4", "alternatives": "select tbl:Student, comparative #1 #1 equal/F col:Student/Sex, project val:Pets/PetType/dog #2, group #3 #2, aggregate sum #4"}
{"input": "List the names of the customers who have once bought product \"food\". <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Customers, project tbl:Orders #1, comparative #1 #2 equal/food, project col:Customers/customer_name #3", "alternatives": "select tbl:Customers, project tbl:Products #1, comparative #1 #2 equal/food, project col:Customers/customer_name #3"}
{"input": "Show the hometowns shared by at least two teachers. <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select col:teacher, project tbl:teacher #1, group #2 #1, comparative #1 #3 greatequal/2", "alternatives": "select col:teacher, project tbl:teacher #1, group #2 #1, comparative #1 #3 great/2"}
{"input": "Find all airlines that have fewer than 200 flights. <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select col:airlines, project tbl:flights #1, group #2 #1, comparative #1 #3 less/200", "alternatives": "select col:airlines, project tbl:flights #1, group #2 #1, comparative #1 #3 less/2"}
{"input": "Find the id of the customers who have order status both \"On Road\" and \"Shipped\". <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Customers, project tbl:Orders #1, comparative #1 #2 equal/On Road, comparative #1 #2 equal/Shipped, intersection #1 #3 #4, project col:Customers/customer_id #5", "alternatives": "select tbl:Customers, project tbl:Orders #1, comparative #1 #2 equal/Shipped, comparative #1 #2 equal/On Road, project col:Customers/customer_id #1, intersection #5 #3 #4"}
{"input": "What are the ids and names of the architects who built at least 3 bridges ? <tbl> architect bridge mill </tbl> <col> id name nationality gender architect_id id name location length_meters length_feet architect_id id location name type built_year notes </col>", "prediction": "select tbl:architecture, project tbl:bridge #1, group #2 #1, comparative #1 #3 greatequal/3, project col:architecture/id #4, project col:architecture/name #4, union #5 #6", "alternatives": "select tbl:architecture, project tbl:bridge #1, group #2 #1, union #5 #6, project col:architecture/id #4, project col:architecture/name #4, comparative #1 #3 less/3"}
{"input": "What are the first names of every student who has a cat or dog as a pet? <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Student, project tbl:Has_Pets #1, comparative #1 #2 equal/Cat, comparative #1 #2 equal/Dog, union #3 #4, project col:Student/Fname #5", "alternatives": "select tbl:Student, comparative #1 #1 equal/Cat col:Has_Pets/PetType, comparative #1 #1 equal/Dog col:Has_Pets/PetType, union #2 #3, project col:Student/Fname #4"}
{"input": "What is the name and country of origin of every singer who has a song with the word 'Hey' in its title? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:song, project col:song/Song_Name #1, comparative #1 #2 like%Hey%, project col:song/Song_Name #3, project col:song/Country #3, union #4 #5", "alternatives": "select tbl:song, project col:song/Song_Name #1, comparative #1 #2 like%Hey%, union #4 #5, project col:song/Country #3, project col:song/Song_Name #3"}
{"input": "What is the average age for all students who do not own any pets? <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Student, comparative #1 #1 tbl:Has_Pets, discard #1 #2, project col:Student/Age #3, aggregate avg #4", "alternatives": "select tbl:Student, comparative #1 #1 tbl:Has_Pet, discard #1 #2, project col:Student/Age #3, aggregate avg #4"}
{"input": "Find the number of players for each hand type. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:matches, project tbl:players #1, group #2 #1, union #1 #3", "alternatives": "select col:matches, project tbl:players #1, group #2 #1, union #1 #3"}
{"input": "Show different hometown of teachers and the number of teachers from each hometown. <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select tbl:teacher, project col:teacher/Hometown #1, group #1 #2, union #2 #3", "alternatives": "select col:teacher, project tbl:teacher #2, group #3 #2, union #2 #4"}
{"input": "Find the abbreviation and country of the airline that has fewest number of flights? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:airlines, project tbl:flights #1, group #2 #1, superlative min #1 #3, project col:airlines/Airline #4, project col:airlines/Country #4, union #5 #6", "alternatives": "select tbl:airlines, project tbl:flights #1, group #2 #1, superlative min #1 #3, project col:airlines/Abbreviation #4, project col:airlines/Country #4, union #5 #6"}
{"input": "What are the ids and names of the battles that led to more than 10 people killed in total. <tbl> battle ship death </tbl> <col> id name date bulgarian_commander latin_commander result lost_in_battle id name tonnage ship_type location disposition_of_ship caused_by_ship_id id note killed injured </col>", "prediction": "select tbl:battle, project tbl:death #1, group #2 #1, comparative #1 #3 great/10, project col:battle/id #4, project col:battle/name #4, union #5 #6", "alternatives": "select tbl:battle, project tbl:daily #1, group #2 #1, comparative #1 #3 great/10, project col:battle/id #4, project col:battle/name #4, union #5 #6"}
{"input": "Return the number of airlines in the USA. <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:airlines, comparative #1 #1 equal/USA col:airlines/Country, aggregate count #2", "alternatives": "select tbl:airlines, comparative #1 #1 equal/U.S. col:airlines/Country, aggregate count #2"}
{"input": "Return the different document ids along with the number of paragraphs corresponding to each, ordered by id. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Documents, project tbl:Paragraphs #1, group #2 #1, union #1 #3, sort #4 #3", "alternatives": "select col:Documents, group #2 #1, project tbl:Paragraphs #1, union #1 #3, sort #4 #3"}
{"input": "What are the names of the customers who have made two or less orders? <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Customers, project tbl:Orders #1, group #2 #1, comparative #1 #3 lessequal/2, project col:Customers/customer_name #4", "alternatives": "select tbl:Customers, project tbl:Orders #1, project col:Customers/customer_name #4, comparative #1 #3 great/2, group #2 #1"}
{"input": "How many books are there for each publisher? <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select col:book_club, project tbl:book_club #1, group #2 #1, union #1 #3", "alternatives": "select col:book_club, project tbl:book_club #1, group #2 #1, union #1 #3"}
{"input": "Find the average ranking for each player and their first name. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:players, project col:players/ranking #1, group #2 #1, project col:players/first_name #1, union #1 #3", "alternatives": "select col:players, project col:players/first_name #1, group #2 #1, project col:players/ranking #1, union #1 #3"}
{"input": "What is the total ticket expense of the visitors whose membership level is 1? <tbl> museum visitor visit </tbl> <col> Museum_ID Name Num_of_Staff Open_Year ID Name Level_of_membership Age Museum_ID visitor_ID Num_of_Ticket Total_spent </col>", "prediction": "select tbl:visit, project col:visit/Level_of_membership #1, comparative #1 #2 equal/1, project col:visit/Total_spent #3, aggregate sum #4", "alternatives": "select tbl:visit, aggregate sum #4, comparative #1 #2 equal/1, project col:visit/Total_spent #3, project col:visit/Level_of_membership #1"}
{"input": "What are the ids and names of the architects who built at least 3 bridges ? <tbl> architect bridge mill </tbl> <col> id name nationality gender architect_id id name location length_meters length_feet architect_id id location name type built_year notes </col>", "prediction": "select tbl:architecture, project tbl:bridge #1, group #2 #1, comparative #1 #3 greatequal/3, project col:architecture/id #4, project col:architecture/name #4, union #5 #6", "alternatives": "select tbl:architecture, project tbl:bridge #1, group #2 #1, union #5 #6, project col:architecture/id #4, project col:architecture/name #4, comparative #1 #3 greatequal/3"}
{"input": "find the name of employee who was awarded the most times in the evaluation. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select tbl:evaluation, project col:evaluation/Year_awarded #1, group #2 #1, superlative max #1 #3, project col:employee/Name #4", "alternatives": "select col:employee, project tbl:evaluation #1, group #2 #1, superlative max #1 #3, project col:employee/Name #4"}
{"input": "How many concerts are there in year 2014 or 2015? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:concert, project col:concert/Year #1, comparative #1 #2 equal/2014, comparative #1 #2 equal/2015, union #3 #4, aggregate count #5", "alternatives": "select tbl:concert, comparative #1 #1 equal/2014 col:concert/Year, comparative #1 #1 equal/2015 col:concert/Year, union #2 #3, aggregate count #4"}
{"input": "What is the last name of the student who has a cat that is 3 years old? <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Student, project tbl:Has_Pets #1, comparative #1 #2 equal/3, project col:Student/LName #3", "alternatives": "select tbl:Student, project tbl:Has_Pets #1, comparative #1 #2less//3, project col:Student/LName #3"}
{"input": "What are the first names and birth dates of players from the USA? <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:players, comparative #1 #1 equal/USA col:players/country_code, project col:players/first_name #2, project col:players/birth_date #2, union #3 #4", "alternatives": "select tbl:players, comparative #1 #1 equal/USA col:players/country_code, project col:players/first_name #2, project col:players/born_date #2, union #3 #4"}
{"input": "Which template type code has most number of templates? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Templates, project tbl:Templates #1, group #2 #1, superlative max #1 #3", "alternatives": "select col:Templates, project tbl:Templates #1, group #2 #1, superlative max #1 #3"}
{"input": "Find the first name of students who have cat or dog pet. <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Student, project tbl:Has_Pets #1, comparative #1 #2 equal/Cat, comparative #1 #2 equal/Dog, union #3 #4, project col:Student/Fname #5", "alternatives": "select tbl:Student, comparative #1 #1 tbl:Has_Pets, comparative #1 #1 equal/Cat col:Has_Pets/PetType, union #2 #3, project col:Student/Fname #4"}
{"input": "Which year had the most matches? <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:matches, project tbl:matches #1, group #2 #1, superlative max #1 #3", "alternatives": "select col:matches, project tbl:matches #1, group #2 #1, superlative max #1 #3"}
{"input": "Show all template type codes and descriptions. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Ref_Template_Types, project col:Ref_Template_Types/Temple_Type_Code #1, project col:Ref_Template_Types/Temple_Type_Description #1, union #2 #3", "alternatives": "select tbl:Ref_Template_Types, project col:Ref_Template_Types/Temple_Type_Code #1, project col:Ref_Template_Types/Temple_Type_Description #1, union #2 #3"}
{"input": "What are the names of the teachers and the courses they teach in ascending alphabetical order by the name of the teacher? <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select tbl:teacher, project col:teacher/Name #1, project col:course/Name #1, union #2 #3, sort #4 #2 ascending", "alternatives": "select tbl:teacher, project col:teacher/Name #1, sort #4 #2 ascending, union #2 #3, project col:course/Name #1"}
{"input": "What are the number of concerts that occurred in the stadium with the largest capacity? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:stadium, project col:stadium/Capacity #1, superlative max #1 #2, project tbl:concert #3, aggregate count #4", "alternatives": "select tbl:stadium, aggregate count #4, superlative max #1 #2, project tbl:concert #3, project col:stadium/Capacity #1"}
{"input": "find the names of museums which have more staff than the minimum staff number of all museums opened after 2010. <tbl> museum visitor visit </tbl> <col> Museum_ID Name Num_of_Staff Open_Year ID Name Level_of_membership Age Museum_ID visitor_ID Num_of_Ticket Total_spent </col>", "prediction": "select tbl:museum, comparative #1 #1 great/2010 col:museum/Open_Year, project col:museum/Num_of_Staff #2, group #3 #2, aggregate min #4, comparative #1 #4 great/#5, project col:museum/Name #6", "alternatives": "select tbl:museum, comparative #1 #1 great/2010 col:museum/Open_Year, project col:museum/Num_of_Staff #2, group #3 #2, aggregate min #4, project col:museum/Num_of_Staff #1, group #6 #1, comparative #1 #7 great/#5, project col:museum/Name #8"}
{"input": "Show name, country, age for all singers ordered by age from the oldest to the youngest. <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:song, project col:song/Song_Name #1, project col:song/Country #1, project col:song/Age #1, sort #2 #3 descending", "alternatives": "select tbl:singer, project col:singer/Name #1, project col:singer/Country #1, project col:singer/Age #1, union #2 #3 #4, sort #5 #4 descending"}
{"input": "What are the average ages of losers and winners across matches? <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:matches, project col:matches/loser_age #1, project col:matches/winner_name #1, aggregate avg #2, aggregate avg #3, union #4 #5", "alternatives": "select tbl:matches, project col:matches/loser_age #1, aggregate avg #3, aggregate avg #2, project col:matches/winner_name #1, union #4 #5"}
{"input": "How many flights land in Aberdeen or Abilene? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, comparative #1 #1 equal/Aberdeen col:airports/AirportName, comparative #1 #1 equal/Abilene col:airports/AirportName, union #2 #3, aggregate count #4", "alternatives": "select tbl:flights, comparative #1 #1 equal/Abilene col:airports/AirportName, comparative #1 #1 equal/Aberdeen col:airports/AirportName, union #2 #3, aggregate count #4"}
{"input": "What are the names of the mills which are not located in 'Donceel'? <tbl> architect bridge mill </tbl> <col> id name nationality gender architect_id id name location length_meters length_feet architect_id id location name type built_year notes </col>", "prediction": "select tbl:mill, comparative #1 #1 equal/Donceel col:mill/location, project col:mill/name #2", "alternatives": "select tbl:mill, comparative #1 #1 notequal/Donceel col:mill/location, project col:mill/name #2"}
{"input": "What are the different template type codes, and how many documents use each type? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Ref_Template_Types, project tbl:Ref_Template_Types #1, group #2 #1, union #1 #3", "alternatives": "select col:Templates, project tbl:Documents #2, group #3 #2, union #2 #4"}
{"input": "find the code of the country where has the greatest number of players. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:matches, project tbl:players #1, group #2 #1, superlative max #1 #3, project col:matches/country_code #4", "alternatives": "select col:players, project tbl:players #1, group #2 #1, superlative max #1 #3, project col:matches/country_code #4"}
{"input": "Return the type code of the template type with the description \"Book\". <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Ref_Template_Types, project col:Ref_Template_Types/Template_Type_Description #1, comparative #1 #2 equal/Book, project col:Ref_Template_Type_Types/Template_Type_Type_Code #3", "alternatives": "select tbl:Ref_Template_Types, project col:Ref_Template_Types/Template_Type_Description #1, comparative #1 #2greatequal//Book, project col:Ref_Template_Type_Types/Template_Type_Type_Code #3"}
{"input": "Find the names of employees who never won any award in the evaluation. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select tbl:evaluation, project tbl:evaluation #1, select tbl:employee, discard #3 #2, project col:employee/Name #4", "alternatives": "select tbl:evaluation, discard #3 #2, select tbl:employee, project tbl:evaluation #1, project col:employee/Name #4"}
{"input": "How many movie directors are there? <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select tbl:film, aggregate count #1", "alternatives": "select col:movie, aggregate count #1"}
{"input": "Return the id and type code of the template that is used for the greatest number of documents. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Templates, project tbl:Documents #1, group #2 #1, superlative max #1 #3, project col:Documents/Template_ID #4, project col:Documents/Template_Type_Code #4, union #5 #6", "alternatives": "select col:Templates, project tbl:Documents #1, superlative max #1 #3, group #2 #1, project col:Documents/Template_ID #4, project col:Documents/Template_Type_Code #4, union #5 #6"}
{"input": "How many countries are listed? <tbl> continents countries car_makers model_list car_names cars_data </tbl> <col> ContId Continent CountryId CountryName Continent Id Maker FullName Country ModelId Maker Model MakeId Model Make Id MPG Cylinders Edispl Horsepower Weight Accelerate Year </col>", "prediction": "select tbl:countries, aggregate count #1", "alternatives": "select tbl:countries, aggregate counts #1"}
{"input": "What is the airport name for airport 'AKO'? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:airports, comparative #1 #1 equal/AKO col:airports/AirportName, project col:airports/AirportName #2", "alternatives": "select tbl:airports, project col:airports/AirportName #1, comparative #2 #1 equal/AKO col:airports/AirportCode"}
{"input": "Which employee received the biggest bonus? Give me the employee name. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select tbl:employee, project col:employee/Bonus #1, superlative max #1 #2, project col:employee/Name #3", "alternatives": "select tbl:employee, project col:employee/Bonus #1, superlative max #1 #2, project col:employee/Name #3"}
{"input": "What is the average and maximum capacities for all stadiums? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:stadium, project col:stadium/Capacity #1, aggregate avg #2, aggregate max #2, union #3 #4", "alternatives": "select tbl:stadium, aggregate avg #2, project col:stadium/Capacity #1, aggregate max #2, union #3 #4"}
{"input": "Give the city and country for the Alton airport. <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select val:airports, project col:airports/City #1, project col:airports/Country #1, union #2 #3", "alternatives": "select tbl:airports, project col:airports/City #1, project col:airports/Country #1, union #2 #3 #4"}
{"input": "Find the average age of losers and winners of all matches. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:matches, project col:matches/loser_age #1, aggregate avg #2, comparative #1 #2 equal/#3, project col:matches/winner_name #4, union #3 #5", "alternatives": "select tbl:matches, project col:matches/loser_age #1, aggregate avg #2, comparative #1 #2 equal/#3, project col:matches/winner_name #5, union #4 #6"}
{"input": "List the name of teachers whose hometown is not `` Little Lever Urban District ''. <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select tbl:teacher, project col:teacher/Hometown #1, comparative #1 #2 notequal/Little Lever Urban District, project col:teacher/Name #3", "alternatives": "select tbl:teacher, project col:teacher/Hometown #1, comparative #1 #2 notequal/little lever urban district, project col:teacher/Name #3"}
{"input": "What are the students' first names who have both cats and dogs as pets? <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Student, project tbl:Has_Pets #1, comparative #1 #2 equal/Cat, comparative #1 #2 equal/Dog, intersection #1 #3 #4, project col:Student/Fname #5", "alternatives": "select tbl:Student, project tbl:Pets #1, comparative #1 #2 equal/cat, comparative #1 #2 equal/dog, project col:Student/Fname #1, intersection #5 #3 #4"}
{"input": "What are the name and results of the battles when the bulgarian commander is not 'Boril' <tbl> battle ship death </tbl> <col> id name date bulgarian_commander latin_commander result lost_in_battle id name tonnage ship_type location disposition_of_ship caused_by_ship_id id note killed injured </col>", "prediction": "select tbl:battle, project tbl:bulgarian_commander #1, comparative #1 #2 notequal/Boril, project col:battle/name #3, project col:battle/result #3, union #4 #5", "alternatives": "select tbl:battle, project tbl:bulgarian_commander #1, project col:battle/result #3, project col:battle/name #3, comparative #1 #2 notequal/Boril, union #4 #5"}
{"input": "Find the first name and country code of the player who did the most number of tours. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:players, project tbl:matches #1, group #2 #1, superlative max #1 #3, project col:players/first_name #4, project col:players/country_code #4, union #5 #6", "alternatives": "select tbl:players, project col:rankings/tours #1, group #2 #1, superlative max #1 #3, project col:players/first_name #4, project col:players/country_code #4, union #5 #6"}
{"input": "How many total tours were there for each ranking date? <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:rankings, project tbl:turnouts #1, group #2 #1, union #1 #3", "alternatives": "select col:rankings, project tbl:rankings #1, group #2 #1, union #1 #3"}
{"input": "find the minimum and maximum number of products of all stores. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select tbl:shop, project col:shop/Number_products #1, aggregate min #2, aggregate max #2, union #3 #4", "alternatives": "select col:shop, aggregate min #1, aggregate max #1, union #2 #3"}
{"input": "Find the number of flights landing in the city of Aberdeen or Abilene. <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, project col:flights/City #1, comparative #1 #2 equal/Aberdeen, comparative #1 #2 equal/Abilene, union #3 #4, aggregate count #5", "alternatives": "select tbl:flights, project col:flights/City #1, comparative #1 #2 equal/Abilene, comparative #1 #2 equal/Aberdeen, union #3 #4, aggregate count #5"}
{"input": "Show all company names with a movie directed in year 1999. <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select col:film, project tbl:film #1, project col:film/Year #2, comparative #2 #3 equal/1999, project col:company/Company_name #4", "alternatives": "select col:film, project tbl:film #1, project col:company/Company_name #4, comparative #2 #3greatequal//1999, project col:film/Year #2"}
{"input": "What are flight numbers of Airline \"United Airlines\"? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:airlines, project col:airlines/FlightNo #1, comparative #2 #1 equal/United Airlines", "alternatives": "select tbl:airlines, project col:airlines/Airline #1, comparative #1 #2 equal/United Airlines, project tbl:flights #3"}
{"input": "For each continent, list its id, name, and how many countries it has? <tbl> continents countries car_makers model_list car_names cars_data </tbl> <col> ContId Continent CountryId CountryName Continent Id Maker FullName Country ModelId Maker Model MakeId Model Make Id MPG Cylinders Edispl Horsepower Weight Accelerate Year </col>", "prediction": "select col:continents, project col:continents/Continent #1, project col:continents/Continent #1, project col:continents/CountryName #1, union #2 #3 #4", "alternatives": "select col:continents, project col:continents/Continent #1, project col:continents/CountryName #1, project tbl:countries #1, group #4 #1, union #2 #3 #5"}
{"input": "List all document ids with at least two paragraphs. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Documents, project tbl:Paragraphs #1, group #2 #1, comparative #1 #3 greatequal/2", "alternatives": "select col:Documents, project tbl:Paragraphs #1, group #2 #1, comparative #1 #3 greatequal/2."}
{"input": "Which shops' number products is above the average? Give me the shop names. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select tbl:shop, project col:shop/Number_products #1, aggregate avg #2, comparative #1 #2 great/#3, project col:shop/Name #4", "alternatives": "select tbl:shop, project col:shop/Number_products #1, aggregate avg #2, comparative #1 #3 great/#4, project col:shop/Name #5"}
{"input": "How many 'United Airlines' flights depart from Airport 'AHD'? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, comparative #1 #1 equal/United Airlines col:airports/AirportName, aggregate count #2", "alternatives": "select tbl:flights, comparative #1 #1 equal/United Airlines col:airlines/Airline, project col:flights/SourceAirport #2, comparative #2 #3 equal/AHD, aggregate count #4"}
{"input": "What are all company names that have a corresponding movie directed in the year 1999? <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select col:film, project tbl:film #1, project col:film/Year #2, comparative #2 #3 equal/1999 col:film/Year", "alternatives": "select col:company, project tbl:film #1, project col:film/Year #2, comparative #2 #3 equal/1999 col:film/Year"}
{"input": "find the name of employee who was awarded the most times in the evaluation. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select tbl:evaluation, project col:evaluation/Year_awarded #1, group #2 #1, superlative max #1 #3, project col:employee/Name #4", "alternatives": "select tbl:employee, project tbl:evaluation #1, group #2 #1, superlative max #1 #3, project col:employee/Name #4"}
{"input": "How many different store locations are there? <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select col:shop, aggregate count #1", "alternatives": "select col:shop, aggregate count #2"}
{"input": "What is the name of the winner with the most rank points who participated in the Australian Open tournament? <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select val:matches, project tbl:matches #1, project col:matches/winner_rank_points #2, group #3 #1, superlative max #1 #4, project col:matches/winner_name #5", "alternatives": "select col:matches, comparative #1 #1 equal/Australian Open col:matches/tourney_name, project col:matches/winner_rank_points #2, superlative max #2 #3, project col:matches/winner_name #4"}
{"input": "What are the locations and names of all stadiums with capacity between 5000 and 10000? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:stadium, project col:stadium/Capacity #1, comparative #1 #2 lessequal/10000, comparative #1 #2 greatequal/5000, intersection #1 #3 #4, project col:stadium/Location #5, project col:stadium/Name #5, union #6 #7", "alternatives": "select tbl:stadium, project col:stadium/Capacity #1, comparative #1 #2 greatequal/10000, comparative #1 #2 lessequal/5000, intersection #1 #3 #4, project col:stadium/Location #5, project col:stadium/Name #5, union #6 #7"}
{"input": "Find the total ranking points for each player and their first name. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:players, project col:players/ranking_points #1, group #2 #1, project col:players/first_name #1, union #1 #3", "alternatives": "select col:players, project col:players/ranking_points #1, project col:players/first_name #1, group #2 #1, union #1 #3"}
{"input": "Show the name of the teacher for the math course. <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select tbl:teacher, project tbl:course #1, comparative #1 #2 equal/Math, project col:teacher/Name #3", "alternatives": "select tbl:teacher, project tbl:course #1, comparative #2 #1 equal/Math, project col:teacher/Name #3"}
{"input": "Find the year that has the most number of matches. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:matches, project tbl:matches #1, group #2 #1, superlative max #1 #3", "alternatives": "select col:matches, project tbl:matches #1, group #2 #1, superlative min #1 #3"}
{"input": "What are the names of the teachers and the courses they teach in ascending alphabetical order by the name of the teacher? <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select tbl:teacher, project col:teacher/Name #1, project col:course/Name #1, union #2 #3, sort #4 #2 ascending", "alternatives": "select tbl:teacher, project col:teacher/Name #1, sort #4 #2 ascending, union #2 #3, project col:course/Name #1"}
{"input": "What is the code of the country with the most players? <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:players, project tbl:players #1, group #2 #1, superlative max #1 #3, project col:players/country_code #4", "alternatives": "select col:players, superlative max #1 #3, group #2 #1, project tbl:players #1, project col:players/country_code #4"}
{"input": "Count the number of flights into ATO. <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, comparative #1 #1 equal/ATO col:airports/AirportName, aggregate count #2", "alternatives": "select tbl:flights, comparative #1 #1 equal/ATO col:airports/AirportCode, aggregate count #2"}
{"input": "Show names for all stadiums except for stadiums having a concert in year 2014. <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:stadium, project tbl:concert #1, project col:stadium/Year #2, comparative #1 #3 equal/2014, discard #1 #4, project col:stadium/Name #5", "alternatives": "select tbl:stadium, project tbl:concert #1, discard #1 #4, comparative #1 #3lessequal//2014, project col:stadium/Year #2, project col:stadium/Name #5"}
{"input": "What are the first names of all players, and their average rankings? <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:players, project col:players/first_name #1, project col:players/ranking_points #1, group #3 #1, union #2 #4", "alternatives": "select tbl:players, project col:players/first_name #1, group #3 #1, project col:players/ranking_points #1, union #2 #4"}
{"input": "Show all template type codes and number of templates for each. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Templates, project tbl:Ref_Template_Types #1, group #2 #1, union #1 #3", "alternatives": "select col:Templates, project tbl:Ref_Template_Types #1, group #2 #1, union #1 #4"}
{"input": "what is the name and nation of the singer who have a song having 'Hey' in its name? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:song, project tbl:song #1, comparative #1 #2 like%Hey%, project col:song/Song_Name #3, project col:song/Country #3, union #4 #5", "alternatives": "select tbl:song, project tbl:song #1, project col:song/Song_Name #3, comparative #1 #2 like%Hey%, project col:song/Country #3, union #4 #5"}
{"input": "Which shop has the most employees? Give me the shop name. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select tbl:shop, project tbl:employee #1, group #2 #1, superlative max #1 #3, project col:shop/Name #4", "alternatives": "select tbl:shop, group #2 #1, project tbl:employee #1, superlative max #1 #3, project col:shop/Name #4"}
{"input": "What are the first names and birth dates of players from the USA? <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:players, comparative #1 #1 equal/USA col:players/country_code, project col:players/first_name #2, project col:players/birth_date #2, union #3 #4", "alternatives": "select tbl:players, comparative #1 #1 equal/USA col:players/country_code, project col:players/birth_date #2, project col:players/first_name #2, union #3 #4"}
{"input": "Find the maximum weight for each type of pet. List the maximum weight and pet type. <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Pets, project col:Pets/Weight #1, group #2 #1, union #1 #3", "alternatives": "select tbl:Pets, project col:Pets/Weight #1, group #2 #1, union #1 #3"}
{"input": "What is the most commmon hometowns for teachers? <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select col:teacher, project tbl:teacher #1, group #2 #1, superlative max #1 #3", "alternatives": "select tbl:teacher, project col:teacher/Hometown #1, group #1 #2, superlative max #2 #3"}
{"input": "Where is the youngest teacher from? <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select val:teacher, project col:teacher/Age #1, superlative min #1 #2", "alternatives": "select val:teacher, project col:teacher/Age #1, superlative min #1 #2"}
{"input": "Which customers have ever canceled the purchase of the product \"food\" (the item status is \"Cancel\")? <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Products, project tbl:Order_Items #1, comparative #1 #2 equal/food, project col:Order_Items/order_status #3, comparative #3 #4 equal/Cancel, project col:Customers/customer_name #5", "alternatives": "select col:Customers, comparative #1 #1 equal/food col:Products/product_name, comparative #2 #2 equal/Cancel col:Order_Items/order_item_status"}
{"input": "For each continent, list its id, name, and how many countries it has? <tbl> continents countries car_makers model_list car_names cars_data </tbl> <col> ContId Continent CountryId CountryName Continent Id Maker FullName Country ModelId Maker Model MakeId Model Make Id MPG Cylinders Edispl Horsepower Weight Accelerate Year </col>", "prediction": "select col:continents, project col:continents/Continent #1, project col:continents/Continent #1, project col:continents/CountryName #1, union #2 #3 #4", "alternatives": "select tbl:continents, project col:continents/ContId #1, project col:continents/Continent #1, project tbl:countries #1, group #4 #1, union #2 #3 #5"}
{"input": "Give the airport code and airport name corresonding to the city Anthony. <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:airports, project col:airports/AirportCode #1, project col:airports/AirportName #1, union #2 #3, comparative #4 #1 equal/Anthony, union #2 #5", "alternatives": "select tbl:airports, project col:airports/AirportCode #1, union #2 #5, union #2 #3, comparative #4 #1 equal/Anthony, project col:airports/AirportName #1"}
{"input": "Which employee received the biggest bonus? Give me the employee name. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select tbl:employee, project col:employee/Bonus #1, superlative max #1 #2, project col:employee/Name #3", "alternatives": "select tbl:employee, project col:evaluation/Bonus #1, superlative max #1 #2, project col:employee/Name #3"}
{"input": "What are the minimum and maximum number of products across all the shops? <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select tbl:shop, project col:shop/Number_products #1, aggregate min #2, aggregate max #2, union #3 #4", "alternatives": "select tbl:shop, aggregate min #2, project col:shop/Number_products #1, aggregate max #2, union #3 #4"}
{"input": "What are all distinct countries where singers above age 20 are from? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:song, project col:song/Age #1, comparative #1 #2 great/20, project col:song/Country #3", "alternatives": "select tbl:singer, project col:singer/Age #1, comparative #1 #2 great/20"}
{"input": "What are the different ids and names of the battles that lost any 'Brig' type shipes? <tbl> battle ship death </tbl> <col> id name date bulgarian_commander latin_commander result lost_in_battle id name tonnage ship_type location disposition_of_ship caused_by_ship_id id note killed injured </col>", "prediction": "select tbl:battle, project tbl:ship #1, comparative #1 #2 equal/Brig, project col:battle/id #3, project col:battle/name #3, union #4 #5", "alternatives": "select tbl:battle, comparative #1 #2lessequal//Brig, project tbl:ship #1, project col:battle/id #3, project col:battle/name #3, union #4 #5"}
{"input": "Show names of teachers and the courses they are arranged to teach. <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select tbl:teacher, project col:teacher/Name #1, project col:course_arrange/Courses #1, union #2 #3", "alternatives": "select tbl:teacher, project col:teacher/Name #1, project col:course_arrange/Course_arrange #1, union #2 #3"}
{"input": "How many continents are there? <tbl> continents countries car_makers model_list car_names cars_data </tbl> <col> ContId Continent CountryId CountryName Continent Id Maker FullName Country ModelId Maker Model MakeId Model Make Id MPG Cylinders Edispl Horsepower Weight Accelerate Year </col>", "prediction": "select tbl:continents, aggregate count #1", "alternatives": "select tbl:continents, aggregate count #1"}
{"input": "Find the total amount of bonus given in all the evaluations. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select tbl:evaluation, project col:evaluation/Bonus #1, aggregate sum #2", "alternatives": "select tbl:evaluation, project col:evaluation/Bonus #1, aggregate sum #2"}
{"input": "Find the number of distinct type of pets. <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Pets, aggregate count #2", "alternatives": "select tbl:Pets, comparative #1 #1 none, aggregate count #3"}
{"input": "Show the name of teachers aged either 32 or 33? <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select tbl:teacher, project col:teacher/Age #1, comparative #1 #2 equal/32, comparative #1 #2 equal/33, union #3 #4, project col:teacher/Name #5", "alternatives": "select tbl:teacher, comparative #1 #1 equal/32 col:teacher/Age, comparative #1 #1 equal/33 col:teacher/Age, union #2 #3, project col:teacher/Name #4"}
{"input": "Find the name and membership level of the visitors whose membership level is higher than 4, and sort by their age from old to young. <tbl> museum visitor visit </tbl> <col> Museum_ID Name Num_of_Staff Open_Year ID Name Level_of_membership Age Museum_ID visitor_ID Num_of_Ticket Total_spent </col>", "prediction": "select tbl:visit, project col:visit/Level_of_membership #1, comparative #1 #2 great/4, project col:visit/Name #3, project col:visit/Level_of_membership #3, project col:visit/Age #3, union #4 #5, sort #6 #5 descending", "alternatives": "select tbl:visitor, project col:visitor/Level_of_membership #1, comparative #1 #2 great/4, project col:visitor/Name #3, project col:visitor/Level_of_membership #3, project col:visitor/Age #3, union #4 #5, sort #7 #6 descending"}
{"input": "What is the name of each teacher and what course they teach? <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select tbl:teacher, project col:teacher/Name #1, project col:course/Course #1, union #2 #3", "alternatives": "select tbl:teacher, project col:teacher/Name #1, project tbl:course_arrange #1, project col:course/Course #3, union #2 #4"}
{"input": "How many matches were played in 2013 or 2016? <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:matches, comparative #1 #1 equal/2013 col:matches/year, comparative #1 #1 equal/2016 col:matches/year, union #2 #3, aggregate count #4", "alternatives": "select tbl:matches, comparative #1 #1 equal/2016 col:matches/year, comparative #1 #1 equal/2013 col:matches/year, union #2 #3, aggregate count #4"}
{"input": "How many paragraphs in total? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Paragraphs, aggregate count #1", "alternatives": "select tbl:Paragraphs, aggregate count #1"}
{"input": "Show names for all stadiums except for stadiums having a concert in year 2014. <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:stadium, project tbl:concert #1, project col:stadium/Year #2, comparative #1 #3 equal/2014, discard #1 #4, project col:stadium/Name #5", "alternatives": "select tbl:stadium, comparative #1 #1 tbl:concert, comparative #2 #2 equal/2014 col:concert/Year, discard #1 #3, project col:stadium/Name #4"}
{"input": "Find the name and membership level of the visitors whose membership level is higher than 4, and sort by their age from old to young. <tbl> museum visitor visit </tbl> <col> Museum_ID Name Num_of_Staff Open_Year ID Name Level_of_membership Age Museum_ID visitor_ID Num_of_Ticket Total_spent </col>", "prediction": "select tbl:visit, project col:visit/Level_of_membership #1, comparative #1 #2 great/4, project col:visit/Name #3, project col:visit/Level_of_membership #3, project col:visit/Age #3, union #4 #5, sort #6 #5 descending", "alternatives": "select tbl:visit, project col:visit/Level_of_membership #1, comparative #1 #2 great/4, project col:visit/Name #3, project col:visit/Level_of_membership #3, sort #6 #5 descending, union #4 #5, project col:visit/Age #3"}
{"input": "List the most common hometown of teachers. <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select tbl:teacher, project col:teacher/Hometown #1, group #1 #2, superlative max #2 #3", "alternatives": "select col:teacher, project tbl:teacher #1, group #2 #1, superlative max #1 #3"}
{"input": "What are the distinct names and nationalities of the architects who have ever built a mill? <tbl> architect bridge mill </tbl> <col> id name nationality gender architect_id id name location length_meters length_feet architect_id id location name type built_year notes </col>", "prediction": "select tbl:architect, comparative #1 #1 tbl:mill, project col:architect/name #2, project col:architect/nationality #2, union #3 #4", "alternatives": "select tbl:architecture, comparative #1 #1 equal/mill col:mill/built_year, project col:architecture/name #2, project col:architect/nationality #2, union #3 #4"}
{"input": "How many books fall into each category? <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select col:book, project tbl:book_club #1, group #2 #1, union #1 #3", "alternatives": "select col:book, project tbl:book_club #1, group #2 #1, union #1 #3"}
{"input": "List all company names with a book published by Alyson. <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select col:book_company, project tbl:book_company #1, comparative #2 #1 equal/Alyson, project col:company/Company_name #3", "alternatives": "select val:book_club, project tbl:book_club #1, project tbl:culture_company #2, project col:culture_company/Company_name #3"}
{"input": "Return the template type description of the template type with the code AD. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Ref_Template_Types, project col:Ref_Template_Types/Temple_Type_Code #1, comparative #1 #2 equal/AD, project col:Ref_Template_Types/Temple_Type_Description #3", "alternatives": "select tbl:Ref_Template_Types, project col:Ref_Template_Types/Template_Type_Code #1, comparative #1 #2 equal/AD, project col:Ref_Template_Types/Template_Type_Description #3"}
{"input": "Show all document ids and the number of paragraphs in each document. Order by document id. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Documents, project col:Documents/Document_ID #1, project tbl:Paragraphs #1, group #3 #1, union #2 #4, sort #5 #4", "alternatives": "select col:Paragraphs, project col:Paragraphs/Document_ID #1, project tbl:Paragraphs #1, group #3 #1, union #2 #4, sort #5 #2"}
{"input": "Which year has most number of concerts? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select col:concert, project tbl:concert #1, group #2 #1, superlative max #1 #3", "alternatives": "select col:concert, project tbl:concert #1, group #2 #1, superlative max #1 #3"}
{"input": "What are the template ids of any templates used in more than a single document? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Templates, project tbl:Documents #1, group #2 #1, comparative #1 #3 great/1, project col:Templates/Template_ID #4", "alternatives": "select col:Templates, project tbl:Documents #1, project col:Templates/Template_ID #4, comparative #1 #3 less/1, group #2 #1"}
{"input": "what is the name and nation of the singer who have a song having 'Hey' in its name? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:song, project tbl:song #1, comparative #1 #2 like%Hey%, project col:song/Song_Name #3, project col:song/Country #3, union #4 #5", "alternatives": "select tbl:song, project col:song/Song_Name #1, comparative #1 #2 like%Hey%, project col:song/Name #3, project col:song/Country #3, union #4 #5"}
{"input": "What is the code of airport that has the highest number of flights? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:airports, project tbl:flights #1, group #2 #1, superlative max #1 #3, project col:airports/AirportCode #4", "alternatives": "select col:airport, project tbl:flights #1, group #2 #1, superlative max #1 #3, project col:airports/AirportCode #4"}
{"input": "What is the average and maximum capacities for all stadiums? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:stadium, project col:stadium/Capacity #1, aggregate avg #2, aggregate max #2, union #3 #4", "alternatives": "select tbl:stadium, aggregate avg #2, project col:stadium/Capacity #1, aggregate max #2, union #3 #4"}
{"input": "What is the template type descriptions for template type code \"AD\". <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Ref_Template_Types, comparative #1 #1 equal/AD col:Ref_Template_Types/Template_Type_Code, project col:Ref_Template_Types/Template_Type_Type_Description #2", "alternatives": "select tbl:Ref_Template_Types, comparative #1 #1 equal/AD col:Ref_Template_Types/Template_Type_Code, project col:Ref_Template_Types/Template_Type_Description #2"}
{"input": "What is the template type code of the template used by document with the name \"Data base\"? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, project col:Documents/Document_Name #1, comparative #1 #2 equal/Data base, project tbl:Ref_Template_Types #3, project col:Ref_Template_Types/Template_Type_Code #4", "alternatives": "select tbl:Documents, project col:Documents/Document_Name #1, comparative #1 #2 equal/Data base, project tbl:Ref_Template_Types #3, project col:Ref_Template_Types/Temple_Type_Code #4"}
{"input": "How many United Airlines flights go to City 'Aberdeen'? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, comparative #1 #1 equal/Aberdeen col:flights/City, aggregate count #2", "alternatives": "select tbl:flights, comparative #1 #1 equal/United Airlines col:airlines/Airline, project col:airports/City #2, comparative #2 #3 equal/Aberdeen, aggregate count #4"}
{"input": "Show all template type codes with less than three templates. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Templates, project tbl:Templates #1, group #2 #1, comparative #1 #3 less/3", "alternatives": "select col:Templates, project tbl:Templates #1, group #2 #1, comparative #1 #3 greatequal/3"}
{"input": "Which customers made orders between 2009-01-01 and 2010-01-01? Find their names. <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Customers, project tbl:Orders #1, comparative #1 #2 greatequal/2009-01-01, comparative #3 #2 lessequal/2010-01-01 col:Orders/date_order_placed, project col:Customers/customer_name #4", "alternatives": "select tbl:Customers, comparative #1 #1 greatequal/2009-01-01 col:Orders/date_order_placed, comparative #2 #2 lessequal/2010-01-01 col:Orders/date_order_placed, project col:Customers/customer_name #3"}
{"input": "How many different templates do all document use? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, project col:Documents/Template_Type_Code #1, aggregate count #3", "alternatives": "select tbl:Documents, aggregate count #2"}
{"input": "Find the names of the visitors whose membership level is higher than 4, and order the results by the level from high to low. <tbl> museum visitor visit </tbl> <col> Museum_ID Name Num_of_Staff Open_Year ID Name Level_of_membership Age Museum_ID visitor_ID Num_of_Ticket Total_spent </col>", "prediction": "select tbl:visit, project col:visit/Level_of_membership #1, comparative #1 #2 great/4, project col:visit/Name #3, project col:visit/Level_of_membership #3, sort #4 #5 ascending", "alternatives": "select tbl:visit, project col:visit/Level_of_membership #3, comparative #1 #2 greatequal/4, project col:visit/Name #3, project col:visit/Level_of_membership #1, sort #4 #5 ascending"}
{"input": "Find the names of stores whose number products is more than the average number of products. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select tbl:shop, project col:shop/Number_products #1, group #2 #1, aggregate avg #3, comparative #1 #3 great/#4, project col:shop/Name #5", "alternatives": "select tbl:store, project col:shop/Number_products #1, group #2 #1, aggregate avg #3, comparative #1 #3 great/#4, project col:shop/Name #5"}
{"input": "What are the distinct template type descriptions for the templates ever used by any document? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Templates, project none #1, project col:Templates/Template_Type_Description #2", "alternatives": "select tbl:Templates, project col:Templates/Template_Type_Description #1, comparative #2 #1 equal/No"}
{"input": "Count the number of employees <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select col:employee, aggregate count #1", "alternatives": "select col:employee, aggregate count #1"}
{"input": "What are the distinct template type descriptions for the templates ever used by any document? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Templates, project none #1, project col:Templates/Template_Type_Description #2", "alternatives": "select tbl:Templates, project none #1, project col:Templates/Template_Type_Description #2"}
{"input": "What are the ids of documents that have 2 or more paragraphs? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, project tbl:Paragraphs #1, group #2 #1, comparative #1 #3 greatequal/2, project col:Documents/Document_ID #4", "alternatives": "select tbl:Documents, project col:Documents/Document_ID #4, group #2 #1, comparative #1 #3  equal2, project tbl:Paragraphs #1"}
{"input": "What are the type codes and descriptions for all template types? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Ref_Template_Types, project col:Ref_Template_Types/Template_Type_Type_Code #1, project col:Ref_Template_Types/Template_Type_Type_Description #1, union #2 #3", "alternatives": "select tbl:Ref_Template_Types, project col:Ref_Template_Types/Template_Type_Code #1, project col:Ref_Template_Types/Template_Type_Description #1, union #2 #3"}
{"input": "How many documents do we have? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, aggregate count #1", "alternatives": "select tbl:Documents, aggregate count #1"}
{"input": "What is the name of the winner with the most rank points who participated in the Australian Open tournament? <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select val:matches, project tbl:matches #1, project col:matches/winner_rank_points #2, group #3 #1, superlative max #1 #4, project col:matches/winner_name #5", "alternatives": "select val:matches, group #3 #1, project col:matches/winner_rank_points #2, project tbl:matches #1, superlative max #1 #4, project col:matches/winner_name #5"}
{"input": "What categories have two or more corresponding books that were made after 1989? <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select col:book, project tbl:book_club #1, comparative #2 #2 great/1989 col:book_club/Year, group #3 #1, comparative #1 #4 greatequal/2", "alternatives": "select col:book, project tbl:book_club #1, comparative #1 #4 greatequal/2, group #3 #1, comparative #2 #2 great/1989 col:book_club/Year"}
{"input": "What are the first names of all players, and their average rankings? <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:players, project col:players/first_name #1, project col:players/ranking_points #1, group #3 #1, union #2 #4", "alternatives": "select tbl:players, project col:players/first_name #1, project col:players/ranking_points #1, aggregate avg #3, union #2 #4"}
{"input": "What are the names of the teachers and how many courses do they teach? <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select col:teacher, project col:teacher/Name #1, project tbl:course #1, group #3 #1, union #2 #4", "alternatives": "select col:teacher, project tbl:course #1, project col:teacher/Name #1, group #3 #1, union #2 #4"}
{"input": "Return the ids of templates that have the code PP or PPT. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Templates, project col:Templates/Template_Type_Code #1, comparative #1 #2 equal/PP, comparative #1 #2 equal/PPT, union #3 #4, project col:Templates/Template_ID #5", "alternatives": "select tbl:Templates, comparative #1 #1 equal/PP col:Templates/Template_Type_Code, comparative #1 #1 equal/PPT col:Templates/Template_Type_Code, union #2 #3, project col:Templates/Template_ID #4"}
{"input": "What are all the different book publishers? <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select tbl:book_club", "alternatives": "select col:book_club"}
{"input": "How many movie directors are there? <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select tbl:film, aggregate count #1", "alternatives": "select tbl:film, aggregate count #1"}
{"input": "Show countries where a singer above age 40 and a singer below 30 are from. <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:song, project tbl:song #1, comparative #1 #2 great/40, comparative #1 #2 less/30, project col:song/Country #3, project col:song/Country #4, project col:song/Country #1, intersection #7 #5 #6", "alternatives": "select col:singer, project tbl:singer #1, project col:singer/Age #2, comparative #1 #3 great/40, comparative #1 #3 less/30, intersection #1 #4 #5"}
{"input": "How many matches were played in 2013 or 2016? <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:matches, comparative #1 #1 equal/2013 col:matches/year, comparative #1 #1 equal/2016 col:matches/year, union #2 #3, aggregate count #4", "alternatives": "select tbl:matches, project col:matches/year #1, comparative #1 #2 equal/2013, comparative #1 #2 equal/2016, union #3 #4, aggregate count #5"}
{"input": "Show names of teachers and the courses they are arranged to teach in ascending alphabetical order of the teacher's name. <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select tbl:teacher, project col:teacher/Name #1, project col:course_arrange/Name #1, union #2 #3, sort #4 #2 ascending", "alternatives": "select tbl:teacher, project col:teacher/Name #1, project col:course/Course #1, union #2 #3, sort #4 #2 ascending"}
{"input": "What is the name of the winner with the most rank points who participated in the Australian Open tournament? <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select val:matches, project tbl:matches #1, project col:matches/winner_rank_points #2, group #3 #1, superlative max #1 #4, project col:matches/winner_name #5", "alternatives": "select val:matches, project tbl:matches #1, project col:matches/winner_rank_points #2, superlative max #1 #3, project col:matches/winner_name #4"}
{"input": "What is the template type code of the template used by document with the name \"Data base\"? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, project col:Documents/Document_Name #1, comparative #1 #2 equal/Data base, project tbl:Ref_Template_Types #3, project col:Ref_Template_Types/Template_Type_Code #4", "alternatives": "select tbl:Documents, project tbl:Ref_Template_Types #3, comparative #1 #2less//Data base, project col:Documents/Document_Name #1, project col:Ref_Template_Types/Template_Type_Code #4"}
{"input": "What are the names of tournaments that have more than 10 matches? <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:matches, project tbl:matches #1, group #2 #1, comparative #1 #3 great/10, project col:matches/turner_name #4", "alternatives": "select col:matches, project tbl:matches #1, group #2 #1, project col:matches/turner_name #4, comparative #1 #3 lessequal/10"}
{"input": "Find the average weight for each pet type. <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select col:Pets, project col:Pets/weight #1, group #2 #1, union #1 #3", "alternatives": "select col:Pets, project col:Pets/weight #1, group #2 #1, union #1 #3"}
{"input": "Find the distinct details of invoices which are created before 1989-09-03 or after 2007-12-25. <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Invoices, comparative #1 #1 less/1989-09-03 col:Invoices/invoice_date, comparative #1 #1 great/2007-12-25 col:Invoices/invoice_date, union #2 #3, project col:Invoices/invoice_details #4", "alternatives": "select tbl:Invoices, project col:Invoices/invoice_date #1, comparative #1 #2 less/1989-09-03, comparative #1 #2 great/2007-12-25, union #3 #4, project col:Invoices/invoice_details #5"}
{"input": "Which employee received the most awards in evaluations? Give me the employee name. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select tbl:employee, project tbl:evaluation #1, group #2 #1, superlative max #1 #3, project col:employee/Name #4", "alternatives": "select tbl:employee, superlative max #1 #3, group #2 #1, project tbl:evaluation #1, project col:employee/Name #4"}
{"input": "Find the last name of the student who has a cat that is age 3. <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Student, project tbl:Has_Pets #1, project col:Has_Pets/pet_age #2, comparative #1 #3 equal/3, project col:Student/LName #4", "alternatives": "select tbl:Student, comparative #1 #1 equal/3 col:Has_Pets/pet_age, project col:Student/LName #2"}
{"input": "What are the names of the teachers who teach at least two courses? <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select tbl:teacher, project tbl:course #1, group #2 #1, comparative #1 #3 greatequal/2, project col:teacher/Name #4", "alternatives": "select tbl:teacher, project tbl:course #1, project col:teacher/Name #4, comparative #1 #3 lessequal/2, group #2 #1"}
{"input": "Show all movie titles, years, and directors, ordered by budget. <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select tbl:film, project col:film/Title #1, project col:film/Year #1, project col:film/Director #1, project col:film/Budget_million #1, union #2 #3 #4, sort #6 #5", "alternatives": "select tbl:film, project col:film/Title #1, project col:film/Director #1, project col:film/Year #1, project col:film/Budget_million #1, union #2 #3 #4, sort #6 #5"}
{"input": "Return the publisher that has published the most books. <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select col:book, project tbl:book_club #1, group #2 #1, superlative max #1 #3", "alternatives": "select col:book, project tbl:book_club #1, group #2 #1, superlative max #1 #3"}
{"input": "What are the names of the singers who performed in a concert in 2014? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:song, comparative #1 #1 equal/2014 col:song_in_concert/Year, project tbl:song #2, project col:song/Song_Name #3", "alternatives": "select tbl:song_in_concert, comparative #1 #1 equal/2014 col:song_in_concert/Year, project tbl:song #2, project col:song/Name #3"}
{"input": "What is the age and hometown of every teacher? <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select tbl:teacher, project col:teacher/Age #1, project col:teacher/Hometown #1, union #2 #3", "alternatives": "select tbl:teacher, project col:teacher/Age #1, project col:teacher/Hometown #1, union #2 #3."}
{"input": "What are all distinct countries where singers above age 20 are from? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:song, project col:song/Age #1, comparative #1 #2 great/20, project col:song/Country #3", "alternatives": "select tbl:song, project col:song/Age #1, comparative #1 #2  equal20, project col:song/Country #3"}
{"input": "What is the id of the pet owned by the student whose last name is 'Smith'? <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Student, project col:Student/LName #1, comparative #1 #2 equal/Smith, project tbl:Has_Pets #3, project col:Has_Pets/PetID #4", "alternatives": "select tbl:Student, comparative #1 #2great//Smith, project col:Student/LName #1, project tbl:Has_Pets #3, project col:Has_Pets/PetID #4"}
{"input": "Return the type code of the template type that the most templates belong to. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Templates, project tbl:Ref_Template_Types #1, group #2 #1, superlative max #1 #3, project col:Ref_Template_Types/Template_Type_Code #4", "alternatives": "select col:Templates, project tbl:Ref_Template_Types #1, superlative max #1 #3, group #2 #1, project col:Ref_Template_Types/Template_Type_Code #4"}
{"input": "Show the document id with paragraph text 'Brazil' and 'Ireland'. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Documents, project tbl:Paragraphs #1, comparative #1 #2 equal/Brazil, comparative #1 #2 equal/Ireland, intersection #1 #3 #4, project col:Documents/Document_ID #5", "alternatives": "select col:Paragraphs, project tbl:Paragraphs #1, project col:Paragraphs/Paragraph_Text #2, comparative #1 #3 equal/Brazil, comparative #1 #3 equal/Ireland, intersection #1 #4 #5"}
{"input": "What are airport names at City 'Aberdeen'? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:airports, comparative #1 #1 equal/Aberdeen col:airports/City, project col:airports/AirportName #2", "alternatives": "select tbl:airports, comparative #1 #1less//Aberdeen col:airports/City, project col:airports/AirportName #2"}
{"input": "What is the id and type code for the template used by the most documents? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Templates, project tbl:Documents #1, group #2 #1, superlative max #1 #3, project col:Documents/Template_ID #4, project col:Documents/Template_Type_Code #4, union #5 #6", "alternatives": "select col:Templates, project tbl:Documents #1, group #2 #1, superlative max #1 #3, project col:Documents/Template_Type_Code #4, project col:Documents/Template_ID #4, union #5 #6"}
{"input": "Find the name and location of the stadiums which some concerts happened in the years of both 2014 and 2015. <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:stadium, project tbl:concert #1, comparative #1 #2 equal/2014, comparative #1 #2 equal/2015, intersection #1 #3 #4, project col:stadium/Name #5, project col:stadium/Location #5, union #6 #7", "alternatives": "select tbl:stadium, project tbl:concert #1, comparative #1 #2 equal/2015, comparative #1 #2 equal/2014, intersection #1 #3 #4, project col:stadium/Name #5, project col:stadium/Location #5, union #6 #7"}
{"input": "Show the name and the release year of the song by the youngest singer. <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:song, project col:song/Age #1, superlative min #1 #2, project col:song/Song_Name #3, project col:song/Song_release_year #3, union #4 #5", "alternatives": "select tbl:song, project col:song/Song_Name #1, superlative min #1 #2, project col:song/Song_name #3, project col:song/Song_release_year #3, union #4 #5"}
{"input": "What is the abbreviation of the airline has the fewest flights and what country is it in? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:airlines, project tbl:flights #1, group #2 #1, superlative min #1 #3, project col:airlines/Airline #4, project col:airlines/Country #4, union #5 #6", "alternatives": "select tbl:airlines, project tbl:flights #1, group #2 #1, superlative min #1 #3, project col:airlines/Country #4, project col:airlines/Airline #4, union #5 #6"}
{"input": "What are the names of documents that use templates with the code BK? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, project tbl:Templates #1, project col:Templates/Template_Type_Code #2, comparative #1 #3 equal/BK, project col:Documents/Document_Name #4", "alternatives": "select tbl:Documents, comparative #1 #3less//BK, project col:Templates/Template_Type_Code #2, project tbl:Templates #1, project col:Documents/Document_Name #4"}
{"input": "Return the type code of the template type that the most templates belong to. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Templates, project tbl:Ref_Template_Types #1, group #2 #1, superlative max #1 #3, project col:Ref_Template_Types/Template_Type_Code #4", "alternatives": "select col:Templates, project tbl:Templates #1, group #2 #1, superlative max #1 #3, project col:Templates/Template_Type_Code #4"}
{"input": "List the maximum weight and type for each type of pet. <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Pets, project col:Pets/weight #1, group #2 #1, project col:Pets/Type #1, union #3 #4", "alternatives": "select tbl:Pets, project col:Pets/weight #1, group #2 #1, union #3 #4, project col:Pets/Type #1"}
{"input": "What are the number of concerts that occurred in the stadium with the largest capacity? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:stadium, project col:stadium/Capacity #1, superlative max #1 #2, project tbl:concert #3, aggregate count #4", "alternatives": "select tbl:stadium, project col:stadium/Capacity #1, superlative max #1 #2, project tbl:conzert #3, aggregate count #4"}
{"input": "What are the ids of documents that have 2 or more paragraphs? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, project tbl:Paragraphs #1, group #2 #1, comparative #1 #3 greatequal/2, project col:Documents/Document_ID #4", "alternatives": "select col:Paragraphs, project tbl:Paragraphs #1, group #2 #1, comparative #1 #3 greatequal/2, project col:Paragraphs/Document_ID #4"}
{"input": "Find the invoice numbers which are created before 1989-09-03 or after 2007-12-25. <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select col:Invoices, comparative #1 #1 great/2007-12-25 col:Invoices/invoice_date, comparative #1 #1 less/1989-09-03 col:Invoices/invoice_number, union #2 #3", "alternatives": "select col:Invoices, comparative #1 #1 less/1989-09-03 col:Invoices/invoice_date, comparative #1 #1 great/2007-12-25 col:Invoices/invoice_date, union #2 #3"}
{"input": "Show different hometown of teachers and the number of teachers from each hometown. <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select tbl:teacher, project col:teacher/Hometown #1, group #1 #2, union #2 #3", "alternatives": "select tbl:teacher, project col:teacher/Hometown #1, group #1 #3, union #3 #4"}
{"input": "what is the name and nation of the singer who have a song having 'Hey' in its name? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:song, project tbl:song #1, comparative #1 #2 like%Hey%, project col:song/Song_Name #3, project col:song/Country #3, union #4 #5", "alternatives": "select tbl:song, project tbl:song #1, project col:song/Song_Name #3, comparative #1 #2 like%Hey%, project col:song/Country #3, union #4 #5"}
{"input": "Find the number of distinct name of losers. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:losers, aggregate count #2", "alternatives": "select tbl:players, project col:players/loser_name #1, aggregate count #3"}
{"input": "How many distinct countries do players come from? <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:players, aggregate count #2", "alternatives": "select tbl:players, aggregate count #2"}
{"input": "What are the names of the teachers who teach at least two courses? <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select tbl:teacher, project tbl:course #1, group #2 #1, comparative #1 #3 greatequal/2, project col:teacher/Name #4", "alternatives": "select col:teacher, project tbl:course #1, group #2 #1, comparative #1 #3 greatequal/2, project col:teacher/Name #4"}
{"input": "Count the number of flights departing from 'APG'. <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, comparative #1 #1 equal/APG col:airlines/AirportName, aggregate count #2", "alternatives": "select tbl:flights, comparative #1 #1 equal/APG col:airlines/AirportName, aggregate count #2."}
{"input": "What is the id of the order which has the most items? <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select col:Orders, superlative max #1 #1, project col:Order_Items/order_item_id #2", "alternatives": "select col:Orders, project none #1, group #2 #1, superlative max #1 #3, project col:Orders/order_id #4"}
{"input": "What are the manager name and district of the shop that sells the largest number of products? <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select tbl:shop, project col:shop/Number_products #1, group #2 #1, superlative max #1 #3, project col:shop/Manager_name #4, project col:shop/District #4, union #5 #6", "alternatives": "select tbl:shop, project none #1, group #2 #1, superlative max #1 #3, project col:shop/Manager_name #4, project col:shop/District #4, union #5 #6"}
{"input": "Find the districts in which there are both shops selling less than 3000 products and shops selling more than 10000 products. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select col:shop, project tbl:shop #1, project col:shop/Number_products #2, group #3 #2, comparative #1 #4 less/3000, comparative #1 #4 great/10000, intersection #1 #5 #6", "alternatives": "select col:shop, project tbl:shop #1, project col:shop/Number_products #2, group #3 #2, comparative #1 #4 great/10000, comparative #1 #4 less/3000, intersection #1 #5 #6"}
{"input": "What are the names and release years for all the songs of the youngest singer? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:song, project col:song/Is_male #1, superlative min #1 #2, project col:song/Song_Name #3, project col:song/Song_release_year #3, union #4 #5", "alternatives": "select tbl:song, project col:song/Age #1, superlative min #1 #2, project col:song/Song_Name #3, project col:song/Song_release_year #3, union #4 #5"}
{"input": "What are the names of the singers who performed in a concert in 2014? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:song, comparative #1 #1 equal/2014 col:song_in_concert/Year, project tbl:song #2, project col:song/Song_Name #3", "alternatives": "select tbl:concert, comparative #1 #1 equal/2014 col:concert/Year, project tbl:singer_in_concert #2, project col:singer/Name #3"}
{"input": "What are the years, titles, and publishers for all books, ordered by year descending? <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select tbl:book, project col:book/Year #1, project col:book/Book_Title #1, project col:book/Publisher #1, union #2 #3 #4, sort #5 #2 descending", "alternatives": "select tbl:book, project col:book/Year #1, project col:book/Book_Title #1, project col:book/Publisher #1, union #2 #3 #4, sort #5 #4 descending"}
{"input": "Find the first name, country code and birth date of the winner who has the highest rank points in all matches. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:matches, project col:matches/winner_rank_points #1, group #2 #1, superlative max #1 #3, project col:matches/first_name #4, project col:matches/country_code #4, project col:matches/birth_date #4, union #5 #6 #7", "alternatives": "select tbl:matches, project col:matches/winner_rank_points #1, project col:matches/first_name #4, superlative max #1 #3, group #2 #1, project col:matches/country_code #4, project col:matches/birth_date #4, union #5 #6 #7"}
{"input": "What are the opening year and staff number of the museum named Plaza Museum? <tbl> museum visitor visit </tbl> <col> Museum_ID Name Num_of_Staff Open_Year ID Name Level_of_membership Age Museum_ID visitor_ID Num_of_Ticket Total_spent </col>", "prediction": "select tbl:museum, comparative #1 #1 equal/Plaza Museum col:museum/Name, project col:museum/Open_Year #2, project col:museum/Num_of_Staff #2, union #3 #4", "alternatives": "select tbl:museum, project col:museum/Open_Year #1, comparative #1 #2 equal/Plaza Museum, project col:museum/Num_of_Staff #3, project col:museum/Num_of_Staff #3, union #4 #5"}
{"input": "Give the ids of documents that have between one and two paragraphs. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, project tbl:Paragraphs #1, group #2 #1, comparative #1 #3 greatequal/1, comparative #1 #3 lessequal/2, project col:Documents/Document_ID #4", "alternatives": "select tbl:Documents, project tbl:Paragraphs #1, group #2 #1, comparative #1 #3 lessequal/2, comparative #1 #3 greatequal/1, project col:Documents/Document_ID #4"}
{"input": "How many museums were opened after 2013 or before 2008? <tbl> museum visitor visit </tbl> <col> Museum_ID Name Num_of_Staff Open_Year ID Name Level_of_membership Age Museum_ID visitor_ID Num_of_Ticket Total_spent </col>", "prediction": "select tbl:museum, comparative #1 #1 great/2013 col:museum/Open_Year, comparative #1 #1 less/2008 col:museum/Open_Year, union #2 #3, aggregate count #4", "alternatives": "select tbl:museum, comparative #1 #1 less/2008 col:museum/Open_Year, comparative #1 #1 great/2013 col:museum/Open_Year, union #2 #3, aggregate count #4"}
{"input": "What are the minimum and maximum number of products across all the shops? <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select tbl:shop, project col:shop/Number_products #1, aggregate min #2, aggregate max #2, union #3 #4", "alternatives": "select tbl:shop, project col:shop/Number_products #1, group #2 #1, aggregate min #3, aggregate max #3, union #4 #5"}
{"input": "Find the id of the customers who have order status both \"On Road\" and \"Shipped\". <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Customers, project tbl:Orders #1, comparative #1 #2 equal/On Road, comparative #1 #2 equal/Shipped, intersection #1 #3 #4, project col:Customers/customer_id #5", "alternatives": "select tbl:Customers, project tbl:Orders #1, project col:Orders/order_status #2, comparative #1 #3 equal/On Road, comparative #1 #3 equal/Shipped, intersection #1 #4 #5, project col:Customers/customer_id #6"}
{"input": "What country is Jetblue Airways affiliated with? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select val:airlines, project col:airlines/CountryAbbreviation #1", "alternatives": "select val:airlines, project col:airlines/CountryAbbreviation #1"}
{"input": "What are the manager name and district of the shop that sells the largest number of products? <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select tbl:shop, project col:shop/Number_products #1, group #2 #1, superlative max #1 #3, project col:shop/Manager_name #4, project col:shop/District #4, union #5 #6", "alternatives": "select tbl:shop, project col:shop/Number_products #1, group #2 #1, superlative max #1 #3, project col:shop/Manager_name #4, project col:shop/Manager_name #5, project col:shop/District #4, union #6 #7"}
{"input": "What are the different template type codes? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Ref_Template_Types", "alternatives": "select tbl:Templates"}
{"input": "What is the average and maximum capacities for all stadiums? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:stadium, project col:stadium/Capacity #1, aggregate avg #2, aggregate max #2, union #3 #4", "alternatives": "select tbl:stadium, project col:stadium/Capacity #1, aggregate avg #2, aggregate max #2, union #3 #4."}
{"input": "Return the number of flights departing from Aberdeen. <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, comparative #1 #1 equal/Aberdeen col:airports/AirportName, aggregate count #2", "alternatives": "select tbl:flights, comparative #1 #1 equal/Aberdeen col:airports/Survey, aggregate count #2"}
{"input": "What are the names, themes, and number of singers for every concert? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:song_in_concert, project col:song/Concert_Name #1, project col:song/Theme #1, project tbl:song_in_concert #1, group #4 #1, union #2 #3 #5", "alternatives": "select tbl:song_in_concert, project col:song/Theme #1, project col:song/Concert_Name #1, project tbl:song_in_concert #1, group #4 #1, union #2 #3 #5"}
{"input": "What are the names of the stadiums without any concerts? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:stadium, comparative #1 #1 tbl:concert, discard #1 #2, project col:stadium/Name #3", "alternatives": "select tbl:stadium, comparative #1 #1 tbl:concert, discard #1 #2, project col:stadium/Name #3"}
{"input": "What is the airport code of the airport with the most flights? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select col:airports, project tbl:flights #1, group #2 #1, superlative max #1 #3, project col:airports/AirportCode #4", "alternatives": "select col:airports, project col:airports/AirportCode #4, group #2 #1, superlative max #1 #3, project tbl:flights #1"}
{"input": "Find the manager name and district of the shop whose number of products is the largest. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select tbl:shop, project col:shop/Number_products #1, group #2 #1, superlative max #1 #3, project col:shop/Manager_name #4, project col:shop/District #4, union #5 #6", "alternatives": "select tbl:shop, project col:shop/Number_products #1, group #2 #1, superlative max #1 #3, union #5 #6, project col:shop/District #4, project col:shop/Manager_name #4"}
{"input": "What airline serves the most flights? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select col:airlines, project tbl:flights #1, group #2 #1, superlative max #1 #3", "alternatives": "select col:airlines, project tbl:flights #1, group #2 #1, superlative max #1 #3"}
{"input": "What is the first name of every student who has a dog but does not have a cat? <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Student, comparative #1 #1 equal/Dog col:Has_Pets/PetType, comparative #2 #2 notequal/Cat col:Has_Pets/PetType, project col:Student/Fname #3", "alternatives": "select tbl:Student, comparative #1 #1 equal/Dog col:Has_Pets/PetType, comparative #1 #1 notequal/Cat col:Has_Pets/PetType, project col:Student/Fname #3"}
{"input": "Return the template type code of the template that is used by a document named Data base. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, comparative #1 #1 equal/Data base col:Documents/Document_Name, project tbl:Ref_Template_Types #2, project col:Ref_Template_Types/Template_Type_Code #3", "alternatives": "select tbl:Templates, comparative #1 #1 equal/Data base col:Documents/Document_Name, project tbl:Templates #2, project col:Templates/Template_Type_Code #3"}
{"input": "How many flights arriving in Aberdeen city? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, project col:flights/City #1, comparative #1 #2 equal/Aberdeen, aggregate count #3", "alternatives": "select tbl:flights, project tbl:flights #1, comparative #2 #1 equal/Aberdeen, aggregate count #3"}
{"input": "What are the different template type codes, and how many documents use each type? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Ref_Template_Types, project tbl:Ref_Template_Types #1, group #2 #1, union #1 #3", "alternatives": "select tbl:Ref_Template_Types, project tbl:Ref_Template_Types #1, group #2 #1, union #1 #3"}
{"input": "Show all countries and the number of singers in each country. <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select col:song, project tbl:song #1, group #2 #1, union #1 #3", "alternatives": "select col:song, project tbl:song #1, group #2 #1, union #1 #3"}
{"input": "What are the names of documents that use templates with the code BK? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, project tbl:Templates #1, project col:Templates/Template_Type_Code #2, comparative #1 #3 equal/BK, project col:Documents/Document_Name #4", "alternatives": "select tbl:Documents, comparative #1 #3 equal/BK, project col:Templates/Template_Type_Code #2, project tbl:Templates #1, project col:Documents/Document_Name #4"}
{"input": "What are the id, name and membership level of visitors who have spent the largest amount of money in total in all museum tickets? <tbl> museum visitor visit </tbl> <col> Museum_ID Name Num_of_Staff Open_Year ID Name Level_of_membership Age Museum_ID visitor_ID Num_of_Ticket Total_spent </col>", "prediction": "select tbl:visit, project tbl:visit #1, project col:visit/Total_spent #2, group #3 #1, superlative max #1 #4, project col:visit/Visit_ID #5, project col:visit/Name #5, project col:visit/Level_of_membership #5, union #6 #7", "alternatives": "select tbl:visitor, project none #1, project col:visit/Total_spent #2, group #3 #1, superlative max #1 #4, project col:visit/visitor_ID #5, project col:visitor/Name #5, project col:visitor/Level_of_membership #5, union #6 #7 #8"}
{"input": "What are the codes of template types that have fewer than 3 templates? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Templates, project tbl:Ref_Template_Types #1, group #2 #1, comparative #1 #3 less/3, project col:Ref_Template_Types/Template_Type_Code #4", "alternatives": "select col:Templates, project tbl:Templates #1, group #2 #1, comparative #1 #3 less/3, project col:Templates/Template_Type_Code #4"}
{"input": "Return the number of airlines in the USA. <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:airlines, comparative #1 #1 equal/USA col:airlines/Country, aggregate count #2", "alternatives": "select tbl:airlines, comparative #1 #1great//USA col:airlines/Country, aggregate count #2"}
{"input": "Count the number of distinct store locations. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select col:shop, comparative #1 #1 none, aggregate count #2", "alternatives": "select tbl:shop, aggregate count #2"}
{"input": "Find the last name of the student who has a cat that is age 3. <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Student, project tbl:Has_Pets #1, project col:Has_Pets/pet_age #2, comparative #1 #3 equal/3, project col:Student/LName #4", "alternatives": "select tbl:Student, project col:Student/LName #4, project col:Has_Pets/pet_age #2, comparative #1 #3lessequal//3, project tbl:Has_Pets #1"}
{"input": "What are the titles, years, and directors of all movies, ordered by budget in millions? <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select tbl:film, project col:film/Title #1, project col:film/Year #1, project col:film/Director #1, project col:film/Budget_million #1, union #2 #3 #4, sort #6 #5", "alternatives": "select tbl:film, sort #6 #5, project col:film/Year #1, project col:film/Director #1, project col:film/Budget_million #1, union #2 #3 #4, project col:film/Title #1"}
{"input": "What is maximum and minimum death toll caused each time? <tbl> battle ship death </tbl> <col> id name date bulgarian_commander latin_commander result lost_in_battle id name tonnage ship_type location disposition_of_ship caused_by_ship_id id note killed injured </col>", "prediction": "select col:death, project col:death/tonnage #1, group #2 #1, union #1 #3", "alternatives": "select col:death, project col:death/tonnage #1, group #2 #1, union #1 #3"}
{"input": "List the first name and birth date of all players from the country with code USA. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:players, project col:players/country_code #1, comparative #1 #2 equal/USA, project col:players/first_name #3, project col:players/birth_date #3, union #4 #5", "alternatives": "select tbl:players, project col:players/country_code #1, project col:players/country_code #2, comparative #1 #3 equal/USA, project col:players/first_name #4, project col:players/birth_date #4, union #5 #6"}
{"input": "Find the average and maximum age for each type of pet. <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select col:Pets, project col:Pets/pet_age #1, group #2 #1, aggregate avg #3, aggregate max #3, union #4 #5", "alternatives": "select tbl:Pets, project col:Pets/PetType #1, project col:Pets/pet_age #2, group #3 #2, group #3 #2, union #2 #4 #5"}
{"input": "How many different store locations are there? <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select col:shop, aggregate count #1", "alternatives": "select col:shop, aggregate count #1"}
{"input": "What are all distinct countries where singers above age 20 are from? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:song, project col:song/Age #1, comparative #1 #2 great/20, project col:song/Country #3", "alternatives": "select tbl:song, comparative #1 #1 great/20 col:song/Age, project col:song/Country #2"}
{"input": "Return the id and name of the document with the most paragraphs. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, project tbl:Paragraphs #1, group #2 #1, superlative max #1 #3, project col:Documents/Document_ID #4, project col:Documents/Document_Name #4, union #5 #6", "alternatives": "select tbl:Documents, project tbl:Paragraphs #1, union #5 #6, superlative max #1 #3, project col:Documents/Document_ID #4, project col:Documents/Document_Name #4, group #2 #1"}
{"input": "Show all template ids and number of documents using each template. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Templates, project col:Templates/Template_ID #1, project tbl:Documents #1, group #3 #1, union #2 #4", "alternatives": "select col:Templates, project col:Templates/Template_ID #1, project tbl:Documents #1, union #2 #4, group #3 #1"}
{"input": "Return the id of the document with the fewest paragraphs. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, project tbl:Paragraphs #1, group #2 #1, superlative min #1 #3, project col:Documents/Document_ID #4", "alternatives": "select tbl:Documents, project col:Documents/Document_ID #4, group #2 #1, superlative min #1 #3, project tbl:Paragraphs #1"}
{"input": "List all airline names and their abbreviations in \"USA\". <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:airlines, comparative #1 #1 equal/USA col:airlines/CountryName, project col:airlines/Airline #2, project col:airlines/Abbreviation #2, union #3 #4", "alternatives": "select tbl:airlines, project col:airlines/Abbreviation #2, project col:airlines/Airline #2, comparative #1 #1greatequal//USA col:airlines/CountryName, union #3 #4"}
{"input": "Give the flight numbers of flights leaving from APG. <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, comparative #1 #1 equal/APG col:airports/AirportName, project tbl:flights #2, project col:flights/FlightNo #3", "alternatives": "select tbl:flights, comparative #1 #1lessequal//APG col:airports/AirportName, project tbl:flights #2, project col:flights/FlightNo #3"}
{"input": "Give the airport code and airport name corresonding to the city Anthony. <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:airports, project col:airports/AirportCode #1, project col:airports/AirportName #1, union #2 #3, comparative #4 #1 equal/Anthony, union #2 #5", "alternatives": "select tbl:airports, project col:airports/AirportCode #1, union #2 #5, union #2 #3, comparative #4 #1greatequal//Anthony, project col:airports/AirportName #1"}
{"input": "Give the airline with abbreviation 'UAL'. <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select col:airlines, project col:airlines/Airline #1, comparative #1 #2 like%UAL%", "alternatives": "select col:airlines, project col:airlines/Abbreviation #1, comparative #1 #2 equal/UAL"}
{"input": "Find the number of matches happened in each year. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:matches, project tbl:matches #1, group #2 #1, union #1 #3", "alternatives": "select col:matches, project tbl:matches #1, group #2 #1, union #1 #3"}
{"input": "What are the names of the teachers ordered by ascending age? <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select tbl:teacher, project col:teacher/Name #1, project col:teacher/Age #1, sort #2 #3 ascending", "alternatives": "select tbl:teacher, project col:teacher/Name #1, project col:teacher/Age #1, sort #2 #4 ascending"}
{"input": "How many countries does each continent have? List the continent id, continent name and the number of countries. <tbl> continents countries car_makers model_list car_names cars_data </tbl> <col> ContId Continent CountryId CountryName Continent Id Maker FullName Country ModelId Maker Model MakeId Model Make Id MPG Cylinders Edispl Horsepower Weight Accelerate Year </col>", "prediction": "select col:continents, project tbl:countries #1, group #2 #1, project col:continents/Continent #1, project col:continents/Continent #1, union #4 #5 #3", "alternatives": "select col:continents, project tbl:countries #1, group #2 #1, project col:continents/Continent #1, union #4 #5 #3, project col:continents/Continent #1"}
{"input": "Show all document ids and the number of paragraphs in each document. Order by document id. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Documents, project col:Documents/Document_ID #1, project tbl:Paragraphs #1, group #3 #1, union #2 #4, sort #5 #4", "alternatives": "select col:Documents, project col:Documents/Document_ID #1, group #3 #1, project tbl:Paragraphs #1, union #2 #4, sort #5 #4"}
{"input": "What country is Jetblue Airways affiliated with? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select val:airlines, project col:airlines/CountryAbbreviation #1", "alternatives": "select val:airlines, project col:airlines/CountryAbbreviated #1"}
{"input": "Which order deals with the most items? Return the order id. <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select col:Orders, project tbl:Order_Items #1, group #2 #1, superlative max #1 #3, project col:Orders/order_id #4", "alternatives": "select col:Orders, group #2 #1, project tbl:Order_Items #1, superlative max #1 #3, project col:Orders/order_id #4"}
{"input": "Find the number of employees hired in each shop; show the shop name as well. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select col:shop, project tbl:hiring #1, group #2 #1, project col:shop/Name #1, union #3 #4", "alternatives": "select col:hiring, project tbl:employee #1, group #2 #1, project col:shop/Name #1, union #3 #4"}
{"input": "Return the number of flights arriving in Aberdeen. <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, comparative #1 #1 equal/Aberdeen col:airports/AirportName, aggregate count #2", "alternatives": "select tbl:flights, comparative #1 #1 equal/Aberdeen col:airports/City, aggregate count #2"}
{"input": "What is the name and capacity of the stadium with the most concerts after 2013? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:stadium, project tbl:concert #1, comparative #2 #2 great/2013 col:concert/Year, group #3 #1, superlative max #1 #4, project col:stadium/Name #5, project col:stadium/Capacity #5, union #6 #7", "alternatives": "select tbl:stadium, project tbl:concert #1, comparative #2 #2 great/2013 col:convention/Year, group #3 #1, superlative max #1 #4, project col:stadium/Name #5, project col:stadium/Capacity #5, union #6 #7"}
{"input": "show the name of all bridges that was designed by american archtect, and sort the result by the bridge feet length. <tbl> architect bridge mill </tbl> <col> id name nationality gender architect_id id name location length_meters length_feet architect_id id location name type built_year notes </col>", "prediction": "select tbl:bridge, comparative #1 #1 equal/American archtect col:archtect/name, project col:bridge/name #2, project col:bridge/length_feet #2, sort #3 #4", "alternatives": "select tbl:bridge, sort #3 #4, project col:bridge/name #2, project col:bridge/length_feet #2, comparative #1 #1lessequal//American archtect col:archtect/name"}
{"input": "What is the last name of the student who has a cat that is 3 years old? <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Student, project tbl:Has_Pets #1, comparative #1 #2 equal/3, project col:Student/LName #3", "alternatives": "select tbl:Student, project tbl:Has_Pets #1, comparative #1 #2 equal/3, project col:Student/Lname #3"}
{"input": "Find the first name and country code of the player who did the most number of tours. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:players, project tbl:matches #1, group #2 #1, superlative max #1 #3, project col:players/first_name #4, project col:players/country_code #4, union #5 #6", "alternatives": "select tbl:players, project tbl:matches #1, group #2 #1, superlative max #1 #3, project col:players/country_code #4, project col:players/first_name #4, union #5 #6"}
{"input": "Find the names of the customers who have order status both \"On Road\" and \"Shipped\". <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Customers, project tbl:Orders #1, comparative #1 #2 equal/On Road, comparative #1 #2 equal/Shipped, intersection #1 #3 #4, project col:Customers/customer_name #5", "alternatives": "select tbl:Customers, project tbl:Orders #1, comparative #1 #2 equal/Shipped, comparative #1 #2 equal/On Road, intersection #1 #3 #4, project col:Customers/customer_name #5"}
{"input": "Find the number of visitors who did not visit any museum opened after 2010. <tbl> museum visitor visit </tbl> <col> Museum_ID Name Num_of_Staff Open_Year ID Name Level_of_membership Age Museum_ID visitor_ID Num_of_Ticket Total_spent </col>", "prediction": "select tbl:museum, comparative #1 #1 great/2010 col:museum/Open_Year, project tbl:visit #2, group #3 #2, select tbl:visit, discard #5, aggregate count #6", "alternatives": "select tbl:museum, comparative #1 #1 great/2010 col:museum/Open_Year, project tbl:visit #2, group #3 #2, select tbl:visit, discard #6, aggregate count #5"}
{"input": "Count the number of matches. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:matched, aggregate count #1", "alternatives": "select tbl:matched, aggregate count #1"}
{"input": "Find the id of the order which is shipped most recently. <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select col:Shipments, superlative max #1 #1, project col:Shipments/order_id #2", "alternatives": "select col:Shipments, superlative max #1 #1, project col:Shipments/order_id #2"}
{"input": "List the names of all winners who played in both 2013 and 2016. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:matches, comparative #1 #1 equal/2013 col:matches/year, comparative #1 #1 equal/2016 col:matches/year, intersection #1 #2 #3, project col:matches/winner_name #4", "alternatives": "select tbl:winners, comparative #1 #1 equal/2013 col:matches/year, comparative #1 #1 equal/2016 col:matches/year, intersection #1 #2 #3, project col:winners/winner_name #4."}
{"input": "Count the number of templates of the type CV. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Templates, comparative #1 #1 equal/CV col:Templates/Template_Type_Code, aggregate count #2", "alternatives": "select tbl:Templates, comparative #1 #1less//CV col:Templates/Template_Type_Code, aggregate count #2"}
{"input": "What is the hometown of the youngest teacher? <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select tbl:teacher, project col:teacher/Hometown #1, superlative min #1 #2", "alternatives": "select tbl:teacher, project col:teacher/Age #1, superlative min #1 #2, project col:teacher/Hometown #3"}
{"input": "Which order has the most recent shipment? Give me the order id. <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select col:Shipments, project tbl:Shipments #1, superlative max #1 #2, project col:Shipments/order_id #3", "alternatives": "select col:Shipments, project tbl:Shipments #1, superlative max #1 #2, project col:Shipments/order_id #3"}
{"input": "Find the names of the visitors whose membership level is higher than 4, and order the results by the level from high to low. <tbl> museum visitor visit </tbl> <col> Museum_ID Name Num_of_Staff Open_Year ID Name Level_of_membership Age Museum_ID visitor_ID Num_of_Ticket Total_spent </col>", "prediction": "select tbl:visit, project col:visit/Level_of_membership #1, comparative #1 #2 great/4, project col:visit/Name #3, project col:visit/Level_of_membership #3, sort #4 #5 ascending", "alternatives": "select tbl:visit, project col:visit/Level_of_membership #1, comparative #1 #2 great/4, project col:visit/Name #3, project col:visit/Level_of_membership #3, sort #5 #4 descending"}
{"input": "Give the flight numbers of flights landing at APG. <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, comparative #1 #1 equal/APG col:airports/AirportName, project tbl:flights #2, project col:flights/FlightNo #3", "alternatives": "select tbl:flights, comparative #1 #1lessequal//APG col:airports/AirportName, project tbl:flights #2, project col:flights/FlightNo #3"}
{"input": "What is the id of the order which has the most items? <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select col:Orders, superlative max #1 #1, project col:Order_Items/order_item_id #2", "alternatives": "select col:Orders, superlative max #1 #1, project col:Order_Items/order_item_id #2"}
{"input": "What are the average ages of losers and winners across matches? <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:matches, project col:matches/loser_age #1, project col:matches/winner_name #1, aggregate avg #2, aggregate avg #3, union #4 #5", "alternatives": "select tbl:matches, project col:matches/loser_age #1, aggregate avg #3, aggregate avg #2, project col:matches/winner_name #1, union #4 #5"}
{"input": "Find the average age of losers and winners of all matches. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:matches, project col:matches/loser_age #1, aggregate avg #2, comparative #1 #2 equal/#3, project col:matches/winner_name #4, union #3 #5", "alternatives": "select tbl:matches, comparative #1 #2 equal/#3, aggregate avg #2, project col:matches/loser_age #1, project col:matches/winner_name #4, union #3 #5"}
{"input": "find the names of museums which have more staff than the minimum staff number of all museums opened after 2010. <tbl> museum visitor visit </tbl> <col> Museum_ID Name Num_of_Staff Open_Year ID Name Level_of_membership Age Museum_ID visitor_ID Num_of_Ticket Total_spent </col>", "prediction": "select tbl:museum, comparative #1 #1 great/2010 col:museum/Open_Year, project col:museum/Num_of_Staff #2, group #3 #2, aggregate min #4, comparative #1 #4 great/#5, project col:museum/Name #6", "alternatives": "select tbl:museum, comparative #1 #1 great/2010 col:open/Open_Year, project col:museum/Num_of_Staff #2, group #3 #2, aggregate min #4, comparative #1 #4 great/#5, project col:museum/Name #6"}
{"input": "Show names of teachers and the number of courses they teach. <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select col:teacher, project col:teacher/Name #1, project tbl:course #1, group #3 #1, union #2 #4", "alternatives": "select col:teacher, project col:teacher/Name #1, project tbl:course #2, group #3 #2, union #2 #4"}
{"input": "What are the names of tournaments that have more than 10 matches? <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:matches, project tbl:matches #1, group #2 #1, comparative #1 #3 great/10, project col:matches/turner_name #4", "alternatives": "select col:matches, project tbl:matches #1, group #2 #1, project col:matches/turner_name #4, comparative #1 #3 great/10"}
{"input": "What are the death and injury situations caused by the ship with tonnage 't'? <tbl> battle ship death </tbl> <col> id name date bulgarian_commander latin_commander result lost_in_battle id name tonnage ship_type location disposition_of_ship caused_by_ship_id id note killed injured </col>", "prediction": "select tbl:ship, project col:ship/tonnage #1, comparative #1 #2 equal/t, project col:during/death #3, project col:injury/injury #3, union #4 #5", "alternatives": "select tbl:ship, project col:ship/tonnage #1, comparative #1 #2 equal/t, project col:death/killed #3, project col:death/injured #3, union #4 #5"}
{"input": "What is the average age for all students who do not own any pets? <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Student, comparative #1 #1 tbl:Has_Pets, discard #1 #2, project col:Student/Age #3, aggregate avg #4", "alternatives": "select tbl:Student, project col:Student/Age #3, discard #1 #2, comparative #1 #1 tbl:Has_Pets, aggregate avg #4"}
{"input": "Return the version numbers and template type codes of templates with a version number greater than 5. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Templates, project col:Templates/Version_Number #1, comparative #1 #2 great/5, project col:Templates/Version_Number #3, project col:Templates/Template_Type_Code #3, union #4 #5", "alternatives": "select tbl:Templates, project col:Templates/Version_Number #1, project col:Templates/Version_Number #3, comparative #1 #2 great/5, project col:Templates/Template_Type_Code #3, union #4 #5"}
{"input": "What is the document id with 1 to 2 paragraphs? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Documents, project tbl:Paragraphs #1, group #2 #1, comparative #1 #3 equal/1, comparative #1 #3 equal/2, intersection #1 #4 #5", "alternatives": "select col:Paragraphs, project tbl:Paragraphs #1, group #2 #1, comparative #1 #3 greatequal/1, project col:Paragraphs/Document_ID #4"}
{"input": "Sort all the shops by number products in descending order, and return the name, location and district of each shop. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select tbl:shop, project col:shop/Name #1, project col:shop/Location #1, project col:shop/District #1, union #2 #3 #4, sort #6 #5 descending", "alternatives": "select tbl:shop, project col:shop/Name #1, union #2 #3 #4, project col:shop/District #1, project col:shop/Location #1, sort #6 #5 descending"}
{"input": "How many total tours were there for each ranking date? <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:rankings, project tbl:turnouts #1, group #2 #1, union #1 #3", "alternatives": "select col:rankings, project col:rankings/tours #1, group #2 #1, union #1 #3"}
{"input": "What are flight numbers of flights departing from City \"Aberdeen \"? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, comparative #1 #1 equal/Aberdeen col:airports/City, project tbl:flights #2, project col:flights/FlightNo #3", "alternatives": "select tbl:flights, project col:airports/City #1, comparative #1 #2 equal/Aberdeen, project col:flights/FlightNo #3"}
{"input": "What is the name of the shop that is hiring the largest number of employees? <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select tbl:shop, project tbl:hiring #1, group #2 #1, superlative max #1 #3, project col:shop/Name #4", "alternatives": "select tbl:shop, project col:shop/Name #4, group #2 #1, superlative max #1 #3, project tbl:hiring #1"}
{"input": "Find the average ranking for each player and their first name. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:players, project col:players/ranking #1, group #2 #1, project col:players/first_name #1, union #1 #3", "alternatives": "select col:players, project col:players/first_name #1, group #2 #1, project col:players/ranking #1, union #1 #3"}
{"input": "Which customers have both \"On Road\" and \"Shipped\" as order status? List the customer names. <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Customers, project tbl:Orders #1, comparative #1 #2 equal/On Road, comparative #1 #2 equal/Shipped, intersection #1 #3 #4, project col:Customers/customer_name #5", "alternatives": "select tbl:Customers, project tbl:Orders #1, comparative #1 #2 equal/Shipped, comparative #1 #2 equal/On Road, intersection #1 #3 #4, project col:Customers/customer_name #5"}
{"input": "What is the publisher with most number of books? <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select col:book, project tbl:book_club #1, group #2 #1, superlative max #1 #3", "alternatives": "select col:book, project tbl:book_club #1, group #2 #1, superlative max #1 #3"}
{"input": "Find the weight of the youngest dog. <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Pets, project col:Pets/weight #1, superlative min #1 #2, project col:Pets/weight #3", "alternatives": "select val:Pets, project col:Pets/pet_age #1, superlative min #1 #2, project col:Pets/weight #3"}
{"input": "What is the ship id and name that caused most total injuries? <tbl> battle ship death </tbl> <col> id name date bulgarian_commander latin_commander result lost_in_battle id name tonnage ship_type location disposition_of_ship caused_by_ship_id id note killed injured </col>", "prediction": "select tbl:ship, project tbl:injury #1, group #2 #1, superlative max #1 #3, project col:ship/id #4, project col:ship/name #4, union #5 #6", "alternatives": "select tbl:ship, project tbl:injury #1, group #2 #1, superlative max #1 #3, union #5 #6, project col:ship/name #4, project col:ship/id #4"}
{"input": "What is the average and maximum age for each pet type? <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select col:Pets, project col:Pets/pet_age #1, group #2 #1, aggregate avg #3, aggregate max #3, union #4 #5", "alternatives": "select col:Pets, project col:Pets/pet_age #1, aggregate avg #2, aggregate max #2, union #3 #4"}
{"input": "What is the document id, template id and description for document named \"Robbin CV\"? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, comparative #1 #1 equal/Robbin CV col:Documents/Document_Name, project col:Documents/Document_ID #2, project col:Documents/Template_ID #3, project col:Documents/Document_Description #3, union #4 #5 #6", "alternatives": "select tbl:Documents, comparative #1 #1 equal/Robbin CV col:Documents/Document_Name, project col:Documents/Document_ID #2, project col:Documents/Template_ID #2, project col:Documents/Document_Description #2, union #3 #4 #5"}
{"input": "Find the name of the employee who got the highest one time bonus. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select tbl:employee, project col:employee/Bonus #1, superlative max #1 #2, project col:employee/Name #3", "alternatives": "select tbl:employee, project col:employee/Bonus #1, superlative max #1 #2, project col:employee/Name #3"}
{"input": "List the names of customers who have once canceled the purchase of the product \"food\" (the item status is \"Cancel\"). <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Customers, project tbl:Order_Items #1, comparative #1 #2 equal/food, project col:Order_Items/order_status #3, comparative #3 #4 equal/Cancel, project col:Customers/customer_name #5", "alternatives": "select tbl:Customers, project tbl:Order_Items #1, comparative #1 #2 equal/food, project tbl:Order_Items #3, comparative #3 #4 equal/Cancel, project col:Customers/customer_name #5"}
{"input": "What are all different template ids used for documents, and how many times were each of them used? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Documents, project tbl:Documents #1, group #2 #1, union #1 #3", "alternatives": "select col:Documents, project col:Documents/Template_ID #1, group #1 #2, union #3 #4"}
{"input": "Show different hometown of teachers and the number of teachers from each hometown. <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select tbl:teacher, project col:teacher/Hometown #1, group #1 #2, union #2 #3", "alternatives": "select tbl:teacher, project col:teacher/Hometown #1, group #1 #2, union #2 #3"}
{"input": "Count the number of United Airlines flights that arrive in Aberdeen. <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, comparative #1 #1 equal/Aberdeen col:airports/City, aggregate count #2", "alternatives": "select tbl:flights, comparative #1 #1less//Aberdeen col:airports/City, aggregate count #2"}
{"input": "What are the manager name and district of the shop that sells the largest number of products? <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select tbl:shop, project col:shop/Number_products #1, group #2 #1, superlative max #1 #3, project col:shop/Manager_name #4, project col:shop/District #4, union #5 #6", "alternatives": "select tbl:shop, project col:shop/Number_products #1, group #2 #1, project col:shop/Manager_name #4, superlative max #1 #3, project col:shop/District #4, union #5 #6"}
{"input": "Return the number of flights. <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, aggregate count #1", "alternatives": "select tbl:flights, aggregate count #1"}
{"input": "Show name, country, age for all singers ordered by age from the oldest to the youngest. <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:song, project col:song/Song_Name #1, project col:song/Country #1, project col:song/Age #1, sort #2 #3 descending", "alternatives": "select tbl:song, project col:song/Country #1, project col:song/Song_Name #1, project col:song/Age #1, sort #2 #3 descending"}
{"input": "How many United Airlines flights go to City 'Aberdeen'? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, comparative #1 #1 equal/Aberdeen col:flights/City, aggregate count #2", "alternatives": "select tbl:flights, comparative #1 #1lessequal//Aberdeen col:flights/City, aggregate count #2"}
{"input": "How many different loser names are there? <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:matches, aggregate count #2", "alternatives": "select col:players, aggregate count #2"}
{"input": "find the number of players for each country. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:matches, project tbl:players #1, group #2 #1, union #1 #3", "alternatives": "select col:matches, project tbl:players #1, group #2 #1, union #1 #3"}
{"input": "How many concerts occurred in 2014 or 2015? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:concert, comparative #1 #1 equal/2014 col:concert/Year, comparative #1 #1 equal/2015 col:concert/Year, union #2 #3, aggregate count #4", "alternatives": "select tbl:concert, comparative #1 #1 equal/2015 col:concert/Year, comparative #1 #1 equal/2014 col:concert/Year, union #2 #3, aggregate count #4"}
{"input": "Which flight numbers correspond to United Airlines flights? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, comparative #1 #1 equal/United Airlines col:airlines/Airline, project col:flights/FlightNo #2", "alternatives": "select tbl:flights, comparative #1 #1lessequal//United Airlines col:airlines/Airline, project col:flights/FlightNo #2"}
{"input": "Find the number of matches happened in each year. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:matches, project tbl:matches #1, group #2 #1, union #1 #3", "alternatives": "select col:matches, project none #1, group #2 #1, union #1 #3"}
{"input": "Find the number of concerts happened in the stadium with the highest capacity. <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:stadium, project col:stadium/Capacity #1, superlative max #1 #2, project tbl:concert #3, aggregate count #4", "alternatives": "select tbl:stadium, superlative max #1 #2, project col:stadium/Capacity #1, project tbl:concert #3, aggregate count #4"}
{"input": "Show all document names using templates with template type code BK. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Templates, project tbl:Templates #1, project col:Templates/Template_Type_Code #2, comparative #1 #3 equal/BK, project col:Documents/Document_Name #4", "alternatives": "select tbl:Templates, project col:Templates/Template_Type_Code #2, project tbl:Templates #1, comparative #1 #3lessequal//BK, project col:Documents/Document_Name #4"}
{"input": "Return the id and name of the document with the most paragraphs. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, project tbl:Paragraphs #1, group #2 #1, superlative max #1 #3, project col:Documents/Document_ID #4, project col:Documents/Document_Name #4, union #5 #6", "alternatives": "select tbl:Documents, project tbl:Paragraphs #1, union #5 #6, superlative max #1 #3, project col:Documents/Document_ID #4, project col:Documents/Document_Name #4, group #2 #1"}
{"input": "List categories that have at least two books after year 1989. <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select col:book, project tbl:book_club #1, comparative #2 #2 great/1989 col:book_club/Year, group #3 #1, comparative #1 #4 greatequal/2", "alternatives": "select tbl:book_club, comparative #1 #1 great/1989 col:book_club/Year, project col:book_club/Category #2, group #2 #3, comparative #3 #4 greatequal/2"}
{"input": "Show all paragraph ids and texts for the document with name 'Welcome to NY'. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, project col:Documents/Document_Name #1, comparative #1 #2 equal/Welcome to NY, project col:Paragraphs/Paragraph_ID #3, project col:Paragraphs/Paragraph_Text #3, union #4 #5", "alternatives": "select tbl:Documents, project col:Documents/Document_Name #1, comparative #1 #2 equal/Welcome to NY, project tbl:Paragraphs #3, project col:Paragraphs/Paragraph_ID #4, project col:Paragraphs/Paragraph_Text #4, union #5 #6"}
{"input": "Find the number of pets for each student who has any pet and student id. <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select col:Has_Pets, project tbl:Has_Pets #1, group #2 #1, project col:Has_Pets/StuID #1, union #3 #4", "alternatives": "select tbl:Student, comparative #1 #1 tbl:Has_Pet, project tbl:Has_Pet #2, group #3 #2, project col:Student/StuID #2, union #4 #5"}
{"input": "How many templates have template type code CV? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Templates, project tbl:Template_Types #1, comparative #1 #2 equal/CV, aggregate count #3", "alternatives": "select tbl:Templates, project tbl:Template_Types #1, comparative #1 #2lessequal//CV, aggregate count #3"}
{"input": "Which order has the most recent shipment? Give me the order id. <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select col:Shipments, project tbl:Shipments #1, superlative max #1 #2, project col:Shipments/order_id #3", "alternatives": "select col:Shipments, project tbl:Shipments #1, group #2 #1, superlative max #1 #3, project col:Shipments/order_id #4"}
{"input": "Find the names of the customers who have order status both \"On Road\" and \"Shipped\". <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Customers, project tbl:Orders #1, comparative #1 #2 equal/On Road, comparative #1 #2 equal/Shipped, intersection #1 #3 #4, project col:Customers/customer_name #5", "alternatives": "select tbl:Customers, project tbl:Orders #1, project col:Orders/order_status #2, comparative #1 #3 equal/On Road, comparative #1 #3 equal/Shipped, intersection #1 #4 #5, project col:Customers/customer_name #6"}
{"input": "Find the average rank of winners in all matches. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:matches, project col:matches/winner_rank #1, aggregate avg #2", "alternatives": "select tbl:matches, project col:matches/winner_rank #1, project col:matches/winner_rank #2, aggregate avg #3"}
{"input": "Which order has the most recent shipment? Give me the order id. <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select col:Shipments, project tbl:Shipments #1, superlative max #1 #2, project col:Shipments/order_id #3", "alternatives": "select col:Shipments, project col:Shipments/shipment_date #1, superlative max #1 #2, project col:Shipments/order_id #3"}
{"input": "Return the number of flights arriving in Aberdeen. <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, comparative #1 #1 equal/Aberdeen col:airports/AirportName, aggregate count #2", "alternatives": "select tbl:flights, comparative #1 #1 equal/Aberdeen col:airports/City, aggregate count #2"}
{"input": "What are the paragraph texts for the document with the name 'Customer reviews'? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, project col:Documents/Document_Name #1, comparative #1 #2 equal/Customer reviews, project col:Paragraphs/Paragraph_Text #3", "alternatives": "select tbl:Documents, comparative #1 #1 equal/Customer reviews col:Documents/Document_Name, project tbl:Paragraphs #2, project col:Paragraphs/Paragraph_Text #3"}
{"input": "Which orders have shipment after 2000-01-01? Give me the order ids. <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Orders, comparative #1 #1 great/2000-01-01 col:Shipments/shipment_date, project col:Orders/order_id #2", "alternatives": "select tbl:Orders, project tbl:Shipments #1, comparative #1 #2 great/2000-01-01, project col:Shipments/order_id #3"}
{"input": "How many documents are using the template with type code 'PPT'? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Templates, project tbl:Templates #1, project col:Templates/Template_Type_Code #2, comparative #1 #3 equal/PPT, aggregate count #4", "alternatives": "select tbl:Templates, project col:Templates/Template_Type_Code #1, comparative #1 #2 equal/PPT, project tbl:Documents #3, aggregate count #4"}
{"input": "Count the number of United Airlines flights arriving in ASY Airport. <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, comparative #1 #1 equal/ASY Airport col:airports/AirportName, aggregate count #2", "alternatives": "select tbl:flights, comparative #1 #1less//ASY Airport col:airports/AirportName, aggregate count #2"}
{"input": "How many architects are female? <tbl> architect bridge mill </tbl> <col> id name nationality gender architect_id id name location length_meters length_feet architect_id id location name type built_year notes </col>", "prediction": "select tbl:architect, comparative #1 #1 equal/F col:architect/gender, aggregate count #2", "alternatives": "select tbl:architect, comparative #1 #1less//F col:architect/gender, aggregate count #2"}
{"input": "List singer names and number of concerts for each singer. <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select col:concert, project col:song/Song_Name #1, project tbl:song_in_concert #1, group #3 #1, union #2 #4", "alternatives": "select col:concert, project col:song/Song_Name #1, group #3 #1, project tbl:song_in_concert #1, union #2 #4"}
{"input": "What is the abbreviation of the airline has the fewest flights and what country is it in? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:airlines, project tbl:flights #1, group #2 #1, superlative min #1 #3, project col:airlines/Airline #4, project col:airlines/Country #4, union #5 #6", "alternatives": "select tbl:airlines, project tbl:flights #1, group #2 #1, superlative min #1 #3, project col:airlines/Abbreviation #4, project col:airlines/Country #4, union #5 #6"}
{"input": "What are the airline names and abbreviations for airlines in the USA? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:airlines, comparative #1 #1 equal/USA col:airlines/Country, project col:airlines/Airline #2, project col:airlines/Abbreviation #2, union #3 #4", "alternatives": "select tbl:airlines, project col:airlines/Abbreviation #2, project col:airlines/Airline #2, comparative #1 #1lessequal//USA col:airlines/Country, union #3 #4"}
{"input": "What are the names and release years for all the songs of the youngest singer? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:song, project col:song/Is_male #1, superlative min #1 #2, project col:song/Song_Name #3, project col:song/Song_release_year #3, union #4 #5", "alternatives": "select tbl:singer, project col:singer/Age #1, superlative min #1 #2, project col:singer/Song_Name #3, project col:singer/Song_Name #4, project col:singer/Song_release_year #4, union #5 #6"}
{"input": "Return the document id, template id, and description for the document with the name Robbin CV. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, project col:Documents/Document_Name #1, comparative #1 #2 equal/Robbin CV, project col:Documents/Document_ID #3, project col:Documents/Template_ID #3, project col:Documents/Document_Description #3, union #4 #5 #6", "alternatives": "select tbl:Documents, project col:Documents/Document_Name #1, comparative #1 #2great//Robbin CV, project col:Documents/Document_Description #3, project col:Documents/Template_ID #3, project col:Documents/Document_ID #3, union #4 #5 #6"}
{"input": "Show all template type codes and descriptions. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Ref_Template_Types, project col:Ref_Template_Types/Temple_Type_Code #1, project col:Ref_Template_Types/Temple_Type_Description #1, union #2 #3", "alternatives": "select tbl:Ref_Template_Types, project col:Ref_Template_Types/Template_Type_Code #1, project col:Ref_Template_Types/Template_Type_Description #1, union #2 #3"}
{"input": "What is the document id with least number of paragraphs? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Documents, project tbl:Paragraphs #1, group #2 #1, superlative min #1 #3", "alternatives": "select col:Paragraphs, project tbl:Paragraphs #1, group #2 #1, superlative min #1 #3"}
{"input": "Show all book categories and the number of books in each category. <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select col:book, project tbl:book_club #1, group #2 #1, union #1 #3", "alternatives": "select col:book, project tbl:book_club #1, group #2 #1, union #1 #3"}
{"input": "Show ids for all templates that are used by more than one document. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Templates, project tbl:Documents #1, group #2 #1, comparative #1 #3 great/1, project col:Documents/Template_ID #4", "alternatives": "select col:Templates, project tbl:Documents #1, group #2 #1, comparative #1 #3 great/1, project col:Templates/Template_ID #4"}
{"input": "What are the name and results of the battles when the bulgarian commander is not 'Boril' <tbl> battle ship death </tbl> <col> id name date bulgarian_commander latin_commander result lost_in_battle id name tonnage ship_type location disposition_of_ship caused_by_ship_id id note killed injured </col>", "prediction": "select tbl:battle, project tbl:bulgarian_commander #1, comparative #1 #2 notequal/Boril, project col:battle/name #3, project col:battle/result #3, union #4 #5", "alternatives": "select tbl:battle, project tbl:bulkarian_commander #1, comparative #1 #2 notequal/Boril, project col:battle/name #3, project col:battle/result #3, union #4 #5"}
{"input": "Return the document id, template id, and description for the document with the name Robbin CV. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, project col:Documents/Document_Name #1, comparative #1 #2 equal/Robbin CV, project col:Documents/Document_ID #3, project col:Documents/Template_ID #3, project col:Documents/Document_Description #3, union #4 #5 #6", "alternatives": "select tbl:Documents, project col:Documents/Document_Name #1, comparative #1 #2 equal/Robbin CV, project col:Documents/Document_Description #3, project col:Documents/Template_ID #3, project col:Documents/Document_ID #3, union #4 #5 #6"}
{"input": "Find the number of employees hired in each shop; show the shop name as well. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select col:shop, project tbl:hiring #1, group #2 #1, project col:shop/Name #1, union #3 #4", "alternatives": "select col:shop, project tbl:hiring #1, union #3 #4, project col:shop/Name #1, group #2 #1"}
{"input": "List the name of teachers whose hometown is not `` Little Lever Urban District ''. <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select tbl:teacher, project col:teacher/Hometown #1, comparative #1 #2 notequal/Little Lever Urban District, project col:teacher/Name #3", "alternatives": "select tbl:teacher, project col:teacher/Hometown #1, comparative #1 #2 notequal/Lever Urban District, project col:teacher/Name #3"}
{"input": "What is the document id, template id and description for document named \"Robbin CV\"? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, comparative #1 #1 equal/Robbin CV col:Documents/Document_Name, project col:Documents/Document_ID #2, project col:Documents/Template_ID #3, project col:Documents/Document_Description #3, union #4 #5 #6", "alternatives": "select tbl:Documents, comparative #1 #1 equal/Robbin CV col:Documents/Document_Name, project col:Documents/Document_ID #2, project col:Documents/Template_ID #2, project col:Documents/Document_Description #2, union #3 #4 #5"}
{"input": "Show all template type codes and descriptions. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Ref_Template_Types, project col:Ref_Template_Types/Temple_Type_Code #1, project col:Ref_Template_Types/Temple_Type_Description #1, union #2 #3", "alternatives": "select col:Ref_Template_Types, project col:Ref_Template_Types/Templature_Type_Code #1, project col:Ref_Template_Types/Templature_Type_Description #1, union #2 #3"}
{"input": "Return the names and template ids for documents that contain the letter w in their description. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, project col:Documents/Document_Description #1, comparative #1 #2 like%w%, project col:Documents/Document_Name #3, project col:Documents/Document_ID #3, union #4 #5", "alternatives": "select tbl:Documents, comparative #1 #1 like%w% col:Documents/Document_Description, project col:Documents/Document_Name #2, project col:Documents/Document_ID #2, union #3 #4"}
{"input": "Which of the mill names contains the french word 'Moulin'? <tbl> architect bridge mill </tbl> <col> id name nationality gender architect_id id name location length_meters length_feet architect_id id location name type built_year notes </col>", "prediction": "select tbl:mill, project col:mill/name #1, comparative #2 #2 like%Moulin% col:mill/name", "alternatives": "select col:mill, comparative #1 #1 like%Moulin% col:mill/name"}
{"input": "How many pets are owned by students that have an age greater than 20? <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Student, project col:Student/Age #1, comparative #1 #2 great/20, project tbl:Has_Pets #3, aggregate count #4", "alternatives": "select tbl:Student, project tbl:Has_Pets #3, comparative #1 #2 greatequal/20, project col:Student/Age #1, aggregate count #4"}
{"input": "Find the name and membership level of the visitors whose membership level is higher than 4, and sort by their age from old to young. <tbl> museum visitor visit </tbl> <col> Museum_ID Name Num_of_Staff Open_Year ID Name Level_of_membership Age Museum_ID visitor_ID Num_of_Ticket Total_spent </col>", "prediction": "select tbl:visit, project col:visit/Level_of_membership #1, comparative #1 #2 great/4, project col:visit/Name #3, project col:visit/Level_of_membership #3, project col:visit/Age #3, union #4 #5, sort #6 #5 descending", "alternatives": "select tbl:visit, project col:visit/Level_of_membership #1, comparative #1 #2 less/4, project col:visit/Name #3, project col:visit/Level_of_membership #3, sort #6 #5 descending, union #4 #5, project col:visit/Age #3"}
{"input": "Show all document ids and the number of paragraphs in each document. Order by document id. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Documents, project col:Documents/Document_ID #1, project tbl:Paragraphs #1, group #3 #1, union #2 #4, sort #5 #4", "alternatives": "select col:Documents, project col:Documents/Document_ID #1, group #3 #1, project tbl:Paragraphs #1, union #2 #4, sort #5 #4"}
{"input": "What are the ids of documents that have 2 or more paragraphs? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, project tbl:Paragraphs #1, group #2 #1, comparative #1 #3 greatequal/2, project col:Documents/Document_ID #4", "alternatives": "select tbl:Documents, project tbl:Paragraphs #1, group #2 #1, comparative #1 #3 great/2, project col:Documents/Document_ID #4"}
{"input": "For each product, show its name and the number of times it was ordered. <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select col:Products, project col:Products/product_name #1, project tbl:Order_Items #1, group #3 #1, union #2 #4", "alternatives": "select col:Products, project col:Products/product_name #1, project tbl:Orders #1, group #3 #1, union #2 #4"}
{"input": "How many dog pets are raised by female students? <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Student, comparative #1 #1 equal/F col:Student/Sex, project tbl:Has_Pets #2, aggregate count #3", "alternatives": "select tbl:Student, comparative #1 #1less//F col:Student/Sex, project tbl:Has_Pets #2, aggregate count #3"}
{"input": "What is the average, minimum, and maximum age of all singers from France? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:song, comparative #1 #1 equal/France col:song/Country, project col:song/Age #2, aggregate avg #3, aggregate min #3, aggregate max #3, union #4 #5 #6", "alternatives": "select tbl:song, comparative #1 #1 equal/France col:song/Country, project col:song/Age #2, aggregate avg #3, aggregate min #3, aggregate max #3, union #4 #5 #7"}
{"input": "Find the name of the employee who got the highest one time bonus. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select tbl:employee, project col:employee/Bonus #1, superlative max #1 #2, project col:employee/Name #3", "alternatives": "select tbl:employee, project col:employee/Bonus #1, superlative max #1 #2, project col:employee/name #3"}
{"input": "Which abbreviation corresponds to Jetblue Airways? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select val:airlines, project col:airlines/Abbreviation #1", "alternatives": "select col:airlines, comparative #1 #1 equal/Jetblue Airways col:airlines/Airline"}
{"input": "Count the number of book clubs. <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select tbl:book_club, aggregate count #1", "alternatives": "select tbl:book_club, aggregate count #1"}
{"input": "What are the notes of the death events which has substring 'East'? <tbl> battle ship death </tbl> <col> id name date bulgarian_commander latin_commander result lost_in_battle id name tonnage ship_type location disposition_of_ship caused_by_ship_id id note killed injured </col>", "prediction": "select tbl:death, project col:death/name #1, comparative #1 #2 like%East%, project col:death/note #3", "alternatives": "select tbl:death, project col:death/name #1, comparative #1 #2 like%East%, project col:death/note #3"}
{"input": "What is the average, maximum, and minimum budget for all movies before 2000. <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select tbl:film, comparative #1 #1 less/2000 col:film/Year, project col:film/Budget_million #2, aggregate avg #3, aggregate max #3, aggregate min #3, union #4 #5 #6", "alternatives": "select tbl:film, aggregate max #3, project col:film/Budget_million #2, aggregate avg #3, comparative #1 #1 less/2000 col:film/Year, aggregate min #3, union #4 #5 #6"}
{"input": "What are the names, countries, and ages for every singer in descending order of age? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:song, project col:song/Song_Name #1, project col:song/Country #1, project col:song/Age #1, union #2 #3 #4, sort #6 #5 descending", "alternatives": "select tbl:song, sort #6 #5 descending, project col:song/Country #1, project col:song/Age #1, union #2 #3 #4, project col:song/Song_Name #1"}
{"input": "What are flight numbers of flights departing from Airport \"APG\"? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, comparative #1 #1 equal/APG col:airports/AirportName, project tbl:flights #2, project col:flights/FlightNo #3", "alternatives": "select tbl:flights, project col:flights/SourceAirport #1, comparative #1 #2 equal/APG, project col:flights/FlightNo #3"}
{"input": "Which customers have both \"On Road\" and \"Shipped\" as order status? List the customer ids. <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Customers, project tbl:Orders #1, comparative #1 #2 equal/On Road, comparative #1 #2 equal/Shipped, intersection #1 #3 #4, project col:Customers/customer_id #5", "alternatives": "select tbl:Customers, project tbl:Orders #1, project col:Orders/order_status #2, comparative #1 #3 equal/On Road, comparative #1 #3 equal/Shipped, intersection #1 #4 #5, project col:Customers/customer_id #6"}
{"input": "What is the best rank of losers across all matches? <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:matches, project col:matches/loser_rank #1, group #2 #1, superlative max #1 #3", "alternatives": "select tbl:matches, project col:matches/loser_rank #1, project col:matches/loser_rank #2, aggregate min #3"}
{"input": "Show the name and the release year of the song by the youngest singer. <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:song, project col:song/Age #1, superlative min #1 #2, project col:song/Song_Name #3, project col:song/Song_release_year #3, union #4 #5", "alternatives": "select col:singer, project tbl:singer #1, project col:singer/Age #2, superlative min #1 #3, project col:singer/Song_Name #4, project col:singer/Song_release_year #4, union #5 #6"}
{"input": "What is the id and type code for the template used by the most documents? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Templates, project tbl:Documents #1, group #2 #1, superlative max #1 #3, project col:Documents/Template_ID #4, project col:Documents/Template_Type_Code #4, union #5 #6", "alternatives": "select col:Templates, project tbl:Documents #1, group #2 #1, superlative max #1 #3, project col:Documents/Template_ID #4, project col:Documents/Template_Type_Code #4, union #5 #6."}
{"input": "What is the first name and gender of the all the students who have more than one pet? <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Student, project tbl:Has_Pets #1, group #2 #1, comparative #1 #3 great/1, project col:Student/Fname #4, project col:Student/Sex #4, union #5 #6", "alternatives": "select tbl:Student, project tbl:Has_Pet #1, group #2 #1, comparative #1 #3 great/1, project col:Student/Fname #4, project col:Student/Sex #4, union #5 #6"}
{"input": "How many airlines do we have? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:airlines, aggregate count #1", "alternatives": "select col:airlines, aggregate count #1"}
{"input": "On what day was the order with invoice number 10 placed? <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Orders, project tbl:Invoices #1, comparative #1 #2 equal/10, project col:Orders/date_order_placed #3", "alternatives": "select tbl:Orders, project col:Shipments/invoice_number #1, comparative #1 #2 equal/10, project col:Orders/date_order_placed #3"}
{"input": "What is the name and capacity for the stadium with highest average attendance? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:stadium, project col:stadium/Average #1, superlative max #1 #2, project col:stadium/Name #3, project col:stadium/Capacity #3, union #4 #5", "alternatives": "select tbl:stadium, project col:stadium/Average #1, superlative max #1 #2, union #4 #5, project col:stadium/Capacity #3, project col:stadium/Name #3"}
{"input": "Show the years, book titles, and publishers for all books, in descending order by year. <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select tbl:book, project col:book/Year #1, project col:book/Book_Title #1, project col:book/Publisher #1, union #2 #3 #4, sort #6 #5 descending", "alternatives": "select tbl:book, project col:book/Year #1, project col:book/Book_Title #1, project col:book/Publisher #1, union #2 #3 #4, sort #5 #2 descending"}
{"input": "What are the ids of templates with template type code PP or PPT? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Templates, project tbl:Ref_Template_Types #1, comparative #1 #2 equal/PP, comparative #1 #2 equal/PPT, union #3 #4, project col:Ref_Template_Types/Template_Type_Code #5, project col:Ref_Template_Types/Template_ID #6", "alternatives": "select tbl:Templates, project tbl:Templates #1, comparative #1 #2 equal/PPT, comparative #1 #2 equal/PP, union #3 #4, project col:Templates/Template_ID #5"}
{"input": "Give me a list of distinct product ids from orders placed between 1975-01-01 and 1976-01-01? <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Order_Items, comparative #1 #1 great/1975-01-01 col:Orders/date_order_placed, comparative #2 #2 less/1976-01-01 col:Order_Items/date_order_placed, project col:Products/product_id #3", "alternatives": "select tbl:Orders, comparative #1 #1 lessequal/1976-01-01 col:Orders/date_order_placed, comparative #2 #2 greatequal/1975-01-01 col:Orders/date_order_placed"}
{"input": "What are the details for the paragraph that includes the text 'Korea'? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Paragraphs, project col:Paragraphs/Paragraph_Text #1, comparative #1 #2 like%Korea%, project col:Paragraphs/Paragraph_Details #3", "alternatives": "select tbl:Paragraphs, project col:Paragraphs/Paragraph_Text #1, comparative #1 #2 like%Korea%, project col:Paragraphs/Paragraph_Details #3"}
{"input": "How many flights does airline 'JetBlue Airways' have? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:airlines, project tbl:flights #1, comparative #2 #1 equal/JetBlue Airways, aggregate count #3", "alternatives": "select tbl:airlines, project tbl:flights #1, comparative #2 #1greatequal//JetBlue Airways, aggregate count #3"}
{"input": "What is the template type descriptions for template type code \"AD\". <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Ref_Template_Types, comparative #1 #1 equal/AD col:Ref_Template_Types/Template_Type_Code, project col:Ref_Template_Types/Template_Type_Type_Description #2", "alternatives": "select tbl:Ref_Template_Types, comparative #1 #1great//AD col:Ref_Template_Types/Template_Type_Code, project col:Ref_Template_Types/Template_Type_Type_Description #2"}
{"input": "What is the number of continents? <tbl> continents countries car_makers model_list car_names cars_data </tbl> <col> ContId Continent CountryId CountryName Continent Id Maker FullName Country ModelId Maker Model MakeId Model Make Id MPG Cylinders Edispl Horsepower Weight Accelerate Year </col>", "prediction": "select tbl:continents, aggregate count #1", "alternatives": "select and aggregate count #1"}
{"input": "Give the flight numbers of flights leaving from APG. <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, comparative #1 #1 equal/APG col:airports/AirportName, project tbl:flights #2, project col:flights/FlightNo #3", "alternatives": "select tbl:flights, comparative #1 #1 equal/APG col:airlines/AirportName, project tbl:flights #2, project col:flights/FlightNo #3"}
{"input": "Which airlines have at least 10 flights? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select col:airlines, project tbl:flights #1, group #2 #1, comparative #1 #3 greatequal/10", "alternatives": "select col:airlines, project tbl:flights #1, group #2 #1, comparative #1 #3 less/10"}
{"input": "What are the years, titles, and publishers for all books, ordered by year descending? <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select tbl:book, project col:book/Year #1, project col:book/Book_Title #1, project col:book/Publisher #1, union #2 #3 #4, sort #5 #2 descending", "alternatives": "select tbl:book, project col:book/Year #1, project col:book/Book_Title #1, project col:book/Publisher #1, sort #5 #2 descending, union #2 #3 #4"}
{"input": "How much does the youngest dog weigh? <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Pets, project col:Pets/weight #1, superlative min #1 #2, project col:Pets/weight #3", "alternatives": "select tbl:Pets, project col:Pets/weight #1, superlative min #1 #2, project col:Pets/weight #3"}
{"input": "What are the names of airports in Aberdeen? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:airports, comparative #1 #1 equal/Aberdeen col:airports/Country, project col:airports/AirportName #2", "alternatives": "select tbl:airports, comparative #1 #1 equal/Aberdeen col:airports/City, project col:airports/AirportName #2"}
{"input": "Find the cities that have more than one employee under age 30. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select col:employee, project tbl:employee #1, comparative #2 #2 less/30 col:employee/Age, group #3 #1, comparative #1 #4 great/1", "alternatives": "select col:employee, project tbl:employee #1, comparative #1 #4 great/1, group #3 #1, comparative #2 #2 less/30 col:employee/Age"}
{"input": "Return the publisher that has published the most books. <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select col:book, project tbl:book_club #1, group #2 #1, superlative max #1 #3", "alternatives": "select col:book, project tbl:book #1, group #2 #1, superlative max #1 #3"}
{"input": "Which airline has most number of flights? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select col:airlines, project tbl:flights #1, group #2 #1, superlative max #1 #3", "alternatives": "select col:airlines, project tbl:flights #1, group #2 #1, superlative max #1 #3"}
{"input": "What are the names and release years for all the songs of the youngest singer? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:song, project col:song/Is_male #1, superlative min #1 #2, project col:song/Song_Name #3, project col:song/Song_release_year #3, union #4 #5", "alternatives": "select tbl:song, project col:song/Is_male #1, superlative min #1 #2, project col:song/Song_release_year #3, project col:song/Song_Name #3, union #4 #5"}
{"input": "How many paragraphs for the document with name 'Summer Show'? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, project col:Documents/Document_Name #1, comparative #1 #2 equal/Summer Show, project col:Documents/Paragraph_Text #3, aggregate count #4", "alternatives": "select tbl:Documents, comparative #1 #1 equal/Summer Show col:Documents/Document_Name, project tbl:Paragraphs #2, aggregate count #3"}
{"input": "What are the names of the teachers who are aged either 32 or 33? <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select tbl:teacher, project col:teacher/Age #1, comparative #1 #2 equal/32, comparative #1 #2 equal/33, union #3 #4, project col:teacher/Name #5", "alternatives": "select tbl:teacher, project col:teacher/Age #1, comparative #1 #2 equal/33, comparative #1 #2 equal/32, union #3 #4, project col:teacher/Name #5"}
{"input": "For each product, show its name and the number of times it was ordered. <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select col:Products, project col:Products/product_name #1, project tbl:Order_Items #1, group #3 #1, union #2 #4", "alternatives": "select col:Products, project col:Products/product_name #1, union #2 #4, group #3 #1, project tbl:Order_Items #1"}
{"input": "What are the names of the stadiums without any concerts? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:stadium, comparative #1 #1 tbl:concert, discard #1 #2, project col:stadium/Name #3", "alternatives": "select tbl:stadium, comparative #1 #1 tbl:concert, discard #1 #2, project col:stadium/Name #3"}
{"input": "Find the name of the winner who has the highest rank points and participated in the Australian Open tourney. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:matches, comparative #1 #1 equal/Australian Open col:matches/turner_level, project col:matches/winner_rank_points #2, superlative max #2 #3, project col:matches/winner_name #4", "alternatives": "select col:matches, comparative #1 #1greatequal//Australian Open col:matches/turner_level, project col:matches/winner_name #4, superlative max #2 #3, project col:matches/winner_rank_points #2"}
{"input": "Find the average age of losers and winners of all matches. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:matches, project col:matches/loser_age #1, aggregate avg #2, comparative #1 #2 equal/#3, project col:matches/winner_name #4, union #3 #5", "alternatives": "select tbl:matches, project col:matches/winner_age #1, project col:matches/loser_age #1, project col:matches/loser_age #2, project col:matches/winner_age #3, union #4 #5, aggregate avg #6"}
{"input": "What are the distinct details of invoices created before 1989-09-03 or after 2007-12-25? <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Invoices, comparative #1 #1 less/1989-09-03 col:Invoices/invoice_date, comparative #1 #1 great/2007-12-25 col:Invoices/invoice_date, union #2 #3, project col:Invoices/invoice_details #4", "alternatives": "select tbl:Invoices, project col:Invoices/invoice_date #1, comparative #1 #2 less/1989-09-03, comparative #1 #2 great/2007-12-25, union #3 #4, project col:Invoices/invoice_details #5"}
{"input": "Find the first name and gender of student who have more than one pet. <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Student, project tbl:Has_Pets #1, group #2 #1, comparative #1 #3 great/1, project col:Student/Fname #4, project col:Student/Sex #4, union #5 #6", "alternatives": "select tbl:Student, project tbl:Has_Pet #1, group #2 #1, comparative #1 #3 great/1, project col:Student/Fname #4, project col:Student/Sex #4, union #5 #6"}
{"input": "What is the template type code for template type description \"Book\". <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Ref_Template_Types, comparative #1 #1 equal/Book col:Ref_Template_Types/Template_Type_Description, project col:Ref_Template_Type_Types/Template_Type_Type_Code #2", "alternatives": "select tbl:Ref_Template_Types, comparative #1 #1great//Book col:Ref_Template_Types/Template_Type_Description, project col:Ref_Template_Type_Types/Template_Type_Type_Code #2"}
{"input": "How many books fall into each category? <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select col:book, project tbl:book_club #1, group #2 #1, union #1 #3", "alternatives": "select col:book_club, project tbl:book_club #1, group #2 #1, union #1 #3"}
{"input": "What is the name of the customer who has the largest number of orders? <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Customers, project tbl:Orders #1, group #2 #1, superlative max #1 #3, project col:Customers/customer_name #4", "alternatives": "select tbl:Customers, project tbl:Orders #1, project col:Customers/customer_name #4, superlative max #1 #3, group #2 #1"}
{"input": "What is the title and director for the movie with highest worldwide gross in the year 2000 or before? <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select tbl:film, project col:film/Gross_worldwide #1, comparative #2 #2 lessequal/2000 col:film/Year, superlative max #1 #3, project col:film/Title #4, project col:film/Director #4, union #5 #6", "alternatives": "select tbl:film, project col:film/Gross_worldwide #1, comparative #2 #2 lessequal/2000 col:film/Year, group #3 #1, superlative max #1 #4, project col:film/Title #5, project col:film/Director #5, union #6 #7."}
{"input": "List the ids of all distinct orders ordered by placed date. <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select col:Orders, project none #1, project col:Orders/order_id #2", "alternatives": "select col:Orders, project tbl:Orders #1, project col:Orders/order_status #2, sort #3 #3"}
{"input": "What are the distinct name of the mills built by the architects who have also built a bridge longer than 80 meters? <tbl> architect bridge mill </tbl> <col> id name nationality gender architect_id id name location length_meters length_feet architect_id id location name type built_year notes </col>", "prediction": "select tbl:architecture, comparative #1 #1 great/80 col:bridge/length_meters, project tbl:mill #2, project col:mill/name #3", "alternatives": "select tbl:architecture, comparative #1 #1 lessequal/80 col:bridge/length_meters, project tbl:mill #2, project col:mill/name #3"}
{"input": "What is the abbreviation of the airline has the fewest flights and what country is it in? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:airlines, project tbl:flights #1, group #2 #1, superlative min #1 #3, project col:airlines/Airline #4, project col:airlines/Country #4, union #5 #6", "alternatives": "select tbl:airlines, project tbl:flights #1, group #2 #1, superlative min #1 #3, project col:airlines/Airline #4, project col:airlines/Country #4, union #6 #5"}
{"input": "Return the average, maximum, and minimum budgets in millions for movies made before the year 2000. <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select tbl:film, comparative #1 #1 less/2000 col:film/Year, project col:film/Budget_million #2, aggregate avg #3, aggregate max #3, aggregate min #3, union #4 #5 #6", "alternatives": "select tbl:film, project col:film/Year #1, comparative #1 #2 less/2000, project col:film/Budget_million #3, aggregate avg #4, aggregate max #4, aggregate min #4, union #5 #6 #8"}
{"input": "What are the names of the singers and number of concerts for each person? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select col:song, project col:song/Song_Name #1, project tbl:song_in_concert #1, group #3 #1, union #2 #4", "alternatives": "select col:song, union #2 #4, project tbl:song_in_concert #1, group #3 #1, project col:song/Song_Name #1"}
{"input": "Return the number of United Airlines flights leaving from AHD Airport. <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, comparative #1 #1 equal/AHD Airport col:airports/AirportName, aggregate count #2", "alternatives": "select tbl:flights, comparative #1 #1 equal/HD Airport col:airports/AirportName, aggregate count #2"}
{"input": "What are the notes of the death events which has substring 'East'? <tbl> battle ship death </tbl> <col> id name date bulgarian_commander latin_commander result lost_in_battle id name tonnage ship_type location disposition_of_ship caused_by_ship_id id note killed injured </col>", "prediction": "select tbl:death, project col:death/name #1, comparative #1 #2 like%East%, project col:death/note #3", "alternatives": "select tbl:death, comparative #1 #1 like%East% col:death/note, project col:death/note #2"}
{"input": "How many dog pets are raised by female students? <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Student, comparative #1 #1 equal/F col:Student/Sex, project tbl:Has_Pets #2, aggregate count #3", "alternatives": "select tbl:Student, comparative #1 #1 equal/F col:Student/Sex, project val:Pets/PetType/dog #2, group #3 #2, aggregate sum #4"}
{"input": "What are the type codes and descriptions for all template types? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Ref_Template_Types, project col:Ref_Template_Types/Template_Type_Type_Code #1, project col:Ref_Template_Types/Template_Type_Type_Description #1, union #2 #3", "alternatives": "select tbl:Ref_Template_Types, project col:Ref_Template_Types/Template_Type_Type_Code #1, project col:Ref_Template_Types/Template_Type_Type_Description #1, union #2 #3"}
{"input": "What is the ship id and name that caused most total injuries? <tbl> battle ship death </tbl> <col> id name date bulgarian_commander latin_commander result lost_in_battle id name tonnage ship_type location disposition_of_ship caused_by_ship_id id note killed injured </col>", "prediction": "select tbl:ship, project tbl:injury #1, group #2 #1, superlative max #1 #3, project col:ship/id #4, project col:ship/name #4, union #5 #6", "alternatives": "select col:ship, project tbl:injury #1, group #2 #1, superlative max #1 #3, project col:ship/id #4, project col:ship/name #4, union #5 #6"}
{"input": "Find the first name and age of students who have a pet. <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Student, comparative #1 #1 tbl:Has_Pets, project col:Student/Fname #2, project col:Student/Age #2, union #3 #4", "alternatives": "select tbl:Student, comparative #1 #1 tbl:Has_Pets, project col:Student/Fname #2, project col:Student/Age #2, union #3 #4."}
{"input": "Return the publisher that has published the most books. <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select col:book, project tbl:book_club #1, group #2 #1, superlative max #1 #3", "alternatives": "select col:book_club, project tbl:book_club #1, group #2 #1, superlative max #1 #3"}
{"input": "Find the id of the customer who made the most orders. <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select col:Customers, project tbl:Orders #1, group #2 #1, superlative max #1 #3, project col:Orders/customer_id #4", "alternatives": "select col:Customers, project col:Orders/customer_id #4, group #2 #1, superlative max #1 #3, project tbl:Orders #1"}
{"input": "What are the ids of the students who do not own cats as pets? <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Student, comparative #1 #1 equal/Kat col:Has_Pets/pet_type, discard #1 #2, project col:Student/StuID #3", "alternatives": "select tbl:Student, comparative #1 #1 equal/Cat col:Has_Pets/pet_type, discard #1 #2, project col:Student/StuID #3"}
{"input": "Show publishers with a book published in 1989 and a book in 1990. <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select col:book, project tbl:book #1, comparative #2 #2 equal/1989 col:book/Publisher, comparative #2 #2 equal/1990 col:book/Publisher, intersection #1 #3 #4", "alternatives": "select col:book_club, comparative #1 #1 equal/1990 col:book_club/Year, comparative #1 #1 equal/1989 col:book_club/Year, intersection #1 #2 #3"}
{"input": "Find the abbreviation and country of the airline that has fewest number of flights? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:airlines, project tbl:flights #1, group #2 #1, superlative min #1 #3, project col:airlines/Airline #4, project col:airlines/Country #4, union #5 #6", "alternatives": "select tbl:airlines, project tbl:flights #1, group #2 #1, superlative min #1 #3, project col:airlines/Airline #4, project col:airlines/Country #4, union #5 #6."}
{"input": "On which day was the order placed whose shipment tracking number is 3452? <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Orders, project tbl:Shipments #1, project col:Shipments/shipment_tracking_number #2, comparative #1 #3 equal/3452, project col:Orders/date_order_placed #4", "alternatives": "select tbl:Orders, project col:Shipments/shipment_tracking_number #2, project tbl:Shipments #1, comparative #1 #3 equal/3452, project col:Orders/date_order_placed #4"}
{"input": "What are the distinct types of mills that are built by American or Canadian architects? <tbl> architect bridge mill </tbl> <col> id name nationality gender architect_id id name location length_meters length_feet architect_id id location name type built_year notes </col>", "prediction": "select tbl:mill, project tbl:architecture #1, comparative #1 #2 equal/American, comparative #1 #2 equal/Canada, union #3 #4, project col:mill/type #5", "alternatives": "select tbl:mill, project tbl:architecture #1, comparative #1 #2 equal/Canada, comparative #1 #2 equal/American, union #3 #4, project col:mill/type #5"}
{"input": "Find the total ranking points for each player and their first name. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:players, project col:players/ranking_points #1, group #2 #1, project col:players/first_name #1, union #1 #3", "alternatives": "select col:players, project col:players/ranking_points #1, project col:players/first_name #1, group #2 #1, union #1 #3"}
{"input": "How many countries does each continent have? List the continent id, continent name and the number of countries. <tbl> continents countries car_makers model_list car_names cars_data </tbl> <col> ContId Continent CountryId CountryName Continent Id Maker FullName Country ModelId Maker Model MakeId Model Make Id MPG Cylinders Edispl Horsepower Weight Accelerate Year </col>", "prediction": "select col:continents, project tbl:countries #1, group #2 #1, project col:continents/Continent #1, project col:continents/Continent #1, union #4 #5 #3", "alternatives": "select col:continents, project tbl:countries #1, group #2 #1, project col:continents/Continent #1, union #4 #5 #3, project col:continents/Continent #1"}
{"input": "Find the dates of orders which belong to the customer named \"Jeramie\". <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Customers, comparative #1 #1 equal/Jeramie col:Customers/customer_name, project tbl:Orders #2, project col:Orders/date_order_placed #3", "alternatives": "select tbl:Customers, project col:Customers/customer_name #1, comparative #1 #2 equal/Jeramie, project tbl:Orders #3, project col:Orders/order_date #4"}
{"input": "Find the total number of players. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:players, aggregate count #1", "alternatives": "select tbl:players, aggregate count #2"}
{"input": "Find the first name of students who have cat or dog pet. <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Student, project tbl:Has_Pets #1, comparative #1 #2 equal/Cat, comparative #1 #2 equal/Dog, union #3 #4, project col:Student/Fname #5", "alternatives": "select tbl:Student, project tbl:Pets #1, comparative #1 #2 equal/dog, comparative #1 #2 equal/cat, union #3 #4, project col:Student/Fname #5"}
{"input": "What is the name and capacity for the stadium with highest average attendance? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:stadium, project col:stadium/Average #1, superlative max #1 #2, project col:stadium/Name #3, project col:stadium/Capacity #3, union #4 #5", "alternatives": "select tbl:stadium, project col:stadium/Average #1, superlative max #1 #2, union #4 #5, project col:stadium/Capacity #3, project col:stadium/Name #3"}
{"input": "What is the average age of the visitors whose membership level is not higher than 4? <tbl> museum visitor visit </tbl> <col> Museum_ID Name Num_of_Staff Open_Year ID Name Level_of_membership Age Museum_ID visitor_ID Num_of_Ticket Total_spent </col>", "prediction": "select tbl:visit, project col:visit/Level_of_membership #1, comparative #1 #2 notequal/4, project col:visit/Age #3, aggregate avg #4", "alternatives": "select tbl:visitor, project col:visitor/Level_of_membership #1, comparative #1 #2 lessequal/4, project col:visitor/Age #3, aggregate avg #4"}
{"input": "What are the ids of documents that contain the paragraph text 'Brazil' and 'Ireland'? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, project tbl:Paragraphs #1, comparative #1 #2 equal/Brazil, comparative #1 #2 equal/Ireland, intersection #1 #3 #4, project col:Documents/Document_ID #5", "alternatives": "select tbl:Documents, project tbl:Paragraphs #1, comparative #1 #2 equal/Ireland, comparative #1 #2 equal/Brazil, intersection #1 #3 #4, project col:Documents/Document_ID #5"}
{"input": "Show all paragraph ids and texts for the document with name 'Welcome to NY'. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, project col:Documents/Document_Name #1, comparative #1 #2 equal/Welcome to NY, project col:Paragraphs/Paragraph_ID #3, project col:Paragraphs/Paragraph_Text #3, union #4 #5", "alternatives": "select tbl:Documents, project col:Documents/Document_Name #1, comparative #1 #2 equal/Welcome to NY, project col:Paragraphs/Paragraph_ID #3, union #4 #5, project col:Paragraphs/Paragraph_Text #3"}
{"input": "What are the average and maximum number of tickets bought in all visits? <tbl> museum visitor visit </tbl> <col> Museum_ID Name Num_of_Staff Open_Year ID Name Level_of_membership Age Museum_ID visitor_ID Num_of_Ticket Total_spent </col>", "prediction": "select tbl:visit, project col:visit/Num_of_Ticket #1, aggregate col:visit/Num_of_Ticket #2, aggregate avg #3, aggregate max #3, union #4 #5", "alternatives": "select tbl:visit, aggregate col:visit/Num_of_Ticket #2, project col:visit/Num_of_Ticket #1, aggregate avg #3, aggregate max #3, union #4 #5"}
{"input": "Find the ids of orders which are shipped after 2000-01-01. <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Orders, comparative #1 #1 great/2000-01-01 col:Shipments/shipment_date, project col:Orders/order_id #2", "alternatives": "select tbl:Orders, comparative #1 #1 less/2000-01-01 col:Shipments/shipment_date, project col:Orders/order_id #2"}
{"input": "Find the average number of staff working for the museums that were open before 2009. <tbl> museum visitor visit </tbl> <col> Museum_ID Name Num_of_Staff Open_Year ID Name Level_of_membership Age Museum_ID visitor_ID Num_of_Ticket Total_spent </col>", "prediction": "select tbl:museum, comparative #1 #1 less/2009 col:museum/Open_Year, project col:museum/Num_of_Staff #2, group #3 #2, aggregate avg #4", "alternatives": "select tbl:museum, comparative #1 #1 less/2009 col:museum/Open_Year, project col:museum/Num_of_Staff #2, aggregate avg #4, group #3 #2"}
{"input": "Show all document ids, names and the number of paragraphs in each document. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Documents, project col:Documents/Document_ID #1, project col:Documents/Document_Name #1, project tbl:Paragraphs #1, group #4 #1, union #2 #3 #5", "alternatives": "select col:Documents, union #2 #3 #5, project col:Documents/Document_Name #1, project tbl:Paragraphs #1, group #4 #1, project col:Documents/Document_ID #1"}
{"input": "Find the number of dog pets that are raised by female students (with sex F). <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Student, project col:Student/Sex #1, comparative #1 #2 equal/F, project tbl:Has_Pets #3, aggregate count #4", "alternatives": "select col:Has_Pets, project tbl:Has_Pets #1, project col:Has_Pets/Sex #2, comparative #1 #3 equal/F, aggregate max #4"}
{"input": "Count the number of documents that use the PPT template type. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, project tbl:Ref_Template_Types #1, comparative #1 #2 equal/PPT, aggregate count #3", "alternatives": "select tbl:Documents, project tbl:Ref_Template_Types #1, comparative #1 #2lessequal//PPT, aggregate count #3"}
{"input": "Find the first name of students who have both cat and dog pets. <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Student, project tbl:Has_Pets #1, comparative #1 #2 equal/Cat, comparative #1 #2 equal/Dog, intersection #1 #3 #4, project col:Student/Fname #5", "alternatives": "select tbl:Student, project tbl:Has_Pets #1, comparative #1 #2 equal/Cat, comparative #1 #2 equal/Canine, intersection #1 #3 #4, project col:Student/Fname #5"}
{"input": "What are airlines that have flights arriving at airport 'AHD'? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select col:airlines, project tbl:flights #1, comparative #1 #2 equal/AHD, project col:airlines/Airline #3", "alternatives": "select col:airlines, project tbl:flights #1, comparative #1 #2greatequal//AHD, project col:airlines/Airline #3"}
{"input": "List all singer names in concerts in year 2014. <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:song, project col:song/Year #1, comparative #1 #2 equal/2014, project tbl:song #3, project col:song/Song_Name #4", "alternatives": "select tbl:song, project col:song/Year #1, project tbl:song #3, comparative #1 #2 equal/2014, project col:song/Song_Name #4"}
{"input": "What are the different template type codes, and how many documents use each type? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Ref_Template_Types, project tbl:Ref_Template_Types #1, group #2 #1, union #1 #3", "alternatives": "select col:Templates, project tbl:Documents #2, group #3 #2, union #2 #4"}
{"input": "Find the names of the visitors whose membership level is higher than 4, and order the results by the level from high to low. <tbl> museum visitor visit </tbl> <col> Museum_ID Name Num_of_Staff Open_Year ID Name Level_of_membership Age Museum_ID visitor_ID Num_of_Ticket Total_spent </col>", "prediction": "select tbl:visit, project col:visit/Level_of_membership #1, comparative #1 #2 great/4, project col:visit/Name #3, project col:visit/Level_of_membership #3, sort #4 #5 ascending", "alternatives": "select tbl:visitor, project col:visitor/Level_of_membership #1, comparative #1 #2 great/4, project col:visitor/Name #3, project col:visitor/Level_of_membership #3, sort #4 #5 descending"}
{"input": "What is the first name and country code of the player with the most tours? <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:players, project col:matches/turns #1, group #2 #1, superlative max #1 #3, project col:players/first_name #4, project col:players/country_code #4, union #5 #6", "alternatives": "select tbl:players, project col:players/tournaments #1, group #2 #1, superlative max #1 #3, project col:players/first_name #4, project col:players/country_code #4, union #5 #6"}
{"input": "What is the number of continents? <tbl> continents countries car_makers model_list car_names cars_data </tbl> <col> ContId Continent CountryId CountryName Continent Id Maker FullName Country ModelId Maker Model MakeId Model Make Id MPG Cylinders Edispl Horsepower Weight Accelerate Year </col>", "prediction": "select tbl:continents, aggregate count #1", "alternatives": "select tbl:continents, aggregate count #1"}
{"input": "What are all the song names by singers who are older than average? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:song, project col:song/Age #1, aggregate avg #2, comparative #1 #2 great/#3, project col:song/Song_Name #4", "alternatives": "select tbl:song, project col:song/Age #1, aggregate avg #2, comparative #1 #2 less/#3, project col:song/Song_Name #4"}
{"input": "Count the number of paragraphs in the document named 'Summer Show'. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, comparative #1 #1 equal/Summer Show col:Documents/Document_Name, project tbl:Paragraphs #2, aggregate count #3", "alternatives": "select tbl:Documents, comparative #1 #1less//Summer Show col:Documents/Document_Name, project tbl:Paragraphs #2, aggregate count #3"}
{"input": "How many teachers are there? <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select tbl:teacher, aggregate count #1", "alternatives": "select tbl:lehrer, aggregate count #1"}
{"input": "What are all the different book publishers? <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select tbl:book_club", "alternatives": "select col:book_club"}
{"input": "On which day was the order placed whose shipment tracking number is 3452? <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Orders, project tbl:Shipments #1, project col:Shipments/shipment_tracking_number #2, comparative #1 #3 equal/3452, project col:Orders/date_order_placed #4", "alternatives": "select tbl:Orders, project tbl:Shipments #1, project col:Shipments/shipment_tracking_number #2, comparative #1 #3 equal/3452, project col:Orders/date_order_placed #4."}
{"input": "find the name of employee who was awarded the most times in the evaluation. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select tbl:evaluation, project col:evaluation/Year_awarded #1, group #2 #1, superlative max #1 #3, project col:employee/Name #4", "alternatives": "select tbl:evaluation, project col:evaluation/Year_awarded #1, project col:employee/Name #4, superlative max #1 #3, group #2 #1"}
{"input": "Which country does Airline \"JetBlue Airways\" belong to? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select val:airlines, project col:airlines/Country #1", "alternatives": "select col:airlines, project tbl:airlines #1, comparative #2 #1 equal/JetBlue Airways"}
{"input": "List the number of all matches who played in years of 2013 or 2016. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:matches, project col:matches/year #1, comparative #1 #2 equal/2013, comparative #1 #2 equal/2016, union #3 #4, aggregate count #5", "alternatives": "select tbl:matches, comparative #1 #1 equal/2013 col:matches/year, comparative #1 #1 equal/2016 col:matches/year, union #2 #3, aggregate count #4"}
{"input": "What are all the company names that have a book published by Alyson? <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select col:book_club, project tbl:book_club #1, comparative #1 #2 equal/Alyson, project col:company/Company_name #3", "alternatives": "select tbl:book_club, comparative #1 #1 equal/Alyson col:book_club/Publisher, project col:company/Company_name #2."}
{"input": "Sort employee names by their age in ascending order. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select col:employee, project col:employee/Name #1, project col:employee/Age #1, sort #2 #3 ascending", "alternatives": "select tbl:employee, project col:employee/Name #1, project col:employee/Age #1, sort #2 #3 ascending"}
{"input": "Show location and name for all stadiums with a capacity between 5000 and 10000. <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:stadium, project col:stadium/Capacity #1, comparative #1 #2 lessequal/10000, comparative #1 #2 greatequal/5000, intersection #1 #3 #4, project col:stadium/Location #5, project col:stadium/Name #5, union #6 #7", "alternatives": "select tbl:stadium, project col:stadium/Capacity #1, comparative #1 #2 greatequal/10000, comparative #3 #2 lessequal/5000, project col:stadium/Location #4, project col:stadium/Name #4, union #5 #6"}
{"input": "What are the distinct details of invoices created before 1989-09-03 or after 2007-12-25? <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Invoices, comparative #1 #1 less/1989-09-03 col:Invoices/invoice_date, comparative #1 #1 great/2007-12-25 col:Invoices/invoice_date, union #2 #3, project col:Invoices/invoice_details #4", "alternatives": "select tbl:Invoices, comparative #1 #1 less/1989-09-03 col:Invoices/invoice_date, comparative #1 #1 great/2007-12-25 col:Invoices/invoice_date, union #2 #3"}
{"input": "List the first and last name of all players in the order of birth date. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:players, project col:players/first_name #1, project col:players/last_name #1, project col:players/birth_date #1, union #2 #3, sort #5 #4", "alternatives": "select tbl:players, project col:players/first_name #1, project col:players/last_name #1, project col:players/born_date #1, union #2 #3, sort #5 #4"}
{"input": "What is the total ticket expense of the visitors whose membership level is 1? <tbl> museum visitor visit </tbl> <col> Museum_ID Name Num_of_Staff Open_Year ID Name Level_of_membership Age Museum_ID visitor_ID Num_of_Ticket Total_spent </col>", "prediction": "select tbl:visit, project col:visit/Level_of_membership #1, comparative #1 #2 equal/1, project col:visit/Total_spent #3, aggregate sum #4", "alternatives": "select tbl:visitor, comparative #1 #1 equal/1 col:visitor/Level_of_membership, project col:visit/Total_spent #2, aggregate sum #3"}
{"input": "What are the names, countries, and ages for every singer in descending order of age? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:song, project col:song/Song_Name #1, project col:song/Country #1, project col:song/Age #1, union #2 #3 #4, sort #6 #5 descending", "alternatives": "select tbl:singer, project col:singer/Name #1, project col:singer/Country #1, project col:singer/Age #1, union #2 #3 #4, sort #5 #4 descending"}
{"input": "What are the number of concerts that occurred in the stadium with the largest capacity? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:stadium, project col:stadium/Capacity #1, superlative max #1 #2, project tbl:concert #3, aggregate count #4", "alternatives": "select tbl:stadium, aggregate count #4, superlative max #1 #2, project tbl:concert #3, project col:stadium/Capacity #1"}
{"input": "Return the type code of the template type with the description \"Book\". <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Ref_Template_Types, project col:Ref_Template_Types/Template_Type_Description #1, comparative #1 #2 equal/Book, project col:Ref_Template_Type_Types/Template_Type_Type_Code #3", "alternatives": "select tbl:Ref_Template_Types, project col:Ref_Template_Types/Template_Type_Description #1, comparative #1 #2 equal/Book, project col:Ref_Template_Types/Template_Type_Code #3"}
{"input": "What are ids of the all distinct orders, sorted by placement date? <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Orders, project col:Orders/order_id #1, project col:Orders/date_order_placed #1, sort #2 #3", "alternatives": "select tbl:Orders, project col:Orders/order_id #1, project col:Orders/date_order_placed #1, sort #2 #3"}
{"input": "Find number of pets owned by students who are older than 20. <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Student, comparative #1 #1 great/20 col:Student/Age, project tbl:Has_Pets #2, aggregate count #3", "alternatives": "select tbl:Student, comparative #1 #1 less/20 col:Student/Age, project tbl:Has_Pets #2, aggregate count #3"}
{"input": "What are the id and name of the museum visited most times? <tbl> museum visitor visit </tbl> <col> Museum_ID Name Num_of_Staff Open_Year ID Name Level_of_membership Age Museum_ID visitor_ID Num_of_Ticket Total_spent </col>", "prediction": "select tbl:museum, project tbl:visit #1, group #2 #1, superlative max #1 #3, project col:visit/Museum_ID #4, project col:museum/Name #4, union #5 #6", "alternatives": "select tbl:museum, project tbl:visit #1, group #2 #1, superlative max #1 #3, project col:museum/Museum_ID #4, project col:museum/Name #4, union #5 #6"}
{"input": "List all airline names and their abbreviations in \"USA\". <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:airlines, comparative #1 #1 equal/USA col:airlines/CountryName, project col:airlines/Airline #2, project col:airlines/Abbreviation #2, union #3 #4", "alternatives": "select tbl:airlines, comparative #1 #1 equal/USA col:airlines/Country, project col:airlines/Airline #2, project col:airlines/Abbreviation #2, union #3 #4"}
{"input": "Find the name and age of the visitor who bought the most tickets at once. <tbl> museum visitor visit </tbl> <col> Museum_ID Name Num_of_Staff Open_Year ID Name Level_of_membership Age Museum_ID visitor_ID Num_of_Ticket Total_spent </col>", "prediction": "select tbl:visit, project tbl:visit #1, group #2 #1, superlative max #1 #3, project col:visit/Name #4, project col:visit/Age #4, union #5 #6", "alternatives": "select tbl:visit, project col:visit/Age #4, group #2 #1, superlative max #1 #3, project col:visit/Name #4, project tbl:visit #1, union #5 #6"}
{"input": "Which airline has abbreviation 'UAL'? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select col:airlines, project col:airlines/Airline #1, comparative #1 #2 like%UAL%", "alternatives": "select col:airlines, project col:airlines/Abbreviation #1, comparative #1 #2 equal/UAL"}
{"input": "Count the number of distinct store locations. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select col:shop, comparative #1 #1 none, aggregate count #2", "alternatives": "select col:shop, aggregate count #1"}
{"input": "How many different winners both participated in the WTA Championships and were left handed? <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:matches, comparative #1 #1 equal/WTA Championship col:matches/winner_entry, comparative #1 #1 equal/left col:matches/winner_hand, intersection #1 #2 #3, aggregate count #5", "alternatives": "select col:matches, comparative #1 #1 equal/left col:matches/winner_hand, comparative #1 #1 equal/WTA Championship col:matches/winner_entry, intersection #1 #2 #3, aggregate count #5"}
{"input": "How many continents are there? <tbl> continents countries car_makers model_list car_names cars_data </tbl> <col> ContId Continent CountryId CountryName Continent Id Maker FullName Country ModelId Maker Model MakeId Model Make Id MPG Cylinders Edispl Horsepower Weight Accelerate Year </col>", "prediction": "select tbl:continents, aggregate count #1", "alternatives": "select col:continents, aggregate count #1"}
{"input": "Return the number of flights arriving in Aberdeen. <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, comparative #1 #1 equal/Aberdeen col:airports/AirportName, aggregate count #2", "alternatives": "select tbl:flights, comparative #1 #1great//Aberdeen col:airports/AirportName, aggregate count #2"}
{"input": "Show the name of teachers aged either 32 or 33? <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select tbl:teacher, project col:teacher/Age #1, comparative #1 #2 equal/32, comparative #1 #2 equal/33, union #3 #4, project col:teacher/Name #5", "alternatives": "select tbl:teacher, project col:teacher/Age #1, comparative #1 #2 equal/33, comparative #1 #2 equal/32, union #3 #4, project col:teacher/Name #5"}
{"input": "Find the id and weight of all pets whose age is older than 1. <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Pets, project col:Pets/pet_age #1, comparative #1 #2 great/1, project col:Pets/PetID #3, project col:Pets/weight #3, union #4 #5", "alternatives": "select tbl:Pets, union #4 #5, comparative #1 #2 great/1, project col:Pets/PetID #3, project col:Pets/weight #3, project col:Pets/pet_age #1"}
{"input": "What is the name of the shop that is hiring the largest number of employees? <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select tbl:shop, project tbl:hiring #1, group #2 #1, superlative max #1 #3, project col:shop/Name #4", "alternatives": "select tbl:shop, project tbl:hire #1, group #2 #1, superlative max #1 #3, project col:shop/Name #4"}
{"input": "Return the number of  airports. <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:airports, aggregate count #1", "alternatives": "select the tbl:airports, aggregate count #1"}
{"input": "What is the number of employees from each city? <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select col:employee, project tbl:employee #1, group #2 #1, union #1 #3", "alternatives": "select col:employee, project tbl:employee #1, group #2 #1, union #1 #3"}
{"input": "What are airport names at City 'Aberdeen'? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:airports, comparative #1 #1 equal/Aberdeen col:airports/City, project col:airports/AirportName #2", "alternatives": "select val:airports, project col:airports/AirportName #1"}
{"input": "Return the number of flights departing from Aberdeen. <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, comparative #1 #1 equal/Aberdeen col:airports/AirportName, aggregate count #2", "alternatives": "select tbl:flights, comparative #1 #1 equal/Aberdeen col:airports/City, aggregate count #2"}
{"input": "What are the first names of every student who has a cat or dog as a pet? <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Student, project tbl:Has_Pets #1, comparative #1 #2 equal/Cat, comparative #1 #2 equal/Dog, union #3 #4, project col:Student/Fname #5", "alternatives": "select tbl:Student, project tbl:Pets #1, comparative #1 #2 equal/cat, comparative #1 #2 equal/dog, union #3 #4, project col:Student/Fname #5"}
{"input": "List all song names by singers above the average age. <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:song, project col:song/Age #1, aggregate avg #2, comparative #1 #2 great/#3, project col:song/Song_Name #4", "alternatives": "select tbl:singer, project col:song/Age #1, aggregate avg #2, comparative #1 #2 great/#3, project col:song/Song_Name #4"}
{"input": "Give me the names of customers who have placed orders between 2009-01-01 and 2010-01-01. <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Customers, project tbl:Orders #1, comparative #1 #2 greatequal/2009-01-01, comparative #3 #2 lessequal/2010-01-01 col:Orders/date_order_placed, project col:Customers/customer_name #4", "alternatives": "select tbl:Customers, project tbl:Orders #1, comparative #3 #2 lessequal/2010-01-01 col:Orders/date_order_placed, comparative #1 #2 greatequal/2009-01-01, project col:Customers/customer_name #4"}
{"input": "List the names of teachers in ascending order of age. <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select tbl:teacher, project col:teacher/Name #1, project col:teacher/Age #1, sort #2 #3 ascending", "alternatives": "select the tbl:teacher, project col:teacher/Name #1, project col:teacher/Age #1, sort #2 #3 ascending"}
{"input": "What is the id of the pet owned by the student whose last name is 'Smith'? <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Student, project col:Student/LName #1, comparative #1 #2 equal/Smith, project tbl:Has_Pets #3, project col:Has_Pets/PetID #4", "alternatives": "select tbl:Student, comparative #1 #2 equal/Smith, project col:Student/LName #1, project tbl:Has_Pets #3, project col:Has_Pets/PetID #4"}
{"input": "Return the version numbers and template type codes of templates with a version number greater than 5. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Templates, project col:Templates/Version_Number #1, comparative #1 #2 great/5, project col:Templates/Version_Number #3, project col:Templates/Template_Type_Code #3, union #4 #5", "alternatives": "select tbl:Templates, project col:Templates/Visit_Number #1, comparative #1 #2 great/5, project col:Templates/Version_Number #3, project col:Templates/Template_Type_Code #3, union #4 #5"}
{"input": "What is the document id with least number of paragraphs? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Documents, project tbl:Paragraphs #1, group #2 #1, superlative min #1 #3", "alternatives": "select col:Paragraphs, project tbl:Documents #1, group #2 #1, superlative min #1 #3"}
{"input": "What is the location of the bridge named 'Kolob Arch' or 'Rainbow Bridge'? <tbl> architect bridge mill </tbl> <col> id name nationality gender architect_id id name location length_meters length_feet architect_id id location name type built_year notes </col>", "prediction": "select tbl:bridge, comparative #1 #1 equal/Kolob Arch col:bridge/name, comparative #1 #1 equal/Rainbow Bridge col:bridge/name, union #2 #3, project col:bridge/location #4", "alternatives": "select tbl:bridge, comparative #1 #1 equal/Kolob Arch col:bridging/name, comparative #1 #1 equal/Rainbow Bridge col:bridge/name, union #2 #3, project col:bridge/location #4"}
{"input": "What is the name and country of origin of every singer who has a song with the word 'Hey' in its title? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:song, project col:song/Song_Name #1, comparative #1 #2 like%Hey%, project col:song/Song_Name #3, project col:song/Country #3, union #4 #5", "alternatives": "select col:singer, project col:singer/Song_Name #1, comparative #1 #2 like%Hey%, project tbl:singer #3, project col:singer/Name #4, project col:singer/Country #4, union #5 #6"}
{"input": "How many different templates do all document use? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, project col:Documents/Template_Type_Code #1, aggregate count #3", "alternatives": "select tbl:Documents, project col:Documents/Template_Type_Code #1, aggregate count #3"}
{"input": "What are the names of the singers and number of concerts for each person? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select col:song, project col:song/Song_Name #1, project tbl:song_in_concert #1, group #3 #1, union #2 #4", "alternatives": "select col:concert, project col:song/Name #1, project tbl:song_in_concert #1, group #3 #1, union #2 #4"}
{"input": "List the name and tonnage ordered by in descending alphabetical order for the names. <tbl> battle ship death </tbl> <col> id name date bulgarian_commander latin_commander result lost_in_battle id name tonnage ship_type location disposition_of_ship caused_by_ship_id id note killed injured </col>", "prediction": "select tbl:ship, project col:ship/name #1, project col:ship/tonnage #1, union #2 #3, sort #4 #2 descending", "alternatives": "select tbl:ship, project col:ship/name #1, project col:ship/tone #1, union #2 #3, sort #4 #2 descending"}
{"input": "What are the different first names and ages of the students who do have pets? <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Student, comparative #1 #1 tbl:Has_Pets, project col:Student/Age #2, union #3 #4", "alternatives": "select tbl:Student, comparative #1 #1 tbl:Has_Pet, project col:Student/Age #2, union #3 #4"}
{"input": "What are the titles, years, and directors of all movies, ordered by budget in millions? <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select tbl:film, project col:film/Title #1, project col:film/Year #1, project col:film/Director #1, project col:film/Budget_million #1, union #2 #3 #4, sort #6 #5", "alternatives": "select tbl:movie, project col:movie/Title #1, project col:movie/Year #1, project col:movie/Director #1, project col:movie/Budget_million #1, union #2 #3 #4, sort #6 #5 ascending"}
{"input": "Show all countries and the number of singers in each country. <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select col:song, project tbl:song #1, group #2 #1, union #1 #3", "alternatives": "select col:singer, project tbl:singer #1, group #2 #1, union #1 #3"}
{"input": "Find the year that has the most number of matches. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:matches, project tbl:matches #1, group #2 #1, superlative max #1 #3", "alternatives": "select col:matches, project tbl:matches #1, group #2 #1, superlative max #1 #3"}
{"input": "What categories have two or more corresponding books that were made after 1989? <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select col:book, project tbl:book_club #1, comparative #2 #2 great/1989 col:book_club/Year, group #3 #1, comparative #1 #4 greatequal/2", "alternatives": "select col:book_club, project tbl:book_club #1, comparative #2 #2 great/1989 col:book_club/Year, group #3 #1, comparative #1 #4 greatequal/2"}
{"input": "What are the ids, version numbers, and type codes for each template? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Templates, project col:Templates/Template_ID #1, project col:Templates/Version_Number #1, project col:Templates/Template_Type_Code #1, union #2 #3 #4", "alternatives": "select tbl:Templates, project col:Templates/Template_ID #1, project col:Templates/Version_Number #1, project col:Templates/Template_Type_Code #1, union #2 #3 #4 #5"}
{"input": "Find the name and membership level of the visitors whose membership level is higher than 4, and sort by their age from old to young. <tbl> museum visitor visit </tbl> <col> Museum_ID Name Num_of_Staff Open_Year ID Name Level_of_membership Age Museum_ID visitor_ID Num_of_Ticket Total_spent </col>", "prediction": "select tbl:visit, project col:visit/Level_of_membership #1, comparative #1 #2 great/4, project col:visit/Name #3, project col:visit/Level_of_membership #3, project col:visit/Age #3, union #4 #5, sort #6 #5 descending", "alternatives": "select tbl:visitors, project col:visitors/Level_of_membership #1, comparative #1 #2 great/4, project col:visitors/Name #3, project col:visitors/Level_of_membership #3, project col:visitors/Age #3, union #4 #5, sort #6 #5 ascending"}
{"input": "How many singers are from each country? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select col:song, project tbl:song #1, group #2 #1, union #1 #3", "alternatives": "select col:song, project tbl:song #1, group #2 #1, union #1 #3"}
{"input": "What are all different template ids used for documents, and how many times were each of them used? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Documents, project tbl:Documents #1, group #2 #1, union #1 #3", "alternatives": "select col:Documents, project tbl:Documents #1, group #2 #1, union #1 #3"}
{"input": "What is the name and capacity for the stadium with the highest average attendance? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:stadium, project col:stadium/Average #1, group #2 #1, superlative max #1 #3, project col:stadium/Name #4, project col:stadium/Capacity #4, union #5 #6", "alternatives": "select tbl:stadium, project none #1, group #2 #1, superlative max #1 #3, project col:stadium/Name #4, project col:stadium/Capacity #4, union #5 #6"}
{"input": "What are the names of the mills which are not located in 'Donceel'? <tbl> architect bridge mill </tbl> <col> id name nationality gender architect_id id name location length_meters length_feet architect_id id location name type built_year notes </col>", "prediction": "select tbl:mill, comparative #1 #1 equal/Donceel col:mill/location, project col:mill/name #2", "alternatives": "select tbl:mill, comparative #1 #1great//Donceel col:mill/location, project col:mill/name #2"}
{"input": "Find the first name, country code and birth date of the winner who has the highest rank points in all matches. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:matches, project col:matches/winner_rank_points #1, group #2 #1, superlative max #1 #3, project col:matches/first_name #4, project col:matches/country_code #4, project col:matches/birth_date #4, union #5 #6 #7", "alternatives": "select col:matches, project tbl:matches #1, project col:matches/winner_rank_points #2, superlative max #1 #3, project col:players/first_name #4, project col:players/country_code #4, project col:players/country_code #5, project col:players/birth_date #4, union #5 #7 #8"}
{"input": "Find all airlines that have at least 10 flights. <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select col:airlines, project tbl:flights #1, group #2 #1, comparative #1 #3 greatequal/10", "alternatives": "select col:airlines, project tbl:flights #1, group #2 #1, comparative #1 #3 great/10"}
{"input": "What are the distinct details of invoices created before 1989-09-03 or after 2007-12-25? <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Invoices, comparative #1 #1 less/1989-09-03 col:Invoices/invoice_date, comparative #1 #1 great/2007-12-25 col:Invoices/invoice_date, union #2 #3, project col:Invoices/invoice_details #4", "alternatives": "select tbl:Invoices, comparative #1 #1 great/2007-12-25 col:Invoices/invoice_date, comparative #1 #1 less/1989-09-03 col:Invoices/invoice_date, union #2 #3, project col:Invoices/invoice_details #4"}
{"input": "What are the ids and names of the architects who built at least 3 bridges ? <tbl> architect bridge mill </tbl> <col> id name nationality gender architect_id id name location length_meters length_feet architect_id id location name type built_year notes </col>", "prediction": "select tbl:architecture, project tbl:bridge #1, group #2 #1, comparative #1 #3 greatequal/3, project col:architecture/id #4, project col:architecture/name #4, union #5 #6", "alternatives": "select tbl:architect, project tbl:bridge #1, group #2 #1, comparative #1 #3 greatequal/3, project col:architect/id #4, project col:architect/name #4, union #5 #6"}
{"input": "How many 'United Airlines' flights go to Airport 'ASY'? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, comparative #1 #1 equal/ASY col:airports/AirportName, aggregate count #2", "alternatives": "select tbl:flights, comparative #1 #1less//ASY col:airports/AirportName, aggregate count #2"}
{"input": "Show the name and the release year of the song by the youngest singer. <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:song, project col:song/Age #1, superlative min #1 #2, project col:song/Song_Name #3, project col:song/Song_release_year #3, union #4 #5", "alternatives": "select tbl:song, project col:song/Age #1, superlative min #1 #2, project col:song/Song_Name #3, union #4 #5, project col:song/Song_release_year #3"}
{"input": "What is the name of the visitor who visited both a museum opened before 2009 and a museum opened after 2011? <tbl> museum visitor visit </tbl> <col> Museum_ID Name Num_of_Staff Open_Year ID Name Level_of_membership Age Museum_ID visitor_ID Num_of_Ticket Total_spent </col>", "prediction": "select tbl:visit, comparative #1 #1 great/2011 col:visit/Open_Year, comparative #1 #1 less/2009 col:visit/Open_Year, project tbl:visit #2, project col:visit/Name #3, project col:visit/Name #5", "alternatives": "select tbl:museum, comparative #1 #1 great/2011 col:museum/Open_Year, comparative #1 #1 less/2009 col:visit/Open_Year, project tbl:visit #2, project col:visit/Name #3, project col:visit/Name #5"}
{"input": "How many airports do we have? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:airports, aggregate count #1", "alternatives": "select tbl:airports, aggregate counts #1"}
{"input": "What is the name and country of origin of every singer who has a song with the word 'Hey' in its title? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:song, project col:song/Song_Name #1, comparative #1 #2 like%Hey%, project col:song/Song_Name #3, project col:song/Country #3, union #4 #5", "alternatives": "select tbl:song, project col:song/Song_Name #1, comparative #1 #2 like%Hey%, union #4 #5, project col:song/Country #3, project col:song/Song_Name #3"}
{"input": "Show location and name for all stadiums with a capacity between 5000 and 10000. <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:stadium, project col:stadium/Capacity #1, comparative #1 #2 lessequal/10000, comparative #1 #2 greatequal/5000, intersection #1 #3 #4, project col:stadium/Location #5, project col:stadium/Name #5, union #6 #7", "alternatives": "select tbl:stadium, project col:stadium/Capacity #1, comparative #1 #2 greatequal/5000, comparative #1 #2 lessequal/10000, intersection #1 #3 #4, project col:stadium/Location #5, project col:stadium/Name #5, union #6 #7"}
{"input": "Return the ids of templates that have the code PP or PPT. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Templates, project col:Templates/Template_Type_Code #1, comparative #1 #2 equal/PP, comparative #1 #2 equal/PPT, union #3 #4, project col:Templates/Template_ID #5", "alternatives": "select tbl:Templates, project col:Templates/Template_Type_Code #1, comparative #1 #2 equal/PPT, comparative #1 #2 equal/PP, union #3 #4, project col:Templates/Template_ID #5"}
{"input": "What are the first names of all players, and their total ranking points? <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:players, project col:players/first_name #1, project col:players/ranking_points #1, group #3 #1, union #2 #4", "alternatives": "select tbl:players, union #2 #4, project col:players/ranking_points #1, group #3 #1, project col:players/first_name #1"}
{"input": "How many flights depart from City Aberdeen? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, comparative #1 #1 equal/City Aberdeen col:airports/AirportName, aggregate count #2", "alternatives": "select tbl:flights, comparative #1 #1lessequal//City Aberdeen col:airports/AirportName, aggregate count #2"}
{"input": "What is the id and weight of every pet who is older than 1? <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Pets, comparative #1 #1 great/1 col:Pets/Age, project col:Pets/PetID #2, project col:Pets/weight #2, union #3 #4", "alternatives": "select tbl:Pets, comparative #1 #1 great/1 col:Pets/Age, project col:Pets/PetID #2, project col:Pets/weight #2, union #3 #4 #5"}
{"input": "List all document ids with at least two paragraphs. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Documents, project tbl:Paragraphs #1, group #2 #1, comparative #1 #3 greatequal/2", "alternatives": "select col:Paragraphs, project tbl:Paragraphs #1, group #2 #1, comparative #1 #3 greatequal/2, project col:Paragraphs/Document_ID #4"}
{"input": "List the ids of all distinct orders ordered by placed date. <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select col:Orders, project none #1, project col:Orders/order_id #2", "alternatives": "select tbl:Orders, project none #1, project col:Orders/order_id #2, project col:Orders/date_order_placed #2, sort #3 #4"}
{"input": "What are the ids of documents that have 2 or more paragraphs? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, project tbl:Paragraphs #1, group #2 #1, comparative #1 #3 greatequal/2, project col:Documents/Document_ID #4", "alternatives": "select tbl:Documents, project col:Documents/Document_ID #4, group #2 #1, comparative #1 #3 greatequal/2, project tbl:Paragraphs #1"}
{"input": "Give the airport code and airport name corresonding to the city Anthony. <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:airports, project col:airports/AirportCode #1, project col:airports/AirportName #1, union #2 #3, comparative #4 #1 equal/Anthony, union #2 #5", "alternatives": "select tbl:airports, project col:airports/AirportCode #1, project col:airports/AirportName #1, union #2 #3, comparative #4 #1 equal/Anthony, intersection #2 #5"}
{"input": "What are the ids of documents that contain the paragraph text 'Brazil' and 'Ireland'? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, project tbl:Paragraphs #1, comparative #1 #2 equal/Brazil, comparative #1 #2 equal/Ireland, intersection #1 #3 #4, project col:Documents/Document_ID #5", "alternatives": "select col:Paragraphs, comparative #1 #1 equal/Brazil col:Paragraphs/Paragraph_Text, comparative #1 #1 equal/Ireland col:Paragraphs/Paragraph_Text, intersection #1 #2 #3, project col:Paragraphs/Document_ID #4"}
{"input": "What are the titles, years, and directors of all movies, ordered by budget in millions? <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select tbl:film, project col:film/Title #1, project col:film/Year #1, project col:film/Director #1, project col:film/Budget_million #1, union #2 #3 #4, sort #6 #5", "alternatives": "select tbl:movie, project col:movie/Title #1, project col:film/Year #1, project col:film/Director #1, project col:film/Budget_million #1, union #2 #3 #4, sort #6 #5"}
{"input": "How many templates do we have? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Templates, aggregate count #1", "alternatives": "select tbl:Templates, aggregate count #1"}
{"input": "What is the document id with 1 to 2 paragraphs? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Documents, project tbl:Paragraphs #1, group #2 #1, comparative #1 #3 equal/1, comparative #1 #3 equal/2, intersection #1 #4 #5", "alternatives": "select col:Paragraphs, project tbl:Paragraphs #1, group #2 #1, comparative #1 #3 greatequal/1, comparative #1 #3 lessequal/2, project col:Paragraphs/Document_ID #1, intersection #6 #4 #5"}
{"input": "How many paragraphs for the document with name 'Summer Show'? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, project col:Documents/Document_Name #1, comparative #1 #2 equal/Summer Show, project col:Documents/Paragraph_Text #3, aggregate count #4", "alternatives": "select tbl:Documents, project col:Documents/Document_Name #1, comparative #1 #2 equal/Summer Show, project col:Paragraphs/Paragraph_Count #3"}
{"input": "What is the year that had the most concerts? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select col:concert, project tbl:concert #1, group #2 #1, superlative max #1 #3", "alternatives": "select col:contest, project tbl:concert #1, group #2 #1, superlative max #1 #3"}
{"input": "What are the death and injury situations caused by the ship with tonnage 't'? <tbl> battle ship death </tbl> <col> id name date bulgarian_commander latin_commander result lost_in_battle id name tonnage ship_type location disposition_of_ship caused_by_ship_id id note killed injured </col>", "prediction": "select tbl:ship, project col:ship/tonnage #1, comparative #1 #2 equal/t, project col:during/death #3, project col:injury/injury #3, union #4 #5", "alternatives": "select tbl:ship, project col:ship/tonnage #1, comparative #1 #2 equal/t, project col:death/catastrophe #3, project col:injury/injury #3, union #4 #5"}
{"input": "find the number of players for each country. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:matches, project tbl:players #1, group #2 #1, union #1 #3", "alternatives": "select tbl:players, project col:players/country_code #1, group #1 #2, union #2 #3"}
{"input": "What type of pet is the youngest animal, and how much does it weigh? <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Pets, project col:Pets/PetType #1, superlative min #1 #2, project col:Pets/weight #3, union #3 #4", "alternatives": "select tbl:Pets, superlative min #1 #2, project col:Pets/PetType #1, project col:Pets/weight #3, union #3 #4"}
{"input": "How many paragraphs in total? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Paragraphs, aggregate count #1", "alternatives": "select tbl:Paradise, aggregate count #1"}
{"input": "Show template ids, version numbers, and template type codes for all templates. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Templates, project col:Templates/Template_ID #1, project col:Templates/Version_Number #1, project col:Templates/Template_Type_Code #1, union #2 #3 #4", "alternatives": "select tbl:Templates, project col:Templates/Template_ID #1, union #2 #3 #4, project col:Templates/Template_Type_Code #1, project col:Templates/Version_Number #1"}
{"input": "What are the names of the teachers and the courses they teach in ascending alphabetical order by the name of the teacher? <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select tbl:teacher, project col:teacher/Name #1, project col:course/Name #1, union #2 #3, sort #4 #2 ascending", "alternatives": "select tbl:teacher, project col:teacher/Name #1, project col:course_arrange/Name #1, union #2 #3, sort #4 #2 ascending"}
{"input": "Which shops' number products is above the average? Give me the shop names. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select tbl:shop, project col:shop/Number_products #1, aggregate avg #2, comparative #1 #2 great/#3, project col:shop/Name #4", "alternatives": "select tbl:shop, project col:shop/Number_products #1, project col:shop/Name #4, comparative #1 #2 greatequal/#3, aggregate avg #2"}
{"input": "Find the id and name of the museum that has the most staff members? <tbl> museum visitor visit </tbl> <col> Museum_ID Name Num_of_Staff Open_Year ID Name Level_of_membership Age Museum_ID visitor_ID Num_of_Ticket Total_spent </col>", "prediction": "select tbl:museum, project col:museum/Num_of_Staff #1, group #2 #1, superlative max #1 #3, project col:museum/Museum_ID #4, project col:museum/Name #4, union #5 #6", "alternatives": "select tbl:museum, project col:museum/Num_of_Staff #1, group #2 #1, superlative max #1 #3, project col:museum/Name #4, project col:museum/Museum_ID #4, union #6 #5"}
{"input": "What are the names of the teachers ordered by ascending age? <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select tbl:teacher, project col:teacher/Name #1, project col:teacher/Age #1, sort #2 #3 ascending", "alternatives": "select tbl:teacher, project col:teacher/Name #1, project col:teacher/Age #1, sort #2 #3 ascending"}
{"input": "List the name and date the battle that has lost the ship named 'Lettice' and the ship named 'HMS Atalanta' <tbl> battle ship death </tbl> <col> id name date bulgarian_commander latin_commander result lost_in_battle id name tonnage ship_type location disposition_of_ship caused_by_ship_id id note killed injured </col>", "prediction": "select tbl:ship, comparative #1 #1 equal/Lettice col:ship/name, comparative #1 #1 equal/HMS Atalanta col:ship/name, project tbl:battle #2, project col:battle/name #3, project col:battle/date #3, union #4 #5", "alternatives": "select tbl:ship, comparative #1 #1 equal/HMS Atalanta col:ship/name, comparative #1 #1 equal/Lettice col:ship/name, project tbl:battle #2, project col:battle/name #3, project col:battle/date #3, union #4 #5"}
{"input": "Count the number of matches. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:matched, aggregate count #1", "alternatives": "select tbl:matches, aggregate count #1"}
{"input": "For each continent, list its id, name, and how many countries it has? <tbl> continents countries car_makers model_list car_names cars_data </tbl> <col> ContId Continent CountryId CountryName Continent Id Maker FullName Country ModelId Maker Model MakeId Model Make Id MPG Cylinders Edispl Horsepower Weight Accelerate Year </col>", "prediction": "select col:continents, project col:continents/Continent #1, project col:continents/Continent #1, project col:continents/CountryName #1, union #2 #3 #4", "alternatives": "select col:continents, union #2 #3 #4, project col:continents/Continent #1, project col:continents/CountryName #1, project col:continents/Continent #1"}
{"input": "What are the ids and names of the battles that led to more than 10 people killed in total. <tbl> battle ship death </tbl> <col> id name date bulgarian_commander latin_commander result lost_in_battle id name tonnage ship_type location disposition_of_ship caused_by_ship_id id note killed injured </col>", "prediction": "select tbl:battle, project tbl:death #1, group #2 #1, comparative #1 #3 great/10, project col:battle/id #4, project col:battle/name #4, union #5 #6", "alternatives": "select tbl:battle, project tbl:death #1, group #2 #1, project col:battle/name #4, project col:battle/id #4, comparative #1 #3 greatequal/10, union #5 #6"}
{"input": "Find the name of the shops that do not hire any employee. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select tbl:shop, comparative #1 #1 tbl:hiring, discard #1 #2, project col:shop/Name #3", "alternatives": "select tbl:shop, comparative #1 #1 tbl:hiring, discard #1 #2, project col:shop/Name #3"}
{"input": "Which employee received the most awards in evaluations? Give me the employee name. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select tbl:employee, project tbl:evaluation #1, group #2 #1, superlative max #1 #3, project col:employee/Name #4", "alternatives": "select tbl:employee, project tbl:evaluation #1, group #2 #1, superlative max #1 #3, project col:employee/Name #4."}
{"input": "What is the total number of singers? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:song, aggregate count #1", "alternatives": "select tbl:singer, aggregate count #1"}
{"input": "List document IDs, document names, and document descriptions for all documents. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, project col:Documents/Document_ID #1, project col:Documents/Document_Name #1, project col:Documents/Document_Description #1, union #2 #3 #4", "alternatives": "select tbl:Documents, project col:Documents/Document_ID #1, project col:Documents/Document_Name #1, union #2 #3 #4, project col:Documents/Document_Description #1"}
{"input": "List the ids of all distinct orders ordered by placed date. <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select col:Orders, project none #1, project col:Orders/order_id #2", "alternatives": "select col:Orders, project none #1, project col:Orders/order_id #2"}
{"input": "What is the most commmon hometowns for teachers? <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select col:teacher, project tbl:teacher #1, group #2 #1, superlative max #1 #3", "alternatives": "select col:teacher, project none #1, group #2 #1, superlative max #1 #3"}
{"input": "List the names of teachers who have not been arranged to teach courses. <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select tbl:teacher, comparative #1 #1 tbl:course_arrangement, discard #1 #2, project col:teacher/Name #3", "alternatives": "select tbl:teacher, comparative #1 #1 tbl:course_arrange, discard #1 #2, project col:teacher/Name #3"}
{"input": "How many ships ended up being 'Captured'? <tbl> battle ship death </tbl> <col> id name date bulgarian_commander latin_commander result lost_in_battle id name tonnage ship_type location disposition_of_ship caused_by_ship_id id note killed injured </col>", "prediction": "select tbl:ship, comparative #1 #1 equal/Captured col:ship/result, aggregate count #2", "alternatives": "select tbl:ship, comparative #1 #1 equal/Captured col:ship/disposition_of_ship, aggregate count #2"}
{"input": "What are the manager name and district of the shop that sells the largest number of products? <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select tbl:shop, project col:shop/Number_products #1, group #2 #1, superlative max #1 #3, project col:shop/Manager_name #4, project col:shop/District #4, union #5 #6", "alternatives": "select tbl:shop, project col:shop/Number_products #1, group #2 #1, project col:shop/Manager_name #4, superlative max #1 #3, project col:shop/District #4, union #5 #6"}
{"input": "What are the names of the teachers who are aged either 32 or 33? <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select tbl:teacher, project col:teacher/Age #1, comparative #1 #2 equal/32, comparative #1 #2 equal/33, union #3 #4, project col:teacher/Name #5", "alternatives": "select the tbl:teacher, project col:teacher/Age #1, comparative #1 #2 equal/32, comparative #1 #2 equal/33, union #3 #4, project col:teacher/Name #5"}
{"input": "Find the number of pets whose weight is heavier than 10. <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Pets, project col:Pets/weight #1, comparative #1 #2 great/10, aggregate count #3", "alternatives": "select tbl:Pets, project col:Pets/weight #1, comparative #1 #2  equal10, aggregate count #3"}
{"input": "Return the different descriptions for templates that have been used in a document. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Templates, comparative #1 #1 tbl:Documents, project col:Ref_Template_Types/Template_Type_Description #2", "alternatives": "select tbl:Templates, comparative #1 #1 tbl:Documents, project col:Ref_Template_Types/Template_Type_Description #2"}
{"input": "For each shop, return the number of employees working there and the name of the shop. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select col:shop, project tbl:employee #1, group #2 #1, project col:shop/Name #1, union #3 #4", "alternatives": "select tbl:shop, project col:shop/Employee_ID #1, group #2 #1, project col:shop/Name #1, union #3 #4"}
{"input": "When was the order placed whose shipment tracking number is 3452? Give me the date. <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Orders, project tbl:Shipments #1, project col:Shipments/shipment_tracking_number #2, comparative #1 #3 equal/3452, project col:Orders/date_order_placed #4", "alternatives": "select tbl:Orders, project tbl:Shipments #1, comparative #1 #2 equal/3452, project col:Orders/date_order_placed #3"}
{"input": "Give me the names of customers who have placed orders between 2009-01-01 and 2010-01-01. <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Customers, project tbl:Orders #1, comparative #1 #2 greatequal/2009-01-01, comparative #3 #2 lessequal/2010-01-01 col:Orders/date_order_placed, project col:Customers/customer_name #4", "alternatives": "select tbl:Orders, comparative #1 #1 lessequal/2010-01-01 col:Orders/date_order_placed, comparative #2 #2 greatequal/2009-01-01 col:Orders/date_order_placed, project tbl:Customers #3, project col:Customers/customer_name #4"}
{"input": "How many 'United Airlines' flights go to Airport 'ASY'? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, comparative #1 #1 equal/ASY col:airports/AirportName, aggregate count #2", "alternatives": "select val:airports, project tbl:flights #1, aggregate count #2"}
{"input": "Return the version numbers and template type codes of templates with a version number greater than 5. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Templates, project col:Templates/Version_Number #1, comparative #1 #2 great/5, project col:Templates/Version_Number #3, project col:Templates/Template_Type_Code #3, union #4 #5", "alternatives": "select tbl:Templates, project col:Templates/Version_Number #1, project col:Templates/Version_Number #3, comparative #1 #2 lessequal/5, project col:Templates/Template_Type_Code #3, union #4 #5"}
{"input": "What are the distinct names and nationalities of the architects who have ever built a mill? <tbl> architect bridge mill </tbl> <col> id name nationality gender architect_id id name location length_meters length_feet architect_id id location name type built_year notes </col>", "prediction": "select tbl:architect, comparative #1 #1 tbl:mill, project col:architect/name #2, project col:architect/nationality #2, union #3 #4", "alternatives": "select tbl:architect, comparative #1 #1 tbl:mill, project col:architect/nationality #2, union #3 #4"}
{"input": "List the first name and birth date of all players from the country with code USA. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:players, project col:players/country_code #1, comparative #1 #2 equal/USA, project col:players/first_name #3, project col:players/birth_date #3, union #4 #5", "alternatives": "select tbl:players, comparative #1 #1 equal/USA col:country/country_code, project col:players/first_name #2, project col:players/birth_date #2, union #3 #4"}
{"input": "What is the document name and template id for document with description with the letter 'w' in it? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, project col:Documents/Document_Description #1, comparative #1 #2 like%w%, project col:Documents/Document_Name #3, project col:Documents/Document_ID #3, union #4 #5", "alternatives": "select tbl:Documents, project col:Documents/Document_Description #1, comparative #1 #2 like%w%, project col:Documents/Document_Name #3, project col:Documents/Template_ID #3, union #4 #5"}
{"input": "Find the last name of the student who has a cat that is age 3. <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Student, project tbl:Has_Pets #1, project col:Has_Pets/pet_age #2, comparative #1 #3 equal/3, project col:Student/LName #4", "alternatives": "select tbl:Student, project val:Pets/PetType/cat #1, project col:Pets/pet_age #2, comparative #1 #3 equal/3, project col:Student/LName #4"}
{"input": "What are the name and results of the battles when the bulgarian commander is not 'Boril' <tbl> battle ship death </tbl> <col> id name date bulgarian_commander latin_commander result lost_in_battle id name tonnage ship_type location disposition_of_ship caused_by_ship_id id note killed injured </col>", "prediction": "select tbl:battle, project tbl:bulgarian_commander #1, comparative #1 #2 notequal/Boril, project col:battle/name #3, project col:battle/result #3, union #4 #5", "alternatives": "select tbl:battle, project col:battle/bulgarian_commander #1, comparative #1 #2 notequal/Boril, project col:battle/name #3, project col:battle/result #3, union #4 #5"}
{"input": "What is the year that had the most concerts? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select col:concert, project tbl:concert #1, group #2 #1, superlative max #1 #3", "alternatives": "select tbl:concert, project col:concert/Year #1, group #1 #2, superlative max #2 #3"}
{"input": "Find the number of employees hired in each shop; show the shop name as well. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select col:shop, project tbl:hiring #1, group #2 #1, project col:shop/Name #1, union #3 #4", "alternatives": "select col:shop, project tbl:hiring #1, union #3 #4, project col:shop/Name #1, group #2 #1"}
{"input": "Which customers made orders between 2009-01-01 and 2010-01-01? Find their names. <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Customers, project tbl:Orders #1, comparative #1 #2 greatequal/2009-01-01, comparative #3 #2 lessequal/2010-01-01 col:Orders/date_order_placed, project col:Customers/customer_name #4", "alternatives": "select tbl:Customers, project tbl:Orders #1, comparative #3 #2 lessequal/2010-01-01 col:Orders/date_order_placed, comparative #1 #2 greatequal/2009-01-01, project col:Customers/customer_name #4"}
{"input": "Which airlines have a flight with source airport AHD? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select col:flights, project tbl:flights #1, project col:flights/SourceAirport #2, comparative #1 #3 equal/AHD", "alternatives": "select col:flights, project tbl:flights #1, project col:flights/SourceAirport #2, comparative #1 #3lessequal//AHD"}
{"input": "Give the code of the airport with the least flights. <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:airports, project tbl:flights #1, group #2 #1, superlative min #1 #3, project col:airports/AirportCode #4", "alternatives": "select tbl:airports, project tbl:flights #1, group #2 #1, superlative min #1 #3, project col:airports/AirportCode #4"}
{"input": "List the name and tonnage ordered by in descending alphabetical order for the names. <tbl> battle ship death </tbl> <col> id name date bulgarian_commander latin_commander result lost_in_battle id name tonnage ship_type location disposition_of_ship caused_by_ship_id id note killed injured </col>", "prediction": "select tbl:ship, project col:ship/name #1, project col:ship/tonnage #1, union #2 #3, sort #4 #2 descending", "alternatives": "select tbl:ship, project col:ship/name #1, project col:ship/tonnage #1, sort #4 #2 descending, union #2 #3"}
{"input": "Return the id and name of the document with the most paragraphs. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, project tbl:Paragraphs #1, group #2 #1, superlative max #1 #3, project col:Documents/Document_ID #4, project col:Documents/Document_Name #4, union #5 #6", "alternatives": "select tbl:Documents, project tbl:Paragraphs #1, group #2 #1, superlative max #1 #3, project col:Paragraphs/Document_ID #4, project col:Documents/Document_Name #4, union #5 #6"}
{"input": "Find the names of stores whose number products is more than the average number of products. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select tbl:shop, project col:shop/Number_products #1, group #2 #1, aggregate avg #3, comparative #1 #3 great/#4, project col:shop/Name #5", "alternatives": "select tbl:shop, aggregate avg #3, group #2 #1, project col:shop/Number_products #1, comparative #1 #3 great/#4, project col:shop/Name #5"}
{"input": "Find the total number of players. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:players, aggregate count #1", "alternatives": "select tbl:players, aggregate count #1"}
{"input": "Show names of teachers and the courses they are arranged to teach. <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select tbl:teacher, project col:teacher/Name #1, project col:course_arrange/Courses #1, union #2 #3", "alternatives": "select tbl:teacher, project col:teacher/Name #1, project col:course_arrange/Courses #1, union #2 #3"}
{"input": "What is the code of the country with the most players? <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:players, project tbl:players #1, group #2 #1, superlative max #1 #3, project col:players/country_code #4", "alternatives": "select col:players, superlative max #1 #3, group #2 #1, project tbl:players #1, project col:players/country_code #4"}
{"input": "How many singers do we have? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:song, aggregate count #1", "alternatives": "select tbl:song, aggregate count #1"}
{"input": "How many countries does each continent have? List the continent id, continent name and the number of countries. <tbl> continents countries car_makers model_list car_names cars_data </tbl> <col> ContId Continent CountryId CountryName Continent Id Maker FullName Country ModelId Maker Model MakeId Model Make Id MPG Cylinders Edispl Horsepower Weight Accelerate Year </col>", "prediction": "select col:continents, project tbl:countries #1, group #2 #1, project col:continents/Continent #1, project col:continents/Continent #1, union #4 #5 #3", "alternatives": "select tbl:continents, project tbl:countries #1, group #2 #1, project col:continents/ContId #1, project col:continents/Continent #1, union #4 #5 #3"}
{"input": "Show all distinct publishers for books. <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select tbl:book_club, project col:book/Publisher #1", "alternatives": "select tbl:book, project col:book/Publisher #1"}
{"input": "Find the id of the customer who made the most orders. <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select col:Customers, project tbl:Orders #1, group #2 #1, superlative max #1 #3, project col:Orders/customer_id #4", "alternatives": "select col:Customers, project col:Orders/customer_id #4, group #2 #1, superlative max #1 #3, project tbl:Orders #1"}
{"input": "For each customer who has at least two orders, find the customer name and number of orders made. <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select col:Customers, project tbl:Orders #1, group #2 #1, comparative #1 #3 greatequal/2, project col:Customers/customer_name #4, project tbl:Orders #4, group #6 #4, union #5 #7", "alternatives": "select col:Customers, project tbl:Orders #1, group #6 #4, comparative #1 #3 greatequal/2, project col:Customers/customer_name #4, project tbl:Orders #4, group #2 #1, union #5 #7"}
{"input": "Find the names of the customers who have order status both \"On Road\" and \"Shipped\". <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Customers, project tbl:Orders #1, comparative #1 #2 equal/On Road, comparative #1 #2 equal/Shipped, intersection #1 #3 #4, project col:Customers/customer_name #5", "alternatives": "select col:Customers, project tbl:Orders #1, comparative #1 #2 equal/On Road, comparative #1 #2 equal/Shipped, intersection #1 #3 #4, project col:Customers/customer_name #5"}
{"input": "What is the average length in feet of the bridges? <tbl> architect bridge mill </tbl> <col> id name nationality gender architect_id id name location length_meters length_feet architect_id id location name type built_year notes </col>", "prediction": "select tbl:bridge, project col:bridge/length_feet #1, aggregate avg #2", "alternatives": "select tbl:bridge, project col:bridging/length_feet #1, aggregate avg #2"}
{"input": "What are the towns from which at least two teachers come from? <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select col:teacher, project tbl:teacher #1, group #2 #1, comparative #1 #3 greatequal/2", "alternatives": "select col:teacher, project tbl:teacher #1, group #2 #1, comparative #1 #3 greatequal/2."}
{"input": "Which employee received the most awards in evaluations? Give me the employee name. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select tbl:employee, project tbl:evaluation #1, group #2 #1, superlative max #1 #3, project col:employee/Name #4", "alternatives": "select tbl:employee, superlative max #1 #3, group #2 #1, project tbl:evaluation #1, project col:employee/Name #4"}
{"input": "How many different types of pet are there? <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Pets, project col:Pets/PetType #1, aggregate count #3", "alternatives": "select tbl:Has_Pet, project col:Has_Pet/PetType #1, aggregate count #3"}
{"input": "Show all publishers and the number of books for each publisher. <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select col:book_club, project tbl:book_club #1, group #2 #1, union #1 #3", "alternatives": "select col:book, project tbl:book_club #1, group #2 #1, union #1 #3"}
{"input": "List the names of all winners who played in both 2013 and 2016. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:matches, comparative #1 #1 equal/2013 col:matches/year, comparative #1 #1 equal/2016 col:matches/year, intersection #1 #2 #3, project col:matches/winner_name #4", "alternatives": "select col:matches, comparative #1 #1 equal/2016 col:matches/year, comparative #1 #1 equal/2013 col:matches/year, intersection #1 #2 #3, project col:matches/winner_name #4"}
{"input": "What categories have two or more corresponding books that were made after 1989? <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select col:book, project tbl:book_club #1, comparative #2 #2 great/1989 col:book_club/Year, group #3 #1, comparative #1 #4 greatequal/2", "alternatives": "select col:book, project tbl:book_club #1, comparative #2 #2 great/1990 col:book_club/Year, group #3 #1, comparative #1 #4 greatequal/2"}
{"input": "What is the id and weight of every pet who is older than 1? <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Pets, comparative #1 #1 great/1 col:Pets/Age, project col:Pets/PetID #2, project col:Pets/weight #2, union #3 #4", "alternatives": "select tbl:Pets, comparative #1 #1 great/1 col:Pets/pet_age, project col:Pets/PetID #2, project col:Pets/weight #2, union #3 #4"}
{"input": "How many airlines are from USA? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:airlines, comparative #1 #1 equal/USA col:airlines/Country, aggregate count #2", "alternatives": "select tbl:airlines, project col:airlines/Country #1, comparative #1 #2 equal/USA, aggregate count #3"}
{"input": "What are the distinct template type descriptions for the templates ever used by any document? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Templates, project none #1, project col:Templates/Template_Type_Description #2", "alternatives": "select tbl:Templates, comparative #1 #1 tbl:Documents, project col:Ref_Template_Types/Template_Type_Description #2, comparative #3 #3 none"}
{"input": "What are the ids, names, and descriptions for all documents? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, project col:Documents/Document_ID #1, project col:Documents/Document_Name #1, project col:Documents/Document_Description #1, union #2 #3 #4", "alternatives": "select tbl:Documents, project col:Documents/Document_ID #1, project col:Documents/Document_Name #1, union #2 #3 #4, project col:Documents/Document_Description #1"}
{"input": "How many ships ended up being 'Captured'? <tbl> battle ship death </tbl> <col> id name date bulgarian_commander latin_commander result lost_in_battle id name tonnage ship_type location disposition_of_ship caused_by_ship_id id note killed injured </col>", "prediction": "select tbl:ship, comparative #1 #1 equal/Captured col:ship/result, aggregate count #2", "alternatives": "select tbl:ship, comparative #1 #1great//Captured col:ship/result, aggregate count #2"}
{"input": "What are the ids and names of the battles that led to more than 10 people killed in total. <tbl> battle ship death </tbl> <col> id name date bulgarian_commander latin_commander result lost_in_battle id name tonnage ship_type location disposition_of_ship caused_by_ship_id id note killed injured </col>", "prediction": "select tbl:battle, project tbl:death #1, group #2 #1, comparative #1 #3 great/10, project col:battle/id #4, project col:battle/name #4, union #5 #6", "alternatives": "select tbl:battle, project col:death/killed #1, group #2 #1, comparative #1 #3 great/10, project col:battle/id #4, project col:battle/name #4, union #5 #6"}
{"input": "What are the names and year of construction for the mills of 'Grondzeiler' type? <tbl> architect bridge mill </tbl> <col> id name nationality gender architect_id id name location length_meters length_feet architect_id id location name type built_year notes </col>", "prediction": "select tbl:mill, project col:mill/type #1, comparative #1 #2 equal/Grondzeiler, project col:mill/name #3, project col:mill/built_year #3, union #4 #5", "alternatives": "select tbl:mill, project col:mill/type #1, comparative #1 #2 equal/Grondzeiler, project col:mill/name #3, project col:mill/build_year #3, union #4 #5"}
{"input": "Show the movie titles and book titles for all companies in China. <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select tbl:company, comparative #1 #1 equal/China col:culture_company/Company_name, project col:film/Title #2, project col:book/Title #2, union #3 #4", "alternatives": "select tbl:company, comparative #1 #1 equal/China col:culture_company/Company_name, project col:title/Title #2, project col:book/Title #2, union #3 #4"}
{"input": "Return the ids corresponding to templates with the description 'Presentation'. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Templates, project col:Templates/Template_Description #1, comparative #1 #2 equal/Presentation, project col:Templates/Template_ID #3", "alternatives": "select tbl:Templates, comparative #1 #1 equal/Presentation col:Ref_Template_Types/Template_Type_Description, project col:Templates/Template_ID #2"}
{"input": "Which shop has the most employees? Give me the shop name. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select tbl:shop, project tbl:employee #1, group #2 #1, superlative max #1 #3, project col:shop/Name #4", "alternatives": "select col:shop, project tbl:employee #1, group #2 #1, superlative max #1 #3, project col:shop/Name #4"}
{"input": "Show paragraph details for paragraph with text 'Korea'. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Paragraphs, project col:Paragraphs/Paragraph_Text #1, comparative #1 #2 equal/Korea, project col:Paragraphs/Paragraph_Details #3", "alternatives": "select tbl:Paragraphs, project col:Paragraphs/Paragraph_Text #1, comparative #1 #2great//Korea, project col:Paragraphs/Paragraph_Details #3"}
{"input": "How many 'United Airlines' flights go to Airport 'ASY'? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, comparative #1 #1 equal/ASY col:airports/AirportName, aggregate count #2", "alternatives": "select tbl:flights, comparative #1 #1 equal/United Airlines col:airlines/Airline, project col:flights/DestAirport #2, comparative #2 #3 equal/ASY, aggregate count #4"}
{"input": "What are the distinct name of the mills built by the architects who have also built a bridge longer than 80 meters? <tbl> architect bridge mill </tbl> <col> id name nationality gender architect_id id name location length_meters length_feet architect_id id location name type built_year notes </col>", "prediction": "select tbl:architecture, comparative #1 #1 great/80 col:bridge/length_meters, project tbl:mill #2, project col:mill/name #3", "alternatives": "select tbl:mill, comparative #1 #1 great/80 col:bridge/length_meters, project tbl:artist #2, project col:artist/name #3"}
{"input": "What is the document name and template id for document with description with the letter 'w' in it? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, project col:Documents/Document_Description #1, comparative #1 #2 like%w%, project col:Documents/Document_Name #3, project col:Documents/Document_ID #3, union #4 #5", "alternatives": "select tbl:Documents, comparative #1 #2 like%w%, project col:Documents/Document_Description #1, project col:Documents/Document_Name #3, project col:Documents/Document_ID #3, union #4 #5"}
{"input": "List the name and tonnage ordered by in descending alphabetical order for the names. <tbl> battle ship death </tbl> <col> id name date bulgarian_commander latin_commander result lost_in_battle id name tonnage ship_type location disposition_of_ship caused_by_ship_id id note killed injured </col>", "prediction": "select tbl:ship, project col:ship/name #1, project col:ship/tonnage #1, union #2 #3, sort #4 #2 descending", "alternatives": "select col:ship, select col:ship, union #1 #2, sort #3 #1 descending"}
{"input": "List the most common hometown of teachers. <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select tbl:teacher, project col:teacher/Hometown #1, group #1 #2, superlative max #2 #3", "alternatives": "select col:teacher, project tbl:teacher #1, group #2 #1, superlative max #1 #3"}
{"input": "Find the id and name of the museum that has the most staff members? <tbl> museum visitor visit </tbl> <col> Museum_ID Name Num_of_Staff Open_Year ID Name Level_of_membership Age Museum_ID visitor_ID Num_of_Ticket Total_spent </col>", "prediction": "select tbl:museum, project col:museum/Num_of_Staff #1, group #2 #1, superlative max #1 #3, project col:museum/Museum_ID #4, project col:museum/Name #4, union #5 #6", "alternatives": "select tbl:museum, project none #1, group #2 #1, superlative max #1 #3, project col:museum/Museum_ID #4, project col:museum/Name #4, union #5 #6"}
{"input": "What are  the different countries with singers above age 20? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:songwriter, project col:songwriter/Age #1, comparative #1 #2 great/20, project col:song/Country #3", "alternatives": "select col:singer, project tbl:singer #1, project col:singer/Age #2, comparative #1 #3 great/20"}
{"input": "What are the distinct types of mills that are built by American or Canadian architects? <tbl> architect bridge mill </tbl> <col> id name nationality gender architect_id id name location length_meters length_feet architect_id id location name type built_year notes </col>", "prediction": "select tbl:mill, project tbl:architecture #1, comparative #1 #2 equal/American, comparative #1 #2 equal/Canada, union #3 #4, project col:mill/type #5", "alternatives": "select tbl:mill, comparative #1 #1 equal/American col:architecture/nationality, comparative #1 #1 equal/Canada col:architecture/nationality, union #2 #3, project col:mill/type #4"}
{"input": "What are all the song names by singers who are older than average? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:song, project col:song/Age #1, aggregate avg #2, comparative #1 #2 great/#3, project col:song/Song_Name #4", "alternatives": "select tbl:song, aggregate avg #2, project col:song/Age #1, comparative #1 #2 great/#3, project col:song/Song_Name #4"}
{"input": "How many flights does airline 'JetBlue Airways' have? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:airlines, project tbl:flights #1, comparative #2 #1 equal/JetBlue Airways, aggregate count #3", "alternatives": "select tbl:flights, comparative #1 #1 equal/JetBlue Airways col:airlines/Airline, aggregate count #2"}
{"input": "What are the codes of template types that have fewer than 3 templates? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Templates, project tbl:Ref_Template_Types #1, group #2 #1, comparative #1 #3 less/3, project col:Ref_Template_Types/Template_Type_Code #4", "alternatives": "select col:Templates, project tbl:Ref_Template_Types #1, group #2 #1, comparative #1 #3 less/3, project col:Ref_Template_Types/Templature_Type_Code #4"}
{"input": "Give the airport code and airport name corresonding to the city Anthony. <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:airports, project col:airports/AirportCode #1, project col:airports/AirportName #1, union #2 #3, comparative #4 #1 equal/Anthony, union #2 #5", "alternatives": "select val:airports, project col:airports/AirportCode #1, project col:airports/AirportName #1, union #2 #3"}
{"input": "Show name, country, age for all singers ordered by age from the oldest to the youngest. <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:song, project col:song/Song_Name #1, project col:song/Country #1, project col:song/Age #1, sort #2 #3 descending", "alternatives": "select tbl:song, project col:song/Country #1, project col:song/Song_Name #1, project col:song/Age #1, sort #2 #3 descending"}
{"input": "Find the cities that have more than one employee under age 30. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select col:employee, project tbl:employee #1, comparative #2 #2 less/30 col:employee/Age, group #3 #1, comparative #1 #4 great/1", "alternatives": "select col:employee, project tbl:employee #1, comparative #2 #2 less/30 col:employee/Age, group #3 #1, superlative max #1 #4"}
{"input": "What is the document id, template id and description for document named \"Robbin CV\"? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, comparative #1 #1 equal/Robbin CV col:Documents/Document_Name, project col:Documents/Document_ID #2, project col:Documents/Template_ID #3, project col:Documents/Document_Description #3, union #4 #5 #6", "alternatives": "select tbl:Documents, comparative #1 #1greatequal//Robbin CV col:Documents/Document_Name, project col:Documents/Document_ID #2, project col:Documents/Document_Description #3, project col:Documents/Template_ID #3, union #4 #5 #6"}
{"input": "How many paragraphs for the document with name 'Summer Show'? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, project col:Documents/Document_Name #1, comparative #1 #2 equal/Summer Show, project col:Documents/Paragraph_Text #3, aggregate count #4", "alternatives": "select tbl:Documents, aggregate count #4, comparative #1 #2 equal/Summer Show, project col:Documents/Paragraph_Text #3, project col:Documents/Document_Name #1"}
{"input": "Return the template type code of the template that is used by a document named Data base. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, comparative #1 #1 equal/Data base col:Documents/Document_Name, project tbl:Ref_Template_Types #2, project col:Ref_Template_Types/Template_Type_Code #3", "alternatives": "select tbl:Templates, project tbl:Documents #1, comparative #2 #2 equal/Data base col:Documents/Document_Name, project col:Templates/Template_Type_Code #3"}
{"input": "Show all document ids, names and the number of paragraphs in each document. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Documents, project col:Documents/Document_ID #1, project col:Documents/Document_Name #1, project tbl:Paragraphs #1, group #4 #1, union #2 #3 #5", "alternatives": "select col:Paragraphs, project col:Paragraphs/Document_ID #1, project col:Documents/Document_Name #1, project tbl:Paragraphs #1, group #4 #1, union #2 #3 #5"}
{"input": "On which day was the order placed whose shipment tracking number is 3452? <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Orders, project tbl:Shipments #1, project col:Shipments/shipment_tracking_number #2, comparative #1 #3 equal/3452, project col:Orders/date_order_placed #4", "alternatives": "select tbl:Orders, project col:Shipments/shipment_tracking_number #2, project tbl:Shipments #1, comparative #1 #3greatequal//3452, project col:Orders/date_order_placed #4"}
{"input": "What is the total ticket expense of the visitors whose membership level is 1? <tbl> museum visitor visit </tbl> <col> Museum_ID Name Num_of_Staff Open_Year ID Name Level_of_membership Age Museum_ID visitor_ID Num_of_Ticket Total_spent </col>", "prediction": "select tbl:visit, project col:visit/Level_of_membership #1, comparative #1 #2 equal/1, project col:visit/Total_spent #3, aggregate sum #4", "alternatives": "select tbl:visit, project col:visit/Level_of_membership #1, comparative #1 #2 equal/1, project col:visit/Num_of_Ticket #3, aggregate sum #4"}
{"input": "Which publishers did not publish a book in 1989? <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select col:book_club, comparative #1 #1 equal/1989 col:book_club/Year, discard #1 #2", "alternatives": "select col:book, comparative #1 #1 equal/1989 col:book_club/Year, discard #1 #2"}
{"input": "What are the id and name of the museum visited most times? <tbl> museum visitor visit </tbl> <col> Museum_ID Name Num_of_Staff Open_Year ID Name Level_of_membership Age Museum_ID visitor_ID Num_of_Ticket Total_spent </col>", "prediction": "select tbl:museum, project tbl:visit #1, group #2 #1, superlative max #1 #3, project col:visit/Museum_ID #4, project col:museum/Name #4, union #5 #6", "alternatives": "select tbl:museum, project tbl:visit #1, union #5 #6, superlative max #1 #3, project col:visit/Museum_ID #4, project col:museum/Name #4, group #2 #1"}
{"input": "For each product, show its name and the number of times it was ordered. <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select col:Products, project col:Products/product_name #1, project tbl:Order_Items #1, group #3 #1, union #2 #4", "alternatives": "select col:Products, project col:Products/product_name #1, project tbl:Order_Items #1, group #4 #1, union #2 #3"}
{"input": "Return the names and template ids for documents that contain the letter w in their description. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, project col:Documents/Document_Description #1, comparative #1 #2 like%w%, project col:Documents/Document_Name #3, project col:Documents/Document_ID #3, union #4 #5", "alternatives": "select tbl:Documents, project col:Documents/Document_Description #1, comparative #1 #2 like%w%, project col:Documents/Document_Name #3, project col:Documents/Template_ID #3, project col:Documents/Template_ID #5, union #4 #6"}
{"input": "How many players are from each country? <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:players, project tbl:players #1, group #2 #1, union #1 #3", "alternatives": "select col:players, project tbl:players #1, group #2 #1, union #1 #4"}
{"input": "How many matches were played in each year? <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:matches, project tbl:matches #1, group #2 #1, union #1 #3", "alternatives": "select col:matches, project tbl:matches #1, group #2 #1, union #1 #3"}
{"input": "Show all distinct template type codes for all templates. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Templates, project col:Templates/Template_Type_Code #1", "alternatives": "select tbl:Templates, project col:Templates/Temple_Type_Code #1"}
{"input": "What is the code of airport that has fewest number of flights? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:airports, project tbl:flights #1, group #2 #1, superlative min #1 #3, project col:airports/AirportCode #4", "alternatives": "select tbl:airports, project tbl:flights #1, group #2 #1, superlative min #1 #3, project col:airports/AirportCode #4"}
{"input": "Find the average number of staff working for the museums that were open before 2009. <tbl> museum visitor visit </tbl> <col> Museum_ID Name Num_of_Staff Open_Year ID Name Level_of_membership Age Museum_ID visitor_ID Num_of_Ticket Total_spent </col>", "prediction": "select tbl:museum, comparative #1 #1 less/2009 col:museum/Open_Year, project col:museum/Num_of_Staff #2, group #3 #2, aggregate avg #4", "alternatives": "select tbl:museum, comparative #1 #1 less/2009 col:open/Open_Year, project col:museum/Num_of_Staff #2, group #3 #2, aggregate avg #4"}
{"input": "What are the names of the teachers and how many courses do they teach? <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select col:teacher, project col:teacher/Name #1, project tbl:course #1, group #3 #1, union #2 #4", "alternatives": "select col:teacher, project tbl:course #1, project col:teacher/Name #1, group #3 #1, union #2 #4"}
{"input": "What are the ids of the students who do not own cats as pets? <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Student, comparative #1 #1 equal/Kat col:Has_Pets/pet_type, discard #1 #2, project col:Student/StuID #3", "alternatives": "select tbl:Student, comparative #1 #1 equal/cat col:Pets/PetType, discard #1 #2, project col:Student/StuID #3"}
{"input": "Show all movie titles, years, and directors, ordered by budget. <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select tbl:film, project col:film/Title #1, project col:film/Year #1, project col:film/Director #1, project col:film/Budget_million #1, union #2 #3 #4, sort #6 #5", "alternatives": "select tbl:movie, project col:movie/Title #1, project col:movie/Year #1, project col:movie/Director #1, project col:movie/Budget_million #1, union #2 #3 #4, sort #6 #5"}
{"input": "List the number of all matches who played in years of 2013 or 2016. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:matches, project col:matches/year #1, comparative #1 #2 equal/2013, comparative #1 #2 equal/2016, union #3 #4, aggregate count #5", "alternatives": "select tbl:matches, project col:matches/year #1, comparative #1 #2 equal/2013, comparative #1 #2 equal/2016, union #3 #4, aggregate count #5 min"}
{"input": "How many architects are female? <tbl> architect bridge mill </tbl> <col> id name nationality gender architect_id id name location length_meters length_feet architect_id id location name type built_year notes </col>", "prediction": "select tbl:architect, comparative #1 #1 equal/F col:architect/gender, aggregate count #2", "alternatives": "select tbl:architect, comparative #1 #1 equal/F col:artist/gender, aggregate count #2"}
{"input": "Find the last name of the student who has a cat that is age 3. <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Student, project tbl:Has_Pets #1, project col:Has_Pets/pet_age #2, comparative #1 #3 equal/3, project col:Student/LName #4", "alternatives": "select tbl:Student, project col:Student/LName #4, project col:Has_Pets/pet_age #2, comparative #1 #3 equal/3, project tbl:Has_Pets #1"}
{"input": "Find the number of players for each hand type. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:matches, project tbl:players #1, group #2 #1, union #1 #3", "alternatives": "select col:players, project tbl:players #1, group #2 #1, union #1 #3"}
{"input": "How many countries are listed? <tbl> continents countries car_makers model_list car_names cars_data </tbl> <col> ContId Continent CountryId CountryName Continent Id Maker FullName Country ModelId Maker Model MakeId Model Make Id MPG Cylinders Edispl Horsepower Weight Accelerate Year </col>", "prediction": "select tbl:countries, aggregate count #1", "alternatives": "select tbl:countries, aggregate count #1"}
{"input": "Return the id and type code of the template that is used for the greatest number of documents. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Templates, project tbl:Documents #1, group #2 #1, superlative max #1 #3, project col:Documents/Template_ID #4, project col:Documents/Template_Type_Code #4, union #5 #6", "alternatives": "select col:Templates, superlative max #1 #1, project col:Templates/Template_ID #2, project col:Templates/Template_Type_Code #2, union #3 #4"}
{"input": "Give me a list of distinct product ids from orders placed between 1975-01-01 and 1976-01-01? <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Order_Items, comparative #1 #1 great/1975-01-01 col:Orders/date_order_placed, comparative #2 #2 less/1976-01-01 col:Order_Items/date_order_placed, project col:Products/product_id #3", "alternatives": "select tbl:Order_Items, comparative #1 #1 less/1975-01-01 col:Orders/date_order_placed, comparative #2 #2 great/1976-01-01 col:Order_Items/date_order_placed, project col:Products/product_id #3"}
{"input": "Which airlines have departures from CVO but not from APG airports? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select col:airlines, project tbl:airports #1, comparative #1 #2 equal/CVO, comparative #1 #2 equal/APG, intersection #1 #3 #4, discard #3 #5", "alternatives": "select col:airlines, project tbl:airports #1, comparative #1 #2 equal/APG, comparative #1 #2 equal/CVO, intersection #1 #3 #4, discard #3 #5"}
{"input": "List the airport code and name in the city of Anthony. <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:airports, project col:airports/AirportCode #1, project col:airports/AirportName #1, comparative #2 #3 equal/Anthony, union #2 #4", "alternatives": "select tbl:airports, project col:airports/AirportCode #1, comparative #2 #3 equal/Anthony, project col:airports/AirportName #1, union #2 #4"}
{"input": "What is the average and maximum age for each pet type? <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select col:Pets, project col:Pets/pet_age #1, group #2 #1, aggregate avg #3, aggregate max #3, union #4 #5", "alternatives": "select col:Pets, project col:Pets/pet_age #1, group #2 #1, group #2 #1, union #1 #3 #4"}
{"input": "Find the id of the customer who made the most orders. <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select col:Customers, project tbl:Orders #1, group #2 #1, superlative max #1 #3, project col:Orders/customer_id #4", "alternatives": "select col:Customers, superlative max #1 #1, project col:Customers/customer_id #2"}
{"input": "What are the paragraph texts for the document with the name 'Customer reviews'? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, project col:Documents/Document_Name #1, comparative #1 #2 equal/Customer reviews, project col:Paragraphs/Paragraph_Text #3", "alternatives": "select tbl:Documents, comparative #1 #1 equal/Customer reviews col:Documents/Document_Name, project col:Paragraphs/Paragraph_Text #2"}
{"input": "Find the number of pets for each student who has any pet and student id. <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select col:Has_Pets, project tbl:Has_Pets #1, group #2 #1, project col:Has_Pets/StuID #1, union #3 #4", "alternatives": "select col:Has_Pets, group #2 #1, project tbl:Has_Pets #1, project col:Has_Pets/StuID #1, union #3 #4"}
{"input": "How many flights does airline 'JetBlue Airways' have? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:airlines, project tbl:flights #1, comparative #2 #1 equal/JetBlue Airways, aggregate count #3", "alternatives": "select tbl:flights, comparative #1 #1 equal/JetBlue Airways col:airlines/Airline, aggregate count #2"}
{"input": "List the first and last name of all players who are left / L hand in the order of birth date. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:players, project col:players/hand #1, comparative #1 #2 equal/L, project col:players/first_name #3, project col:players/last_name #3, project col:players/birth_date #3, union #4 #5, sort #6 #5", "alternatives": "select tbl:players, sort #6 #5, comparative #1 #2lessequal//L, project col:players/first_name #3, project col:players/last_name #3, project col:players/birth_date #3, union #4 #5, project col:players/hand #1"}
{"input": "Find the id of the order which is shipped most recently. <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select col:Shipments, superlative max #1 #1, project col:Shipments/order_id #2", "alternatives": "select col:Shipments, project none #1, superlative max #1 #2, project col:Shipments/order_id #3"}
{"input": "What are the opening year and staff number of the museum named Plaza Museum? <tbl> museum visitor visit </tbl> <col> Museum_ID Name Num_of_Staff Open_Year ID Name Level_of_membership Age Museum_ID visitor_ID Num_of_Ticket Total_spent </col>", "prediction": "select tbl:museum, comparative #1 #1 equal/Plaza Museum col:museum/Name, project col:museum/Open_Year #2, project col:museum/Num_of_Staff #2, union #3 #4", "alternatives": "select tbl:museum, union #3 #4, project col:museum/Open_Year #2, project col:museum/Num_of_Staff #2, comparative #1 #1 equal/Plaza Museum col:museum/Name"}
{"input": "Find the number of left handed winners who participated in the WTA Championships. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:matches, comparative #1 #1 equal/left col:matches/winner_hand, aggregate count #2", "alternatives": "select col:matches, comparative #1 #1lessequal//left col:matches/winner_hand, aggregate count #2"}
{"input": "Find the names of employees who never won any award in the evaluation. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select tbl:evaluation, project tbl:evaluation #1, select tbl:employee, discard #3 #2, project col:employee/Name #4", "alternatives": "select tbl:employee, comparative #1 #1 tbl:evaluation, discard #1 #2, project col:employee/Name #3"}
{"input": "Which customers have made at least two orders? Give me each customer name and number of orders made. <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select col:Customers, project tbl:Orders #1, group #2 #1, comparative #1 #3 greatequal/2, project col:Customers/customer_name #4, project tbl:Orders #4, group #6 #4, union #5 #7", "alternatives": "select col:Customers, project tbl:Orders #1, group #2 #1, project col:Customers/customer_name #4, comparative #1 #3 greatequal/2, project tbl:Orders #4, group #6 #4, union #5 #7"}
{"input": "What are ids of the all distinct orders, sorted by placement date? <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Orders, project col:Orders/order_id #1, project col:Orders/date_order_placed #1, sort #2 #3", "alternatives": "select col:Orders, project col:Orders/order_id #1, project col:Orders/date_order_placed #1, sort #2 #3"}
{"input": "What is the code of airport that has the highest number of flights? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:airports, project tbl:flights #1, group #2 #1, superlative max #1 #3, project col:airports/AirportCode #4", "alternatives": "select tbl:airports, project col:airports/AirportCode #4, group #2 #1, superlative max #1 #3, project tbl:flights #1"}
{"input": "What is the total count of teachers? <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select tbl:teacher, aggregate count #1", "alternatives": "select tbl:teacher, aggregate count #1"}
{"input": "Which orders have shipment after 2000-01-01? Give me the order ids. <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Orders, comparative #1 #1 great/2000-01-01 col:Shipments/shipment_date, project col:Orders/order_id #2", "alternatives": "select col:Shipments, project tbl:Shipments #1, comparative #1 #2 great/2000-01-01, project col:Shipments/order_id #3"}
{"input": "Find the average and maximum age for each type of pet. <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select col:Pets, project col:Pets/pet_age #1, group #2 #1, aggregate avg #3, aggregate max #3, union #4 #5", "alternatives": "select col:Pets, project col:Pets/pet_age #1, aggregate max #3, aggregate avg #3, group #2 #1, union #4 #5"}
{"input": "What is the version number and template type code for the template with version number later than 5? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Templates, project col:Templates/Version_Number #1, comparative #1 #2 great/5, project col:Templates/Version_Number #3, project col:Templates/Template_Type_Code #3, union #4 #5", "alternatives": "select tbl:Templates, project col:Templates/Version_Number #1, comparative #1 #2 great/5, project col:Templates/Version_Number #3, union #4 #5, project col:Templates/Template_Type_Code #3"}
{"input": "Show template ids, version numbers, and template type codes for all templates. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Templates, project col:Templates/Template_ID #1, project col:Templates/Version_Number #1, project col:Templates/Template_Type_Code #1, union #2 #3 #4", "alternatives": "select tbl:Templates, project col:Templates/Template_ID #1, project col:Templates/Version_Number #1, project col:Templates/Templature_Type_Code #1, union #2 #3 #4 #5"}
{"input": "What are the towns from which at least two teachers come from? <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select col:teacher, project tbl:teacher #1, group #2 #1, comparative #1 #3 greatequal/2", "alternatives": "select col:teacher, project tbl:teacher #1, group #2 #1, comparative #1 #3 great/2"}
{"input": "How many pets have a greater weight than 10? <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Pets, project col:Has_Pets/weight #1, comparative #1 #2 great/10, aggregate count #3", "alternatives": "select tbl:Pets, project col:Pets/weight #1, comparative #1 #2 great/10, aggregate count #3"}
{"input": "Show all publishers and the number of books for each publisher. <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select col:book_club, project tbl:book_club #1, group #2 #1, union #1 #3", "alternatives": "select col:book_club, project tbl:book_club #1, group #2 #1, union #1 #3"}
{"input": "List all company names with a book published by Alyson. <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select col:book_company, project tbl:book_company #1, comparative #2 #1 equal/Alyson, project col:company/Company_name #3", "alternatives": "select col:company, project tbl:book_company #1, comparative #2 #1 equal/Alyson, project col:company/Company_name #3"}
{"input": "Find the average number of staff working for the museums that were open before 2009. <tbl> museum visitor visit </tbl> <col> Museum_ID Name Num_of_Staff Open_Year ID Name Level_of_membership Age Museum_ID visitor_ID Num_of_Ticket Total_spent </col>", "prediction": "select tbl:museum, comparative #1 #1 less/2009 col:museum/Open_Year, project col:museum/Num_of_Staff #2, group #3 #2, aggregate avg #4", "alternatives": "select tbl:museum, comparative #1 #1 less/2009 col:museum/Open_Year, project col:museum/Num_of_Staff #2, aggregate avg #3"}
{"input": "Return the code of the template type that is most commonly used in documents. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Templates, project tbl:Ref_Template_Types #1, group #2 #1, superlative max #1 #3, project col:Ref_Template_Types/Template_Type_Code #4", "alternatives": "select col:Templates, project tbl:Ref_Template_Types #1, group #2 #1, superlative max #1 #3, project col:Ref_Template_Types/Templature_Type_Code #4"}
{"input": "List the names of employees and sort in ascending order of age. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select tbl:employee, project col:employee/Name #1, project col:employee/Age #1, sort #2 #3 ascending", "alternatives": "select tbl:employee, project col:employee/Name #1, project col:employee/Age #1, sort #2 #3 ascending"}
{"input": "Count the number of employees <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select col:employee, aggregate count #1", "alternatives": "select tbl:employee, aggregate count #1"}
{"input": "What is the document id and name with greatest number of paragraphs? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Documents, project tbl:Paragraphs #1, group #2 #1, superlative max #1 #3, project col:Documents/Document_ID #4, project col:Documents/Document_Name #4, union #5 #6", "alternatives": "select col:Documents, project tbl:Paragraphs #1, group #2 #1, superlative max #1 #3, union #5 #6, project col:Documents/Document_Name #4, project col:Documents/Document_ID #4"}
{"input": "Show the stadium name and the number of concerts in each stadium. <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select col:convention, project col:stadium/Name #1, project tbl:concert #1, group #3 #1, union #2 #4", "alternatives": "select col:concert, project col:stadium/Name #1, project tbl:concert #1, group #3 #1, union #2 #4"}
{"input": "Which city has most number of arriving flights? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select col:airports, project tbl:flights #1, group #2 #1, superlative max #1 #3", "alternatives": "select col:airports, project tbl:flights #1, group #2 #1, superlative max #1 #4"}
{"input": "What is the document id and name with greatest number of paragraphs? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Documents, project tbl:Paragraphs #1, group #2 #1, superlative max #1 #3, project col:Documents/Document_ID #4, project col:Documents/Document_Name #4, union #5 #6", "alternatives": "select col:Paragraphs, project tbl:Paragraphs #1, group #2 #1, superlative max #1 #3, project col:Paragraphs/Document_ID #4, project col:Documents/Document_Name #4, union #5 #6"}
{"input": "Which template type code is used by most number of documents? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Templates, project tbl:Documents #1, group #2 #1, superlative max #1 #3", "alternatives": "select col:Templates, project tbl:Documents #1, group #2 #1, superlative max #1 #3"}
{"input": "What are the first names of every student who has a cat or dog as a pet? <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Student, project tbl:Has_Pets #1, comparative #1 #2 equal/Cat, comparative #1 #2 equal/Dog, union #3 #4, project col:Student/Fname #5", "alternatives": "select tbl:Student, project tbl:Has_Pets #1, comparative #1 #2 equal/Dog, comparative #1 #2 equal/Cat, union #3 #4, project col:Student/Fname #5"}
{"input": "Which airlines have a flight with destination airport AHD? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select col:flights, project tbl:flights #1, project col:flights/Airport #2, comparative #1 #3 equal/AHD", "alternatives": "select tbl:flights, project col:flights/DestAirport #1, comparative #1 #2 equal/AHD"}
{"input": "Find the first name and age of students who have a pet. <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Student, comparative #1 #1 tbl:Has_Pets, project col:Student/Fname #2, project col:Student/Age #2, union #3 #4", "alternatives": "select tbl:Student, comparative #1 #1 tbl:Has_Pets, project col:Student/Fname #2, union #3 #4, project col:Student/Age #2"}
{"input": "Return the template type code of the template that is used by a document named Data base. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, comparative #1 #1 equal/Data base col:Documents/Document_Name, project tbl:Ref_Template_Types #2, project col:Ref_Template_Types/Template_Type_Code #3", "alternatives": "select tbl:Documents, comparative #1 #1great//Data base col:Documents/Document_Name, project tbl:Ref_Template_Types #2, project col:Ref_Template_Types/Template_Type_Code #3"}
{"input": "Count the number of book clubs. <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select tbl:book_club, aggregate count #1", "alternatives": "select tbl:club, aggregate count #1"}
{"input": "Find the maximum weight for each type of pet. List the maximum weight and pet type. <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Pets, project col:Pets/Weight #1, group #2 #1, union #1 #3", "alternatives": "select tbl:Pets, project col:Pets/Weight #1, group #2 #1, union #1 #3 #4"}
{"input": "Return the name of the airport with code 'AKO'. <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:airports, project col:airports/AirportCode #1, comparative #1 #2 equal/AKO, project col:airports/AirportName #3", "alternatives": "select tbl:airports, project col:airports/AirportCode #1, comparative #1 #2greatequal//AKO, project col:airports/AirportName #3"}
{"input": "Which country does Airline \"JetBlue Airways\" belong to? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select val:airlines, project col:airlines/Country #1", "alternatives": "select val:airlines, project col:airlines/Country #1"}
{"input": "For each customer who has at least two orders, find the customer name and number of orders made. <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select col:Customers, project tbl:Orders #1, group #2 #1, comparative #1 #3 greatequal/2, project col:Customers/customer_name #4, project tbl:Orders #4, group #6 #4, union #5 #7", "alternatives": "select col:Customers, project tbl:Orders #1, group #6 #4, comparative #1 #3  equal2, project col:Customers/customer_name #4, project tbl:Orders #4, group #2 #1, union #5 #7"}
{"input": "Return the template type description of the template type with the code AD. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Ref_Template_Types, project col:Ref_Template_Types/Temple_Type_Code #1, comparative #1 #2 equal/AD, project col:Ref_Template_Types/Temple_Type_Description #3", "alternatives": "select tbl:Ref_Template_Types, project col:Ref_Template_Types/Templature_Type_Code #1, comparative #1 #2 equal/AD, project col:Ref_Template_Types/Templature_Type_Description #3"}
{"input": "List the maximum weight and type for each type of pet. <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Pets, project col:Pets/weight #1, group #2 #1, project col:Pets/Type #1, union #3 #4", "alternatives": "select tbl:Pets, project col:Pets/PetType #1, project col:Pets/weight #2, group #3 #2, union #4 #2"}
{"input": "Give the number of Jetblue Airways flights. <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, comparative #1 #1 equal/Jetblue Airways col:airlines/Airline, aggregate count #2", "alternatives": "select tbl:flights, aggregate count #1"}
{"input": "What are the codes of template types that have fewer than 3 templates? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Templates, project tbl:Ref_Template_Types #1, group #2 #1, comparative #1 #3 less/3, project col:Ref_Template_Types/Template_Type_Code #4", "alternatives": "select col:Templates, project tbl:Ref_Template_Types #1, comparative #1 #3 less/3, group #2 #1, project col:Ref_Template_Types/Template_Type_Code #4"}
{"input": "What is the ship id and name that caused most total injuries? <tbl> battle ship death </tbl> <col> id name date bulgarian_commander latin_commander result lost_in_battle id name tonnage ship_type location disposition_of_ship caused_by_ship_id id note killed injured </col>", "prediction": "select tbl:ship, project tbl:injury #1, group #2 #1, superlative max #1 #3, project col:ship/id #4, project col:ship/name #4, union #5 #6", "alternatives": "select tbl:ship, project tbl:injury #1, group #2 #1, superlative max #1 #3, union #5 #6, project col:ship/name #4, project col:ship/id #4"}
{"input": "Show all template type codes and the number of documents using each type. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Templates, project tbl:Ref_Template_Types #1, group #2 #1, union #1 #3", "alternatives": "select col:Templates, project tbl:Documents #1, group #2 #1, union #1 #3"}
{"input": "What are the titles of movies and books corresponding to companies incorporated in China? <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select tbl:company, comparative #1 #1 equal/China col:culture_company/Incorporated_in, project tbl:film #2, project col:book/Title #3, project col:book/Book_Title #3, union #4 #5", "alternatives": "select tbl:company, comparative #1 #1 equal/China col:culture_company/Incorporated_in, project tbl:film #2, project col:book/Title #3, project col:books/Book_Title #3, union #4 #5"}
{"input": "List the first name and birth date of all players from the country with code USA. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:players, project col:players/country_code #1, comparative #1 #2 equal/USA, project col:players/first_name #3, project col:players/birth_date #3, union #4 #5", "alternatives": "select tbl:players, project col:players/country_code #1, project col:players/birth_date #3, project col:players/first_name #3, comparative #1 #2 equal/USA, union #4 #5"}
{"input": "What are the ids and names of each document, as well as the number of paragraphs in each? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Documents, project col:Documents/Document_ID #1, project col:Documents/Document_Name #1, project tbl:Paragraphs #1, group #4 #1, union #2 #3 #5", "alternatives": "select col:Documents, group #4 #1, project col:Documents/Document_Name #1, project tbl:Paragraphs #1, project col:Documents/Document_ID #1, union #2 #3 #5"}
{"input": "Find the name of the winner who has the highest rank points and participated in the Australian Open tourney. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:matches, comparative #1 #1 equal/Australian Open col:matches/turner_level, project col:matches/winner_rank_points #2, superlative max #2 #3, project col:matches/winner_name #4", "alternatives": "select col:matches, comparative #1 #1 equal/Australian Open col:matches/turner_level, project col:matches/winner_name #4, superlative max #2 #3, project col:matches/winner_rank_points #2"}
{"input": "What is the document id with least number of paragraphs? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Documents, project tbl:Paragraphs #1, group #2 #1, superlative min #1 #3", "alternatives": "select col:Documents, project tbl:Paragraphs #1, group #2 #1, superlative min #1 #3"}
{"input": "Show all company names with a movie directed in year 1999. <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select col:film, project tbl:film #1, project col:film/Year #2, comparative #2 #3 equal/1999, project col:company/Company_name #4", "alternatives": "select col:film, project tbl:film #1, project col:film/Year #2, comparative #1 #3 equal/1999, project col:company/Company_name #4"}
{"input": "What are all company names that have a corresponding movie directed in the year 1999? <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select col:film, project tbl:film #1, project col:film/Year #2, comparative #2 #3 equal/1999 col:film/Year", "alternatives": "select tbl:culture_company, project tbl:movie #1, project col:movie/Year #2, comparative #1 #3 equal/1999, project col:culture_company/Company_name #4"}
{"input": "Show all template ids and number of documents using each template. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Templates, project col:Templates/Template_ID #1, project tbl:Documents #1, group #3 #1, union #2 #4", "alternatives": "select col:Templates, project col:Templates/Template_ID #1, project tbl:Documents #1, union #2 #4, group #3 #1"}
{"input": "Show the years, book titles, and publishers for all books, in descending order by year. <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select tbl:book, project col:book/Year #1, project col:book/Book_Title #1, project col:book/Publisher #1, union #2 #3 #4, sort #6 #5 descending", "alternatives": "select tbl:book, project col:book/Year #1, project col:book/Publisher #1, project col:book/Book_Title #1, union #2 #3 #4, sort #6 #5 descending"}
{"input": "What is the code of the country with the most players? <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:players, project tbl:players #1, group #2 #1, superlative max #1 #3, project col:players/country_code #4", "alternatives": "select col:players, project tbl:players #1, group #2 #1, superlative max #1 #3, project col:country/country_code #4"}
{"input": "What is the document name and template id for document with description with the letter 'w' in it? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, project col:Documents/Document_Description #1, comparative #1 #2 like%w%, project col:Documents/Document_Name #3, project col:Documents/Document_ID #3, union #4 #5", "alternatives": "select tbl:Documents, comparative #1 #2 like%w%, project col:Documents/Document_Description #1, project col:Documents/Document_Name #3, project col:Documents/Document_ID #3, union #4 #5"}
{"input": "What are the publishers who have published a book in both 1989 and 1990? <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select col:book, comparative #1 #1 equal/1989 col:book/Year, comparative #1 #1 equal/1990 col:book/Year, intersection #1 #2 #3", "alternatives": "select col:book_club, comparative #1 #1 equal/1989 col:book_club/Year, comparative #2 #2 equal/1990 col:book_club/Year"}
{"input": "What are the first names and birth dates of players from the USA? <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:players, comparative #1 #1 equal/USA col:players/country_code, project col:players/first_name #2, project col:players/birth_date #2, union #3 #4", "alternatives": "select tbl:players, comparative #1 #1greatequal//USA col:players/country_code, project col:players/birth_date #2, project col:players/first_name #2, union #3 #4"}
{"input": "Return the name, location and district of all shops in descending order of number of products. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select tbl:shop, project col:shop/Name #1, project col:shop/Location #1, project col:shop/District #1, project col:shop/Number_products #1, group #4 #1, union #2 #3 #5, sort #6 #5 descending", "alternatives": "select tbl:shop, union #2 #3 #5, project col:shop/Location #1, project col:shop/District #1, project col:shop/Number_products #1, group #4 #1, project col:shop/Name #1, sort #6 #5 descending"}
{"input": "What are the ids of documents that contain the paragraph text 'Brazil' and 'Ireland'? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, project tbl:Paragraphs #1, comparative #1 #2 equal/Brazil, comparative #1 #2 equal/Ireland, intersection #1 #3 #4, project col:Documents/Document_ID #5", "alternatives": "select tbl:Documents, project col:Paragraphs/Paragraph_Text #1, comparative #1 #2 equal/Brazil, comparative #1 #2 equal/Ireland, intersection #1 #3 #4, project col:Documents/Document_ID #5"}
{"input": "Find the manager name and district of the shop whose number of products is the largest. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select tbl:shop, project col:shop/Number_products #1, group #2 #1, superlative max #1 #3, project col:shop/Manager_name #4, project col:shop/District #4, union #5 #6", "alternatives": "select tbl:shop, project none #1, group #2 #1, superlative max #1 #3, project col:shop/Manager_name #4, project col:shop/District #4, union #5 #6"}
{"input": "What is the best rank of losers across all matches? <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:matches, project col:matches/loser_rank #1, group #2 #1, superlative max #1 #3", "alternatives": "select tbl:matches, project col:matches/loser_rank #1, project col:matches/loser_rank #2, superlative max #1 #3"}
{"input": "What are flight numbers of flights departing from Airport \"APG\"? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, comparative #1 #1 equal/APG col:airports/AirportName, project tbl:flights #2, project col:flights/FlightNo #3", "alternatives": "select tbl:flights, project tbl:airports #1, comparative #1 #2 equal/APG, project tbl:flights #3, project col:flights/FlightNo #4"}
{"input": "Where is the youngest teacher from? <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select val:teacher, project col:teacher/Age #1, superlative min #1 #2", "alternatives": "select tbl:teacher, project col:teacher/Age #1, superlative min #1 #2, project col:teacher/Hometown #3"}
{"input": "Show all movie titles, years, and directors, ordered by budget. <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select tbl:film, project col:film/Title #1, project col:film/Year #1, project col:film/Director #1, project col:film/Budget_million #1, union #2 #3 #4, sort #6 #5", "alternatives": "select col:film, project col:film/Title #1, project col:film/Year #1, project col:film/Director #1, project col:film/Budget_million #1, union #2 #3 #4, sort #6 #5"}
{"input": "Show all paragraph ids and texts for the document with name 'Welcome to NY'. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, project col:Documents/Document_Name #1, comparative #1 #2 equal/Welcome to NY, project col:Paragraphs/Paragraph_ID #3, project col:Paragraphs/Paragraph_Text #3, union #4 #5", "alternatives": "select tbl:Documents, project col:Documents/Document_Name #1, comparative #1 #2less//Welcome to NY, project col:Paragraphs/Paragraph_ID #3, union #4 #5, project col:Paragraphs/Paragraph_Text #3"}
{"input": "Find the number of concerts happened in the stadium with the highest capacity. <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:stadium, project col:stadium/Capacity #1, superlative max #1 #2, project tbl:concert #3, aggregate count #4", "alternatives": "select tbl:stadium, superlative max #1 #2, project col:stadium/Capacity #1, project tbl:concert #3, aggregate count #4"}
{"input": "What are the names, themes, and number of singers for every concert? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:song_in_concert, project col:song/Concert_Name #1, project col:song/Theme #1, project tbl:song_in_concert #1, group #4 #1, union #2 #3 #5", "alternatives": "select tbl:song_in_concert, project col:song/Theme #1, project col:song/Concert_Name #1, project tbl:song_in_concert #1, group #4 #1, union #2 #3 #5"}
{"input": "What are the template ids with template type description \"Presentation\". <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Ref_Template_Types, project tbl:Ref_Template_Types #1, comparative #1 #2 equal/Presentation, project col:Ref_Template_Types/Template_Type_Description #3, project col:Ref_Template_Types/Template_ID #4", "alternatives": "select tbl:Ref_Template_Types, project tbl:Ref_Template_Types #1, comparative #1 #2 equal/Presentation, project col:Ref_Template_Types/Template_Type_Description #3, project col:Ref_Template_Types/Temple_ID #4"}
{"input": "How many documents do we have? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, aggregate count #1", "alternatives": "select col:Documents, aggregate count #1"}
{"input": "What is the average age of the visitors whose membership level is not higher than 4? <tbl> museum visitor visit </tbl> <col> Museum_ID Name Num_of_Staff Open_Year ID Name Level_of_membership Age Museum_ID visitor_ID Num_of_Ticket Total_spent </col>", "prediction": "select tbl:visit, project col:visit/Level_of_membership #1, comparative #1 #2 notequal/4, project col:visit/Age #3, aggregate avg #4", "alternatives": "select tbl:visit, project col:visit/Age #3, comparative #1 #2 notequal/4, project col:visit/Level_of_membership #1, aggregate avg #4"}
{"input": "What is the ship id and name that caused most total injuries? <tbl> battle ship death </tbl> <col> id name date bulgarian_commander latin_commander result lost_in_battle id name tonnage ship_type location disposition_of_ship caused_by_ship_id id note killed injured </col>", "prediction": "select tbl:ship, project tbl:injury #1, group #2 #1, superlative max #1 #3, project col:ship/id #4, project col:ship/name #4, union #5 #6", "alternatives": "select tbl:ship, select tbl:death, group #2 #1, superlative max #1 #3, project col:ship/id #4, project col:ship/name #4, union #5 #6"}
{"input": "List the name, nationality and id of all male architects ordered by their names lexicographically. <tbl> architect bridge mill </tbl> <col> id name nationality gender architect_id id name location length_meters length_feet architect_id id location name type built_year notes </col>", "prediction": "select tbl:architect, comparative #1 #1 equal/M col:architect/gender, project col:architect/name #2, project col:architect/nationality #2, project col:architect/architect_id #2, union #3 #4 #5, sort #7 #6", "alternatives": "select tbl:architect, comparative #1 #1 equal/M col:architect/gender, project col:architect/name #2, project col:architect/nationality #2, project col:architect/artist_id #2, union #3 #4 #5, sort #6 #5 descending"}
{"input": "What is the name of each teacher and what course they teach? <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select tbl:teacher, project col:teacher/Name #1, project col:course/Course #1, union #2 #3", "alternatives": "select tbl:teacher, project col:teacher/Name #1, project col:course/Course #1, union #2 #3"}
{"input": "Return the document id, template id, and description for the document with the name Robbin CV. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, project col:Documents/Document_Name #1, comparative #1 #2 equal/Robbin CV, project col:Documents/Document_ID #3, project col:Documents/Template_ID #3, project col:Documents/Document_Description #3, union #4 #5 #6", "alternatives": "select tbl:Documents, comparative #1 #1 equal/Robbin CV col:Documents/Document_Name, project col:Documents/Document_ID #2, project col:Documents/Template_ID #2, project col:Documents/Document_Description #2, union #3 #4 #5"}
{"input": "Return the different descriptions for templates that have been used in a document. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Templates, comparative #1 #1 tbl:Documents, project col:Ref_Template_Types/Template_Type_Description #2", "alternatives": "select tbl:Templates, project col:Templates/Template_Description #1, comparative #2 #2 tbl:Documents"}
{"input": "What are the id, name and membership level of visitors who have spent the largest amount of money in total in all museum tickets? <tbl> museum visitor visit </tbl> <col> Museum_ID Name Num_of_Staff Open_Year ID Name Level_of_membership Age Museum_ID visitor_ID Num_of_Ticket Total_spent </col>", "prediction": "select tbl:visit, project tbl:visit #1, project col:visit/Total_spent #2, group #3 #1, superlative max #1 #4, project col:visit/Visit_ID #5, project col:visit/Name #5, project col:visit/Level_of_membership #5, union #6 #7", "alternatives": "select tbl:visit, project col:visit/Name #5, project col:visit/Total_spent #2, group #3 #1, superlative max #1 #4, project col:visit/Visit_ID #5, project tbl:visit #1, project col:visit/Level_of_membership #5, union #6 #7"}
{"input": "What are the average ages of losers and winners across matches? <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:matches, project col:matches/loser_age #1, project col:matches/winner_name #1, aggregate avg #2, aggregate avg #3, union #4 #5", "alternatives": "select tbl:matches, project col:matches/loser_age #1, aggregate col:matches/winner_name #1, aggregate avg #3, union #4 #2"}
{"input": "What are the ids and names of the battles that led to more than 10 people killed in total. <tbl> battle ship death </tbl> <col> id name date bulgarian_commander latin_commander result lost_in_battle id name tonnage ship_type location disposition_of_ship caused_by_ship_id id note killed injured </col>", "prediction": "select tbl:battle, project tbl:death #1, group #2 #1, comparative #1 #3 great/10, project col:battle/id #4, project col:battle/name #4, union #5 #6", "alternatives": "select tbl:battle, project tbl:death #1, group #2 #1, project col:battle/name #4, project col:battle/id #4, comparative #1 #3 great/10, union #5 #6"}
{"input": "What are the names of the teachers who teach at least two courses? <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select tbl:teacher, project tbl:course #1, group #2 #1, comparative #1 #3 greatequal/2, project col:teacher/Name #4", "alternatives": "select tbl:teacher, project tbl:course #1, project col:teacher/Name #4, comparative #1 #3 greatequal/2, group #2 #1"}
{"input": "Which shop has the most employees? Give me the shop name. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select tbl:shop, project tbl:employee #1, group #2 #1, superlative max #1 #3, project col:shop/Name #4", "alternatives": "select tbl:shop, group #2 #1, project tbl:employee #1, superlative max #1 #3, project col:shop/Name #4"}
{"input": "Show the movie titles and book titles for all companies in China. <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select tbl:company, comparative #1 #1 equal/China col:culture_company/Company_name, project col:film/Title #2, project col:book/Title #2, union #3 #4", "alternatives": "select tbl:company, project col:film/Title #2, comparative #1 #1 equal/China col:culture_company/Company_name, project col:book/Title #2, union #3 #4"}
{"input": "What are the distinct battle names which are between bulgarian commander 'Kaloyan' and latin commander 'Baldwin I'? <tbl> battle ship death </tbl> <col> id name date bulgarian_commander latin_commander result lost_in_battle id name tonnage ship_type location disposition_of_ship caused_by_ship_id id note killed injured </col>", "prediction": "select tbl:bathroom, comparative #1 #1 equal/Kaloyan col:bathroom/bulbularian_commander, comparative #1 #1 equal/latin col:bathroom/latin_commander, intersection #1 #2 #3", "alternatives": "select tbl:battle, comparative #1 #1 equal/Kaloyan col:bulgarian_commander/name, comparative #1 #1 equal/latin col:bulgarian_commander/name, intersection #1 #2 #3"}
{"input": "List singer names and number of concerts for each singer. <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select col:concert, project col:song/Song_Name #1, project tbl:song_in_concert #1, group #3 #1, union #2 #4", "alternatives": "select col:concert, project col:song/Song_Name #1, group #3 #1, project tbl:song_in_concert #1, union #2 #4"}
{"input": "Which orders have shipment after 2000-01-01? Give me the order ids. <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Orders, comparative #1 #1 great/2000-01-01 col:Shipments/shipment_date, project col:Orders/order_id #2", "alternatives": "select tbl:Orders, comparative #1 #1 greatequal/2000-01-01 col:Shipments/shipment_date, project col:Orders/order_id #2"}
{"input": "What is the name of the customer who has the largest number of orders? <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Customers, project tbl:Orders #1, group #2 #1, superlative max #1 #3, project col:Customers/customer_name #4", "alternatives": "select col:Customers, project tbl:Orders #1, group #2 #1, superlative max #1 #3, project col:Customers/customer_name #4"}
{"input": "For students who have pets, how many pets does each student have? list their ids instead of names. <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select col:Has_Pets, comparative #1 #1 tbl:Has_Pets, project tbl:Has_Pets #2, group #3 #2, project col:Has_Pets/StuID #2, union #4 #5", "alternatives": "select tbl:Student, comparative #1 #1 tbl:Has_Pet, project tbl:Has_Pet #2, group #3 #2, union #2 #4"}
{"input": "Find the names of the visitors whose membership level is higher than 4, and order the results by the level from high to low. <tbl> museum visitor visit </tbl> <col> Museum_ID Name Num_of_Staff Open_Year ID Name Level_of_membership Age Museum_ID visitor_ID Num_of_Ticket Total_spent </col>", "prediction": "select tbl:visit, project col:visit/Level_of_membership #1, comparative #1 #2 great/4, project col:visit/Name #3, project col:visit/Level_of_membership #3, sort #4 #5 ascending", "alternatives": "select tbl:visit, project col:visit/Level_of_membership #3, comparative #1 #2 great/4, project col:visit/Name #3, project col:visit/Level_of_membership #1, sort #4 #5 ascending"}
{"input": "How many flights depart from 'APG'? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, comparative #1 #1 equal/APG col:airlines/AirportName, aggregate count #2", "alternatives": "select tbl:flights, comparative #1 #1 equal/APG col:airlines/AirportName, aggregate count #2"}
{"input": "What are the id, name and membership level of visitors who have spent the largest amount of money in total in all museum tickets? <tbl> museum visitor visit </tbl> <col> Museum_ID Name Num_of_Staff Open_Year ID Name Level_of_membership Age Museum_ID visitor_ID Num_of_Ticket Total_spent </col>", "prediction": "select tbl:visit, project tbl:visit #1, project col:visit/Total_spent #2, group #3 #1, superlative max #1 #4, project col:visit/Visit_ID #5, project col:visit/Name #5, project col:visit/Level_of_membership #5, union #6 #7", "alternatives": "select tbl:visit, project col:visit/Name #5, project col:visit/Total_spent #2, group #3 #1, superlative max #1 #4, project col:visit/Visit_ID #5, project tbl:visit #1, project col:visit/Level_of_membership #5, union #6 #7"}
{"input": "Which of the mill names contains the french word 'Moulin'? <tbl> architect bridge mill </tbl> <col> id name nationality gender architect_id id name location length_meters length_feet architect_id id location name type built_year notes </col>", "prediction": "select tbl:mill, project col:mill/name #1, comparative #2 #2 like%Moulin% col:mill/name", "alternatives": "select tbl:mill, project col:mill/name #1, comparative #2 #2 like%Moulin% col:mill/name"}
{"input": "Show names of teachers that teach at least two courses. <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select tbl:teacher, project tbl:course #1, group #2 #1, comparative #1 #3 greatequal/2, project col:teacher/Name #4", "alternatives": "select tbl:teacher, project tbl:course #1, project col:teacher/Name #4, comparative #1 #3  equal2, group #2 #1"}
{"input": "List all airline names and their abbreviations in \"USA\". <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:airlines, comparative #1 #1 equal/USA col:airlines/CountryName, project col:airlines/Airline #2, project col:airlines/Abbreviation #2, union #3 #4", "alternatives": "select tbl:airlines, project col:airlines/Airline #1, project col:airlines/Abbreviation #2, union #2 #3, comparative #4 #4 equal/USA col:airlines/Country"}
{"input": "How many flights depart from City Aberdeen? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, comparative #1 #1 equal/City Aberdeen col:airports/AirportName, aggregate count #2", "alternatives": "select tbl:flights, comparative #1 #1 equal/City Aberdeen col:airports/AirportName, aggregate count #3"}
{"input": "What is the age and hometown of every teacher? <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select tbl:teacher, project col:teacher/Age #1, project col:teacher/Hometown #1, union #2 #3", "alternatives": "select tbl:teacher, project col:teacher/Age #1, project col:teacher/Hometown #1, union #2 #3"}
{"input": "Find all airlines that have flights from both airports 'APG' and 'CVO'. <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:airlines, project tbl:flights #1, comparative #1 #2 equal/APG, comparative #1 #2 equal/CVO, intersection #1 #3 #4, project col:airlines/Airline #5", "alternatives": "select col:airlines, project tbl:flights #1, comparative #1 #2 equal/APG, comparative #1 #2 equal/CVO, intersection #1 #3 #4, project col:airlines/Airline #5"}
{"input": "Count the number of flights into ATO. <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, comparative #1 #1 equal/ATO col:airports/AirportName, aggregate count #2", "alternatives": "select tbl:flights, comparative #1 #1 equal/ATO col:flights/DestAirport, aggregate count #2"}
{"input": "Show all paragraph ids and texts for the document with name 'Welcome to NY'. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, project col:Documents/Document_Name #1, comparative #1 #2 equal/Welcome to NY, project col:Paragraphs/Paragraph_ID #3, project col:Paragraphs/Paragraph_Text #3, union #4 #5", "alternatives": "select tbl:Documents, project col:Documents/Document_Name #1, comparative #1 #2 equal/Welcome to NY, project tbl:Paragraphs #3, project col:Paragraphs/Paragraph_ID #4, project col:Paragraphs/Paragraph_Text #4, union #5 #6"}
{"input": "What are the distinct names and nationalities of the architects who have ever built a mill? <tbl> architect bridge mill </tbl> <col> id name nationality gender architect_id id name location length_meters length_feet architect_id id location name type built_year notes </col>", "prediction": "select tbl:architect, comparative #1 #1 tbl:mill, project col:architect/name #2, project col:architect/nationality #2, union #3 #4", "alternatives": "select tbl:architect, union #3 #4, project col:architect/name #2, project col:architect/nationality #2, comparative #1 #1 tbl:mill"}
{"input": "Which cities do more than one employee under age 30 come from? <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select col:employee, project tbl:employee #1, comparative #2 #2 less/30 col:employee/Age, group #3 #1, comparative #1 #4 great/1", "alternatives": "select col:employee, project tbl:employee #1, comparative #1 #4 great/1, group #3 #1, comparative #2 #2 less/30 col:employee/Age"}
{"input": "What is the average age for all students who do not own any pets? <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Student, comparative #1 #1 tbl:Has_Pets, discard #1 #2, project col:Student/Age #3, aggregate avg #4", "alternatives": "select tbl:Student, comparative #1 #1 tbl:Stay_Pets, discard #1 #2, project col:Student/Age #3, aggregate avg #4"}
{"input": "Find the name and age of the visitor who bought the most tickets at once. <tbl> museum visitor visit </tbl> <col> Museum_ID Name Num_of_Staff Open_Year ID Name Level_of_membership Age Museum_ID visitor_ID Num_of_Ticket Total_spent </col>", "prediction": "select tbl:visit, project tbl:visit #1, group #2 #1, superlative max #1 #3, project col:visit/Name #4, project col:visit/Age #4, union #5 #6", "alternatives": "select tbl:visit, project tbl:visit #1, group #2 #1, superlative max #1 #3, project col:visit/Name #4, project col:visitors/Age #4, union #5 #6"}
{"input": "How many visitors below age 30 are there? <tbl> museum visitor visit </tbl> <col> Museum_ID Name Num_of_Staff Open_Year ID Name Level_of_membership Age Museum_ID visitor_ID Num_of_Ticket Total_spent </col>", "prediction": "select tbl:visit, project tbl:visit #1, comparative #2 #2 less/30 col:visit/Age, aggregate count #3", "alternatives": "select tbl:visitor, project col:visitor/Age #1, comparative #1 #2 less/30, aggregate count #3"}
{"input": "Find the first name of students who have both cat and dog pets. <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Student, project tbl:Has_Pets #1, comparative #1 #2 equal/Cat, comparative #1 #2 equal/Dog, intersection #1 #3 #4, project col:Student/Fname #5", "alternatives": "select tbl:Student, project tbl:Has_Pets #1, comparative #1 #2 equal/Dog, comparative #1 #2 equal/Cat, intersection #1 #3 #4, project col:Student/Fname #5"}
{"input": "Return the code of the template type that is most commonly used in documents. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Templates, project tbl:Ref_Template_Types #1, group #2 #1, superlative max #1 #3, project col:Ref_Template_Types/Template_Type_Code #4", "alternatives": "select col:Templates, superlative max #1 #3, group #2 #1, project tbl:Ref_Template_Types #1, project col:Ref_Template_Types/Template_Type_Code #4"}
{"input": "Find the ids of orders which are shipped after 2000-01-01. <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Orders, comparative #1 #1 great/2000-01-01 col:Shipments/shipment_date, project col:Orders/order_id #2", "alternatives": "select col:Shipments, comparative #1 #1 great/2000-01-01 col:Shipments/shipment_date, project col:Shipments/order_id #2"}
{"input": "Give the ids of documents that have between one and two paragraphs. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, project tbl:Paragraphs #1, group #2 #1, comparative #1 #3 greatequal/1, comparative #1 #3 lessequal/2, project col:Documents/Document_ID #4", "alternatives": "select col:Documents, project tbl:Paragraphs #1, group #2 #1, comparative #1 #3 greatequal/1, comparative #1 #3 lessequal/2, intersection #1 #4 #5, project col:Documents/Document_ID #6"}
{"input": "Find the total number of tours for each ranking date. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:rankings, project tbl:turnouts #1, group #2 #1, union #1 #3", "alternatives": "select col:rankings, project tbl:turnouts #1, group #2 #1, union #1 #3"}
{"input": "Find the type and weight of the youngest pet. <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Pets, superlative min #1 #1, project col:Pets/PetType #2, project col:Pets/weight #2, union #3 #4", "alternatives": "select tbl:Pets, project col:Pets/PetType #1, superlative min #1 #2, project col:Pets/weight #3, union #3 #4"}
{"input": "How many airlines do we have? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:airlines, aggregate count #1", "alternatives": "select tbl:airlines, aggregate count #1"}
{"input": "find the names of loser and winner who played in the match with greatest number of minutes. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:matches, project col:matches/match_number #1, group #2 #1, superlative max #1 #3, project tbl:players #4, project col:players/loser_name #5, project col:players/winner_name #5, union #6 #7", "alternatives": "select tbl:matches, project col:matches/match_number #1, group #2 #1, project col:players/winner_name #5, project tbl:players #4, project col:players/loser_name #5, superlative max #1 #3, union #6 #7"}
{"input": "What is the publisher with most number of books? <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select col:book, project tbl:book_club #1, group #2 #1, superlative max #1 #3", "alternatives": "select col:book_club, project tbl:book_club #1, group #2 #1, superlative max #1 #3"}
{"input": "What are the dates of the orders made by the customer named \"Jeramie\"? <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Customers, comparative #1 #1 equal/Jeramie col:Customers/customer_name, project tbl:Orders #2, project col:Orders/order_date #3", "alternatives": "select tbl:Customers, project tbl:Orders #1, comparative #2 #1 equal/Jeramie, project col:Orders/date_order_placed #3"}
{"input": "List the first and last name of all players who are left / L hand in the order of birth date. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:players, project col:players/hand #1, comparative #1 #2 equal/L, project col:players/first_name #3, project col:players/last_name #3, project col:players/birth_date #3, union #4 #5, sort #6 #5", "alternatives": "select tbl:players, project col:players/hand #1, comparative #1 #2 equal/L, project col:players/first_name #3, project col:players/last_name #3, project col:players/birth_date #3, union #4 #5, sort #7 #6"}
{"input": "How many flights have destination ATO? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, project none #1, comparative #1 #2 equal/ATO, aggregate count #3", "alternatives": "select tbl:flights, project col:flights/DestAirport #1, comparative #1 #2 equal/ATO, aggregate count #3"}
{"input": "What are the different ids and names of the battles that lost any 'Brig' type shipes? <tbl> battle ship death </tbl> <col> id name date bulgarian_commander latin_commander result lost_in_battle id name tonnage ship_type location disposition_of_ship caused_by_ship_id id note killed injured </col>", "prediction": "select tbl:battle, project tbl:ship #1, comparative #1 #2 equal/Brig, project col:battle/id #3, project col:battle/name #3, union #4 #5", "alternatives": "select tbl:battle, comparative #1 #1 equal/Brig col:ship/ship_type, project col:battle/name #2, union #3 #4"}
{"input": "What is the document id with 1 to 2 paragraphs? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Documents, project tbl:Paragraphs #1, group #2 #1, comparative #1 #3 equal/1, comparative #1 #3 equal/2, intersection #1 #4 #5", "alternatives": "select col:Documents, project tbl:Paragraphs #1, group #2 #1, comparative #1 #3 equal/2, comparative #1 #3 equal/1, intersection #1 #4 #5"}
{"input": "What are the id, name and membership level of visitors who have spent the largest amount of money in total in all museum tickets? <tbl> museum visitor visit </tbl> <col> Museum_ID Name Num_of_Staff Open_Year ID Name Level_of_membership Age Museum_ID visitor_ID Num_of_Ticket Total_spent </col>", "prediction": "select tbl:visit, project tbl:visit #1, project col:visit/Total_spent #2, group #3 #1, superlative max #1 #4, project col:visit/Visit_ID #5, project col:visit/Name #5, project col:visit/Level_of_membership #5, union #6 #7", "alternatives": "select tbl:visit, project tbl:visit #1, project col:visit/Total_spent #2, group #3 #1, superlative max #1 #4, project col:visit/Visitors #5, project col:visit/Num_of_membership #5, union #6 #7"}
{"input": "What is the first name and gender of the all the students who have more than one pet? <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Student, project tbl:Has_Pets #1, group #2 #1, comparative #1 #3 great/1, project col:Student/Fname #4, project col:Student/Sex #4, union #5 #6", "alternatives": "select tbl:Student, project tbl:Has_Pets #1, group #2 #1, project col:Student/Fname #4, comparative #1 #3 great/1, project col:Student/Sex #4, union #5 #6"}
{"input": "Find all airlines that have flights from both airports 'APG' and 'CVO'. <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:airlines, project tbl:flights #1, comparative #1 #2 equal/APG, comparative #1 #2 equal/CVO, intersection #1 #3 #4, project col:airlines/Airline #5", "alternatives": "select tbl:flights, comparative #1 #1 equal/APG col:flights/SourceAirport, comparative #1 #1 equal/CVO col:flights/SourceAirport, project col:airlines/Airline #1, project tbl:airlines #2, project tbl:airlines #3, intersection #4 #5 #6"}
{"input": "What is the version number and template type code for the template with version number later than 5? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Templates, project col:Templates/Version_Number #1, comparative #1 #2 great/5, project col:Templates/Version_Number #3, project col:Templates/Template_Type_Code #3, union #4 #5", "alternatives": "select tbl:Templates, project col:Templates/Version_Number #1, comparative #1 #2 less/5, project col:Templates/Version_Number #3, union #4 #5, project col:Templates/Template_Type_Code #3"}
{"input": "What are the names of the singers and number of concerts for each person? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select col:song, project col:song/Song_Name #1, project tbl:song_in_concert #1, group #3 #1, union #2 #4", "alternatives": "select col:singer, project col:singer/Name #1, project tbl:singer_in_concert #1, group #3 #1, union #2 #4"}
{"input": "What are the codes of countries with more than 50 players? <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:players, project tbl:players #1, group #2 #1, comparative #1 #3 great/50, project col:players/country_code #4", "alternatives": "select col:players, project tbl:players #1, comparative #1 #3 lessequal/50, group #2 #1, project col:players/country_code #4"}
{"input": "List all singer names in concerts in year 2014. <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:song, project col:song/Year #1, comparative #1 #2 equal/2014, project tbl:song #3, project col:song/Song_Name #4", "alternatives": "select tbl:song, project col:song/Year #1, project tbl:song #3, comparative #1 #2lessequal//2014, project col:song/Song_Name #4"}
{"input": "Return the name of the airport with code 'AKO'. <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:airports, project col:airports/AirportCode #1, comparative #1 #2 equal/AKO, project col:airports/AirportName #3", "alternatives": "select tbl:airports, project col:airports/AirportCode #1, comparative #1 #2 equal/AKO, project col:airports/Airportname #3"}
{"input": "Find the id of the pet owned by student whose last name is ‘Smith’. <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Student, project col:Student/LName #1, comparative #1 #2 equal/Smith, project tbl:Has_Pets #3, project col:Has_Pets/PetID #4", "alternatives": "select tbl:Student, project col:Has_Pets/PetID #4, comparative #1 #2 equal/Smith, project tbl:Has_Pets #3, project col:Student/LName #1"}
{"input": "List the names of the customers who have once bought product \"food\". <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Customers, project tbl:Orders #1, comparative #1 #2 equal/food, project col:Customers/customer_name #3", "alternatives": "select tbl:Customers, project tbl:Products #1, comparative #1 #2 equal/food, project col:Customers/customer_name #3"}
{"input": "Which orders are made by the customer named \"Jeramie\"? Give me the order ids and status. <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Customers, project col:Customers/customer_name #1, comparative #1 #2 equal/Jeramie, project tbl:Orders #3, project col:Orders/order_id #4, project col:Orders/order_status #4, union #5 #6", "alternatives": "select tbl:Customers, project col:Customers/customer_name #1, project tbl:Orders #3, comparative #1 #2lessequal//Jeramie, project col:Orders/order_id #4, project col:Orders/order_status #4, union #5 #6"}
{"input": "Find the districts in which there are both shops selling less than 3000 products and shops selling more than 10000 products. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select col:shop, project tbl:shop #1, project col:shop/Number_products #2, group #3 #2, comparative #1 #4 less/3000, comparative #1 #4 great/10000, intersection #1 #5 #6", "alternatives": "select col:shop, project tbl:shop #1, project none #2, comparative #1 #3 less/3000, comparative #1 #3 great/10000, intersection #1 #4 #5"}
{"input": "What are the minimum and maximum number of products across all the shops? <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select tbl:shop, project col:shop/Number_products #1, aggregate min #2, aggregate max #2, union #3 #4", "alternatives": "select tbl:shop, project col:shop/Number_products #1, aggregate min #2, aggregate max #2, union #4 #3"}
{"input": "What is the average, minimum, and maximum age for all French singers? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:song, comparative #1 #1 equal/France col:song/Country, project col:song/Age #2, aggregate avg #3, aggregate min #3, aggregate max #3, union #4 #5 #6", "alternatives": "select tbl:song, comparative #1 #1 equal/France col:song/Country, aggregate max #3, aggregate avg #3, aggregate min #3, project col:song/Age #2, union #4 #5 #6"}
{"input": "Return the code of the template type that is most commonly used in documents. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Templates, project tbl:Ref_Template_Types #1, group #2 #1, superlative max #1 #3, project col:Ref_Template_Types/Template_Type_Code #4", "alternatives": "select col:Templates, superlative max #1 #3, group #2 #1, project tbl:Ref_Template_Types #1, project col:Ref_Template_Types/Template_Type_Code #4"}
{"input": "Find the average ranking for each player and their first name. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:players, project col:players/ranking #1, group #2 #1, project col:players/first_name #1, union #1 #3", "alternatives": "select col:players, project col:players/ranking #1, group #2 #1, project col:players/first_name #1, union #1 #3 #4"}
{"input": "How many airports do we have? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:airports, aggregate count #1", "alternatives": "select tbl:airports, aggregate count #1"}
{"input": "Show the name and theme for all concerts and the number of singers in each concert. <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select col:song_in_concert, project col:song/Concert_Name #1, project col:song_in_concert/Theme #1, project tbl:song_in_concert #1, group #4 #1, union #2 #3 #5", "alternatives": "select col:concert, project col:concert/concert_Name #1, project col:concert/Theme #1, project tbl:singer_in_concert #1, group #4 #1, union #2 #3 #5"}
{"input": "What are the first names of all players, and their total ranking points? <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:players, project col:players/first_name #1, project col:players/ranking_points #1, group #3 #1, union #2 #4", "alternatives": "select col:players, project col:players/first_name #1, project col:rankings/ranking_points #1, group #3 #1, union #2 #4"}
{"input": "Show all template type codes and the number of documents using each type. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Templates, project tbl:Ref_Template_Types #1, group #2 #1, union #1 #3", "alternatives": "select col:Templates, project tbl:Ref_Template_Types #1, group #2 #1, union #1 #3"}
{"input": "What are the different first names and ages of the students who do have pets? <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Student, comparative #1 #1 tbl:Has_Pets, project col:Student/Age #2, union #3 #4", "alternatives": "select tbl:Student, comparative #1 #1 tbl:Has_Pets, union #2 #3"}
{"input": "How many flights depart from City Aberdeen? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, comparative #1 #1 equal/City Aberdeen col:airports/AirportName, aggregate count #2", "alternatives": "select tbl:flights, comparative #1 #1 equal/Aberdeen col:airports/City, aggregate count #2"}
{"input": "What is the average weight for each type of pet? <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Pets, project col:Pets/weight #1, group #2 #1, union #1 #3", "alternatives": "select tbl:Pets, project col:Pets/weight #1, group #2 #1, union #1 #3"}
{"input": "Show the name of the teacher for the math course. <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select tbl:teacher, project tbl:course #1, comparative #1 #2 equal/Math, project col:teacher/Name #3", "alternatives": "select tbl:teacher, project tbl:course #1, comparative #1 #2greatequal//Math, project col:teacher/Name #3"}
{"input": "Sort all the shops by number products in descending order, and return the name, location and district of each shop. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select tbl:shop, project col:shop/Name #1, project col:shop/Location #1, project col:shop/District #1, union #2 #3 #4, sort #6 #5 descending", "alternatives": "select tbl:shop, project col:shop/Name #1, union #2 #3 #4, project col:shop/District #1, project col:shop/Location #1, sort #6 #5 descending"}
{"input": "How many different results are there for the battles? <tbl> battle ship death </tbl> <col> id name date bulgarian_commander latin_commander result lost_in_battle id name tonnage ship_type location disposition_of_ship caused_by_ship_id id note killed injured </col>", "prediction": "select tbl:battle, project col:battle/result #1, aggregate count #3", "alternatives": "select tbl:battle, project col:battle/result #1, aggregate count #3"}
{"input": "Find the ids of orders which are shipped after 2000-01-01. <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Orders, comparative #1 #1 great/2000-01-01 col:Shipments/shipment_date, project col:Orders/order_id #2", "alternatives": "select tbl:Shipments, comparative #1 #1 great/2000-01-01 col:Shipments/shipment_date, project col:Shipments/order_id #2"}
{"input": "find the code of the country where has the greatest number of players. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:matches, project tbl:players #1, group #2 #1, superlative max #1 #3, project col:matches/country_code #4", "alternatives": "select col:matches, superlative max #1 #3, group #2 #1, project tbl:players #1, project col:matches/country_code #4"}
{"input": "What are the ids and names of the architects who built at least 3 bridges ? <tbl> architect bridge mill </tbl> <col> id name nationality gender architect_id id name location length_meters length_feet architect_id id location name type built_year notes </col>", "prediction": "select tbl:architecture, project tbl:bridge #1, group #2 #1, comparative #1 #3 greatequal/3, project col:architecture/id #4, project col:architecture/name #4, union #5 #6", "alternatives": "select tbl:architecte, project tbl:bridge #1, group #2 #1, comparative #1 #3 greatequal/3, project col:architecture/id #4, project col:architecture/name #4, union #5 #6"}
{"input": "What is the publisher with most number of books? <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select col:book, project tbl:book_club #1, group #2 #1, superlative max #1 #3", "alternatives": "select col:book, project tbl:book #1, group #2 #1, superlative max #1 #3"}
{"input": "Give the flight numbers of flights landing at APG. <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, comparative #1 #1 equal/APG col:airports/AirportName, project tbl:flights #2, project col:flights/FlightNo #3", "alternatives": "select tbl:flights, comparative #1 #1 equal/APG col:airports/AirportName, project tbl:flights #2, project col:flights/FlightNo #3."}
{"input": "What are the names of airports in Aberdeen? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:airports, comparative #1 #1 equal/Aberdeen col:airports/Country, project col:airports/AirportName #2", "alternatives": "select tbl:airports, comparative #1 #1 equal/Aberdeen col:airports/Country, project col:airports/Airportname #2"}
{"input": "How many documents are using the template with type code 'PPT'? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Templates, project tbl:Templates #1, project col:Templates/Template_Type_Code #2, comparative #1 #3 equal/PPT, aggregate count #4", "alternatives": "select tbl:Documents, project tbl:Templates #1, project col:Templates/Template_Type_Code #2, comparative #1 #3 equal/PPT, aggregate count #4"}
{"input": "Show names of teachers that teach at least two courses. <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select tbl:teacher, project tbl:course #1, group #2 #1, comparative #1 #3 greatequal/2, project col:teacher/Name #4", "alternatives": "select col:teacher, project tbl:course #1, group #2 #1, comparative #1 #3 greatequal/2, project col:teacher/Name #4"}
{"input": "Show countries where a singer above age 40 and a singer below 30 are from. <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:song, project tbl:song #1, comparative #1 #2 great/40, comparative #1 #2 less/30, project col:song/Country #3, project col:song/Country #4, project col:song/Country #1, intersection #7 #5 #6", "alternatives": "select tbl:singer, project col:singer/Age #1, comparative #1 #2 great/40, comparative #1 #2 less/30, project col:singer/Country #3, project col:singer/Country #4, project col:singer/Country #1, intersection #6 #5 #6"}
{"input": "Count the number of different templates used for documents. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Templates, comparative #1 #1 none, aggregate count #2", "alternatives": "select tbl:Templates, aggregate count #1"}
{"input": "What is the template type code of the template used by document with the name \"Data base\"? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, project col:Documents/Document_Name #1, comparative #1 #2 equal/Data base, project tbl:Ref_Template_Types #3, project col:Ref_Template_Types/Template_Type_Code #4", "alternatives": "select tbl:Documents, project tbl:Ref_Template_Types #3, comparative #1 #2 equal/Data base, project col:Documents/Document_Name #1, project col:Ref_Template_Types/Template_Type_Code #4"}
{"input": "What is the document id and name with greatest number of paragraphs? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Documents, project tbl:Paragraphs #1, group #2 #1, superlative max #1 #3, project col:Documents/Document_ID #4, project col:Documents/Document_Name #4, union #5 #6", "alternatives": "select tbl:Documents, project tbl:Paragraphs #1, group #2 #1, superlative max #1 #3, project col:Paragraphs/Document_ID #4, project col:Documents/Document_Name #4, union #5 #6"}
{"input": "Show all document names using templates with template type code BK. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Templates, project tbl:Templates #1, project col:Templates/Template_Type_Code #2, comparative #1 #3 equal/BK, project col:Documents/Document_Name #4", "alternatives": "select tbl:Templates, project tbl:Templates #1, comparative #1 #2 equal/BK, project tbl:Documents #3, project col:Documents/Document_Name #4"}
{"input": "What are the names of the customers who bought product \"food\" at least once? <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Customers, project tbl:Orders #1, comparative #1 #2 equal/food, group #3 #1, comparative #1 #4 greatequal/1, project col:Customers/customer_name #5", "alternatives": "select tbl:Customers, comparative #1 #1 equal/food col:Products/product_name, group #3 #1, comparative #1 #4 greatequal/1, project col:Customers/customer_name #5"}
{"input": "What is the hometown of the youngest teacher? <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select tbl:teacher, project col:teacher/Hometown #1, superlative min #1 #2", "alternatives": "select val:teacher, project col:teacher/Hometown #1"}
{"input": "What is the total ticket expense of the visitors whose membership level is 1? <tbl> museum visitor visit </tbl> <col> Museum_ID Name Num_of_Staff Open_Year ID Name Level_of_membership Age Museum_ID visitor_ID Num_of_Ticket Total_spent </col>", "prediction": "select tbl:visit, project col:visit/Level_of_membership #1, comparative #1 #2 equal/1, project col:visit/Total_spent #3, aggregate sum #4", "alternatives": "select tbl:visit, aggregate sum #4, comparative #1 #2less//1, project col:visit/Total_spent #3, project col:visit/Level_of_membership #1"}
{"input": "What is the code of airport that has fewest number of flights? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:airports, project tbl:flights #1, group #2 #1, superlative min #1 #3, project col:airports/AirportCode #4", "alternatives": "select tbl:airports, group #2 #1, project tbl:flights #1, superlative min #1 #3, project col:airports/AirportCode #4"}
{"input": "List the name, nationality and id of all male architects ordered by their names lexicographically. <tbl> architect bridge mill </tbl> <col> id name nationality gender architect_id id name location length_meters length_feet architect_id id location name type built_year notes </col>", "prediction": "select tbl:architect, comparative #1 #1 equal/M col:architect/gender, project col:architect/name #2, project col:architect/nationality #2, project col:architect/architect_id #2, union #3 #4 #5, sort #7 #6", "alternatives": "select tbl:architect, project col:architect/name #2, comparative #1 #1greatequal//M col:architect/gender, project col:architect/nationality #2, project col:architect/architect_id #2, union #3 #4 #5, sort #7 #6"}
{"input": "Which customers have both \"On Road\" and \"Shipped\" as order status? List the customer ids. <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Customers, project tbl:Orders #1, comparative #1 #2 equal/On Road, comparative #1 #2 equal/Shipped, intersection #1 #3 #4, project col:Customers/customer_id #5", "alternatives": "select tbl:Customers, project tbl:Orders #1, comparative #1 #2 equal/On Road, comparative #1 #2 equal/Shipped, intersection #1 #3 #5, project col:Customers/customer_id #6"}
{"input": "What are the students' first names who have both cats and dogs as pets? <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Student, project tbl:Has_Pets #1, comparative #1 #2 equal/Cat, comparative #1 #2 equal/Dog, intersection #1 #3 #4, project col:Student/Fname #5", "alternatives": "select tbl:Student, project tbl:Has_Pets #1, comparative #1 #2 equal/Katz, comparative #1 #2 equal/Dog, intersection #1 #3 #4, project col:Student/Fname #5"}
{"input": "Find the invoice numbers which are created before 1989-09-03 or after 2007-12-25. <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select col:Invoices, comparative #1 #1 great/2007-12-25 col:Invoices/invoice_date, comparative #1 #1 less/1989-09-03 col:Invoices/invoice_number, union #2 #3", "alternatives": "select tbl:Invoices, project col:Invoices/invoice_date #1, comparative #1 #2 less/1989-09-03, comparative #1 #2 great/2007-12-25, union #3 #4, project col:Invoices/invoice_number #5"}
{"input": "What is the year that had the most concerts? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select col:concert, project tbl:concert #1, group #2 #1, superlative max #1 #3", "alternatives": "select col:concert, project tbl:concert #1, group #2 #1, superlative max #1 #3"}
{"input": "Find the id of the customers who have order status both \"On Road\" and \"Shipped\". <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Customers, project tbl:Orders #1, comparative #1 #2 equal/On Road, comparative #1 #2 equal/Shipped, intersection #1 #3 #4, project col:Customers/customer_id #5", "alternatives": "select tbl:Customers, project tbl:Orders #1, comparative #1 #2 equal/Shipped, comparative #1 #2 equal/On Road, intersection #1 #3 #4, project col:Customers/customer_id #5"}
{"input": "Return the ids corresponding to templates with the description 'Presentation'. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Templates, project col:Templates/Template_Description #1, comparative #1 #2 equal/Presentation, project col:Templates/Template_ID #3", "alternatives": "select tbl:Templates, project col:Templates/Template_Description #1, comparative #1 #2lessequal//Presentation, project col:Templates/Template_ID #3"}
{"input": "Find the id and weight of all pets whose age is older than 1. <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Pets, project col:Pets/pet_age #1, comparative #1 #2 great/1, project col:Pets/PetID #3, project col:Pets/weight #3, union #4 #5", "alternatives": "select tbl:Pets, project col:Pets/pet_age #1, comparative #1 #2 great/1, project col:Pets/PetID #3, project col:Pets/weight #3, union #4 #5"}
{"input": "Find the first name and country code of the player who did the most number of tours. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:players, project tbl:matches #1, group #2 #1, superlative max #1 #3, project col:players/first_name #4, project col:players/country_code #4, union #5 #6", "alternatives": "select tbl:players, project tbl:tourists #1, group #2 #1, superlative max #1 #3, project col:players/first_name #4, project col:players/country_code #4, union #5 #6"}
{"input": "Which employee received the biggest bonus? Give me the employee name. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select tbl:employee, project col:employee/Bonus #1, superlative max #1 #2, project col:employee/Name #3", "alternatives": "select tbl:employee, project col:evaluation/Bonus #1, superlative max #1 #2, project col:employee/Name #3"}
{"input": "Find number of pets owned by students who are older than 20. <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Student, comparative #1 #1 great/20 col:Student/Age, project tbl:Has_Pets #2, aggregate count #3", "alternatives": "select tbl:Student, project col:Student/StuID #1, comparative #1 #2 great/20, project tbl:Has_Pets #3, aggregate count #4"}
{"input": "List all company names with a book published by Alyson. <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select col:book_company, project tbl:book_company #1, comparative #2 #1 equal/Alyson, project col:company/Company_name #3", "alternatives": "select col:book_company, project tbl:book_company #1, comparative #2 #1great//Alyson, project col:company/Company_name #3"}
{"input": "What are the names, countries, and ages for every singer in descending order of age? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:song, project col:song/Song_Name #1, project col:song/Country #1, project col:song/Age #1, union #2 #3 #4, sort #6 #5 descending", "alternatives": "select tbl:song, sort #6 #5 descending, project col:song/Country #1, project col:song/Age #1, union #2 #3 #4, project col:song/Song_Name #1"}
{"input": "What are flight numbers of flights arriving at Airport \"APG\"? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, comparative #1 #1 equal/APG col:airports/AirportName, project tbl:flights #2, aggregate col:flights/FlightNo #3", "alternatives": "select val:airports, project tbl:flights #1, project col:flights/FlightNo #2"}
{"input": "What are the name and results of the battles when the bulgarian commander is not 'Boril' <tbl> battle ship death </tbl> <col> id name date bulgarian_commander latin_commander result lost_in_battle id name tonnage ship_type location disposition_of_ship caused_by_ship_id id note killed injured </col>", "prediction": "select tbl:battle, project tbl:bulgarian_commander #1, comparative #1 #2 notequal/Boril, project col:battle/name #3, project col:battle/result #3, union #4 #5", "alternatives": "select tbl:battle, project tbl:bulgarian_commander #1, project col:battle/result #3, project col:battle/name #3, comparative #1 #2 notequal/Boril, union #4 #5"}
{"input": "Find the number of left handed winners who participated in the WTA Championships. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:matches, comparative #1 #1 equal/left col:matches/winner_hand, aggregate count #2", "alternatives": "select val:matches, project tbl:players #1, project col:players/left #1, aggregate count #3"}
{"input": "What are the ids and names of each document, as well as the number of paragraphs in each? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Documents, project col:Documents/Document_ID #1, project col:Documents/Document_Name #1, project tbl:Paragraphs #1, group #4 #1, union #2 #3 #5", "alternatives": "select col:Documents, project col:Documents/Document_ID #1, project col:Documents/Document_Name #1, project tbl:Pagraphs #1, group #4 #1, union #2 #3 #5"}
{"input": "For each product, show its name and the number of times it was ordered. <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select col:Products, project col:Products/product_name #1, project tbl:Order_Items #1, group #3 #1, union #2 #4", "alternatives": "select col:Products, project col:Products/product_name #1, union #2 #4, group #3 #1, project tbl:Order_Items #1"}
{"input": "Show countries where a singer above age 40 and a singer below 30 are from. <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:song, project tbl:song #1, comparative #1 #2 great/40, comparative #1 #2 less/30, project col:song/Country #3, project col:song/Country #4, project col:song/Country #1, intersection #7 #5 #6", "alternatives": "select tbl:song, project tbl:song #1, comparative #1 #2 less/30, comparative #1 #2 great/40, project col:song/Country #3, project col:song/Country #4, project col:song/Country #1, intersection #7 #5 #6"}
{"input": "Find all airlines that have fewer than 200 flights. <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select col:airlines, project tbl:flights #1, group #2 #1, comparative #1 #3 less/200", "alternatives": "select col:airlines, project tbl:flights #1, group #2 #1, comparative #1 #3 greatequal/200"}
{"input": "Find the name of the customer who made the most orders. <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Customers, project tbl:Orders #1, group #2 #1, superlative max #1 #3, project col:Customers/customer_name #4", "alternatives": "select tbl:Customers, project tbl:Orders #1, superlative max #1 #3, group #2 #1, project col:Customers/customer_name #4"}
{"input": "For each hometown, how many teachers are there? <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select col:teacher, project tbl:teacher #1, group #2 #1, union #1 #3", "alternatives": "select col:teacher, project tbl:teacher #1, group #2 #1, union #1 #3"}
{"input": "How many different results are there for the battles? <tbl> battle ship death </tbl> <col> id name date bulgarian_commander latin_commander result lost_in_battle id name tonnage ship_type location disposition_of_ship caused_by_ship_id id note killed injured </col>", "prediction": "select tbl:battle, project col:battle/result #1, aggregate count #3", "alternatives": "select tbl:battle, aggregate count #2"}
{"input": "What is the template type code for template type description \"Book\". <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Ref_Template_Types, comparative #1 #1 equal/Book col:Ref_Template_Types/Template_Type_Description, project col:Ref_Template_Type_Types/Template_Type_Type_Code #2", "alternatives": "select tbl:Ref_Template_Types, project col:Ref_Template_Types/Template_Type_Description #1, comparative #1 #2 equal/Book, project col:Ref_Template_Types/Template_Type_Code #3"}
{"input": "Which airlines have departing flights from both APG and CVO airports? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select col:airlines, project tbl:flights #1, comparative #1 #2 equal/APG, comparative #1 #2 equal/CVO, intersection #1 #3 #4", "alternatives": "select col:airlines, project tbl:flights #1, comparative #1 #2 equal/APG, comparative #1 #2 equal/CVO, intersection #1 #3 #4"}
{"input": "Where is the youngest teacher from? <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select val:teacher, project col:teacher/Age #1, superlative min #1 #2", "alternatives": "select val:teacher, project col:teacher/Age #1, superlative min #1 #2."}
{"input": "Find the average and maximum age for each type of pet. <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select col:Pets, project col:Pets/pet_age #1, group #2 #1, aggregate avg #3, aggregate max #3, union #4 #5", "alternatives": "select col:Pets, project col:Pets/pet_age #1, aggregate max #3, aggregate avg #3, group #2 #1, union #4 #5"}
{"input": "What are the dates of the orders made by the customer named \"Jeramie\"? <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Customers, comparative #1 #1 equal/Jeramie col:Customers/customer_name, project tbl:Orders #2, project col:Orders/order_date #3", "alternatives": "select tbl:Customers, project col:Orders/date_order_placed #1, comparative #2 #1 equal/Jeramie, project col:Orders/order_status #3"}
{"input": "What are flight numbers of flights departing from City \"Aberdeen \"? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, comparative #1 #1 equal/Aberdeen col:airports/City, project tbl:flights #2, project col:flights/FlightNo #3", "alternatives": "select tbl:flights, comparative #1 #1less//Aberdeen col:airports/City, project tbl:flights #2, project col:flights/FlightNo #3"}
{"input": "What are the death and injury situations caused by the ship with tonnage 't'? <tbl> battle ship death </tbl> <col> id name date bulgarian_commander latin_commander result lost_in_battle id name tonnage ship_type location disposition_of_ship caused_by_ship_id id note killed injured </col>", "prediction": "select tbl:ship, project col:ship/tonnage #1, comparative #1 #2 equal/t, project col:during/death #3, project col:injury/injury #3, union #4 #5", "alternatives": "select tbl:ship, project col:ship/tonnage #1, comparative #1 #2lessequal//t, project col:injury/injury #3, project col:during/death #3, union #4 #5"}
{"input": "Count the number of United Airlines flights arriving in ASY Airport. <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, comparative #1 #1 equal/ASY Airport col:airports/AirportName, aggregate count #2", "alternatives": "select tbl:flights, comparative #1 #1 equal/United Airlines col:airlines/Airline, comparative #2 #2 equal/ASY col:flights/DestAirport, aggregate count #3"}
{"input": "Which city and country is the Alton airport at? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select val:airports, project col:airports/City #1, project col:airports/Country #1, union #2 #3", "alternatives": "select tbl:airports, project col:airports/City #1, project col:airports/Country #1, union #2 #3."}
{"input": "find the id, name and age for visitors who visited some museums more than once. <tbl> museum visitor visit </tbl> <col> Museum_ID Name Num_of_Staff Open_Year ID Name Level_of_membership Age Museum_ID visitor_ID Num_of_Ticket Total_spent </col>", "prediction": "select tbl:visit, project tbl:visit #1, group #2 #1, comparative #1 #3 great/1, project col:visit/Visit_ID #4, project col:visit/Name #4, project col:visit/Age #4, union #5 #6 #7", "alternatives": "select tbl:visit, project tbl:visit #1, group #2 #1, comparative #1 #3 great/1, project col:visit/Age #4, project col:visit/Name #4, project col:visit/Visit_ID #4, union #5 #6 #7"}
{"input": "Which airlines have less than 200 flights? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select col:airlines, project tbl:flights #1, group #2 #1, comparative #1 #3 less/200", "alternatives": "select col:airlines, project tbl:flights #1, group #2 #1, comparative #1 #3 less/2"}
{"input": "Find the number of left handed winners who participated in the WTA Championships. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:matches, comparative #1 #1 equal/left col:matches/winner_hand, aggregate count #2", "alternatives": "select col:matches, comparative #1 #1 equal/L col:matches/winner_hand, comparative #2 #2 equal/WTA Championships col:matches/tourney_name, aggregate count #3"}
{"input": "Which directors had a movie both in the year 1999 and 2000? <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select col:film, project tbl:film #1, comparative #2 #2 equal/1999 col:film/Year, comparative #2 #2 equal/2000 col:film/Year, intersection #1 #3 #4", "alternatives": "select col:film, project tbl:film #1, comparative #2 #2 equal/2000 col:film/Year, comparative #2 #2 equal/1999 col:film/Year, intersection #1 #3 #4"}
{"input": "Return the type code of the template type that the most templates belong to. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Templates, project tbl:Ref_Template_Types #1, group #2 #1, superlative max #1 #3, project col:Ref_Template_Types/Template_Type_Code #4", "alternatives": "select col:Types, project tbl:Templates #1, group #2 #1, superlative max #1 #3, project col:Templates/Template_Type_Code #4"}
{"input": "Which year has most number of concerts? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select col:concert, project tbl:concert #1, group #2 #1, superlative max #1 #3", "alternatives": "select col:concert, project tbl:concert #1, group #2 #1, superlative max #1 #3"}
{"input": "Find the total amount of bonus given in all the evaluations. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select tbl:evaluation, project col:evaluation/Bonus #1, aggregate sum #2", "alternatives": "select col:evaluation, project col:evaluation/Bonus #1, aggregate sum #2"}
{"input": "Find the total number of tours for each ranking date. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:rankings, project tbl:turnouts #1, group #2 #1, union #1 #3", "alternatives": "select col:rankings, project col:rankings/tours #1, group #2 #1, union #1 #3"}
{"input": "What are all the company names that have a book published by Alyson? <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select col:book_club, project tbl:book_club #1, comparative #1 #2 equal/Alyson, project col:company/Company_name #3", "alternatives": "select val:book_club, project tbl:book_club #1, project col:culture_company/Company_name #2"}
{"input": "Show names of teachers and the number of courses they teach. <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select col:teacher, project col:teacher/Name #1, project tbl:course #1, group #3 #1, union #2 #4", "alternatives": "select col:teacher, project col:teacher/Name #1, project tbl:course_arrange #1, group #3 #1, union #2 #4"}
{"input": "Count the number of documents that use the PPT template type. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, project tbl:Ref_Template_Types #1, comparative #1 #2 equal/PPT, aggregate count #3", "alternatives": "select tbl:Documents, comparative #1 #1 equal/PPT col:Documents/Template_Type_Code, aggregate count #2"}
{"input": "What are the details for the paragraph that includes the text 'Korea'? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Paragraphs, project col:Paragraphs/Paragraph_Text #1, comparative #1 #2 like%Korea%, project col:Paragraphs/Paragraph_Details #3", "alternatives": "select tbl:Paragraphs, project none #1, comparative #1 #2 like%Korea%, project col:Paragraphs/Paragraph_Details #3"}
{"input": "Which airlines have at least 10 flights? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select col:airlines, project tbl:flights #1, group #2 #1, comparative #1 #3 greatequal/10", "alternatives": "select col:airlines, project tbl:flights #1, group #2 #1, comparative #1 #3 great/10"}
{"input": "What are the different template type codes, and how many templates correspond to each? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Templates, project col:Templates/Template_Type_Code #1, group #1 #2, union #2 #3", "alternatives": "select tbl:Templates, project col:Templates/Template_Type_Code #1, group #1 #3, union #3 #4"}
{"input": "Find the first name and gender of student who have more than one pet. <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Student, project tbl:Has_Pets #1, group #2 #1, comparative #1 #3 great/1, project col:Student/Fname #4, project col:Student/Sex #4, union #5 #6", "alternatives": "select tbl:Student, comparative #1 #3 great/1, group #2 #1, project tbl:Has_Pets #1, project col:Student/Fname #4, project col:Student/Sex #4, union #5 #6"}
{"input": "Give the flight numbers of flights leaving from Aberdeen. <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, comparative #1 #1 equal/Aberdeen col:airports/AirportName, project tbl:flights #2, project col:flights/FlightNo #3", "alternatives": "select tbl:flights, comparative #1 #1 equal/Aberdeen col:airports/City, project col:flights/FlightNo #2"}
{"input": "Give the flight numbers of flights leaving from Aberdeen. <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, comparative #1 #1 equal/Aberdeen col:airports/AirportName, project tbl:flights #2, project col:flights/FlightNo #3", "alternatives": "select tbl:flights, comparative #1 #1 equal/Aberdeen col:airports/AirportName, project tbl:flights #2, project col:flights/FlightNo #3."}
{"input": "Return the id of the document with the fewest paragraphs. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, project tbl:Paragraphs #1, group #2 #1, superlative min #1 #3, project col:Documents/Document_ID #4", "alternatives": "select tbl:Documents, project col:Documents/Document_ID #4, group #2 #1, superlative min #1 #3, project tbl:Paragraphs #1"}
{"input": "Show the document id with paragraph text 'Brazil' and 'Ireland'. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Documents, project tbl:Paragraphs #1, comparative #1 #2 equal/Brazil, comparative #1 #2 equal/Ireland, intersection #1 #3 #4, project col:Documents/Document_ID #5", "alternatives": "select tbl:Documents, comparative #1 #1 equal/Brazil col:Paragraphs/Paragraph_Text, comparative #1 #1 equal/Ireland col:Paragraphs/Paragraph_Text, intersection #1 #2 #3, project col:Documents/Document_ID #4"}
{"input": "Show all template type codes with less than three templates. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Templates, project tbl:Templates #1, group #2 #1, comparative #1 #3 less/3", "alternatives": "select col:Templates, project tbl:Templates #1, group #2 #1, comparative #1 #3 less-3"}
{"input": "What are the names, countries, and ages for every singer in descending order of age? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:song, project col:song/Song_Name #1, project col:song/Country #1, project col:song/Age #1, union #2 #3 #4, sort #6 #5 descending", "alternatives": "select tbl:singer, project col:singer/Name #1, project col:singer/Country #1, project col:singer/Age #1, union #2 #3 #4, sort #6 #5 descending"}
{"input": "Show all document names using templates with template type code BK. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Templates, project tbl:Templates #1, project col:Templates/Template_Type_Code #2, comparative #1 #3 equal/BK, project col:Documents/Document_Name #4", "alternatives": "select tbl:Documents, project tbl:Templates #1, project col:Templates/Template_Type_Code #2, comparative #1 #3 equal/BK, project col:Documents/Document_Name #4"}
{"input": "What are the ids and names of each document, as well as the number of paragraphs in each? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Documents, project col:Documents/Document_ID #1, project col:Documents/Document_Name #1, project tbl:Paragraphs #1, group #4 #1, union #2 #3 #5", "alternatives": "select col:Documents, group #4 #1, project col:Documents/Document_Name #1, project tbl:Paragraphs #1, project col:Documents/Document_ID #1, union #2 #3 #5"}
{"input": "Find the highest rank of losers in all matches. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:matches, project col:matches/loser_rank #1, group #2 #1, superlative max #1 #3", "alternatives": "select tbl:matches, project col:matches/loser_rank #1, group #2 #1, superlative max #1 #3"}
{"input": "What is the airport code of the airport with the most flights? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select col:airports, project tbl:flights #1, group #2 #1, superlative max #1 #3, project col:airports/AirportCode #4", "alternatives": "select col:airports, project tbl:flights #1, group #2 #1, superlative max #1 #3, aggregate col:airports/AirportCode #4"}
{"input": "Find the id and weight of all pets whose age is older than 1. <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Pets, project col:Pets/pet_age #1, comparative #1 #2 great/1, project col:Pets/PetID #3, project col:Pets/weight #3, union #4 #5", "alternatives": "select tbl:Pets, union #4 #5, comparative #1 #2 less/1, project col:Pets/PetID #3, project col:Pets/weight #3, project col:Pets/pet_age #1"}
{"input": "What are the names of the teachers and the courses they teach in ascending alphabetical order by the name of the teacher? <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select tbl:teacher, project col:teacher/Name #1, project col:course/Name #1, union #2 #3, sort #4 #2 ascending", "alternatives": "select tbl:teacher, project tbl:course_arrange #1, project col:teacher/Name #1, project col:course/Course #2, union #3 #4, sort #5 #3 ascending"}
{"input": "Show names of teachers that teach at least two courses. <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select tbl:teacher, project tbl:course #1, group #2 #1, comparative #1 #3 greatequal/2, project col:teacher/Name #4", "alternatives": "select tbl:teacher, project tbl:course #1, project col:teacher/Name #4, comparative #1 #3 greatequal/2, group #2 #1"}
{"input": "Which of the mill names contains the french word 'Moulin'? <tbl> architect bridge mill </tbl> <col> id name nationality gender architect_id id name location length_meters length_feet architect_id id location name type built_year notes </col>", "prediction": "select tbl:mill, project col:mill/name #1, comparative #2 #2 like%Moulin% col:mill/name", "alternatives": "select tbl:mill, project col:mill/name #1, comparative #1 #2 like%Moulin%"}
{"input": "Which shop has the most employees? Give me the shop name. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select tbl:shop, project tbl:employee #1, group #2 #1, superlative max #1 #3, project col:shop/Name #4", "alternatives": "select col:hiring, project none #1, group #2 #1, superlative max #1 #3, project col:shop/Name #4"}
{"input": "Find the average number of staff working for the museums that were open before 2009. <tbl> museum visitor visit </tbl> <col> Museum_ID Name Num_of_Staff Open_Year ID Name Level_of_membership Age Museum_ID visitor_ID Num_of_Ticket Total_spent </col>", "prediction": "select tbl:museum, comparative #1 #1 less/2009 col:museum/Open_Year, project col:museum/Num_of_Staff #2, group #3 #2, aggregate avg #4", "alternatives": "select tbl:museum, comparative #1 #1 lessequal/2009 col:museum/Open_Year, project col:museum/Num_of_Staff #2, aggregate avg #4, group #3 #2"}
{"input": "What are the codes of template types that have fewer than 3 templates? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Templates, project tbl:Ref_Template_Types #1, group #2 #1, comparative #1 #3 less/3, project col:Ref_Template_Types/Template_Type_Code #4", "alternatives": "select col:Templates, project tbl:Ref_Template_Types #1, comparative #1 #3 greatequal/3, group #2 #1, project col:Ref_Template_Types/Template_Type_Code #4"}
{"input": "What are the id and name of the museum visited most times? <tbl> museum visitor visit </tbl> <col> Museum_ID Name Num_of_Staff Open_Year ID Name Level_of_membership Age Museum_ID visitor_ID Num_of_Ticket Total_spent </col>", "prediction": "select tbl:museum, project tbl:visit #1, group #2 #1, superlative max #1 #3, project col:visit/Museum_ID #4, project col:museum/Name #4, union #5 #6", "alternatives": "select tbl:museum, project tbl:visit #1, union #5 #6, superlative max #1 #3, project col:visit/Museum_ID #4, project col:museum/Name #4, group #2 #1"}
{"input": "What are the students' first names who have both cats and dogs as pets? <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Student, project tbl:Has_Pets #1, comparative #1 #2 equal/Cat, comparative #1 #2 equal/Dog, intersection #1 #3 #4, project col:Student/Fname #5", "alternatives": "select tbl:Student, project tbl:Has_Pets #1, comparative #1 #2 equal/Dog, comparative #1 #2 equal/Cat, intersection #1 #3 #4, project col:Student/Fname #5"}
{"input": "What are the names and locations of the stadiums that had concerts that occurred in both 2014 and 2015? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:stadium, project tbl:concert #1, comparative #1 #2 equal/2014, comparative #1 #2 equal/2015, intersection #1 #3 #4, project col:stadium/Name #5, project col:stadium/Location #5, union #6 #7", "alternatives": "select tbl:stadium, project tbl:concert #1, comparative #1 #2 equal/2014, comparative #1 #2 equal/1500, intersection #1 #3 #4, project col:stadium/Name #5, project col:stadium/Location #5, union #6 #7."}
{"input": "Find the number of shops in each location. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select col:shop, project tbl:shop #1, group #2 #1, union #1 #3", "alternatives": "select col:shop, project tbl:shop #2, group #3 #2, union #1 #4"}
{"input": "How many movie directors are there? <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select tbl:film, aggregate count #1", "alternatives": "select tbl:video, aggregate count #1"}
{"input": "Return the number of United Airlines flights leaving from AHD Airport. <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, comparative #1 #1 equal/AHD Airport col:airports/AirportName, aggregate count #2", "alternatives": "select tbl:flights, comparative #1 #1 equal/United Airlines col:airlines/Airline, comparative #2 #2 equal/AHD col:flights/SourceAirport, aggregate count #3"}
{"input": "List the most common hometown of teachers. <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select tbl:teacher, project col:teacher/Hometown #1, group #1 #2, superlative max #2 #3", "alternatives": "select tbl:teacher, project col:teacher/Hometown #1, group #1 #2, superlative max #2 #3"}
{"input": "How many airlines are from USA? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:airlines, comparative #1 #1 equal/USA col:airlines/Country, aggregate count #2", "alternatives": "select tbl:airlines, comparative #1 #1greatequal//USA col:airlines/Country, aggregate count #2"}
{"input": "What is the first name and country code of the player with the most tours? <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:players, project col:matches/turns #1, group #2 #1, superlative max #1 #3, project col:players/first_name #4, project col:players/country_code #4, union #5 #6", "alternatives": "select tbl:players, project col:matches/turns #1, union #5 #6, superlative max #1 #3, project col:players/first_name #4, project col:players/country_code #4, group #2 #1"}
{"input": "Find the manager name and district of the shop whose number of products is the largest. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select tbl:shop, project col:shop/Number_products #1, group #2 #1, superlative max #1 #3, project col:shop/Manager_name #4, project col:shop/District #4, union #5 #6", "alternatives": "select tbl:shop, project col:shop/Number_products #1, group #2 #1, superlative max #1 #3, union #5 #6, project col:shop/District #4, project col:shop/Manager_name #4"}
{"input": "find the id, name and age for visitors who visited some museums more than once. <tbl> museum visitor visit </tbl> <col> Museum_ID Name Num_of_Staff Open_Year ID Name Level_of_membership Age Museum_ID visitor_ID Num_of_Ticket Total_spent </col>", "prediction": "select tbl:visit, project tbl:visit #1, group #2 #1, comparative #1 #3 great/1, project col:visit/Visit_ID #4, project col:visit/Name #4, project col:visit/Age #4, union #5 #6 #7", "alternatives": "select col:visit, project tbl:visitor #1, group #2 #1, comparative #1 #3 great/1, project col:visitor/ID #4, project col:visitor/Name #4, project col:visitor/Age #4, union #5 #6 #7"}
{"input": "List the names of teachers in ascending order of age. <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select tbl:teacher, project col:teacher/Name #1, project col:teacher/Age #1, sort #2 #3 ascending", "alternatives": "select tbl:teacher, project col:teacher/Name #1, project col:teacher/Age #1, sort #2 #3 ascending"}
{"input": "What are the template ids of any templates used in more than a single document? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Templates, project tbl:Documents #1, group #2 #1, comparative #1 #3 great/1, project col:Templates/Template_ID #4", "alternatives": "select col:Templates, project tbl:Documents #1, group #2 #1, comparative #1 #3 great/1, project col:Templates/Template_ID #4."}
{"input": "What are the template ids with template type description \"Presentation\". <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Ref_Template_Types, project tbl:Ref_Template_Types #1, comparative #1 #2 equal/Presentation, project col:Ref_Template_Types/Template_Type_Description #3, project col:Ref_Template_Types/Template_ID #4", "alternatives": "select col:Templates, project tbl:Templates #1, comparative #1 #2 equal/Presentation"}
{"input": "How many players are there for each hand type? <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:players, project tbl:players #1, group #2 #1, union #1 #3", "alternatives": "select col:players, project tbl:players #1, group #2 #1, union #1 #3 none"}
{"input": "Find the abbreviation and country of the airline that has fewest number of flights? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:airlines, project tbl:flights #1, group #2 #1, superlative min #1 #3, project col:airlines/Airline #4, project col:airlines/Country #4, union #5 #6", "alternatives": "select tbl:airlines, project tbl:flights #1, project col:airlines/Airline #4, superlative min #1 #3, group #2 #1, project col:airlines/Country #4, union #5 #6"}
{"input": "What is the placement date of the order whose invoice number is 10? <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select col:Orders, comparative #1 #1 equal/10 col:Invoices/invoice_number, project col:Orders/date_order_placed #2", "alternatives": "select tbl:Orders, comparative #1 #1 equal/10 col:Invoices/invoice_number, project col:Orders/date_order_placed #2."}
{"input": "Which airlines have at least 10 flights? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select col:airlines, project tbl:flights #1, group #2 #1, comparative #1 #3 greatequal/10", "alternatives": "select col:airlines, project tbl:flights #1, group #2 #1, comparative #1 #3 great/10"}
{"input": "What is the best rank of losers across all matches? <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:matches, project col:matches/loser_rank #1, group #2 #1, superlative max #1 #3", "alternatives": "select tbl:matches, project col:matches/loser_rank #1, group #2 #1, superlative max #1 #3"}
{"input": "Find the distinct details of invoices which are created before 1989-09-03 or after 2007-12-25. <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Invoices, comparative #1 #1 less/1989-09-03 col:Invoices/invoice_date, comparative #1 #1 great/2007-12-25 col:Invoices/invoice_date, union #2 #3, project col:Invoices/invoice_details #4", "alternatives": "select tbl:Invoices, comparative #1 #1 great/2007-12-25 col:Invoices/invoice_date, comparative #1 #1 less/1989-09-03 col:Invoices/invoice_date, union #2 #3, project col:Invoices/invoice_details #4"}
{"input": "What are the ids of the students who do not own cats as pets? <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Student, comparative #1 #1 equal/Kat col:Has_Pets/pet_type, discard #1 #2, project col:Student/StuID #3", "alternatives": "select tbl:Student, comparative #1 #1greatequal//Kat col:Has_Pets/pet_type, discard #1 #2, project col:Student/StuID #3"}
{"input": "What are airlines that have flights arriving at airport 'AHD'? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select col:airlines, project tbl:flights #1, comparative #1 #2 equal/AHD, project col:airlines/Airline #3", "alternatives": "select col:airlines, project tbl:flights #1, project col:flights/DestAirport #2, comparative #1 #3 equal/AHD"}
{"input": "Which shops' number products is above the average? Give me the shop names. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select tbl:shop, project col:shop/Number_products #1, aggregate avg #2, comparative #1 #2 great/#3, project col:shop/Name #4", "alternatives": "select tbl:shop, project col:shop/Number_products #1, group #2 #1, aggregate avg #3, comparative #1 #3 great/#4, project col:shop/Name #5"}
{"input": "find the id, name and age for visitors who visited some museums more than once. <tbl> museum visitor visit </tbl> <col> Museum_ID Name Num_of_Staff Open_Year ID Name Level_of_membership Age Museum_ID visitor_ID Num_of_Ticket Total_spent </col>", "prediction": "select tbl:visit, project tbl:visit #1, group #2 #1, comparative #1 #3 great/1, project col:visit/Visit_ID #4, project col:visit/Name #4, project col:visit/Age #4, union #5 #6 #7", "alternatives": "select tbl:visit, project tbl:visit #1, group #2 #1, comparative #1 #3 lessequal/1, project col:visit/Age #4, project col:visit/Name #4, project col:visit/Visit_ID #4, union #5 #6 #7"}
{"input": "What is the average age of the visitors whose membership level is not higher than 4? <tbl> museum visitor visit </tbl> <col> Museum_ID Name Num_of_Staff Open_Year ID Name Level_of_membership Age Museum_ID visitor_ID Num_of_Ticket Total_spent </col>", "prediction": "select tbl:visit, project col:visit/Level_of_membership #1, comparative #1 #2 notequal/4, project col:visit/Age #3, aggregate avg #4", "alternatives": "select tbl:visit, project col:visit/Level_of_membership #1, comparative #1 #2 notequal/4, project col:visit/Age #3, aggregate avg #5"}
{"input": "How many 'United Airlines' flights depart from Airport 'AHD'? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, comparative #1 #1 equal/United Airlines col:airports/AirportName, aggregate count #2", "alternatives": "select tbl:flights, comparative #1 #1great//United Airlines col:airports/AirportName, aggregate count #2"}
{"input": "What are the names, themes, and number of singers for every concert? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:song_in_concert, project col:song/Concert_Name #1, project col:song/Theme #1, project tbl:song_in_concert #1, group #4 #1, union #2 #3 #5", "alternatives": "select col:song_in_concert, project col:song/Song_Name #1, project col:song/Theme #1, project tbl:song_in_concert #1, group #4 #1, union #2 #3 #5"}
{"input": "List the airport code and name in the city of Anthony. <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:airports, project col:airports/AirportCode #1, project col:airports/AirportName #1, comparative #2 #3 equal/Anthony, union #2 #4", "alternatives": "select tbl:airports, comparative #1 #1 equal/Anthony col:airports/City, project col:airports/AirportCode #2, project col:airports/AirportName #2, union #3 #4"}
{"input": "Find the name of the employee who got the highest one time bonus. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select tbl:employee, project col:employee/Bonus #1, superlative max #1 #2, project col:employee/Name #3", "alternatives": "select tbl:employee, project col:evaluation/Bonus #1, superlative max #1 #2, project col:employee/Name #3"}
{"input": "Find all airlines that have at least 10 flights. <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select col:airlines, project tbl:flights #1, group #2 #1, comparative #1 #3 greatequal/10", "alternatives": "select col:airlines, project tbl:flights #1, group #2 #1, comparative #1 #3 great/10"}
{"input": "find the names of loser and winner who played in the match with greatest number of minutes. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:matches, project col:matches/match_number #1, group #2 #1, superlative max #1 #3, project tbl:players #4, project col:players/loser_name #5, project col:players/winner_name #5, union #6 #7", "alternatives": "select tbl:matches, project col:matches/match_number #1, group #2 #1, superlative max #1 #3, project tbl:players #4, project col:players/loser_name #5, project col:players/winner_name #5, union #7 #6"}
{"input": "What are the template ids with template type description \"Presentation\". <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Ref_Template_Types, project tbl:Ref_Template_Types #1, comparative #1 #2 equal/Presentation, project col:Ref_Template_Types/Template_Type_Description #3, project col:Ref_Template_Types/Template_ID #4", "alternatives": "select tbl:Ref_Template_Types, project col:Ref_Template_Types/Template_Type_Description #3, comparative #1 #2 equal/Presentation, project tbl:Ref_Template_Types #1, project col:Ref_Template_Types/Template_ID #4"}
{"input": "List the name and date the battle that has lost the ship named 'Lettice' and the ship named 'HMS Atalanta' <tbl> battle ship death </tbl> <col> id name date bulgarian_commander latin_commander result lost_in_battle id name tonnage ship_type location disposition_of_ship caused_by_ship_id id note killed injured </col>", "prediction": "select tbl:ship, comparative #1 #1 equal/Lettice col:ship/name, comparative #1 #1 equal/HMS Atalanta col:ship/name, project tbl:battle #2, project col:battle/name #3, project col:battle/date #3, union #4 #5", "alternatives": "select tbl:ship, comparative #1 #1 equal/Lettice col:ship/name, comparative #1 #1 equal/HMS Atalanta col:ship/name, intersection #1 #2 #3, project col:battle/name #4, project col:battle/date #4, union #5 #6"}
{"input": "Which template type code is used by most number of documents? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Templates, project tbl:Documents #1, group #2 #1, superlative max #1 #3", "alternatives": "select col:Creatives, project tbl:Documents #1, group #2 #1, superlative max #1 #3"}
{"input": "What is the version number and template type code for the template with version number later than 5? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Templates, project col:Templates/Version_Number #1, comparative #1 #2 great/5, project col:Templates/Version_Number #3, project col:Templates/Template_Type_Code #3, union #4 #5", "alternatives": "select tbl:Templates, project col:Templates/Version_Number #1, comparative #1 #2 great/5, project col:Ref_Template_Types/Template_Type_Code #3, project col:Ref_Template_Types/Version_Number #4, union #5 #6"}
{"input": "For each customer who has at least two orders, find the customer name and number of orders made. <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select col:Customers, project tbl:Orders #1, group #2 #1, comparative #1 #3 greatequal/2, project col:Customers/customer_name #4, project tbl:Orders #4, group #6 #4, union #5 #7", "alternatives": "select col:Customers, project tbl:Orders #1, group #2 #1, comparative #1 #3 greatequal/2, project col:Customers/customer_name #4, group #2 #4, union #5 #6"}
{"input": "What is the name and capacity of the stadium with the most concerts after 2013? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:stadium, project tbl:concert #1, comparative #2 #2 great/2013 col:concert/Year, group #3 #1, superlative max #1 #4, project col:stadium/Name #5, project col:stadium/Capacity #5, union #6 #7", "alternatives": "select tbl:stadium, project tbl:concert #1, group #3 #1, comparative #2 #2 great/2013 col:concert/Year, superlative max #1 #4, project col:stadium/Name #5, project col:stadium/Capacity #5, union #6 #7"}
{"input": "Which airlines have a flight with destination airport AHD? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select col:flights, project tbl:flights #1, project col:flights/Airport #2, comparative #1 #3 equal/AHD", "alternatives": "select col:flights, project tbl:flights #1, project col:flights/Airport #2, comparative #1 #3greatequal//AHD"}
{"input": "What are the titles, years, and directors of all movies, ordered by budget in millions? <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select tbl:film, project col:film/Title #1, project col:film/Year #1, project col:film/Director #1, project col:film/Budget_million #1, union #2 #3 #4, sort #6 #5", "alternatives": "select tbl:film, sort #6 #5, project col:film/Year #1, project col:film/Director #1, project col:film/Budget_million #1, union #2 #3 #4, project col:film/Title #1"}
{"input": "Return the different document ids along with the number of paragraphs corresponding to each, ordered by id. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Documents, project tbl:Paragraphs #1, group #2 #1, union #1 #3, sort #4 #3", "alternatives": "select col:Paragraphs, project tbl:Paragraphs #2, group #3 #2, union #2 #4, sort #5 #2"}
{"input": "How many flights land in Aberdeen or Abilene? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, comparative #1 #1 equal/Aberdeen col:airports/AirportName, comparative #1 #1 equal/Abilene col:airports/AirportName, union #2 #3, aggregate count #4", "alternatives": "select tbl:flights, comparative #1 #1 equal/Aberdeen col:airports/CountryName, comparative #1 #1 equal/Abilene col:airports/Country, union #2 #3, aggregate count #4"}
{"input": "What is the average, maximum, and minimum budget for all movies before 2000. <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select tbl:film, comparative #1 #1 less/2000 col:film/Year, project col:film/Budget_million #2, aggregate avg #3, aggregate max #3, aggregate min #3, union #4 #5 #6", "alternatives": "select tbl:film, comparative #1 #1 less/2000 col:film/Year, project col:movie/Budget_million #2, aggregate avg #3, aggregate max #3, aggregate min #3, union #4 #5 #6"}
{"input": "What are the names of airports in Aberdeen? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:airports, comparative #1 #1 equal/Aberdeen col:airports/Country, project col:airports/AirportName #2", "alternatives": "select tbl:airports, comparative #1 #1lessequal//Aberdeen col:airports/Country, project col:airports/AirportName #2"}
{"input": "Which airlines have departures from CVO but not from APG airports? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select col:airlines, project tbl:airports #1, comparative #1 #2 equal/CVO, comparative #1 #2 equal/APG, intersection #1 #3 #4, discard #3 #5", "alternatives": "select col:airlines, comparative #1 #1 equal/CVO col:flights/SourceAirport, comparative #2 #2 equal/APG col:flights/SourceAirport, discard #2 #3"}
{"input": "What are the names of the teachers who are aged either 32 or 33? <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select tbl:teacher, project col:teacher/Age #1, comparative #1 #2 equal/32, comparative #1 #2 equal/33, union #3 #4, project col:teacher/Name #5", "alternatives": "select tbl:teacher, comparative #1 #1 equal/32 col:teacher/Age, comparative #1 #1 equal/33 col:teacher/Age, union #2 #3, project col:teacher/Name #4"}
{"input": "List singer names and number of concerts for each singer. <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select col:concert, project col:song/Song_Name #1, project tbl:song_in_concert #1, group #3 #1, union #2 #4", "alternatives": "select col:song, project col:song/Song_Name #1, project tbl:song_in_concert #1, group #3 #1, union #2 #4"}
{"input": "Find the number of visitors who did not visit any museum opened after 2010. <tbl> museum visitor visit </tbl> <col> Museum_ID Name Num_of_Staff Open_Year ID Name Level_of_membership Age Museum_ID visitor_ID Num_of_Ticket Total_spent </col>", "prediction": "select tbl:museum, comparative #1 #1 great/2010 col:museum/Open_Year, project tbl:visit #2, group #3 #2, select tbl:visit, discard #5, aggregate count #6", "alternatives": "select tbl:museum, comparative #1 #1 great/2010 col:museum/Open_Year, project tbl:visit #2, discard #5, select tbl:visit, group #3 #2, aggregate count #6"}
{"input": "Show ids for all templates that are used by more than one document. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Templates, project tbl:Documents #1, group #2 #1, comparative #1 #3 great/1, project col:Documents/Template_ID #4", "alternatives": "select col:Templates, project tbl:Documents #1, comparative #1 #3 great/1, group #2 #1, project col:Documents/Template_ID #4"}
{"input": "List all song names by singers above the average age. <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:song, project col:song/Age #1, aggregate avg #2, comparative #1 #2 great/#3, project col:song/Song_Name #4", "alternatives": "select tbl:song, comparative #1 #2 great/#3, aggregate avg #2, project col:song/Age #1, project col:song/Song_Name #4"}
{"input": "Which flight numbers correspond to United Airlines flights? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, comparative #1 #1 equal/United Airlines col:airlines/Airline, project col:flights/FlightNo #2", "alternatives": "select col:flights, project tbl:flights #1, comparative #2 #1 equal/United Airlines, project col:flights/FlightNo #3"}
{"input": "What is the total number of singers? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:song, aggregate count #1", "alternatives": "select tbl:song, aggregate count #1"}
{"input": "How many flights arriving in Aberdeen city? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, project col:flights/City #1, comparative #1 #2 equal/Aberdeen, aggregate count #3", "alternatives": "select tbl:flights, project col:flights/City #1, comparative #1 #2lessequal//Aberdeen, aggregate count #3"}
{"input": "List all document ids with at least two paragraphs. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Documents, project tbl:Paragraphs #1, group #2 #1, comparative #1 #3 greatequal/2", "alternatives": "select col:Documents, project tbl:Paragraphs #1, group #2 #1, comparative #1 #3 lessequal/2"}
{"input": "Find the type and weight of the youngest pet. <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Pets, superlative min #1 #1, project col:Pets/PetType #2, project col:Pets/weight #2, union #3 #4", "alternatives": "select tbl:Pets, project col:Pets/PetType #2, superlative min #1 #1, project col:Pets/weight #2, union #3 #4"}
{"input": "Find the number of visitors who did not visit any museum opened after 2010. <tbl> museum visitor visit </tbl> <col> Museum_ID Name Num_of_Staff Open_Year ID Name Level_of_membership Age Museum_ID visitor_ID Num_of_Ticket Total_spent </col>", "prediction": "select tbl:museum, comparative #1 #1 great/2010 col:museum/Open_Year, project tbl:visit #2, group #3 #2, select tbl:visit, discard #5, aggregate count #6", "alternatives": "select tbl:museum, comparative #1 #1 lessequal/2010 col:museum/Open_Year, project tbl:visit #2, discard #5, select tbl:visit, group #3 #2, aggregate count #6"}
{"input": "What are the first names of all players, and their total ranking points? <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:players, project col:players/first_name #1, project col:players/ranking_points #1, group #3 #1, union #2 #4", "alternatives": "select tbl:players, project col:players/first_name #1, project col:players/ranking_points #1, aggregate sum #3, union #2 #4"}
{"input": "Find the codes of countries that have more than 50 players. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:players, project tbl:players #1, group #2 #1, comparative #1 #3 great/50, project col:players/country_code #4", "alternatives": "select col:players, project tbl:players #1, comparative #1 #3 lessequal/50, group #2 #1, project col:players/country_code #4"}
{"input": "How many teachers are there? <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select tbl:teacher, aggregate count #1", "alternatives": "select tbl:teacher, aggregate count #1"}
{"input": "Show the stadium name and capacity with most number of concerts in year 2014 or after. <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:stadium, project tbl:concert #1, project col:stadium/Year #2, comparative #1 #3 greatequal/2014, group #4 #1, superlative max #1 #5, project col:stadium/Name #6, project col:stadium/Capacity #6, union #7 #8", "alternatives": "select tbl:stadium, project tbl:concert #1, project col:stadium/Year #2, project col:stadium/Capacity #6, group #4 #1, superlative max #1 #5, project col:stadium/Name #6, comparative #1 #3 greatequal/2014, union #7 #8"}
{"input": "How many pets have a greater weight than 10? <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Pets, project col:Has_Pets/weight #1, comparative #1 #2 great/10, aggregate count #3", "alternatives": "select tbl:Pets, project col:Pets/weight #1, comparative #1 #2 great/10, aggregate count #3"}
{"input": "find the number of players for each country. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:matches, project tbl:players #1, group #2 #1, union #1 #3", "alternatives": "select col:players, project tbl:players #1, group #2 #1, union #1 #3"}
{"input": "What are all the company names that have a book published by Alyson? <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select col:book_club, project tbl:book_club #1, comparative #1 #2 equal/Alyson, project col:company/Company_name #3", "alternatives": "select col:book_club, project tbl:book_club #1, comparative #1 #2great//Alyson, project col:company/Company_name #3"}
{"input": "Which airlines have a flight with source airport AHD? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select col:flights, project tbl:flights #1, project col:flights/SourceAirport #2, comparative #1 #3 equal/AHD", "alternatives": "select col:airlines, project tbl:flights #1, project col:flights/SourceAirport #2, comparative #1 #3 equal/AHD"}
{"input": "Find the number of shops in each location. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select col:shop, project tbl:shop #1, group #2 #1, union #1 #3", "alternatives": "select col:shop, project tbl:shop #1, group #2 #1, union #1 #3"}
{"input": "Return the id and type code of the template that is used for the greatest number of documents. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Templates, project tbl:Documents #1, group #2 #1, superlative max #1 #3, project col:Documents/Template_ID #4, project col:Documents/Template_Type_Code #4, union #5 #6", "alternatives": "select col:Templates, project tbl:Documents #1, superlative max #1 #3, group #2 #1, project col:Documents/Template_ID #4, project col:Documents/Template_Type_Code #4, union #5 #6"}
{"input": "Show the stadium name and the number of concerts in each stadium. <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select col:convention, project col:stadium/Name #1, project tbl:concert #1, group #3 #1, union #2 #4", "alternatives": "select col:convention, group #3 #1, project tbl:concert #1, project col:stadium/Name #1, union #2 #4"}
{"input": "How many flights depart from 'APG'? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, comparative #1 #1 equal/APG col:airlines/AirportName, aggregate count #2", "alternatives": "select tbl:flights, comparative #1 #1greatequal//APG col:airlines/AirportName, aggregate count #2"}
{"input": "On which day was the order placed whose shipment tracking number is 3452? <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Orders, project tbl:Shipments #1, project col:Shipments/shipment_tracking_number #2, comparative #1 #3 equal/3452, project col:Orders/date_order_placed #4", "alternatives": "select tbl:Orders, project tbl:Shipments #1, comparative #1 #2 equal/3452, project col:Orders/date_order_placed #3"}
{"input": "How many shops are there in each location? <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select col:shop, project tbl:shop #1, group #2 #1, union #1 #3", "alternatives": "select col:shop, project tbl:shop #2, group #3 #2, union #2 #4"}
{"input": "Return the id of the document with the fewest paragraphs. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, project tbl:Paragraphs #1, group #2 #1, superlative min #1 #3, project col:Documents/Document_ID #4", "alternatives": "select col:Paragraphs, project tbl:Paragraphs #1, group #2 #1, superlative min #1 #3, project col:Paragraphs/Document_ID #4"}
{"input": "What is maximum and minimum death toll caused each time? <tbl> battle ship death </tbl> <col> id name date bulgarian_commander latin_commander result lost_in_battle id name tonnage ship_type location disposition_of_ship caused_by_ship_id id note killed injured </col>", "prediction": "select col:death, project col:death/tonnage #1, group #2 #1, union #1 #3", "alternatives": "select col:death, aggregate max #1, aggregate min #1, union #2 #3"}
{"input": "What are the different ids and names of the battles that lost any 'Brig' type shipes? <tbl> battle ship death </tbl> <col> id name date bulgarian_commander latin_commander result lost_in_battle id name tonnage ship_type location disposition_of_ship caused_by_ship_id id note killed injured </col>", "prediction": "select tbl:battle, project tbl:ship #1, comparative #1 #2 equal/Brig, project col:battle/id #3, project col:battle/name #3, union #4 #5", "alternatives": "select tbl:battle, comparative #1 #2 equal/Brig, project tbl:ship #1, project col:battle/id #3, project col:battle/name #3, union #4 #5"}
{"input": "What is the airport name for airport 'AKO'? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:airports, comparative #1 #1 equal/AKO col:airports/AirportName, project col:airports/AirportName #2", "alternatives": "select tbl:airports, comparative #1 #1greatequal//AKO col:airports/AirportName, project col:airports/AirportName #2"}
{"input": "Which district has both stores with less than 3000 products and stores with more than 10000 products? <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select col:shop, project tbl:shop #1, project col:shop/Number_products #2, group #3 #2, comparative #1 #4 less/3000, comparative #1 #4 great/10000, intersection #1 #5 #6", "alternatives": "select col:shop, project tbl:shop #1, project col:shop/Number_products #2, group #3 #2, comparative #1 #4 great/10000, comparative #1 #4 less/3000, intersection #1 #5 #6"}
{"input": "What is the id of the pet owned by the student whose last name is 'Smith'? <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Student, project col:Student/LName #1, comparative #1 #2 equal/Smith, project tbl:Has_Pets #3, project col:Has_Pets/PetID #4", "alternatives": "select tbl:Student, project tbl:Has_Pet #1, comparative #1 #2 equal/Smith, project tbl:Has_Pet #3, project col:Has_Pet/PetID #4"}
{"input": "what is the name and nation of the singer who have a song having 'Hey' in its name? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:song, project tbl:song #1, comparative #1 #2 like%Hey%, project col:song/Song_Name #3, project col:song/Country #3, union #4 #5", "alternatives": "select tbl:singer, comparative #1 #1 like%Hey% col:singer/Song_Name, project col:singer/Name #2, project col:singer/Country #2, union #3 #4"}
{"input": "What is the id and type code for the template used by the most documents? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Templates, project tbl:Documents #1, group #2 #1, superlative max #1 #3, project col:Documents/Template_ID #4, project col:Documents/Template_Type_Code #4, union #5 #6", "alternatives": "select tbl:Templates, project tbl:Documents #1, group #2 #1, superlative max #1 #3, project col:Documents/Template_ID #4, project col:Templates/Template_Type_Code #5, union #5 #6"}
{"input": "Count the number of United Airlines flights that arrive in Aberdeen. <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, comparative #1 #1 equal/Aberdeen col:airports/City, aggregate count #2", "alternatives": "select tbl:flights, comparative #1 #1 equal/Aberdeen col:airports/City, aggregate count #3"}
{"input": "Count the number of different templates used for documents. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Templates, comparative #1 #1 none, aggregate count #2", "alternatives": "select tbl:Templates, comparative #1 #1 none, aggregate count #2"}
{"input": "What is the name and capacity for the stadium with highest average attendance? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:stadium, project col:stadium/Average #1, superlative max #1 #2, project col:stadium/Name #3, project col:stadium/Capacity #3, union #4 #5", "alternatives": "select tbl:stadium, project none #1, group #2 #1, superlative max #1 #3, project col:stadium/Name #4, project col:stadium/Capacity #4, union #5 #6"}
{"input": "Which airlines have departing flights from both APG and CVO airports? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select col:airlines, project tbl:flights #1, comparative #1 #2 equal/APG, comparative #1 #2 equal/CVO, intersection #1 #3 #4", "alternatives": "select col:airlines, project tbl:flights #1, project col:flights/SourceAirport #2, comparative #1 #3 equal/APG, comparative #1 #3 equal/CVO, intersection #1 #4 #5"}
{"input": "What are the names of the customers who bought product \"food\" at least once? <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Customers, project tbl:Orders #1, comparative #1 #2 equal/food, group #3 #1, comparative #1 #4 greatequal/1, project col:Customers/customer_name #5", "alternatives": "select tbl:Customers, project tbl:Orders #1, comparative #1 #4 greatequal/1, group #3 #1, comparative #1 #2 equal/food, project col:Customers/customer_name #5"}
{"input": "Find the total number of matches. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:matches, aggregate count #1", "alternatives": "select tbl:matches, aggregate count #1"}
{"input": "What are the template ids of any templates used in more than a single document? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Templates, project tbl:Documents #1, group #2 #1, comparative #1 #3 great/1, project col:Templates/Template_ID #4", "alternatives": "select col:Templates, project tbl:Documents #1, project col:Templates/Template_ID #4, comparative #1 #3 great/1, group #2 #1"}
{"input": "What are the years, titles, and publishers for all books, ordered by year descending? <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select tbl:book, project col:book/Year #1, project col:book/Book_Title #1, project col:book/Publisher #1, union #2 #3 #4, sort #5 #2 descending", "alternatives": "select tbl:book_club, project col:book_club/Year #1, project col:book_club/Book_Title #1, project col:book_club/Publisher #1, union #2 #3 #4, sort #5 #2 descending"}
{"input": "What is the number of employees from each city? <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select col:employee, project tbl:employee #1, group #2 #1, union #1 #3", "alternatives": "select col:employee, project tbl:employee #2, group #3 #2, union #2 #4"}
{"input": "Give the city and country for the Alton airport. <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select val:airports, project col:airports/City #1, project col:airports/Country #1, union #2 #3", "alternatives": "select val:airports, project col:airports/City #1, project col:airports/Country #1, union #2 #3"}
{"input": "What are the ids for templates that are not used in any documents? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Templates, comparative #1 #1 tbl:Documents, discard #1 #2, project col:Templates/Template_ID #3", "alternatives": "select tbl:Templates, comparative #1 #1 tbl:Documents, discard #1 #2, project col:Templates/Template_ID #3."}
{"input": "What are the names and year of construction for the mills of 'Grondzeiler' type? <tbl> architect bridge mill </tbl> <col> id name nationality gender architect_id id name location length_meters length_feet architect_id id location name type built_year notes </col>", "prediction": "select tbl:mill, project col:mill/type #1, comparative #1 #2 equal/Grondzeiler, project col:mill/name #3, project col:mill/built_year #3, union #4 #5", "alternatives": "select tbl:mill, project col:mill/type #1, comparative #1 #2great//Grondzeiler, project col:mill/built_year #3, project col:mill/name #3, union #4 #5"}
{"input": "How many paragraphs for the document with name 'Summer Show'? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, project col:Documents/Document_Name #1, comparative #1 #2 equal/Summer Show, project col:Documents/Paragraph_Text #3, aggregate count #4", "alternatives": "select tbl:Documents, aggregate count #4, comparative #1 #2great//Summer Show, project col:Documents/Paragraph_Text #3, project col:Documents/Document_Name #1"}
{"input": "How many players are there for each hand type? <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:players, project tbl:players #1, group #2 #1, union #1 #3", "alternatives": "select col:players, project tbl:players #1, group #2 #1, union #1 #3"}
{"input": "What are the ids and texts of paragraphs in the document titled 'Welcome to NY'? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Paragraphs, comparative #1 #1 equal/Welcome to NY col:Documents/Document_Name, project col:Paragraphs/Paragraph_ID #2, project col:Paragraphs/Paragraph_Text #2, union #3 #4", "alternatives": "select tbl:Documents, comparative #1 #1 equal/Welcome to NY col:Documents/Document_Name, project tbl:Paragraphs #2, project col:Paragraphs/Paragraph_ID #3, project col:Paragraphs/Paragraph_Text #3, union #4 #5"}
{"input": "Find the total number of matches. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:matches, aggregate count #1", "alternatives": "select col:matches, aggregate count #1"}
{"input": "What are flight numbers of Airline \"United Airlines\"? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:airlines, project col:airlines/FlightNo #1, comparative #2 #1 equal/United Airlines", "alternatives": "select tbl:airlines, project col:airlines/FlightNo #1, comparative #2 #1less//United Airlines"}
{"input": "What are all the song names by singers who are older than average? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:song, project col:song/Age #1, aggregate avg #2, comparative #1 #2 great/#3, project col:song/Song_Name #4", "alternatives": "select tbl:singer, project col:singer/Age #1, aggregate avg #2, comparative #1 #2 great/#3, project col:singer/Song_Name #4, project col:singer/Song_Name #5"}
{"input": "What is the title and director for the movie with highest worldwide gross in the year 2000 or before? <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select tbl:film, project col:film/Gross_worldwide #1, comparative #2 #2 lessequal/2000 col:film/Year, superlative max #1 #3, project col:film/Title #4, project col:film/Director #4, union #5 #6", "alternatives": "select tbl:movie, project col:movie/Gross_worldwide #1, comparative #2 #2 lessequal/2000 col:movie/Year, superlative max #1 #3, project col:movie/Title #4, project col:movie/Director #4, union #5 #6"}
{"input": "What type of pet is the youngest animal, and how much does it weigh? <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Pets, project col:Pets/PetType #1, superlative min #1 #2, project col:Pets/weight #3, union #3 #4", "alternatives": "select col:Pets, superlative min #1 #1, project col:Pets/PetType #2, project col:Pets/weight #2, union #3 #4"}
{"input": "What are the type codes and descriptions for all template types? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Ref_Template_Types, project col:Ref_Template_Types/Template_Type_Type_Code #1, project col:Ref_Template_Types/Template_Type_Type_Description #1, union #2 #3", "alternatives": "select tbl:Ref_Template_Types, project col:Ref_Template_Types/Templature_Type_Code #1, project col:Ref_Template_Types/Templature_Type_Description #1, union #2 #3."}
{"input": "Find the type and weight of the youngest pet. <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Pets, superlative min #1 #1, project col:Pets/PetType #2, project col:Pets/weight #2, union #3 #4", "alternatives": "select tbl:Pets, project col:Pets/PetType #2, superlative min #1 #1, project col:Pets/weight #2, union #3 #4"}
{"input": "How many singers do we have? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:song, aggregate count #1", "alternatives": "select tbl:singer, aggregate count #1"}
{"input": "What are the names of documents that use templates with the code BK? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, project tbl:Templates #1, project col:Templates/Template_Type_Code #2, comparative #1 #3 equal/BK, project col:Documents/Document_Name #4", "alternatives": "select tbl:Documents, project tbl:Templates #1, project col:Templates/Template_Type_Code #2, comparative #1 #3 equal/BK, project col:Documents/Document_Name #4."}
{"input": "What are the first names of all players, and their average rankings? <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:players, project col:players/first_name #1, project col:players/ranking_points #1, group #3 #1, union #2 #4", "alternatives": "select tbl:players, project col:players/first_name #1, group #3 #1, project col:players/ranking_points #1, union #2 #4"}
{"input": "What are the years, titles, and publishers for all books, ordered by year descending? <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select tbl:book, project col:book/Year #1, project col:book/Book_Title #1, project col:book/Publisher #1, union #2 #3 #4, sort #5 #2 descending", "alternatives": "select tbl:book, project col:book/Year #1, project col:book/Book_Title #1, project col:book/Publisher #1, sort #5 #2 descending, union #2 #3 #4"}
{"input": "Show all template type codes and number of templates for each. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Templates, project tbl:Ref_Template_Types #1, group #2 #1, union #1 #3", "alternatives": "select col:Templates, project tbl:Ref_Template_Types #1, group #2 #1, union #1 #3"}
{"input": "What are  the different countries with singers above age 20? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:songwriter, project col:songwriter/Age #1, comparative #1 #2 great/20, project col:song/Country #3", "alternatives": "select tbl:songer, project col:songer/Age #1, comparative #1 #2 great/20, project col:song/Country #3"}
{"input": "Show names of teachers and the number of courses they teach. <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select col:teacher, project col:teacher/Name #1, project tbl:course #1, group #3 #1, union #2 #4", "alternatives": "select col:teacher, project col:teacher/Name #1, project tbl:course #1, union #2 #4, group #3 #1"}
{"input": "Count the number of different templates used for documents. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Templates, comparative #1 #1 none, aggregate count #2", "alternatives": "select tbl:Documents, aggregate count #2"}
{"input": "What is the average age of the visitors whose membership level is not higher than 4? <tbl> museum visitor visit </tbl> <col> Museum_ID Name Num_of_Staff Open_Year ID Name Level_of_membership Age Museum_ID visitor_ID Num_of_Ticket Total_spent </col>", "prediction": "select tbl:visit, project col:visit/Level_of_membership #1, comparative #1 #2 notequal/4, project col:visit/Age #3, aggregate avg #4", "alternatives": "select tbl:visit, project col:visit/Age #3, comparative #1 #2 notequal/4, project col:visit/Level_of_membership #1, aggregate avg #4"}
{"input": "Count the number of paragraphs. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Paragraphs, aggregate count #1", "alternatives": "select tbl:Paradises, aggregate count #1"}
{"input": "Return the number of flights. <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, aggregate count #1", "alternatives": "select col:flights, aggregate count #1"}
{"input": "Count the number of templates. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Templates, aggregate count #1", "alternatives": "select tbl:Layouts, aggregate count #1"}
{"input": "What is the document name and template id for document with description with the letter 'w' in it? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, project col:Documents/Document_Description #1, comparative #1 #2 like%w%, project col:Documents/Document_Name #3, project col:Documents/Document_ID #3, union #4 #5", "alternatives": "select tbl:Documents, comparative #1 #1 equal/w col:Documents/Document_Description, project col:Documents/Document_Name #2, project col:Documents/Document_ID #2, union #3 #4"}
{"input": "How many concerts are there in year 2014 or 2015? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:concert, project col:concert/Year #1, comparative #1 #2 equal/2014, comparative #1 #2 equal/2015, union #3 #4, aggregate count #5", "alternatives": "select tbl:concert, project col:concert/Year #1, comparative #1 #2 equal/2015, comparative #1 #2 equal/2014, union #3 #4, aggregate count #5"}
{"input": "Show names of teachers and the courses they are arranged to teach in ascending alphabetical order of the teacher's name. <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select tbl:teacher, project col:teacher/Name #1, project col:course_arrange/Name #1, union #2 #3, sort #4 #2 ascending", "alternatives": "select tbl:teacher, project col:teacher/Name #1, project col:course_arrange/Name #1, sort #4 #2 ascending, union #2 #3"}
{"input": "What is the hometown of the youngest teacher? <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select tbl:teacher, project col:teacher/Hometown #1, superlative min #1 #2", "alternatives": "select tbl:teacher, project col:teacher/Hometown #1, superlative min #1 #2"}
{"input": "Show all template type codes and number of templates for each. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Templates, project tbl:Ref_Template_Types #1, group #2 #1, union #1 #3", "alternatives": "select col:Templates, project tbl:Templates #1, group #2 #1, union #1 #3"}
{"input": "Find the name of the winner who has the highest rank points and participated in the Australian Open tourney. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:matches, comparative #1 #1 equal/Australian Open col:matches/turner_level, project col:matches/winner_rank_points #2, superlative max #2 #3, project col:matches/winner_name #4", "alternatives": "select col:matches, project col:matches/winner_rank_points #1, comparative #1 #2 equal/Australian Open, project col:matches/winner_rank_points #3, superlative max #3 #4, project col:matches/winner_name #5"}
{"input": "What is the average, minimum, and maximum age for all French singers? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:song, comparative #1 #1 equal/France col:song/Country, project col:song/Age #2, aggregate avg #3, aggregate min #3, aggregate max #3, union #4 #5 #6", "alternatives": "select tbl:singer, comparative #1 #1 val:singer/Country/France, project col:singer/Age #2, aggregate avg #3, aggregate min #3, aggregate max #3, union #4 #5 #6"}
{"input": "Show ids for all templates that are used by more than one document. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Templates, project tbl:Documents #1, group #2 #1, comparative #1 #3 great/1, project col:Documents/Template_ID #4", "alternatives": "select col:Documents, project tbl:Documents #1, group #2 #1, comparative #1 #3 great/1, project col:Documents/Template_ID #4"}
{"input": "What are the names of the teachers and how many courses do they teach? <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select col:teacher, project col:teacher/Name #1, project tbl:course #1, group #3 #1, union #2 #4", "alternatives": "select tbl:teacher, project col:teacher/Name #1, project tbl:course #1, group #3 #1, union #2 #4."}
{"input": "Show all document names using templates with template type code BK. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Templates, project tbl:Templates #1, project col:Templates/Template_Type_Code #2, comparative #1 #3 equal/BK, project col:Documents/Document_Name #4", "alternatives": "select tbl:Templates, project col:Templates/Template_Type_Code #2, project tbl:Templates #1, comparative #1 #3 equal/BK, project col:Documents/Document_Name #4"}
{"input": "Find the first name of students who have cat or dog pet. <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Student, project tbl:Has_Pets #1, comparative #1 #2 equal/Cat, comparative #1 #2 equal/Dog, union #3 #4, project col:Student/Fname #5", "alternatives": "select tbl:Student, project tbl:Has_Pets #1, comparative #1 #2 equal/Dog, comparative #1 #2 equal/Cat, union #3 #4, project col:Student/Fname #5"}
{"input": "Return the different document ids along with the number of paragraphs corresponding to each, ordered by id. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Documents, project tbl:Paragraphs #1, group #2 #1, union #1 #3, sort #4 #3", "alternatives": "select col:Documents, group #2 #1, project tbl:Paragraphs #1, union #1 #3, sort #4 #3"}
{"input": "Find the name of tourney that has more than 10 matches. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:matches, project tbl:matches #1, group #2 #1, comparative #1 #3 great/10, project col:matches/turner_name #4", "alternatives": "select col:matches, project col:matches/turner_name #4, group #2 #1, comparative #1 #3 great/10, project tbl:matches #1"}
{"input": "What is the average, minimum, and maximum age of all singers from France? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:song, comparative #1 #1 equal/France col:song/Country, project col:song/Age #2, aggregate avg #3, aggregate min #3, aggregate max #3, union #4 #5 #6", "alternatives": "select tbl:singer, comparative #1 #1 equal/France col:singer/Country, project col:singer/Age #2, aggregate avg #3, aggregate min #3, aggregate max #3, union #4 #5 #6"}
{"input": "Find the average weight for each pet type. <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select col:Pets, project col:Pets/weight #1, group #2 #1, union #1 #3", "alternatives": "select col:Cats, project col:Cats/weight #1, group #2 #1, union #1 #3"}
{"input": "Find the first name and gender of student who have more than one pet. <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Student, project tbl:Has_Pets #1, group #2 #1, comparative #1 #3 great/1, project col:Student/Fname #4, project col:Student/Sex #4, union #5 #6", "alternatives": "select tbl:Student, comparative #1 #3 less/1, group #2 #1, project tbl:Has_Pets #1, project col:Student/Fname #4, project col:Student/Sex #4, union #5 #6"}
{"input": "Find the first name of students who have both cat and dog pets. <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Student, project tbl:Has_Pets #1, comparative #1 #2 equal/Cat, comparative #1 #2 equal/Dog, intersection #1 #3 #4, project col:Student/Fname #5", "alternatives": "select tbl:Student, comparative #1 #1 equal/cat col:Pets/PetType, comparative #1 #1 equal/dog col:Pets/PetType, intersection #1 #2 #3, project col:Student/Fname #4"}
{"input": "List document IDs, document names, and document descriptions for all documents. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, project col:Documents/Document_ID #1, project col:Documents/Document_Name #1, project col:Documents/Document_Description #1, union #2 #3 #4", "alternatives": "select tbl:Dokuments, project col:Documents/Document_ID #1, project col:Documents/Document_Name #1, project col:Documents/Document_Description #1, union #2 #3 #4"}
{"input": "What are the opening year and staff number of the museum named Plaza Museum? <tbl> museum visitor visit </tbl> <col> Museum_ID Name Num_of_Staff Open_Year ID Name Level_of_membership Age Museum_ID visitor_ID Num_of_Ticket Total_spent </col>", "prediction": "select tbl:museum, comparative #1 #1 equal/Plaza Museum col:museum/Name, project col:museum/Open_Year #2, project col:museum/Num_of_Staff #2, union #3 #4", "alternatives": "select tbl:museum, union #3 #4, project col:museum/Open_Year #2, project col:museum/Num_of_Staff #2, comparative #1 #1greatequal//Plaza Museum col:museum/Name"}
{"input": "Find the number of distinct type of pets. <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Pets, aggregate count #2", "alternatives": "select tbl:Pets, aggregate count #2"}
{"input": "Give me a list of id and status of orders which belong to the customer named \"Jeramie\". <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Customers, comparative #1 #1 equal/Jeramie col:Customers/customer_name, project tbl:Orders #2, project col:Orders/order_id #3, project col:Orders/order_status #3, union #4 #5", "alternatives": "select tbl:Orders, project tbl:Customers #1, comparative #1 #2 equal/Jeramie, project col:Orders/order_id #3, project col:Orders/order_status #3, union #4 #5"}
{"input": "What are the names of tournaments that have more than 10 matches? <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:matches, project tbl:matches #1, group #2 #1, comparative #1 #3 great/10, project col:matches/turner_name #4", "alternatives": "select col:matches, project tbl:matches #1, group #2 #1, comparative #1 #3 great/10, project col:matches/turnier_name #4"}
{"input": "What is the title and director for the movie with highest worldwide gross in the year 2000 or before? <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select tbl:film, project col:film/Gross_worldwide #1, comparative #2 #2 lessequal/2000 col:film/Year, superlative max #1 #3, project col:film/Title #4, project col:film/Director #4, union #5 #6", "alternatives": "select tbl:film, project col:film/Gross_worldwide #1, project col:film/Director #4, superlative max #1 #3, project col:film/Title #4, comparative #2 #2 lessequal/2000 col:film/Year, union #5 #6"}
{"input": "What is the id and weight of every pet who is older than 1? <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Pets, comparative #1 #1 great/1 col:Pets/Age, project col:Pets/PetID #2, project col:Pets/weight #2, union #3 #4", "alternatives": "select tbl:Pets, project col:Pets/weight #2, project col:Pets/PetID #2, comparative #1 #1  equal1 col:Pets/Age, union #3 #4"}
{"input": "Count the number of paragraphs in the document named 'Summer Show'. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, comparative #1 #1 equal/Summer Show col:Documents/Document_Name, project tbl:Paragraphs #2, aggregate count #3", "alternatives": "select tbl:Documents, comparative #1 #1 equal/Summer Show col:Documents/Date_Name, project tbl:Paragraphs #2, aggregate count #3"}
{"input": "Show names of teachers that teach at least two courses. <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select tbl:teacher, project tbl:course #1, group #2 #1, comparative #1 #3 greatequal/2, project col:teacher/Name #4", "alternatives": "select tbl:teacher, project tbl:course_arrange #1, group #2 #1, comparative #1 #3 greatequal/2, project col:teacher/Name #4"}
{"input": "Find the name and age of the visitor who bought the most tickets at once. <tbl> museum visitor visit </tbl> <col> Museum_ID Name Num_of_Staff Open_Year ID Name Level_of_membership Age Museum_ID visitor_ID Num_of_Ticket Total_spent </col>", "prediction": "select tbl:visit, project tbl:visit #1, group #2 #1, superlative max #1 #3, project col:visit/Name #4, project col:visit/Age #4, union #5 #6", "alternatives": "select tbl:visitor, project tbl:visitor #1, project col:visit/Num_of_Ticket #2, group #3 #2, superlative max #1 #4, project col:visitor/Name #5, project col:visitor/Age #5, union #6 #7"}
{"input": "What is the code of airport that has fewest number of flights? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:airports, project tbl:flights #1, group #2 #1, superlative min #1 #3, project col:airports/AirportCode #4", "alternatives": "select tbl:airports, group #2 #1, project tbl:flights #1, superlative min #1 #3, project col:airports/AirportCode #4"}
{"input": "What are the ids, names, and descriptions for all documents? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, project col:Documents/Document_ID #1, project col:Documents/Document_Name #1, project col:Documents/Document_Description #1, union #2 #3 #4", "alternatives": "select tbl:Documents, project col:Documents/Document_ID #1, project col:Documents/Document_Name #1, union #2 #3 #4, project col:Documents/Document_Description #1"}
{"input": "List the first and last name of all players who are left / L hand in the order of birth date. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:players, project col:players/hand #1, comparative #1 #2 equal/L, project col:players/first_name #3, project col:players/last_name #3, project col:players/birth_date #3, union #4 #5, sort #6 #5", "alternatives": "select tbl:players, sort #6 #5, comparative #1 #2 equal/L, project col:players/first_name #3, project col:players/last_name #3, project col:players/birth_date #3, union #4 #5, project col:players/hand #1"}
{"input": "What are the titles of movies and books corresponding to companies incorporated in China? <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select tbl:company, comparative #1 #1 equal/China col:culture_company/Incorporated_in, project tbl:film #2, project col:book/Title #3, project col:book/Book_Title #3, union #4 #5", "alternatives": "select tbl:culture_company, comparative #1 #1 equal/China col:culture_company/Incorporated_in, project tbl:movie #2, project col:movie/Title #3, project tbl:book_club #2, project col:book_club/Book_Title #5, union #4 #6"}
{"input": "Find the highest rank of losers in all matches. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:matches, project col:matches/loser_rank #1, group #2 #1, superlative max #1 #3", "alternatives": "select tbl:matches, project col:matches/loser_rank #1, project col:matches/loser_rank #2, aggregate min #3"}
{"input": "Show all document ids, names and the number of paragraphs in each document. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Documents, project col:Documents/Document_ID #1, project col:Documents/Document_Name #1, project tbl:Paragraphs #1, group #4 #1, union #2 #3 #5", "alternatives": "select col:Documents, project col:Documents/Document_ID #1, project col:Documents/Document_Name #1, project tbl:Paragraphs #1, group #3 #1, union #2 #4 #5"}
{"input": "What are the average and maximum number of tickets bought in all visits? <tbl> museum visitor visit </tbl> <col> Museum_ID Name Num_of_Staff Open_Year ID Name Level_of_membership Age Museum_ID visitor_ID Num_of_Ticket Total_spent </col>", "prediction": "select tbl:visit, project col:visit/Num_of_Ticket #1, aggregate col:visit/Num_of_Ticket #2, aggregate avg #3, aggregate max #3, union #4 #5", "alternatives": "select tbl:visit, aggregate col:visit/Num_of_Ticket #2, project col:visit/Num_of_Ticket #1, aggregate avg #3, aggregate max #3, union #4 #5"}
{"input": "How many singers are from each country? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select col:song, project tbl:song #1, group #2 #1, union #1 #3", "alternatives": "select col:songer, project tbl:song #1, group #2 #1, union #1 #3"}
{"input": "What are the ids, version numbers, and type codes for each template? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Templates, project col:Templates/Template_ID #1, project col:Templates/Version_Number #1, project col:Templates/Template_Type_Code #1, union #2 #3 #4", "alternatives": "select tbl:Templates, project col:Templates/Template_ID #1, project col:Templates/Template_Type_Code #1, project col:Templates/Version_Number #1, union #2 #3 #4"}
{"input": "find the number of distinct country codes of all players. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:players, project col:players/country_code #1, aggregate count #3", "alternatives": "select tbl:players, project col:players/country_code #1, aggregate count #3"}
{"input": "Show the name and the release year of the song by the youngest singer. <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:song, project col:song/Age #1, superlative min #1 #2, project col:song/Song_Name #3, project col:song/Song_release_year #3, union #4 #5", "alternatives": "select tbl:song, project col:song/Age #1, superlative min #1 #2, project col:song/Song_Name #3, union #4 #5, project col:song/Song_release_year #3"}
{"input": "Count the number of United Airlines flights that arrive in Aberdeen. <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, comparative #1 #1 equal/Aberdeen col:airports/City, aggregate count #2", "alternatives": "select val:airlines, project tbl:flights #1, comparative #2 #2 equal/Aberdeen col:airports/City, aggregate count #3"}
{"input": "What are the names and locations of the stadiums that had concerts that occurred in both 2014 and 2015? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:stadium, project tbl:concert #1, comparative #1 #2 equal/2014, comparative #1 #2 equal/2015, intersection #1 #3 #4, project col:stadium/Name #5, project col:stadium/Location #5, union #6 #7", "alternatives": "select tbl:stadium, comparative #1 #1 equal/2014 col:concert/Year, comparative #1 #1 equal/2015 col:concert/Year, project col:stadium/Name #1, intersection #4 #2 #3, project col:stadium/Location #1, intersection #6 #2 #3, union #5 #7"}
{"input": "Show the stadium name and capacity with most number of concerts in year 2014 or after. <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:stadium, project tbl:concert #1, project col:stadium/Year #2, comparative #1 #3 greatequal/2014, group #4 #1, superlative max #1 #5, project col:stadium/Name #6, project col:stadium/Capacity #6, union #7 #8", "alternatives": "select tbl:stadium, project tbl:concert #1, project col:stadium/Year #2, comparative #2 #3 greatequal/2014, group #4 #1, superlative max #1 #5, project col:stadium/Name #6, project col:stadium/Capacity #6, union #7 #8"}
{"input": "How many players are from each country? <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:players, project tbl:players #1, group #2 #1, union #1 #3", "alternatives": "select col:players, project tbl:players #1, group #2 #1, union #1 #3"}
{"input": "Give the number of Jetblue Airways flights. <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, comparative #1 #1 equal/Jetblue Airways col:airlines/Airline, aggregate count #2", "alternatives": "select tbl:flights, comparative #1 #1 equal/JetBlue Airways col:airlines/Airline, aggregate count #2"}
{"input": "Return the id of the document with the fewest paragraphs. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, project tbl:Paragraphs #1, group #2 #1, superlative min #1 #3, project col:Documents/Document_ID #4", "alternatives": "select col:Paragraphs, project tbl:Documents #1, group #2 #1, superlative min #1 #3, project col:Documents/Document_ID #4"}
{"input": "Give the flight numbers of flights leaving from Aberdeen. <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, comparative #1 #1 equal/Aberdeen col:airports/AirportName, project tbl:flights #2, project col:flights/FlightNo #3", "alternatives": "select tbl:flights, comparative #1 #1lessequal//Aberdeen col:airports/AirportName, project tbl:flights #2, project col:flights/FlightNo #3"}
{"input": "What are the locations and names of all stadiums with capacity between 5000 and 10000? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:stadium, project col:stadium/Capacity #1, comparative #1 #2 lessequal/10000, comparative #1 #2 greatequal/5000, intersection #1 #3 #4, project col:stadium/Location #5, project col:stadium/Name #5, union #6 #7", "alternatives": "select tbl:stadium, project col:stadium/Capacity #1, comparative #1 #2 greatequal/5000, comparative #1 #2 lessequal/10000, intersection #1 #3 #4, project col:stadium/Location #5, project col:stadium/Name #5, union #6 #7"}
{"input": "For each shop, return the number of employees working there and the name of the shop. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select col:shop, project tbl:employee #1, group #2 #1, project col:shop/Name #1, union #3 #4", "alternatives": "select col:shop, project tbl:employee #1, union #3 #4, project col:shop/Name #1, group #2 #1"}
{"input": "What is the average and maximum age for each pet type? <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select col:Pets, project col:Pets/pet_age #1, group #2 #1, aggregate avg #3, aggregate max #3, union #4 #5", "alternatives": "select col:Pets, project col:Pets/pet_age #1, group #2 #1, aggregate avg #3, union #4 #5, aggregate max #3"}
{"input": "What are the distinct types of mills that are built by American or Canadian architects? <tbl> architect bridge mill </tbl> <col> id name nationality gender architect_id id name location length_meters length_feet architect_id id location name type built_year notes </col>", "prediction": "select tbl:mill, project tbl:architecture #1, comparative #1 #2 equal/American, comparative #1 #2 equal/Canada, union #3 #4, project col:mill/type #5", "alternatives": "select tbl:architect, comparative #1 #1 equal/American col:architect/nationality, comparative #1 #1 equal/Canadian col:architect/nationality, project tbl:mill #2, project tbl:mill #3, union #4 #5"}
{"input": "Count the number of templates of the type CV. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Templates, comparative #1 #1 equal/CV col:Templates/Template_Type_Code, aggregate count #2", "alternatives": "select tbl:Templatures, comparative #1 #1 equal/CV col:Templatures/Template_Type_Code, aggregate count #2"}
{"input": "On what day was the order with invoice number 10 placed? <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Orders, project tbl:Invoices #1, comparative #1 #2 equal/10, project col:Orders/date_order_placed #3", "alternatives": "select tbl:Orders, project tbl:Invoices #1, comparative #1 #2 equal/10, project col:Orders/date_order_placing #3"}
{"input": "How many concerts are there in year 2014 or 2015? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:concert, project col:concert/Year #1, comparative #1 #2 equal/2014, comparative #1 #2 equal/2015, union #3 #4, aggregate count #5", "alternatives": "select tbl:concert, project col:concert/Year #1, comparative #1 #2 equal/2014, comparative #1 #2 equal/1500, union #3 #4, aggregate count #5"}
{"input": "Give the code of the airport with the least flights. <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:airports, project tbl:flights #1, group #2 #1, superlative min #1 #3, project col:airports/AirportCode #4", "alternatives": "select tbl:airports, superlative min #1 #3, group #2 #1, project tbl:flights #1, project col:airports/AirportCode #4"}
{"input": "What are the distinct names and nationalities of the architects who have ever built a mill? <tbl> architect bridge mill </tbl> <col> id name nationality gender architect_id id name location length_meters length_feet architect_id id location name type built_year notes </col>", "prediction": "select tbl:architect, comparative #1 #1 tbl:mill, project col:architect/name #2, project col:architect/nationality #2, union #3 #4", "alternatives": "select tbl:architect, union #3 #4, project col:architect/name #2, project col:architect/nationality #2, comparative #1 #1 tbl:mill"}
{"input": "What is the abbreviation of Airline \"JetBlue Airways\"? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:airlines, comparative #1 #1 equal/JetBlue Airways col:airlines/Airline, project col:airlines/Abbreviation #2", "alternatives": "select val:airlines, project col:airlines/Abbreviation #1"}
{"input": "Find the number of dog pets that are raised by female students (with sex F). <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Student, project col:Student/Sex #1, comparative #1 #2 equal/F, project tbl:Has_Pets #3, aggregate count #4", "alternatives": "select tbl:Student, project col:Student/Sex #1, aggregate count #4, project tbl:Has_Pets #3, comparative #1 #2great//F"}
{"input": "Show the name and theme for all concerts and the number of singers in each concert. <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select col:song_in_concert, project col:song/Concert_Name #1, project col:song_in_concert/Theme #1, project tbl:song_in_concert #1, group #4 #1, union #2 #3 #5", "alternatives": "select col:song_in_concert, project col:song_in_concert/concert_Name #1, project col:song_in_concert/Theme #1, project tbl:song_in_concert #1, group #3 #1, union #2 #4"}
{"input": "How many different winners both participated in the WTA Championships and were left handed? <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:matches, comparative #1 #1 equal/WTA Championship col:matches/winner_entry, comparative #1 #1 equal/left col:matches/winner_hand, intersection #1 #2 #3, aggregate count #5", "alternatives": "select col:matches, comparative #1 #1 equal/WTA Championships col:matches/tourney_name, comparative #1 #1 equal/L col:matches/winner_hand, intersection #1 #2 #3, aggregate count #4"}
{"input": "What are the distinct name of the mills built by the architects who have also built a bridge longer than 80 meters? <tbl> architect bridge mill </tbl> <col> id name nationality gender architect_id id name location length_meters length_feet architect_id id location name type built_year notes </col>", "prediction": "select tbl:architecture, comparative #1 #1 great/80 col:bridge/length_meters, project tbl:mill #2, project col:mill/name #3", "alternatives": "select tbl:architect, comparative #1 #1 great/80 col:bridge/length_meters, project tbl:mill #2"}
{"input": "Find the number of pets for each student who has any pet and student id. <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select col:Has_Pets, project tbl:Has_Pets #1, group #2 #1, project col:Has_Pets/StuID #1, union #3 #4", "alternatives": "select col:Has_Pets, project tbl:Has_Pet #1, group #2 #1, project col:Has_Pets/StuID #1, union #3 #4"}
{"input": "What is the code of airport that has the highest number of flights? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:airports, project tbl:flights #1, group #2 #1, superlative max #1 #3, project col:airports/AirportCode #4", "alternatives": "select tbl:airports, project col:airports/AirportCode #4, group #2 #1, superlative max #1 #3, project tbl:flights #1"}
{"input": "Return the id and type code of the template that is used for the greatest number of documents. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Templates, project tbl:Documents #1, group #2 #1, superlative max #1 #3, project col:Documents/Template_ID #4, project col:Documents/Template_Type_Code #4, union #5 #6", "alternatives": "select tbl:Templates, project tbl:Documents #1, group #2 #1, superlative max #1 #3, project col:Documents/Template_ID #4, project col:Templates/Template_Type_Code #4, union #5 #6"}
{"input": "Which airline has abbreviation 'UAL'? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select col:airlines, project col:airlines/Airline #1, comparative #1 #2 like%UAL%", "alternatives": "select col:airlines, project col:airlines/Airline #1, comparative #1 #2 like%UAL%"}
{"input": "Show all paragraph texts for the document \"Customer reviews\". <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, comparative #1 #1 equal/Customer reviews col:Documents/Document_Name, project col:Paragraphs/Paragraph_Text #2", "alternatives": "select tbl:Documents, comparative #1 #1 equal/Customer reviews col:Documents/Document_Name, project tbl:Paragraphs #2, project col:Paragraphs/Paragraph_text #3"}
{"input": "What is the id and weight of every pet who is older than 1? <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Pets, comparative #1 #1 great/1 col:Pets/Age, project col:Pets/PetID #2, project col:Pets/weight #2, union #3 #4", "alternatives": "select tbl:Pets, project col:Pets/weight #2, project col:Pets/PetID #2, comparative #1 #1 great/1 col:Pets/Age, union #3 #4"}
{"input": "find the names of museums which have more staff than the minimum staff number of all museums opened after 2010. <tbl> museum visitor visit </tbl> <col> Museum_ID Name Num_of_Staff Open_Year ID Name Level_of_membership Age Museum_ID visitor_ID Num_of_Ticket Total_spent </col>", "prediction": "select tbl:museum, comparative #1 #1 great/2010 col:museum/Open_Year, project col:museum/Num_of_Staff #2, group #3 #2, aggregate min #4, comparative #1 #4 great/#5, project col:museum/Name #6", "alternatives": "select tbl:museum, comparative #1 #4 great/#5, project col:museum/Num_of_Staff #2, group #3 #2, aggregate min #4, comparative #1 #1 great/2010 col:museum/Open_Year, project col:museum/Name #6"}
{"input": "Show all template ids and number of documents using each template. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Templates, project col:Templates/Template_ID #1, project tbl:Documents #1, group #3 #1, union #2 #4", "alternatives": "select col:Documents, project tbl:Documents #1, group #2 #1, project col:Documents/Template_ID #1, union #4 #3"}
{"input": "What type of pet is the youngest animal, and how much does it weigh? <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Pets, project col:Pets/PetType #1, superlative min #1 #2, project col:Pets/weight #3, union #3 #4", "alternatives": "select tbl:Pets, project col:Pets/pet_age #1, superlative min #1 #2, project col:Pets/weight #3, aggregate min #4, union #3 #5"}
{"input": "What is the name of each teacher and what course they teach? <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select tbl:teacher, project col:teacher/Name #1, project col:course/Course #1, union #2 #3", "alternatives": "select tbl:teacher, project col:teacher/Name #1, project col:course/Course #2, union #2 #3"}
{"input": "Show the stadium name and the number of concerts in each stadium. <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select col:convention, project col:stadium/Name #1, project tbl:concert #1, group #3 #1, union #2 #4", "alternatives": "select col:convention, group #3 #1, project tbl:concert #1, project col:stadium/Name #1, union #2 #4"}
{"input": "Give the airline with abbreviation 'UAL'. <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select col:airlines, project col:airlines/Airline #1, comparative #1 #2 like%UAL%", "alternatives": "select col:airlines, project col:airlines/Airline #1, comparative #1 #2 like%UAL%"}
{"input": "Find the first name and gender of student who have more than one pet. <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Student, project tbl:Has_Pets #1, group #2 #1, comparative #1 #3 great/1, project col:Student/Fname #4, project col:Student/Sex #4, union #5 #6", "alternatives": "select tbl:Student, project tbl:Has_Pets #1, group #2 #1, comparative #1 #3 great/1, project col:Student/Fname #4, project col:Has_Pets/Sex #4, union #5 #6"}
{"input": "What is the name and capacity of the stadium with the most concerts after 2013? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:stadium, project tbl:concert #1, comparative #2 #2 great/2013 col:concert/Year, group #3 #1, superlative max #1 #4, project col:stadium/Name #5, project col:stadium/Capacity #5, union #6 #7", "alternatives": "select tbl:stadium, project tbl:concert #1, group #3 #1, comparative #2 #2 greatequal/2013 col:concert/Year, superlative max #1 #4, project col:stadium/Name #5, project col:stadium/Capacity #5, union #6 #7"}
{"input": "Show the stadium name and capacity with most number of concerts in year 2014 or after. <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:stadium, project tbl:concert #1, project col:stadium/Year #2, comparative #1 #3 greatequal/2014, group #4 #1, superlative max #1 #5, project col:stadium/Name #6, project col:stadium/Capacity #6, union #7 #8", "alternatives": "select tbl:stadium, project tbl:concert #1, project col:stadium/Year #2, project col:stadium/Capacity #6, group #4 #1, superlative max #1 #5, project col:stadium/Name #6, comparative #1 #3 lessequal/2014, union #7 #8"}
{"input": "How many different winners both participated in the WTA Championships and were left handed? <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:matches, comparative #1 #1 equal/WTA Championship col:matches/winner_entry, comparative #1 #1 equal/left col:matches/winner_hand, intersection #1 #2 #3, aggregate count #5", "alternatives": "select col:matches, comparative #1 #1 equal/WTA Champion col:matches/winner_entry, comparative #1 #1 equal/left handed col:matches/winner_hand, intersection #1 #2 #3, aggregate count #4"}
{"input": "Show all distinct publishers for books. <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select tbl:book_club, project col:book/Publisher #1", "alternatives": "select tbl:book_club, project col:book/Publisher #1"}
{"input": "Show all distinct template type codes for all templates. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Templates, project col:Templates/Template_Type_Code #1", "alternatives": "select tbl:Templates, project tbl:Templates #1"}
{"input": "For students who have pets, how many pets does each student have? list their ids instead of names. <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select col:Has_Pets, comparative #1 #1 tbl:Has_Pets, project tbl:Has_Pets #2, group #3 #2, project col:Has_Pets/StuID #2, union #4 #5", "alternatives": "select tbl:Student, comparative #1 #1 tbl:Has_Pets, project col:Has_Pets/StuID #2, group #2 #3, project col:Has_Pets/StuID #4, union #5 #3"}
{"input": "Show the name and theme for all concerts and the number of singers in each concert. <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select col:song_in_concert, project col:song/Concert_Name #1, project col:song_in_concert/Theme #1, project tbl:song_in_concert #1, group #4 #1, union #2 #3 #5", "alternatives": "select col:song_in_concert, project col:song/Concert_Name #1, union #2 #3 #5, project tbl:song_in_concert #1, group #4 #1, project col:song_in_concert/Theme #1"}
{"input": "Find the id of the customer who made the most orders. <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select col:Customers, project tbl:Orders #1, group #2 #1, superlative max #1 #3, project col:Orders/customer_id #4", "alternatives": "select tbl:Customers, project tbl:Orders #1, group #2 #1, superlative max #1 #3, project col:Customers/customer_id #4"}
{"input": "Return the name, location and district of all shops in descending order of number of products. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select tbl:shop, project col:shop/Name #1, project col:shop/Location #1, project col:shop/District #1, project col:shop/Number_products #1, group #4 #1, union #2 #3 #5, sort #6 #5 descending", "alternatives": "select tbl:shop, project col:shop/Name #1, project col:shop/Location #1, project col:shop/District #1, project col:shop/Number_products #1, group #5 #1, union #2 #3 #4, sort #6 #6 descending"}
{"input": "How many documents are using the template with type code 'PPT'? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Templates, project tbl:Templates #1, project col:Templates/Template_Type_Code #2, comparative #1 #3 equal/PPT, aggregate count #4", "alternatives": "select tbl:Templates, project tbl:Templates #1, aggregate count #4, comparative #1 #3lessequal//PPT, project col:Templates/Template_Type_Code #2"}
{"input": "What is the id and type code for the template used by the most documents? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Templates, project tbl:Documents #1, group #2 #1, superlative max #1 #3, project col:Documents/Template_ID #4, project col:Documents/Template_Type_Code #4, union #5 #6", "alternatives": "select col:Templates, project tbl:Documents #1, group #2 #1, superlative max #1 #3, project col:Documents/Template_Type_Code #4, project col:Documents/Template_ID #4, union #5 #6"}
{"input": "What are the paragraph texts for the document with the name 'Customer reviews'? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, project col:Documents/Document_Name #1, comparative #1 #2 equal/Customer reviews, project col:Paragraphs/Paragraph_Text #3", "alternatives": "select tbl:Documents, project col:Documents/Document_Name #1, comparative #1 #2great//Customer reviews, project col:Paragraphs/Paragraph_Text #3"}
{"input": "What airline serves the most flights? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select col:airlines, project tbl:flights #1, group #2 #1, superlative max #1 #3", "alternatives": "select col:flights, project tbl:airlines #1, group #2 #1, superlative max #1 #3"}
{"input": "Give the number of Jetblue Airways flights. <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, comparative #1 #1 equal/Jetblue Airways col:airlines/Airline, aggregate count #2", "alternatives": "select tbl:flights, comparative #1 #1less//Jetblue Airways col:airlines/Airline, aggregate count #2"}
{"input": "Count the number of flights departing from 'APG'. <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, comparative #1 #1 equal/APG col:airlines/AirportName, aggregate count #2", "alternatives": "select tbl:flights, comparative #1 #1 equal/APG col:flights/SourceAirport, aggregate count #2"}
{"input": "List the name, nationality and id of all male architects ordered by their names lexicographically. <tbl> architect bridge mill </tbl> <col> id name nationality gender architect_id id name location length_meters length_feet architect_id id location name type built_year notes </col>", "prediction": "select tbl:architect, comparative #1 #1 equal/M col:architect/gender, project col:architect/name #2, project col:architect/nationality #2, project col:architect/architect_id #2, union #3 #4 #5, sort #7 #6", "alternatives": "select tbl:architect, comparative #1 #1 equal/male col:architect/gender, project col:architect/name #2, project col:architect/nationality #2, project col:architect/id #2, union #3 #4 #5, sort #6 #3 ascending"}
{"input": "Return the template type description of the template type with the code AD. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Ref_Template_Types, project col:Ref_Template_Types/Temple_Type_Code #1, comparative #1 #2 equal/AD, project col:Ref_Template_Types/Temple_Type_Description #3", "alternatives": "select tbl:Ref_Template_Types, project col:Ref_Template_Types/Temple_Type_Code #1, comparative #1 #2less//AD, project col:Ref_Template_Types/Temple_Type_Description #3"}
{"input": "What is the name of the shop that is hiring the largest number of employees? <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select tbl:shop, project tbl:hiring #1, group #2 #1, superlative max #1 #3, project col:shop/Name #4", "alternatives": "select tbl:shop, project col:shop/Name #4, group #2 #1, superlative max #1 #3, project tbl:hiring #1"}
{"input": "What is the placement date of the order whose invoice number is 10? <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select col:Orders, comparative #1 #1 equal/10 col:Invoices/invoice_number, project col:Orders/date_order_placed #2", "alternatives": "select tbl:Orders, project col:Shipments/invoice_number #1, project col:Shipments/invoice_number #2, comparative #1 #3 equal/10, project col:Orders/date_order_placed #4"}
{"input": "What are the names and locations of the stadiums that had concerts that occurred in both 2014 and 2015? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:stadium, project tbl:concert #1, comparative #1 #2 equal/2014, comparative #1 #2 equal/2015, intersection #1 #3 #4, project col:stadium/Name #5, project col:stadium/Location #5, union #6 #7", "alternatives": "select tbl:stadium, project tbl:concert #1, comparative #1 #2 equal/2015, comparative #1 #2 equal/2014, intersection #1 #3 #4, project col:stadium/Name #5, project col:stadium/Location #5, union #6 #7"}
{"input": "List the first and last name of all players who are left / L hand in the order of birth date. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:players, project col:players/hand #1, comparative #1 #2 equal/L, project col:players/first_name #3, project col:players/last_name #3, project col:players/birth_date #3, union #4 #5, sort #6 #5", "alternatives": "select tbl:players, project col:players/hand #1, comparative #1 #2 equal/L, project col:players/first_name #3, project col:players/last_name #3, project col:players/birth_date #3, union #4 #5, sort #7 #6"}
{"input": "Return the name, location and district of all shops in descending order of number of products. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select tbl:shop, project col:shop/Name #1, project col:shop/Location #1, project col:shop/District #1, project col:shop/Number_products #1, group #4 #1, union #2 #3 #5, sort #6 #5 descending", "alternatives": "select tbl:shop, project col:shop/Name #1, project col:shop/Location #1, project col:shop/District #1, project col:shop/Number_products #1, group #5 #1, union #2 #3 #4, sort #7 #6 descending"}
{"input": "What is the average length in feet of the bridges? <tbl> architect bridge mill </tbl> <col> id name nationality gender architect_id id name location length_meters length_feet architect_id id location name type built_year notes </col>", "prediction": "select tbl:bridge, project col:bridge/length_feet #1, aggregate avg #2", "alternatives": "select tbl:bridge, project col:bridge/length_feet #1, aggregate avg #2"}
{"input": "Which publishers did not publish a book in 1989? <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select col:book_club, comparative #1 #1 equal/1989 col:book_club/Year, discard #1 #2", "alternatives": "select col:book_club, comparative #1 #1greatequal//1989 col:book_club/Year, discard #1 #2"}
{"input": "What is the average, minimum, and maximum age for all French singers? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:song, comparative #1 #1 equal/France col:song/Country, project col:song/Age #2, aggregate avg #3, aggregate min #3, aggregate max #3, union #4 #5 #6", "alternatives": "select tbl:singer, comparative #1 #1 equal/France col:singer/Country, project col:singer/Age #2, aggregate avg #3, aggregate min #3, aggregate max #3, union #4 #5 #6"}
{"input": "What are the minimum and maximum number of products across all the shops? <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select tbl:shop, project col:shop/Number_products #1, aggregate min #2, aggregate max #2, union #3 #4", "alternatives": "select tbl:shop, aggregate min #2, project col:shop/Number_products #1, aggregate max #2, union #3 #4"}
{"input": "What are the names of the singers and number of concerts for each person? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select col:song, project col:song/Song_Name #1, project tbl:song_in_concert #1, group #3 #1, union #2 #4", "alternatives": "select col:song, union #2 #4, project tbl:song_in_concert #1, group #3 #1, project col:song/Song_Name #1"}
{"input": "Find the id of the pet owned by student whose last name is ‘Smith’. <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Student, project col:Student/LName #1, comparative #1 #2 equal/Smith, project tbl:Has_Pets #3, project col:Has_Pets/PetID #4", "alternatives": "select tbl:Student, project col:Has_Pets/PetID #4, comparative #1 #2less//Smith, project tbl:Has_Pets #3, project col:Student/LName #1"}
{"input": "How many total tours were there for each ranking date? <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:rankings, project tbl:turnouts #1, group #2 #1, union #1 #3", "alternatives": "select col:rankings, project tbl:turnouts #1, group #2 #1, union #1 #3"}
{"input": "Give the flight numbers of flights landing at APG. <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, comparative #1 #1 equal/APG col:airports/AirportName, project tbl:flights #2, project col:flights/FlightNo #3", "alternatives": "select tbl:flights, comparative #1 #1 equal/APG col:flights/DestAirport, project col:flights/FlightNo #2"}
{"input": "What are the codes of countries with more than 50 players? <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:players, project tbl:players #1, group #2 #1, comparative #1 #3 great/50, project col:players/country_code #4", "alternatives": "select tbl:countries, project tbl:players #1, group #2 #1, comparative #1 #3 great/50, project col:countries/country_code #4"}
{"input": "Which directors had a movie both in the year 1999 and 2000? <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select col:film, project tbl:film #1, comparative #2 #2 equal/1999 col:film/Year, comparative #2 #2 equal/2000 col:film/Year, intersection #1 #3 #4", "alternatives": "select col:movie, project tbl:movie #1, comparative #2 #2 equal/1999 col:movie/Year, comparative #2 #2 equal/2000 col:movie/Year, intersection #1 #3 #4"}
{"input": "What are the ids, names, and descriptions for all documents? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, project col:Documents/Document_ID #1, project col:Documents/Document_Name #1, project col:Documents/Document_Description #1, union #2 #3 #4", "alternatives": "select tbl:Dates, project col:Dates/Document_ID #1, project col:Dates/Document_Name #1, project col:Dates/Document_Description #1, union #2 #3 #4"}
{"input": "How many countries does each continent have? List the continent id, continent name and the number of countries. <tbl> continents countries car_makers model_list car_names cars_data </tbl> <col> ContId Continent CountryId CountryName Continent Id Maker FullName Country ModelId Maker Model MakeId Model Make Id MPG Cylinders Edispl Horsepower Weight Accelerate Year </col>", "prediction": "select col:continents, project tbl:countries #1, group #2 #1, project col:continents/Continent #1, project col:continents/Continent #1, union #4 #5 #3", "alternatives": "select col:continents, project tbl:countries #1, group #2 #1, project col:continents/Continent #1, project col:continents/Continent #1, union #3 #4 #5"}
{"input": "What is the template type code of the template used by document with the name \"Data base\"? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, project col:Documents/Document_Name #1, comparative #1 #2 equal/Data base, project tbl:Ref_Template_Types #3, project col:Ref_Template_Types/Template_Type_Code #4", "alternatives": "select tbl:Documents, comparative #1 #1 equal/Data base col:Documents/Document_Name, project tbl:Templates #2, project col:Templates/Template_Type_Code #3"}
{"input": "Find the number of flights landing in the city of Aberdeen or Abilene. <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, project col:flights/City #1, comparative #1 #2 equal/Aberdeen, comparative #1 #2 equal/Abilene, union #3 #4, aggregate count #5", "alternatives": "select tbl:flights, project col:airports/City #1, comparative #1 #2 equal/Aberdeen, comparative #1 #2 equal/Abilene, union #3 #4, aggregate count #5"}
{"input": "Return the names and template ids for documents that contain the letter w in their description. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, project col:Documents/Document_Description #1, comparative #1 #2 like%w%, project col:Documents/Document_Name #3, project col:Documents/Document_ID #3, union #4 #5", "alternatives": "select tbl:Documents, project col:Documents/Document_Name #3, comparative #1 #2 like%w%, project col:Documents/Document_Description #1, project col:Documents/Document_ID #3, union #4 #5"}
{"input": "Find the average ranking for each player and their first name. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:players, project col:players/ranking #1, group #2 #1, project col:players/first_name #1, union #1 #3", "alternatives": "select col:players, project col:rankings/ranking #1, group #2 #1, project col:players/first_name #1, union #3 #4"}
{"input": "What is the first name and country code of the player with the most tours? <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:players, project col:matches/turns #1, group #2 #1, superlative max #1 #3, project col:players/first_name #4, project col:players/country_code #4, union #5 #6", "alternatives": "select tbl:players, project col:rankings/tours #1, group #2 #1, superlative max #1 #3, project col:players/first_name #4, project col:players/country_code #4, union #5 #6"}
{"input": "How many singers are from each country? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select col:song, project tbl:song #1, group #2 #1, union #1 #3", "alternatives": "select col:singer, project tbl:singer #1, group #2 #1, union #1 #3"}
{"input": "Find the names of employees who never won any award in the evaluation. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select tbl:evaluation, project tbl:evaluation #1, select tbl:employee, discard #3 #2, project col:employee/Name #4", "alternatives": "select tbl:evaluation, discard #3 #2, select tbl:employee, project tbl:evaluation #1, project col:employee/Name #4"}
{"input": "Return the document id, template id, and description for the document with the name Robbin CV. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, project col:Documents/Document_Name #1, comparative #1 #2 equal/Robbin CV, project col:Documents/Document_ID #3, project col:Documents/Template_ID #3, project col:Documents/Document_Description #3, union #4 #5 #6", "alternatives": "select tbl:Documents, comparative #1 #1 equal/Robbin CV col:Documents/Document_Name, project col:Documents/Document_ID #2, project col:Documents/Template_ID #2, project col:Documents/Document_Description #2, union #3 #4 #5"}
{"input": "Show the name of the teacher for the math course. <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select tbl:teacher, project tbl:course #1, comparative #1 #2 equal/Math, project col:teacher/Name #3", "alternatives": "select tbl:teacher, comparative #1 #1 equal/Math col:course/Course, project col:teacher/Name #2"}
{"input": "Find the weight of the youngest dog. <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Pets, project col:Pets/weight #1, superlative min #1 #2, project col:Pets/weight #3", "alternatives": "select tbl:Dogs, project col:Dogs/weight #1, superlative min #1 #2, project col:Dogs/weight #3"}
{"input": "Sort employee names by their age in ascending order. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select col:employee, project col:employee/Name #1, project col:employee/Age #1, sort #2 #3 ascending", "alternatives": "select col:employee, project col:employee/Name #1, project col:employee/Age #1, sort #2 #3 ascending"}
{"input": "Count the number of distinct store locations. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select col:shop, comparative #1 #1 none, aggregate count #2", "alternatives": "select col:shop, comparative #1 #1 none, aggregate count #2"}
{"input": "List all singer names in concerts in year 2014. <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:song, project col:song/Year #1, comparative #1 #2 equal/2014, project tbl:song #3, project col:song/Song_Name #4", "alternatives": "select tbl:song_in_concert, project col:song/Year #1, comparative #1 #2 equal/2014, project tbl:song #3, project col:song/Name #4"}
{"input": "Which year had the most matches? <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:matches, project tbl:matches #1, group #2 #1, superlative max #1 #3", "alternatives": "select col:matches, project none #1, group #2 #1, superlative max #1 #3"}
{"input": "List the maximum weight and type for each type of pet. <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Pets, project col:Pets/weight #1, group #2 #1, project col:Pets/Type #1, union #3 #4", "alternatives": "select col:Has_Pet, project col:Has_Pet/Weight #1, group #2 #1, union #1 #3"}
{"input": "Which orders are made by the customer named \"Jeramie\"? Give me the order ids and status. <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Customers, project col:Customers/customer_name #1, comparative #1 #2 equal/Jeramie, project tbl:Orders #3, project col:Orders/order_id #4, project col:Orders/order_status #4, union #5 #6", "alternatives": "select tbl:Customers, comparative #1 #1 equal/Jeramie col:Customers/customer_name, project tbl:Orders #2, project col:Orders/order_id #3, project col:Orders/order_status #3, union #4 #5"}
{"input": "What are the ids and texts of paragraphs in the document titled 'Welcome to NY'? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Paragraphs, comparative #1 #1 equal/Welcome to NY col:Documents/Document_Name, project col:Paragraphs/Paragraph_ID #2, project col:Paragraphs/Paragraph_Text #2, union #3 #4", "alternatives": "select tbl:Paragraphs, comparative #1 #1 equal/Welcome to NY col:Documents/Document_Name, union #3 #4, project col:Paragraphs/Paragraph_Text #2, project col:Paragraphs/Paragraph_ID #2"}
{"input": "How many templates have template type code CV? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Templates, project tbl:Template_Types #1, comparative #1 #2 equal/CV, aggregate count #3", "alternatives": "select tbl:Templates, project tbl:Creative #1, comparative #1 #2 equal/CV, aggregate count #3"}
{"input": "How many templates have template type code CV? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Templates, project tbl:Template_Types #1, comparative #1 #2 equal/CV, aggregate count #3", "alternatives": "select tbl:Templates, project tbl:Templates #1, comparative #1 #2 equal/CV, aggregate count #3"}
{"input": "Find the name of the customer who made the most orders. <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Customers, project tbl:Orders #1, group #2 #1, superlative max #1 #3, project col:Customers/customer_name #4", "alternatives": "select col:Customers, project tbl:Orders #1, group #2 #1, superlative max #1 #3, project col:Customers/customer_name #4"}
{"input": "What is the airport name for airport 'AKO'? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:airports, comparative #1 #1 equal/AKO col:airports/AirportName, project col:airports/AirportName #2", "alternatives": "select col:airports, project tbl:airports #1, comparative #1 #2 equal/AKO"}
{"input": "What are the names of the teachers and how many courses do they teach? <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select col:teacher, project col:teacher/Name #1, project tbl:course #1, group #3 #1, union #2 #4", "alternatives": "select col:teacher, project col:teacher/Name #1, project tbl:course_arrange #1, group #3 #1, union #2 #4"}
{"input": "Which directors had a movie both in the year 1999 and 2000? <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select col:film, project tbl:film #1, comparative #2 #2 equal/1999 col:film/Year, comparative #2 #2 equal/2000 col:film/Year, intersection #1 #3 #4", "alternatives": "select col:film, project tbl:film #1, comparative #2 #2 equal/1999 col:film/Year, comparative #3 #2 equal/2000 col:film/Year, intersection #1 #4 #5"}
{"input": "How many pets are owned by students that have an age greater than 20? <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Student, project col:Student/Age #1, comparative #1 #2 great/20, project tbl:Has_Pets #3, aggregate count #4", "alternatives": "select tbl:Student, project col:Student/Age #1, comparative #1 #2 great/20, project tbl:Has_Pet #3, aggregate count #4"}
{"input": "What is the document id and name with greatest number of paragraphs? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Documents, project tbl:Paragraphs #1, group #2 #1, superlative max #1 #3, project col:Documents/Document_ID #4, project col:Documents/Document_Name #4, union #5 #6", "alternatives": "select col:Documents, project tbl:Paragraphs #1, group #2 #1, superlative max #1 #3, union #5 #6, project col:Documents/Document_Name #4, project col:Documents/Document_ID #4"}
{"input": "find the name of employee who was awarded the most times in the evaluation. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select tbl:evaluation, project col:evaluation/Year_awarded #1, group #2 #1, superlative max #1 #3, project col:employee/Name #4", "alternatives": "select tbl:evaluation, project col:evaluation/Year_awarded #1, project col:employee/Name #4, superlative max #1 #3, group #2 #1"}
{"input": "How many different loser names are there? <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:matches, aggregate count #2", "alternatives": "select col:matches, aggregate count #1"}
{"input": "What is the last name of the student who has a cat that is 3 years old? <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Student, project tbl:Has_Pets #1, comparative #1 #2 equal/3, project col:Student/LName #3", "alternatives": "select tbl:Student, project val:Pets/PetType/cat #1, comparative #1 #2 equal/3, project col:Student/LName #3"}
{"input": "What are the publishers who have published a book in both 1989 and 1990? <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select col:book, comparative #1 #1 equal/1989 col:book/Year, comparative #1 #1 equal/1990 col:book/Year, intersection #1 #2 #3", "alternatives": "select col:book_club, comparative #1 #1 tbl:book_club, comparative #2 #2 equal/1990 col:book_club/Year, comparative #2 #2 equal/1989 col:book_club/Year, intersection #1 #3 #4"}
{"input": "show the name of all bridges that was designed by american archtect, and sort the result by the bridge feet length. <tbl> architect bridge mill </tbl> <col> id name nationality gender architect_id id name location length_meters length_feet architect_id id location name type built_year notes </col>", "prediction": "select tbl:bridge, comparative #1 #1 equal/American archtect col:archtect/name, project col:bridge/name #2, project col:bridge/length_feet #2, sort #3 #4", "alternatives": "select tbl:bridge, project none #1, comparative #1 #2 equal/American, project col:bridge/name #3, project col:bridge/length_feet #3, sort #4 #5"}
{"input": "What is the airport code of the airport with the most flights? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select col:airports, project tbl:flights #1, group #2 #1, superlative max #1 #3, project col:airports/AirportCode #4", "alternatives": "select tbl:airports, project tbl:flights #1, group #2 #1, superlative max #1 #3, project col:airports/AirportCode #4"}
{"input": "Show all distinct template type codes for all templates. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Templates, project col:Templates/Template_Type_Code #1", "alternatives": "select tbl:Templates, project col:Templates/Template_Type_Code #1"}
{"input": "Find the id of the order which is shipped most recently. <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select col:Shipments, superlative max #1 #1, project col:Shipments/order_id #2", "alternatives": "select col:Shipments, project col:Shipments/shipment_date #1, superlative max #1 #2, project col:Shipments/order_id #3"}
{"input": "Show publishers with a book published in 1989 and a book in 1990. <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select col:book, project tbl:book #1, comparative #2 #2 equal/1989 col:book/Publisher, comparative #2 #2 equal/1990 col:book/Publisher, intersection #1 #3 #4", "alternatives": "select col:book_club, project tbl:book_club #1, comparative #2 #2 equal/1989 col:book/Publisher, comparative #2 #2 equal/1990 col:book_club/Publisher, intersection #1 #3 #4"}
{"input": "List the names of customers who have once canceled the purchase of the product \"food\" (the item status is \"Cancel\"). <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Customers, project tbl:Order_Items #1, comparative #1 #2 equal/food, project col:Order_Items/order_status #3, comparative #3 #4 equal/Cancel, project col:Customers/customer_name #5", "alternatives": "select tbl:Customers, project tbl:Order_Items #1, comparative #3 #4 equal/Cancel, project col:Order_Items/order_status #3, comparative #1 #2 equal/food, project col:Customers/customer_name #5"}
{"input": "Which cities do more than one employee under age 30 come from? <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select col:employee, project tbl:employee #1, comparative #2 #2 less/30 col:employee/Age, group #3 #1, comparative #1 #4 great/1", "alternatives": "select tbl:employee, project col:employee/Age #1, comparative #1 #2 less/30, group #3 #1, comparative #1 #4 great/1"}
{"input": "What is the name of the customer who has the largest number of orders? <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Customers, project tbl:Orders #1, group #2 #1, superlative max #1 #3, project col:Customers/customer_name #4", "alternatives": "select tbl:Customers, project tbl:Orders #1, project col:Customers/customer_name #4, superlative max #1 #3, group #2 #1"}
{"input": "Give the flight numbers of flights leaving from APG. <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, comparative #1 #1 equal/APG col:airports/AirportName, project tbl:flights #2, project col:flights/FlightNo #3", "alternatives": "select tbl:flights, comparative #1 #1 equal/APG col:flights/SourceAirport, project col:flights/FlightNo #2"}
{"input": "Show publishers with a book published in 1989 and a book in 1990. <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select col:book, project tbl:book #1, comparative #2 #2 equal/1989 col:book/Publisher, comparative #2 #2 equal/1990 col:book/Publisher, intersection #1 #3 #4", "alternatives": "select col:book, project tbl:book #1, comparative #2 #2 equal/1990 col:book/Publisher, comparative #2 #2 equal/1989 col:book/Publisher, intersection #1 #3 #4"}
{"input": "List the name of teachers whose hometown is not `` Little Lever Urban District ''. <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select tbl:teacher, project col:teacher/Hometown #1, comparative #1 #2 notequal/Little Lever Urban District, project col:teacher/Name #3", "alternatives": "select tbl:teacher, project col:teacher/Hometown #1, comparative #1 #2 notequal/Little Lever Urban District, project col:teacher/Name #3"}
{"input": "Show all distinct publishers for books. <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select tbl:book_club, project col:book/Publisher #1", "alternatives": "select tbl:book_club, project col:book_club/Publisher #1"}
{"input": "Return the type code of the template type with the description \"Book\". <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Ref_Template_Types, project col:Ref_Template_Types/Template_Type_Description #1, comparative #1 #2 equal/Book, project col:Ref_Template_Type_Types/Template_Type_Type_Code #3", "alternatives": "select tbl:Ref_Template_Types, project col:Ref_Template_Types/Template_Type_Description #1, comparative #1 #2 equal/Book, project col:Ref_Template_Types/Template_Type_Type_Code #3"}
{"input": "How many United Airlines flights go to City 'Aberdeen'? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, comparative #1 #1 equal/Aberdeen col:flights/City, aggregate count #2", "alternatives": "select tbl:flights, project col:flights/City #1, comparative #1 #2 equal/Aberdeen, aggregate count #3"}
{"input": "How much does the youngest dog weigh? <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Pets, project col:Pets/weight #1, superlative min #1 #2, project col:Pets/weight #3", "alternatives": "select val:Pets, project col:Pets/pet_age #1, superlative min #1 #2, project col:Pets/weight #3"}
{"input": "What are the ids of templates with template type code PP or PPT? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Templates, project tbl:Ref_Template_Types #1, comparative #1 #2 equal/PP, comparative #1 #2 equal/PPT, union #3 #4, project col:Ref_Template_Types/Template_Type_Code #5, project col:Ref_Template_Types/Template_ID #6", "alternatives": "select tbl:Templates, project tbl:Ref_Template_Types #1, comparative #1 #2 equal/PPT, comparative #1 #2 equal/PP, union #3 #4, project col:Ref_Template_Types/Template_Type_Code #5, project col:Ref_Template_Types/Template_ID #6"}
{"input": "Which order deals with the most items? Return the order id. <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select col:Orders, project tbl:Order_Items #1, group #2 #1, superlative max #1 #3, project col:Orders/order_id #4", "alternatives": "select tbl:Orders, project tbl:Order_Items #1, group #2 #1, superlative max #1 #3, project col:Orders/order_id #4"}
{"input": "What are the different ids and names of the battles that lost any 'Brig' type shipes? <tbl> battle ship death </tbl> <col> id name date bulgarian_commander latin_commander result lost_in_battle id name tonnage ship_type location disposition_of_ship caused_by_ship_id id note killed injured </col>", "prediction": "select tbl:battle, project tbl:ship #1, comparative #1 #2 equal/Brig, project col:battle/id #3, project col:battle/name #3, union #4 #5", "alternatives": "select tbl:battle, comparative #1 #1 equal/Brig col:ship/ship_type, project col:battle/id #2, project col:battle/name #2, union #3 #4"}
{"input": "Find the number of players for each hand type. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:matches, project tbl:players #1, group #2 #1, union #1 #3", "alternatives": "select col:hand, project tbl:players #1, group #2 #1, union #1 #3"}
{"input": "What is the name and capacity for the stadium with the highest average attendance? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:stadium, project col:stadium/Average #1, group #2 #1, superlative max #1 #3, project col:stadium/Name #4, project col:stadium/Capacity #4, union #5 #6", "alternatives": "select tbl:stadium, project col:stadium/Average #1, project col:stadium/Capacity #4, superlative max #1 #3, project col:stadium/Name #4, group #2 #1, union #5 #6"}
{"input": "What are the opening year and staff number of the museum named Plaza Museum? <tbl> museum visitor visit </tbl> <col> Museum_ID Name Num_of_Staff Open_Year ID Name Level_of_membership Age Museum_ID visitor_ID Num_of_Ticket Total_spent </col>", "prediction": "select tbl:museum, comparative #1 #1 equal/Plaza Museum col:museum/Name, project col:museum/Open_Year #2, project col:museum/Num_of_Staff #2, union #3 #4", "alternatives": "select tbl:museum, comparative #1 #1 equal/Plaza Museum col:museum/Name, project col:museum/Open_Year #2, project col:museum/Num_of_Staff #2, aggregate col:museum/Num_of_Staff #4, union #3 #5"}
{"input": "Return the id and name of the document with the most paragraphs. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, project tbl:Paragraphs #1, group #2 #1, superlative max #1 #3, project col:Documents/Document_ID #4, project col:Documents/Document_Name #4, union #5 #6", "alternatives": "select col:Documents, project tbl:Paragraphs #1, group #2 #1, superlative max #1 #3, project col:Documents/Document_ID #4, project col:Documents/Document_Name #4, union #5 #6"}
{"input": "What are the average and maximum number of tickets bought in all visits? <tbl> museum visitor visit </tbl> <col> Museum_ID Name Num_of_Staff Open_Year ID Name Level_of_membership Age Museum_ID visitor_ID Num_of_Ticket Total_spent </col>", "prediction": "select tbl:visit, project col:visit/Num_of_Ticket #1, aggregate col:visit/Num_of_Ticket #2, aggregate avg #3, aggregate max #3, union #4 #5", "alternatives": "select col:visit, aggregate avg #1, aggregate max #1, union #2 #3"}
{"input": "Find the names of stores whose number products is more than the average number of products. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select tbl:shop, project col:shop/Number_products #1, group #2 #1, aggregate avg #3, comparative #1 #3 great/#4, project col:shop/Name #5", "alternatives": "select tbl:shop, aggregate avg #3, group #2 #1, project col:shop/Number_products #1, comparative #1 #3 lessequal/#4, project col:shop/Name #5"}
{"input": "What is the abbreviation of Airline \"JetBlue Airways\"? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:airlines, comparative #1 #1 equal/JetBlue Airways col:airlines/Airline, project col:airlines/Abbreviation #2", "alternatives": "select tbl:airlines, comparative #1 #1greatequal//JetBlue Airways col:airlines/Airline, project col:airlines/Abbreviation #2"}
{"input": "Find the total ranking points for each player and their first name. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:players, project col:players/ranking_points #1, group #2 #1, project col:players/first_name #1, union #1 #3", "alternatives": "select col:players, project col:players/ranking_points #1, group #2 #1, project col:players/first_name #1, union #1 #3 #4"}
{"input": "Return the ids corresponding to templates with the description 'Presentation'. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Templates, project col:Templates/Template_Description #1, comparative #1 #2 equal/Presentation, project col:Templates/Template_ID #3", "alternatives": "select tbl:Templates, project col:Templates/Temple_Description #1, comparative #1 #2 equal/Presentation, project col:Templates/Template_ID #3"}
{"input": "find the minimum and maximum number of products of all stores. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select tbl:shop, project col:shop/Number_products #1, aggregate min #2, aggregate max #2, union #3 #4", "alternatives": "select tbl:shop, project col:shop/Number_products #1, union #3 #4, aggregate max #2, aggregate min #2"}
{"input": "What are airlines that have some flight departing from airport 'AHD'? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select col:flights, project tbl:flights #1, comparative #1 #2 equal/AHD, project col:airlines/Airline #3", "alternatives": "select col:flights, project tbl:flights #1, comparative #1 #2lessequal//AHD, project col:airlines/Airline #3"}
{"input": "Show paragraph details for paragraph with text 'Korea'. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Paragraphs, project col:Paragraphs/Paragraph_Text #1, comparative #1 #2 equal/Korea, project col:Paragraphs/Paragraph_Details #3", "alternatives": "select tbl:Paragraphs, project col:Paragraphs/Paragraph_Text #1, comparative #1 #2 equal/Korea, project col:Paragraphs/Path_Details #3"}
{"input": "Find the id and name of the museum that has the most staff members? <tbl> museum visitor visit </tbl> <col> Museum_ID Name Num_of_Staff Open_Year ID Name Level_of_membership Age Museum_ID visitor_ID Num_of_Ticket Total_spent </col>", "prediction": "select tbl:museum, project col:museum/Num_of_Staff #1, group #2 #1, superlative max #1 #3, project col:museum/Museum_ID #4, project col:museum/Name #4, union #5 #6", "alternatives": "select tbl:museum, project col:museum/Museum_ID #4, group #2 #1, superlative max #1 #3, project col:museum/Num_of_Staff #1, project col:museum/Name #4, union #5 #6"}
{"input": "What is the average, maximum, and minimum budget for all movies before 2000. <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select tbl:film, comparative #1 #1 less/2000 col:film/Year, project col:film/Budget_million #2, aggregate avg #3, aggregate max #3, aggregate min #3, union #4 #5 #6", "alternatives": "select tbl:movie, comparative #1 #1 less/2000 col:movie/Year, project col:movie/Budget_million #2, aggregate avg #3, aggregate max #3, aggregate min #3, union #4 #5 #6"}
{"input": "Which city has most number of arriving flights? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select col:airports, project tbl:flights #1, group #2 #1, superlative max #1 #3", "alternatives": "select col:airports, project tbl:flights #1, group #2 #1, superlative max #1 #3"}
{"input": "What is the first name and gender of the all the students who have more than one pet? <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Student, project tbl:Has_Pets #1, group #2 #1, comparative #1 #3 great/1, project col:Student/Fname #4, project col:Student/Sex #4, union #5 #6", "alternatives": "select tbl:Student, project tbl:Has_Pet #1, group #2 #1, comparative #1 #3 great/1, project col:Student/Fname #4, project col:Student/Sex #4, union #5 #6"}
{"input": "Count the number of documents that use the PPT template type. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, project tbl:Ref_Template_Types #1, comparative #1 #2 equal/PPT, aggregate count #3", "alternatives": "select tbl:Documents, project tbl:Templates #1, comparative #1 #2 equal/PPT, aggregate count #3"}
{"input": "Find the name of the shops that do not hire any employee. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select tbl:shop, comparative #1 #1 tbl:hiring, discard #1 #2, project col:shop/Name #3", "alternatives": "select tbl:shop, comparative #1 #1 tbl:earning, discard #1 #2, project col:shop/Name #3"}
{"input": "Sort all the shops by number products in descending order, and return the name, location and district of each shop. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select tbl:shop, project col:shop/Name #1, project col:shop/Location #1, project col:shop/District #1, union #2 #3 #4, sort #6 #5 descending", "alternatives": "select tbl:shop, project col:shop/Name #1, project col:shop/Location #1, project col:shop/District #1, project col:shop/Number_products #1, group #5 #1, union #2 #3 #4, sort #7 #6 descending"}
{"input": "List the first and last name of all players in the order of birth date. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:players, project col:players/first_name #1, project col:players/last_name #1, project col:players/birth_date #1, union #2 #3, sort #5 #4", "alternatives": "select tbl:players, project col:players/last_name #1, project col:players/first_name #1, project col:players/birth_date #1, union #2 #3, sort #5 #4"}
{"input": "Sort all the shops by number products in descending order, and return the name, location and district of each shop. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select tbl:shop, project col:shop/Name #1, project col:shop/Location #1, project col:shop/District #1, union #2 #3 #4, sort #6 #5 descending", "alternatives": "select tbl:shop, project col:shop/Number_products #1, group #2 #1, project col:shop/Name #1, project col:shop/Location #1, union #4 #5 #3, sort #6 #5 descending"}
{"input": "What is the abbreviation of Airline \"JetBlue Airways\"? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:airlines, comparative #1 #1 equal/JetBlue Airways col:airlines/Airline, project col:airlines/Abbreviation #2", "alternatives": "select col:airlines, comparative #1 #1 equal/JetBlue Airways col:airlines/Airline"}
{"input": "Return the type code of the template type that the most templates belong to. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Templates, project tbl:Ref_Template_Types #1, group #2 #1, superlative max #1 #3, project col:Ref_Template_Types/Template_Type_Code #4", "alternatives": "select col:Templates, project tbl:Ref_Template_Types #1, superlative max #1 #3, group #2 #1, project col:Ref_Template_Types/Template_Type_Code #4"}
{"input": "How many distinct countries do players come from? <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:players, aggregate count #2", "alternatives": "select tbl:players, aggregate count #4"}
{"input": "What are the names and year of construction for the mills of 'Grondzeiler' type? <tbl> architect bridge mill </tbl> <col> id name nationality gender architect_id id name location length_meters length_feet architect_id id location name type built_year notes </col>", "prediction": "select tbl:mill, project col:mill/type #1, comparative #1 #2 equal/Grondzeiler, project col:mill/name #3, project col:mill/built_year #3, union #4 #5", "alternatives": "select tbl:mill, project col:mill/type #1, comparative #1 #2 equal/Grondzeiler, project col:mill/built_year #3, project col:mill/name #3, union #4 #5"}
{"input": "What are the ids of templates with template type code PP or PPT? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Templates, project tbl:Ref_Template_Types #1, comparative #1 #2 equal/PP, comparative #1 #2 equal/PPT, union #3 #4, project col:Ref_Template_Types/Template_Type_Code #5, project col:Ref_Template_Types/Template_ID #6", "alternatives": "select tbl:Templates, project tbl:Ref_Template_Types #1, comparative #1 #2 equal/PP, comparative #1 #2 equal/PTP, union #3 #4, project col:Ref_Template_Types/Template_Type_Code #5, project col:Ref_Template_Types/Template_ID #6"}
{"input": "Find the number of flights landing in the city of Aberdeen or Abilene. <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, project col:flights/City #1, comparative #1 #2 equal/Aberdeen, comparative #1 #2 equal/Abilene, union #3 #4, aggregate count #5", "alternatives": "select tbl:flights, project tbl:airports #1, comparative #1 #2 equal/Aberdeen, comparative #1 #2 equal/Abilene, union #3 #4, aggregate count #5"}
{"input": "Find the name and age of the visitor who bought the most tickets at once. <tbl> museum visitor visit </tbl> <col> Museum_ID Name Num_of_Staff Open_Year ID Name Level_of_membership Age Museum_ID visitor_ID Num_of_Ticket Total_spent </col>", "prediction": "select tbl:visit, project tbl:visit #1, group #2 #1, superlative max #1 #3, project col:visit/Name #4, project col:visit/Age #4, union #5 #6", "alternatives": "select tbl:visit, project col:visit/Age #4, group #2 #1, superlative max #1 #3, project col:visit/Name #4, project tbl:visit #1, union #5 #6"}
{"input": "What are the names of tournaments that have more than 10 matches? <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:matches, project tbl:matches #1, group #2 #1, comparative #1 #3 great/10, project col:matches/turner_name #4", "alternatives": "select col:matches, project tbl:matches #1, group #2 #1, comparative #1 #3 great/10, project col:matches/tourney_name #4"}
{"input": "How many concerts occurred in 2014 or 2015? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:concert, comparative #1 #1 equal/2014 col:concert/Year, comparative #1 #1 equal/2015 col:concert/Year, union #2 #3, aggregate count #4", "alternatives": "select tbl:concert, comparative #1 #1 equal/2014 col:concert/Year, comparative #1 #1 equal/2015 col:concert/Year, union #2 #3, aggregate count #4"}
{"input": "List the number of all matches who played in years of 2013 or 2016. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:matches, project col:matches/year #1, comparative #1 #2 equal/2013, comparative #1 #2 equal/2016, union #3 #4, aggregate count #5", "alternatives": "select tbl:matches, project col:matches/year #1, comparative #1 #2 equal/2016, comparative #1 #2 equal/2013, union #3 #4, aggregate count #5"}
{"input": "List all singer names in concerts in year 2014. <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:song, project col:song/Year #1, comparative #1 #2 equal/2014, project tbl:song #3, project col:song/Song_Name #4", "alternatives": "select tbl:concert, comparative #1 #1 equal/2014 col:concert/Year, project col:singer/Name #2"}
{"input": "What are flight numbers of flights departing from City \"Aberdeen \"? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, comparative #1 #1 equal/Aberdeen col:airports/City, project tbl:flights #2, project col:flights/FlightNo #3", "alternatives": "select tbl:flights, project col:flights/DepartureAirport #1, comparative #1 #2 equal/Aberdeen, project col:flights/FlightNo #3"}
{"input": "Show all movie titles, years, and directors, ordered by budget. <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select tbl:film, project col:film/Title #1, project col:film/Year #1, project col:film/Director #1, project col:film/Budget_million #1, union #2 #3 #4, sort #6 #5", "alternatives": "select tbl:film, project col:film/Title #1, project col:film/Director #1, project col:film/Year #1, project col:film/Budget_million #1, union #2 #3 #4, sort #6 #5"}
{"input": "How many shops are there in each location? <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select col:shop, project tbl:shop #1, group #2 #1, union #1 #3", "alternatives": "select col:shop, project tbl:shop #1, group #2 #1, union #1 #3"}
{"input": "List the first name and birth date of all players from the country with code USA. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:players, project col:players/country_code #1, comparative #1 #2 equal/USA, project col:players/first_name #3, project col:players/birth_date #3, union #4 #5", "alternatives": "select tbl:players, project col:players/country_code #1, project col:players/birth_date #3, project col:players/first_name #3, comparative #1 #2less//USA, union #4 #5"}
{"input": "List document IDs, document names, and document descriptions for all documents. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, project col:Documents/Document_ID #1, project col:Documents/Document_Name #1, project col:Documents/Document_Description #1, union #2 #3 #4", "alternatives": "select tbl:Documents, project col:Documents/Document_ID #1, project col:Documents/Document_Name #1, union #2 #3 #4, project col:Documents/Document_Description #1"}
{"input": "What are the names of the teachers who teach at least two courses? <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select tbl:teacher, project tbl:course #1, group #2 #1, comparative #1 #3 greatequal/2, project col:teacher/Name #4", "alternatives": "select tbl:teacher, project tbl:course_arrange #1, group #2 #1, comparative #1 #3 greatequal/2, project col:teacher/Name #4"}
{"input": "Count the number of employees <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select col:employee, aggregate count #1", "alternatives": "select and aggregate count #1"}
{"input": "How many ships ended up being 'Captured'? <tbl> battle ship death </tbl> <col> id name date bulgarian_commander latin_commander result lost_in_battle id name tonnage ship_type location disposition_of_ship caused_by_ship_id id note killed injured </col>", "prediction": "select tbl:ship, comparative #1 #1 equal/Captured col:ship/result, aggregate count #2", "alternatives": "select tbl:ship, comparative #1 #1 equal/Captured col:ship/product, aggregate count #2"}
{"input": "Give me a list of id and status of orders which belong to the customer named \"Jeramie\". <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Customers, comparative #1 #1 equal/Jeramie col:Customers/customer_name, project tbl:Orders #2, project col:Orders/order_id #3, project col:Orders/order_status #3, union #4 #5", "alternatives": "select tbl:Customers, comparative #1 #1 equal/Jeramie col:Customers/customer_name, project col:Orders/order_status #3, project col:Orders/order_id #3, project tbl:Orders #2, union #4 #5"}
{"input": "Find the name of tourney that has more than 10 matches. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:matches, project tbl:matches #1, group #2 #1, comparative #1 #3 great/10, project col:matches/turner_name #4", "alternatives": "select col:matches, project tbl:matches #1, group #2 #1, comparative #1 #3 great/10, project col:matches/tourney_name #4"}
{"input": "Show all template ids and number of documents using each template. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Templates, project col:Templates/Template_ID #1, project tbl:Documents #1, group #3 #1, union #2 #4", "alternatives": "select col:Clauses, project col:Clauses/Template_ID #1, project tbl:Documents #1, group #3 #1, union #2 #4"}
{"input": "Show names of teachers and the courses they are arranged to teach in ascending alphabetical order of the teacher's name. <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select tbl:teacher, project col:teacher/Name #1, project col:course_arrange/Name #1, union #2 #3, sort #4 #2 ascending", "alternatives": "select tbl:teacher, project col:teacher/Name #1, project col:course_arrange/Name #1, sort #4 #2 ascending, union #2 #3"}
{"input": "Find the first name and age of students who have a pet. <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Student, comparative #1 #1 tbl:Has_Pets, project col:Student/Fname #2, project col:Student/Age #2, union #3 #4", "alternatives": "select tbl:Student, comparative #1 #1 tbl:Has_Pets, project col:Student/Fname #2, union #3 #4, project col:Student/Age #2"}
{"input": "Find number of pets owned by students who are older than 20. <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Student, comparative #1 #1 great/20 col:Student/Age, project tbl:Has_Pets #2, aggregate count #3", "alternatives": "select tbl:Student, comparative #1 #1 great/20 col:Student/Age, project tbl:Has_Pet #2, aggregate count #3"}
{"input": "What are the airline names and abbreviations for airlines in the USA? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:airlines, comparative #1 #1 equal/USA col:airlines/Country, project col:airlines/Airline #2, project col:airlines/Abbreviation #2, union #3 #4", "alternatives": "select tbl:airlines, comparative #1 #1 equal/USA col:airlines/Country, project col:airlines/Airline #2, project col:airlines/Abbreviation #2, union #3 #4"}
{"input": "What are the distinct battle names which are between bulgarian commander 'Kaloyan' and latin commander 'Baldwin I'? <tbl> battle ship death </tbl> <col> id name date bulgarian_commander latin_commander result lost_in_battle id name tonnage ship_type location disposition_of_ship caused_by_ship_id id note killed injured </col>", "prediction": "select tbl:bathroom, comparative #1 #1 equal/Kaloyan col:bathroom/bulbularian_commander, comparative #1 #1 equal/latin col:bathroom/latin_commander, intersection #1 #2 #3", "alternatives": "select tbl:battle, comparative #1 #1 equal/Kaloyan col:battle/bulgarian_commander, comparative #2 #2 equal/Baldwin I col:battle/latin_commander, project col:battle/name #3"}
{"input": "Which shops' number products is above the average? Give me the shop names. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select tbl:shop, project col:shop/Number_products #1, aggregate avg #2, comparative #1 #2 great/#3, project col:shop/Name #4", "alternatives": "select tbl:shop, project col:shop/Number_products #1, project col:shop/Name #4, comparative #1 #2 great/#3, aggregate avg #2"}
{"input": "For students who have pets, how many pets does each student have? list their ids instead of names. <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select col:Has_Pets, comparative #1 #1 tbl:Has_Pets, project tbl:Has_Pets #2, group #3 #2, project col:Has_Pets/StuID #2, union #4 #5", "alternatives": "select col:Has_Pets, project tbl:Has_Pets #2, comparative #1 #1 tbl:Has_Pets, group #3 #2, project col:Has_Pets/StuID #2, union #4 #5"}
{"input": "How many singers do we have? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:song, aggregate count #1", "alternatives": "select tbl:singer, aggregate count #1"}
{"input": "Find the name of the customer who made the most orders. <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Customers, project tbl:Orders #1, group #2 #1, superlative max #1 #3, project col:Customers/customer_name #4", "alternatives": "select tbl:Customers, project tbl:Orders #1, superlative max #1 #3, group #2 #1, project col:Customers/customer_name #4"}
{"input": "Show all countries and the number of singers in each country. <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select col:song, project tbl:song #1, group #2 #1, union #1 #3", "alternatives": "select col:songer, project tbl:song #1, group #2 #1, union #1 #3"}
{"input": "Find the total ranking points for each player and their first name. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:players, project col:players/ranking_points #1, group #2 #1, project col:players/first_name #1, union #1 #3", "alternatives": "select col:players, project col:rankings/ranking_points #1, group #2 #1, project col:players/first_name #1, union #3 #4"}
{"input": "How many different templates do all document use? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, project col:Documents/Template_Type_Code #1, aggregate count #3", "alternatives": "select tbl:Templates, project col:Templates/Template_Type_Code #1, aggregate sum #3"}
{"input": "What is the average, maximum, and minimum budget for all movies before 2000. <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select tbl:film, comparative #1 #1 less/2000 col:film/Year, project col:film/Budget_million #2, aggregate avg #3, aggregate max #3, aggregate min #3, union #4 #5 #6", "alternatives": "select tbl:film, aggregate max #3, project col:film/Budget_million #2, aggregate avg #3, comparative #1 #1  equal2000 col:film/Year, aggregate min #3, union #4 #5 #6"}
{"input": "What are airlines that have some flight departing from airport 'AHD'? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select col:flights, project tbl:flights #1, comparative #1 #2 equal/AHD, project col:airlines/Airline #3", "alternatives": "select col:flights, project tbl:flights #1, project col:airports/AirportName #2, comparative #1 #3 equal/AHD"}
{"input": "What are the dates of the orders made by the customer named \"Jeramie\"? <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Customers, comparative #1 #1 equal/Jeramie col:Customers/customer_name, project tbl:Orders #2, project col:Orders/order_date #3", "alternatives": "select tbl:Customers, comparative #1 #1great//Jeramie col:Customers/customer_name, project tbl:Orders #2, project col:Orders/order_date #3"}
{"input": "Return the number of United Airlines flights leaving from AHD Airport. <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, comparative #1 #1 equal/AHD Airport col:airports/AirportName, aggregate count #2", "alternatives": "select tbl:flights, comparative #1 #1lessequal//AHD Airport col:airports/AirportName, aggregate count #2"}
{"input": "What are the first names of all players, and their average rankings? <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:players, project col:players/first_name #1, project col:players/ranking_points #1, group #3 #1, union #2 #4", "alternatives": "select col:players, project col:players/first_name #1, project col:rankings/ranking #1, group #3 #1, union #2 #4"}
{"input": "Return the average, maximum, and minimum budgets in millions for movies made before the year 2000. <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select tbl:film, comparative #1 #1 less/2000 col:film/Year, project col:film/Budget_million #2, aggregate avg #3, aggregate max #3, aggregate min #3, union #4 #5 #6", "alternatives": "select tbl:movie, project col:movie/Year #1, comparative #1 #2 less/2000, project col:movie/Budget_million #3, aggregate avg #4, aggregate max #4, aggregate min #4, union #5 #6 #7"}
{"input": "What are the names and release years for all the songs of the youngest singer? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:song, project col:song/Is_male #1, superlative min #1 #2, project col:song/Song_Name #3, project col:song/Song_release_year #3, union #4 #5", "alternatives": "select tbl:song, project col:song/Is_male #1, superlative min #1 #2, project col:song/Song_release_year #3, project col:song/Song_Name #3, union #4 #5"}
{"input": "Show all document ids and the number of paragraphs in each document. Order by document id. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Documents, project col:Documents/Document_ID #1, project tbl:Paragraphs #1, group #3 #1, union #2 #4, sort #5 #4", "alternatives": "select col:Documents, project col:Documents/Document_ID #1, project tbl:Paragraphs #1, group #3 #1, union #2 #4, sort #5 #2"}
{"input": "Find the name of tourney that has more than 10 matches. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:matches, project tbl:matches #1, group #2 #1, comparative #1 #3 great/10, project col:matches/turner_name #4", "alternatives": "select tbl:turnier, project tbl:matches #1, group #2 #1, comparative #1 #3 great/10, project col:turniers/turner_name #4"}
{"input": "Count the number of flights departing from 'APG'. <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, comparative #1 #1 equal/APG col:airlines/AirportName, aggregate count #2", "alternatives": "select tbl:flights, comparative #1 #1great//APG col:airlines/AirportName, aggregate count #2"}
{"input": "Show all document ids, names and the number of paragraphs in each document. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Documents, project col:Documents/Document_ID #1, project col:Documents/Document_Name #1, project tbl:Paragraphs #1, group #4 #1, union #2 #3 #5", "alternatives": "select col:Documents, union #2 #3 #5, project col:Documents/Document_Name #1, project tbl:Paragraphs #1, group #4 #1, project col:Documents/Document_ID #1"}
{"input": "Find the weight of the youngest dog. <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Pets, project col:Pets/weight #1, superlative min #1 #2, project col:Pets/weight #3", "alternatives": "select tbl:Pets, project col:Pets/weight #1, superlative min #1 #2, project col:Pets/weight #3"}
{"input": "Which order deals with the most items? Return the order id. <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select col:Orders, project tbl:Order_Items #1, group #2 #1, superlative max #1 #3, project col:Orders/order_id #4", "alternatives": "select tbl:Orders, project tbl:Order_Items #1, group #2 #1, superlative max #1 #3, project col:Orders/order_id #4"}
{"input": "find the number of distinct country codes of all players. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:players, project col:players/country_code #1, aggregate count #3", "alternatives": "select tbl:players, project col:players/country_code #1, aggregate count #3"}
{"input": "What is the document id, template id and description for document named \"Robbin CV\"? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, comparative #1 #1 equal/Robbin CV col:Documents/Document_Name, project col:Documents/Document_ID #2, project col:Documents/Template_ID #3, project col:Documents/Document_Description #3, union #4 #5 #6", "alternatives": "select tbl:Documents, comparative #1 #1 equal/Robbin CV col:Documents/Document_Name, project col:Documents/Document_ID #2, project col:Documents/Document_Description #3, project col:Documents/Template_ID #3, union #4 #5 #6"}
{"input": "Which customers have made at least two orders? Give me each customer name and number of orders made. <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select col:Customers, project tbl:Orders #1, group #2 #1, comparative #1 #3 greatequal/2, project col:Customers/customer_name #4, project tbl:Orders #4, group #6 #4, union #5 #7", "alternatives": "select col:Customers, project tbl:Orders #1, group #2 #1, project col:Customers/customer_name #4, comparative #1 #3 less/2, project tbl:Orders #4, group #6 #4, union #5 #7"}
{"input": "List the name, date and result of each battle. <tbl> battle ship death </tbl> <col> id name date bulgarian_commander latin_commander result lost_in_battle id name tonnage ship_type location disposition_of_ship caused_by_ship_id id note killed injured </col>", "prediction": "select tbl:battle, project col:battle/name #1, project col:battle/date #1, project col:battle/Result #1, union #2 #3 #4", "alternatives": "select tbl:battle, project col:battle/name #1, project col:battle/date #1, project col:battle/result #1, union #2 #3 #4"}
{"input": "On what day was the order with invoice number 10 placed? <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Orders, project tbl:Invoices #1, comparative #1 #2 equal/10, project col:Orders/date_order_placed #3", "alternatives": "select tbl:Orders, project tbl:Invoices #1, comparative #1 #2lessequal//10, project col:Orders/date_order_placed #3"}
{"input": "What are the ids for templates that are not used in any documents? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Templates, comparative #1 #1 tbl:Documents, discard #1 #2, project col:Templates/Template_ID #3", "alternatives": "select tbl:Templates, comparative #1 #1 tbl:Documents, discard #1 #2, project col:Templates/Template_ID #3"}
{"input": "What are airport names at City 'Aberdeen'? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:airports, comparative #1 #1 equal/Aberdeen col:airports/City, project col:airports/AirportName #2", "alternatives": "select tbl:airports, project col:airports/AirportName #1, comparative #2 #1 equal/Aberdeen"}
{"input": "Show the movie titles and book titles for all companies in China. <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select tbl:company, comparative #1 #1 equal/China col:culture_company/Company_name, project col:film/Title #2, project col:book/Title #2, union #3 #4", "alternatives": "select tbl:company, project col:film/Title #2, comparative #1 #1lessequal//China col:culture_company/Company_name, project col:book/Title #2, union #3 #4"}
{"input": "Return the different document ids along with the number of paragraphs corresponding to each, ordered by id. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Documents, project tbl:Paragraphs #1, group #2 #1, union #1 #3, sort #4 #3", "alternatives": "select col:Paragraphs, project tbl:Paragraphs #1, group #2 #1, union #1 #3, sort #4 #3"}
{"input": "Find the number of distinct name of losers. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:losers, aggregate count #2", "alternatives": "select col:matches, aggregate count #2"}
{"input": "Which orders are made by the customer named \"Jeramie\"? Give me the order ids and status. <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Customers, project col:Customers/customer_name #1, comparative #1 #2 equal/Jeramie, project tbl:Orders #3, project col:Orders/order_id #4, project col:Orders/order_status #4, union #5 #6", "alternatives": "select tbl:Customers, project col:Customers/customer_name #1, comparative #1 #2 equal/Jeramie, project tbl:Orders #3, project col:Orders/order_status #4, project col:Orders/order_id #4, union #5 #6"}
{"input": "Return the average, maximum, and minimum budgets in millions for movies made before the year 2000. <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select tbl:film, comparative #1 #1 less/2000 col:film/Year, project col:film/Budget_million #2, aggregate avg #3, aggregate max #3, aggregate min #3, union #4 #5 #6", "alternatives": "select tbl:film, comparative #1 #1 greatequal/2000 col:film/Year, aggregate max #3, aggregate avg #3, project col:film/Budget_million #2, aggregate min #3, union #4 #5 #6"}
{"input": "For each continent, list its id, name, and how many countries it has? <tbl> continents countries car_makers model_list car_names cars_data </tbl> <col> ContId Continent CountryId CountryName Continent Id Maker FullName Country ModelId Maker Model MakeId Model Make Id MPG Cylinders Edispl Horsepower Weight Accelerate Year </col>", "prediction": "select col:continents, project col:continents/Continent #1, project col:continents/Continent #1, project col:continents/CountryName #1, union #2 #3 #4", "alternatives": "select col:continents, union #2 #3 #4, project col:continents/Continent #1, project col:continents/CountryName #1, project col:continents/Continent #1"}
{"input": "What are the ids and names of each document, as well as the number of paragraphs in each? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Documents, project col:Documents/Document_ID #1, project col:Documents/Document_Name #1, project tbl:Paragraphs #1, group #4 #1, union #2 #3 #5", "alternatives": "select col:Paragraphs, project col:Paragraphs/Document_ID #1, project col:Documents/Document_Name #1, project tbl:Paragraphs #1, group #4 #1, union #2 #3 #5"}
{"input": "Show names for all stadiums except for stadiums having a concert in year 2014. <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:stadium, project tbl:concert #1, project col:stadium/Year #2, comparative #1 #3 equal/2014, discard #1 #4, project col:stadium/Name #5", "alternatives": "select tbl:stadium, project tbl:conzert #1, project col:stadium/Year #2, comparative #1 #3 equal/2014, discard #1 #4, project col:stadium/Name #5"}
{"input": "Return the average, maximum, and minimum budgets in millions for movies made before the year 2000. <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select tbl:film, comparative #1 #1 less/2000 col:film/Year, project col:film/Budget_million #2, aggregate avg #3, aggregate max #3, aggregate min #3, union #4 #5 #6", "alternatives": "select tbl:film, comparative #1 #1 less/2000 col:film/Year, aggregate max #3, aggregate avg #3, project col:film/Budget_million #2, aggregate min #3, union #4 #5 #6"}
{"input": "Which abbreviation corresponds to Jetblue Airways? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select val:airlines, project col:airlines/Abbreviation #1", "alternatives": "select val:airlines, project col:airlines/Abbreviation #1"}
{"input": "What are all company names that have a corresponding movie directed in the year 1999? <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select col:film, project tbl:film #1, project col:film/Year #2, comparative #2 #3 equal/1999 col:film/Year", "alternatives": "select col:film, project tbl:film #1, project col:film/Year #2, comparative #2 #3great//1999 col:film/Year"}
{"input": "Which cities do more than one employee under age 30 come from? <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select col:employee, project tbl:employee #1, comparative #2 #2 less/30 col:employee/Age, group #3 #1, comparative #1 #4 great/1", "alternatives": "select col:employee, project tbl:employee #1, project col:employee/Age #2, comparative #2 #3 less/30, group #4 #1, comparative #1 #5 great/1"}
{"input": "What is the placement date of the order whose invoice number is 10? <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select col:Orders, comparative #1 #1 equal/10 col:Invoices/invoice_number, project col:Orders/date_order_placed #2", "alternatives": "select col:Orders, comparative #1 #1greatequal//10 col:Invoices/invoice_number, project col:Orders/date_order_placed #2"}
{"input": "Show the years, book titles, and publishers for all books, in descending order by year. <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select tbl:book, project col:book/Year #1, project col:book/Book_Title #1, project col:book/Publisher #1, union #2 #3 #4, sort #6 #5 descending", "alternatives": "select tbl:book, project col:book/Year #1, project col:book/Publisher #1, project col:book/Book_Title #1, union #2 #3 #4, sort #6 #5 descending"}
{"input": "Show the name and theme for all concerts and the number of singers in each concert. <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select col:song_in_concert, project col:song/Concert_Name #1, project col:song_in_concert/Theme #1, project tbl:song_in_concert #1, group #4 #1, union #2 #3 #5", "alternatives": "select col:song_in_concert, project col:song/Concert_Name #1, union #2 #3 #5, project tbl:song_in_concert #1, group #4 #1, project col:song_in_concert/Theme #1"}
{"input": "Give the ids of documents that have between one and two paragraphs. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Documents, project tbl:Paragraphs #1, group #2 #1, comparative #1 #3 greatequal/1, comparative #1 #3 lessequal/2, project col:Documents/Document_ID #4", "alternatives": "select col:Paragraphs, project tbl:Paragraphs #1, group #2 #1, comparative #1 #3 lessequal/2, comparative #1 #3 greatequal/1, intersection #1 #4 #5, project col:Paragraphs/Document_ID #6"}
{"input": "What are the different template type codes? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Ref_Template_Types", "alternatives": "select tbl:Templates"}
{"input": "When was the order placed whose shipment tracking number is 3452? Give me the date. <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Orders, project tbl:Shipments #1, project col:Shipments/shipment_tracking_number #2, comparative #1 #3 equal/3452, project col:Orders/date_order_placed #4", "alternatives": "select col:Shipments, aggregate count #1, comparative #1 #2 equal/3452, project tbl:Orders #3, project col:Orders/date_order_placed #4"}
{"input": "How many book clubs are there? <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select tbl:book_club, aggregate count #1", "alternatives": "select tbl:book_club, aggregate count #1"}
{"input": "What is the first name and country code of the player with the most tours? <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:players, project col:matches/turns #1, group #2 #1, superlative max #1 #3, project col:players/first_name #4, project col:players/country_code #4, union #5 #6", "alternatives": "select tbl:players, project col:matches/turns #1, union #5 #6, superlative max #1 #3, project col:players/first_name #4, project col:players/country_code #4, group #2 #1"}
{"input": "What are the names of the singers who performed in a concert in 2014? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:song, comparative #1 #1 equal/2014 col:song_in_concert/Year, project tbl:song #2, project col:song/Song_Name #3", "alternatives": "select tbl:song, comparative #1 #1lessequal//2014 col:song_in_concert/Year, project tbl:song #2, project col:song/Song_Name #3"}
{"input": "Which customers made orders between 2009-01-01 and 2010-01-01? Find their names. <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Customers, project tbl:Orders #1, comparative #1 #2 greatequal/2009-01-01, comparative #3 #2 lessequal/2010-01-01 col:Orders/date_order_placed, project col:Customers/customer_name #4", "alternatives": "select tbl:Orders, comparative #1 #1 lessequal/2010-01-01 col:Orders/date_order_placed, comparative #2 #2 greatequal/2009-01-01 col:Orders/date_order_placed, project tbl:Customers #3, project col:Customers/customer_name #4"}
{"input": "How many different types of pet are there? <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Pets, project col:Pets/PetType #1, aggregate count #3", "alternatives": "select tbl:Pets, project col:Pets/PetType #1, aggregate count #3"}
{"input": "Return the ids of templates that have the code PP or PPT. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Templates, project col:Templates/Template_Type_Code #1, comparative #1 #2 equal/PP, comparative #1 #2 equal/PPT, union #3 #4, project col:Templates/Template_ID #5", "alternatives": "select tbl:Templates, project col:Templates/Template_Type_Code #1, comparative #1 #2 equal/PPT, comparative #1 #2 equal/PP, union #3 #4, project col:Templates/Template_ID #5"}
{"input": "Return the name, location and district of all shops in descending order of number of products. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select tbl:shop, project col:shop/Name #1, project col:shop/Location #1, project col:shop/District #1, project col:shop/Number_products #1, group #4 #1, union #2 #3 #5, sort #6 #5 descending", "alternatives": "select tbl:shop, union #2 #3 #5, project col:shop/Location #1, project col:shop/District #1, project col:shop/Number_products #1, group #4 #1, project col:shop/Name #1, sort #6 #5 descending"}
{"input": "What are all the song names by singers who are older than average? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:song, project col:song/Age #1, aggregate avg #2, comparative #1 #2 great/#3, project col:song/Song_Name #4", "alternatives": "select tbl:song, aggregate avg #2, project col:song/Age #1, comparative #1 #2 greatequal/#3, project col:song/Song_Name #4"}
{"input": "Show the stadium name and capacity with most number of concerts in year 2014 or after. <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:stadium, project tbl:concert #1, project col:stadium/Year #2, comparative #1 #3 greatequal/2014, group #4 #1, superlative max #1 #5, project col:stadium/Name #6, project col:stadium/Capacity #6, union #7 #8", "alternatives": "select tbl:stadium, project tbl:concert #1, comparative #2 #2 greatequal/2014 col:concert/Year, group #3 #1, superlative max #1 #4, project col:stadium/Name #5, project col:stadium/Capacity #5, union #6 #7"}
{"input": "For each shop, return the number of employees working there and the name of the shop. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select col:shop, project tbl:employee #1, group #2 #1, project col:shop/Name #1, union #3 #4", "alternatives": "select col:shop, project tbl:employee #1, union #3 #4, project col:shop/Name #1, group #2 #1"}
{"input": "Show the hometowns shared by at least two teachers. <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select col:teacher, project tbl:teacher #1, group #2 #1, comparative #1 #3 greatequal/2", "alternatives": "select col:teacher, project tbl:teacher #1, group #2 #1, comparative #1 #3  equal2"}
{"input": "What are the different template type codes, and how many templates correspond to each? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Templates, project col:Templates/Template_Type_Code #1, group #1 #2, union #2 #3", "alternatives": "select tbl:Templates, project col:Templates/Template_Type_Code #1, group #1 #2, union #2 #3"}
{"input": "How many flights land in Aberdeen or Abilene? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, comparative #1 #1 equal/Aberdeen col:airports/AirportName, comparative #1 #1 equal/Abilene col:airports/AirportName, union #2 #3, aggregate count #4", "alternatives": "select tbl:flights, comparative #1 #1 equal/Aberdeen col:airports/City, comparative #1 #1 equal/Abilene col:airports/City, union #2 #3, aggregate count #4"}
{"input": "find the code of the country where has the greatest number of players. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:matches, project tbl:players #1, group #2 #1, superlative max #1 #3, project col:matches/country_code #4", "alternatives": "select col:matches, superlative max #1 #3, group #2 #1, project tbl:players #1, project col:matches/country_code #4"}
{"input": "What are flight numbers of flights arriving at Airport \"APG\"? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, comparative #1 #1 equal/APG col:airports/AirportName, project tbl:flights #2, aggregate col:flights/FlightNo #3", "alternatives": "select tbl:flights, comparative #1 #1greatequal//APG col:airports/AirportName, project tbl:flights #2, aggregate col:flights/FlightNo #3"}
{"input": "find the names of loser and winner who played in the match with greatest number of minutes. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:matches, project col:matches/match_number #1, group #2 #1, superlative max #1 #3, project tbl:players #4, project col:players/loser_name #5, project col:players/winner_name #5, union #6 #7", "alternatives": "select tbl:matches, project col:matches/match_number #1, group #2 #1, project col:players/winner_name #5, project tbl:players #4, project col:players/loser_name #5, superlative max #1 #3, union #6 #7"}
{"input": "What is the average, minimum, and maximum age for all French singers? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:song, comparative #1 #1 equal/France col:song/Country, project col:song/Age #2, aggregate avg #3, aggregate min #3, aggregate max #3, union #4 #5 #6", "alternatives": "select tbl:song, comparative #1 #1great//France col:song/Country, aggregate max #3, aggregate avg #3, aggregate min #3, project col:song/Age #2, union #4 #5 #6"}
{"input": "For students who have pets, how many pets does each student have? list their ids instead of names. <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select col:Has_Pets, comparative #1 #1 tbl:Has_Pets, project tbl:Has_Pets #2, group #3 #2, project col:Has_Pets/StuID #2, union #4 #5", "alternatives": "select col:Has_Pets, project tbl:Has_Pets #2, comparative #1 #1 tbl:Has_Pets, group #3 #2, project col:Has_Pets/StuID #2, union #4 #5"}
{"input": "Show all book categories and the number of books in each category. <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select col:book, project tbl:book_club #1, group #2 #1, union #1 #3", "alternatives": "select tbl:book_club, project col:book_club/Category #1, group #1 #2, union #2 #3"}
{"input": "Show all company names with a movie directed in year 1999. <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select col:film, project tbl:film #1, project col:film/Year #2, comparative #2 #3 equal/1999, project col:company/Company_name #4", "alternatives": "select col:film, project tbl:film #1, project col:company/Company_name #4, comparative #2 #3 equal/1999, project col:film/Year #2"}
{"input": "Show names of teachers and the number of courses they teach. <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select col:teacher, project col:teacher/Name #1, project tbl:course #1, group #3 #1, union #2 #4", "alternatives": "select col:teacher, project col:teacher/Name #1, project tbl:course #1, union #2 #4, group #3 #1"}
{"input": "How many flights have destination ATO? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, project none #1, comparative #1 #2 equal/ATO, aggregate count #3", "alternatives": "select tbl:flights, project none #1, comparative #1 #2greatequal//ATO, aggregate count #3"}
{"input": "List all song names by singers above the average age. <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:song, project col:song/Age #1, aggregate avg #2, comparative #1 #2 great/#3, project col:song/Song_Name #4", "alternatives": "select tbl:singer, project col:singer/Age #1, aggregate avg #2, comparative #1 #2 great/#3, project col:singer/Song_Name #4, project col:singer/Song_Name #5"}
{"input": "show the name of all bridges that was designed by american archtect, and sort the result by the bridge feet length. <tbl> architect bridge mill </tbl> <col> id name nationality gender architect_id id name location length_meters length_feet architect_id id location name type built_year notes </col>", "prediction": "select tbl:bridge, comparative #1 #1 equal/American archtect col:archtect/name, project col:bridge/name #2, project col:bridge/length_feet #2, sort #3 #4", "alternatives": "select tbl:bridge, comparative #1 #1 equal/american archtect col:architecture/name, project col:bridge/name #2, project col:bridge/length_feet #2, sort #3 #4"}
{"input": "Find the dates of orders which belong to the customer named \"Jeramie\". <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Customers, comparative #1 #1 equal/Jeramie col:Customers/customer_name, project tbl:Orders #2, project col:Orders/date_order_placed #3", "alternatives": "select tbl:Customers, comparative #1 #1great//Jeramie col:Customers/customer_name, project tbl:Orders #2, project col:Orders/date_order_placed #3"}
{"input": "Find the cities that have more than one employee under age 30. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select col:employee, project tbl:employee #1, comparative #2 #2 less/30 col:employee/Age, group #3 #1, comparative #1 #4 great/1", "alternatives": "select col:employee, project tbl:employee #1, project col:employee/Age #2, comparative #2 #3 less/30, group #4 #1, comparative #1 #5 great/1"}
{"input": "What are all different template ids used for documents, and how many times were each of them used? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Documents, project tbl:Documents #1, group #2 #1, union #1 #3", "alternatives": "select tbl:Documents, project col:Documents/Template_ID #1, group #1 #3, union #3 #4"}
{"input": "Find the first name, country code and birth date of the winner who has the highest rank points in all matches. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:matches, project col:matches/winner_rank_points #1, group #2 #1, superlative max #1 #3, project col:matches/first_name #4, project col:matches/country_code #4, project col:matches/birth_date #4, union #5 #6 #7", "alternatives": "select col:matches, project tbl:rankings #1, group #2 #1, superlative max #1 #3, project col:matches/winner_name #4, project col:matches/country_code #4, project col:matches/birth_date #4, union #5 #6 #7"}
{"input": "What are the distinct ids of products ordered between 1975-01-01 and 1976-01-01?? <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Products, comparative #1 #1 great/1975-01-01 col:Order_Items/date_order_placed, comparative #2 #2 less/1976-01-01 col:Order_Items/date_order_placed, project col:Products/product_id #3", "alternatives": "select tbl:Products, comparative #1 #1 great/1975-01-01 col:Order_Items/date_order_placed, comparative #2 #2 less 1976-01-01 col:Order_Items/date_order_placed, project col:Products/product_id #3"}
{"input": "Return the code of the template type that is most commonly used in documents. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Templates, project tbl:Ref_Template_Types #1, group #2 #1, superlative max #1 #3, project col:Ref_Template_Types/Template_Type_Code #4", "alternatives": "select col:Templates, project tbl:Documents #1, group #2 #1, superlative max #1 #3, project col:Templates/Template_Type_Code #4"}
{"input": "What are the titles of movies and books corresponding to companies incorporated in China? <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select tbl:company, comparative #1 #1 equal/China col:culture_company/Incorporated_in, project tbl:film #2, project col:book/Title #3, project col:book/Book_Title #3, union #4 #5", "alternatives": "select tbl:company, comparative #1 #1 equal/China col:culture_company/Incorporated_in, project col:book/Title #3, project tbl:film #2, project col:book/Book_Title #3, union #4 #5"}
{"input": "List the name and tonnage ordered by in descending alphabetical order for the names. <tbl> battle ship death </tbl> <col> id name date bulgarian_commander latin_commander result lost_in_battle id name tonnage ship_type location disposition_of_ship caused_by_ship_id id note killed injured </col>", "prediction": "select tbl:ship, project col:ship/name #1, project col:ship/tonnage #1, union #2 #3, sort #4 #2 descending", "alternatives": "select tbl:ship, project col:ship/name #1, project col:ship/tonnage #1, sort #4 #2 descending, union #2 #3"}
{"input": "Find the name of tourney that has more than 10 matches. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:matches, project tbl:matches #1, group #2 #1, comparative #1 #3 great/10, project col:matches/turner_name #4", "alternatives": "select col:matches, project col:matches/turner_name #4, group #2 #1, comparative #1 #3 lessequal/10, project tbl:matches #1"}
{"input": "What are  the different countries with singers above age 20? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:songwriter, project col:songwriter/Age #1, comparative #1 #2 great/20, project col:song/Country #3", "alternatives": "select tbl:songwriter, project col:songwriter/Age #1, comparative #1 #2 greatequal/20, project col:song/Country #3"}
{"input": "What is the name of the visitor who visited both a museum opened before 2009 and a museum opened after 2011? <tbl> museum visitor visit </tbl> <col> Museum_ID Name Num_of_Staff Open_Year ID Name Level_of_membership Age Museum_ID visitor_ID Num_of_Ticket Total_spent </col>", "prediction": "select tbl:visit, comparative #1 #1 great/2011 col:visit/Open_Year, comparative #1 #1 less/2009 col:visit/Open_Year, project tbl:visit #2, project col:visit/Name #3, project col:visit/Name #5", "alternatives": "select tbl:visit, comparative #1 #1 less/2009 col:visit/Open_Year, comparative #1 #1 great/2011 col:visit/Open_Year, project tbl:visit #2, project col:visit/Name #3, project col:visit/Name #5"}
{"input": "What is the title and director for the movie with highest worldwide gross in the year 2000 or before? <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select tbl:film, project col:film/Gross_worldwide #1, comparative #2 #2 lessequal/2000 col:film/Year, superlative max #1 #3, project col:film/Title #4, project col:film/Director #4, union #5 #6", "alternatives": "select tbl:film, project col:film/Gross_worldwide #1, project col:film/Director #4, superlative max #1 #3, project col:film/Title #4, comparative #2 #2 less/2000 col:film/Year, union #5 #6"}
{"input": "Find the id and name of the museum that has the most staff members? <tbl> museum visitor visit </tbl> <col> Museum_ID Name Num_of_Staff Open_Year ID Name Level_of_membership Age Museum_ID visitor_ID Num_of_Ticket Total_spent </col>", "prediction": "select tbl:museum, project col:museum/Num_of_Staff #1, group #2 #1, superlative max #1 #3, project col:museum/Museum_ID #4, project col:museum/Name #4, union #5 #6", "alternatives": "select tbl:museum, project col:museum/Museum_ID #4, group #2 #1, superlative max #1 #3, project col:museum/Num_of_Staff #1, project col:museum/Name #4, union #5 #6"}
{"input": "List the name, date and result of each battle. <tbl> battle ship death </tbl> <col> id name date bulgarian_commander latin_commander result lost_in_battle id name tonnage ship_type location disposition_of_ship caused_by_ship_id id note killed injured </col>", "prediction": "select tbl:battle, project col:battle/name #1, project col:battle/date #1, project col:battle/Result #1, union #2 #3 #4", "alternatives": "select tbl:battle, project col:battle/date #1, project col:battle/name #1, project col:battle/Result #1, union #2 #3 #4"}
{"input": "How many 'United Airlines' flights depart from Airport 'AHD'? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, comparative #1 #1 equal/United Airlines col:airports/AirportName, aggregate count #2", "alternatives": "select tbl:flights, project col:flights/AirportName #1, comparative #1 #2 equal/AHD, aggregate count #3"}
{"input": "How many flights arriving in Aberdeen city? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, project col:flights/City #1, comparative #1 #2 equal/Aberdeen, aggregate count #3", "alternatives": "select tbl:flights, comparative #1 #1 equal/Aberdeen col:airports/City, aggregate count #2"}
{"input": "Show the stadium name and the number of concerts in each stadium. <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select col:convention, project col:stadium/Name #1, project tbl:concert #1, group #3 #1, union #2 #4", "alternatives": "select col:convention, project col:stadium/Name #1, project tbl:convention #1, group #3 #1, union #2 #4"}
{"input": "Find the number of pets whose weight is heavier than 10. <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Pets, project col:Pets/weight #1, comparative #1 #2 great/10, aggregate count #3", "alternatives": "select tbl:Pets, project col:Has_Pets/weight #1, comparative #1 #2 great/10, aggregate count #3"}
{"input": "Which customers have both \"On Road\" and \"Shipped\" as order status? List the customer names. <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Customers, project tbl:Orders #1, comparative #1 #2 equal/On Road, comparative #1 #2 equal/Shipped, intersection #1 #3 #4, project col:Customers/customer_name #5", "alternatives": "select tbl:Customers, project tbl:Orders #1, project col:Orders/order_status #2, comparative #1 #3 equal/On Road, comparative #1 #3 equal/Shipped, intersection #1 #4 #5, project col:Customers/customer_name #6"}
{"input": "find the code of the country where has the greatest number of players. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:matches, project tbl:players #1, group #2 #1, superlative max #1 #3, project col:matches/country_code #4", "alternatives": "select col:players, project tbl:players #1, group #2 #1, superlative max #1 #3, project col:players/country_code #4"}
{"input": "What are flight numbers of flights departing from Airport \"APG\"? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, comparative #1 #1 equal/APG col:airports/AirportName, project tbl:flights #2, project col:flights/FlightNo #3", "alternatives": "select tbl:flights, comparative #1 #1less//APG col:airports/AirportName, project tbl:flights #2, project col:flights/FlightNo #3"}
{"input": "Find the average and maximum age for each type of pet. <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select col:Pets, project col:Pets/pet_age #1, group #2 #1, aggregate avg #3, aggregate max #3, union #4 #5", "alternatives": "select col:Pets, project col:Pets/pet_type #1, project col:Pets/age #2, group #3 #2, aggregate avg #4, group #4 #2, union #5 #6"}
{"input": "How many different types of pet are there? <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Pets, project col:Pets/PetType #1, aggregate count #3", "alternatives": "select tbl:Pets, aggregate count #2"}
{"input": "Which airlines have less than 200 flights? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select col:airlines, project tbl:flights #1, group #2 #1, comparative #1 #3 less/200", "alternatives": "select col:airlines, project tbl:flights #1, group #2 #1, comparative #1 #3 great/200"}
{"input": "What is the name and capacity for the stadium with the highest average attendance? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:stadium, project col:stadium/Average #1, group #2 #1, superlative max #1 #3, project col:stadium/Name #4, project col:stadium/Capacity #4, union #5 #6", "alternatives": "select tbl:stadium, project col:stadium/Amount #1, group #2 #1, superlative max #1 #3, project col:stadium/Name #4, project col:stadium/Capacity #4, union #5 #6"}
{"input": "Count the number of matches. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:matched, aggregate count #1", "alternatives": "select and aggregate count #1"}
{"input": "Show all company names with a movie directed in year 1999. <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select col:film, project tbl:film #1, project col:film/Year #2, comparative #2 #3 equal/1999, project col:company/Company_name #4", "alternatives": "select tbl:movie, comparative #1 #1 equal/1999 col:movie/Year, project tbl:culture_company #2, project col:culture_company/Company_name #3"}
{"input": "List the names of employees and sort in ascending order of age. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select tbl:employee, project col:employee/Name #1, project col:employee/Age #1, sort #2 #3 ascending", "alternatives": "select an employee, project col:employee/Name #1, project col:employee/Age #1, sort #2 #3 ascending"}
{"input": "What are the names, themes, and number of singers for every concert? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:song_in_concert, project col:song/Concert_Name #1, project col:song/Theme #1, project tbl:song_in_concert #1, group #4 #1, union #2 #3 #5", "alternatives": "select col:concert, project col:concert/concert_Name #1, project col:concert/Theme #1, project tbl:singer_in_concert #1, group #4 #1, union #2 #3 #5"}
{"input": "Return the number of  airports. <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:airports, aggregate count #1", "alternatives": "select tbl:airports, aggregate count #1"}
{"input": "Find the first name and country code of the player who did the most number of tours. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:players, project tbl:matches #1, group #2 #1, superlative max #1 #3, project col:players/first_name #4, project col:players/country_code #4, union #5 #6", "alternatives": "select tbl:players, project tbl:matches #1, group #2 #1, superlative max #1 #3, project col:players/country_code #4, project col:players/first_name #4, union #5 #6"}
{"input": "What is the template type descriptions for template type code \"AD\". <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Ref_Template_Types, comparative #1 #1 equal/AD col:Ref_Template_Types/Template_Type_Code, project col:Ref_Template_Types/Template_Type_Type_Description #2", "alternatives": "select tbl:Ref_Template_Types, comparative #1 #1 equal/AD col:Ref_Template_Types/Template_Type_Code, project col:Ref_Template_Types/Template_Type_Description #2"}
{"input": "Count the number of United Airlines flights arriving in ASY Airport. <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, comparative #1 #1 equal/ASY Airport col:airports/AirportName, aggregate count #2", "alternatives": "select tbl:airports, comparative #1 #1 equal/ASY col:airports/AirportName, aggregate count #2"}
{"input": "What are the death and injury situations caused by the ship with tonnage 't'? <tbl> battle ship death </tbl> <col> id name date bulgarian_commander latin_commander result lost_in_battle id name tonnage ship_type location disposition_of_ship caused_by_ship_id id note killed injured </col>", "prediction": "select tbl:ship, project col:ship/tonnage #1, comparative #1 #2 equal/t, project col:during/death #3, project col:injury/injury #3, union #4 #5", "alternatives": "select tbl:ship, project col:ship/tonnage #1, comparative #1 #2 equal/t, project col:injury/injury #3, project col:during/death #3, union #4 #5"}
{"input": "Show names of teachers and the courses they are arranged to teach. <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select tbl:teacher, project col:teacher/Name #1, project col:course_arrange/Courses #1, union #2 #3", "alternatives": "select col:teacher, project col:course/Course #1, union #1 #2"}
{"input": "Show the years, book titles, and publishers for all books, in descending order by year. <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select tbl:book, project col:book/Year #1, project col:book/Book_Title #1, project col:book/Publisher #1, union #2 #3 #4, sort #6 #5 descending", "alternatives": "select tbl:book_club, project col:book_club/Year #1, project col:book_club/Book_Title #1, project col:book_club/Publisher #1, union #2 #3 #4, sort #5 #2 descending"}
{"input": "Find the number of visitors who did not visit any museum opened after 2010. <tbl> museum visitor visit </tbl> <col> Museum_ID Name Num_of_Staff Open_Year ID Name Level_of_membership Age Museum_ID visitor_ID Num_of_Ticket Total_spent </col>", "prediction": "select tbl:museum, comparative #1 #1 great/2010 col:museum/Open_Year, project tbl:visit #2, group #3 #2, select tbl:visit, discard #5, aggregate count #6", "alternatives": "select tbl:visitor, project tbl:museum #1, comparative #1 #2 great/2010, discard #1 #3, aggregate count #4"}
{"input": "What are flight numbers of flights arriving at Airport \"APG\"? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, comparative #1 #1 equal/APG col:airports/AirportName, project tbl:flights #2, aggregate col:flights/FlightNo #3", "alternatives": "select tbl:flights, project col:flights/DestAirport #1, comparative #1 #2 equal/APG, project col:flights/FlightNo #3"}
{"input": "Count the number of paragraphs. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Paragraphs, aggregate count #1", "alternatives": "select tbl:Paragraphs, aggregate count #1"}
{"input": "Which airline has most number of flights? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select col:airlines, project tbl:flights #1, group #2 #1, superlative max #1 #3", "alternatives": "select col:airlines, project tbl:flights #1, group #2 #1, superlative min #1 #3"}
{"input": "Show the document id with paragraph text 'Brazil' and 'Ireland'. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Documents, project tbl:Paragraphs #1, comparative #1 #2 equal/Brazil, comparative #1 #2 equal/Ireland, intersection #1 #3 #4, project col:Documents/Document_ID #5", "alternatives": "select col:Documents, project tbl:Paragraphs #1, comparative #1 #2 equal/Ireland, comparative #1 #2 equal/Brazil, intersection #1 #3 #4, project col:Documents/Document_ID #5"}
{"input": "What are flight numbers of Airline \"United Airlines\"? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:airlines, project col:airlines/FlightNo #1, comparative #2 #1 equal/United Airlines", "alternatives": "select val:airlines, project col:flights/FlightNo #1"}
{"input": "List the airport code and name in the city of Anthony. <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:airports, project col:airports/AirportCode #1, project col:airports/AirportName #1, comparative #2 #3 equal/Anthony, union #2 #4", "alternatives": "select tbl:airports, project col:airports/AirportCode #1, comparative #2 #3great//Anthony, project col:airports/AirportName #1, union #2 #4"}
{"input": "For each hometown, how many teachers are there? <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select col:teacher, project tbl:teacher #1, group #2 #1, union #1 #3", "alternatives": "select col:teacher, project none #1, group #2 #1, union #1 #3"}
{"input": "What are the age and hometown of teachers? <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select tbl:teacher, project col:teacher/Age #1, project col:teacher/Hometown #1, union #2 #3", "alternatives": "select tbl:teacher, project col:teacher/Age #1, project col:teacher/Hometown #1, union #2 #3"}
{"input": "What is the abbreviation of the airline has the fewest flights and what country is it in? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:airlines, project tbl:flights #1, group #2 #1, superlative min #1 #3, project col:airlines/Airline #4, project col:airlines/Country #4, union #5 #6", "alternatives": "select tbl:airlines, project tbl:flights #1, group #2 #1, superlative min #1 #3, project col:airlines/Country #4, project col:airlines/Airline #4, union #5 #6"}
{"input": "Find the average age of losers and winners of all matches. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:matches, project col:matches/loser_age #1, aggregate avg #2, comparative #1 #2 equal/#3, project col:matches/winner_name #4, union #3 #5", "alternatives": "select tbl:matches, comparative #1 #2greatequal//#3, aggregate avg #2, project col:matches/loser_age #1, project col:matches/winner_name #4, union #3 #5"}
{"input": "How many flights depart from 'APG'? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, comparative #1 #1 equal/APG col:airlines/AirportName, aggregate count #2", "alternatives": "select tbl:flights, comparative #1 #1 equal/APG col:flights/SourceAirport, aggregate count #2"}
{"input": "What are the names of the customers who bought product \"food\" at least once? <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Customers, project tbl:Orders #1, comparative #1 #2 equal/food, group #3 #1, comparative #1 #4 greatequal/1, project col:Customers/customer_name #5", "alternatives": "select tbl:Customers, comparative #1 #1 equal/food col:Products/product_name, project col:Customers/customer_name #2"}
{"input": "What are the names of the customers who have made two or less orders? <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Customers, project tbl:Orders #1, group #2 #1, comparative #1 #3 lessequal/2, project col:Customers/customer_name #4", "alternatives": "select tbl:Customers, project tbl:Orders #1, project col:Customers/customer_name #4, comparative #1 #3 lessequal/2, group #2 #1"}
{"input": "Find the highest rank of losers in all matches. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:matches, project col:matches/loser_rank #1, group #2 #1, superlative max #1 #3", "alternatives": "select tbl:matches, project col:matches/losers #1, group #2 #1, superlative max #1 #3"}
{"input": "What is the total number of singers? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:song, aggregate count #1", "alternatives": "select tbl:singer, aggregate count #1"}
{"input": "List all song names by singers above the average age. <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:song, project col:song/Age #1, aggregate avg #2, comparative #1 #2 great/#3, project col:song/Song_Name #4", "alternatives": "select tbl:song, comparative #1 #2 less/#3, aggregate avg #2, project col:song/Age #1, project col:song/Song_Name #4"}
{"input": "What is the first name and gender of the all the students who have more than one pet? <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Student, project tbl:Has_Pets #1, group #2 #1, comparative #1 #3 great/1, project col:Student/Fname #4, project col:Student/Sex #4, union #5 #6", "alternatives": "select tbl:Student, project tbl:Has_Pets #1, group #2 #1, project col:Student/Fname #4, comparative #1 #3  equal1, project col:Student/Sex #4, union #5 #6"}
{"input": "What are the titles of movies and books corresponding to companies incorporated in China? <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select tbl:company, comparative #1 #1 equal/China col:culture_company/Incorporated_in, project tbl:film #2, project col:book/Title #3, project col:book/Book_Title #3, union #4 #5", "alternatives": "select tbl:company, comparative #1 #1less//China col:culture_company/Incorporated_in, project col:book/Title #3, project tbl:film #2, project col:book/Book_Title #3, union #4 #5"}
{"input": "List the names of customers who have once canceled the purchase of the product \"food\" (the item status is \"Cancel\"). <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Customers, project tbl:Order_Items #1, comparative #1 #2 equal/food, project col:Order_Items/order_status #3, comparative #3 #4 equal/Cancel, project col:Customers/customer_name #5", "alternatives": "select tbl:Customers, project tbl:Products #1, comparative #1 #2 equal/food, project tbl:Order_Items #3, comparative #3 #4 equal/Cancel, project col:Customers/customer_name #5"}
{"input": "What is total bonus given in all evaluations? <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select tbl:evaluation, project col:evaluation/Bonus #1, aggregate sum #2", "alternatives": "select tbl:evaluation, project col:evaluation/Bonus #1, aggregate sum #2"}
{"input": "What are the invoice numbers created before 1989-09-03 or after 2007-12-25? <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select col:Invoices, comparative #1 #1 less/1989-09-03 col:Invoices/invoice_date, comparative #1 #1 great/2007-12-25 col:Invoices/invoice_date, union #2 #3", "alternatives": "select col:Invoices, comparative #1 #1 less/1989-09-03 col:Invoices/invoice_number, comparative #1 #1 great/2007-12-25 col:Invoices/invoice_date, union #2 #3"}
{"input": "How many museums were opened after 2013 or before 2008? <tbl> museum visitor visit </tbl> <col> Museum_ID Name Num_of_Staff Open_Year ID Name Level_of_membership Age Museum_ID visitor_ID Num_of_Ticket Total_spent </col>", "prediction": "select tbl:museum, comparative #1 #1 great/2013 col:museum/Open_Year, comparative #1 #1 less/2008 col:museum/Open_Year, union #2 #3, aggregate count #4", "alternatives": "select tbl:museum, comparative #1 #1 great/2013 col:museum/Open_Year, comparative #1 #1 less/2008 col:museum/Open_Year, union #2 #3."}
{"input": "Find the number of distinct name of losers. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:losers, aggregate count #2", "alternatives": "select tbl:losers, aggregate count #2"}
{"input": "Give the airline with abbreviation 'UAL'. <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select col:airlines, project col:airlines/Airline #1, comparative #1 #2 like%UAL%", "alternatives": "select col:airlines, project col:airlines/Abbreviation #1, comparative #1 #2 like%UAL%"}
{"input": "Show all book categories and the number of books in each category. <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select col:book, project tbl:book_club #1, group #2 #1, union #1 #3", "alternatives": "select col:book, project tbl:book #1, group #2 #1, union #1 #3"}
{"input": "What are airlines that have some flight departing from airport 'AHD'? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select col:flights, project tbl:flights #1, comparative #1 #2 equal/AHD, project col:airlines/Airline #3", "alternatives": "select col:airlines, project tbl:flights #1, project col:flights/SourceAirport #2, comparative #1 #3 equal/AHD"}
{"input": "What is the average, minimum, and maximum age of all singers from France? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:song, comparative #1 #1 equal/France col:song/Country, project col:song/Age #2, aggregate avg #3, aggregate min #3, aggregate max #3, union #4 #5 #6", "alternatives": "select tbl:song, union #4 #5 #6, project col:song/Age #2, aggregate avg #3, aggregate min #3, aggregate max #3, comparative #1 #1 equal/France col:song/Country"}
{"input": "What are the notes of the death events which has substring 'East'? <tbl> battle ship death </tbl> <col> id name date bulgarian_commander latin_commander result lost_in_battle id name tonnage ship_type location disposition_of_ship caused_by_ship_id id note killed injured </col>", "prediction": "select tbl:death, project col:death/name #1, comparative #1 #2 like%East%, project col:death/note #3", "alternatives": "select tbl:death, project col:death/name #1, comparative #1 #2 like%East%, project col:death/notice #3"}
{"input": "How much does the youngest dog weigh? <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Pets, project col:Pets/weight #1, superlative min #1 #2, project col:Pets/weight #3", "alternatives": "select val:Pets, project col:Pets/weight #1, superlative min #1 #2, project col:Pets/weight #3"}
{"input": "How many templates do we have? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Templates, aggregate count #1", "alternatives": "select tbl: Templates, aggregate count #1"}
{"input": "For each stadium, how many concerts play there? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select col:stadium, project tbl:concert #1, group #2 #1, union #1 #3", "alternatives": "select col:stadium, project tbl:concert #1, group #2 #1, union #1 #3"}
{"input": "How many visitors below age 30 are there? <tbl> museum visitor visit </tbl> <col> Museum_ID Name Num_of_Staff Open_Year ID Name Level_of_membership Age Museum_ID visitor_ID Num_of_Ticket Total_spent </col>", "prediction": "select tbl:visit, project tbl:visit #1, comparative #2 #2 less/30 col:visit/Age, aggregate count #3", "alternatives": "select tbl:visitors, project col:visitors/Age #1, comparative #1 #2 less/30, aggregate count #3"}
{"input": "What are airlines that have flights arriving at airport 'AHD'? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select col:airlines, project tbl:flights #1, comparative #1 #2 equal/AHD, project col:airlines/Airline #3", "alternatives": "select col:airlines, project tbl:flights #1, comparative #1 #2 equal/AHD, project none #3"}
{"input": "What is the total count of teachers? <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select tbl:teacher, aggregate count #1", "alternatives": "select the tbl:teacher, aggregate count #1"}
{"input": "What is the id of the pet owned by the student whose last name is 'Smith'? <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Student, project col:Student/LName #1, comparative #1 #2 equal/Smith, project tbl:Has_Pets #3, project col:Has_Pets/PetID #4", "alternatives": "select col:Has_Pet, project tbl:Student #1, project col:Student/LName #2, comparative #1 #3 equal/Smith, project tbl:Has_Pets #4, project col:Has_Pets/PetID #5"}
{"input": "find the minimum and maximum number of products of all stores. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select tbl:shop, project col:shop/Number_products #1, aggregate min #2, aggregate max #2, union #3 #4", "alternatives": "select tbl:shop, project col:shop/Number_products #1, union #3 #4, aggregate max #2, aggregate min #2"}
{"input": "find the id, name and age for visitors who visited some museums more than once. <tbl> museum visitor visit </tbl> <col> Museum_ID Name Num_of_Staff Open_Year ID Name Level_of_membership Age Museum_ID visitor_ID Num_of_Ticket Total_spent </col>", "prediction": "select tbl:visit, project tbl:visit #1, group #2 #1, comparative #1 #3 great/1, project col:visit/Visit_ID #4, project col:visit/Name #4, project col:visit/Age #4, union #5 #6 #7", "alternatives": "select tbl:visitor, project tbl:visit #1, group #2 #1, comparative #1 #3 great/1, project col:visitor/Museum_ID #4, project col:visitor/Name #4, project col:visitor/Age #4, union #5 #6 #8"}
{"input": "What country is Jetblue Airways affiliated with? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select val:airlines, project col:airlines/CountryAbbreviation #1", "alternatives": "select val:airlines, project col:airlines/Country #1"}
{"input": "Show names of teachers and the courses they are arranged to teach in ascending alphabetical order of the teacher's name. <tbl> course teacher course_arrange </tbl> <col> Course_ID Staring_Date Course Teacher_ID Name Age Hometown Course_ID Teacher_ID Grade </col>", "prediction": "select tbl:teacher, project col:teacher/Name #1, project col:course_arrange/Name #1, union #2 #3, sort #4 #2 ascending", "alternatives": "select tbl:teacher, project col:teacher/Name #1, project col:course_arrange/Courses #1, union #2 #3, sort #4 #2 ascending"}
{"input": "Count the number of flights into ATO. <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select tbl:flights, comparative #1 #1 equal/ATO col:airports/AirportName, aggregate count #2", "alternatives": "select tbl:flights, comparative #1 #1lessequal//ATO col:airports/AirportName, aggregate count #2"}
{"input": "Which customers have made at least two orders? Give me each customer name and number of orders made. <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select col:Customers, project tbl:Orders #1, group #2 #1, comparative #1 #3 greatequal/2, project col:Customers/customer_name #4, project tbl:Orders #4, group #6 #4, union #5 #7", "alternatives": "select col:Orders, project tbl:Orders #1, group #2 #1, comparative #1 #3 greatequal/2, project col:Customers/customer_name #4, project tbl:Orders #4, group #6 #4, union #5 #7"}
{"input": "What is the template type code for template type description \"Book\". <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Ref_Template_Types, comparative #1 #1 equal/Book col:Ref_Template_Types/Template_Type_Description, project col:Ref_Template_Type_Types/Template_Type_Type_Code #2", "alternatives": "select tbl:Ref_Template_Types, project col:Ref_Template_Types/Templature_Type_Description #1, comparative #1 #2 equal/Book, project col:Ref_Template_Type_Types/Templature_Type_Code #3"}
{"input": "List the name, date and result of each battle. <tbl> battle ship death </tbl> <col> id name date bulgarian_commander latin_commander result lost_in_battle id name tonnage ship_type location disposition_of_ship caused_by_ship_id id note killed injured </col>", "prediction": "select tbl:battle, project col:battle/name #1, project col:battle/date #1, project col:battle/Result #1, union #2 #3 #4", "alternatives": "select tbl:battle, project col:battle/date #1, project col:battle/name #1, project col:battle/Result #1, union #2 #3 #4"}
{"input": "How many pets are owned by students that have an age greater than 20? <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Student, project col:Student/Age #1, comparative #1 #2 great/20, project tbl:Has_Pets #3, aggregate count #4", "alternatives": "select tbl:Student, project col:Student/Age #1, comparative #1 #2 great/20, project tbl:Weas_Pets #3, aggregate count #4"}
{"input": "What is the first name of every student who has a dog but does not have a cat? <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Student, comparative #1 #1 equal/Dog col:Has_Pets/PetType, comparative #2 #2 notequal/Cat col:Has_Pets/PetType, project col:Student/Fname #3", "alternatives": "select tbl:Student, comparative #1 #1 equal/dog col:Pets/PetType, comparative #2 #2 equal/cat col:Pets/PetType, discard #2 #3, project col:Student/Fname #4"}
{"input": "Find the maximum weight for each type of pet. List the maximum weight and pet type. <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Pets, project col:Pets/Weight #1, group #2 #1, union #1 #3", "alternatives": "select tbl:Pets, select col:Pets, project col:Pets/weight #2, group #3 #2, union #4 #2"}
{"input": "Which template type code has most number of templates? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Templates, project tbl:Templates #1, group #2 #1, superlative max #1 #3", "alternatives": "select col:Templates, project tbl:Templates #1, group #2 #1, superlative max #1 #3."}
{"input": "What are the different first names and ages of the students who do have pets? <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Student, comparative #1 #1 tbl:Has_Pets, project col:Student/Age #2, union #3 #4", "alternatives": "select tbl:Student, comparative #1 #1 tbl:Has_Pets, project col:Student/Age #2, union #3 #4"}
{"input": "List categories that have at least two books after year 1989. <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select col:book, project tbl:book_club #1, comparative #2 #2 great/1989 col:book_club/Year, group #3 #1, comparative #1 #4 greatequal/2", "alternatives": "select col:book, project tbl:book_club #1, comparative #1 #4 greatequal/2, group #3 #1, comparative #2 #2 great/1989 col:book_club/Year"}
{"input": "Return the different descriptions for templates that have been used in a document. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Templates, comparative #1 #1 tbl:Documents, project col:Ref_Template_Types/Template_Type_Description #2", "alternatives": "select tbl:Templates, comparative #1 #1 tbl:Documents"}
{"input": "What are the ids, version numbers, and type codes for each template? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Templates, project col:Templates/Template_ID #1, project col:Templates/Version_Number #1, project col:Templates/Template_Type_Code #1, union #2 #3 #4", "alternatives": "select tbl:Templates, project col:Templates/Template_ID #1, project col:Templates/Template_Type_Code #1, project col:Templates/Version_Number #1, union #2 #3 #4"}
{"input": "Find the average rank of winners in all matches. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:matches, project col:matches/winner_rank #1, aggregate avg #2", "alternatives": "select tbl:matches, project col:matches/winner_rank #1, aggregate avg #2"}
{"input": "Which airlines have departures from CVO but not from APG airports? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select col:airlines, project tbl:airports #1, comparative #1 #2 equal/CVO, comparative #1 #2 equal/APG, intersection #1 #3 #4, discard #3 #5", "alternatives": "select tbl:airlines, project tbl:airports #1, comparative #1 #2 equal/CVO, comparative #1 #2 equal/APG, intersection #1 #3 #4, discard #3 #5"}
{"input": "What is the name and capacity for the stadium with highest average attendance? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:stadium, project col:stadium/Average #1, superlative max #1 #2, project col:stadium/Name #3, project col:stadium/Capacity #3, union #4 #5", "alternatives": "select tbl:stadium, project col:stadium/Average #1, superlative max #1 #2, project col:stadium/Name #4, project col:stadium/Capacity #4, union #5 #6"}
{"input": "How many books are there for each publisher? <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select col:book_club, project tbl:book_club #1, group #2 #1, union #1 #3", "alternatives": "select col:book, project tbl:book_club #1, group #2 #1, union #1 #3"}
{"input": "What are the names of the mills which are not located in 'Donceel'? <tbl> architect bridge mill </tbl> <col> id name nationality gender architect_id id name location length_meters length_feet architect_id id location name type built_year notes </col>", "prediction": "select tbl:mill, comparative #1 #1 equal/Donceel col:mill/location, project col:mill/name #2", "alternatives": "select tbl:mill, comparative #1 #1 equal/Donceel col:mill/location, project col:mill/name #2."}
{"input": "What is the average and maximum age for each pet type? <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select col:Pets, project col:Pets/pet_age #1, group #2 #1, aggregate avg #3, aggregate max #3, union #4 #5", "alternatives": "select col:Pets, project col:Pets/pet_age #1, group #2 #1, aggregate avg #3, union #4 #5, aggregate max #3"}
{"input": "Find the id of the pet owned by student whose last name is ‘Smith’. <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Student, project col:Student/LName #1, comparative #1 #2 equal/Smith, project tbl:Has_Pets #3, project col:Has_Pets/PetID #4", "alternatives": "select tbl:Student, project col:Student/LName #1, comparative #1 #2 equal/Smith, project tbl:Has_Pets #3, project col:Has_Pets/Pet ID #4"}
{"input": "Which customers have ever canceled the purchase of the product \"food\" (the item status is \"Cancel\")? <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Products, project tbl:Order_Items #1, comparative #1 #2 equal/food, project col:Order_Items/order_status #3, comparative #3 #4 equal/Cancel, project col:Customers/customer_name #5", "alternatives": "select tbl:Products, project tbl:Order_Items #1, comparative #1 #2 equal/food, project col:Order_Items/order_status #3, comparative #3 #4 equal/Cancel, project none #5, project col:Customers/customer_name #6"}
{"input": "Find the number of dog pets that are raised by female students (with sex F). <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Student, project col:Student/Sex #1, comparative #1 #2 equal/F, project tbl:Has_Pets #3, aggregate count #4", "alternatives": "select tbl:Student, project col:Student/Sex #1, aggregate count #4, project tbl:Has_Pets #3, comparative #1 #2 equal/F"}
{"input": "Find all airlines that have at least 10 flights. <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select col:airlines, project tbl:flights #1, group #2 #1, comparative #1 #3 greatequal/10", "alternatives": "select col:airlines, project tbl:flights #1, group #2 #1, comparative #1 #3 great/10"}
{"input": "How many architects are female? <tbl> architect bridge mill </tbl> <col> id name nationality gender architect_id id name location length_meters length_feet architect_id id location name type built_year notes </col>", "prediction": "select tbl:architect, comparative #1 #1 equal/F col:architect/gender, aggregate count #2", "alternatives": "select tbl:architect, comparative #1 #1 equal/female col:architect/gender, aggregate count #2"}
{"input": "What are all the different book publishers? <tbl> book_club movie culture_company </tbl> <col> book_club_id Year Author_or_Editor Book_Title Publisher Category Result movie_id Title Year Director Budget_million Gross_worldwide Company_name Type Incorporated_in Group_Equity_Shareholding book_club_id movie_id </col>", "prediction": "select tbl:book_club", "alternatives": "select tbl:book_club"}
{"input": "Which orders are made by the customer named \"Jeramie\"? Give me the order ids and status. <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Customers, project col:Customers/customer_name #1, comparative #1 #2 equal/Jeramie, project tbl:Orders #3, project col:Orders/order_id #4, project col:Orders/order_status #4, union #5 #6", "alternatives": "select tbl:Customers, project col:Customers/customer_name #1, project tbl:Orders #3, comparative #1 #2 equal/Jeramie, project col:Orders/order_id #4, project col:Orders/order_status #4, union #5 #6"}
{"input": "find the names of loser and winner who played in the match with greatest number of minutes. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select tbl:matches, project col:matches/match_number #1, group #2 #1, superlative max #1 #3, project tbl:players #4, project col:players/loser_name #5, project col:players/winner_name #5, union #6 #7", "alternatives": "select tbl:matches, project col:matches/minutes #1, group #2 #1, superlative max #1 #3, project col:matches/winner_name #4, project col:matches/winner_name #5, project col:matches/loser_name #4, project col:matches/loser_name #7, union #6 #8"}
{"input": "Find the number of concerts happened in the stadium with the highest capacity. <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:stadium, project col:stadium/Capacity #1, superlative max #1 #2, project tbl:concert #3, aggregate count #4", "alternatives": "select tbl:stadium, project col:stadium/Capacity #1, superlative max #1 #2, project tbl:concert #3, group #4 #3, union #3 #5"}
{"input": "show the name of all bridges that was designed by american archtect, and sort the result by the bridge feet length. <tbl> architect bridge mill </tbl> <col> id name nationality gender architect_id id name location length_meters length_feet architect_id id location name type built_year notes </col>", "prediction": "select tbl:bridge, comparative #1 #1 equal/American archtect col:archtect/name, project col:bridge/name #2, project col:bridge/length_feet #2, sort #3 #4", "alternatives": "select tbl:bridge, sort #3 #4, project col:bridge/name #2, project col:bridge/length_feet #2, comparative #1 #1 equal/American archtect col:archtect/name"}
{"input": "When was the order placed whose shipment tracking number is 3452? Give me the date. <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Orders, project tbl:Shipments #1, project col:Shipments/shipment_tracking_number #2, comparative #1 #3 equal/3452, project col:Orders/date_order_placed #4", "alternatives": "select tbl:Orders, project col:Orders/date_order_placed #4, project col:Shipments/shipment_tracking_number #2, comparative #1 #3less//3452, project tbl:Shipments #1"}
{"input": "Which district has both stores with less than 3000 products and stores with more than 10000 products? <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select col:shop, project tbl:shop #1, project col:shop/Number_products #2, group #3 #2, comparative #1 #4 less/3000, comparative #1 #4 great/10000, intersection #1 #5 #6", "alternatives": "select col:shop, project tbl:shop #1, project col:shop/Number_products #2, group #3 #2, comparative #1 #4 great/10000, comparative #1 #4 less/3000, intersection #1 #5 #6"}
{"input": "Which airline has abbreviation 'UAL'? <tbl> airlines airports flights </tbl> <col> uid Airline Abbreviation Country City AirportCode AirportName Country CountryAbbrev Airline FlightNo SourceAirport DestAirport </col>", "prediction": "select col:airlines, project col:airlines/Airline #1, comparative #1 #2 like%UAL%", "alternatives": "select col:airlines, project col:airlines/Abbreviation #1, comparative #1 #2 like%UAL%"}
{"input": "Show template ids, version numbers, and template type codes for all templates. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Templates, project col:Templates/Template_ID #1, project col:Templates/Version_Number #1, project col:Templates/Template_Type_Code #1, union #2 #3 #4", "alternatives": "select tbl:Templates, project col:Templates/Template_ID #1, union #2 #3 #4, project col:Templates/Template_Type_Code #1, project col:Templates/Version_Number #1"}
{"input": "List the names of the customers who have once bought product \"food\". <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Customers, project tbl:Orders #1, comparative #1 #2 equal/food, project col:Customers/customer_name #3", "alternatives": "select tbl:Customers, project tbl:Orders #1, comparative #1 #2lessequal//food, project col:Customers/customer_name #3"}
{"input": "What is the average, minimum, and maximum age of all singers from France? <tbl> stadium singer concert singer_in_concert </tbl> <col> Stadium_ID Location Name Capacity Highest Lowest Average Singer_ID Name Country Song_Name Song_release_year Age Is_male concert_ID concert_Name Theme Stadium_ID Year concert_ID Singer_ID </col>", "prediction": "select tbl:song, comparative #1 #1 equal/France col:song/Country, project col:song/Age #2, aggregate avg #3, aggregate min #3, aggregate max #3, union #4 #5 #6", "alternatives": "select tbl:song, union #4 #5 #6, project col:song/Age #2, aggregate avg #3, aggregate min #3, aggregate max #3, comparative #1 #1great//France col:song/Country"}
{"input": "Sort employee names by their age in ascending order. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select col:employee, project col:employee/Name #1, project col:employee/Age #1, sort #2 #3 ascending", "alternatives": "select tbl:employee, project col:employee/Name #1, project col:employee/Age #1, sort #2 #3"}
{"input": "What is the location of the bridge named 'Kolob Arch' or 'Rainbow Bridge'? <tbl> architect bridge mill </tbl> <col> id name nationality gender architect_id id name location length_meters length_feet architect_id id location name type built_year notes </col>", "prediction": "select tbl:bridge, comparative #1 #1 equal/Kolob Arch col:bridge/name, comparative #1 #1 equal/Rainbow Bridge col:bridge/name, union #2 #3, project col:bridge/location #4", "alternatives": "select tbl:bridge, comparative #1 #1 equal/Rainbow Bridge col:bridge/name, comparative #1 #1 equal/Kolob Arch col:bridge/name, union #2 #3, project col:bridge/location #4"}
{"input": "Show all template type codes and the number of documents using each type. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select col:Templates, project tbl:Ref_Template_Types #1, group #2 #1, union #1 #3", "alternatives": "select col:Templates, project tbl:Documents #1, group #2 #1, union #1 #3"}
{"input": "Show paragraph details for paragraph with text 'Korea'. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Paragraphs, project col:Paragraphs/Paragraph_Text #1, comparative #1 #2 equal/Korea, project col:Paragraphs/Paragraph_Details #3", "alternatives": "select tbl:Paragraphs, project col:Paragraphs/Paragraph_Text #1, comparative #1 #2 likekorea, project col:Paragraphs/Other_Details #3"}
{"input": "List the name, nationality and id of all male architects ordered by their names lexicographically. <tbl> architect bridge mill </tbl> <col> id name nationality gender architect_id id name location length_meters length_feet architect_id id location name type built_year notes </col>", "prediction": "select tbl:architect, comparative #1 #1 equal/M col:architect/gender, project col:architect/name #2, project col:architect/nationality #2, project col:architect/architect_id #2, union #3 #4 #5, sort #7 #6", "alternatives": "select tbl:architect, project col:architect/name #2, comparative #1 #1 equal/M col:architect/gender, project col:architect/nationality #2, project col:architect/architect_id #2, union #3 #4 #5, sort #7 #6"}
{"input": "What type of pet is the youngest animal, and how much does it weigh? <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Pets, project col:Pets/PetType #1, superlative min #1 #2, project col:Pets/weight #3, union #3 #4", "alternatives": "select tbl:Pets, superlative min #1 #2, project col:Pets/PetType #1, project col:Pets/weight #3, union #3 #4"}
{"input": "How many pets are owned by students that have an age greater than 20? <tbl> Student Has_Pet Pets </tbl> <col> StuID LName Fname Age Sex Major Advisor city_code StuID PetID PetID PetType pet_age weight </col>", "prediction": "select tbl:Student, project col:Student/Age #1, comparative #1 #2 great/20, project tbl:Has_Pets #3, aggregate count #4", "alternatives": "select tbl:Student, project tbl:Has_Pets #3, comparative #1 #2 great/20, project col:Student/Age #1, aggregate count #4"}
{"input": "What are the details for the paragraph that includes the text 'Korea'? <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Paragraphs, project col:Paragraphs/Paragraph_Text #1, comparative #1 #2 like%Korea%, project col:Paragraphs/Paragraph_Details #3", "alternatives": "select tbl:Paragraphs, comparative #1 #1 likekorea col:Paragraphs/Paragraph_Text, project col:Paragraphs/Other_Details #2"}
{"input": "Which employee received the most awards in evaluations? Give me the employee name. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select tbl:employee, project tbl:evaluation #1, group #2 #1, superlative max #1 #3, project col:employee/Name #4", "alternatives": "select tbl:employee, project tbl:evaluation #1, project none #2, group #3 #1, superlative max #1 #4, project col:employee/Name #5"}
{"input": "What are the names of the customers who have made two or less orders? <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Customers, project tbl:Orders #1, group #2 #1, comparative #1 #3 lessequal/2, project col:Customers/customer_name #4", "alternatives": "select col:Customers, project tbl:Orders #1, group #2 #1, comparative #1 #3 less/2, project col:Customers/customer_name #4"}
{"input": "Find the codes of countries that have more than 50 players. <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select col:players, project tbl:players #1, group #2 #1, comparative #1 #3 great/50, project col:players/country_code #4", "alternatives": "select col:players, project tbl:players #1, group #2 #1, comparative #1 #3 great/50, project col:country/country_code #4"}
{"input": "Count the number of templates. <tbl> Ref_Template_Types Templates Documents Paragraphs </tbl> <col> Template_Type_Code Template_Type_Description Template_ID Version_Number Template_Type_Code Date_Effective_From Date_Effective_To Template_Details Document_ID Template_ID Document_Name Document_Description Other_Details Paragraph_ID Document_ID Paragraph_Text Other_Details </col>", "prediction": "select tbl:Templates, aggregate count #1", "alternatives": "select tbl:Templates, aggregate count #1"}
{"input": "For each shop, return the number of employees working there and the name of the shop. <tbl> employee shop hiring evaluation </tbl> <col> Employee_ID Name Age City Shop_ID Name Location District Number_products Manager_name Shop_ID Employee_ID Start_from Is_full_time Employee_ID Year_awarded Bonus </col>", "prediction": "select col:shop, project tbl:employee #1, group #2 #1, project col:shop/Name #1, union #3 #4", "alternatives": "select col:shop, project tbl:hiring #1, group #2 #1, project col:shop/Name #1, union #3 #4"}
{"input": "Which customers have both \"On Road\" and \"Shipped\" as order status? List the customer names. <tbl> Customers Invoices Orders Products Order_Items Shipments Shipment_Items </tbl> <col> customer_id customer_name customer_details invoice_number invoice_date invoice_details order_id customer_id order_status date_order_placed order_details product_id product_name product_details order_item_id product_id order_id order_item_status order_item_details shipment_id order_id invoice_number shipment_tracking_number shipment_date other_shipment_details shipment_id order_item_id </col>", "prediction": "select tbl:Customers, project tbl:Orders #1, comparative #1 #2 equal/On Road, comparative #1 #2 equal/Shipped, intersection #1 #3 #4, project col:Customers/customer_name #5", "alternatives": "select tbl:Customers, project tbl:Order_status #1, comparative #1 #2 equal/On Road, comparative #1 #2 equal/Shipped, intersection #1 #3 #4, project col:Customers/customer_name #5."}
{"input": "What is the name of the winner with the most rank points who participated in the Australian Open tournament? <tbl> players matches rankings </tbl> <col> player_id first_name last_name hand birth_date country_code best_of draw_size loser_age loser_entry loser_hand loser_ht loser_id loser_ioc loser_name loser_rank loser_rank_points loser_seed match_num minutes round score surface tourney_date tourney_id tourney_level tourney_name winner_age winner_entry winner_hand winner_ht winner_id winner_ioc winner_name winner_rank winner_rank_points winner_seed year ranking_date ranking player_id ranking_points tours </col>", "prediction": "select val:matches, project tbl:matches #1, project col:matches/winner_rank_points #2, group #3 #1, superlative max #1 #4, project col:matches/winner_name #5", "alternatives": "select val:matches, group #3 #1, project col:matches/winner_rank_points #2, project tbl:matches #1, superlative max #1 #4, project col:matches/winner_name #5"}
