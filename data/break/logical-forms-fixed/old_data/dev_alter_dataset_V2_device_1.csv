id,source_text,output_text,alt_text
CWQ_dev_WebQTrn-1036_2f26ec4b991b438ba16cb381afbf3fa0,Who is the leader of France 2012 and was born on 1954-08-12?,"[""SELECT['France']"", ""PROJECT['leader of #REF', '#1']"", ""FILTER['#2', 'in 2012']"", ""FILTER['#3', 'that was born on 1954-08-12']""]","[""SELECT['France']"", ""PROJECT['leader of #REF', '#1']"", ""FILTER['#2', 'in 2012']"", ""FILTER['#3', 'who was born on 1954-08-12']""]"
CWQ_dev_WebQTrn-1036_347ac41770c5607a59919e07e21f5626,Who is the leader of the government where Michel Goudchax was an office holder in 2012?,"[""SELECT['Michel Goudchax']"", ""PROJECT['government where #REF was an office holder', '#1']"", ""FILTER['#2', 'in 2012']"", ""PROJECT['leader of #REF', '#3']""]","[""SELECT['Michel Goudchax']"", ""PROJECT['government where #REF was office holder', '#1']"", ""FILTER['#2', 'in 2012']"", ""PROJECT['leader of #REF', '#3']""]"
CWQ_dev_WebQTrn-1036_6c19bc1fe78f2c0015bfd29e5c12767c,Who is the Leader of Country where the First Valls 2012 legislative session was held?,"[""SELECT['the First Valls 2012 legislative session']"", ""PROJECT['country of #REF', '#1']"", ""PROJECT['leader of #REF', '#2']""]","[""SELECT['the First Valls 2012 legislative session']"", ""PROJECT['country of #REF', '#1']"", ""PROJECT['Lower of #REF', '#2']""]"
CWQ_dev_WebQTrn-1036_b96b735d1d754f27bc8986b614669f7b,"Find the location of the film Amen, who was the leader of that location in 2012?","[""SELECT['film Amen']"", ""PROJECT['location of #REF', '#1']"", ""PROJECT['leader of #REF', '#2']"", ""FILTER['#3', 'in 2012']""]","[""SELECT['films']"", ""FILTER['#1', 'that is Amen']"", ""PROJECT['location of #REF', '#2']"", ""PROJECT['leader of #REF', '#3']"", ""FILTER['#4', 'in 2012']""]"
CWQ_dev_WebQTrn-1036_c7964000752a9a34f003045075f0deb4,Who as leader of France in 2012 was in Office until 2012-05-16?,"[""SELECT['France']"", ""PROJECT['leader of #REF', '#1']"", ""FILTER['#2', 'in 2012']"", ""FILTER['#3', 'that was in Office until 2012-05-16']""]","[""SELECT['France']"", ""PROJECT['leader of #REF', '#1']"", ""FILTER['#2', 'in 2012']"", ""FILTER['#3', 'that was in office until 2012-05-16']""]"
CWQ_dev_WebQTrn-1036_f30448fb592924eb90b421396e13a587,Which 2012 leader of France started his tenure earliest?,"[""SELECT['France']"", ""PROJECT['leaders of #REF', '#1']"", ""FILTER['#2', 'in 2012']"", ""PROJECT['when did #REF start his tenure', '#3']"", ""COMPARATIVE['#3', '#4', 'is the lowest']""]","[""SELECT['France']"", ""PROJECT['leaders of #REF', '#1']"", ""FILTER['#2', 'in 2012']"", ""PROJECT['when did #REF start his tenure', '#3']"", ""SUPERLATIVE['min', '#3', '#4']""]"
CWQ_dev_WebQTrn-1079_9018dcd6c34ff89707630fa9d6e5266c,What various dialects does the ethinic group Black Irish speak?,"[""SELECT['the ethinic group Black Irish']"", ""PROJECT['dialects of #REF', '#1']""]","[""SELECT['the ethinic group Black Irish']"", ""PROJECT['different dialects of #REF', '#1']""]"
CWQ_dev_WebQTrn-1080_1f69facb9679fb780b4743e589156f1d,"Which type of cancer, did the actor that played the character ,Jo Stockton die of?","[""SELECT['character']"", ""FILTER['#1', 'that is Jo Stockton']"", ""PROJECT['actor of #REF', '#2']"", ""PROJECT['type of cancer that #REF die of', '#3']""]","[""SELECT['character']"", ""FILTER['#1', 'that is Jo Stockton']"", ""PROJECT['actor of #REF', '#2']"", ""PROJECT['type of cancer of #REF', '#3']""]"
CWQ_dev_WebQTrn-1080_37fb506a56557fe0852849c7a7a44ade,What type of cancer did the woman who played Rachel Zachary die of?,"[""SELECT['Rachel Zachary']"", ""PROJECT['woman who played #REF', '#1']"", ""PROJECT['type of cancer that #REF die of', '#2']""]","[""SELECT['Rachel Zachary']"", ""PROJECT['woman who played #REF', '#1']"", ""PROJECT['cancer of #REF', '#2']"", ""PROJECT['type of #REF', '#3']""."
CWQ_dev_WebQTrn-1108_3d155f3ef97f36c48cca17d7443418c4,What is the name of the mascot of the Yale Bulldogs Men's Basketball team?,"[""SELECT['the Yale Bulldogs Men s Basketball team']"", ""PROJECT['mascot of #REF', '#1']"", ""PROJECT['name of #REF', '#2']""]","[""SELECT['mascots']"", ""FILTER['#1', 'of the Yale Bulldogs Men s Basketball team']"", ""PROJECT['name of #REF', '#2']""]"
CWQ_dev_WebQTrn-1108_6ecdb08357169578baaa2205fd1a423c,What is the mascot of the Yale Anglers journal?,"[""SELECT['the Yale Anglers journal']"", ""PROJECT['mascot of #REF', '#1']""]","[""SELECT['journal']"", ""FILTER['#1', 'of Yale Anglers']"", ""PROJECT['mascot of #REF', '#2']""]"
CWQ_dev_WebQTrn-1109_11ff41d4e7a4786018b253237538ceb3,What is the type of currency used where Moncef Marzouki holds a government position?,"[""SELECT['Moncef Marzouki']"", ""PROJECT['government position of #REF', '#1']"", ""PROJECT['where is #REF', '#2']"", ""PROJECT['type of currency used in #REF', '#3']""]","[""SELECT['Moncef Marzouki']"", ""PROJECT['government position of #REF', '#1']"", ""PROJECT['where is #REF', '#2']"", ""PROJECT['currency used in #REF', '#3']"", ""PROJECT['type of #REF', '#4']""]"
CWQ_dev_WebQTrn-1109_5706a9f49af8b58fe906d96a0490edb6,What type of currency can be found in the location that is used in the film Justine?,"[""SELECT['film']"", ""FILTER['#1', 'that is Justine']"", ""PROJECT['location used in #REF', '#2']"", ""PROJECT['currency of #REF', '#3']""]","[""SELECT['film']"", ""FILTER['#1', 'that is Justine']"", ""PROJECT['location of #REF', '#2']"", ""PROJECT['currency of #REF', '#3']""]"
CWQ_dev_WebQTrn-1119_2072e5fee980d50272952c62aa8504f6,Name the place of birth of the author who published The Wealth of Nation editions .?,"[""SELECT['The Wealth of Nation editions']"", ""PROJECT['author who published #REF', '#1']"", ""PROJECT['place of birth of #REF', '#2']""]","[""SELECT['the Wealth of Nation editions']"", ""PROJECT['author who published #REF', '#1']"", ""PROJECT['place of birth of #REF', '#2']""]"
CWQ_dev_WebQTrn-1121_3a191ed551bbb51cef857b5ba43d23b0,"Which city is home to the author of ""The Prince?""?","[""SELECT['The Prince']"", ""PROJECT['author of #REF', '#1']"", ""PROJECT['city that is home to #REF', '#2']""]","[""SELECT['The Prince']"", ""PROJECT['author of #REF', '#1']"", ""PROJECT['city that #REF is home to', '#2']""]"
CWQ_dev_WebQTrn-1121_c4013ee704411335d82361eee6eaa23b,"In what city did the person who stated ""Hatred is gained as much by good works as by evil.""  reside?","[""SELECT['person']"", ""FILTER['#1', 'that stated Hatred is gained as much by good works as by evil']"", ""PROJECT['city of #REF', '#2']""]","[""SELECT['person']"", ""FILTER['#1', 'that stated Hatred is gained as much by good works as by evil']"", ""PROJECT['city that #REF reside in', '#2']""]"
CWQ_dev_WebQTrn-116_86357fc301df73754877cf3af70e0406,What countries are subject to the reign of the political appointee whose title is Sheriff of Monmouthshire?,"[""SELECT['political appointee']"", ""FILTER['#1', 'whose title is Sheriff of Monmouthshire']"", ""PROJECT['reign of #REF', '#2']"", ""PROJECT['countries that are subject to #REF', '#3']""]","[""SELECT['political appointee']"", ""PROJECT['title of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is Sheriff of Monmouthshire']"", ""PROJECT['reign of #REF', '#3']"", ""PROJECT['subject countries of #REF', '#4']""]"
CWQ_dev_WebQTrn-1167_675e2a842506fdbbcf3ccdec8f51cee3,Who plays Lois in the TV show with the Family Guy Theme Song?,"[""SELECT['TV show']"", ""FILTER['#1', 'with the Family Guy Theme Song']"", ""PROJECT['who plays Lois in #REF', '#2']""]","[""SELECT['TV show']"", ""FILTER['#1', 'that has the Family Guy Theme Song']"", ""PROJECT['who plays Lois in #REF', '#2']""]"
CWQ_dev_WebQTrn-1173_570beed44432b583e62cbcd9988619ef,Who is the author who wrote A Doll's House and influenced Arthur Miller?,"[""SELECT['A Doll s House']"", ""PROJECT['author who wrote #REF', '#1']"", ""FILTER['#2', 'that influenced Arthur Miller']""]","[""SELECT['A Doll s House']"", ""PROJECT['author that wrote #REF', '#1']"", ""FILTER['#2', 'that influenced Arthur Miller']""]"
CWQ_dev_WebQTrn-1173_facdb34c7e72f264190bc9926fc5c4de,What member of Order of St. Olav that influenced Arthur Miller?,"[""SELECT['the Order of St. Olav']"", ""PROJECT['members of #REF', '#1']"", ""FILTER['#2', 'that influenced Arthur Miller']""]","[""SELECT['the Order of St. Olav']"", ""PROJECT['members of #REF', '#1']"", ""FILTER['#2', 'who influenced Arthur Miller']""]"
CWQ_dev_WebQTrn-1178_16097e3e8de303ab0669a75b99540894,"What are some places to visit in the area where the film ""The Passenger"" is set?","[""SELECT['film']"", ""FILTER['#1', 'that is The Passenger']"", ""PROJECT['area where #REF is set', '#2']"", ""PROJECT['places to visit of #REF', '#3']""]","[""SELECT['the film The Passenger']"", ""PROJECT['area where #REF is set', '#1']"", ""PROJECT['places to visit of #REF', '#2']""]"
CWQ_dev_WebQTrn-1178_7854d8a4f7269d3d0c7bf8cfef702046,Where is a good place to visit in Barcelona that also happens to be where the Catalonia national football team plays?,"[""SELECT['Barcelona']"", ""PROJECT['good place to visit of #REF', '#1']"", ""FILTER['#2', 'that happens to be where the Catalonia national football team plays']""]","[""SELECT['Barcelona']"", ""PROJECT['good place to visit of #REF', '#1']"", ""FILTER['#2', 'that is where the Catalonia national football team plays']""]"
CWQ_dev_WebQTrn-1178_8d0db19646b3de28eb2a001fefd3510e,What are the places in Barcelona with elevation 512.0 to visit?,"[""SELECT['Barcelona']"", ""PROJECT['places to visit of #REF', '#1']"", ""PROJECT['elevation of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is 512.0']""]","[""SELECT['Barcelona']"", ""PROJECT['places to visit in #REF', '#1']"", ""PROJECT['elevation of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is 512.0']""]"
CWQ_dev_WebQTrn-1178_b9f558e606a3cf16271346c8152fd8bb,Where in Barcelona does the Catalonia National Football team play?,"[""SELECT['Catalonia National Football team']"", ""PROJECT['where does #REF play', '#1']"", ""FILTER['#2', 'in Barcelona']""]","[""SELECT['the Catalonia National Football team']"", ""PROJECT['Where does #REF play', '#1']"", ""FILTER['#2', 'in Barcelona']""]"
CWQ_dev_WebQTrn-1183_2ec12a06ceff1fc38dbfabc809aba1ea,Where did the person who academically advised Vincenzo Viviani get an education?,"[""SELECT['Vincento Viviani']"", ""PROJECT['person who academically advised #REF', '#1']"", ""PROJECT['education of #REF', '#2']"", ""PROJECT['Where was #REF', '#3']""]","[""SELECT['Vincenzo Viviani']"", ""PROJECT['person who academically advised #REF', '#1']"", ""PROJECT['education of #REF', '#2']"", ""PROJECT['where was #REF', '#3']""]"
CWQ_dev_WebQTrn-1183_9feec7b85d9fba5c263cd3dfbb9e8626,Where did the person who lived in Grand Duchy of Tuscany attend college?,"[""SELECT['person']"", ""FILTER['#1', 'who lived in Grand Duchy of Tuscany']"", ""PROJECT['college of #REF', '#2']""]","[""SELECT['person']"", ""FILTER['#1', 'that lived in Grand Duchy of Tuscany']"", ""PROJECT['college of #REF', '#2']""]"
CWQ_dev_WebQTrn-1212_a6da51fcd89e451b7c9eaccc1b7690bf,What political system does the jurisdiction of Yury Chaika's office use?,"[""SELECT['Yurry Chaika s office']"", ""PROJECT['jurisdiction of #REF', '#1']"", ""PROJECT['political system of #REF', '#2']""]","[""SELECT['Yuriy Chaika s office']"", ""PROJECT['jurisdiction of #REF', '#1']"", ""PROJECT['political system of #REF', '#2']""]"
CWQ_dev_WebQTrn-1223_f6e9279987679c87848dd986115327af,Which team(s) were owned by the subject of the documentary 'The House of Steinbrenner'?,"[""SELECT['the documentary The House of Steinbrenner']"", ""PROJECT['subject of #REF', '#1']"", ""PROJECT['teams owned by #REF', '#2']""]","[""SELECT['the documentary The House of Steinbrenner']"", ""PROJECT['subject of #REF', '#1']"", ""PROJECT['team owned by #REF', '#2']""]"
CWQ_dev_WebQTrn-1247_0086d2537f89176e0be67746d2047d84,"What character is Mila Kinus in the show which includes the episodes ""Stewie Kills Lois"" and ""Lois Kills Stewie'?","[""SELECT['Stewie Kills Lois']"", ""SELECT['Lois Kills Stewie']"", ""PROJECT['show of #REF', '#1']"", ""PROJECT['show of #REF', '#2']"", ""SELECT['character Mila Kinus']"", ""INTERSECTION['#5', '#3', '#4']""]","[""SELECT['Stewie Kills Lois']"", ""SELECT['Lois Kills Stewie']"", ""PROJECT['show that includes #REF', '#1']"", ""PROJECT['show that includes #REF', '#2']"", ""PROJECT['character of #REF', '#3']"", ""COMPARATIVE['#4', '#5', 'is Mila Kinus']""]"
CWQ_dev_WebQTrn-1274_8fe5ec39e992465249b6b75c971057ed,"Where did the person that stated, ""College isn't the place to go for ideas."", attend school?","[""SELECT['person']"", ""FILTER['#1', 'that stated College is nt the place to go for ideas']"", ""PROJECT['where did #REF attend school', '#2']""]","[""SELECT['person']"", ""FILTER['#1', 'that stated College is nt the place to go for ideas']"", ""PROJECT['Where did #REF attend school', '#2']""]"
CWQ_dev_WebQTrn-1351_402552b61d68fcf116111585da32583b,"What was the birth place of the person that said ""a good GI bill would increase the recruit pool""?","[""SELECT['person']"", ""FILTER['#1', 'that said a good GI bill would increase the recruit pool']"", ""PROJECT['birth place of #REF', '#2']""]","[""SELECT['person']"", ""FILTER['#1', 'that said a good GI bill would increase the recruit pool']"", ""PROJECT['birth place of #REF', '#2']""]."
CWQ_dev_WebQTrn-1355_05d28aa0a61e386be88f662f8efa90d8,"In the jurisdiction where the government office holder was Wu Xioland in 2011, who runs that jurisdiction?","[""SELECT['Wu Xioland']"", ""PROJECT['government office holder of #REF', '#1']"", ""FILTER['#2', 'in 2011']"", ""PROJECT['jurisdiction of #REF', '#3']"", ""PROJECT['who runs #REF', '#4']""]","[""SELECT['government office holder']"", ""FILTER['#1', 'that was Wu Xioland']"", ""FILTER['#2', 'in 2011']"", ""PROJECT['jurisdiction of #REF', '#3']"", ""PROJECT['who runs #REF', '#4']""]"
CWQ_dev_WebQTrn-1355_ef0862827cfcebdc3733734f32cf5470,"In 2011, who was the leader of the nation where Harbin Beer is made?","[""SELECT['Harbin Beer']"", ""PROJECT['nation of #REF', '#1']"", ""PROJECT['leader of #REF', '#2']"", ""FILTER['#3', 'in 2011']""]","[""SELECT['Harbin Beer']"", ""PROJECT['nation where #REF is made', '#1']"", ""PROJECT['leader in 2011 of #REF', '#2']""]"
CWQ_dev_WebQTrn-1363_d5901712a11bf12fad01b2dbf35bdc7a,The person who used to live in Burr Oak also lived where?,"[""SELECT['Burr Oak']"", ""PROJECT['person who used to live in #REF', '#1']"", ""PROJECT['where did #REF live', '#2']""]","[""SELECT['Burr Oak']"", ""PROJECT['person that used to live in #REF', '#1']"", ""PROJECT['where did #REF live', '#2']""]"
CWQ_dev_WebQTrn-1363_d7d303efc1f901f14e6aae2bb469743c,Where did Laura Ingalls Wilder live in the Mountain Time Zone?,"[""SELECT['Laura Ingalls Wilder']"", ""PROJECT['Where did #REF live', '#1']"", ""FILTER['#2', 'in the Mountain Time Zone']""]","[""SELECT['Laura Ingalls Wilder']"", ""PROJECT['Where did #REF live', '#1']"", ""FILTER['#2', 'that is in the Mountain Time Zone']""]"
CWQ_dev_WebQTrn-1363_e61667194d3ce9b58fd868cc0fb9f9ae,What country was both home to Laura Ingalls Wilder and a county named Kingsbury?,"[""SELECT['Laura Ingalls Wilder']"", ""PROJECT['country of #REF', '#1']"", ""SELECT['county']"", ""FILTER['#3', 'named Kingsbury']"", ""FILTER['#2', 'that was home to #4']""]","[""SELECT['Laura Ingalls Wilder']"", ""PROJECT['country of #REF', '#1']"", ""SELECT['county']"", ""FILTER['#3', 'that is named Kingsbury']"", ""FILTER['#2', 'that was home to #4']""]"
CWQ_dev_WebQTrn-1373_0e72c20ed3b2f3433a44ba4c78a4d894,What language spoken in Finland has the initials se?,"[""SELECT['Finland']"", ""PROJECT['spoken language of #REF', '#1']"", ""FILTER['#2', 'that has the initials se']""]","[""SELECT['Finland']"", ""PROJECT['spoken languages of #REF', '#1']"", ""PROJECT['initials of #REF', '#2']""."
CWQ_dev_WebQTrn-1373_827770e3b0435563fa1afb84f50ff598,What languge is used where Oulu is located?,"[""SELECT['Oulu']"", ""PROJECT['where is #REF located', '#1']"", ""PROJECT['languge used in #REF', '#2']""]","[""SELECT['Oulu']"", ""PROJECT['where is #REF located', '#1']"", ""PROJECT['languge of #REF', '#2']""]"
CWQ_dev_WebQTrn-1386_2d9ee86b602c5e7b7a18f53ffa10f1ee,What is the cause of death of the author of the lyrics for Down Deep Inside?,"[""SELECT['Down Deep Inside']"", ""PROJECT['lyrics of #REF', '#1']"", ""PROJECT['author of #REF', '#2']"", ""PROJECT['cause of death of #REF', '#3']""]","[""SELECT['Down Deep Inside lyrics']"", ""PROJECT['author of #REF', '#1']"", ""PROJECT['cause of death of #REF', '#2']""]"
CWQ_dev_WebQTrn-1386_ffef8e9812a1ba730308eb606944b3b0,"What was the cause of death for the artist who was award nominated for ""Hot Stuff""?","[""SELECT['Hot Stuff']"", ""PROJECT['artist award nominated for #REF', '#1']"", ""PROJECT['cause of death of #REF', '#2']""]","[""SELECT['Hot Stuff']"", ""PROJECT['award nominated artist of #REF', '#1']"", ""PROJECT['cause of death of #REF', '#2']""]"
CWQ_dev_WebQTrn-1418_b879082beef213f7c7c500b82636fbc1,"What actor both played the infamous Captain Kirk in the Star Trek series, and was executive producer of The Captains?","[""SELECT['the infamous Captain Kirk in the Star Trek series']"", ""PROJECT['actor of #REF', '#1']"", ""FILTER['#2', 'that was executive producer of The Captains']""]","[""SELECT['Captain Kirk']"", ""FILTER['#1', 'in the Star Trek series']"", ""PROJECT['actor of #REF', '#2']"", ""FILTER['#3', 'that was executive producer of The Captains']""]"
CWQ_dev_WebQTrn-1447_d7747ff97c79143eb98bc6fbe2d9c8ff,What player was born in Tyler and drafted by the Cleveland Browns?,"[""SELECT['Tyler']"", ""PROJECT['player born in #REF', '#1']"", ""FILTER['#2', 'that was drafted by the Cleveland Browns']""]","[""SELECT['tyler']"", ""PROJECT['player born in #REF', '#1']"", ""FILTER['#2', 'that was drafted by the Cleveland Browns']""]"
CWQ_dev_WebQTrn-1481_0e39f66c6fc07e486a39a8de2a59f022,What Maryland senator is the politician that ended their position in the government earliest?,"[""SELECT['Maryland']"", ""PROJECT['senator of #REF', '#1']"", ""FILTER['#2', 'that ended their position in the government earliest']""]","[""SELECT['states']"", ""PROJECT['position in the government of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is the lowest']"", ""PROJECT['senator of #REF', '#3']"", ""FILTER['#4', 'in Maryland']""]"
CWQ_dev_WebQTrn-1503_a406df76513fc1faf79c5a2950933ae9,"In the country where Cerveceria Bucanero Mayabe beer is made is brewed, what form of currency is used?","[""SELECT['Cerveceria Bucanero Mayabe beer']"", ""PROJECT['country where #REF is made', '#1']"", ""PROJECT['form of currency of #REF', '#2']""]","[""SELECT['Cerveceria Bucanero Mayabe beer']"", ""PROJECT['country where #REF is made', '#1']"", ""PROJECT['currency of #REF', '#2']""]"
CWQ_dev_WebQTrn-1522_40f6d578621b52925575fb300af36889,What works did of Charles Darwin write on Biology?,"[""SELECT['Charles Darwin']"", ""PROJECT['works that #REF write on Biology', '#1']""]","[""SELECT['Charles Darwin']"", ""PROJECT['works on Biology of #REF', '#1']""]"
CWQ_dev_WebQTrn-1522_48006ffcc458af664781bb4ed6bea1c3,What work of Charles Darwin's work belongs to the biography genre?,"[""SELECT['Charles Darwin']"", ""PROJECT['works of #REF', '#1']"", ""PROJECT['genres of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is biography']""]","[""SELECT['Charles Darwin']"", ""PROJECT['work of #REF', '#1']"", ""PROJECT['genres of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is biography']""]"
CWQ_dev_WebQTrn-1529_17dce559f069bbd76f045192423e1ce0,Which language is used in both Guyana and Buffyverse?,"[""SELECT['Guyana']"", ""SELECT['Buffyverse']"", ""PROJECT['language of #REF', '#1']"", ""PROJECT['language of #REF', '#2']"", ""SELECT['language']"", ""INTERSECTION['#5', '#3', '#4']""]","[""SELECT['Guyana']"", ""SELECT['Buffyverse']"", ""SELECT['languages']"", ""INTERSECTION['#3', '#1', '#2']""]"
CWQ_dev_WebQTrn-1529_cdf693e51b436b4f14fa06028a74d963,East Berbice-Corentyne is part of the country where people speak what languages?,"[""SELECT['East Berbice-Corentyne']"", ""PROJECT['country of #REF', '#1']"", ""PROJECT['languages of #REF', '#2']""]","[""SELECT['East Berbice-Corentyne']"", ""PROJECT['country that #REF is part of', '#1']"", ""PROJECT['languages of #REF', '#2']""]"
CWQ_dev_WebQTrn-1536_49e567b7faaa40c62e7322de05102c3c,"Who is the topic of the movie,The Private Lives of Elizabeth and Essex, father?","[""SELECT['the movie The Private Lives of Elizabeth and Essex']"", ""PROJECT['topic of #REF', '#1']"", ""PROJECT['father of #REF', '#2']""]","[""SELECT['the movie The Private Lives of Elizabeth and Essex']"", ""PROJECT['the father of #REF', '#1']"", ""PROJECT['topic of #REF', '#2']""]"
CWQ_dev_WebQTrn-1538_bc5cf8cd59582d4a1c8f4c416c010e71,Who is the sports team that uses the Maracana Stadium who Ronaldinho plays for?,"[""SELECT['the Maracana Stadium']"", ""PROJECT['sports team that uses #REF', '#1']"", ""FILTER['#2', 'that Ronaldinho plays for']""]","[""SELECT['Maracana Stadium']"", ""PROJECT['sports team that uses #REF', '#1']"", ""FILTER['#2', 'that Ronaldinho plays for']""]"
CWQ_dev_WebQTrn-1542_5a6ff4d04a675a1faca2c42267554795,What type of government did both Sparta Greece and the country ruled by Manuel I of Portugal have?,"[""SELECT['Sparta Greece']"", ""SELECT['Manuel I of Portugal']"", ""PROJECT['country ruled by #REF', '#1']"", ""PROJECT['type of government of #REF', '#2']"", ""PROJECT['type of government of #REF', '#3']"", ""SELECT['type of government']"", ""INTERSECTION['#6', '#4', '#5']""]","[""SELECT['Sparta Greece']"", ""PROJECT['type of government of #REF', '#1']"", ""SELECT['Manuel I of Portugal']"", ""PROJECT['country ruled by #REF', '#3']"", ""PROJECT['type of government of #REF', '#4']"", ""SELECT['type of government']"", ""INTERSECTION['#6', '#5', '#7']""]"
CWQ_dev_WebQTrn-1542_b0c49fd8fdb5779bd62406ebb134084b,What type of government does that country with Sparta as its capital have?,"[""SELECT['countries']"", ""PROJECT['capitals of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is Sparta']"", ""PROJECT['type of government of #REF', '#3']""]","[""SELECT['country']"", ""PROJECT['capital of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is Sparta']"", ""PROJECT['type of government of #REF', '#3']""]"
CWQ_dev_WebQTrn-1542_cafa7eef130748bfa1a8d35b02769a62,What type of government did Sparta Greece have with Rio de Janeiro as capital?,"[""SELECT['Sparta Greece']"", ""PROJECT['type of government of #REF', '#1']"", ""PROJECT['capital of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is Rio de Janeiro']""]","[""SELECT['Sparta Greece']"", ""PROJECT['type of government of #REF', '#1']"", ""FILTER['#2', 'with Rio de Janeiro as capital']""]"
CWQ_dev_WebQTrn-1563_9589fa0cb928db083a8c27074313e0b7,"Which time zone is in both Texas and Boonville Township, Cooper County, Missouri?","[""SELECT['time zones']"", ""FILTER['#1', 'in Texas']"", ""FILTER['#1', 'in Boonville Township Cooper County Missouri']"", ""INTERSECTION['#1', '#2', '#3']""]","[""SELECT['Texas']"", ""SELECT['Boonville Township, Cooper County Missouri']"", ""SELECT['time zone']"", ""INTERSECTION['#3', '#1', '#2']""]"
CWQ_dev_WebQTrn-1563_cab1228be4e8c16ee35a67b7ac63b264,"In which timezone is the state of Texas located, more specifically Strathmore Airport and its environs?","[""SELECT['Texas']"", ""PROJECT['state of #REF', '#1']"", ""PROJECT['timezone of #REF', '#2']"", ""FILTER['#3', 'that is Strathmore Airport and its environs']""]","[""SELECT['state of Texas']"", ""PROJECT['timezone of #REF', '#1']"", ""FILTER['#2', 'that is Strathmore Airport and its environs']""]"
CWQ_dev_WebQTrn-1625_22837422e25cf0a05cb0efba9aa80402,Alyson Stoner played in which movie that involved the organization National Film Board of Canada?,"[""SELECT['Alyson Stoner']"", ""PROJECT['movies of #REF', '#1']"", ""FILTER['#2', 'that involved the organization National Film Board of Canada']""]","[""SELECT['Alyson Stoner']"", ""PROJECT['movies of #REF', '#1']"", ""FILTER['#2', 'that involve the organization National Film Board of Canada']""]"
CWQ_dev_WebQTrn-1625_35808d5c3b6a527fc5d78d0b0fc6d27a,What is the movie that is 103 minutes long that Alyson Stoner starred in?,"[""SELECT['Alyson Stoner']"", ""PROJECT['movies of #REF', '#1']"", ""PROJECT['minutes of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is 103 minutes']""]","[""SELECT['Alyson Stoner']"", ""PROJECT['movies of #REF', '#1']"", ""PROJECT['minutes that #REF is 103 minutes long', '#2']""]"
CWQ_dev_WebQTrn-1625_404a6acab61e0a618448f9baf6ea523c,"What films released after October 19, 2004 feature Alyson Stoner?","[""SELECT['films']"", ""FILTER['#1','released after October 19 2004']"", ""FILTER['#2', 'that feature Alyson Stoner']""]","[""SELECT['Alyson Stoner']"", ""PROJECT['films of #REF', '#1']"", ""FILTER['#2','released after October 19 2004']""]"
CWQ_dev_WebQTrn-1625_5f5da3e1d4ca7df9f19ce3fdfc5790e2,What Alyson Stoner movies involve the organization toonexplainers?,"[""SELECT['Alyson Stoner']"", ""PROJECT['movies of #REF', '#1']"", ""FILTER['#2', 'that involve the organization toonexplainers']""]","[""SELECT['Alyson Stoner']"", ""PROJECT['movies of #REF', '#1']"", ""FILTER['#2', 'that involve the organization toonexplainers']""."
CWQ_dev_WebQTrn-1625_cf7026962ad130bd7297384520f6e43b,What Step Up movie features Alyson Stoner?,"[""SELECT['Alyson Stoner']"", ""PROJECT['movies of #REF', '#1']"", ""FILTER['#2', 'that feature Step Up']""]","[""SELECT['Alyson Stoner']"", ""PROJECT['movies of #REF', '#1']"", ""FILTER['#2', 'that are Step Up movies']""]"
CWQ_dev_WebQTrn-1631_2326103f221042f024262b19814ee9d3,"In the country that has the national anthem Ee Mungu Nguvu Yetu, who are the famous athletes?","[""SELECT['the national anthem Ee Mungu Nguvu Yetu']"", ""PROJECT['country of #REF', '#1']"", ""PROJECT['athletes of #REF', '#2']"", ""FILTER['#3', 'that are famous']""]","[""SELECT['the national anthem Ee Mungu Nguvu Yetu']"", ""PROJECT['country of #REF', '#1']"", ""PROJECT['athletes of #REF', '#2']"", ""FILTER['#3', 'that are famous']""]"
CWQ_dev_WebQTrn-1631_80de580930b8478336145199b0c820b3,What famous athletes come from the jurisdiction of Moody Awori?,"[""SELECT['Moody Awori']"", ""PROJECT['jurisdiction of #REF', '#1']"", ""PROJECT['athletes of #REF', '#2']"", ""FILTER['#3', 'that are famous']""]","[""SELECT['Moody Awori']"", ""PROJECT['jurisdiction of #REF', '#1']"", ""PROJECT['famous athletes that come from #REF', '#2']""]"
CWQ_dev_WebQTrn-1631_8c50e30ac5163e6dabfc999a7129a4ea,Who are famous athletes from where the Rift Valley Province is?,"[""SELECT['the Rift Valley Province']"", ""PROJECT['where is #REF', '#1']"", ""PROJECT['athletes of #REF', '#2']"", ""FILTER['#3', 'that are famous']""]","[""SELECT['Rift Valley Province']"", ""PROJECT['where is #REF', '#1']"", ""PROJECT['athletes of #REF', '#2']"", ""FILTER['#3', 'that are famous']""]"
CWQ_dev_WebQTrn-1632_55881f911c82274c9bea7fe00b3b6793,"What are things to see in Staten Island, New York and New York City?","[""SELECT['things to see']"", ""FILTER['#1', 'in Staten Island']"", ""FILTER['#1', 'in New York']"", ""FILTER['#1', 'in New York City']"", ""INTERSECTION['#1', '#2', '#3']""]","[""SELECT['things to see']"", ""FILTER['#1', 'in Staten Island']"", ""FILTER['#1', 'in New York']"", ""FILTER['#1', 'in New York City']"", ""UNION['#2', '#3']""]"
CWQ_dev_WebQTrn-1641_6723fd9d2b2e1f112e1699cf3a931c64,"What train station serves as the setting for the movie ""Tales of the City?""?","[""SELECT['the movie Tales of the City']"", ""PROJECT['setting of #REF', '#1']"", ""PROJECT['train station of #REF', '#2']""]","[""SELECT['the movie Tales of the City']"", ""PROJECT['setting of #REF', '#1']"", ""PROJECT['train station of #REF', '#2']""]"
CWQ_dev_WebQTrn-1641_d8be4cbbc6e3dbcb16f7a2b9fb7fa5ac,"What is the name of the main train station that is featured in the film ""Fleet Week 2""?","[""SELECT['the film Fleet Week 2']"", ""PROJECT['main train station featured in #REF', '#1']"", ""PROJECT['name of #REF', '#2']""]","[""SELECT['the film Fleet Week 2']"", ""PROJECT['main train station of #REF', '#1']"", ""PROJECT['name of #REF', '#2']""]"
CWQ_dev_WebQTrn-1657_135c576c85060d076311cb5bbd9b68b0,What movie featuring Miley Cyrus was decorated by Nancy Haigh?,"[""SELECT['Miley Cyrus']"", ""PROJECT['movies featuring #REF', '#1']"", ""FILTER['#2', 'that was decorated by Nancy Haigh']""]","[""SELECT['Miley Cyrus']"", ""PROJECT['movies of #REF', '#1']"", ""FILTER['#2', 'that was decorated by Nancy Haigh']""]"
CWQ_dev_WebQTrn-1657_2d077323191d349225d8f3719925c777,What movie did the person who went to Heritage Elementary School starred in?,"[""SELECT['person']"", ""FILTER['#1', 'who went to Heritage Elementary School']"", ""PROJECT['movie of #REF', '#2']""]","[""SELECT['person']"", ""FILTER['#1', 'that went to Heritage Elementary School']"", ""PROJECT['movies of #REF', '#2']""]"
CWQ_dev_WebQTrn-1657_2de8034b7964e62cbfb68e23ba300615,Elliott Glick directed what movies that starred Miley Cyrus?,"[""SELECT['Miley Cyrus']"", ""PROJECT['movies of #REF', '#1']"", ""FILTER['#2', 'that Elliott Glick directed']""]","[""SELECT['Miley Cyrus']"", ""PROJECT['movies starring #REF', '#1']"", ""FILTER['#2', 'that Elliott Glick directed']""]"
CWQ_dev_WebQTrn-1657_306f327a2508b5627dd0bec7032432b0,"In what movies did Miley Cyrus play, and in what film was Dennis Sands a crew member?","[""SELECT['Miley Cyrus']"", ""PROJECT['movies of #REF', '#1']"", ""PROJECT['crew members of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is Dennis Sands']"", ""PROJECT['movies of #REF', '#4']"", ""UNION['#5', '#6']""]","[""SELECT['Miley Cyrus']"", ""PROJECT['movies of #REF', '#1']"", ""PROJECT['crew members of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is Dennis Sands']"", ""INTERSECTION['#2', '#4', '#5']""]"
CWQ_dev_WebQTrn-1657_4e9c47a2fdd065e939fe0da5b782f120,"Which movies did Miley Cyrus act in, and the film casting director was Denise Chamian?","[""SELECT['Miley Cyrus']"", ""PROJECT['movies of #REF', '#1']"", ""PROJECT['film casting directors of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'was Denise Chamian']""]","[""SELECT['Miley Cyrus']"", ""PROJECT['movies of #REF', '#1']"", ""PROJECT['film casting director of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'was Denise Chamian']""]"
CWQ_dev_WebQTrn-1657_a90c08a839ac4d0ac22ebbf436bb578b,What movie directed by Tom Vaughan was Miley Cyrus in?,"[""SELECT['Tom Vaughan']"", ""PROJECT['movies directed by #REF', '#1']"", ""FILTER['#2', 'that Miley Cyrus was in']""]","[""SELECT['Tom Vaughan']"", ""PROJECT['movies directed by #REF', '#1']"", ""FILTER['#2', 'that Miley Cyrus is in']""]"
CWQ_dev_WebQTrn-1657_d9747364839478e833903b5540a0e2e6,What movie starred Miley Cyrus and was released in december of 2003?,"[""SELECT['Miley Cyrus']"", ""PROJECT['movies of #REF', '#1']"", ""FILTER['#2', 'that was released in december 2003']""]","[""SELECT['Miley Cyrus']"", ""PROJECT['movies of #REF', '#1']"", ""FILTER['#2', 'that was released in december of 2003']""."
CWQ_dev_WebQTrn-1657_da5b416f0db337d4911c15c1ed5aa0e7,In which Miley Cyrus film was the production designed by Nelson Coates?,"[""SELECT['Miley Cyrus']"", ""PROJECT['films of #REF', '#1']"", ""FILTER['#2', 'that was the production designed by Nelson Coates']""]","[""SELECT['Miley Cyrus']"", ""PROJECT['films of #REF', '#1']"", ""FILTER['#2', 'that was designed by Nelson Coates']""]"
CWQ_dev_WebQTrn-1657_ed3a18cb79e33b1c2a13d67593ed189c,What movies did the singer of Come Get It Bae play in?,"[""SELECT['Come Get It Bae']"", ""PROJECT['singer of #REF', '#1']"", ""PROJECT['movies of #REF', '#2']""]","[""SELECT['Come Get It Bae']"", ""PROJECT['singer of #REF', '#1']"", ""PROJECT['movies of #REF', '#2']""]"
CWQ_dev_WebQTrn-1688_7ecd2e240f353965762db4f5ebf4f0d1,Who voiced Darth Vader in the movie that also featured Rebecca Jackson Mendoza?,"[""SELECT['Rebecca Jackson Mendoza']"", ""PROJECT['movie of #REF', '#1']"", ""PROJECT['who voiced Darth Vader in #REF', '#2']""]","[""SELECT['the movie']"", ""FILTER['#1', 'that featured Rebecca Jackson Mendoza']"", ""PROJECT['who voiced Darth Vader in #REF', '#2']""]"
CWQ_dev_WebQTrn-1744_5c3a608fb44a9825e6ba6d2b62f4e051,What speculative fiction book was written by Emily Dickinson?,"[""SELECT['Emily Dickinson']"", ""PROJECT['speculative fiction book of #REF', '#1']""]","[""SELECT['Emily Dickinson']"", ""PROJECT['speculative fiction books written by #REF', '#1']""]"
CWQ_dev_WebQTrn-1744_a2e696ac3d11b22f2a4c7038b5c3a2e2,"What other books did the author of ""I Felt a Funeral"" write?","[""SELECT['I Felt a Funeral']"", ""PROJECT['author of #REF', '#1']"", ""PROJECT['books of #REF', '#2']"", ""DISCARD['#3', '#1']""]","[""SELECT['I Felt a Funeral']"", ""PROJECT['author of #REF', '#1']"", ""PROJECT['other books that #REF did write', '#2']""]"
CWQ_dev_WebQTrn-1754_90b157810bb6f4b71e3286400ee83fb8,Who influenced both Andy Warhol and Nam June Paik?,"[""SELECT['Andy Warhol']"", ""SELECT['Nam June Paik']"", ""PROJECT['who influenced #REF', '#1']"", ""PROJECT['who influenced #REF', '#2']"", ""SELECT['who is']"", ""INTERSECTION['#5', '#3', '#4']""]","[""SELECT['Andy Warhol']"", ""SELECT['Nam June Paik']"", ""PROJECT['who influenced #REF', '#1']"", ""PROJECT['who influenced #REF', '#2']"", ""SELECT['who influenced']"", ""INTERSECTION['#5', '#3', '#4']""."
CWQ_dev_WebQTrn-1754_ae689802d8dfd5e32e50c9fe2271038f,Which person who influenced the work of Andy Warhol also influence Carl Andre?,"[""SELECT['Andy Warhol']"", ""PROJECT['the work of #REF', '#1']"", ""SELECT['Carl Andre']"", ""PROJECT['who influenced #REF', '#3']"", ""PROJECT['who influenced #REF', '#4']"", ""SELECT['people']"", ""INTERSECTION['#6', '#2', '#5']""]","[""SELECT['Andy Warhol']"", ""PROJECT['the work of #REF', '#1']"", ""SELECT['Carl Andre']"", ""PROJECT['people who influenced #REF', '#3']"", ""FILTER['#4', 'that also influence #2']""]"
CWQ_dev_WebQTrn-1754_af10d0488ff2013fe6dda4e23d10f09c,Who was a man who influenced Andy Warhol's work and who died of heart failure?,"[""SELECT['Andy Warhol s work']"", ""PROJECT['man who influenced #REF', '#1']"", ""FILTER['#2', 'who died of heart failure']""]","[""SELECT['Andy Warhol']"", ""PROJECT['man who influenced #REF', '#1']"", ""FILTER['#2', 'that died of heart failure']""]"
CWQ_dev_WebQTrn-1754_bb8a718dff3b86f05f54d53caf461a56,Which artist who was an influence on Andy Warhol was also nominated for a Grammy in the 26th Grammy Awards?,"[""SELECT['Andy Warhol']"", ""PROJECT['influence artist of #REF', '#1']"", ""FILTER['#2', 'that was nominated for a Grammy in the 26th Grammy Awards']""]","[""SELECT['Artists']"", ""FILTER['#1', 'that was an influence on Andy Warhol']"", ""FILTER['#2', 'that was nominated for a Grammy in the 26th Grammy Awards']""]"
CWQ_dev_WebQTrn-1784_9d422f19ab24972365b32f78f455c1c6,"What country that has an ISO alpha 3 of AUT, speaks German?","[""SELECT['countries']"", ""PROJECT['ISO alpha 3 of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is AUT']"", ""FILTER['#3', 'that speak German']""]","[""SELECT['countries']"", ""FILTER['#1', 'that speaks German']"", ""PROJECT['ISO alpha 3 of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is AUT']""]"
CWQ_dev_WebQTrn-1784_c9e872cc90fbd095ba0d25b029bc6143,What is the name of the country with the ISO numeric 056 where German is spoken?,"[""SELECT['countries']"", ""PROJECT['ISO numerics of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is 056']"", ""FILTER['#3', 'where German is spoken']"", ""PROJECT['name of #REF', '#4']""]","[""SELECT['countries']"", ""FILTER['#1', 'with the ISO numeric 056']"", ""FILTER['#2', 'where German is spoken']"", ""PROJECT['name of #REF', '#3']""]"
CWQ_dev_WebQTrn-1784_d08336daa754523cf13934359b794632,Which nation has a capital of Brussels and includes German as a language?,"[""SELECT['nation']"", ""PROJECT['capital of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is Brussels']"", ""PROJECT['language of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is German']""]","[""SELECT['nations']"", ""FILTER['#1', 'with capital of Brussels']"", ""FILTER['#2', 'that includes German as a language']""]"
CWQ_dev_WebQTrn-1784_f3a1c6675eb8bb236b049311dc760eaf,Which German speaking country was Thomas Lechner born in?,"[""SELECT['Thomas Lechner']"", ""PROJECT['country born in of #REF', '#1']"", ""FILTER['#2', 'that is German speaking']""]","[""SELECT['Thomas Lechner']"", ""PROJECT['countries born in of #REF', '#1']"", ""FILTER['#2', 'that is German speaking']""]"
CWQ_dev_WebQTrn-1793_1f3f7417b06d43f14600e1091c60a934,Which sports club did Santi Cazorla play for that was nominated for an award at the 2013 Laureus World Sports Awards Ceremony?,"[""SELECT['Santi Cazorla']"", ""PROJECT['sports club of #REF', '#1']"", ""FILTER['#2', 'that was nominated for an award at the 2013 Laureus World Sports Awards Ceremony']""]","[""SELECT['Santi Cazorla']"", ""PROJECT['sports club that #REF play for', '#1']"", ""FILTER['#2', 'that was nominated for an award at the 2013 Laureus World Sports Awards Ceremony']""."
CWQ_dev_WebQTrn-1804_4cff52ee00d48c443727778efb01c77a,What coutry is currently led by an acting prime minister and is a part of NATO?,"[""SELECT['coutry']"", ""FILTER['#1', 'that is currently led by an acting prime minister']"", ""FILTER['#2', 'that is part of NATO']""]","[""SELECT['the acting prime minister']"", ""PROJECT['coutry currently led by #REF', '#1']"", ""FILTER['#2', 'that is part of NATO']"")""]"
CWQ_dev_WebQTrn-1804_e0133b074487245b89f042f1b8e39568,What country is a member of NATO and home to V Bird airline?,"[""SELECT['V Bird airline']"", ""PROJECT['country of #REF', '#1']"", ""FILTER['#2', 'that is a member of NATO']""]","[""SELECT['countries']"", ""FILTER['#1', 'that are members of NATO']"", ""FILTER['#2', 'that are home to V Bird airline']""]"
CWQ_dev_WebQTrn-1816_9f8b39da7c3f621417a7bb2a708495b3,In the Family Guy what parts are played by Seth Macfarlane and Artturi Laakso?,"[""SELECT['the Family Guy']"", ""PROJECT['parts played by Seth Macfarlane of #REF', '#1']"", ""PROJECT['parts played by Artturi Laakso of #REF', '#1']"", ""UNION['#2', '#3']""]","[""SELECT['Seth Macfarlane']"", ""SELECT['Artturi Laakso']"", ""PROJECT['parts played by #REF', '#1']"", ""PROJECT['parts played by #REF', '#2']"", ""SELECT['the Family Guy']"", ""INTERSECTION['#5', '#3', '#4']""]"
CWQ_dev_WebQTrn-1816_add926a35447f633156c3f6f5d6929f0,What Mexican-born Family Guy character was played my Seth Macfarlane?,"[""SELECT['Seth Macfarlane']"", ""PROJECT['family Guy character of #REF', '#1']"", ""FILTER['#2', 'that is Mexican-born']""]","[""SELECT['Seth Macfarlane']"", ""PROJECT['family Guy character of #REF', '#1']"", ""FILTER['#2', 'that was Mexican-born']""]"
CWQ_dev_WebQTrn-1816_d924c0e2ecd8ee8289e86c845eff324b,"In Family Guy, Seth Macfarlane plays the parent of Chris Griffin. What is his character's name?","[""SELECT['Chris Griffin']"", ""PROJECT['parent of #REF', '#1']"", ""FILTER['#2', 'in Family Guy']"", ""PROJECT['character of #REF', '#3']""]","[""SELECT['Seth Macfarlane']"", ""PROJECT['character of #REF', '#1']"", ""FILTER['#2', 'that is the parent of Chris Griffin']""]"
CWQ_dev_WebQTrn-1861_0c4b8853b2bb4bc2a5b6b813eb499445,On what continent is the country where Hans Enoksen holds a governmental office?,"[""SELECT['Hans Enoksen']"", ""PROJECT['governmental office of #REF', '#1']"", ""PROJECT['country of #REF', '#2']"", ""PROJECT['continent of #REF', '#3']""]","[""SELECT['Han Enoksen']"", ""PROJECT['governmental office of #REF', '#1']"", ""PROJECT['country of #REF', '#2']"", ""PROJECT['continent of #REF', '#3']""]"
CWQ_dev_WebQTrn-1861_7c1e3372d16b45dddb65cda9c6f886ff,"On which continent does ""Beyond the Pole"" take place?","[""SELECT['Beyond the Pole']"", ""PROJECT['continent of #REF', '#1']""]","[""SELECT['Beyond the Pole']"", ""PROJECT['continent that #REF takes place', '#1']""]"
CWQ_dev_WebQTrn-1871_ae466d1b65d4519cfc39b992275f7a99,What is the language spoken in the country where there is a position of Chairman of the Communist party of China?,"[""SELECT['position of Chairman of the Communist party of China']"", ""PROJECT['country of #REF', '#1']"", ""PROJECT['language spoken in #REF', '#2']""]","[""SELECT['positions']"", ""FILTER['#1', 'of the Communist party of China']"", ""PROJECT['country of #REF', '#2']"", ""PROJECT['language spoken in #REF', '#3']""]"
CWQ_dev_WebQTrn-1907_29e8712a41a77a19dd75d10ea746040e,Which university with 5185 postgraduates did David Duke attend?,"[""SELECT['David Duke']"", ""PROJECT['universities of #REF', '#1']"", ""PROJECT['postgraduates of #REF', '#2']"", ""GROUP['count', '#3', '#2']"", ""COMPARATIVE['#2', '#4', 'is 5185']""]","[""SELECT['David Duke']"", ""PROJECT['university of #REF', '#1']"", ""PROJECT['postgraduates of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARATIVE['#2', '#4', 'is 5185']""]"
CWQ_dev_WebQTrn-1907_9aee5423fd1fb29bfc9e3485f7cbce5e,At what educational institution with a sports team called LSU Tigers men's basketball team was David Duke educated?,"[""SELECT['David Duke']"", ""PROJECT['educational institutions of #REF', '#1']"", ""PROJECT['sports teams of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is called LSU Tigers men s basketball team']""]","[""SELECT['David Duke']"", ""PROJECT['educational institutions of #REF', '#1']"", ""PROJECT['sports teams of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is LSU Tigers men s basketball team']""]"
CWQ_dev_WebQTrn-191_28397577e32e26956013dc763dd8fdd8,Which is the European country where the Pilsner Urquell beer is produced?,"[""SELECT['the Pilsner Urquell beer']"", ""PROJECT['country of #REF', '#1']"", ""FILTER['#2', 'that is European']""]","[""SELECT['the Pilsner Urquell beer']"", ""PROJECT['country of #REF', '#1']"", ""FILTER['#2', 'that is European country']""]"
CWQ_dev_WebQTrn-191_5ca5e76911345c6ca44a0e8ea3e1764f,Where is the goverment jurisdiction that has Jens Nilsson in office?,"[""SELECT['Jens Nilsson']"", ""PROJECT['goverment jurisdiction of #REF', '#1']"", ""PROJECT['where is #REF in office', '#2']""]","[""SELECT['Jens Nilsson']"", ""PROJECT['goverment jurisdiction of #REF', '#1']"", ""PROJECT['Where is #REF in office', '#2']""]"
CWQ_dev_WebQTrn-191_5cb49417d744150fabe3bf8a60f0625e,What is the EU country that Alexander Mintz spoke about?,"[""SELECT['Alexander Mintz']"", ""PROJECT['EU country that #REF spoke about', '#1']""]","[""SELECT['Alexander Mintz']"", ""PROJECT['the EU country that #REF spoke about', '#1']""]"
CWQ_dev_WebQTrn-191_6a0e75033345508e8eadd5a47b0ad6b5,"Which European country has 1,000 people in its army?","[""SELECT['European countries']"", ""PROJECT['armies of #REF', '#1']"", ""PROJECT['people in #REF', '#2']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is 1, 000']""]","[""SELECT['European countries']"", ""PROJECT['armies of #REF', '#1']"", ""PROJECT['population of #REF', '#2']"", ""COMPARATIVE['#1', '#3', 'is 1, 000']""]"
CWQ_dev_WebQTrn-191_8521fba28d6284ab9b52e0f6894174e8,"What are the name(s) of the EU countries that were ruled by Joseph II, Holy Roman emperor?","[""SELECT['Joseph II, Holy Roman emperor']"", ""PROJECT['EU countries ruled by #REF', '#1']"", ""PROJECT['names of #REF', '#2']""]","[""SELECT['Joseph II, Holy Roman emperor']"", ""PROJECT['EU countries that were ruled by #REF', '#1']"", ""PROJECT['name(s of #REF', '#2']""."
CWQ_dev_WebQTrn-191_b11130a15ecd39ba201d7798a184fda1,What EU Countries that have Lejre Municipality as a second level division?,"[""SELECT['EU Countries']"", ""FILTER['#1', 'that have Lejre Municipality as a second level division']""]","[""SELECT['the Lejre Municipality']"", ""PROJECT['second level division of #REF', '#1']"", ""PROJECT['EU Countries that have #REF', '#2']""]"
CWQ_dev_WebQTrn-191_cf6cc4cc9ed790243a390f155ae72256,What EU country has a nominal gdp of 279500000000.0?,"[""SELECT['EU countries']"", ""PROJECT['nominal gdp of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is 279500000000.0']""]","[""SELECT['EU countries']"", ""PROJECT['nominal gdps of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is 279500000000.0']""]"
CWQ_dev_WebQTrn-1915_60a10cef29995c25a7c6801089c86f20,In what time zone is the Honolulu Record circulated?,"[""SELECT['the Honolulu Record']"", ""PROJECT['where is #REF circulated', '#1']"", ""PROJECT['time zone of #REF', '#2']""]","[""SELECT['Honolulu Record']"", ""PROJECT['where is #REF circulated', '#1']"", ""PROJECT['time zone of #REF', '#2']""]"
CWQ_dev_WebQTrn-1915_aa46b5c3f817142c19f990881289b352,What is the time zone of the Tropical Storm Fabio afflicted locations?,"[""SELECT['Tropical Storm Fabio']"", ""PROJECT['afflicted locations of #REF', '#1']"", ""PROJECT['time zone of #REF', '#2']""]","[""SELECT['Traditional Storm Fabio']"", ""PROJECT['afflicted locations of #REF', '#1']"", ""PROJECT['time zone of #REF', '#2']""]"
CWQ_dev_WebQTrn-1929_6b8c780bd704ec35aa7663d1d5d55d64,Team Owner George Steinbrenner last won the World Series in what year?,"[""SELECT['Team Owner George Steinbrenner']"", ""PROJECT['World Series wins of #REF', '#1']"", ""PROJECT['years of #REF', '#2']"", ""AGGREGATE['max', '#3']""]","[""SELECT['Game Owner George Steinbrenner']"", ""PROJECT['World Series wins of #REF', '#1']"", ""PROJECT['years of #REF', '#2']"", ""AGGREGATE['max', '#3']""]"
CWQ_dev_WebQTrn-1941_1b19fc1a0f9a02115594348e3cb27ceb,Where is Coors Light produced and houses Downtown Littleton?,"[""SELECT['Coors Light']"", ""PROJECT['Where is #REF produced', '#1']"", ""FILTER['#2', 'that houses Downtown Littleton']""]","[""SELECT['Coors Light']"", ""PROJECT['where is #REF produced', '#1']"", ""FILTER['#2', 'that houses Downtown Littleton']""]"
CWQ_dev_WebQTrn-1941_e4c1f23f4024d07238ee571d286c3cd4,Which state has the official state symbol of a Fossil and has Littleton in downtown?,"[""SELECT['states']"", ""PROJECT['official state symbols of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is Fossil']"", ""FILTER['#3', 'that has Littleton in downtown']""]","[""SELECT['states']"", ""PROJECT['official state symbols of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is Fossil']"", ""FILTER['#3', 'with Littleton in downtown']""]"
CWQ_dev_WebQTrn-1941_fd966741033f502e192f3fd9f54f3184,Where is the city known as Littleton that has co2 emissions of 0.382244483?,"[""SELECT['city']"", ""FILTER['#1', 'that is known as Littleton']"", ""PROJECT['co2 emissions of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is 0.382244483']"", ""PROJECT['Where is #REF', '#4']""]","[""SELECT['littleton']"", ""PROJECT['city known as #REF', '#1']"", ""PROJECT['co2 emissions of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is 0.382244483']"", ""PROJECT['Where is #REF', '#4']""]-"
CWQ_dev_WebQTrn-1948_0f7ed9d5620cd27daca9903c682529bf,Who was the President in 2010 of the governmental jurisdiction in which Zeng Peiyan was a governmental office holder?,"[""SELECT['Zeng Peiyan']"", ""PROJECT['governmental office holder of #REF', '#1']"", ""PROJECT['governmental jurisdiction of #REF', '#2']"", ""PROJECT['President of #REF', '#3']"", ""FILTER['#4', 'in 2010']""]","[""SELECT['Zeng Peiyan']"", ""PROJECT['governmental office of #REF', '#1']"", ""PROJECT['governmental jurisdiction of #REF', '#2']"", ""PROJECT['President of #REF', '#3']"", ""FILTER['#4', 'in 2010']""]"
CWQ_dev_WebQTrn-1948_fbb250d577dae6a4255a0a693c10fb6d,Who is 2010 president of where Guangzhou Zhu Jiang Brewery Co.Ltd. Zhu Jiang Beer beer is made?,"[""SELECT['Guangzhou Zhu Jiang Brewery Co.Ltd. Zhu Jiang Beer beer']"", ""PROJECT['where is #REF made', '#1']"", ""PROJECT['president of #REF', '#2']"", ""FILTER['#3', 'in 2010']""]","[""SELECT['Guangzhou Zhu Jiang Brewery Co.Ltd. Zhu Jiang Beer beer']"", ""PROJECT['where is #REF made', '#1']"", ""PROJECT['president of #REF in 2010', '#2']""]"
CWQ_dev_WebQTrn-1949_d952e8e8b8f0da8fa51e38b5560ed7b6,What are the ruling bodies in the US state whose capital is named Jefferson City?,"[""SELECT['US states']"", ""PROJECT['capitals of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is named Jefferson City']"", ""PROJECT['ruling bodies of #REF', '#3']""]","[""SELECT['states']"", ""PROJECT['capitals of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is named Jefferson City']"", ""PROJECT['ruling bodies of #REF', '#3']""]"
CWQ_dev_WebQTrn-1977_9d539de3db5f1699f782ae7397a7c864,"For what teams did the person portrayed in ""Golden Shoes"" play?","[""SELECT['Golden Shoes']"", ""PROJECT['person portrayed in #REF', '#1']"", ""PROJECT['teams of #REF', '#2']""]","[""SELECT['Golden Shoes']"", ""PROJECT['person portrayed in #REF', '#1']"", ""PROJECT['teams of #REF', '#2']?""]"
CWQ_dev_WebQTrn-1977_f085fa4c2b6c7af6fd1f07e269a418de,What team won the 1956 PequeÃ±a Copa del Mundo de Clubes championship and Cristiano Ronald plays for?,"[""SELECT['the 1956 Pequea Copa del Mundo de Clubes championship']"", ""PROJECT['team that won #REF', '#1']"", ""FILTER['#2', 'that Cristiano Ronald plays for']""]","[""SELECT['Pequea Copa del Mundo de Clubes championship']"", ""FILTER['#1', 'in 1956']"", ""PROJECT['team of #REF', '#2']"", ""FILTER['#3', 'that Cristiano Ronald plays for']""]"
CWQ_dev_WebQTrn-1987_bb1ccdafd1be536d6b0f5cb8a0a3eba7,What county is The Sacramento Union newspaper circulated in?,"[""SELECT['The Sacramento Union newspaper']"", ""PROJECT['county #REF is circulated in', '#1']""]","[""SELECT['the Sacramento Union newspaper']"", ""PROJECT['county #REF is circulated in', '#1']""]"
CWQ_dev_WebQTrn-2094_339eebcb3fc48e1dd023df1eb6523445,"Find the artist who was nominated for an award for How Great Thou Art, what is their hometown?","[""SELECT['How Great Thou Art']"", ""PROJECT['award nominated artist of #REF', '#1']"", ""PROJECT['hometown of #REF', '#2']""]","[""SELECT['How Great Thou Art']"", ""PROJECT['artist who was nominated for an award for #REF', '#1']"", ""PROJECT['hometown of #REF', '#2']""."
CWQ_dev_WebQTrn-2095_07bc2732f3f01630b27a86518ac7a539,The country that contains Stann Creek District is located in what continent?,"[""SELECT['Stann Creek District']"", ""PROJECT['country of #REF', '#1']"", ""PROJECT['continent of #REF', '#2']""]","[""SELECT['country']"", ""FILTER['#1', 'that contains Stann Creek District']"", ""PROJECT['continent of #REF', '#2']""]"
CWQ_dev_WebQTrn-2095_1bccdeea331cc743f4e756c21aac69e8,On what continent is the governmental jurisdiction that has a governmental office holder named George Cadle Price located?,"[""SELECT['governmental office holder']"", ""FILTER['#1', 'that is named George Cadle Price']"", ""PROJECT['governmental jurisdiction of #REF', '#2']"", ""PROJECT['continent of #REF', '#3']""]","[""SELECT['governmental office holder']"", ""FILTER['#1', 'that is named George Cadle Price']"", ""PROJECT['governmental jurisdiction that has #REF', '#2']"", ""PROJECT['continent of #REF', '#3']""]"
CWQ_dev_WebQTrn-2095_8f00c2959923258d4289c1c8ce58a26c,"What continent is home to the country that has an anthem that contains the phrase ""Land of the Free""?","[""SELECT['countries']"", ""PROJECT['anthems of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'contains the phrase Land of the Free']"", ""PROJECT['continent of #REF', '#3']""]","[""SELECT['country']"", ""FILTER['#1', 'that has an anthem that contains the phrase Land of the Free']"", ""PROJECT['continent that is home to #REF', '#2']""]"
CWQ_dev_WebQTrn-2095_e3fbed937bc5d8ccb6fb5f5bac912e31,Belmopan is capital of a country in what Continent?,"[""SELECT['countries']"", ""PROJECT['capitals of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is Belmopan']"", ""PROJECT['Continent of #REF', '#3']""]","[""SELECT['Countries']"", ""PROJECT['capitals of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is Belmopan']"", ""PROJECT['Continent of #REF', '#3']""]"
CWQ_dev_WebQTrn-2108_581ac098af1edbcc3d96a126843bb703,What character does the artist of the concert tour The Best Damn World Tour play in the film Over the Hedge?,"[""SELECT['the concert tour The Best Damn World Tour']"", ""PROJECT['artist of #REF', '#1']"", ""PROJECT['character that #REF plays', '#2']"", ""FILTER['#3', 'in the film Over the Hedge']""]","[""SELECT['the concert tour The Best Damn World Tour']"", ""PROJECT['artist of #REF', '#1']"", ""PROJECT['character of #REF', '#2']"", ""FILTER['#3', 'in the film Over the Hedge']""]"
CWQ_dev_WebQTrn-2108_85be57e1d51fc4ce310c120cba0e6e64,Which character in Over the Hedge is played by the recording artist for Best Years of Our Lives?,"[""SELECT['Over the Hedge']"", ""PROJECT['character in #REF', '#1']"", ""FILTER['#2', 'that is played by the recording artist for Best Years of Our Lives']""]","[""SELECT['Over the Hedge']"", ""PROJECT['character of #REF', '#1']"", ""FILTER['#2', 'that is played by the recording artist for Best Years of Our Lives']""]"
CWQ_dev_WebQTrn-2108_e852443b88aebb56535c3fb8390109ca,"In the movie over the hedge what character is played by the person who wrote the song ""Unwanted""?","[""SELECT['the song Unwanted']"", ""PROJECT['person who wrote #REF', '#1']"", ""PROJECT['character played by #REF', '#2']"", ""FILTER['#3', 'in the movie over the hedge']""]","[""SELECT['the song Unwanted']"", ""PROJECT['person who wrote #REF', '#1']"", ""PROJECT['character of #REF', '#2']"", ""FILTER['#3', 'that is played by #1']""]"
CWQ_dev_WebQTrn-2150_473c0dd1e422495b8fa57aa6c3f25cc3,What three countries neighbor the nation in which Cerveceria Modelo Corona Light beer is made?,"[""SELECT['Cerveceria Modelo Corona Light beer']"", ""PROJECT['nation of #REF', '#1']"", ""PROJECT['countries that neighbor #REF', '#2']""]","[""SELECT['Cerveceria Modelo Corona Light beer']"", ""PROJECT['nation where #REF is made', '#1']"", ""PROJECT['countries that neighbor #REF', '#2']""]"
CWQ_dev_WebQTrn-2150_4d5eab1706e2b7dedc4af89682ff67a2,WHat three countries border the nation where the Purepecha langiage is spoken?,"[""SELECT['the Purepecha langiage']"", ""PROJECT['nation where #REF is spoken', '#1']"", ""PROJECT['countries that border #REF', '#2']""]","[""SELECT['the Purepecha langiage']"", ""PROJECT['nation of #REF', '#1']"", ""PROJECT['countries that border #REF', '#2']""]"
CWQ_dev_WebQTrn-2177_e296550bdbe5592272f3980a755ff750,What school with headquarters in New York City did Caroline Kennedy attend?,"[""SELECT['Caroline Kennedy']"", ""PROJECT['school of #REF', '#1']"", ""PROJECT['headquarters of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is in New York City']""]","[""SELECT['Caroline Kennedy']"", ""PROJECT['school of #REF', '#1']"", ""FILTER['#2', 'that has headquarters in New York City']""]"
CWQ_dev_WebQTrn-2181_8c90d5499a627a3478313407b1404ecf,Who is the coach of the 2001 AFC Champions?,"[""SELECT['the 2001 AFC Champions']"", ""PROJECT['coach of #REF', '#1']""]","[""SELECT['AFC Champions']"", ""FILTER['#1', 'in 2001']"", ""PROJECT['coaches of #REF', '#2']""]"
CWQ_dev_WebQTrn-2181_c4e06c3a9e4b4f10bd1ae97f1742c198,The head coach of the football organization that claimed victory in the 2013 AFC Championship game is which man?,"[""SELECT['the 2013 AFC Championship game']"", ""PROJECT['football organization of #REF', '#1']"", ""PROJECT['head coach of #REF', '#2']"", ""PROJECT['man of #REF', '#3']""]","[""SELECT['the 2013 AFC Championship game']"", ""PROJECT['football organization of #REF', '#1']"", ""PROJECT['head coach of #REF', '#2']"", ""PROJECT['man that #REF claimed victory', '#3']""]"
CWQ_dev_WebQTrn-2190_058203c22235854bf96557ab2b7c383e,In what Chamorro Time Zone country does Sam Shepard live?,"[""SELECT['countries']"", ""FILTER['#1', 'that are Chamorro Time Zone']"", ""FILTER['#2', 'where Sam Shepard lives']""]","[""SELECT['countries']"", ""FILTER['#1', 'that are in the Chamorro Time Zone']"", ""FILTER['#2', 'where Sam Shepard lives']""]"
CWQ_dev_WebQTrn-2190_13f8b2b536d44fb9a3548685dac28721,Where does Sam Shepard live with the largest location GNIS feature ID?,"[""SELECT['Sam Shepard']"", ""PROJECT['where does #REF live', '#1']"", ""PROJECT['GNIS feature ID of #REF', '#2']"", ""SUPERLATIVE['max', '#2', '#3']""]","[""SELECT['Sam Shepard']"", ""PROJECT['Where does #REF live', '#1']"", ""PROJECT['GNIS feature ID of #REF', '#2']"", ""SUPERLATIVE['max', '#2', '#3']""]"
CWQ_dev_WebQTrn-2190_5069841743291a3625b51f8191da770d,Where does Sam Shepard live where the fictional Juliet Van Heuson also lived?,"[""SELECT['the fictional Juliet Van Heuson']"", ""PROJECT['where did #REF live', '#1']"", ""BOOLEAN['#2', 'is Sam Shepard']""]","[""SELECT['Sam Shepard']"", ""PROJECT['where does #REF live', '#1']"", ""FILTER['#2', 'where the fictional Juliet Van Heuson lived']""]"
CWQ_dev_WebQTrn-2190_711100bb410a8455025ab024c3b6164f,What State with Tallahassee where Sam Shepard live?,"[""SELECT['Tallahassee']"", ""PROJECT['State of #REF', '#1']"", ""FILTER['#2', 'where Sam Shepard lives']""]","[""SELECT['states']"", ""FILTER['#1', 'with Tallahassee']"", ""FILTER['#2', 'where Sam Shepard lives']""]"
CWQ_dev_WebQTrn-2190_cd1ca7de1c2bd1d5d04c8c4a806241fb,"In which city did Sam Shepard live, that the 2007 Gotham Screen Film Festival & Screenplay Contest, occurred?","[""SELECT['Sam Shepard']"", ""PROJECT['city where #REF lives', '#1']"", ""FILTER['#2', 'that the 2007 Gotham Screen Film Festival & Screenplay Contest occurred']""]","[""SELECT['the 2007 Gotham Screen Film Festival & Screenplay Contest']"", ""PROJECT['city of #REF', '#1']"", ""FILTER['#2', 'that Sam Shepard did live in']""]"
CWQ_dev_WebQTrn-2207_2b92bda9c5571b3e333f77374b311129,"What character in ""Shrek"" was played by the artist who was award-nominated for ""Broadway: The Music of Richard Rodgers""?","[""SELECT['Broadway The Music of Richard Rodgers']"", ""PROJECT['artist award-nominated for #REF', '#1']"", ""PROJECT['character in Shrek of #REF', '#2']""]","[""SELECT['Broadway The Music of Richard Rodgers']"", ""PROJECT['award-nominated artist of #REF', '#1']"", ""PROJECT['character played by #REF', '#2']"", ""FILTER['#3', 'that is in Shrek']""]"
CWQ_dev_WebQTrn-2207_53d78200041f2c84c9db497bbd37ffca,"Who did the author of ""The Last of the Really Great Whangdoodles"" play in ""Shrek""?","[""SELECT['The Last of the Really Great Whangdoodles']"", ""PROJECT['author of #REF', '#1']"", ""PROJECT['who did #REF play', '#2']"", ""FILTER['#3', 'in Shrek']""]","[""SELECT['The Last of the Really Great Whangdoodles']"", ""PROJECT['author of #REF', '#1']"", ""PROJECT['who did #REF play in Shrek', '#2']""]"
CWQ_dev_WebQTrn-2211_38841ff2afbb1d4b2bc54f51fe1245af,What episode has the smallest thetvdb ID and feature the debut of Eric Northman?,"[""SELECT['episode']"", ""PROJECT['thetvdb ID of #REF', '#1']"", ""SUPERLATIVE['min', '#1', '#2']"", ""FILTER['#3', 'that feature the debut of Eric Northman']""]","[""SELECT['episode']"", ""PROJECT['thetvdb ID of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is the lowest']"", ""FILTER['#3', 'that feature the debut of Eric Northman']""]"
CWQ_dev_WebQTrn-2238_f6f88507d5841c18f44c9dc7c15999c7,"What sports team, founded in 1966, includes Reggie Bush on it's roster?","[""SELECT['Sports teams']"", ""FILTER['#1', 'that was founded in 1966']"", ""FILTER['#2', 'that includes Reggie Bush on its roster']""]","[""SELECT['Sports teams']"", ""FILTER['#1', 'that was founded in 1966']"", ""FILTER['#2', 'that includes Reggie Bush on it s roster']"")"
CWQ_dev_WebQTrn-2259_167aff228b273413c548eb151281b97f,What entity did Rupert Murdoch own in 2012 that owned the radio station Fox News Talk?,"[""SELECT['Rupert Murdoch']"", ""PROJECT['entity that #REF owns', '#1']"", ""FILTER['#2', 'in 2012']"", ""FILTER['#3', 'that owned radio station Fox News Talk']""]","[""SELECT['Rupert Murdoch']"", ""PROJECT['entity of #REF', '#1']"", ""FILTER['#2', 'that owned the radio station Fox News Talk']"", ""FILTER['#3', 'in 2012']""]"
CWQ_dev_WebQTrn-2282_ea2ebb70f3bbf125f6abc008b4b71344,"Of those that influenced Roy Lichtenstein's artwork, with the earliest person's date of death?","[""SELECT['Roy Lichtenstein s artwork']"", ""PROJECT['people that influenced #REF', '#1']"", ""PROJECT['date of death of #REF', '#2']"", ""SUPERLATIVE['min', '#2', '#3']""]","[""SELECT['Roy Lichtenstein s artwork']"", ""PROJECT['artist of #REF', '#1']"", ""PROJECT['people that influenced #REF', '#2']"", ""PROJECT['date of death of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is the lowest']""]"
CWQ_dev_WebQTrn-2289_550f6a0ca850b4998124070c299ff048,What city was the place of death for the Architect who was credited for designing the Charlotte County Courthouse?,"[""SELECT['the Charlotte County Courthouse']"", ""PROJECT['Architect credited for designing #REF', '#1']"", ""PROJECT['place of death of #REF', '#2']"", ""PROJECT['city of #REF', '#3']""]","[""SELECT['the Charlotte County Courthouse']"", ""PROJECT['Architect credited for designing #REF', '#1']"", ""PROJECT['place of death of #REF', '#2']"", ""PROJECT['city of #REF', '#3']"")""]"
CWQ_dev_WebQTrn-23_9392f3f06e288ee4e3437a74f6bf5a37,What is the name of the high school that the president who went to Ramble Elementary attended?,"[""SELECT['presidents']"", ""FILTER['#1', 'who went to Ramble Elementary']"", ""PROJECT['high school of #REF', '#2']"", ""PROJECT['name of #REF', '#3']""]","[""SELECT['presidents']"", ""FILTER['#1', 'who went to Ramble Elementary']"", ""PROJECT['high school that #REF attended', '#2']"", ""PROJECT['name of #REF', '#3']""]"
CWQ_dev_WebQTrn-2325_e4c3db35dfb56855fbf2d1936c595f6e,Who did the actor that played the character Molly Pruitt married?,"[""SELECT['character']"", ""FILTER['#1', 'that is Molly Pruitt']"", ""PROJECT['actor of #REF', '#2']"", ""PROJECT['who married #REF', '#3']""]","[""SELECT['character Molly Pruitt']"", ""PROJECT['actor of #REF', '#1']"", ""PROJECT['who married #REF', '#2']""]"
CWQ_dev_WebQTrn-233_dd11343b9c28a21731d2ce4bbdc2630d,"In the country where the currency is the Afghan afghani, what languages do people speak?","[""SELECT['the Afghan afghani']"", ""PROJECT['country where #REF is the currency', '#1']"", ""PROJECT['languages of #REF', '#2']""]","[""SELECT['the Afghan afghani']"", ""PROJECT['country where #REF is currency', '#1']"", ""PROJECT['languages of #REF', '#2']""]"
CWQ_dev_WebQTrn-2346_28493f74e4691113c9a8fa3dd1f12cf9,What languages are used in the birthplace of the Formosan Mountain Dog breed?,"[""SELECT['breed']"", ""FILTER['#1', 'that is Formosan Mountain Dog']"", ""PROJECT['birthplace of #REF', '#2']"", ""PROJECT['languages of #REF', '#3']""]","[""SELECT['Formosan Mountain Dog breed']"", ""PROJECT['birthplace of #REF', '#1']"", ""PROJECT['languages of #REF', '#2']""]"
CWQ_dev_WebQTrn-2346_331a3fa4e65e5b914162bb6790f34126,What Language identified by the initials ZH do the Taiwanese people speak?,"[""SELECT['the Taiwanese people']"", ""PROJECT['Language that #REF speak', '#1']"", ""FILTER['#2', 'that is identified by the initials ZH']""]","[""SELECT['Taiwanese people']"", ""PROJECT['Language that #REF speak', '#1']"", ""FILTER['#2', 'identified by the initials ZH']""."
CWQ_dev_WebQTrn-2346_82c47c7560603b9f2bf6641c4008d9e2,What spoken languages are used in the country with national anthem of the Republic of China?,"[""SELECT['the Republic of China']"", ""PROJECT['national anthem of #REF', '#1']"", ""PROJECT['country of #REF', '#2']"", ""PROJECT['spoken languages of #REF', '#3']""]","[""SELECT['country']"", ""FILTER['#1', 'with national anthem of the Republic of China']"", ""PROJECT['spoken languages of #REF', '#2']""]"
CWQ_dev_WebQTrn-2346_87ae8c56f0cac4fb100a7237096b9109,"Find the country that speaks Taiwanese Hokkien, what other languages are spoken there?","[""SELECT['Taiwanese Hokkien']"", ""PROJECT['country that speaks #REF', '#1']"", ""PROJECT['languages of #REF', '#2']"", ""DISCARD['#3', '#1']""]","[""SELECT['countries']"", ""FILTER['#1', 'that speak Taiwanese Hokkien']"", ""PROJECT['languages of #REF', '#2']"", ""DISCARD['#3', '#2']""]"
CWQ_dev_WebQTrn-2401_1ad2d84ababa47e6d24a8dd6eb2b7943,What is the currency where the Ukrainian Greek Catholic Church is a religious organization leadership?,"[""SELECT['the Ukrainian Greek Catholic Church']"", ""PROJECT['religious organization leadership of #REF', '#1']"", ""PROJECT['where is #REF', '#2']"", ""PROJECT['currency of #REF', '#3']""]","[""SELECT['the Ukrainian Greek Catholic Church']"", ""PROJECT['religious organization leadership in #REF', '#1']"", ""PROJECT['where is #REF', '#2']"", ""PROJECT['currency of #REF', '#3']""]"
CWQ_dev_WebQTrn-2401_cdbcc6b35919272e53e514bfd6285ea8,What currency is used in the jurisdiction of the Acting Prime Minister of Ukraine?,"[""SELECT['Acting Prime Minister of Ukraine']"", ""PROJECT['jurisdiction of #REF', '#1']"", ""PROJECT['currency of #REF', '#2']""]","[""SELECT['the Acting Prime Minister of Ukraine']"", ""PROJECT['jurisdiction of #REF', '#1']"", ""PROJECT['currency of #REF', '#2']""]"
CWQ_dev_WebQTrn-2401_e9de608a162453baa77b7972ae3beb40,"Which currency is utilized in the country, that includes the location Kiev?","[""SELECT['countries']"", ""FILTER['#1', 'that includes the location Kiev']"", ""PROJECT['currency utilized in #REF', '#2']""]","[""SELECT['the location Kiev']"", ""PROJECT['country of #REF', '#1']"", ""PROJECT['currency utilized in #REF', '#2']""]"
CWQ_dev_WebQTrn-2411_6a69589b94f4e404c1a535c0a309d10f,In what year the did the team that won the 1987 NBA Finals win their first championship?,"[""SELECT['the 1987 NBA Finals']"", ""PROJECT['team that won #REF', '#1']"", ""PROJECT['championships of #REF', '#2']"", ""AGGREGATE['min', '#3']"", ""PROJECT['year of #REF', '#4']""]","[""SELECT['the 1987 NBA Finals']"", ""PROJECT['team that won #REF', '#1']"", ""PROJECT['championships of #REF', '#2']"", ""AGGREGATE['min', '#3']"", ""PROJECT['when was #REF', '#4']"", ""PROJECT['year of #REF', '#5']""]"
CWQ_dev_WebQTrn-243_2b37d8202380ac0219fe3057efe4693d,What artistic pursuit did Salvador Dali share as a hobby with Walid Berrazeg?,"[""SELECT['Salvador Dali']"", ""SELECT['Walid Berrazeg']"", ""PROJECT['artistic pursuit of #REF', '#1']"", ""PROJECT['artistic pursuit of #REF', '#2']"", ""INTERSECTION['#5', '#3', '#4']""]","[""SELECT['Salvador Dali']"", ""SELECT['Walid Berrazeg']"", ""PROJECT['artistic pursuit of #REF', '#1']"", ""PROJECT['artistic pursuit of #REF', '#2']"", ""FILTER['#3', 'that is with #4']""]"
CWQ_dev_WebQTrn-243_5f78750dea4e29874a3859c78a55377c,What style of art is Salvador Dali and Mikil Elango?,"[""SELECT['Salvador Dali']"", ""SELECT['Michil Elango']"", ""PROJECT['style of art of #REF', '#1']"", ""PROJECT['style of art of #REF', '#2']"", ""UNION['#3', '#4']""]","[""SELECT['Salvador Dali']"", ""PROJECT['style of art of #REF', '#1']"", ""SELECT['Michil Elango']"", ""PROJECT['style of art of #REF', '#3']"", ""UNION['#2', '#4']""]"
CWQ_dev_WebQTrn-243_795a73033e05acd1cf12a23f49e99f1b,Nicephore Niecpe created what style of art that was later used by Salvador Dali?,"[""SELECT['Nicephore Niecpe']"", ""PROJECT['style of art that #REF created', '#1']"", ""FILTER['#2', 'that was later used by Salvador Dali']""]","[""SELECT['Nicephore Niecpe']"", ""PROJECT['style of art #REF created', '#1']"", ""FILTER['#2', 'that was later used by Salvador Dali']""]"
CWQ_dev_WebQTrn-2458_7e386deae563f6bc0093c448343b6807,"On what continent would you find the location where the movie ""The Carbon Collective"" is set?","[""SELECT['the movie The Carbon Collective']"", ""PROJECT['location of #REF', '#1']"", ""PROJECT['continent of #REF', '#2']""]","[""SELECT['movie The Carbon Collective']"", ""PROJECT['location of #REF', '#1']"", ""PROJECT['continent of #REF', '#2']""]"
CWQ_dev_WebQTrn-2458_f53b7962c4dfca88044f3c0a89ac0290,What is the continent that has the Puntarenas Province within its borders?,"[""SELECT['the Puntarenas Province']"", ""PROJECT['border continent of #REF', '#1']""]","[""SELECT['the Puntarenas Province']"", ""PROJECT['continent that has #REF within its borders', '#1']""]"
CWQ_dev_WebQTrn-2494_12a8120ebbe8094300976a263cbfc8ab,"In which city, did the actor that is in the movie, The Fiction Makers, live?","[""SELECT['the movie The Fiction Makers']"", ""PROJECT['actor of #REF', '#1']"", ""PROJECT['city where #REF lives', '#2']""]","[""SELECT['the movie The Fiction Makers']"", ""PROJECT['actor of #REF', '#1']"", ""PROJECT['city live in of #REF', '#2']""]"
CWQ_dev_WebQTrn-2494_471b83eade9707a4dba68e201bf29d73,What location in the Greenwich Mean timezone did Roger Moore live?,"[""SELECT['Roger Moore']"", ""PROJECT['location in the Greenwich Mean timezone of #REF', '#1']""]","[""SELECT['Roger Moore']"", ""PROJECT['location in the Greenwich Mean timezone that #REF lives', '#1']""]"
CWQ_dev_WebQTrn-2494_9e9233e016c980617758cbbbbc6c374e,"Where did the actor who played in the movie ""Secret KGB UFO Files"" live?","[""SELECT['the movie Secret KGB UFO Files']"", ""PROJECT['actor of #REF', '#1']"", ""PROJECT['Where did #REF live', '#2']""]","[""SELECT['the movie Secret KGB UFO Files']"", ""PROJECT['actor who played in #REF', '#1']"", ""PROJECT['Where did #REF live', '#2']""]"
CWQ_dev_WebQTrn-2513_0fe2ee1f56e6c9e99eea39af139f1d2a,What sporting organization that earned the 2014 FA Cup Final championship title has triumphed most frequently for the FA Cup?,"[""SELECT['the FA Cup Final title']"", ""FILTER['#1', 'in 2014']"", ""PROJECT['sportal organization that earned #REF', '#2']"", ""FILTER['#3', 'that triumphed most frequently for the FA Cup']""]","[""SELECT['the 2014 FA Cup Final championship']"", ""PROJECT['sportal organization that earned #REF', '#1']"", ""FILTER['#2', 'that triumphed most frequently for the FA Cup']""]"
CWQ_dev_WebQTrn-2513_819b9e3f172c518f22c5a42be967bc59,Which football team award nominee with the most FA Cups wins was featured in the Laureus World Sports Awards ceremony in the 2000?,"[""SELECT['the 2000 Laureus World Sports Awards ceremony']"", ""PROJECT['football team award nominees featured in #REF', '#1']"", ""PROJECT['FA Cups wins of #REF', '#2']"", ""GROUP['count', '#3', '#2']"", ""COMPARATIVE['#2', '#4', 'is the highest']""]","[""SELECT['the Laureus World Sports Awards ceremony']"", ""FILTER['#1', 'in 2000']"", ""PROJECT['football team award nominees of #REF', '#2']"", ""PROJECT['FA Cups wins of #REF', '#3']"", ""GROUP['count', '#4', '#3']"", ""COMPARATIVE['#3', '#5', 'is the highest']""]"
CWQ_dev_WebQTrn-2513_89c9aefa34fd75dbb624d2d910edf16f,What team won the FA Cup and the 1968 European Cup Final?,"[""SELECT['the FA Cup']"", ""SELECT['the 1968 European Cup Final']"", ""PROJECT['team that won #REF', '#1']"", ""PROJECT['team that won #REF', '#2']"", ""SELECT['team']"", ""INTERSECTION['#5', '#3', '#4']""]","[""SELECT['the 1968 European Cup Final']"", ""SELECT['the FA Cup']"", ""PROJECT['team that won #REF', '#1']"", ""PROJECT['team that won #REF', '#2']"", ""INTERSECTION['#4', '#3', '#5']""]"
CWQ_dev_WebQTrn-2513_98c99e27d70cd9819c546038edcc177c,Which team founded in 1878 has the most FA cups?,"[""SELECT['teams']"", ""FILTER['#1', 'founded in 1878']"", ""PROJECT['FA cups of #REF', '#2']"", ""GROUP['count', '#3', '#2']"", ""SUPERLATIVE['max', '#2', '#4']""]","[""SELECT['teams']"", ""FILTER['#1', 'that was founded in 1878']"", ""PROJECT['FA cups of #REF', '#2']"", ""GROUP['count', '#3', '#2']"", ""SUPERLATIVE['max', '#2', '#4']""]"
CWQ_dev_WebQTrn-2513_b15bd6fb0438c023ff85e29d05de2300,"Which sports team was the latest founded, and has won the most FA cups?","[""SELECT['sports teams']"", ""FILTER['#1', 'that was founded the latest']"", ""PROJECT['FA cups won of #REF', '#2']"", ""GROUP['count', '#3', '#2']"", ""SUPERLATIVE['max', '#2', '#4']""]","[""SELECT['sports teams']"", ""FILTER['#1', 'that was founded latest']"", ""PROJECT['FA cups won of #REF', '#2']"", ""GROUP['count', '#3', '#2']"", ""SUPERLATIVE['max', '#2', '#4']""]"
CWQ_dev_WebQTrn-2525_1019287adbb3054033f0b7ee9bb002fd,"What college did the artist who had ""Maniac Magee"" nominated for an award go to?","[""SELECT['Maniac Magee']"", ""PROJECT['award nominated artist of #REF', '#1']"", ""PROJECT['college of #REF', '#2']""]","[""SELECT['Maniac Magee']"", ""PROJECT['artist that nominated #REF for an award', '#1']"", ""PROJECT['college of #REF', '#2']""]"
CWQ_dev_WebQTrn-2525_405c8b5bd83551a50c45836241923cca,"Where did Jerry Spinelli attend college, where the education institution has a sports team titled, Temple Owls men's basketball team?","[""SELECT['Jerry Spinelli']"", ""PROJECT['college of #REF', '#1']"", ""PROJECT['sports team of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is the Temple Owls men s basketball team']""]","[""SELECT['Jerry Spinelli']"", ""PROJECT['college of #REF', '#1']"", ""FILTER['#2', 'that has a sports team titled Temple Owls men s basketball team']""]"
CWQ_dev_WebQTrn-2525_fc9860150c81706ebf57bd3d47df5760,Which college did Jerry Spinelli attend and publishes the Bologna Center Journal of International Affairs?,"[""SELECT['Jerry Spinelli']"", ""PROJECT['college of #REF', '#1']"", ""FILTER['#2', 'that publishes the Bologna Center Journal of International Affairs']""]","[""SELECT['Jerry Spinelli']"", ""PROJECT['college that #REF did attend', '#1']"", ""FILTER['#2', 'that publishes the Bologna Center Journal of International Affairs']""]"
CWQ_dev_WebQTrn-2542_11a5331d844fbb039ac6e921b6900292,What home of Kaka has the smallest population?,"[""SELECT['Kaka']"", ""PROJECT['homes of #REF', '#1']"", ""PROJECT['populations of #REF', '#2']"", ""SUPERLATIVE['min', '#2', '#3']""]","[""SELECT['homes']"", ""FILTER['#1', 'of Kaka']"", ""PROJECT['populations of #REF', '#2']"", ""SUPERLATIVE['min', '#2', '#3']""]"
CWQ_dev_WebQTrn-2544_15a0067c4a6eb819232fc74c5daac57d,"What venues opened before 2008 in Seattle, WA that have fun things to do?","[""SELECT['Seattle WA']"", ""PROJECT['venues of #REF', '#1']"", ""FILTER['#2', 'that opened before 2008']"", ""FILTER['#3', 'that have fun things to do']""]","[""SELECT['Seattle, WA']"", ""PROJECT['venues in #REF', '#1']"", ""FILTER['#2', 'that opened before 2008']"", ""FILTER['#3', 'that have fun things to do']""."
CWQ_dev_WebQTrn-2544_217a71f695097c3f705bfdfe8403d606,"After I'm done visiting my cousin at Seattle Grace Mercy West Hospital, what fun things can I go see?","[""SELECT['my cousin']"", ""FILTER['#1', 'at Seattle Grace Mercy West Hospital']"", ""PROJECT['what fun things can I go see After #REF', '#2']""]","[""SELECT['my cousin']"", ""FILTER['#1', 'at Seattle Grace Mercy West Hospital']"", ""PROJECT['fun things I can go see after #REF', '#2']""]"
CWQ_dev_WebQTrn-2544_3e5734c6c04b02fcd1d3b1bc442f9fea,"What zoo that opened in 1899 is a fun thing to do in Seattle, WA?","[""SELECT['Seattle, WA']"", ""PROJECT['zoo of #REF', '#1']"", ""FILTER['#2', 'that opened in 1899']"", ""FILTER['#3', 'that is fun thing to do']""]","[""SELECT['Seattle, WA']"", ""PROJECT['zoos of #REF', '#1']"", ""FILTER['#2', 'that opened in 1899']"", ""FILTER['#3', 'that is a fun thing to do']""."
CWQ_dev_WebQTrn-2597_16044e3b13118db04cd6ac080c5ac7fc,"If a person is in the state where the 1994 MIssouri US senate election was held, which time zone were they in?","[""SELECT['the 1994 MIssouri US senate election']"", ""PROJECT['state of #REF', '#1']"", ""PROJECT['time zone of #REF', '#2']""]","[""SELECT['the 1994 MIssouri US senate election']"", ""PROJECT['state of #REF', '#1']"", ""PROJECT['person in #REF', '#2']"", ""PROJECT['time zone of #REF', '#4']""]"
CWQ_dev_WebQTrn-2597_e2633d0ba6ea2a1c452a4ab16b07e0a1,"If I'm in the governmental jurisdiction where the government includes a position called Missouri Attorney General, what time zone am I in?","[""SELECT['position']"", ""FILTER['#1', 'that is called Missouri Attorney General']"", ""PROJECT['governmental jurisdiction of #REF', '#2']"", ""PROJECT['time zone of #REF', '#3']""]","[""SELECT['positions']"", ""FILTER['#1', 'called Missouri Attorney General']"", ""PROJECT['governmental jurisdiction of #REF', '#2']"", ""PROJECT['time zone of #REF', '#3']""]"
CWQ_dev_WebQTrn-2601_201314aa8824d0802c2f9a8e22c55848,What team owned by Paul G. Allen Family Foundation did Warren Moon play for?,"[""SELECT['Paul G. Allen Family Foundation']"", ""PROJECT['team owned by #REF', '#1']"", ""FILTER['#2', 'that Warren Moon did play for']""]","[""SELECT['Paul G. Allen Family Foundation']"", ""PROJECT['team owned by #REF', '#1']"", ""FILTER['#2', 'that Warren Moon plays for']""]"
CWQ_dev_WebQTrn-2603_b883db0c5c325b6bb62ec325f97e3b24,"Find the location that the breed Mudi originated from, what language is spoken there?","[""SELECT['breed']"", ""FILTER['#1', 'that is Mudi']"", ""PROJECT['location that #REF originated from', '#2']"", ""PROJECT['language spoken in #REF', '#3']""]","[""SELECT['breed']"", ""FILTER['#1', 'that is Mudi']"", ""PROJECT['location that #REF originated from', '#2']"", ""PROJECT['language of #REF', '#3']""]"
CWQ_dev_WebQTrn-2611_162e0e450fa8156ecb9927c4aa6d5b78,What National People's Congress location appointed Samuel Pepys to a governmental position?,"[""SELECT['National People s Congress']"", ""PROJECT['location of #REF', '#1']"", ""FILTER['#2', 'that appointed Samuel Pepys to a governmental position']""]","[""SELECT['the National People s Congress']"", ""PROJECT['location of #REF', '#1']"", ""FILTER['#2', 'that appointed Samuel Pepys to a governmental position']""."
CWQ_dev_WebQTrn-263_eec6702de79ba2ae926f6bf3be14e6f9,Where country was James Cook from as well as having the Norn language as a dialect?,"[""SELECT['James Cook']"", ""PROJECT['country of #REF', '#1']"", ""FILTER['#2', 'that has the Norn language as a dialect']""]","[""SELECT['James Cook']"", ""PROJECT['country that #REF was from', '#1']"", ""FILTER['#2', 'that has the Norn language as a dialect']""."
CWQ_dev_WebQTrn-2631_0652d8b1cb95848c9630860c92e38e6f,What country is a part of the mediterranian region and is a part of the Western European Time zone?,"[""SELECT['countries']"", ""FILTER['#1', 'that are part of the mediterranian region']"", ""FILTER['#2', 'that are part of the Western European Time zone']""]","[""SELECT['the mediterranian region']"", ""PROJECT['country that is part of #REF', '#1']"", ""FILTER['#2', 'that is part of the Western European Time zone']""."
CWQ_dev_WebQTrn-2631_0d0b507c443b11e065c3dbf208eefbea,What nation in the Mediterranean is the administrative division where Zonguldak Province is a second level region?,"[""SELECT['the Mediterranean']"", ""PROJECT['nation in #REF', '#1']"", ""FILTER['#2', 'that is the administrative division where Zonguldak Province is a second level region']""]","[""SELECT['the Mediterranean']"", ""PROJECT['nation in #REF', '#1']"", ""FILTER['#2', 'that is the administrative division of Zonguldak Province']"", ""FILTER['#3', 'where #4 is a second level region']""]"
CWQ_dev_WebQTrn-2631_56fc3d324b31062278669012623dcabc,What country is in the mediterranean and has emissions per capita in dated metric ton of 0.600921?,"[""SELECT['the mediterranean']"", ""PROJECT['countries of #REF', '#1']"", ""PROJECT['emissions per capita in dated metric tons of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is 0.600921']""]","[""SELECT['the mediterranean']"", ""PROJECT['countries of #REF', '#1']"", ""PROJECT['emissions per capita in dated metric tons of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is equal to 0.600921."
CWQ_dev_WebQTrn-2631_9b4d7c0ec000102095998b32aa6b534a,Which mediterranean country has a country calling code of 90?,"[""SELECT['mediterranean countries']"", ""PROJECT['country calling codes of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is 90']""]","[""SELECT['mediterranean countries']"", ""PROJECT['country calling code of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is 90']""]"
CWQ_dev_WebQTrn-2631_a1edafe051cb7bc171f2beb523d3a90c,What Mediterranean country that uses CFP Franc?,"[""SELECT['CFP Franc']"", ""PROJECT['country of #REF', '#1']"", ""FILTER['#2', 'that is Mediterranean']""]","[""SELECT['Mediterranean countries']"", ""FILTER['#1', 'that uses CFP Franc']""]"
CWQ_dev_WebQTrn-2674_d7d361bd6269242aee2efa81a5f8997d,Where is the location of the college where Justin Bamberg is a grad student?,"[""SELECT['Justin Bamberg']"", ""PROJECT['college where #REF is a grad student', '#1']"", ""PROJECT['location of #REF', '#2']""]","[""SELECT['Justin Bamberg']"", ""PROJECT['college of #REF', '#1']"", ""PROJECT['grad student of #REF', '#2']"", ""PROJECT['location of #REF', '#3']""]"
CWQ_dev_WebQTrn-2674_f72cb6b1904d83f8a0ca1dea005baf76,From which country containing Richland County is USC from?,"[""SELECT['Richland County']"", ""PROJECT['country of #REF', '#1']"", ""FILTER['#2', 'that USC is from']""]","[""SELECT['Reichland County']"", ""PROJECT['country of #REF', '#1']"", ""FILTER['#2', 'that USC is from']""]"
CWQ_dev_WebQTrn-2686_0bdb54e1789b986077ea14d790a218eb,The governmental jurisdiction that held the 16th Cabinet of Puerto Rico legislative session used what type of currency?,"[""SELECT['the 16th Cabinet of Puerto Rico']"", ""PROJECT['legislative session of #REF', '#1']"", ""PROJECT['governmental jurisdiction of #REF', '#2']"", ""PROJECT['type of currency of #REF', '#3']""]","[""SELECT['the 16th Cabinet of Puerto Rico']"", ""PROJECT['legislative session of #REF', '#1']"", ""PROJECT['governmental jurisdiction of #REF', '#2']"", ""PROJECT['currency of #REF', '#3']""]"
CWQ_dev_WebQTrn-2686_dd671314e0796c2422178f2b965e7a90,What is the type of currency used in the area that has Coqui as an official seal?,"[""SELECT['Coqui']"", ""PROJECT['area that has #REF as an official seal', '#1']"", ""PROJECT['currency used in #REF', '#2']"", ""PROJECT['type of #REF', '#3']""]","[""SELECT['Coqui']"", ""PROJECT['area with #REF as an official seal', '#1']"", ""PROJECT['currency used in #REF', '#2']"", ""PROJECT['type of #REF', '#3']""]"
CWQ_dev_WebQTrn-2711_6a27420dcf0528ae017dd74e40cfd38a,What main Eastern European religion has a religious organization named Tamil Nadu Thowheed Jamath?,"[""SELECT['religious organization']"", ""FILTER['#1', 'named Tamil Nadu Thowheed Jamath']"", ""PROJECT['main Eastern European religion of #REF', '#2']""]","[""SELECT['religious organization']"", ""FILTER['#1', 'that is named Tamil Nadu Thowheed Jamath']"", ""PROJECT['main Eastern European religion of #REF', '#2']""]"
CWQ_dev_WebQTrn-2711_75e46121bded1ab4f276d4ec24bb366e,What main religion with places of worship called Chapels is in Eastern Europe?,"[""SELECT['Eastern Europe']"", ""PROJECT['main religion of #REF', '#1']"", ""PROJECT['places of worship of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is called Chapels']""]","[""SELECT['Easter Europe']"", ""PROJECT['main religions of #REF', '#1']"", ""PROJECT['places of worship of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is called Chapels']""]"
CWQ_dev_WebQTrn-2711_7c9253b843680f5db5a4e5f5e1055f88,What religion in Eastern Europe that uses the text Shulchan Aruch?,"[""SELECT['East Europe']"", ""PROJECT['religion of #REF', '#1']"", ""FILTER['#2', 'that uses the text Shulchan Aruch']""]","[""SELECT['East Europe']"", ""PROJECT['religions of #REF', '#1']"", ""FILTER['#2', 'that use the text Shulchan Aruch']""]"
CWQ_dev_WebQTrn-2711_be64d515debe3029f7c0fb2af05bfe7e,What is the religion that believe in Virgin birth of Jesus?,"[""SELECT['religions']"", ""FILTER['#1', 'that believe in Virgin birth of Jesus']""]","[""SELECT['religions']"", ""FILTER['#1', 'that believe in Virgin birth of Jesus']""]."
CWQ_dev_WebQTrn-2730_479332275fb2963324885cad3ea4e15e,What movies in which Lucy Hale played have been released later than 6 August 2008?,"[""SELECT['Lucy Hale']"", ""PROJECT['movies of #REF', '#1']"", ""PROJECT['when was #REF released', '#2']"", ""COMPARATIVE['#2', '#3', 'is lower than 6 August 2008']""]","[""SELECT['Lucy Hale']"", ""PROJECT['movies of #REF', '#1']"", ""PROJECT['when was #REF released', '#2']"", ""COMPARATIVE['#2', '#3', 'is later than 6 August 2008']""]"
CWQ_dev_WebQTrn-2730_57d053a98e6ea120ee1c94a506efd9af,What movie produced by Gae S. Buckley starred Lucy Hale?,"[""SELECT['Gae S. Buckley']"", ""PROJECT['movies produced by #REF', '#1']"", ""FILTER['#2', 'that starred Lucy Hale']""]","[""SELECT['Gae S. Buckley']"", ""PROJECT['movies produced by #REF', '#1']"", ""FILTER['#2', 'that starred Lucy Hale’]""]"
CWQ_dev_WebQTrn-2730_87deda135e48fdbc80ef86a95018f5c9,What Fantasy film did Lucy Hale starred in?,"[""SELECT['Lucy Hale']"", ""PROJECT['films of #REF', '#1']"", ""FILTER['#2', 'that are Fantasy films']""]","[""SELECT['Lucy Hale']"", ""PROJECT['film of #REF', '#1']"", ""FILTER['#2', 'that is Fantasy film']""]"
CWQ_dev_WebQTrn-2730_885eb8bdb55dee38945b53efa1c7e8cc,What else has Lucy Hale played in that has a sequel named Tinker Bell and the Pirate Fairy?,"[""SELECT['Lucy Hale']"", ""PROJECT['what has #REF played in', '#1']"", ""FILTER['#2', 'that has a sequel named Tinker Bell and the Pirate Fairy']""]","[""SELECT['Lucy Hale']"", ""PROJECT['sequels of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is named Tinker Bell and the Pirate Fairy']"", ""DISCARD['#1', '#3']""]"
CWQ_dev_WebQTrn-2730_975c720a86c22e9cb7a19dc6af97c2f6,What movie did Lucy Hale act in that had the casting director Avy Kaufman?,"[""SELECT['Lucy Hale']"", ""PROJECT['movies of #REF', '#1']"", ""PROJECT['casting directors of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is Avy Kaufman']""]","[""SELECT['Lucy Hale']"", ""PROJECT['movies of #REF', '#1']"", ""FILTER['#2', 'that had casting director Avy Kaufman']""]"
CWQ_dev_WebQTrn-2730_f4911e93c40f00f8c256e3ccf42422c1,What film released to Blu-Ray disc has Lucy Hale played in?,"[""SELECT['Lucy Hale']"", ""PROJECT['films of #REF', '#1']"", ""FILTER['#2','released to Blu-Ray disc']""]","[""SELECT['Lucy Hale']"", ""PROJECT['film that #REF played in', '#1']"", ""FILTER['#2','released to Blu-Ray disc']""]"
CWQ_dev_WebQTrn-2736_87dd9d055714312b5c01c6a998699ace,What is the Eastern Berber language that is spoken in Egypt?,"[""SELECT['Egypt']"", ""PROJECT['Eastern Berber language of #REF', '#1']""]","[""SELECT['Egypt']"", ""PROJECT['language of #REF', '#1']"", ""FILTER['#2', 'that is Eastern Berber']""]"
CWQ_dev_WebQTrn-2736_d487d2c548ad11737f8ed1c5a01c07d3,What language with the initials ar do people speak in Egypt?,"[""SELECT['Egypt']"", ""PROJECT['language of #REF', '#1']"", ""PROJECT['initials of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is ar']""]","[""SELECT['Egypt']"", ""PROJECT['languages of #REF', '#1']"", ""FILTER['#2', 'that have the initials ar']""]"
CWQ_dev_WebQTrn-275_2f5c84ea5c89af49f421799989558f43,"What country is the person who wrote the lyrics for the ""Poem to a Horse"" from?","[""SELECT['Poem to a Horse']"", ""PROJECT['lyrics of #REF', '#1']"", ""PROJECT['person who wrote #REF', '#2']"", ""PROJECT['country of #REF', '#3']""]","[""SELECT['the poem Poem to a Horse']"", ""PROJECT['lyrics of #REF', '#1']"", ""PROJECT['person who wrote #REF', '#2']"", ""PROJECT['country of #REF', '#3']""]"
CWQ_dev_WebQTrn-275_faae751f31fbd659ef866c7252c19019,"What is the homeland of the artist who recorded ""Mi Verdad""/?","[""SELECT['Mi Verdad']"", ""PROJECT['artist who recorded #REF', '#1']"", ""PROJECT['homeland of #REF', '#2']""]","[""SELECT['Mi Verdad']"", ""PROJECT['artist of #REF', '#1']"", ""PROJECT['homeland of #REF', '#2']""]"
CWQ_dev_WebQTrn-2759_72ce675be82a5655a30547169d8008e9,Which time zone includes both Texas and the Tulsa International Airport?,"[""SELECT['Texas']"", ""SELECT['the Tulsa International Airport']"", ""SELECT['time zone']"", ""INTERSECTION['#3', '#1', '#2']""]","[""SELECT['time zone']"", ""FILTER['#1', 'that includes Texas']"", ""FILTER['#1', 'that includes the Tulsa International Airport']"", ""INTERSECTION['#1', '#2', '#3']""]"
CWQ_dev_WebQTrn-2774_0b6c8b855d0d8f13946340117a21517a,What genres of music are performed by the actor who portrayed Super Ghoul?,"[""SELECT['Super Ghoul']"", ""PROJECT['actor of #REF', '#1']"", ""PROJECT['genres of music performed by #REF', '#2']""]","[""SELECT['Super Ghoul']"", ""PROJECT['actor who portrayed #REF', '#1']"", ""PROJECT['genres of music performed by #REF', '#2']""]"
CWQ_dev_WebQTrn-2774_b0a904c6b97775f60d54cc96d31d5ea7,"Find the producer or Sometimes Late at Night, what genre did he sing in?","[""SELECT['Sometimes Late at Night']"", ""PROJECT['producer of #REF', '#1']"", ""PROJECT['genre of #REF', '#2']""]","[""SELECT['Sometimes Late At Night']"", ""PROJECT['producer of #REF', '#1']"", ""PROJECT['genre of #REF', '#2']""]"
CWQ_dev_WebQTrn-2774_c9376472c73ec3b81359b14a66d26c53,"What genres of music are performed by the actor who appeared in ""Motown 25: Yesterday, Today, Forever?""?","[""SELECT['Motown 25 Yesterday Today Forever']"", ""PROJECT['actor of #REF', '#1']"", ""PROJECT['genres of music performed by #REF', '#2']""]","[""SELECT['Motown 25 Yesterday Today Forever']"", ""PROJECT['actor that appeared in #REF', '#1']"", ""PROJECT['genres of music performed by #REF', '#2']""]"
CWQ_dev_WebQTrn-2798_7903891d19864552d2e6a3803b2ed95b,In whcih NBA season did the Detroit Pistons defeat the Portland Trailblazers in the championship?,"[""SELECT['the Detroit Pistons defeat the Portland Trailblazers in the NBA season']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['max', '#3', '#4']""]","[""SELECT['the Detroit Pistons defeat the Portland Trailblazers in the NBA championship']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]"
CWQ_dev_WebQTrn-2798_afa15f6b9dc58ac550f7e43be659229c,Team owner Tom Gores won the Championship in what year?,"[""SELECT['Team owner Tom Gores']"", ""PROJECT['Championship win of #REF', '#1']"", ""PROJECT['year of #REF', '#2']""]","[""SELECT['Tom Gores']"", ""PROJECT['Team owner of #REF', '#1']"", ""PROJECT['Championship win of #REF', '#2']"", ""PROJECT['year of #REF', '#3']""]"
CWQ_dev_WebQTrn-2808_3f36019d62b1889a82002929b5e58887,What is the currency of the country where South African English is spoken?,"[""SELECT['countries']"", ""FILTER['#1', 'where South African English is spoken']"", ""PROJECT['currency of #REF', '#2']""]","[""SELECT['South African English']"", ""PROJECT['country where #REF is spoken', '#1']"", ""PROJECT['currency of #REF', '#2']""."
CWQ_dev_WebQTrn-2873_29dcdbf33c29eb80d1c5450e7d993b3b,What city has a population of 1426006 and has Hector Camacho as a resident?,"[""SELECT['cities']"", ""PROJECT['populations of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is 1426006']"", ""PROJECT['residents of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is Hector Camacho']""]","[""SELECT['cities']"", ""PROJECT['populations of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is 1426006']"", ""FILTER['#3', 'that has Hector Camacho as a resident']""]"
CWQ_dev_WebQTrn-2873_720f43eec78fddd01957e98aca29e29f,Where does Hector Camacho live that contains the neighborhood Hell's Kitchen?,"[""SELECT['Hector Camacho']"", ""PROJECT['Where does #REF live', '#1']"", ""FILTER['#2', 'that contains the neighborhood Hell s Kitchen']""]","[""SELECT['Hector Camacho']"", ""PROJECT['Where does #REF live', '#1']"", ""FILTER['#2', 'that contain the neighborhood Hell s Kitchen']""]"
CWQ_dev_WebQTrn-2936_ffef8e9812a1ba730308eb606944b3b0,"Which type of cancer, did the artist that was award nominated for Hot Stuff, die from?","[""SELECT['Hot Stuff']"", ""PROJECT['artist award nominated for #REF', '#1']"", ""PROJECT['type of cancer of #REF', '#2']""]","[""SELECT['Hot Stuff']"", ""PROJECT['artist award nominated for #REF', '#1']"", ""PROJECT['type of cancer that #REF die from', '#2']""]"
CWQ_dev_WebQTrn-2944_91fbb9146e3addbb313ff7ead5eb51f8,What is the native country for the celebrity who is an alumni of State Elementary School Menteng 01?,"[""SELECT['state Elementary School Menteng 01']"", ""PROJECT['alumnus of #REF', '#1']"", ""PROJECT['native country of #REF', '#2']""]","[""SELECT['state Elementary School Menteng 01']"", ""PROJECT['alumnus of #REF', '#1']"", ""PROJECT['country native of #REF', '#2']""]"
CWQ_dev_WebQTrn-2944_e56e856592a9a57b9e331b718adc1b75,Where is the author who wrote the Audacity of Hope from?,"[""SELECT['the Audacity of Hope']"", ""PROJECT['author of #REF', '#1']"", ""PROJECT['Where is #REF from', '#2']""]","[""SELECT['the Audacity of Hope']"", ""PROJECT['author who wrote #REF', '#1']"", ""PROJECT['where is #REF from', '#2']""]"
CWQ_dev_WebQTrn-2944_f627c1bb9cdbcf6a029c816631a982b2,What country is the famous person who went to Neolani Elementary School from?,"[""SELECT['Neolani Elementary School']"", ""PROJECT['person who went to #REF', '#1']"", ""FILTER['#2', 'that is famous']"", ""PROJECT['country of #REF', '#3']""]","[""SELECT['Neolani Elementary School']"", ""PROJECT['person of #REF', '#1']"", ""FILTER['#2', 'that is famous']"", ""PROJECT['country of #REF', '#3']""]"
CWQ_dev_WebQTrn-2947_a40e0ddd52921eadf204cfb431400b5f,What character in Lord of the Rings is portrayed by the actor from The Side Effect?,"[""SELECT['Lord of the Rings']"", ""PROJECT['character in #REF', '#1']"", ""FILTER['#2', 'that is portrayed by The Side Effect']""]","[""SELECT['the Lord of the Rings']"", ""PROJECT['character in #REF', '#1']"", ""FILTER['#2', 'that is portrayed by the actor from The Side Effect']""."
CWQ_dev_WebQTrn-2948_7a6f53fd5aca1b595bb228bf8a4b0932,Which actress is noted for having bipolar disorder and portraying Princess Leia in the Star Wars films?,"[""SELECT['the Star Wars films']"", ""PROJECT['princess Leia in #REF', '#1']"", ""PROJECT['actresses of #REF', '#2']"", ""FILTER['#3', 'that are noted for having bipolar disorder']""]","[""SELECT['the Star Wars films']"", ""PROJECT['princess Leia of #REF', '#1']"", ""PROJECT['actresses of #REF', '#2']"", ""FILTER['#3', 'that are noted for having bipolar disorder']""]"
CWQ_dev_WebQTrn-295_01ff9d06fcaf31662fceb007df3615bb,Who was Liz Taylor married too that died on 1958-03-22?,"[""SELECT['Liz Taylor']"", ""PROJECT['who was #REF married to', '#1']"", ""FILTER['#2', 'that died on 1958-03-22']""]","[""SELECT['Linda Taylor']"", ""PROJECT['who was #REF married to', '#1']"", ""FILTER['#2', 'that died on 1958-03-22']""."
CWQ_dev_WebQTrn-295_1464ecb910873adfd8203d248f922419,Which celebrity held a governmental position and political office on January 2nd 1979 and was once married to Liz Taylor?,"[""SELECT['Liz Taylor']"", ""PROJECT['celebrities once married to #REF', '#1']"", ""FILTER['#2', 'that held a governmental position and political office on January 2nd 1979']""]","[""SELECT['Liz Taylor']"", ""PROJECT['celebrities married to of #REF', '#1']"", ""FILTER['#2', 'that held a governmental position and political office on January 2nd 1979']""]"
CWQ_dev_WebQTrn-295_29e585c6120fcbe0224ca0072c2fb7f3,Who is Liza Taylor's husband who was nominated for the 18th Annual Grammy Award?,"[""SELECT['Liza Taylor']"", ""PROJECT['husband of #REF', '#1']"", ""FILTER['#2', 'who was nominated for the 18th Annual Grammy Award']""]","[""SELECT['Liza Taylor']"", ""PROJECT['husband of #REF', '#1']"", ""FILTER['#2', 'who was nominated for the 18th Annual Grammy Award']""."
CWQ_dev_WebQTrn-295_cd35056ad2548eb94d95cced29a60cb8,Who was the actor in Butterfield 8 that was married to Liz Taylor?,"[""SELECT['Butterfield 8']"", ""PROJECT['actor of #REF', '#1']"", ""FILTER['#2', 'that was married to Liz Taylor']""]","[""SELECT['Butterfield 8']"", ""PROJECT['actor in #REF', '#1']"", ""FILTER['#2', 'who was married to Liz Taylor']""]"
CWQ_dev_WebQTrn-295_dece4ddacc57788e31bf70edc99f1f37,who has both been married to liz taylor and held a governmental position?,"[""SELECT['liz taylor']"", ""PROJECT['who has been married to #REF', '#1']"", ""FILTER['#2', 'that held a governmental position']""]","[""SELECT['liz taylor']"", ""PROJECT['who was married to #REF', '#1']"", ""FILTER['#2', 'that held a governmental position']""]"
CWQ_dev_WebQTrn-2986_2dc0a662213b327801918808306aab0a,What is the University of Michigan sports team that tom Brady played for?,"[""SELECT['tom Brady']"", ""PROJECT['sports team of #REF', '#1']"", ""FILTER['#2', 'that is University of Michigan']""]","[""SELECT['tom Brady']"", ""PROJECT['sports team of #REF', '#1']"", ""FILTER['#2', 'at the University of Michigan']""]"
CWQ_dev_WebQTrn-2986_819eadc025b66a7f2dd252ec3e135881,The actor that played the Computer Geek #1 also played for what teams?,"[""SELECT['the Computer Geek #1']"", ""PROJECT['actor of #REF', '#1']"", ""PROJECT['teams of #REF', '#2']""]","[""SELECT['the Computer Geek #1']"", ""PROJECT['actor that played #REF', '#1']"", ""PROJECT['teams of #REF', '#2']""]"
CWQ_dev_WebQTrn-300_13b6280827e3e9d96b077c0ec1e865f5,What location is the Kurus currency used in?,"[""SELECT['kurus currency']"", ""PROJECT['location used in of #REF', '#1']""]","[""SELECT['kurus currency']"", ""PROJECT['location #REF is used in', '#1']""]"
CWQ_dev_WebQTrn-300_8d301ba3f2a6a79337929dd43bb19a35,Where is the country with Imperial national Anthems of the Ottoman Empire located?,"[""SELECT['the Ottoman Empire']"", ""PROJECT['Imperial national Anthems of #REF', '#1']"", ""PROJECT['country of #REF', '#2']"", ""PROJECT['Where is #REF located', '#3']""]","[""SELECT['the Ottoman Empire']"", ""PROJECT['Imperial national Anthems of #REF', '#1']"", ""PROJECT['country of #REF', '#2']"", ""PROJECT['where is #REF located', '#3']""]"
CWQ_dev_WebQTrn-300_ddab514e25728c4beb30b85f7be219d0,Bursa is the capital of the country located where?,"[""SELECT['countries']"", ""PROJECT['capitals of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is Bursa']"", ""PROJECT['where is #REF located', '#3']""]","[""SELECT['countries']"", ""PROJECT['capitals of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is Bursa']"", ""PROJECT['where is #REF', '#3']""]"
CWQ_dev_WebQTrn-3012_01926f229c4e65721e4f37043326f1a2,Bishkek is the capital of what country sharing a border with China?,"[""SELECT['China']"", ""PROJECT['border country of #REF', '#1']"", ""PROJECT['capital of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is Bishkek']""]","[""SELECT['China']"", ""PROJECT['border country of #REF', '#1']"", ""FILTER['#2', 'that has Bishkek']"", ""PROJECT['capital of #REF', '#3']""]"
CWQ_dev_WebQTrn-3064_0281ead9c42fde29e92269a2ccf10495,"Can you name the province of the neighboring Harbourfront, Canada?","[""SELECT['Hawkfront Canada']"", ""PROJECT['neighbouring province of #REF', '#1']"", ""PROJECT['name of #REF', '#2']""]","[""SELECT['Harbourfront, Canada']"", ""PROJECT['neighbouring province of #REF', '#1']"", ""PROJECT['name of #REF', '#2']""]"
CWQ_dev_WebQTrn-3064_1f2fc1ee00d1bd5714265c4651a700ad,In what Canadian province is the fictional universe ReGenesis?,"[""SELECT['the fictional universe ReGenesis']"", ""PROJECT['Canadian province of #REF', '#1']""]","[""SELECT['fictional universe ReGenesis']"", ""PROJECT['Canadian province of #REF', '#1']""]"
CWQ_dev_WebQTrn-3064_9bff9b3325534dae4908b820d4364101,"In what province does the movie ""Shoot 'Em Up"" take place?","[""SELECT['the movie Shoot 'Em Up']"", ""PROJECT['where is #REF', '#1']"", ""PROJECT['province of #REF', '#2']""]","[""SELECT['the movie Shoot 'Em Up']"", ""PROJECT['province of #REF', '#1']""]"
CWQ_dev_WebQTrn-3215_0b579b43c5c13202f21268987ba710b0,Name the hometown of the gymnast who is sponsored by Circuit City.?,"[""SELECT['Gymnasts']"", ""FILTER['#1','sponsored by Circuit City']"", ""PROJECT['hometown of #REF', '#2']""]","[""SELECT['circuit City']"", ""PROJECT['gymnast sponsored by #REF', '#1']"", ""PROJECT['hometown of #REF', '#2']""]"
CWQ_dev_WebQTrn-3252_5a6c4d964bbcc247347c13197fa08fcb,What Western African country is at once home to the Niger river and the capital city of Conakry?,"[""SELECT['the Niger river']"", ""SELECT['the capital city of Conakry']"", ""SELECT['country']"", ""FILTER['#3', 'that is Western African']"", ""FILTER['#4', 'that is at once home to #2']"", ""FILTER['#4', 'that is at once home to #3']"", ""INTERSECTION['#4', '#5', '#6']""]","[""SELECT['the Niger river']"", ""SELECT['the capital city of Conakry']"", ""SELECT['countries']"", ""FILTER['#3', 'that are Western African']"", ""FILTER['#4', 'that are at once home to #2']"", ""FILTER['#4', 'that are at once home to #3']"", ""INTERSECTION['#4', '#5', '#6']""]"
CWQ_dev_WebQTrn-3252_83db7f44b529d45718cc97f5e1a70a99,The river Bamako flows through what countries?,"[""SELECT['river Bamako']"", ""PROJECT['countries that #REF flows through', '#1']""]","[""SELECT['the river Bamako']"", ""PROJECT['countries that #REF flows through', '#1']""]"
CWQ_dev_WebQTrn-3252_bde48b8fcd994264496aae4133e373f0,"What country, which the Niger River flows through, also exports to the United States of America?","[""SELECT['the Niger River']"", ""PROJECT['country that #REF flows through', '#1']"", ""FILTER['#2', 'that exports to the United States of America']""]","[""SELECT['the Niger River']"", ""PROJECT['countries that #REF flows through', '#1']"", ""FILTER['#2', 'that exports to the United States of America']""]"
CWQ_dev_WebQTrn-3271_c4cb89dfae8793bedbe134ad40d07af9,People from the country with the Chilean Peso currency speak what language?,"[""SELECT['the Chilean Peso currency']"", ""PROJECT['country of #REF', '#1']"", ""PROJECT['People of #REF', '#2']"", ""PROJECT['language of #REF', '#3']""]","[""SELECT['the Chilean Peso currency']"", ""PROJECT['country of #REF', '#1']"", ""PROJECT['language of #REF', '#2']""]"
CWQ_dev_WebQTrn-3287_c0ebf14656701dfcb57acec712c98d4a,What currency is used in the country where the deaf use Swedish Sign Language?,"[""SELECT['the deaf']"", ""PROJECT['country where #REF use Swedish Sign Language', '#1']"", ""PROJECT['currency of #REF', '#2']""]","[""SELECT['the deaf']"", ""FILTER['#1', 'that use Swedish Sign Language']"", ""PROJECT['country of #REF', '#2']"", ""PROJECT['currency of #REF', '#3']""]"
CWQ_dev_WebQTrn-3319_b4835b1af41bed9fd4e77df24395dc36,Who played the character Dorothy in the movie that also  featured the actress Margaret Pellegrini?,"[""SELECT['movies']"", ""PROJECT['characters of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is Dorothy']"", ""FILTER['#3', 'that featured the actress Margaret Pellegrini']"", ""PROJECT['who played #REF', '#4']""]","[""SELECT['the actress Margaret Pellegrini']"", ""PROJECT['movie that featured #REF', '#1']"", ""PROJECT['character Dorothy in #REF', '#2']"", ""PROJECT['who played #REF', '#3']""]"
CWQ_dev_WebQTrn-3346_2d0611451d35c6185b3e83e45311fe49,What building located in Dubai has 163 floors?,"[""SELECT['buildings']"", ""FILTER['#1', 'located in Dubai']"", ""PROJECT['floors of #REF', '#2']"", ""GROUP['count', '#3', '#2']"", ""COMPARATIVE['#2', '#4', 'is 163']""]","[""SELECT['Dubai']"", ""PROJECT['building located in #REF', '#1']"", ""PROJECT['floors of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is 163']""]-"
CWQ_dev_WebQTrn-3358_23b055b19da513d2651226356225081a,Who held a position in the Illinois House of Representatives and was also the influence behind Whitman's poetry?,"[""SELECT['Whitman s poetry']"", ""PROJECT['influence behind #REF', '#1']"", ""FILTER['#2', 'that held a position in the Illinois House of Representatives']""]","[""SELECT['the Illinois House of Representatives']"", ""PROJECT['position of #REF', '#1']"", ""PROJECT['influence behind Whitman s poetry of #REF', '#2']"", ""PROJECT['who held #REF', '#3']""]"
CWQ_dev_WebQTrn-3358_3a627cb875a24b19213af0b9a1cf8999,Who influenced Whitman's poetry that held his government position form 12-1-1834?,"[""SELECT['Whitman']"", ""PROJECT['poem of #REF', '#1']"", ""PROJECT['government position of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is 12-1-1834']"", ""PROJECT['who influenced #REF', '#4']""]","[""SELECT['Whitman']"", ""PROJECT['poems of #REF', '#1']"", ""PROJECT['government position of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is 12-1-1834']"", ""PROJECT['who influenced #REF', '#4']""]"
CWQ_dev_WebQTrn-3358_3cac2b09772035a206330b2cdf175f81,What politician in office since 1834 influenced Walt Whitman's poetry?,"[""SELECT['politicians']"", ""FILTER['#1', 'in office since 1834']"", ""FILTER['#2', 'that influenced Walt Whitman s poetry']""]","[""SELECT['Walt Whitman']"", ""PROJECT['poem of #REF', '#1']"", ""PROJECT['politician who influenced #REF', '#2']"", ""FILTER['#3','since 1834']""]"
CWQ_dev_WebQTrn-3358_44699ac957d24af4a6cd1699e12e28b2,What influencer of Whitman's poetry ended their governmental position earliest?,"[""SELECT['Whitman s poetry']"", ""PROJECT['influencer of #REF', '#1']"", ""PROJECT['when did #REF end their governmental position', '#2']"", ""COMPARATIVE['#2', '#3', 'is the lowest']""]","[""SELECT['Whitman s poetry']"", ""PROJECT['influencer of #REF', '#1']"", ""PROJECT['when did #REF end their governmental position', '#2']"", ""SUPERLATIVE['min', '#2', '#3']""]"
CWQ_dev_WebQTrn-3358_66fd2ddbb895bc9a64c4d0b0e160c13a,"Who influenced Whitman's poetry that started his governmental position after March 7, 1861?","[""SELECT['Whitman']"", ""PROJECT['poem of #REF', '#1']"", ""PROJECT['who influenced #REF', '#2']"", ""FILTER['#3', 'that started his governmental position after March 7 1861']""]","[""SELECT['Whitman']"", ""PROJECT['the poetry of #REF', '#1']"", ""PROJECT['who influenced #REF', '#2']"", ""FILTER['#3', 'that started his governmental position after March 7 1861']""]"
CWQ_dev_WebQTrn-3358_6896c7ff81e791758b432de809951e04,Who participated in the Third Joint Debate at Jonesboro and influenced Walt Whitman's poetry?,"[""SELECT['the Third Joint Debate at Jonesboro']"", ""PROJECT['who participated in #REF', '#1']"", ""FILTER['#2', 'that influenced Walt Whitman s poetry']""]","[""SELECT['Third Joint Debate at Jonesboro']"", ""PROJECT['who participated in #REF', '#1']"", ""FILTER['#2', 'that influenced Walt Whitman s poetry']""]"
CWQ_dev_WebQTrn-3358_c7e8bf0bc3e418c1ab1882470402c41c,Which peer of Friedrich HÃ¶lderlin inspired the work of Walt Whitman?,"[""SELECT['Frederick Hlderlin']"", ""PROJECT['peer of #REF', '#1']"", ""FILTER['#2', 'that inspired the work of Walt Whitman']""]","[""SELECT['Fraud Friedrich Hlderlin']"", ""PROJECT['peer of #REF', '#1']"", ""FILTER['#2', 'that inspired the work of Walt Whitman']""]"
CWQ_dev_WebQTrn-3358_dbd194a5a0966321733c045394fa781e,"Who influenced Whitman 's poetry, and is the politician that held his/her government position until 1842?","[""SELECT['Whitman s poetry']"", ""PROJECT['who influenced #REF', '#1']"", ""FILTER['#2', 'that is the politician that held his/her government position until 1842']""]","[""SELECT['Whitman s poetry']"", ""PROJECT['who influenced #REF', '#1']"", ""PROJECT['politician that held his/her government position until 1842 of #REF', '#2']""]"
CWQ_dev_WebQTrn-3358_e5aea1aa88616780e2949918ad27c0b9,Which of the politicians who influenced Whitman's poetry ended his political career last?,"[""SELECT['Whitman s poetry']"", ""PROJECT['politicians who influenced #REF', '#1']"", ""FILTER['#2', 'that ended his political career last']""]","[""SELECT['Whitman s poetry']"", ""PROJECT['politicians who influenced #REF', '#1']"", ""PROJECT['when did #REF end his political career', '#2']"", ""SUPERLATIVE['max', '#2', '#3']""]"
CWQ_dev_WebQTrn-3395_c914b0ca5bf68616cc936d2a9a5c8f26,Dominica has this government along with Mongolia.?,"[""SELECT['Dominicana']"", ""PROJECT['government of #REF', '#1']"", ""SELECT['Mongolia']"", ""BOOLEAN['#2', 'has #3']""]","[""SELECT['Dominica']"", ""PROJECT['government of #REF', '#1']"", ""SELECT['Mongolia']"", ""BOOLEAN['#2', 'has #3']""]"
CWQ_dev_WebQTrn-3437_060135e66e84cbaa29a73145435c5457,What character in JoJo's bizarre Adventure speaks Arabic?,"[""SELECT['JoJo s bizarre Adventure']"", ""PROJECT['character of #REF', '#1']"", ""FILTER['#2', 'that speaks Arabic']""]","[""SELECT['JoJo s bizarre Adventure']"", ""PROJECT['character of #REF', '#1']"", ""FILTER['#2', 'that speak Arabic']""]"
CWQ_dev_WebQTrn-3437_49ad837ba878f7830b213cc9d6f00283,What country is home to Adana Procince as a second level and speaks arabic?,"[""SELECT['Adana Procince']"", ""PROJECT['country that is home to #REF', '#1']"", ""FILTER['#2', 'that speaks arabic']""]","[""SELECT['Adana Procince']"", ""PROJECT['country of #REF', '#1']"", ""FILTER['#2', 'that speaks arabic']"", ""FILTER['#3', 'that is second level']""]"
CWQ_dev_WebQTrn-3437_59d8b3295daf039542637add629c038e,What country uses power plugs type c and speaks Arabic?,"[""SELECT['power plugs type c']"", ""PROJECT['country that uses #REF', '#1']"", ""FILTER['#2', 'that speaks Arabic']""]","[""SELECT['country']"", ""FILTER['#1', 'that uses power plugs type c']"", ""FILTER['#2', 'that speaks Arabic']""]"
CWQ_dev_WebQTrn-3437_6eb4909a184ab0aac83d44471fb5bd49,Which ISO 012 numbered country speaks Arabic?,"[""SELECT['countries']"", ""FILTER['#1', 'that are ISO 012 numbered']"", ""FILTER['#2', 'that speak Arabic']""]","[""SELECT['countries']"", ""FILTER['#1', 'that speak Arabic']"", ""FILTER['#2', 'that is ISO 012 numbered']""]"
CWQ_dev_WebQTrn-3448_2ed103f665a4516a22cebcf5d383af70,What fictional character is the parent of Coop's Power?,"[""SELECT['Coop s Power']"", ""PROJECT['parent of #REF', '#1']"", ""PROJECT['fictional character of #REF', '#2']""]","[""SELECT['Coop s Power']"", ""PROJECT['parent of #REF', '#1']"", ""PROJECT['fictional character of #REF', '#2']""."
CWQ_dev_WebQTrn-3466_3a3a861fe35922a25bb5991497496887,"What city was the president, who Leonard Bernstein dedicated his work to, killed in?","[""SELECT['Leonard Bernstein']"", ""PROJECT['work of #REF', '#1']"", ""PROJECT['president of #REF', '#2']"", ""PROJECT['city killed in of #REF', '#3']""]","[""SELECT['leonard Bernstein']"", ""PROJECT['work of #REF', '#1']"", ""PROJECT['president of #REF', '#2']"", ""PROJECT['city killed in of #REF', '#3']""]"
CWQ_dev_WebQTrn-3466_56e8d2e51ce1a46013d0176a58f8d5b3,"In what city was the President, the subject of the film ""An American Affair,"" killed?","[""SELECT['film']"", ""FILTER['#1', 'that is An American Affair']"", ""PROJECT['subject of #REF', '#2']"", ""PROJECT['President killed in #REF', '#3']"", ""PROJECT['city of #REF', '#4']""]","[""SELECT['the film An American Affair']"", ""PROJECT['subject of #REF', '#1']"", ""PROJECT['President killed in #REF', '#2']"", ""PROJECT['city of #REF', '#3']""]"
CWQ_dev_WebQTrn-3475_20c0eba253c55529f9842b40b5a54ac5,What is the region where Helle Thorning-Schmidt was placed into a governmental position?,"[""SELECT['Helle Thorning-Schmidt']"", ""PROJECT['governmental position of #REF', '#1']"", ""PROJECT['region of #REF', '#2']""]","[""SELECT['Helle Thorning-Schmidt']"", ""PROJECT['governmental position of #REF', '#1']"", ""PROJECT['region of #REF', '#2']""]"
CWQ_dev_WebQTrn-3488_03cf6abd16a825e4e4a6a01fb3f41f80,"Which author published ""Sidereus Nuncius"" and what professions is he famous for?","[""SELECT['Sidereus Nuncius']"", ""PROJECT['author of #REF', '#1']"", ""PROJECT['professions of #REF', '#2']"", ""UNION['#2', '#3']""]","[""SELECT['Sidereus Nuncius']"", ""PROJECT['author of #REF', '#1']"", ""PROJECT['professions that #REF is famous for', '#1']"", ""UNION['#2', '#3']""."
CWQ_dev_WebQTrn-3488_2ec12a06ceff1fc38dbfabc809aba1ea,What is the academic advisor of Vincenzo Viviani famous for?,"[""SELECT['Vincento Viviani']"", ""PROJECT['academic advisor of #REF', '#1']"", ""PROJECT['for what is #REF famous', '#2']""]","[""SELECT['Vincenzo Viviani']"", ""PROJECT['academic advisor of #REF', '#1']"", ""PROJECT['for what is #REF famous', '#2']""]"
CWQ_dev_WebQTrn-3507_879158d15e797aa9412c8d83f06333f1,"Stephe Regelous was a crew member on a movie with a character called Saruman, who played Saurman?","[""SELECT['Stephen Regelous']"", ""PROJECT['crew members of #REF', '#1']"", ""FILTER['#2', 'on a movie with a character called Saruman']"", ""FILTER['#3', 'who played Saurman']""]","[""SELECT['Stephen Regelous']"", ""PROJECT['crew member on #REF', '#1']"", ""FILTER['#2', 'on a movie with a character called Saruman']"", ""PROJECT['who played Saurman of #REF', '#3']""]"
CWQ_dev_WebQTrn-3507_f0cddbfe8cbc12b1439beff6b530c17d,"Who plays Saruman in The Lord of the Rings: The Fellowship of the Ring, a film with a soundtrack?","[""SELECT['The Lord of the Rings The Fellowship of the Ring']"", ""PROJECT['film with soundtrack of #REF', '#1']"", ""PROJECT['who plays Saruman in #REF', '#2']""]","[""SELECT['The Lord of the Rings The Fellowship of the Ring']"", ""PROJECT['film with a soundtrack of #REF', '#1']"", ""PROJECT['who plays Saruman in #REF', '#2']""]"
CWQ_dev_WebQTrn-3517_79d6b6faae5d827b400b623688bc96da,"At the University of Phoenix stadium, what are the sports team uniform colors?","[""SELECT['the University of Phoenix stadium']"", ""PROJECT['sports team uniform colors of #REF', '#1']""]","[""SELECT['the University of Phoenix stadium']"", ""PROJECT['sports team uniform colors at #REF', '#1']""]"
CWQ_dev_WebQTrn-3529_672902a00b25f005ed3c211f1688c718,What movie was part of the Independence Day series and features Liam Hensworth as an actor?,"[""SELECT['the Independence Day series']"", ""PROJECT['movies of #REF', '#1']"", ""FILTER['#2', 'that feature Liam Hensworth as an actor']""]","[""SELECT['the Independence Day series']"", ""PROJECT['movies of #REF', '#1']"", ""FILTER['#2', 'that features Liam Hensworth as an actor']""]"
CWQ_dev_WebQTrn-3529_6f57c24c495306fcf0cbe66c6e79560e,"Of the movies is Liam Hemsworth in, which has Netflix_id of more than 70118364?","[""SELECT['Liam Hemsworth']"", ""PROJECT['movies of #REF', '#1']"", ""PROJECT['Nintendo_ids of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is higher than 70118364']""]","[""SELECT['Liam Hemsworth']"", ""PROJECT['movies of #REF', '#1']"", ""PROJECT['NFC_ids of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is higher than 70118364']""]"
CWQ_dev_WebQTrn-3529_a776583092dae132378825445eb44488,Which film starring Liam Hemsworth is 100 minutes in length?,"[""SELECT['Liam Hemsworth']"", ""PROJECT['film starring #REF', '#1']"", ""PROJECT['length of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is 100 minutes']""]","[""SELECT['Liam Hemsworth']"", ""PROJECT['films of #REF', '#1']"", ""PROJECT['lengths of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is 100 minutes']""]"
CWQ_dev_WebQTrn-3529_ae7350d8b7de870308057cb68e876919,"Of Liam Hemsworth's movies, which film has the smallest netflix_id?","[""SELECT['Liam Hemsworth']"", ""PROJECT['movies of #REF', '#1']"", ""PROJECT['netflix_ids of #REF', '#2']"", ""SUPERLATIVE['min', '#2', '#3']""]","[""SELECT['Liam Hemsworth']"", ""PROJECT['movies of #REF', '#1']"", ""PROJECT['netflix_ids of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is the smallest']""]"
CWQ_dev_WebQTrn-3529_b10bde702bb6c68ce3cdced85d5aff02,What films has Liam Hemsworth acted in and whose casting director was Cathy Sandrich?,"[""SELECT['Liam Hemsworth']"", ""PROJECT['films of #REF', '#1']"", ""PROJECT['casting directors of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'was Cathy Sandrich']""]","[""SELECT['Liam Hemsworth']"", ""PROJECT['films of #REF', '#1']"", ""PROJECT['casting director of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'was Cathy Sandrich']""]"
CWQ_dev_WebQTrn-3537_819eadc025b66a7f2dd252ec3e135881,In what year was the actor who portrayed Computer Geek #1 drafted?,"[""SELECT['Computer Geek #1']"", ""PROJECT['actor of #REF', '#1']"", ""PROJECT['year that #REF was drafted', '#2']""]","[""SELECT['Computer Geek #1']"", ""PROJECT['actor who portrayed #REF', '#1']"", ""PROJECT['year drafted of #REF', '#2']""."
CWQ_dev_WebQTrn-3563_0140828f99d9423f910ccf28ded8780f,Where can you go to vacation in the US with a capital named Tallahassee?,"[""SELECT['the US']"", ""PROJECT['capital of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is named Tallahassee']"", ""PROJECT['where can you go to vacation in #REF', '#3']""]","[""SELECT['US']"", ""PROJECT['capitals of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is named Tallahassee']"", ""PROJECT['where can you go to vacation in #REF', '#3']""]"
CWQ_dev_WebQTrn-3563_e511509bda00918a2bacad4106357461,What attraction opened in 1971 and is located in the state of Florida?,"[""SELECT['attractions']"", ""FILTER['#1', 'that opened in 1971']"", ""PROJECT['state of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is Florida']""]","[""SELECT['attractions']"", ""PROJECT['when did #REF open', '#1']"", ""COMPARATIVE['#1', '#2', 'is 1971']"", ""FILTER['#3', 'located in Florida']""]"
CWQ_dev_WebQTrn-3647_bfb16d956224f4ff7df39609f2a84210,Where did the politician appointed to their position by Paul von Hindenburg die?,"[""SELECT['Paul von Hindenburg']"", ""PROJECT['politician appointed to their position by #REF', '#1']"", ""PROJECT['Where did #REF die', '#2']""]","[""SELECT['Paul von Hindenburg']"", ""PROJECT['politician appointed by #REF', '#1']"", ""PROJECT['Where did #REF die', '#2']""]"
CWQ_dev_WebQTrn-3681_4d5eab1706e2b7dedc4af89682ff67a2,Who is the 2011 president of the country that speaks the Purepecha language?,"[""SELECT['the Purepecha language']"", ""PROJECT['country that speaks #REF', '#1']"", ""PROJECT['president of #REF', '#2']"", ""FILTER['#3', 'in 2011']""]","[""SELECT['the Purepecha language']"", ""PROJECT['country of #REF', '#1']"", ""PROJECT['president of #REF', '#2']"", ""FILTER['#3', 'in 2011']""]"
CWQ_dev_WebQTrn-3709_7f42e6cf00b704d63971600cead27fea,"There is a religious which has a diety called ""Zhang Guolao""; what is this religion's holy book called?","[""SELECT['religious']"", ""FILTER['#1', 'that has a diety called Zhang Guolao']"", ""PROJECT['holy book of #REF', '#2']""]","[""SELECT['religious']"", ""PROJECT['holy book of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is Zhang Guolao']""]"
CWQ_dev_WebQTrn-3709_c0228581809788c617b45f1c43535436,What holy book is used in the religion Zhuang Zhou?,"[""SELECT['the religion Zhuang Zhou']"", ""PROJECT['holy book used in #REF', '#1']""]","[""SELECT['the religion Zhuang Zhou']"", ""PROJECT['holy book of #REF', '#1']""]"
CWQ_dev_WebQTrn-3709_ea3041d859476a701c044da9d666212e,What is the religious text in the religion that Zhuang Zhou helped found?,"[""SELECT['Zhuang Zhou']"", ""PROJECT['religious text of #REF', '#1']""]","[""SELECT['Religion']"", ""FILTER['#1', 'that Zhuang Zhou helped found']"", ""PROJECT['religious text of #REF', '#2']""]"
CWQ_dev_WebQTrn-3709_eec12f71d62f9e0c87f9b05e82829d9d,What Taoism holy book is part of the Chinese classics?,"[""SELECT['the Chinese classics']"", ""PROJECT['holy books of #REF', '#1']"", ""FILTER['#2', 'that are Taoism']""]","[""SELECT['the Chinese classics']"", ""PROJECT['Taoism holy books of #REF', '#1']""]"
CWQ_dev_WebQTrn-3772_79ee4c5d31170a2a4638a4fa603f0b52,What currency is used in the region where the newspaper Zhivoye Dyelo is circulated?,"[""SELECT['newspaper']"", ""FILTER['#1', 'that is Zhivoye Dyelo']"", ""PROJECT['region where #REF is circulated', '#2']"", ""PROJECT['currency of #REF', '#3']""]","[""SELECT['newspaper Zhivoye Dyelo']"", ""PROJECT['region where #REF is circulated', '#1']"", ""PROJECT['currency of #REF', '#2']""]"
CWQ_dev_WebQTrn-3772_c304fd0564b819c2863dfebd8391dea1,What is the currency of the jurisdiction with the governing body called the government of Russia?,"[""SELECT['governing body']"", ""FILTER['#1', 'that is called the government of Russia']"", ""PROJECT['jurisdiction of #REF', '#2']"", ""PROJECT['currency of #REF', '#3']""]","[""SELECT['governing body']"", ""FILTER['#1', 'called the government of Russia']"", ""PROJECT['jurisdiction of #REF', '#2']"", ""PROJECT['currency of #REF', '#3']""]"
CWQ_dev_WebQTrn-3772_f81b2d3ee250e8503f128923a79d3c5a,What currency is used in the country where the Tsakhur Language is spoken?,"[""SELECT['the Tsakhur Language']"", ""PROJECT['country where #REF is spoken', '#1']"", ""PROJECT['currency of #REF', '#2']""]","[""SELECT['the Tsakhur Language']"", ""PROJECT['country of #REF', '#1']"", ""PROJECT['currency of #REF', '#2']""]"
CWQ_dev_WebQTrn-400_e5633caf1cfa2daedc2e6e8e7c7217ae,In which state is the organization that has Evelynn M. Hammonds among its leaders located?,"[""SELECT['organizations']"", ""PROJECT['leaders of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is Evelynn M. Hammonds']"", ""PROJECT['state of #REF', '#3']""]","[""SELECT['Evelynn M. Hammonds']"", ""PROJECT['organization of #REF', '#1']"", ""PROJECT['state of #REF', '#2']""]"
CWQ_dev_WebQTrn-400_ecabe9a3fb01aad9253431aab39beff3,What state is the college that Sampson Salter Blowers is a grad student of located?,"[""SELECT['Colleges']"", ""PROJECT['grad students of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is Sampson Salter Blowers']"", ""PROJECT['state of #REF', '#3']""]","[""SELECT['Colleges']"", ""FILTER['#1', 'where Sampson Salter Blowers is a grad student']"", ""PROJECT['state of #REF', '#2']""]"
CWQ_dev_WebQTrn-404_498797c759f6119ac48af1f70b11e2c1,What are the cause of death of the artist that went on tour I'm your Baby Tonight World Tour?,"[""SELECT['I m your Baby Tonight World Tour']"", ""PROJECT['artist of #REF', '#1']"", ""PROJECT['cause of death of #REF', '#2']""]","[""SELECT['the I m your Baby Tonight World Tour']"", ""PROJECT['artist of #REF', '#1']"", ""PROJECT['cause of death of #REF', '#2']""]"
CWQ_dev_WebQTrn-404_5c1c0bb27d69cefb9a304520f17790af,What did the actor that played in the film Whitney Houston:  The Greatest Hits died from?,"[""SELECT['the film Whitney Houston The Greatest Hits']"", ""PROJECT['actor of #REF', '#1']"", ""PROJECT['what did #REF die from', '#2']""]","[""SELECT['the film Whitney Houston the Greatest Hits']"", ""PROJECT['actor that played in #REF', '#1']"", ""PROJECT['what did #REF die from', '#2']""]"
CWQ_dev_WebQTrn-408_37e7e25202838c08eca7f37ad587ff95,What airport is close to Sandals Grande in the country with national anthem Sons and daughters of St. Lucia?,"[""SELECT['Sandals Grande']"", ""PROJECT['airport close to #REF', '#1']"", ""FILTER['#2', 'in the country with national anthem Sons and daughters of St. Lucia']""]","[""SELECT['Sandals Grande']"", ""PROJECT['country of #REF', '#1']"", ""FILTER['#2', 'that has national anthem Sons and daughters of St. Lucia']"", ""PROJECT['airport close to #REF', '#3']""]"
CWQ_dev_WebQTrn-408_cbf8e530928cbb43e83996e62999aabb,"Which airport is closest to Sandals Grande, in the country that includes the location Vieux Fort Quarter?","[""SELECT['Sandals Grande']"", ""PROJECT['airport closest to #REF', '#1']"", ""PROJECT['country of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is Vieux Fort Quarter']""]","[""SELECT['Sandals Grande']"", ""PROJECT['airport closest to #REF', '#1']"", ""PROJECT['country that includes the location Vieux Fort Quarter of #REF', '#2']""]"
CWQ_dev_WebQTrn-421_7ecd2e240f353965762db4f5ebf4f0d1,"In the movie featuring Rebecca Jackson Mendoza, who voiced Darth Vader's character?","[""SELECT['Rebecca Jackson Mendoza']"", ""PROJECT['movie featuring #REF', '#1']"", ""PROJECT['character of #REF', '#2']"", ""PROJECT['who voiced #REF', '#3']""]","[""SELECT['the movie featuring Rebecca Jackson Mendoza']"", ""PROJECT['character of #REF', '#1']"", ""PROJECT['who voiced #REF', '#2']"", ""FILTER['#3', 'in Darth Vader']""]"
CWQ_dev_WebQTrn-441_45779a2cf25506125b56819f01177655,Which Canadian sport was honored at the 2010 ESPY award ceremony?,"[""SELECT['the 2010 ESPY award ceremony']"", ""PROJECT['sports honored at #REF', '#1']"", ""FILTER['#2', 'that are Canadian']""]","[""SELECT['ESPY award ceremony']"", ""FILTER['#1', 'in 2010']"", ""PROJECT['sport honored at #REF', '#2']"", ""FILTER['#3."
CWQ_dev_WebQTrn-441_f48019bbd11999c3779c7b90b60350e3,What Canadian team won the 2000 CONCACAF Gold Cup Final?,"[""SELECT['the 2000 CONCACAF Gold Cup Final']"", ""PROJECT['Canadian team that won #REF', '#1']""]","[""SELECT['the 2000 CONCACAF Gold Cup Final']"", ""PROJECT['team of #REF', '#1']"", ""FILTER['#2', 'that is Canadian']""]"
CWQ_dev_WebQTrn-441_fbac0d7b6fd3ab4248a4d7ccf4b91fe1,What Japanese sport was nominated for a Laureus World Sports Award in 2003?,"[""SELECT['Japanese sport']"", ""FILTER['#1', 'that was nominated for a Laureus World Sports Award']"", ""FILTER['#2', 'in 2003']""]","[""SELECT['Japanese sports']"", ""FILTER['#1', 'that was nominated for a Laureus World Sports Award']"", ""FILTER['#2', 'in 2003']""]"
CWQ_dev_WebQTrn-442_ade734803aa90931641d9f89cedf866d,Who died in Dallas and was the first leader of the AFL?,"[""SELECT['the AFL']"", ""PROJECT['leaders of #REF', '#1']"", ""FILTER['#2', 'that died in Dallas']"", ""AGGREGATE['min', '#3']""]","[""SELECT['leaders of the AFL']"", ""FILTER['#1', 'that died in Dallas']"", ""AGGREGATE['min', '#2']""]"
CWQ_dev_WebQTrn-470_2ed273e1ef71275dba971b59c747ff69,Which Jonas brother had a romantic relationship that ended in October of 2008?,"[""SELECT['Jonas']"", ""PROJECT['brother of #REF', '#1']"", ""FILTER['#2', 'that had a romantic relationship that ended in October 2008']""]","[""SELECT['Jonas']"", ""PROJECT['brother of #REF', '#1']"", ""PROJECT['romantic relationship of #REF', '#2']"", ""FILTER['#3', 'that ended in 2008']""]"
CWQ_dev_WebQTrn-470_8632ca063cf9f5cf9260f82da8ac9014,"What are the names of the subjects in the image ""The Jonas Brothers with Singer Celine Dion?""?","[""SELECT['the Jonas Brothers with Singer Celine Dion']"", ""PROJECT['subjects in #REF', '#1']"", ""PROJECT['names of #REF', '#2']""]","[""SELECT['the Jonas Brothers with Singer Celine Dion']"", ""PROJECT['subjects of #REF', '#1']"", ""PROJECT['names of #REF', '#2']""]"
CWQ_dev_WebQTrn-470_e1866ddb432fa90359080d98900d0cfc,"What are the names of the artists who recorded ""We Got the Party?""?","[""SELECT['We Got the Party']"", ""PROJECT['artists who recorded #REF', '#1']"", ""PROJECT['names of #REF', '#2']""]","[""SELECT['We Got the Party']"", ""PROJECT['artists of #REF', '#1']"", ""PROJECT['names of #REF', '#2']""]"
CWQ_dev_WebQTrn-470_edb8e611b4e0e2819b94cdf92374370e,What Jonas Brother played the character Shane Gray?,"[""SELECT['character']"", ""FILTER['#1', 'that is Shane Gray']"", ""PROJECT['what Jonas Brother played in #REF', '#2']""]","[""SELECT['character']"", ""FILTER['#1', 'that is Shane Gray']"", ""PROJECT['what Jonas Brother played #REF', '#2']""]"
CWQ_dev_WebQTrn-470_f0509f64305de2683f5b5a6c5e7d5d81,Who were the artists who had a tour When You Look Me in the Eyes?,"[""SELECT['When You Look Me in the Eyes tour']"", ""PROJECT['artists of #REF', '#1']""]","[""SELECT['Tour When You Look Me in the Eyes']"", ""PROJECT['artists who had #REF', '#1']""]"
CWQ_dev_WebQTrn-531_31c94b951f3d708ac503327d7979da93,What Australian religion has a place of worship named Candi Laras?,"[""SELECT['Australian religions']"", ""PROJECT['place of worship of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is named Candi Laras']""]","[""SELECT['Australian religions']"", ""PROJECT['place of worship of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is called Candi Laras']""]"
CWQ_dev_WebQTrn-531_61efa0b17cc53c2187422d88bf670f22,"What religions are found in Australia, which Gautama Buddha is a founding figure of?","[""SELECT['Australia']"", ""PROJECT['religions found in #REF', '#1']"", ""FILTER['#2', 'that Gautama Buddha is a founding figure of']""]","[""SELECT['Australia']"", ""PROJECT['religions of #REF', '#1']"", ""FILTER['#2', 'that Gautama Buddha is a founding figure of']""]"
CWQ_dev_WebQTrn-538_3b521e4133132fe5c032a9946f9616c9,"Which countries does Russia border, which country has the capital of Baku?","[""SELECT['countries']"", ""FILTER['#1', 'that Russia borders']"", ""PROJECT['capitals of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is Baku']""]","[""SELECT['Russia']"", ""PROJECT['countries that border #REF', '#1']"", ""PROJECT['capitals of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is Baku']""]"
CWQ_dev_WebQTrn-538_5e7f2ddc862adf547cf031bf067e6af0,Which country with the religious organization Ukrainian Orthodox Church of the Kyivan Patriarchate does Russia border?,"[""SELECT['religious organization']"", ""FILTER['#1', 'that is Ukrainian Orthodox Church of the Kyivan Patriarchate']"", ""PROJECT['country that borders Russia of #REF', '#2']""]","[""SELECT['the religious organization Ukrainian Orthodox Church of the Kyivan Patriarchate']"", ""PROJECT['country that #REF borders', '#1']"", ""FILTER['#2', 'that does not have Russia']""]"
CWQ_dev_WebQTrn-538_8b034a64d61ccf9b732e9314a1df67be,Which country that borders Russia has the smallest ISO?,"[""SELECT['Russia']"", ""PROJECT['border country of #REF', '#1']"", ""PROJECT['ISO of #REF', '#2']"", ""SUPERLATIVE['min', '#2', '#3']""]","[""SELECT['Russia']"", ""PROJECT['country that borders #REF', '#1']"", ""PROJECT['ISO of #REF', '#2']"", ""SUPERLATIVE['min', '#2', '#3']""]"
CWQ_dev_WebQTrn-538_def00c56c0fb0b672cfa80c66694be13,What country borders Russia and has an ISO Alpha 3 of CHN?,"[""SELECT['Russia']"", ""PROJECT['country that borders #REF', '#1']"", ""FILTER['#2', 'that has an ISO Alpha 3 of CHN']""]","[""SELECT['Russia']"", ""PROJECT['border country of #REF', '#1']"", ""FILTER['#2', 'that has an ISO Alpha 3 of CHN']""]"
CWQ_dev_WebQTrn-538_edc922a0faa1e47614eb7e6effe2d1a1,"What country that borders Russia is Anren Town, Sichuan in?","[""SELECT['Russia']"", ""PROJECT['country that borders #REF', '#1']"", ""FILTER['#2', 'that is Anren Town Sichuan']""]","[""SELECT['Russia']"", ""PROJECT['border country of #REF', '#1']"", ""FILTER['#2', 'that is Anren Town Sichuan']""]"
CWQ_dev_WebQTrn-538_edf538d65cbd0df3c44e9639aed1d945,What country has Nynorsk as an official language and is bordered by Russia?,"[""SELECT['Russia']"", ""PROJECT['border country of #REF', '#1']"", ""FILTER['#2', 'that has Nynorsk as an official language']""]","[""SELECT['country']"", ""FILTER['#1', 'that has Nynorsk as an official language']"", ""FILTER['#2', 'that is bordered by Russia']""]"
CWQ_dev_WebQTrn-577_2a51c1a579bcd08b5bbd610634b1af60,"Find the country that is home to Cerveza Colonos Del Llanquihue Lager Premium Artesanal Beer, what type of government do they use?","[""SELECT['Cerveza Colonos Del Llanquihue Lager Premium Artesanal Beer']"", ""PROJECT['country of #REF', '#1']"", ""PROJECT['government of #REF', '#2']"", ""PROJECT['type of #REF', '#3']""]","[""SELECT['Cerveza Colonos Del Llanquihue Lager Premium Artesanal Beer']"", ""PROJECT['country that is home to #REF', '#1']"", ""PROJECT['type of government of #REF', '#2']""]"
CWQ_dev_WebQTrn-577_755bf60e299967df7b265e22e1ac2367,What kind of government does the area that contains the second level division of Eastern Island currently have?,"[""SELECT['the second level division of Eastern Island']"", ""PROJECT['area that contains #REF', '#1']"", ""PROJECT['kind of government currently of #REF', '#2']""]","[""SELECT['the second level division of Eastern Island']"", ""PROJECT['area that contains #REF', '#1']"", ""PROJECT['government currently of #REF', '#2']""]"
CWQ_dev_WebQTrn-577_7f9ae201cca433d26ab1ea95fea47844,"Find the country the breed Araucana comes from, what form of government do they use?","[""SELECT['breed']"", ""FILTER['#1', 'that is Araucana']"", ""PROJECT['country of #REF', '#2']"", ""PROJECT['form of government of #REF', '#3']""]","[""SELECT['breed Araucana']"", ""PROJECT['country of #REF', '#1']"", ""PROJECT['form of government of #REF', '#2']""]"
CWQ_dev_WebQTrn-577_b352385481a660e410c383fc45d816be,"The area that gets the Aurora de Chile newspaper today, has what type of government?","[""SELECT['the Aurora de Chile newspaper']"", ""PROJECT['area that gets #REF today', '#1']"", ""PROJECT['type of government of #REF', '#2']""]","[""SELECT['newspaper']"", ""FILTER['#1', 'that is Aurora de Chile']"", ""PROJECT['area that gets #REF today', '#2']"", ""PROJECT['government of #REF', '#3']""]"
CWQ_dev_WebQTrn-577_ca1508e2ef993ab45c97cfdacb149658,What form of government is used in the governmental jurisdiction where Augusto Pinochet holds a governmental office?,"[""SELECT['Augusto Pinochet']"", ""PROJECT['governmental office of #REF', '#1']"", ""PROJECT['governmental jurisdiction of #REF', '#2']"", ""PROJECT['form of government of #REF', '#3']""]","[""SELECT['Augusto Pinochet']"", ""PROJECT['governmental office of #REF', '#1']"", ""PROJECT['governmental jurisdiction of #REF', '#2']"", ""PROJECT['form of government used in #REF', '#3']""]"
CWQ_dev_WebQTrn-577_cf3638075fd9204c82c8adf9ae47925e,What kind of government is run in the country that includes the Supreme Court of Chile and part of its governmental structure?,"[""SELECT['the Supreme Court of Chile']"", ""PROJECT['country that includes #REF', '#1']"", ""PROJECT['governmental structure of #REF', '#2']"", ""PROJECT['kind of government run in #REF', '#3']""]","[""SELECT['the Supreme Court of Chile']"", ""PROJECT['country that includes #REF', '#1']"", ""PROJECT['governmental structure of #REF', '#2']"", ""PROJECT['kind of government of #REF', '#3']""]"
CWQ_dev_WebQTrn-63_5a1a688f44243d711cce8c47969dc50e,Which member of the band Bush was born in Newport Wales?,"[""SELECT['band Bush']"", ""PROJECT['members of #REF', '#1']"", ""FILTER['#2', 'that was born in Newport Wales']""]","[""SELECT['band Bush']"", ""PROJECT['members of #REF', '#1']"", ""FILTER['#2', 'who was born in Newport Wales']""]"
CWQ_dev_WebQTrn-63_66b0cad0e1fa978a6817055bc70f5f88,What artists were members of the band that recieved a nominated for the award for the album Machinehead?,"[""SELECT['the album Machinehead']"", ""PROJECT['award for #REF', '#1']"", ""PROJECT['band that recieved #REF', '#2']"", ""PROJECT['members of #REF', '#3']""]","[""SELECT['the album Machinehead']"", ""PROJECT['award nominated for #REF', '#1']"", ""PROJECT['band that recieved #REF', '#2']"", ""PROJECT['artists of #REF', '#3']""]"
CWQ_dev_WebQTrn-63_743f22fa42ed4ffec94a3839fc243c5f,Actor that played the role of Balthazar and is also in the band Bush?,"[""SELECT['the role of Balthazar']"", ""PROJECT['Actor of #REF', '#1']"", ""FILTER['#2', 'that is in the band Bush']""]","[""SELECT['Actors']"", ""FILTER['#1', 'that played the role of Balthazar']"", ""FILTER['#2', 'that is in the band Bush']""]"
CWQ_dev_WebQTrn-63_f1cf0646827575b26f2c01d64b05ad95,Who was in the band Bush and also wrote a screenplay for Henry's Crime?,"[""SELECT['the band Bush']"", ""PROJECT['who was in #REF', '#1']"", ""FILTER['#2', 'that wrote a screenplay for Henry s Crime']""]","[""SELECT['band Bush']"", ""PROJECT['who was in #REF', '#1']"", ""FILTER['#2', 'who wrote a screenplay for Henry s Crime']""]"
CWQ_dev_WebQTrn-648_1beae13077eb05db9b853a9c74e3aec8,Which continent is the country that makes Goldstar beer on?,"[""SELECT['Goldstar beer']"", ""PROJECT['country that makes #REF', '#1']"", ""PROJECT['continent of #REF', '#2']""]","[""SELECT['goldstar beer']"", ""PROJECT['country that makes #REF', '#1']"", ""PROJECT['continent of #REF', '#2']""]"
CWQ_dev_WebQTrn-648_563b401a13e5a2b9bc3c9ec4bbe58962,What continent includes the country with the national anthem Hatikvah?,"[""SELECT['the national anthem Hatikvah']"", ""PROJECT['country of #REF', '#1']"", ""PROJECT['continent of #REF', '#2']""]","[""SELECT['country']"", ""FILTER['#1', 'with national anthem Hatikvah']"", ""PROJECT['continent of #REF', '#2']""]"
CWQ_dev_WebQTrn-648_ae0ef655e304be3e017fd9cd4955fd62,"In which continent, is the location where the movie, ""Defamation"", occurs?","[""SELECT['the movie Defamation']"", ""PROJECT['location of #REF', '#1']"", ""PROJECT['continent of #REF', '#2']""]","[""SELECT['movie']"", ""FILTER['#1', 'that is Defamation']"", ""PROJECT['location of #REF', '#2']"", ""PROJECT['continent of #REF', '#3']""]"
CWQ_dev_WebQTrn-659_465277909580bd5bd79e9a6bca3d7ed6,In which city with a GNIS feature ID greater than 847388 does Joey King live?,"[""SELECT['Joey King']"", ""PROJECT['cities of #REF', '#1']"", ""PROJECT['GNIS feature IDs of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is higher than 847388']""]","[""SELECT['Joey King']"", ""PROJECT['cities of #REF', '#1']"", ""PROJECT['GNIS feature IDs of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is greater than 847388']""]"
CWQ_dev_WebQTrn-659_92cd88da247f06a2a19f25b5d45c8d9c,Where does Joey King live that is also the place where the Hall of Fame induction was born?,"[""SELECT['Joey King']"", ""PROJECT['Where does #REF live', '#1']"", ""FILTER['#2', 'that is the place where the Hall of Fame induction was born']""]","[""SELECT['Joey King']"", ""PROJECT['Where does #REF live', '#1']"", ""FILTER['#2', 'that is where the Hall of Fame induction was born']""]"
CWQ_dev_WebQTrn-659_9e23cfd67cc478f1dd0942be05f97881,Where does Joey King live with the largest GNIS feature ID?,"[""SELECT['Joey King']"", ""PROJECT['where does #REF live', '#1']"", ""PROJECT['GNIS feature ID of #REF', '#2']"", ""SUPERLATIVE['max', '#2', '#3']""]","[""SELECT['Joey King']"", ""PROJECT['where does #REF live', '#1']"", ""PROJECT['GNIS feature IDs of #REF', '#2']"", ""SUPERLATIVE['max', '#2', '#3']""]"
CWQ_dev_WebQTrn-659_c32736bc2120c8c423e1f9825b03fb9d,"In what city, where the 2011 Pan African Film Festival took place, does Joey King live?","[""SELECT['the 2011 Pan African Film Festival']"", ""PROJECT['city where #REF took place', '#1']"", ""FILTER['#2', 'that Joey King lives In']""]","[""SELECT['the 2011 Pan African Film Festival']"", ""PROJECT['city of #REF', '#1']"", ""FILTER['#2', 'where Joey King lives']""]"
CWQ_dev_WebQTrn-659_d1fc3947ed4865e2143cf7690cbb5220,Where does the actor who played the character Gina Fineman live?,"[""SELECT['character']"", ""FILTER['#1', 'that is Gina Fineman']"", ""PROJECT['actor of #REF', '#2']"", ""PROJECT['Where does #REF live', '#3']""]","[""SELECT['character']"", ""FILTER['#1', 'that is Gina Fineman']"", ""PROJECT['actor of #REF', '#2']"", ""PROJECT['where does #REF live', '#3']""]"
CWQ_dev_WebQTrn-659_e2cc7bfdd3ce0acb1cfd8158d4e09384,"Find the name of the actress who played Miss Quentin, where does this person reside?","[""SELECT['miss Quentin']"", ""PROJECT['actress who played #REF', '#1']"", ""PROJECT['where does #REF reside', '#2']"", ""PROJECT['name of #REF', '#3']""]","[""SELECT['Miss Quentin']"", ""PROJECT['actress of #REF', '#1']"", ""PROJECT['where does #REF reside', '#2']"", ""PROJECT['name of #REF', '#3']""]"
CWQ_dev_WebQTrn-686_22837422e25cf0a05cb0efba9aa80402,Which film starring Rhianna involved the National Film Board of Canada?,"[""SELECT['Rhianna']"", ""PROJECT['film starring #REF', '#1']"", ""FILTER['#2', 'that involved the National Film Board of Canada']""]","[""SELECT['Rhianna']"", ""PROJECT['film that starring #REF', '#1']"", ""FILTER['#2', 'that involved the National Film Board of Canada']""]"
CWQ_dev_WebQTrn-686_8f888bb5da4fd47af3e8d299ba8399be,Which movie written by Seth Rogan did Rihanna star in?,"[""SELECT['Seth Rogan']"", ""PROJECT['movies written by #REF', '#1']"", ""FILTER['#2', 'that Rihanna did star in']""]","[""SELECT['Seth Rogan']"", ""PROJECT['movie written by #REF', '#1']"", ""FILTER['#2', 'that Rihanna did star in']""]"
CWQ_dev_WebQTrn-686_9b9b953bf3d29e3e18a55ad8d159b4cc,Which movie decorated by Larry Dias did Rihanna play in?,"[""SELECT['movies']"", ""FILTER['#1', 'decorated by Larry Dias']"", ""FILTER['#2', 'that Rihanna did play in']""]","[""SELECT['Rihanna']"", ""PROJECT['movies of #REF', '#1']"", ""FILTER['#2', 'decorated by Larry Dias']""]"
CWQ_dev_WebQTrn-686_d7f03ff5a50f06214024939dc9db9033,Which movie with music by Henry Jackman did Rihanna play in?,"[""SELECT['Henry Jackman']"", ""PROJECT['music of #REF', '#1']"", ""PROJECT['movies of #REF', '#2']"", ""FILTER['#3', 'that Rihanna plays in']""]","[""SELECT['Henry Jackman']"", ""PROJECT['movies of #REF', '#1']"", ""FILTER['#2', 'that Rihanna did play in']""]"
CWQ_dev_WebQTrn-69_0041be7f9b354e8ece87d54d4edec736,Which show did the actor appear on who played Louis 'Pipes' Pepitone?,"[""SELECT['Louis Pipes Pepitone']"", ""PROJECT['actor who played #REF', '#1']"", ""PROJECT['show that #REF appeared on', '#2']""]","[""SELECT['Louis Pipes Pepitone']"", ""PROJECT['actor of #REF', '#1']"", ""PROJECT['show that #REF appears on', '#2']""]"
CWQ_dev_WebQTrn-69_5108577c7d962fd122e31547fb1b5f47,What tv program with more than 19 episodes did Joey Lawrence play on?,"[""SELECT['Joey Lawrence']"", ""PROJECT['tv programs of #REF', '#1']"", ""PROJECT['episodes of #REF', '#2']"", ""GROUP['count', '#3', '#2']"", ""COMPARATIVE['#2', '#4', 'is higher than 19']""]","[""SELECT['Joey Lawrence']"", ""PROJECT['tv programs of #REF', '#1']"", ""PROJECT['episode of #REF', '#2']"", ""GROUP['count', '#3', '#2']"", ""COMPARATIVE['#2', '#4', 'is higher than 19']""]"
CWQ_dev_WebQTrn-73_77c420382ba6d010795aca544a34bd60,What was the form of government in both Sparta and the Kingdom of Portugal?,"[""SELECT['Sparta']"", ""SELECT['the Kingdom of Portugal']"", ""PROJECT['form of government of #REF', '#1']"", ""PROJECT['form of government of #REF', '#2']"", ""SELECT['form']"", ""INTERSECTION['#5', '#3', '#4']""]","[""SELECT['Sparta']"", ""SELECT['Kingdom of Portugal']"", ""PROJECT['form of government of #REF', '#1']"", ""PROJECT['form of government of #REF', '#2']"", ""SELECT['form']"", ""INTERSECTION['#5', '#3', '#4']""]"
CWQ_dev_WebQTrn-786_c79e703ecbfb4226ba2041f923f19585,Which actress played the fictional character who was the parent of another character named Sophie Cuckoo?,"[""SELECT['fictional character']"", ""FILTER['#1', 'that is the parent of another character named Sophie Cuckoo']"", ""PROJECT['actress who played #REF', '#2']""]","[""SELECT['fictional character']"", ""FILTER['#1', 'named Sophie Cuckoo']"", ""PROJECT['parent of #REF', '#2']"", ""PROJECT['actress who played #REF', '#3']""]"
CWQ_dev_WebQTrn-806_0a916dec206a3acd8d31f5d05db8d82f,Where are the pyramids of Giza located and was also a place where the French Revolutionary Wars took place?,"[""SELECT['the pyramids of Giza']"", ""PROJECT['where are #REF located', '#1']"", ""FILTER['#2', 'that was a place where the French Revolutionary Wars took place']""]","[""SELECT['the pyramids of Giza']"", ""PROJECT['Where are #REF located', '#1']"", ""FILTER['#2', 'that was a place where the French Revolutionary Wars took place']""]"
CWQ_dev_WebQTrn-806_7a8da06c34ec7303bb218c5f9fd7c3df,Which government has a position of Consul General and is where the Pyramids of Giza are located?,"[""SELECT['the Pyramids of Giza']"", ""PROJECT['where are #REF located', '#1']"", ""PROJECT['government that has a position of Consul General', '#2']""]","[""SELECT['the Pyramids of Giza']"", ""PROJECT['where are #REF located', '#1']"", ""PROJECT['government where #REF is Consul General', '#2']""]"
CWQ_dev_WebQTrn-806_ae64704cb347aa76764b4232059b8823,What country that contains Cairo Governorate is where the Pyramids of Giza are located?,"[""SELECT['Cairo Governorate']"", ""PROJECT['country of #REF', '#1']"", ""FILTER['#2', 'that is where the Pyramids of Giza are located']""]","[""SELECT['the Cairo Governorate']"", ""PROJECT['country of #REF', '#1']"", ""FILTER['#2', 'that is where the Pyramids of Giza are located']""]"
CWQ_dev_WebQTrn-823_ff15a8fdbc70c6898db760ce1cf001a0,Which university was attended by the actor from Magic & Bird: A Courtship of Rivals?,"[""SELECT['Magic & Bird A Courtship of Rivals']"", ""PROJECT['actor of #REF', '#1']"", ""PROJECT['university of #REF', '#2']""]","[""SELECT['Magic & Bird A Courtship of Rivals']"", ""PROJECT['actor of #REF', '#1']"", ""PROJECT['university that was attended by #REF', '#2']""."
CWQ_dev_WebQTrn-836_31702484b07d87096be4da15bf70f5d6,What major UK Religion has a notable figure named Eve?,"[""SELECT['major UK Religion']"", ""PROJECT['notable figure of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is named Eve']""]","[""SELECT['major UK Religion']"", ""PROJECT['notable figure in #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is named Eve']""]"
CWQ_dev_WebQTrn-836_33335d298ed09243d0a1f54336cf4333,What religion with the sacred site Harmandir Sahib is in the UK?,"[""SELECT['the sacred site Harmandir Sahib']"", ""PROJECT['religion of #REF', '#1']"", ""FILTER['#2', 'in the UK']""]","[""SELECT['religions']"", ""FILTER['#1', 'with sacred site Harmandir Sahib']"", ""FILTER['#2', 'in the UK']""]"
CWQ_dev_WebQTrn-836_9a69191735636d5c80ee0a6dd1153086,What major religion in the UK has a place of worship named Yanina Synagogue?,"[""SELECT['the UK']"", ""PROJECT['major religion of #REF', '#1']"", ""PROJECT['place of worship of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is named Yanina Synagogue']""]","[""SELECT['the UK']"", ""PROJECT['major religion of #REF', '#1']"", ""PROJECT['place of worship of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is named Yanina Synagogue']""."
CWQ_dev_WebQTrn-860_89196c459fb8a465bb797f3be5d5e5b2,What other cars does the organization that acquired the McLaughlin automobile company make?,"[""SELECT['the McLaughlin automobile company']"", ""PROJECT['organization that acquired #REF', '#1']"", ""PROJECT['cars of #REF', '#2']"", ""DISCARD['#3', '#1']""]","[""SELECT['McLaughlin automobile company']"", ""PROJECT['organization that acquired #REF', '#1']"", ""PROJECT['cars of #REF', '#2']"", ""DISCARD['#3', '#1']""]"
CWQ_dev_WebQTrn-909_2f842739addc0c55fb26b31fefb43184,What city has a GNS feature ID of less of 661145 and is the home of Bob Dylan?,"[""SELECT['Bob Dylan']"", ""PROJECT['home city of #REF', '#1']"", ""PROJECT['GNS feature ID of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is lower than 661145']""]","[""SELECT['Bob Dylan']"", ""PROJECT['home city of #REF', '#1']"", ""PROJECT['GNS feature ID of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is less than 661145']""]"
CWQ_dev_WebQTrn-909_5a1d57fe3f9b64b56911d2857fa20a62,"Where did the music producer who produced ""Before the Flood"" live?","[""SELECT['Before the Flood']"", ""PROJECT['music producer who produced #REF', '#1']"", ""PROJECT['Where did #REF live', '#2']""]","[""SELECT['Before the Flood']"", ""PROJECT['music producer of #REF', '#1']"", ""PROJECT['where did #REF live', '#2']""]"
CWQ_dev_WebQTrn-909_7b370e7ac17bdbde1f9e5b82df501d75,What Locality home to Bob Dylan has a jurisdiction identified as Los Angeles County?,"[""SELECT['Bob Dylan']"", ""PROJECT['Locality home to #REF', '#1']"", ""FILTER['#2', 'that is identified as Los Angeles County']""]","[""SELECT['Bob Dylan']"", ""PROJECT['Homeland of #REF', '#1']"", ""PROJECT['jurisdiction of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is Los Angeles County']""]"
CWQ_dev_WebQTrn-909_d4365c56c0eda71b0415a72b7a925955,"Where did the author that published, The Definitive Bob Dylan Songbook, live?","[""SELECT['The Definitive Bob Dylan Songbook']"", ""PROJECT['author of #REF', '#1']"", ""PROJECT['Where did #REF live', '#2']""]","[""SELECT['The Definitive Bob Dylan Songbook']"", ""PROJECT['author that published #REF', '#1']"", ""PROJECT['Where did #REF live', '#2']""]"
CWQ_dev_WebQTrn-909_e12c930fa07dfba5a0fc3f9d71dd9800,"In what cities did the composer of ""Country Pie"" reside?","[""SELECT['Country Pie']"", ""PROJECT['composer of #REF', '#1']"", ""PROJECT['cities where #REF reside', '#2']""]","[""SELECT['Country Pie']"", ""PROJECT['composer of #REF', '#1']"", ""PROJECT['cities where #REF did reside', '#2']""]"
CWQ_dev_WebQTrn-909_f07b2dccc5ff21182a1d76f70333afcc,"What cities have the artist that reiceved the nomination for ""Down in the flood"" live in?","[""SELECT['Down in the flood']"", ""PROJECT['nominee of #REF', '#1']"", ""PROJECT['artist of #REF', '#2']"", ""PROJECT['cities live in of #REF', '#3']""]","[""SELECT['Down in the flood']"", ""PROJECT['nominee of #REF', '#1']"", ""PROJECT['artist that reiceved #REF', '#2']"", ""PROJECT['cities #REF live in', '#3']""]"
CWQ_dev_WebQTrn-909_f66713bae9ae81f5d4a02e13239639bf,In what cities did the recording artist of Like a Rolling Stone (instrumental) reside?,"[""SELECT['like a Rolling Stone']"", ""PROJECT['recording artist of #REF', '#1']"", ""PROJECT['cities where #REF reside', '#2']""]","[""SELECT['Like a Rolling Stone']"", ""PROJECT['recording artist of #REF', '#1']"", ""PROJECT['cities where #REF reside', '#2']""]"
CWQ_dev_WebQTrn-970_538a7b35067a537bfa6c692fab856ba0,"Find the place whwer Fiji Hindi is spoken, what form of government is used there?","[""SELECT['Fiji Hindi']"", ""PROJECT['place where #REF is spoken', '#1']"", ""PROJECT['form of government of #REF', '#2']""]","[""SELECT['Fiji Hindi']"", ""PROJECT['where #REF is spoken', '#1']"", ""PROJECT['form of government of #REF', '#2']""]"
CWQ_dev_WebQTrn-970_936ac874cf9393903f70f3e1035b1bf0,What is the government system of the government where the title of President of Fiji is held?,"[""SELECT['the title President of Fiji']"", ""PROJECT['government where #REF is held', '#1']"", ""PROJECT['government system of #REF', '#2']""]","[""SELECT['the title President of Fiji']"", ""PROJECT['where is #REF held', '#1']"", ""PROJECT['government system of #REF', '#2']""]"
CWQ_dev_WebQTrn-983_4c4a97c6e5587907f52b33361f29ceb8,"Where in Oregon was the movie depicted in the image ""Stand.By.Me.1986.720p.BluRay.x264-SiNNERS.torrent? filmed?","[""SELECT['Stand.By.Me.1986.720p.BluRay.x264-SiNNERS.torrent']"", ""PROJECT['movie depicted in #REF', '#1']"", ""PROJECT['where was #REF filmed', '#2']"", ""FILTER['#3', 'in Oregon']""]","[""SELECT['Stand.By.Me.1986.720p.BluRay.x264-SiNNERS.torrent']"", ""PROJECT['movie depicted in #REF', '#1']"", ""PROJECT['Where was #REF filmed', '#2']"", ""FILTER['#3', 'in Oregon']""]"
CWQ_dev_WebQTrn-985_b529fa4b7c5a34e81b9f2f63ecf02c45,What work did the writers of the Harlem Renaissance wrote about that was published on 8-26-2011?,"[""SELECT['the Harlem Renaissance']"", ""PROJECT['writers of #REF', '#1']"", ""PROJECT['work that #REF wrote about', '#2']"", ""FILTER['#3', 'that was published on 8-26-2011']""]","[""SELECT['the Harlem Renaissance']"", ""PROJECT['writers of #REF', '#1']"", ""PROJECT['works about #REF', '#2']"", ""FILTER['#3', 'that was published on 8-26-2011']""]"
DROP_dev_history_10_778cc4f0-4264-4780-9a05-571746de447d,"Which side suffered more casualties, the Federales or the Americans?","[""SELECT['the Federales']"", ""SELECT['the Americans']"", ""PROJECT['casualties suffered of #REF', '#1']"", ""PROJECT['casualties suffered of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""COMPARISON['max', '#5', '#6']""]","[""SELECT['the Federales']"", ""SELECT['the Americans']"", ""PROJECT['casualties that #REF suffered', '#1']"", ""PROJECT['casualties that #REF suffered', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""COMPARISON['max', '#5', '#6']""]"
DROP_dev_history_10_a0c02482-0031-400d-b6f0-aa089bcf1424,"How many total people were killed, captured and were listed as casualties?","[""SELECT['people']"", ""FILTER['#1', 'that were killed']"", ""FILTER['#1', 'that were captured']"", ""FILTER['#1', 'that were listed as casualties']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['sum', '#4', '#5']""]","[""SELECT['people']"", ""FILTER['#1', 'that were killed']"", ""FILTER['#1', 'that were captured']"", ""FILTER['#1', 'that were listed as casualties']"", ""INTERSECTION['#1', '#2', '#3']"", ""AGGREGATE['count', '#4']""]"
DROP_dev_history_10_b4a57b06-bcd2-4ed5-82de-48c5bc95b0a9,What happened first: Battle of Carrizal or prisoners were repatriated?,"[""SELECT['the Battle of Carrizal']"", ""SELECT['prisoners were repatriated']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]","[""SELECT['the Battle of Carrizal']"", ""PROJECT['when was #REF', '#1']"", ""SELECT['prisoners were repatriated']"", ""PROJECT['when was #REF', '#3']"", ""COMPARISON['min', '#2', '#4']""]"
DROP_dev_history_1002_45be3d97-6563-4ac3-a107-dda9d12eb39d,How many years after Nyaungyan captured Nyaungshwe did the capture Mone?,"[""SELECT['Nyaungyan captured Nyaungshwe']"", ""SELECT['the capture Mone']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['Nyaungyan captured Nyaungshwe']"", ""SELECT['the capture of Mone']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]"
DROP_dev_history_1002_79bd0ad5-b0a9-4a6b-947e-8ff97f5fa00e,How many years after capturing Nyaungshwe did Nyaungyan capture the large strategic Shan state of Mone?,"[""SELECT['capturing Nyaungshwe']"", ""SELECT['Nyaungyan did capture the large strategic Shan state of Mone']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['capturing Nyaungshwe']"", ""SELECT['Nyaungyan did capture the large strategic Shan state of Mone']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]"
DROP_dev_history_1002_8a2400c9-5987-4979-af5d-38c54cb92e6d,How many years passed between Nyaungyan consolidating his holdings and his declaring of himself king?,"[""SELECT['Nyaungyan consolidating his holdings']"", ""SELECT['his declaring of himself king']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['Nyaungyan consolidating his holdings']"", ""SELECT['his declaring of himself king']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]"
DROP_dev_history_1002_b1514967-60df-485a-bceb-1813f3c19380,How many cities did Nyaungyan try to reclaim?,"[""SELECT['Nyaungyan']"", ""PROJECT['cities that #REF try to reclaim', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['Nyaungyan']"", ""PROJECT['cities reclaim of #REF', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_history_1002_d8ee2dcc-91d9-4e9b-914c-f1dbd2b504e0,How many years after Pegu fell did the king die?,"[""SELECT['Pegu fell']"", ""SELECT['the king did die']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['Pegu fell']"", ""SELECT['king did die']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]"
DROP_dev_history_1002_db540314-ad8e-4e87-bed8-d57ae991d26a,When did  Naresuan of Siam die?,"[""SELECT['Naresuan of Siam']"", ""PROJECT['when did #REF die', '#1']""]","[""SELECT['Naresuan of Siam']"", ""PROJECT['when did #REF die', '#1']""]"
DROP_dev_history_1002_e9ae0bd8-9a5d-4809-8ce8-ace215b971c2,"How many months after Nyaungyan sent a force to reclaim Mohnyin, Mogaung, and Bhamo did he declare himself king?","[""SELECT['Nyaungyan sent a force to reclaim Mohnyin, Mogaung, and Bhamo']"", ""SELECT['Nyaungyan did declare himself king']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['Nyaungyan sent a force to reclaim Mohnyin, Mogaung, and Bhamo']"", ""SELECT['Nyaungyan declare himself king']"", ""PROJECT['month of #REF', '#1']"", ""PROJECT['month of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]"
DROP_dev_history_1002_f0267c1d-8c7c-475a-8557-5e5b66eb71cd,What states did Nyaungyan recapture in 1601 and 1603 after he became king?,"[""SELECT['Nyaungyan became king']"", ""PROJECT['states recaptured of #REF', '#1']"", ""FILTER['#2', 'in 1601']"", ""FILTER['#2', 'in 1603']"", ""INTERSECTION['#2', '#3', '#4']""]","[""SELECT['Nyaungyan']"", ""PROJECT['states recaptured of #REF', '#1']"", ""FILTER['#2', 'in 1601']"", ""FILTER['#2', 'in 1603']"", ""UNION['#3', '#4']""]"
DROP_dev_history_1012_31182c98-e949-4810-9a61-f65bfc460210,How many years was the time span where China launched four invasions of Burma?,"[""SELECT['China launched four invasions of Burma']"", ""PROJECT['time span of #REF', '#1']"", ""PROJECT['years of #REF', '#2']"", ""AGGREGATE['count', '#3']""]","[""SELECT['China launched four invasions of Burma']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['years of #REF', '#2']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_history_1012_4f4b79ac-d230-4065-bdeb-b769351fdadc,How many years did the second invasion of the Burmese Troops  1766-1767 last?,"[""SELECT['the second invasion of the Burmese Troops']"", ""PROJECT['years of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['second invasion of the Burmese Troops']"", ""PROJECT['years of #REF', '#1']"", ""AGGREGATE['max', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]"
DROP_dev_history_1012_8dbd6237-2843-43d1-8752-6dc71a8382f5,After how many Chinese invasions did the conflict escalate from a regional conflict into a major war?,"[""SELECT['the conflict did escalate from a regional conflict into a major war']"", ""PROJECT['Chinese invasions of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['the conflict escalate from a regional conflict into a major war']"", ""PROJECT['Chinese invasions of #REF', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_history_1012_8e34a961-c660-4a5c-8ec1-5166b9dac698,What happened first: China launched four invasions or a truce?,"[""SELECT['China launched four invasions']"", ""SELECT['a truce']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]","[""SELECT['Chinese launched four invasions']"", ""SELECT['a truce']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]"
DROP_dev_history_1012_9f060bf9-ae4a-49ac-933a-8a4fb52620ce,"Which event happened first, the invasion of Burma, or a truce?","[""SELECT['the invasion of Burma']"", ""SELECT['a truce']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]","[""SELECT['the invasion of Burma']"", ""SELECT['a truce']"", ""PROJECT['date of #REF', '#1']"", ""PROJECT['date of #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]"
DROP_dev_history_1012_a2f25486-e034-4532-b28e-e80ce8555c0f,Which Chinese invasion got the furthest into Burma?,"[""SELECT['Chinese invasions']"", ""FILTER['#1', 'that got furthest into Burma']""]","[""SELECT['Chinese invasions']"", ""FILTER['#1', 'that got furthest into Burma']"")""]"
DROP_dev_history_1012_c0d41f72-4986-4073-8580-e25e317d2ec6,What happened second: China launched four invasions or a truce?,"[""SELECT['China launched four invasions']"", ""SELECT['a truce']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['max', '#3', '#4']""]","[""SELECT['China launched four invasions']"", ""SELECT['a truce was signed']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['max', '#3', '#4']""]"
DROP_dev_history_1019_72407857-72ac-480e-bc2d-0e4ce3781f10,"Which year saw a smaller Siamese invasion force, 1852 or 1854?","[""SELECT['Siamese invasion force']"", ""FILTER['#1', 'in 1852']"", ""FILTER['#1', 'in 1854']"", ""PROJECT['size of #REF', '#2']"", ""PROJECT['size of #REF', '#3']"", ""COMPARISON['min', '#4', '#5']""]","[""SELECT['Siamese invasion force']"", ""FILTER['#1', 'in 1852']"", ""FILTER['#1', 'in 1854']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['min', '#4', '#5']""]"
DROP_dev_history_1019_7d68bc90-8b3d-4fb4-89a8-6a0f125e1286,How many did it fail to dislodge the Burmese from?,"[""SELECT['the Burmese']"", ""PROJECT['difference of #REF and one', '#1']""]","[""SELECT['Burmese']"", ""PROJECT['difference of #REF and one', '#1']""]"
DROP_dev_history_1019_95f79bf5-8b0d-448c-bdf7-b811476be64d,Where did Mindon get the troops he sent to Kentung to fight the Siamese in 1853?,"[""SELECT['Mindon']"", ""PROJECT['troops sent to Kentung to fight the Siamese in 1853 of #REF', '#1']"", ""PROJECT['Where did #REF get', '#2']""]","[""SELECT['Mindon']"", ""PROJECT['troops sent to Kentung to fight the Siamese in 1853 of #REF', '#1']"", ""PROJECT['where did #REF get', '#2']""]"
DROP_dev_history_1019_e38a3a71-b665-49bf-9007-5fb6c9a78d4b,How many years passed between the raiding of Kengtung and the Siamese forces withdrawing to the border?,"[""SELECT['the raiding of Kengtung']"", ""SELECT['the Siamese forces withdrawing to the border']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['the raiding of Kengtung']"", ""SELECT['Siamese forces withdrawing to the border']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]"
DROP_dev_history_103_1522737a-aac8-4d6e-9994-723d9b997a70,"Which happened first, the Battle of Kosovo or the Battle of Deçiq?","[""SELECT['the Battle of Kosovo']"", ""SELECT['the Battle of Deçiq']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]","[""SELECT['the Battle of Kosovo']"", ""SELECT['the Battle of Deçiq']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]-"
DROP_dev_history_103_40020cae-57f6-4a0d-95ff-1f61f65d6678,Where was Mehmed V visiting when many Albanians boycotted the event?,"[""SELECT['Mehmed V']"", ""PROJECT['where was #REF visiting', '#1']"", ""FILTER['#2', 'when many Albanians boycotted the event']""]","[""SELECT['Mehmed V']"", ""PROJECT['Where was #REF visiting', '#1']"", ""FILTER['#2', 'when many Albanians boycotted the event']""]"
DROP_dev_history_103_53d1c44c-363f-49a6-9acb-cef3a39d9e9f,"Where did Mehmed V visit first, the site of the historical battle or Kosovo vilayet?","[""SELECT['Mehmed V visits the site of the historical battle']"", ""SELECT['Mehmed V visits the Kosovo vilayet']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]","[""SELECT['Mehmed V did visit the site of the historical battle']"", ""SELECT['Mehmed V did visit the Kosovo vilayet']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]"
DROP_dev_history_103_69738a63-9436-4228-ad0b-4c8cc09ca225,Which group of Albanian leaders were pacified first?,"[""SELECT['groups of Albanian leaders']"", ""FILTER['#1', 'that were pacified']"", ""AGGREGATE['min', '#2']""]","[""SELECT['Albanian leaders']"", ""FILTER['#1', 'that were pacified']"", ""AGGREGATE['min', '#2']""]"
DROP_dev_history_103_8e69e590-5608-4850-8023-a60d5beef76e,How many Albanian revolts did Mehmed V sign general amnesty for all participants during his visit to Kosovo vilayet?,"[""SELECT['Mehmed V']"", ""PROJECT['participants of #REF', '#1']"", ""FILTER['#2', 'during his visit to Kosovo vilayet']"", ""PROJECT['general amnesty signs of #REF', '#3']"", ""PROJECT['Albanian revolts of #REF', '#4']"", ""AGGREGATE['count', '#5']""]","[""SELECT['Mehmed V']"", ""PROJECT['participants of #REF', '#1']"", ""FILTER['#2', 'during his visit to Kosovo vilayet']"", ""PROJECT['general amnesty signs of #REF', '#3']"", ""FILTER['#4', 'that are Albanian revolts']"", ""AGGREGATE['count', '#5']""]"
DROP_dev_history_103_be8d3c59-5e04-4f35-b36d-0f6ad095ca13,How many days after Mehmed V visited Skopje visit the site of the Battle of Kosovo?,"[""SELECT['Mehmed V visited Skopje']"", ""SELECT['the site of the Battle of Kosovo']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['Mehmed V visited Skopje']"", ""SELECT['the Site of the Battle of Kosovo']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]"
DROP_dev_history_104_49b5b4dd-1c74-4f80-8630-b270b4b40448,How many years were between Gosiewski gaining power over Smolensk and becoming Field Quartermaster of Lithuania?,"[""SELECT['Gosiewski gaining power over Smolensk']"", ""SELECT['becoming Field Quartermaster of Lithuania']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['Gosiewski gaining power over Smolensk']"", ""SELECT['becoming Field Quartermaster of Lithuania']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]"
DROP_dev_history_104_6ab00b85-b405-49bf-ab29-97b5266b82de,"Which job did Aleksander hold first, Palatine-Governor of Smolensk or Lithuanian Field-Quartermaster?","[""SELECT['Aleksander did hold Palatine-Governor of Smolensk']"", ""SELECT['Aleksander did hold Lithuanian Field-Quartermaster']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]","[""SELECT['Aleksander did hold Palatine-Governor of Smolensk']"", ""SELECT['Aleksander did hold Lithuanian Field-Quartermaster']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]"
DROP_dev_history_104_96590b11-eb05-4e81-99e5-58366c63d764,How many years did Aleksander Korwin Gosiewski de armis Ślepowron act as Speaker of Parliament?,"[""SELECT['Alekander Korwin Gosiewski de armis lepowron act as Speaker of Parliament']"", ""PROJECT['years of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['Aleksander Korwin Gosiewski de armis lepowron did act as Speaker of Parliament']"", ""PROJECT['years of #REF', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_history_104_96d19098-478d-4c14-a33f-cd8a45966f16,How many year was Aleksander Korwin Gosiewski de armis Ślepowron the Governor?,"[""SELECT['Alekander Korwin Gosiewski de armis lepowron was the Governor']"", ""PROJECT['years of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['Alexander Korwin Gosiewski de armis lepowron was the Governor']"", ""PROJECT['years of #REF', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_history_104_b8c6894d-fa6f-4b2d-8ca6-26bcdd5899ad,How many areas was Lithuanian Aleksander Korwin Gosiewski de armis Ślepowron the District-Governor of?,"[""SELECT['Lithuanian Aleksander Korwin Gosiewski de armis lepowron']"", ""PROJECT['District-Governor of #REF', '#1']"", ""PROJECT['areas of #REF', '#2']"", ""AGGREGATE['count', '#3']""]","[""SELECT['Lithuanian Aleksander Korwin Gosiewski de armis lepowron']"", ""PROJECT['district-Governor of #REF', '#1']"", ""PROJECT['areas of #REF', '#2']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_history_104_ed58d302-72fe-41c3-b01f-03bd783cd6a1,"Which was he first, a Lithuanian Field-Quartermaster or Palatine-Governor of Smolensk?","[""SELECT['he was a Lithuanian Field-Quartermaster']"", ""SELECT['he was a Palatine-Governor of Smolensk']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]","[""SELECT['the Lithuanian Field-Quartermaster of Smolensk']"", ""SELECT['the Palatine-Governor of Smolensk']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]"
DROP_dev_history_1042_1236769b-479b-4adc-bf2c-cbbc25733cc9,How many cities did Ottomon attack to retaliate for Polijica?,"[""SELECT['Ottomon']"", ""PROJECT['cities that #REF attack', '#1']"", ""FILTER['#2', 'to retaliate for Polijica']"", ""AGGREGATE['count', '#3']""]","[""SELECT['Ottomon']"", ""PROJECT['cities that #REF attacks', '#1']"", ""FILTER['#2', 'to retaliate for Polijica']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_history_1042_22c82b78-75f9-46a0-a9f8-b070e15b0960,How many days did the siege of Herceg Novi last?,"[""SELECT['the siege of Herceg Novi']"", ""PROJECT['days that #REF last', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['the siege of Herceg Novi']"", ""PROJECT['days that #REF last', '#1']"", ""AGGREGATE['count', '#2']""]."
DROP_dev_history_1042_270c5a01-4971-498a-a1e8-08a6b13264aa,How many years were there between the siege of Herceg Novi and Venice taking Vrgorac?,"[""SELECT['the siege of Herceg Novi']"", ""SELECT['Venice taking Vrgorac']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['the siege of Herceg Novi']"", ""PROJECT['year of #REF', '#1']"", ""SELECT['Venice taking Vrgorac']"", ""PROJECT['year of #REF', '#3']"", ""ARITHMETIC['difference', '#2', '#4']""]"
DROP_dev_history_1042_71446d50-bab4-42a8-b8b5-ba3e4cf99035,How many areas north of the Republic of Ragusa did Venice take over in 1694?,"[""SELECT['the Republic of Ragusa']"", ""PROJECT['areas north of #REF', '#1']"", ""FILTER['#2', 'that Venice did take over in 1694']"", ""AGGREGATE['count', '#3']""]","[""SELECT['the Republic of Ragusa']"", ""SELECT['Venice']"", ""PROJECT['areas north of #REF', '#2']"", ""FILTER['#3', 'that Venice take over in 1694']"", ""AGGREGATE['count', '#4']""]"
DROP_dev_history_1042_8d1d1067-668e-47c9-9c68-4047b59b178b,How many cities did Venice try to take?,"[""SELECT['Venice']"", ""PROJECT['cities try to take of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['Venice']"", ""PROJECT['cities that #REF try to take', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_history_1042_dd044a3f-2503-4651-a2cc-112d81852352,What happened second: the siege of Herceg Novi or Knin being taken over?,"[""SELECT['the siege of Herceg Novi']"", ""SELECT['Knin being taken over']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['max', '#3', '#4']""]","[""SELECT['the siege of Herceg Novi']"", ""SELECT['Kinn being taken over']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['max', '#3', '#4']""]"
DROP_dev_history_1043_16cf3a20-1c2d-4782-a498-cd77377ddf4c,How many less people were in the peninsula during the first census compared to the pre-war population?,"[""SELECT['the peninsula']"", ""PROJECT['people in #REF', '#1']"", ""FILTER['#2', 'during the first census']"", ""FILTER['#2', 'during the pre-war population']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['the peninsula']"", ""PROJECT['people of #REF', '#1']"", ""FILTER['#2', 'during the first census']"", ""FILTER['#2', 'during the pre-war population']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]"
DROP_dev_history_1043_24227b88-1f91-459d-8a6d-3c34eb113759,How many years after the Treaty of Karlowitz was signed did the population allegedly rise to 250000?,"[""SELECT['the Treaty of Karlowitz was signed']"", ""SELECT['the population allegedly did rise to 250000']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['the Treaty of Karlowitz was signed']"", ""SELECT['the population did allegedly rise to 250000']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]"
DROP_dev_history_1043_620840b6-98e8-445b-925f-825de189621d,Give the population difference before and after the war?,"[""SELECT['populations']"", ""FILTER['#1', 'before the war']"", ""FILTER['#1', 'after the war']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]","[""SELECT['populations']"", ""FILTER['#1', 'before the war']"", ""FILTER['#1', 'after the war']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['difference', '#5', '#4']""]"
DROP_dev_history_1043_a3955c6f-472d-449c-908f-895ca04a3fc3,Who were subjects under the Treat of Karlowitz?,"[""SELECT['the Treat of Karlowitz']"", ""PROJECT['subjects of #REF', '#1']""]","[""SELECT['Trade of Karlowitz']"", ""PROJECT['subjects of #REF', '#1']""]"
DROP_dev_history_1043_a932ccae-ac70-4d48-98db-d46c12d2b029,How many people did the Peloponnese lose from their population during the war?,"[""SELECT['the Peloponnese']"", ""PROJECT['population of #REF', '#1']"", ""FILTER['#2', 'during the war']"", ""AGGREGATE['count', '#3']""]","[""SELECT['the Peloponnese']"", ""PROJECT['population of #REF', '#1']"", ""FILTER['#2', 'during the war']"", ""PROJECT['people lost from #REF', '#3']""."
DROP_dev_history_1043_c7d698e8-41bc-434a-8658-f83763b678db,What was the makeup of the Kingdom of Morea?,"[""SELECT['the Kingdom of Morea']"", ""PROJECT['makeup of #REF', '#1']""]","[""SELECT['the Kingdom of Morea']"", ""PROJECT['the makeup of #REF', '#1']""]"
DROP_dev_history_1043_cc0b58bc-aedb-4c3a-9bb7-111b67f8f384,How many more people lived in Peloponnese pre-war compared to the population after the war?,"[""SELECT['Peloponnese']"", ""PROJECT['population of #REF', '#1']"", ""FILTER['#2', 'pre-war']"", ""FILTER['#2', 'after the war']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['Peloponnese']"", ""PROJECT['population of #REF', '#1']"", ""FILTER['#2', 'pre-war']"", ""FILTER['#2', 'after the war']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""."
DROP_dev_history_1043_f0ec5ecc-40ac-407a-8f60-7becd6fa2741,What was one thing done by the Venetians?,"[""SELECT['the Venetians']"", ""PROJECT['thing done by #REF', '#1']""]","[""SELECT['the Venetians']"", ""PROJECT['things done by #REF', '#1']"", ""AGGREGATE['max', '#2']""]"
DROP_dev_history_1043_f772b0f3-bab4-497b-b8c3-0ecd4f06bb5c,How many people  less were there in the peninsula after the war?,"[""SELECT['the peninsula']"", ""PROJECT['people of #REF', '#1']"", ""FILTER['#2', 'after the war']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['the peninsula']"", ""PROJECT['people of #REF', '#1']"", ""FILTER['#2', 'after the war']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['min', '#4']""]"
DROP_dev_history_1048_1003bb6f-c368-40c6-9b07-5008ffac6038,How many people was the maximum estimate of people who died in the riot?,"[""SELECT['the riot']"", ""PROJECT['estimates of people who died in #REF', '#1']"", ""AGGREGATE['max', '#2']""]","[""SELECT['people']"", ""FILTER['#1', 'who died in the riot']"", ""PROJECT['estimates of #REF', '#2']"", ""AGGREGATE['max', '#3']""]"
DROP_dev_history_1048_29379a7f-fd0a-4e1f-a892-7be8bfeca740,Who gave up Leontii Pleshcheyev to the rioters?,"[""SELECT['Leontii Pleshcheyev']"", ""PROJECT['who gave up #REF to the rioters', '#1']""]","[""SELECT['Leotii Pleshcheyev']"", ""PROJECT['who gave up #REF to the rioters', '#1']""]"
DROP_dev_history_1048_60dd759f-b4a3-4513-b539-0e072a7a4db4,How did the rioters execute Pleshceyev?,"[""SELECT['the rioters']"", ""PROJECT['How did #REF execute Pleshceyev', '#1']""]","[""SELECT['the rioters execute Pleshceyev']"", ""PROJECT['How did #REF', '#1']""]"
DROP_dev_history_1048_950bdee5-ce90-475f-8bc8-cdefd1817660,How many people did the insurgents demand the surrender of?,"[""SELECT['the insurgents']"", ""PROJECT['people demand the surrender of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['the insurgents']"", ""PROJECT['people #REF demand the surrender of', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_history_1048_cc1b975e-374f-435e-8977-f10fb9458c72,How many days after Alexei I's return was Pleshceyev surrendered?,"[""SELECT['Alexei I s return']"", ""SELECT['Pleshceyev surrendered']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['Alexei I return']"", ""SELECT['Pleshceyev surrendered']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]"
DROP_dev_history_1065_051483b6-0852-4afb-b26d-a50ec3872348,How many years after the Battle of Nieuwpoort ocurred did the area obtain city rights from County Philip of Flanders?,"[""SELECT['the Battle of Nieuwpoort ocurred']"", ""SELECT['the area did obtain city rights from County Philip of Flanders']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['Battle of Nieuwpoort ocurred']"", ""SELECT['the area did obtain city rights from County Philip of Flanders']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]"
DROP_dev_history_1065_4a93ad6e-dbd7-41d6-ba8a-7f30904db698,How many years after the city obtained their rights did the Battle of Nieuwpoort happen?,"[""SELECT['the city obtained their rights']"", ""SELECT['the Battle of Nieuwpoort']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['the city obtained their rights']"", ""SELECT['the Battle of Nieuwpoort']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]"
DROP_dev_history_1065_bd1b14d6-4264-4c02-837d-f34f227bb7ae,How many countries signed the Second Treaty of Versailles?,"[""SELECT['the Second Treaty of Versailles']"", ""PROJECT['countries that signed #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['the Second Treaty of Versailles']"", ""PROJECT['country signed #REF', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_history_1065_ee23be57-a1c1-41c1-8a7a-524171c142f8,What happened to the city in 1757?,"[""SELECT['the city']"", ""PROJECT['what happened to #REF', '#1']"", ""FILTER['#2', 'in 1757']""]","[""SELECT['the city']"", ""PROJECT['what happened to #REF in 1757', '#1']""]"
DROP_dev_history_1065_f652afd8-e4e3-441b-9cfb-2e2d170df2d4,Who was part of the treaty that allowed the French to occupy the city?,"[""SELECT['the treaty']"", ""FILTER['#1', 'that allowed the French to occupy the city']"", ""PROJECT['who was part of #REF', '#2']""]","[""SELECT['the treaty that allowed the French to occupy the city']"", ""PROJECT['who was part of #REF', '#1']""]"
DROP_dev_history_1069_044d83bf-2cd2-4285-b6a5-fcb78394c643,Who were not part of the most powerful navies in 1688?,"[""SELECT['navies']"", ""PROJECT['powers of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is the highest']"", ""PROJECT['who were part of #REF', '#3']"", ""FILTER['#4', 'in 1688']"", ""DISCARD['#4', '#5']""]","[""SELECT['navies']"", ""FILTER['#1', 'in 1688']"", ""PROJECT['powerful of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is the highest']"", ""PROJECT['who were part of #REF', '#4']"", ""DISCARD['#2', '#5']""]"
DROP_dev_history_1069_2bcbb94d-8866-49b9-a964-0ef6e8d998c2,How many navies suffered serious declines in the 17th century?,"[""SELECT['navies']"", ""FILTER['#1', 'that suffered serious declines in the 17th century']"", ""AGGREGATE['count', '#2']""]","[""SELECT['navies']"", ""FILTER['#1', 'that suffered serious declines']"", ""FILTER['#2', 'in the 17th century']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_history_1069_4846be15-ad6c-46fb-b795-069429a22c07,Which ship was destroyed at La Hogue?,"[""SELECT['ships']"", ""FILTER['#1', 'that was destroyed at La Hogue']""]","[""SELECT['La Hogue']"", ""PROJECT['ship destroyed at #REF', '#1']""]"
DROP_dev_history_1069_899faf5f-73b3-475d-87d2-582cec427732,Which country had the largest ships in their Navy?,"[""SELECT['countries']"", ""PROJECT['Navy of #REF', '#1']"", ""PROJECT['ships in #REF', '#2']"", ""GROUP['count', '#3', '#1']"", ""SUPERLATIVE['max', '#1', '#4']""]","[""SELECT['countries']"", ""PROJECT['Navy of #REF', '#1']"", ""PROJECT['ships in #REF', '#2']"", ""GROUP['count', '#3', '#2']"", ""COMPARATIVE['#2', '#4', 'is the highest']""]"
DROP_dev_history_107_3ca4effd-18f9-48fe-8645-fd07301676f0,The book Three Black Pennys was published how many years after Knopf was founded?,"[""SELECT['the book Three Black Pennys']"", ""PROJECT['year that #REF was founded', '#1']"", ""PROJECT['year that #REF was published', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]","[""SELECT['the book Three Black Pennys was published']"", ""PROJECT['year of #REF', '#1']"", ""SELECT['knopf was founded']"", ""PROJECT['year of #REF', '#3']"", ""ARITHMETIC['difference', '#2', '#4']""]"
DROP_dev_history_107_5373d098-e6de-4160-8985-2154e888b345,Who funded Knopf to be founded?,"[""SELECT['knopf']"", ""PROJECT['who funded #REF to be founded', '#1']""]","[""SELECT['knopf']"", ""PROJECT['who funded #REF', '#1']"", ""FILTER['#2."
DROP_dev_history_107_549e85ad-bdd0-4ad4-95e3-3d4fd7faf422,How many years were there between the founding of Knopf and their first best seller?,"[""SELECT['the founding of Knopf']"", ""SELECT['the first best seller']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['the founding of Knopf']"", ""SELECT['the first best seller']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]"
DROP_dev_history_107_cb4f8363-5782-4e2c-aaa2-727d3e7748b1,How many years after Knopf was founded was it officiaully incorporated?,"[""SELECT['knopf was founded']"", ""SELECT['it officiaully incorporated']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['Knopf was founded']"", ""SELECT['Knopf was officiaully incorporated']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3)""]"
DROP_dev_history_1074_31c0acc5-851f-4452-87e3-a99a1086a53c,"Who died second, Edward's son or Edward's father?","[""SELECT['Edward s son died']"", ""SELECT['Edward s father died']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['max', '#3', '#4']""]","[""SELECT['Edward']"", ""PROJECT['son of #REF', '#1']"", ""PROJECT['father of #REF', '#1']"", ""BOOLEAN['#2', 'died']"", ""BOOLEAN['#3', 'died']"", ""COMPARISON['max', '#4', '#5']""]"
DROP_dev_history_1074_431cdf77-e97a-4869-9946-16c86d3cf33f,"Who died first, Edward or John?","[""SELECT['Edward died']"", ""SELECT['John died']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]","[""SELECT['Edward died']"", ""PROJECT['when did #REF die', '#1']"", ""SELECT['John died']"", ""PROJECT['when did #REF die', '#3']"", ""COMPARISON['min', '#2', '#4']""]"
DROP_dev_history_1074_65ffb850-3999-48bd-992f-475cf7db4dc7,How many years did Edward stay in Sicily?,"[""SELECT['Edward stay in Sicily']"", ""PROJECT['years of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['Edward Stay in Sicily']"", ""PROJECT['years of #REF', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_history_1074_a83c925c-6bf8-45a1-b567-bc8b181539bc,How many months after departing for Sicily was Edward crowned King of England?,"[""SELECT['departing for Sicily']"", ""SELECT['Edward was crowned King of England']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['departing for Sicily']"", ""SELECT['Edward was crowned King of England']"", ""PROJECT['month of #REF', '#1']"", ""PROJECT['month of #REF', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]"
DROP_dev_history_1074_ce8cdee7-0004-4084-8531-978e670062c8,"When Edward went to Sicily after recovering from his wound, which two family members of his died?","[""SELECT['Edward went to Sicily after recovering from his wound']"", ""PROJECT['family members of #REF', '#1']"", ""FILTER['#2', 'that died']""]","[""SELECT['Edward went to Sicily after recovering from his wound']"", ""PROJECT['family members of #REF', '#1']"", ""FILTER['#2', 'when two of his died']""]"
DROP_dev_history_1074_e444e95d-e3e0-47b0-a5a8-38f99430f3cc,What month of 1272 was an attempt to assassinate Edward made?,"[""SELECT['an attempt to assassinate Edward']"", ""PROJECT['month of #REF', '#1']"", ""FILTER['#2', 'in 1272']""]","[""SELECT['Edward']"", ""PROJECT['an attempt to assassinate #REF', '#1']"", ""PROJECT['month of #REF', '#2']""]"
DROP_dev_history_1082_7fc77120-c308-4204-9b11-6487589aa7df,What happened first: fleet fired on the Swedish or war was declared?,"[""SELECT['fleet fired on the Swedish']"", ""SELECT['war was declared']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]","[""SELECT['the fleet fired on the Swedish']"", ""SELECT['war was declared']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]"
DROP_dev_history_1082_8495dc04-40c3-413f-86ee-f2f90a8150fa,"What happened last, the king's departure from the army, or Charley de Mornays stepping in as the commanding officer?","[""SELECT['the king s departure from the army']"", ""SELECT['Charley de Mornays stepping in as the commanding officer']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['max', '#3', '#4']""]","[""SELECT['king s departure from the army']"", ""SELECT['Charley de Mornays stepping in as the commanding officer']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['max', '#3', '#4']""]"
DROP_dev_history_1082_8fd1e5f3-e0dc-4996-aeb4-63f90f76e771,When did Danish king Fredrik II attack Älvsborg?,"[""SELECT['the Danish king Fredrik II did attack lvsborg']"", ""PROJECT['when was #REF', '#1']""]","[""SELECT['the Danish king Fredrik II attacks lvsborg']"", ""PROJECT['when was #REF', '#1']""]"
DROP_dev_history_1082_bf6818df-7092-4f18-9116-057f582ab324,What happened second: fleet fired on the Swedish or war was declared?,"[""SELECT['the fleet fired on the Swedish']"", ""SELECT['the war was declared']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['max', '#3', '#4']""]","[""SELECT['fleet fired on the Swedish']"", ""SELECT['war was declared']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['max', '#3', '#4']?"
DROP_dev_history_1082_cb321f89-4f0d-4b62-bf75-873d1b012a23,Who commanded the Danish in May of 1563??,"[""SELECT['the Danish']"", ""PROJECT['who commanded #REF', '#1']"", ""FILTER['#2', 'in May of 1563']""]","[""SELECT['Danish']"", ""PROJECT['who commanded #REF', '#1']"", ""FILTER['#2', 'in May of 1563']""]"
DROP_dev_history_1082_dbdf36f7-a935-4b91-9cea-8f2942831ab7,How many days passed between the Danish fleet firing on the Swedish navy and the declaration of war?,"[""SELECT['the Danish fleet firing on the Swedish navy']"", ""SELECT['the declaration of war']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['Danish fleet firing on the Swedish navy']"", ""SELECT['the declaration of war']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]"
DROP_dev_history_1092_2b3e75ef-871f-4d1b-b682-32f19616f1ef,What happened first: government ventured to eliminate hierarchy or the Cheka was created?,"[""SELECT['government ventured to eliminate hierarchy']"", ""SELECT['the Cheka was created']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]","[""SELECT['government ventured to eliminate hierarchy']"", ""SELECT['Chaka was created']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]"
DROP_dev_history_1092_48c48b6d-7e51-442f-96c0-9f58415a01cd,How many delegates were women from both the Bolshevik delegates and the Socialist Revolutionary delegates?,"[""SELECT['delegates']"", ""FILTER['#1', 'that were women']"", ""FILTER['#2', 'from the Bolshevik delegates']"", ""FILTER['#2', 'from the Socialist Revolutionary delegates']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['sum', '#5', '#6']""]","[""SELECT['delegates']"", ""FILTER['#1', 'that were women']"", ""FILTER['#2', 'of Bolshevik']"", ""FILTER['#2', 'of Socialist Revolutionary']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['sum', '#5', '#6']""]"
DROP_dev_history_1092_53b02aa7-df92-41f0-9388-b7629c4b09d8,"Who had more women as delegates, the Socialist Revolutionaries or the Bolsheviks?","[""SELECT['delegates']"", ""FILTER['#1', 'of the Socialist Revolutionaries']"", ""FILTER['#1', 'of the Bolsheviks']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['max', '#4', '#5']""]","[""SELECT['delegates']"", ""FILTER['#1', 'that were the Socialist Revolutionaries']"", ""FILTER['#1', 'that were the Bolsheviks']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['max', '#4', '#5']""]"
DROP_dev_history_1092_628fc601-b5ca-4a8b-8ffc-65f1544665cb,How many days took place between the elimination of hierarchy in the army and the creation of Cheka?,"[""SELECT['the elimination of hierarchy in the army']"", ""SELECT['the creation of Cheka']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['the elimination of hierarchy in the army']"", ""SELECT['the creation of Cheka']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]"
DROP_dev_history_1092_6bb88e32-e5dc-45db-ad5f-f7b5fe8f3dc4,"Which happened first, the failed assassination attempt on Lenin, or the Red Terror?","[""SELECT['the failed assassination attempt on Lenin']"", ""SELECT['the Red Terror']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]","[""SELECT['a failed assassination attempt on Lenin']"", ""SELECT['the Red Terror']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]"
DROP_dev_history_1092_920531b5-0c47-4f5b-9288-a6858c2ebbf3,What happened second: government ventured to eliminate hierarchy or the Cheka was created?,"[""SELECT['government ventured to eliminate hierarchy']"", ""SELECT['the Cheka was created']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['max', '#3', '#4']""]","[""SELECT['the government ventured to eliminate hierarchy']"", ""SELECT['the Cheka was created']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['max', '#3', '#4']""]"
DROP_dev_history_1092_bce995bb-9595-4f6e-bad5-4ffdc763d132,How many total mandatory delegates were proposed by both the Bolshevik Central Committee and the Socialist Revolutionaries?,"[""SELECT['the Bolshevik Central Committee']"", ""SELECT['the Socialist Revolutionaries']"", ""PROJECT['mandate delegates proposed by #REF', '#1']"", ""PROJECT['mandate delegates proposed by #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['sum', '#5', '#6']""]","[""SELECT['the Bolshevik Central Committee']"", ""SELECT['the Socialist Revolutionaries']"", ""PROJECT['mandated delegates proposed by #REF', '#1']"", ""PROJECT['mandated delegates proposed by #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['sum', '#5', '#6']""]"
DROP_dev_history_1092_ce7ee2ad-946e-4db5-a2b7-5de955aa97a0,How many mandatory candidates in total were there for the election?,"[""SELECT['the election']"", ""PROJECT['mandate candidates of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['the election']"", ""PROJECT['candidates of #REF', '#1']"", ""FILTER['#2', 'that were mandatory']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_history_1092_e44f4ea8-b8b8-4b03-93b3-76456f0dc2cb,How many months before the Red Terror was started did Bolsheviks dissolve the Constituent Assembly?,"[""SELECT['the Red Terror was started']"", ""SELECT['the Bolsheviks dissolve the Constituent Assembly']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['the Red Terror was started']"", ""SELECT['Bolsheviks dissolve the Constituent Assembly']"", ""PROJECT['month of #REF', '#1']"", ""PROJECT['month of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]"
DROP_dev_history_1125_1128cd7a-9e1f-4bc3-b83a-96bcd74efad9,"How long did it take for military expeditions to consume £50,000?","[""SELECT['military expeditions']"", ""PROJECT['cost of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is 50, 000']"", ""PROJECT['How long was #REF', '#3']""]","[""SELECT['military expeditions']"", ""PROJECT['cost of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is 50, 000']"", ""PROJECT['How long did #REF take', '#3']""]"
DROP_dev_history_1125_781b563a-163a-4029-aa6a-072490987f00,How many £ was the cost for a year of the garrisons in Calais and Brest and what military expeditions could consume?,"[""SELECT['garrisons in Calais']"", ""SELECT['garrisons in Brest']"", ""PROJECT['cost of #REF', '#1']"", ""PROJECT['cost of #REF', '#2']"", ""PROJECT['year of #REF', '#3']"", ""PROJECT['year of #REF', '#4']"", ""ARITHMETIC['sum', '#5', '#6']"", ""ARITHMETIC['difference', '#7', '#8']""]","[""SELECT['garrisons']"", ""FILTER['#1', 'in Calais']"", ""FILTER['#1', 'in Brest']"", ""PROJECT['cost in £ for a year of #REF', '#2']"", ""PROJECT['cost in £ for a year of #REF', '#3']"", ""UNION['#4', '#5']""]"
DROP_dev_history_1125_a4895c12-513f-4499-96a4-a8f4e2453ee3,"How many years after Edward III of England pressed his claims to the French throne was his grandson, Richard II, born?","[""SELECT['Edward III of England pressed his claims to the French throne']"", ""SELECT['his grandson Richard II was born']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['Edward III of England pressed his claims to the French throne']"", ""SELECT['his grandson Richard II was born']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]"
DROP_dev_history_1125_a60c72cb-1c2b-414a-b102-9be1f24c4ac1,How many years before the revolt of 1381 did Charles V of France become more active in the conflict?,"[""SELECT['the revolt of 1381']"", ""SELECT['Charles V of France did become more active in the conflict']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['the revolt of 1381']"", ""SELECT['Charles V of France become more active in the conflict']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]"
DROP_dev_history_1125_aec1c769-2e5a-4212-ae05-4d5413a6802f,"Who ruled first, Edward III or Richard II?","[""SELECT['Edward III ruled']"", ""SELECT['Richard II ruled']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]","[""SELECT['Edward III ruled']"", ""SELECT['Richard II ruled']"", ""PROJECT['date of #REF', '#1']"", ""PROJECT['date of #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]"
DROP_dev_history_1125_e7de6d9f-1700-4649-b926-5ca6606d0c17,How many years before Edward III of England had pressed for the French throne until his death?,"[""SELECT['Edward III of England had pressed for the French throne']"", ""SELECT['his death']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['Edward III of England had pressed for the French throne']"", ""SELECT['his death']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]"
DROP_dev_history_115_414253a7-15cf-44aa-b205-045c39299d95,"At it's lowest average surface temperature in February, how many degrees C warmer is it in May?","[""SELECT['surface temperatures']"", ""AGGREGATE['avg', '#1']"", ""FILTER['#2', 'in February']"", ""FILTER['#2', 'in May']"", ""AGGREGATE['min', '#4']"", ""ARITHMETIC['difference', '#3', '#5']""]","[""SELECT['surface temperatures']"", ""AGGREGATE['avg', '#1']"", ""FILTER['#2', 'in February']"", ""FILTER['#3', 'in May']"", ""AGGREGATE['min', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]"
DROP_dev_history_1151_5085088f-14c6-4522-8255-a3d78a629066,How many days did it take after approval of the Foch Line for the Lithuanians to be informed about it?,"[""SELECT['approval of the Foch Line']"", ""SELECT['the Lithuanians were informed about it']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['approval of the Foch Line']"", ""SELECT['the Lithuanians were informed about it']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]"
DROP_dev_history_1151_94625e23-01be-411e-af34-34a93bfcbbea,How many days after Foch proposed his line was it approved?,"[""SELECT['Foch proposed his line']"", ""SELECT['Foch was approved of his line']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['Foch proposed his line']"", ""SELECT['Foch was approved of the line']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]"
DROP_dev_history_1151_dbf61567-8597-4d2c-a79a-64066c33f5af,How many days did it take the Ente to approve the Foch Line?,"[""SELECT['the Ente did approve the Foch Line']"", ""PROJECT['days of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['the Ente to approve the Foch Line']"", ""PROJECT['days of #REF', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_history_1151_eaa88ab7-e8f6-4038-8918-c9a13d6c5256,How many days after Foch's proposal was it approved by the Entente?,"[""SELECT['Foch s proposal']"", ""SELECT['Foch s proposal was approved by the Entente']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['Foch s proposal']"", ""SELECT['it was approved by the Entente']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]"
DROP_dev_history_1167_04413034-93b3-4988-a9d0-a9ac74c2dd7d,"How many more men did Ibrahim Pasha have compared to Sobieski's 16,000 men?","[""SELECT['Ibrahim Pasha']"", ""SELECT['Sobieski']"", ""PROJECT['men of #REF', '#1']"", ""PROJECT['men of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['Ibrahim Pasha']"", ""SELECT['Sobieski']"", ""PROJECT['men of #REF', '#1']"", ""PROJECT['men of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]"
DROP_dev_history_1167_04f6c2d5-9d02-4c13-8de1-f91932a3c1e6,"What happened first, the battle of Lwow or the Treaty of Żurawno?","[""SELECT['the battle of Lwow']"", ""SELECT['the Treaty of urawno']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]","[""SELECT['the Battle of Lwow']"", ""SELECT['the Treaty of urawno']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]"
DROP_dev_history_1167_4f1919d2-12ac-477d-a2d1-2b39623c81d2,What happened first: Commonwealth resumed the offensive or Treaty of Żurawno?,"[""SELECT['Community resumed the offensive']"", ""SELECT['the Treaty of urawno']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]","[""SELECT['Community resumed the offensive']"", ""SELECT['Traity of urawno']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]"
DROP_dev_history_1167_532fb2d0-6912-42e6-98a5-3af190d13bd2,How many was the difference beween Sobieski's force and the Turks and Tatars?,"[""SELECT['Sobieski s force']"", ""SELECT['the Turks and Tatars']"", ""PROJECT['the difference of #REF', '#1']"", ""PROJECT['the difference of #REF', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]","[""SELECT['Sobieski s force']"", ""SELECT['the Turks and Tatars']"", ""PROJECT['the difference of #REF', '#1']"", ""PROJECT['the difference of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]"
DROP_dev_history_1167_f7cbde06-0f50-46fc-9146-aa0968af570f,How many more forces were under the Turks than in Sobieski's forces?,"[""SELECT['forces']"", ""FILTER['#1', 'that were under the Turks']"", ""FILTER['#1', 'that were in Sobieski s forces']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]","[""SELECT['forces']"", ""FILTER['#1', 'that were under the Turks']"", ""FILTER['#1', 'that were in Sobieski s forces']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['difference', '#5', '#4']""]"
DROP_dev_history_1169_14213da5-f1ac-46dd-a3bc-9bf635b7879c,How many years was the Polish-Soviet War?,"[""SELECT['the Polish-Soviet War']"", ""PROJECT['years of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['The Polish-Soviet War']"", ""PROJECT['years of #REF', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_history_1169_1d7c2ba8-d719-496c-949c-5354517f3813,"Which happened first, the occupation of Kiev on May 7 or the treaty ending the war?","[""SELECT['the occupation of Kiev on May 7']"", ""SELECT['the treaty ending the war']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]","[""SELECT['the occupation of Kiev in May 7']"", ""SELECT['the treaty ending the war']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]"
DROP_dev_history_1169_8f4bba77-19d7-49bb-ba92-63a0ae909905,How many years did the Polish-Soviet War last?,"[""SELECT['the Polish-Soviet War']"", ""PROJECT['years of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['Polish-Soviet War']"", ""PROJECT['years of #REF', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_history_1169_93957280-c977-46cf-a2c4-362de4399d4a,How many names does the Polish-Soviet War have?,"[""SELECT['the Polish-Soviet War']"", ""PROJECT['names of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['names']"", ""FILTER['#1', 'of Polish-Soviet War']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_history_1196_16080b37-4cf0-4067-a5f9-640a5620be88,"Which wave had fewer soldiers total, the first or second?","[""SELECT['the first wave']"", ""SELECT['the second wave']"", ""PROJECT['soldiers of #REF', '#1']"", ""PROJECT['soldiers of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""COMPARISON['min', '#5', '#6']""]","[""SELECT['first wave']"", ""SELECT['second wave']"", ""PROJECT['soldiers of #REF', '#1']"", ""PROJECT['soldiers of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""COMPARISON['min', '#5', '#6']""]"
DROP_dev_history_1196_67399240-5604-4387-a6fc-52da0824c1ad,About how many soldiers did the military campaign start with?,"[""SELECT['the military campaign']"", ""PROJECT['soldiers that #REF start with', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['the military campaign']"", ""PROJECT['start of #REF', '#1']"", ""PROJECT['soldiers of #REF', '#2']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_history_1196_a4c53844-bf73-4758-a4c0-0b7c5f21909f,How many soldiers were in the first wave to reach land?,"[""SELECT['the first wave to reach land']"", ""PROJECT['soldiers of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['soldiers']"", ""FILTER['#1', 'that reach land']"", ""AGGREGATE['min', '#2']""]"
DROP_dev_history_1212_3b8309be-ac03-4e6b-a263-4ade862e1782,What happened last Islam was brought to the region or Alexander invaded the region?,"[""SELECT['Islam was brought to the region']"", ""SELECT['Alexander invaded the region']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['max', '#3', '#4']""]","[""SELECT['Islam was brought to the region']"", ""SELECT['Alexander invaded the region']"", ""PROJECT['date of #REF', '#1']"", ""PROJECT['date of #REF', '#2']"", ""COMPARISON['max', '#3', '#4']""]"
DROP_dev_history_1212_77e53e7b-2354-4112-aa89-d57ae4d71b34,How many years after Alexander the Great invaded Pauravas and defeated King Prous was the area fuled by the Maurya Empire?,"[""SELECT['Alexander the Great invaded Pauravas and defeated King Prous']"", ""SELECT['the area fuled by the Maurya Empire']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['Alexander the Great invaded Pauravas and defeated King Prous']"", ""SELECT['area fuled by the Maurya Empire']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]"
DROP_dev_history_1212_ab3c0d5e-de51-464c-90c7-a63cd534b693,How many years after Alexander the great defeated King Porus during his invasion of Pauravas did the Indo-Greek Kingdom form?,"[""SELECT['Alexander the great defeated King Porus during his invasion of Pauravas']"", ""SELECT['the Indo-Greek Kingdom did form']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['Alexander the great defeated King Porus during his invasion of Pauravas']"", ""SELECT['the Indo-Greek Kingdom did form']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]"
DROP_dev_history_1233_0f2c1862-c1eb-44c4-852e-357cc0ece6f6,Who all joined the Duke of Savoy in invading territories of the dominion on Genoa in 1625?,"[""SELECT['the Duke of Savoy']"", ""PROJECT['who joined #REF', '#1']"", ""FILTER['#2', 'in invading territories of the dominion on Genoa']"", ""FILTER['#3', 'in 1625']""]","[""SELECT['Duke of Savoy']"", ""PROJECT['who joined #REF', '#1']"", ""FILTER['#2', 'in 1625']"", ""FILTER['#3', 'in invading territories of the dominion on Genoa']""]"
DROP_dev_history_1233_30c4acad-427e-41b4-a076-326e0da2e210,How many more men larger was the army that began operations against Genoa than the reinforcements from Spain that were captured?,"[""SELECT['the army that began operations against Genoa']"", ""SELECT['the reinforcements from Spain that were captured']"", ""PROJECT['men of #REF', '#1']"", ""PROJECT['men of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['armies']"", ""FILTER['#1', 'that began operations against Genoa']"", ""PROJECT['men of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""SELECT['reinforcements from Spain']"", ""FILTER['#5', 'that were captured']"", ""PROJECT['men of #REF', '#6']"", ""AGGREGATE['count', '#7']"", ""ARITHMETIC['difference', '#4', '#8']""]"
DROP_dev_history_1237_03368542-1574-4350-a827-cd0138957ebc,How many years after the Anglo-Irish Treaty did Northern Ireland rejoin the United Kingdom?,"[""SELECT['the Anglo-Irish Treaty']"", ""SELECT['Northern Ireland did rejoin the United Kingdom']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['the Anglo-Irish Treaty']"", ""SELECT['Northern Ireland did rejoin the United Kingdom']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]"
DROP_dev_history_1237_11a86d1d-2ff0-47ef-a631-4cce8706eb27,Over how many months did the Irtish delegates negotiate the Anglo-Irish Treaty in London?,"[""SELECT['the Irtish delegates did negotiate the Anglo-Irish Treaty in London']"", ""PROJECT['months of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['the Irtish delegates did negotiate the Anglo-Irish Treaty in London']"", ""PROJECT['months of #REF', '#1']"", ""AGGREGATE['count', '#2']""]."
DROP_dev_history_1237_2e29475a-c7fd-495c-8ae4-f0f841350dd2,How many months was the Anglo-Irish Treaty negotiated for?,"[""SELECT['the Anglo-Irish Treaty was negotiated for']"", ""PROJECT['months of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['The Anglo-Irish Treaty was negotiated']"", ""PROJECT['months of #REF', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_history_1237_3cd9adbe-5b11-4629-95fa-97963111df53,"According to the treaty, how many years after negotiation would the entire island of Ireland become a self-governing Dominion known as the Irish Free State?","[""SELECT['negotiating']"", ""SELECT['the entire island of Ireland would become a self-governing Dominion known as the Irish Free State']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['negotiating']"", ""SELECT['the entire island of Ireland become a self-governing Dominion known as the Irish Free State']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]"
DROP_dev_history_1237_85ef7d66-ce05-44db-9405-08cf211f95cf,How many days after the negotiating of the Anglo-Irish Treaty did the entire island of Ireland become the Irish Free State?,"[""SELECT['the negotiating of the Anglo-Irish Treaty']"", ""SELECT['the entire island of Ireland did become the Irish Free State']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['the negotiations of the Anglo-Irish Treaty']"", ""SELECT['the entire island of Ireland did become the Irish Free State']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]"
DROP_dev_history_1237_87ca0aad-2581-4d09-80a4-e383f6edf1e7,How many days before the end of the negotiating of the Anglo-Irish Treaty was a decision taken to recommend the treaty to Dáil Éireann?,"[""SELECT['the end of the negotiating of the Anglo-Irish Treaty']"", ""SELECT['a decision was taken to recommend the treaty to Dáil Éireann']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['the end of negotiating of the Anglo-Irish Treaty']"", ""SELECT['a decision was taken to recommend the treaty to Dáil Éireann']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]"
DROP_dev_history_1237_daec607e-3554-4ebc-913e-2eac19c82338,How many months after the truce of the War of Independence was called did the entire island of Ireland become the Irish Free State?,"[""SELECT['the truce of the War of Independence was called']"", ""SELECT['the entire island of Ireland did become the Irish Free State']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['the truce of the War of Independence was called']"", ""SELECT['the entire island of Ireland do become the Irish Free State']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]"
DROP_dev_history_124_1ff5e8e3-0255-43dd-af8a-f9273a61cc7d,What happened first: the Indian Wars or the colony ordered the construction?,"[""SELECT['the Indian Wars']"", ""SELECT['the colony ordered the construction']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]","[""SELECT['Indian Wars']"", ""SELECT['colony ordered the construction']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]"
DROP_dev_history_124_b0eb745d-95a3-4502-be8d-d7680f9e719c,What happened second: Indian Wars or Anglo-Powhatan War?,"[""SELECT['Indian Wars']"", ""SELECT['Anglo-Powhatan War']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['max', '#3', '#4']""]","[""SELECT['Indian Wars']"", ""SELECT['Ango-Powhatan War']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['max', '#3', '#4']""]"
DROP_dev_history_124_b19dc021-b39d-46a2-a7b7-c5dcfd6dfe8a,What happened first: Indian Wars or Anglo-Powhatan War?,"[""SELECT['Indian Wars']"", ""SELECT['Anglo-Powhatan War']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]","[""SELECT['Indian Wars']"", ""PROJECT['when was #REF', '#1']"", ""SELECT['Anglo-Powhatan War']"", ""PROJECT['when was #REF', '#3']"", ""COMPARISON['min', '#2', '#4']""]"
DROP_dev_history_1250_09caacad-a7ac-45c9-97de-77953711feb5,How many years passed from when Armenia gave way to communist power to when Drastamat Kanayan sent a telegram to Njdeh?,"[""SELECT['Armenia gave way to communist power']"", ""SELECT['Drastamat Kanayan sent a telegram to Njdeh']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['Armenia gave way to communist power']"", ""SELECT['Drastamat Kanayan sent a telegram to Njdeh']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]"
DROP_dev_history_1250_0b67cac8-bbe9-46a1-9646-a2e6bcc9b9d7,How many days passed from when the invasion of the First Republic of Armenia started to when Syunik was declared as a self-governing region,"[""SELECT['the invasion of the First Republic of Armenia started']"", ""SELECT['Syunik was declared as a self-governing region']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['invasion of the First Republic of Armenia started']"", ""SELECT['Syunik was declared as a self-governing region']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]"
DROP_dev_history_1250_1054b945-7a9f-4ef0-950c-89131e5c650f,How many days after the Soviet 11th Red Army's invasion of the First Republic of Armenia started did the actual transfer of power take place in Yerevan?,"[""SELECT['the Soviet 11th Red Army s invasion of the First Republic of Armenia started']"", ""SELECT['the actual transfer of power did take place in Yerevan']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['the Soviet 11th Red Army s invasion of the First Republic of Armenia started']"", ""SELECT['the actual transfer of power did take place in Yerevan']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]"
DROP_dev_history_1250_c4ce3dc6-d231-4496-bbd7-031d9a7745d2,How many days after the Soviet 11th Red Army's invasion of the First Republic of Armenia started did  Garegin Nzhdeh declare Syunik as a self-governing region?,"[""SELECT['the Soviet 11th Red Army s invasion of the First Republic of Armenia started']"", ""SELECT['Garegin Nzhdeh declare Syunik as a self-governing region']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['the Soviet 11th Red Army s invasion of the First Republic of Armenia started']"", ""SELECT['Garegin Nzhdeh did declare Syunik as a self-governing region']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]"
DROP_dev_history_1258_06ddbb40-8f15-4ee6-98a0-93da477abddd,How many more of the 293 comuneros who were excluded from pardon were executed compared to those that died in prison?,"[""SELECT['comonaros']"", ""FILTER['#1', 'who were excluded from pardon']"", ""FILTER['#1', 'that died in prison']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]","[""SELECT['comediros']"", ""FILTER['#1', 'who were excluded from pardon']"", ""FILTER['#1', 'that died in prison']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]"
DROP_dev_history_1258_0711bebd-38ac-482f-878e-1f5aa9382897,"How many of the 293 prisoners were not pardoned, purchased amnesty or were executed?","[""SELECT['prisoners']"", ""FILTER['#1', 'that were pardoned']"", ""FILTER['#1', 'that purchased amnesty']"", ""FILTER['#1', 'that were executed']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['sum', '#5', '#6']"", ""ARITHMETIC['difference', '#4', '#7']""]","[""SELECT['prisoners']"", ""FILTER['#1', 'that were pardoned']"", ""FILTER['#1', 'that purchased amnesty']"", ""FILTER['#1', 'that were executed']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['sum', '#4', '#5']"", ""ARITHMETIC['difference', '#6', '#7']""]"
DROP_dev_history_1259_c323389b-e07c-4235-9ce7-3c2e955397b0,What day celebrates Juan de Padilla and María Pacheco in Spain?,"[""SELECT['Jona de Padilla']"", ""SELECT['Mara Pacheco']"", ""PROJECT['day that celebrates #REF', '#1']"", ""PROJECT['day that celebrates #REF', '#2']"", ""SELECT['day']"", ""INTERSECTION['#5', '#3', '#4']""]","[""SELECT['Juan de Padilla']"", ""SELECT['Mara Pacheco']"", ""SELECT['Spain']"", ""PROJECT['day that celebrates #REF', '#3']"", ""PROJECT['day that celebrates #REF', '#4']"", ""SELECT['day']"", ""INTERSECTION['#6', '#5', '#7']""]"
DROP_dev_history_1259_dfb70b82-048c-421c-9b1c-c3e2cfad5eb4,How many years after a small ceremony was held clandestinely was it recognized as an official holiday?,"[""SELECT['a small ceremony was held clandestinely']"", ""SELECT['a small ceremony was recognized as an official holiday']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['a small ceremony was held clandestinely']"", ""SELECT['a small ceremony was recognized as an official holiday']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]"
DROP_dev_history_1262_1a8712d1-c95d-4da6-ad04-4113c3a0eeb6,Who ended up being quite fascinated by the Chinese troops?,"[""SELECT['the Chinese troops']"", ""PROJECT['who ended up being quite fascinated by #REF', '#1']""]","[""SELECT['China troops']"", ""PROJECT['who ended up being quite fascinated by #REF', '#1']""]"
DROP_dev_history_1262_7d691a21-5c46-4e91-9af2-4438367754a8,How many brothers died?,"[""SELECT['brothers']"", ""FILTER['#1', 'that died']"", ""AGGREGATE['count', '#2']""]","[""SELECT['brothers']"", ""AGGREGATE['count', '#1']""]"
DROP_dev_history_1262_904ccf30-1b74-4bd6-9682-6b7be3114fff,How many years did several Ming princes accompanied Koxinga Tawain?,"[""SELECT['Ming princes accompanied Koxinga Tawain']"", ""PROJECT['years of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['a number of Ming princes accompanied Koxinga Tawain']"", ""PROJECT['years of #REF', '#1']"", ""AGGREGATE['count', '#2']""]."
DROP_dev_history_1262_db5918c1-1e6e-4f76-bc57-6b9412d60176,How many brothers did Zhixin lose?,"[""SELECT['Zhixin']"", ""PROJECT['brothers lost of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['Zhixin']"", ""PROJECT['brothers that #REF lose', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_history_1275_3fd2f999-1c12-467b-996f-34ff63aa44c6,Where is the city that Abd el-Krim ordered his forces not to attack?,"[""SELECT['Abd el-Krim ordered his forces not to attack']"", ""PROJECT['city of #REF', '#1']"", ""PROJECT['Where is #REF', '#2']""]","[""SELECT['Abd el-Krim orders his forces not to attack']"", ""PROJECT['city of #REF', '#1']"", ""PROJECT['Where is #REF', '#2']""]"
DROP_dev_history_1275_7728f949-f615-4bca-8173-4a93673bddd2,"Which was the Spanish military first suffered losses at sea, Jaun de Joanes or Espana?","[""SELECT['the Spanish military suffered losses at sea']"", ""FILTER['#1', 'that was Jaun de Joanes']"", ""FILTER['#1', 'that was Espana']"", ""PROJECT['when was #REF', '#2']"", ""PROJECT['when was #REF', '#3']"", ""COMPARISON['min', '#4', '#5']""]","[""SELECT['the Spanish military suffered losses at sea']"", ""FILTER['#1', 'at Jaun de Joanes']"", ""FILTER['#1', 'at Espana']"", ""PROJECT['when was #REF', '#2']"", ""PROJECT['when was #REF', '#3']"", ""COMPARISON['min', '#4', '#5']""]"
DROP_dev_history_1275_a544b7c0-5e1f-4731-9d32-e166022c4a99,What happened first: had retaken their major fort or España ran aground?,"[""SELECT['had retaken their major fort']"", ""SELECT['Espaa ran aground']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]","[""SELECT['had retaken their major fort']"", ""SELECT['Spanish ran aground']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]"
DROP_dev_history_1275_c0792d21-03b5-46f9-a52a-ec9a0cf917a1,"When did the Spanish have the largest forces, late August or end of August?","[""SELECT['the Spanish']"", ""PROJECT['forces of #REF', '#1']"", ""FILTER['#2', 'in late August']"", ""FILTER['#2', 'in end of August']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""COMPARISON['max', '#5', '#6']""]","[""SELECT['the Spanish']"", ""PROJECT['forces of #REF', '#1']"", ""FILTER['#2', 'in late August']"", ""FILTER['#2', 'in end of August']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is the highest']""]"
DROP_dev_history_1275_df7d80d5-5c58-40f9-a462-3040c78f8fe3,"What event happened first, Spain loosing all territories it had gained since 1909, or the Spanish retaking their major fort at Monte Arruit.","[""SELECT['Spanish loosing all territories it had gained since 1909']"", ""SELECT['the Spanish retaking their major fort at Monte Arruit']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]","[""SELECT['Spain losing all territories it had gained since 1909']"", ""SELECT['the Spanish retaking their major fort at Monte Arruit']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]"
DROP_dev_history_1276_10fed83a-a5cf-402e-a792-c7039553657f,"How many French casualties were killed, wounded and missing in total after the Rifians attacked the line?","[""SELECT['French casualties']"", ""FILTER['#1', 'after the Rifians attacked the line']"", ""FILTER['#2', 'that were killed']"", ""FILTER['#2', 'that were wounded']"", ""FILTER['#2', 'that were missing']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['sum', '#5', '#6']""]","[""SELECT['French casualties']"", ""FILTER['#1', 'after the Rifians attacked the line']"", ""FILTER['#2', 'that were killed']"", ""FILTER['#2', 'that were wounded']"", ""FILTER['#2', 'that were missing']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['sum', '#6', '#5']""]"
DROP_dev_history_1276_156183fd-2af3-42f5-8053-47401abf9bd0,How many French casualties were there?,"[""SELECT['French casualties']"", ""AGGREGATE['count', '#1']""]","[""SELECT['french casualties']"", ""AGGREGATE['count', '#1']""]"
DROP_dev_history_1276_3cf695a7-f48c-4a59-93a6-1475962ee4c8,How many French out-posts were still there?,"[""SELECT['French out-posts']"", ""FILTER['#1', 'that were still there']"", ""AGGREGATE['count', '#2']""]","[""SELECT['French out-posts']"", ""FILTER['#1', 'that were there']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_history_1276_58b0b58a-e8e9-4528-a223-039f36f217a2,"What group was the French army fighting on April 12th, 1925?","[""SELECT['the French army']"", ""PROJECT['groups fighting of #REF', '#1']"", ""FILTER['#2', 'on April 12th 1925']""]","[""SELECT['the French army']"", ""PROJECT['group fighting of #REF', '#1']"", ""FILTER['#2', 'on April 12th 1925']""]"
DROP_dev_history_1276_ca3d6bc7-27e1-45d0-b83f-2435b40cff16,Which army had less troops?,"[""SELECT['armies']"", ""PROJECT['troops of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['min', '#1', '#3']""]","[""SELECT['armies']"", ""PROJECT['troops of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is the lowest']""]"
DROP_dev_history_1276_cf0ec933-6789-4145-ab5c-c32bb3d6d34c,Which areas of casualties resulted in the same amount of numbers for the French in April 1925?,"[""SELECT['the French']"", ""PROJECT['casualties of #REF', '#1']"", ""FILTER['#2', 'in April 1925']"", ""PROJECT['areas of #REF', '#3']"", ""PROJECT['numbers of #REF', '#4']"", ""COMPARATIVE['#4', '#5', 'is the same as #6']""]","[""SELECT['the French']"", ""PROJECT['casualties of #REF', '#1']"", ""FILTER['#2', 'in April 1925']"", ""PROJECT['areas of #REF', '#3']"", ""PROJECT['numbers of #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""COMPARATIVE['#4', '#6', 'is equal to #7']""]"
DROP_dev_history_1284_744d68be-014c-40f5-b3e0-f824ab1ac2a5,"At least, how many groups of men did Couceiro take with him in 1911?","[""SELECT['Couceiro']"", ""PROJECT['groups of men that #REF take with him', '#1']"", ""FILTER['#2', 'in 1911']"", ""AGGREGATE['count', '#3']""]","[""SELECT['Couceiro']"", ""PROJECT['groups of men of #REF', '#1']"", ""FILTER['#2', 'in 1911']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_history_1284_a8a498a5-f024-4b71-ae88-4a70c54ebe42,"What did Couceiro have more of, ancient rifles, or Winchester rifles?","[""SELECT['Couceiro']"", ""PROJECT['ancient rifles of #REF', '#1']"", ""PROJECT['Winchester rifles of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['max', '#4', '#5']""]","[""SELECT['Couceiro']"", ""PROJECT['old rifles of #REF', '#1']"", ""PROJECT['Winchester rifles of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['max', '#4', '#5']""]"
DROP_dev_history_1298_65816218-01c4-4071-b10e-32018bf3555f,How many countries were Circassian refugees thought to be fleeing to?,"[""SELECT['Circassian refugees']"", ""PROJECT['countries thought to be fleeing to of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['Circassian refugees']"", ""PROJECT['countries #REF were thought to be fleeing to', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_history_1298_989273e3-6d57-46d1-bbac-08932bce8dd2,How many countries resettled on Circassian lands?,"[""SELECT['Circassian lands']"", ""PROJECT['countries resettled on #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['countries']"", ""FILTER['#1', 'that resettled on Circassian lands']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_history_1298_e913bb4e-7dfd-43a4-bab2-eb8de3e19289,How many percent of people of Circassian descent live in Russia?,"[""SELECT['people']"", ""FILTER['#1', 'of Circassian descent']"", ""FILTER['#2', 'that live in Russia']"", ""PROJECT['percent of #REF', '#3']""]","[""SELECT['people']"", ""FILTER['#1', 'of Circassian descent']"", ""FILTER['#2', 'who live in Russia']"", ""PROJECT['percent of #REF', '#3']""]"
DROP_dev_history_13_3680fe67-1794-47a9-b04c-64bb9d0b94bf,"How many years after the 1st Squadron, 10th Cavalry went to the Republic of South did it received its first Valorous Unit Award?","[""SELECT['the 1st Squadron, 10th Cavalry went to the Republic of South']"", ""SELECT['the 1st Valorous Unit Award received']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['the 1st Squadron, 10th Cavalry went to the Republic of South']"", ""SELECT['the 1st Valorous Unit Award received']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']?""]"
DROP_dev_history_13_8e8e69da-bc00-452f-9f62-a5412015ee28,"Which happened first, the Paris Peace Accords or the 1st Squadron, 10th Cavalry receiving its first Valorous Unit Award?","[""SELECT['the Paris Peace Accords']"", ""SELECT['the 1st Squadron, 10th Cavalry receiving its first Valorous Unit Award']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]","[""SELECT['Paris Peace Accords']"", ""SELECT['1st Squadron, 10th Cavalry receiving its first Valorous Unit Award']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]"
DROP_dev_history_130_26ef2b3e-c1f1-4629-b7e8-ec1efbd9641d,Did France or the Ottoman Empire offer to send more galleys?,"[""SELECT['France']"", ""SELECT['the Ottoman Empire']"", ""PROJECT['galleys that #REF offer to send', '#1']"", ""PROJECT['galleys that #REF offer to send', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""COMPARISON['max', '#5', '#6']""]","[""SELECT['France']"", ""SELECT['the Ottoman Empire']"", ""PROJECT['galleys offered to send of #REF', '#1']"", ""PROJECT['galleys offered to send of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""COMPARISON['max', '#5', '#6']""]"
DROP_dev_history_130_3d7b585b-2013-491b-a7ab-8a237e6244dd,How many more galleys did the Ottoman Empire promise than France?,"[""SELECT['the Ottoman Empire']"", ""SELECT['France']"", ""PROJECT['galleys promise of #REF', '#1']"", ""PROJECT['galleys promise of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['galleys']"", ""FILTER['#1', 'that the Ottoman Empire promised']"", ""FILTER['#1', 'that France promised']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]"
DROP_dev_history_130_6301f49b-d798-4650-a525-1b6da163878b,Which country in the Franco-Ottoman Alliance sent more troops?,"[""SELECT['the Franco-Ottoman Alliance']"", ""PROJECT['countries of #REF', '#1']"", ""PROJECT['troops sent of #REF', '#2']"", ""GROUP['count', '#3', '#2']"", ""COMPARATIVE['#2', '#4', 'is the highest']""]","[""SELECT['the Franco-Ottoman Alliance']"", ""PROJECT['countries in #REF', '#1']"", ""PROJECT['troops sent of #REF', '#2']"", ""GROUP['count', '#3', '#2']"", ""COMPARATIVE['#2', '#4', 'is the highest']""]"
DROP_dev_history_130_9f2384d5-f8b0-4d70-87d3-6cf9f83917b6,Which country offered its naval services?,"[""SELECT['countries']"", ""FILTER['#1', 'that offered its naval services']""]","[""SELECT['countries']"", ""PROJECT['naval services of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is the highest']""]"
DROP_dev_history_130_c3dd4124-47d5-417d-bf42-216116cf9f99,How many years would pass between Polin becoming the ambassador in Constantinople before the Siege of Nice?,"[""SELECT['Polin becoming the ambassador in Constantinople']"", ""SELECT['the Siege of Nice']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['polin becoming the ambassador in Constantinople']"", ""SELECT['the Siege of Nice']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]"
DROP_dev_history_130_fd0797d0-7852-4e93-aaa2-6d7a8d54716f,Which country would both the Ottoman Empire and France attack directly?,"[""SELECT['the Ottoman Empire']"", ""SELECT['France']"", ""SELECT['countries']"", ""FILTER['#3', 'that #1 attacks directly']"", ""FILTER['#3', 'that #2 attacks directly']"", ""INTERSECTION['#3', '#4', '#5']""]","[""SELECT['the Ottoman Empire']"", ""SELECT['France']"", ""PROJECT['country directly attacked of #REF', '#1']"", ""PROJECT['country directly attacked of #REF', '#2']"", ""SELECT['country']"", ""INTERSECTION['#5', '#3', '#4']""."
DROP_dev_history_1306_cf084a28-2e17-4b61-a65b-95fb1afff749,"By 2014, how many Georgians were actually able to return to their homes?","[""SELECT['Georgians']"", ""FILTER['#1', 'that were able to return to their homes By 2014']"", ""AGGREGATE['count', '#2']""]","[""SELECT['Georgians']"", ""FILTER['#1', 'that were able to return to their homes By 2014']"", ""AGGREGATE['count', '#2']""]."
DROP_dev_history_1308_448feacf-a245-4b03-ab0b-7be6e7c8e3e4,How many planes did Russia lose in total according to Russia?,"[""SELECT['Russia']"", ""PROJECT['planes lost of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['Russia']"", ""PROJECT['planes lost in #REF', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_history_1308_60a3dce8-5c9d-4828-aceb-ebb184b618b3,How many pieces of Russian ground equipment were estimated to be lost?,"[""SELECT['Russian ground equipment']"", ""PROJECT['pieces of #REF', '#1']"", ""FILTER['#2', 'that were estimated to be lost']"", ""AGGREGATE['count', '#3']""]","[""SELECT['Russian ground equipment']"", ""FILTER['#1', 'that were estimated to be lost']"", ""PROJECT['pieces of #REF', '#2']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_history_1308_890c83a8-4c11-45bd-a641-e650d537b3cf,How many was the combined Su-25 strike aircraft and Tu-22M3 long-range bomber were lost?,"[""SELECT['the Su-25 strike aircraft']"", ""SELECT['the Tu-22M3 long-range bomber']"", ""FILTER['#1', 'that was lost']"", ""FILTER['#2', 'that was lost']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['sum', '#5', '#6']""]","[""SELECT['the Su-25 strike aircraft']"", ""SELECT['the Tu-22M3 long-range bomber']"", ""DISCARD['#1', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['sum', '#5', '#6']""]"
DROP_dev_history_1308_f36bae23-6b4b-46de-bc9a-7fcc233905da,"How many tanks, armoured and non-armoured loses were estimated to have been lost?","[""SELECT['tanks']"", ""SELECT['armoured loses']"", ""SELECT['non-armoured loses']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""ARITHMETIC['sum', '#3', '#4']""]","[""SELECT['tanks']"", ""SELECT['armoured loses']"", ""SELECT['non-armoured loses']"", ""FILTER['#1', 'estimated to have been lost']"", ""FILTER['#3', 'estimated to have been lost']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""ARITHMETIC['sum', '#6', '#7']""]"
DROP_dev_history_1308_f38b1fcc-2e23-4e3f-9d24-541e6f4c7a30,How many aircraft loses did Moscow Defence Brief estimate?,"[""SELECT['Moscow Defence Brief']"", ""PROJECT['aircraft loses estimate of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['Moscow Defence Brief']"", ""PROJECT['aircraft loses estimated of #REF', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_history_131_54dde962-9113-431c-be42-112a9cfbddbe,"Where did the French fleet go first, Italy of Constantinople?","[""SELECT['the French fleet did go to Italy of Constantinople']"", ""PROJECT['when was #REF', '#1']"", ""AGGREGATE['min', '#2']""]","[""SELECT['the French fleet did go to Italy of Constantinople']"", ""PROJECT['when was #REF', '#1']"", ""COMPARISON['min', '#2', '#3']""]"
DROP_dev_history_131_64918f8e-6a66-4579-984d-b978aee999a6,"On his way to Constantinople, how many cities did Polin laid waste to?","[""SELECT['Polin']"", ""PROJECT['cities laid waste to of #REF', '#1']"", ""FILTER['#2', 'On his way to Constantinople']"", ""AGGREGATE['count', '#3']""]","[""SELECT['Polin']"", ""PROJECT['cities #REF laid waste to', '#1']"", ""FILTER['#2', 'on his way to Constantinople']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_history_131_768b1525-26ab-4aff-b112-3b0e5612f0b1,Who attacked on west coast Italy?,"[""SELECT['Italy']"", ""PROJECT['west coast of #REF', '#1']"", ""PROJECT['who attacked #REF', '#2']""]","[""SELECT['Italy']"", ""PROJECT['the west coast of #REF', '#1']"", ""PROJECT['who attacked #REF', '#2']""]"
DROP_dev_history_131_ccaa6255-bc55-4ee9-bc4e-daa657ceddb6,How many cities did Barbarossa destroy?,"[""SELECT['Barbarossa']"", ""PROJECT['cities that #REF did destroy', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['Barbarossa']"", ""PROJECT['cities that #REF destroys', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_history_131_ded5dbb8-447f-4030-8704-78c8092301db,"What happened first, Polin arriving in Constantinople or Polin back to Toulon?","[""SELECT['Polin arriving in Constantinople']"", ""SELECT['Polin back to Toulon']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]","[""SELECT['Polin arriving in Constantinople']"", ""SELECT['Polin returning to Toulon']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]"
DROP_dev_history_1313_1638a290-f1dd-4cd7-bb7a-227d900b18e8,what was this seen as for the Romanov autocracy,"[""SELECT['the Romanov autocracy']"", ""PROJECT['what was this seen as for #REF', '#1']""]","[""SELECT['the Romanov autocracy']"", ""PROJECT['what was seen as for #REF', '#1']""]"
DROP_dev_history_1313_797e963c-52f2-4f8e-ba70-5a382cda0d85,How many revolutions did Russia suffer in the early 20th century?,"[""SELECT['Russia']"", ""PROJECT['revolutions of #REF', '#1']"", ""FILTER['#2', 'in the early 20th century']"", ""AGGREGATE['count', '#3']""]","[""SELECT['Russia']"", ""PROJECT['revolutions that #REF suffer', '#1']"", ""FILTER['#2', 'in the early 20th century']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_history_1313_ba522776-2428-4a77-b794-2268c578d5ec,"Which army had the least soldiers, Russian or Japanese?","[""SELECT['the Russian army']"", ""SELECT['the Japanese army']"", ""PROJECT['soldiers of #REF', '#1']"", ""PROJECT['soldiers of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""COMPARISON['min', '#5', '#6']""]","[""SELECT['armies']"", ""PROJECT['soldiers of #REF', '#1']"", ""FILTER['#2', 'that were Russian']"", ""FILTER['#2', 'that were Japanese']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""COMPARISON['min', '#5', '#6']""]"
DROP_dev_history_1316_20e698e1-9c93-4524-a5fd-08c7cc9b51a8,How many years did the Russo-Swedish war go on?,"[""SELECT['the Russo-Swedish war']"", ""PROJECT['years of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['the Russo-Swedish war']"", ""PROJECT['years that #REF go on', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_history_1316_59abb4d4-0e9e-4a5c-9653-44b06eaa2113,What country did King Charles X rule over in 1655?,"[""SELECT['King Charles X']"", ""PROJECT['country that #REF rule over', '#1']"", ""FILTER['#2', 'in 1655']""]","[""SELECT['King Charles X']"", ""PROJECT['country of #REF', '#1']"", ""FILTER['#2', 'in 1655']""]"
DROP_dev_history_1316_f548401d-a665-42b2-b20f-2ee88cc01872,What happened first: kingdom of Sweden invading Poland or Vyhovsky defeating Trubetskoy's army?,"[""SELECT['the kingdom of Sweden invading Poland']"", ""SELECT['Vyhovsky defeating Trubetskoy s army']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]","[""SELECT['King of Sweden invading Poland']"", ""SELECT['Vyhovsky defeating Trubetskoy s army']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]"
DROP_dev_history_1340_8293caf0-5c95-44ef-8c22-11ad5fd7595e,How many years after the Protestation at Speyer did the Lutheran Augsburg Confession take place?,"[""SELECT['the Protestation at Speyer']"", ""SELECT['the Lutheran Augsburg Confession did take place']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['the Protestation at Speyer']"", ""SELECT['the Lutheran Augsburg Confession did take place']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]"
DROP_dev_history_1340_8cc1ddae-fc57-452f-8bc9-e5f03b5b2146,How many years did it take to sign the Treaty of Crépy after the Lutheran Augsburg Confession?,"[""SELECT['the Lutheran Augsburg Confession']"", ""PROJECT['year that it take to sign the Treaty of Crépy after #REF', '#1']"", ""ARITHMETIC['difference', '#2', '#3']""]","[""SELECT['the Lutheran Augsburg Confession']"", ""PROJECT['year that it take to sign the Treaty of Crépy after #REF', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_history_1340_bcb2b367-f09b-4610-831e-973ba02c833d,"Which happened first, the establishment of the Schmalkaldic League, or the Treaty of Crépy?","[""SELECT['the establishment of the Schmalkaldic League']"", ""SELECT['the Treaty of Crépy']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]","[""SELECT['the establishment of the Schmalkaldic League']"", ""SELECT['The Treaty of Crépy']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]"
DROP_dev_history_1340_f0cb13ce-b5c9-4a59-9335-c87bf5bc011a,Whose Apology was rejected by Charles V?,"[""SELECT['Charles V']"", ""PROJECT['who rejected #REF', '#1']"", ""PROJECT['Apology of #REF', '#2']""]","[""SELECT['Charles V']"", ""PROJECT['Apology rejected by #REF', '#1']"", ""PROJECT['Whose was #REF', '#2']""."
DROP_dev_history_1352_7b83ff8b-36c8-4b85-80e0-40e3ad25d010,How many more troops did Grey de Wilton have when he arrived in Smerwick compared to Sebastiano di San Giuseppe?,"[""SELECT['Grey de Wilton']"", ""SELECT['Sebastiano di San Giuseppe']"", ""PROJECT['troops of #REF', '#1']"", ""PROJECT['troops of #REF', '#2']"", ""FILTER['#3', 'when he arrived in Smerwick']"", ""FILTER['#4', 'when he arrived in Smerwick']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#6']"", ""ARITHMETIC['difference', '#7', '#8']""]","[""SELECT['Grey de Wilton']"", ""SELECT['Sebastiano di San Giuseppe']"", ""PROJECT['troops of #REF', '#1']"", ""PROJECT['troops of #REF', '#2']"", ""FILTER['#3', 'when he arrived in Smerwick']"", ""FILTER['#4', 'when he arrived in Smerwick']"", ""ARITHMETIC['difference', '#5', '#6']""]"
DROP_dev_history_1352_d1397441-2f73-4c7b-8ad5-0cbef7a35ea9,"Who landed in Smerwick later, Fitzmaurice or Sebastiano di San Giuseppe?","[""SELECT['Fitzmaurice landed in Smerwick']"", ""SELECT['Sebastiano di San Giuseppe landed in Smerwick']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['max', '#3', '#4']""]","[""SELECT['Fitzmaurice landed in Smerwick']"", ""PROJECT['when was #REF', '#1']"", ""SELECT['Sebastiano di San Giuseppe landed in Smerwick']"", ""PROJECT['when was #REF', '#3']"", ""COMPARISON['max', '#2', '#4']""]"
DROP_dev_history_1352_e4d11a90-2b7e-47c0-a1c8-901c885ff5ea,How many months into the year of 1580 did commander Di san Giuseppe surrender?,"[""SELECT['commander Di san Giuseppe did surrender']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['month of #REF', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]","[""SELECT['commander Di san Giuseppe did surrender']"", ""PROJECT['month of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]"
DROP_dev_history_1356_d9144b3d-faaf-49dd-8189-5cc3ffeb19fa,"Where did the Spanish defeat happen second, Melilla or Lobo Canyon?","[""SELECT['the Spanish defeat did happen in Melilla']"", ""SELECT['the Spanish defeat did happen in Lobo Canyon']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['max', '#3', '#4']""]","[""SELECT['the Spanish defeat was in Melilla']"", ""SELECT['the Spanish defeat was in Lobo Canyon']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['max', '#3', '#4']""]"
DROP_dev_history_1356_de7546a7-717a-4e90-bbe1-c50cf0144fde,How many men died if Colonel Cabrera and 26 men were killed?,"[""SELECT['Colonel Cabrera']"", ""SELECT['men killed']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""ARITHMETIC['sum', '#3', '#4']""]","[""SELECT['Colonel Cabrera']"", ""PROJECT['men killed of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""SELECT['men killed of 26']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['sum', '#5', '#3']""]"
DROP_dev_history_1373_18607572-dd53-4db5-9aee-2e24acc7324a,How many months passed between the Battle of Changde and the Allied attack in Italy?,"[""SELECT['the Battle of Changde']"", ""SELECT['the Allied attack in Italy']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['Battle of Changde']"", ""SELECT['Allied attack in Italy']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]"
DROP_dev_history_1373_3994c80e-788b-4bdf-a34c-ba1a44dbca5f,The Allies launched a series of attacks in Italy against the line at Monte Cassino how many years after the Chinese forces besieged Japanese troops in Myitkyina.?,"[""SELECT['the Chinese forces besieged Japanese troops in Myitkyina']"", ""SELECT['The Allies launched a series of attacks in Italy against the line at Monte Cassino']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['the Chinese forces besieged Japanese troops in Myitkyina']"", ""SELECT['the Allies launched a series of attacks in Italy against the line at Monte Cassino']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]"
DROP_dev_history_1373_7369cb1e-e329-45eb-a2ea-c689e68e6a78,In what month did the Battle of Cahngde end?,"[""SELECT['the Battle of Cahngde']"", ""PROJECT['when did #REF end', '#1']"", ""PROJECT['month of #REF', '#2']""]","[""SELECT['the Battle of Cahngde']"", ""PROJECT['end of #REF', '#1']"", ""PROJECT['month of #REF', '#2']""]"
DROP_dev_history_1373_98e5fe66-50b1-4801-8cf9-e5a28678a47c,"Which happened first in 1944, allies attacking at Monte Cassino or the British counteroffensive against the Japanese?","[""SELECT['allies attacking at Monte Cassino']"", ""SELECT['the British counteroffensive against the Japanese']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]","[""SELECT['the allies attacking at Monte Cassino in 1944']"", ""SELECT['the British counteroffensive against the Japanese in 1944']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]"
DROP_dev_history_1373_9a566b07-49d7-4f49-b062-557aec51d7d6,"Which happened first in 1944, the allies attacking at Monte Cassino or the Soviets liberating Crimea?","[""SELECT['the allies attacking at Monte Cassino in 1944']"", ""SELECT['the Soviets liberating Crimea in 1944']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]","[""SELECT['allies attacking at Monte Cassino']"", ""SELECT['the Soviets liberating Crimea']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]"
DROP_dev_history_1373_b7dfb97b-9654-4856-b3e0-c0bbc78d2dff,"What happened first, The German forces were expelled from the Leningrad region or the Japanese launched the first of two invasions?","[""SELECT['the German forces were expelled from the Leningrad region']"", ""SELECT['the Japanese launched the first of two invasions']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]","[""SELECT['German forces were expelled from the Leningrad region']"", ""SELECT['Japanese launched the first of two invasions']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']?""]"
DROP_dev_history_1401_2500b5ab-4b76-454a-8a03-01873e6bffd1,What was built with the approval of King Narai?,"[""SELECT['what was built']"", ""FILTER['#1', 'with the approval of King Narai']""]","[""SELECT['King Narai']"", ""PROJECT['what was built with #REF approval', '#1']""]"
DROP_dev_history_1401_25e390dd-4b69-4a92-b50a-ee918038abd9,"Which happened first, the building of the hospital in Thailand, or Pallu's trip to France?","[""SELECT['the building of the hospital in Thailand']"", ""SELECT['Pallu s trip to France']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]","[""SELECT['building of the hospital in Thailand']"", ""SELECT['Pallu s trip to France']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]"
DROP_dev_history_1401_b50bf6f4-6892-4baf-9833-71f4bc7ddce5,How many years did it take after arriving for the seminary to be built in Ayutthaya?,"[""SELECT['arriving to Ayutthaya']"", ""SELECT['the seminary was built in Ayutthaya']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['arriving to Ayutthaya']"", ""SELECT['the seminary was built in Ayutthaya']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]"
DROP_dev_history_1401_c306ad76-1573-4adb-95d6-482d6e8c844a,How many Christian communities did the mission take care of in Thailand?,"[""SELECT['Thailand']"", ""PROJECT['the mission of #REF', '#1']"", ""PROJECT['Christian communities of #REF', '#2']"", ""AGGREGATE['count', '#3']""]","[""SELECT['Thailand']"", ""PROJECT['the mission of #REF', '#1']"", ""PROJECT['Christian communities that #REF take care of', '#2']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_history_1408_26056c37-6347-4593-83de-4e0ba620d507,Which fort was not at the entrance of the bay?,"[""SELECT['forts']"", ""SELECT['the bay']"", ""PROJECT['the entrance of #REF', '#2']"", ""FILTER['#1', 'at #3']"", ""DISCARD['#1', '#4']""]","[""SELECT['forts']"", ""SELECT['bay']"", ""PROJECT['the entrance of #REF', '#2']"", ""FILTER['#1', 'at #3']"", ""DISCARD['#1', '#4']""]"
DROP_dev_history_1408_7b6e7625-a8ba-4cde-8496-1f6c222b2bc9,How many years were the Dutch at war over the Pescadores?,"[""SELECT['the Dutch were at war over the Pescadores']"", ""PROJECT['years of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['Dutch were at war over the Pescadores']"", ""PROJECT['years of #REF', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_history_1408_9e7c6934-6115-4c31-80dd-2908cec2e281,How many years passed between the beginning of the war over the Pescadores and the Battle of Liaoluo Bay?,"[""SELECT['the beginning of the war over the Pescadores']"", ""SELECT['the Battle of Liaoluo Bay']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['the beginning of the war over the Pescadores']"", ""SELECT['the Battle of Liaoluo Bay']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]"
DROP_dev_history_1408_b0e976b4-4b36-4553-aa26-1fd95eaf24ba,How many years was the Dutch at war over the Pescadores?,"[""SELECT['the Dutch was at war over the Pescadores']"", ""PROJECT['years of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['the Dutch was at war over the Pescadores']"", ""PROJECT['year of #REF', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_history_1414_41b6dc7f-b458-43c8-8be6-af0b94247ff8,"What happened first, the Siege of Vienna or the Battle of Vienna?","[""SELECT['the Siege of Vienna']"", ""SELECT['the Battle of Vienna']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]","[""SELECT['the Siege of Wien']"", ""SELECT['the Battle of Vienna']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]"
DROP_dev_history_1414_45c95f84-92e4-4d83-b426-894687613da0,When did the Great Turkish War end?,"[""SELECT['the Great Turkish War']"", ""PROJECT['when did #REF end', '#1']""]","[""SELECT['The Great Turkish War']"", ""PROJECT['when did #REF end', '#1']""]"
DROP_dev_history_1414_8b2fb816-ef2b-4615-bc2b-26bc3db390eb,"What happened last, the annexation of Central Hungary or the Siege of Vienna?","[""SELECT['the annexation of Central Hungary']"", ""SELECT['the Siege of Vienna']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['max', '#3', '#4']""]","[""SELECT['the annexation of Central Hungary']"", ""PROJECT['when was #REF', '#1']"", ""SELECT['the Siege of Vienna']"", ""PROJECT['when was #REF', '#3']"", ""COMPARISON['max', '#2', '#4']""]"
DROP_dev_history_1415_46dc098d-a5cc-4ec0-92ed-376a4a5ca13f,What battle started last: Battle of Vienna or Battle of Mohács?,"[""SELECT['the Battle of Vienna started']"", ""SELECT['the Battle of Mohács started']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['max', '#3', '#4']""]","[""SELECT['the Battle of Vienna began']"", ""SELECT['the Battle of Mohács started']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['max', '#3', '#4']""]"
DROP_dev_history_1415_6629ae4d-99a4-4786-a8e8-4c0d723dc231,What year did the Great Turkish War end?,"[""SELECT['the Great Turkish War']"", ""PROJECT['when did #REF end', '#1']"", ""PROJECT['year of #REF', '#2']""]","[""SELECT['the Great Turkish War did end']"", ""PROJECT['year of #REF', '#1']""]"
DROP_dev_history_1415_da327876-e93a-4559-954c-ccf4ebc8c340,What battle started first: Battle of Vienna or Battle of Mohács?,"[""SELECT['the Battle of Vienna started']"", ""SELECT['the Battle of Mohács started']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]","[""SELECT['the Battle of Vienna started']"", ""SELECT['the Battle of Mohács started']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]."
DROP_dev_history_1416_00aea763-fa4c-4ed2-b06f-07a72a8b2674,"Which were there less of, scholars or scribes?","[""SELECT['scholastics']"", ""SELECT['scribes']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""COMPARISON['min', '#3', '#4']""]","[""SELECT['scholarlys']"", ""SELECT['scribes']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""COMPARISON['min', '#3', '#4']""]"
DROP_dev_history_1416_8b5b7708-d985-4aa1-b929-824bb6585c7f,"Who the smallest group of people, 3,826 scribes or 361 scholars?","[""SELECT['groups of people']"", ""FILTER['#1', 'that is 3 826 scribes']"", ""FILTER['#1', 'that is 361 scholars']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['min', '#4', '#5']""]","[""SELECT['groups of people']"", ""FILTER['#1', 'that are 3 826 scribes']"", ""FILTER['#1', 'that are 361 scholars']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['min', '#4', '#5']""]"
DROP_dev_history_1416_9794f852-dd26-404f-94f4-40712929bdd8,How many more scribes than scholars were in the editorial board created in march of 1773?,"[""SELECT['editorial board']"", ""FILTER['#1', 'created in march of 1773']"", ""PROJECT['scribes in #REF', '#2']"", ""PROJECT['scholastics in #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['editorial board']"", ""FILTER['#1', 'created in march of 1773']"", ""PROJECT['scribes in #REF', '#2']"", ""PROJECT['scholastics in #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#6', '#5']""]"
DROP_dev_history_1418_10cde81d-e30c-4b05-97fb-a45bbeaa2f08,How many years after the 1537 inheritance treaty did Frederick William lay claim to the Silesian principalities?,"[""SELECT['the 1537 inheritance treaty']"", ""SELECT['Frederick William lay claim to the Silesian principalities']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['the 1537 inheritance treaty']"", ""SELECT['Frederick William lay claim to the Silesian principalities']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]"
DROP_dev_history_1418_420b781d-2cc5-4ddc-a7d2-6359f39c50be,which war took place last?,"[""SELECT['wars']"", ""FILTER['#1', 'that took place last']""]","[""SELECT['wars']"", ""FILTER['#1', 'that was last']""]"
DROP_dev_history_1418_4c3efdfd-2782-4b9c-8322-8e11bd3c165b,How many duchies were to pass to the Electorate of Brandenburg?,"[""SELECT['duchies']"", ""FILTER['#1', 'that were to pass to the Electorate of Brandenburg']"", ""AGGREGATE['count', '#2']""]","[""SELECT['duchies']"", ""FILTER['#1', 'that was to pass to the Electorate of Brandenburg']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_history_1418_8c68be67-a833-4e13-8e5e-fff173e4b59f,How many years passed from the inheritance treat to when the Emperor took back control of Schwiebus?,"[""SELECT['the inheritance treat']"", ""SELECT['the Emperor took back control of Schwiebus']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['the inheritance treat']"", ""SELECT['when the Emperor took back control of Schwiebus']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]"
DROP_dev_history_1418_8ca5f85e-087c-42a9-8c0e-31bb3fee3fb2,How many years before Austria was engaged in the Great Turkish War was the battle of white mountain won?,"[""SELECT['Austria was engaged in the Great Turkish War']"", ""SELECT['the battle of white mountain was won']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['Austria was engaged in the Great Turkish War']"", ""SELECT['the battle of white mountain was won']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]"
DROP_dev_history_1418_9b1e4b5e-e298-45f1-96cf-784fb666780f,"What event happened second, the Battle of White Mountain or Joachim III Frederick inheriting the Silesian Duchy of Jägerndorf?","[""SELECT['the Battle of White Mountain']"", ""SELECT['Joachim III Frederick inheriting the Silesian Duchy of Jägerndorf']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['max', '#3', '#4']""]","[""SELECT['the Battle of White Mountain']"", ""SELECT['joachim III Frederick inheriting the Silesian Duchy of Jägerndorf']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['max', '#3', '#4']""]"
DROP_dev_history_1418_aead5484-e92d-4a0c-971e-cb6db8d38e39,Which two wars are mentioned?,"[""SELECT['wars']"", ""FILTER['#1', 'that are mentioned']""]","[""SELECT['wars mentioned']"", ""PROJECT['two #REF', '#1']?""]"
DROP_dev_history_1418_d76fe77e-d674-4cab-a8f1-fd18e5bf66a8,How many years passed of the inheritance treaty being signed and the Emperor taking back control of Schwiebus?,"[""SELECT['the inheritance treaty being signed']"", ""SELECT['the Emperor taking back control of Schwiebus']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['the inheritance treaty was signed']"", ""SELECT['the Emperor taking back control of Schwiebus']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]"
DROP_dev_history_1418_da95efc1-0a9d-4232-9af5-68dc6e3e69df,How many wars are mentioned?,"[""SELECT['wars mentioned']"", ""AGGREGATE['count', '#1']""]","[""SELECT['wars mention']"", ""AGGREGATE['count', '#1']""]"
DROP_dev_history_1423_20222a55-434f-4fc2-93c4-4b44f2fd228e,What changed the tides for China?,"[""SELECT['China']"", ""PROJECT['tide of #REF', '#1']"", ""PROJECT['what changed #REF', '#2']""]","[""SELECT['China']"", ""PROJECT['what changed the tides for #REF', '#1']""]"
DROP_dev_history_1423_2ca4b84c-1253-4e85-8758-450a633de9b7,"What came first, Mind Dynasty conquering Yunnan borderlands or Burmese control of the Shan States?","[""SELECT['the Mind Dynasty conquering Yunnan borderlands']"", ""SELECT['the Burmese control of the Shan States']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]","[""SELECT['mind Dynasty conquering Yunnan borderlands']"", ""SELECT['Burmese control of the Shan States']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]"
DROP_dev_history_1423_467fef33-4114-4469-b674-6f7ef714ba06,How many years did the Ming dynasty first conquered Yunnan borderlands between?,"[""SELECT['the Ming dynasty conquered Yunnan borderlands']"", ""PROJECT['years of #REF', '#1']"", ""AGGREGATE['min', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]","[""SELECT['the Ming dynasty conquered Yunnan borderlands']"", ""PROJECT['years of #REF', '#1']"", ""AGGREGATE['min', '#2']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_history_1423_52aa6668-87a0-45a0-a8e6-c754f06f9386,How many years after the Burmese took control of the Shan States did the situation turn to China's favor?,"[""SELECT['the Burmese took control of the Shan States']"", ""SELECT['the situation did turn to China s favor']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['the Burmese took control of the Shan States']"", ""SELECT['the situation turn to China s favor']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]"
DROP_dev_history_1423_931672d5-04e7-4b5e-8038-dd21baec7be0,What title of the Toungoo dynasty did Bayinnaung have?,"[""SELECT['the Toungoo dynasty']"", ""PROJECT['title of #REF', '#1']"", ""FILTER['#2', 'that Bayinnaung did have']""]","[""SELECT['the Toungoo dynasty']"", ""PROJECT['title of #REF', '#1']"", ""FILTER['#2', 'that Bayinnaung does have']""]"
DROP_dev_history_1423_95c75894-c71e-4ad5-8499-ea587b1a0986,What helped Qing decide to impose tighter control of the border regions?,"[""SELECT['Qing']"", ""PROJECT['what helped #REF decide to impose tighter control of the border regions', '#1']""]","[""SELECT['Qing']"", ""PROJECT['what helped #REF', '#1']"", ""FILTER['#2', 'that impose tighter control of the border regions']""]"
DROP_dev_history_1423_bf92136c-f7b3-443b-92df-d6d38d58a1a1,Which two countries were the borderlands between?,"[""SELECT['borderlands']"", ""PROJECT['countries that were between #REF', '#1']""]","[""SELECT['borderlands']"", ""PROJECT['countries of #REF', '#1']"", ""FILTER['#2', 'that were between two']""]"
DROP_dev_history_1423_d983e75f-fa60-4072-9b05-fde8771cb731,"What event happened first, the Ming dynasty first conquering Yunnan borderlands, or The Burmese control of the Shan States?","[""SELECT['the Ming dynasty conquering Yunnan borderlands']"", ""SELECT['the Burmese control of the Shan States']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]","[""SELECT['Ming dynasty conquering Yunnan borderlands']"", ""SELECT['The Burmese control of the Shan States']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]"
DROP_dev_history_1423_def573d3-68e4-411c-81e0-327ef19ffec3,How many years was the time span when the Ming dynasty first conquered the Yunnan borderlands?,"[""SELECT['the Ming dynasty first conquered the Yunnan borderlands']"", ""PROJECT['time span of #REF', '#1']"", ""PROJECT['years of #REF', '#2']"", ""AGGREGATE['count', '#3']""]","[""SELECT['the Ming dynasty first conquered the Yunnan borderlands']"", ""PROJECT['time span of #REF', '#1']"", ""PROJECT['years of #REF', '#2']"", ""AGGREGATE['min', '#3']""]"
DROP_dev_history_1425_4e54b444-97a2-46f6-b7ba-2c37b7ff0bad,Who joined the Green Standard troops to besiege Kengtung?,"[""SELECT['the Green Standard troops']"", ""PROJECT['who joined #REF', '#1']"", ""FILTER['#2', 'to besiege Kengtung']""]","[""SELECT['Kengtung']"", ""PROJECT['who joined the Green Standard troops to besiege #REF', '#1']""]"
DROP_dev_history_1425_761fe680-9e36-4b78-968e-e89e5fe779dc,"Where was the 20,000 strong Burmese army when Kentung was invaded by Liu in December 1765?","[""SELECT['the 20, 000 strong Burmese army']"", ""PROJECT['Where was #REF', '#1']"", ""FILTER['#2', 'when Kentung was invaded by Liu in December 1765']""]","[""SELECT['the 20, 000 strong Burmese army']"", ""PROJECT['where was #REF', '#1']"", ""FILTER['#2', 'when Kentung was invaded by Liu in December 1765']""]"
DROP_dev_history_1425_83d7a306-12c9-44db-815d-dfa2559158f1,"Which did Ne Myo Sithu do first, returned to Ava or left Kengtung?","[""SELECT['Ne Myo Sithu returned to Ava']"", ""SELECT['Ne Myo Sithu left Kengtung']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]","[""SELECT['Ne Myo Sithu returns to Ava']"", ""SELECT['Ne Myo Sithu leaves Kengtung']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]"
DROP_dev_history_1450_315f385f-77dd-4c14-b7fd-410acdc605aa,What did  AjK'ixaw become?,"[""SELECT['AjKixaw']"", ""PROJECT['what did #REF become', '#1']""]","[""SELECT['ajKixaw']"", ""PROJECT['what did #REF become', '#1']""]"
DROP_dev_history_1450_684416af-6cbf-44ee-8fd8-82c1a4f887f3,How many of the 150 men were not sick?,"[""SELECT['men']"", ""FILTER['#1', 'that were sick']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]","[""SELECT['men']"", ""FILTER['#1', 'that were sick']"", ""DISCARD['#1', '#2']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_history_1450_778e9761-1bc6-4233-b711-8d2a85ef58e8,How many days after Amésqueta marched his men through torrential rain from Cahabón to Mopán did they set out from Mopán leaving sick soldiers behind?,"[""SELECT['Amésqueta marched his men through torrential rain from Cahabón to Mopán']"", ""SELECT['they set out from Mopán leaving sick soldiers behind']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['Amesqueta marched his men through torrential rain from Cahabón to Mopán']"", ""SELECT['they set out from Mopán leaving sick soldiers behind']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]"
DROP_dev_history_1450_7a2dc15d-dad5-4886-96f1-5d67686bad09,How many fighters did Diaz have with 49 soldiers and 34 porters and archers?,"[""SELECT['Diaz']"", ""PROJECT['fighters of #REF', '#1']"", ""PROJECT['soldiers of #REF', '#2']"", ""PROJECT['porters of #REF', '#2']"", ""PROJECT['archers of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""ARITHMETIC['sum', '#6', '#7']"", ""ARITHMETIC['difference', '#8', '#9']""]","[""SELECT['Diaz']"", ""PROJECT['fighters of #REF', '#1']"", ""PROJECT['soldiers of #REF', '#2']"", ""PROJECT['porters of #REF', '#2']"", ""PROJECT['archers of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['sum', '#5', '#6']"", ""ARITHMETIC['difference', '#7', '#8']""]"
DROP_dev_history_1450_86724d12-e859-41b5-bea2-4b2d2441a21d,How many months after harsh criticism of Juan Diaz de Velasco's retreat from near Lake Petén Itzá did Barrios die?,"[""SELECT['Hard criticism of Juan Diaz de Velasco s retreat from near Lake Petén Itzá']"", ""SELECT['Barrios did die']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['Juan Diaz de Velasco s harsh criticism of Juan Diaz de Velasco s retreat from near Lake Petén Itzá']"", ""SELECT['Barrios did die']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]"
DROP_dev_history_1450_8be3e663-e0a6-41c6-9f2b-55f9a60bc54d,How many men of the twenty-five of his 150 men that were sick are still healthy?,"[""SELECT['his 150 men']"", ""FILTER['#1', 'that were sick']"", ""PROJECT['men of #REF', '#2']"", ""FILTER['#3', 'that are still healthy']"", ""AGGREGATE['count', '#4']""]","[""SELECT['his 150 men who were sick']"", ""PROJECT['men of #REF', '#1']"", ""FILTER['#2', 'that are still healthy']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_history_1450_cf455cf1-0221-45c3-88ed-b0c768ed82c5,How many different military forces combined did Diaz have?,"[""SELECT['Diaz']"", ""PROJECT['military forces of #REF', '#1']"", ""PROJECT['different #REF', '#2']"", ""AGGREGATE['count', '#3']""]","[""SELECT['Dizaz']"", ""PROJECT['military forces of #REF', '#1']"", ""PROJECT['different #REF', '#2']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_history_1456_43297e2b-a90e-4011-beca-ec20d02a7407,How many years after the uprising in 1536 where many natives were killed did Archaeologists find their remains near Lima?,"[""SELECT['the uprising in 1536']"", ""SELECT['Archaeologists find their remains near Lima']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['the uprising in 1536 where many natives were killed']"", ""SELECT['Archaeologists find their remains near Lima']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]"
DROP_dev_history_1456_5c1c7fd1-4b12-4cad-b2de-0dfacbfe6725,Who did Tupac Huallpa succeed as Inca ruler?,"[""SELECT['Tupac Huallpa']"", ""PROJECT['who did #REF succeed as Inca ruler', '#1']""]","[""SELECT['Tupac Huallpa']"", ""PROJECT['who did succeed as Inca ruler of #REF', '#1']""]"
DROP_dev_history_1456_eb895e62-5303-497c-83c9-2b496ca5429a,"What happened second, the remains of about 70 men, women, and adolescents were found in the path of a planned expressway or evidence showing natives were killed with European weapons?","[""SELECT['the remains of about 70 men, women, and adolescents were found in the path of a planned expressway']"", ""SELECT['evidence showing natives were killed with European weapons']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['max', '#3', '#4']""]","[""SELECT['the remains of about 70 men and women were found in the path of a planned expressway']"", ""SELECT['evidence showing natives were killed with European weapons']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['max', '#3', '#4']""]"
DROP_dev_history_1459_41f62cab-b500-47d4-bcd2-c362916072e0,What were the settlements the Spanish established called?,"[""SELECT['settlements']"", ""FILTER['#1', 'that the Spanish established']"", ""PROJECT['what were #REF called', '#2']""]","[""SELECT['the Spanish']"", ""PROJECT['settlements #REF established', '#1']"", ""PROJECT['what were #REF called', '#2']""]"
DROP_dev_history_1459_c2115e30-fe10-428d-8e9f-81765a5feec6,How many more people lived in Acalan in 1525 compared to 1553?,"[""SELECT['people']"", ""FILTER['#1', 'that lived in Acalan']"", ""FILTER['#2', 'in 1525']"", ""FILTER['#2', 'in 1553']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['Acalan']"", ""PROJECT['people lived in #REF', '#1']"", ""FILTER['#2', 'in 1525']"", ""FILTER['#2', 'in 1553']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]"
DROP_dev_history_148_a8caa28a-01ba-40a3-8e14-b396260afe00,How many years after the revolution of 1890 did the next revolution follow for the Radical Civic Union?,"[""SELECT['the revolution of 1890']"", ""SELECT['the next revolution did follow for the Radical Civic Union']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['the revolution of 1890']"", ""SELECT['the next revolution follow for the Radical Civic Union']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]"
DROP_dev_history_148_c10dc4e4-5959-4ae6-b2e7-7a497d540b5f,"what happened first, the crisis deepened or they defeats suffered in the revolutions?","[""SELECT['the crisis deepened']"", ""SELECT['the defeats suffered in the revolutions']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]","[""SELECT['the crisis deepened']"", ""SELECT['the defeats suffered in the revolutions']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]."
DROP_dev_history_1498_387319a4-c482-452d-8574-9af49198cc2b,How many years after founding of Hughes/Donahue Gallery was Art Euphoric founded?,"[""SELECT['founding of Hughes/Donahue Gallery']"", ""SELECT['Art Euphoric was founded']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['foundation of Hughes/Donahue Gallery']"", ""SELECT['Art Euphoric was founded']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]"
DROP_dev_history_1498_50e0fabb-6321-47ec-8fd1-bd131fd84b1f,How many years between the first art gallery and the last one?,"[""SELECT['the first art gallery']"", ""SELECT['the last art gallery']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['the first art gallery']"", ""SELECT['the last art gallery']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]"
DROP_dev_history_1498_89fe8219-b100-4200-beff-e803747f2eb4,"Which art gallery came up last, Trescott Street Gallery or Art Euphoric?","[""SELECT['Trescott Street Gallery came up']"", ""SELECT['Art Euphoric came up']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['max', '#3', '#4']""]","[""SELECT['the Trescott Street Gallery came up']"", ""SELECT['the Art Euphoric came up']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['max', '#3', '#4']?""]"
DROP_dev_history_1498_ba577294-3be8-40b8-9c9b-7f10373cdf19,"Which gallery was founded first, Hughes/Donahue Gallery or Art Euphoric?","[""SELECT['the Hughes/Donahue Gallery was founded']"", ""SELECT['the Art Euphoric was founded']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]","[""SELECT['Houston/Donahue Gallery was founded']"", ""SELECT['Art Euphoric was founded']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]"
DROP_dev_history_1517_297f8e75-0278-4c15-99dd-2d5a1539fc76,How many times did the Liao dynasty have violent conflict between 1000 and 1010?,"[""SELECT['the Liao dynasty']"", ""PROJECT['violent conflicts of #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is higher than 1000']"", ""COMPARATIVE['#2', '#3', 'is lower than 1010']"", ""INTERSECTION['#2', '#4', '#5']"", ""AGGREGATE['count', '#6']""]","[""SELECT['the Liao dynasty']"", ""PROJECT['violent conflicts of #REF', '#1']"", ""FILTER['#2', 'betweenleftside 1000']"", ""FILTER['#3', 'betweenrightside 1010']"", ""AGGREGATE['count', '#4']""]"
DROP_dev_history_1517_459ec315-291d-4530-8e31-717998430478,How many years past since Khitans first invaded Korea to when they built a bridge over the Yalu River?,"[""SELECT['Khitans first invaded Korea']"", ""SELECT['they built a bridge over the Yalu River']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['Khitans first invaded Korea']"", ""SELECT['Khitans built a bridge over the Yalu River']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]"
DROP_dev_history_1517_4f0bf230-1adf-4973-bacb-41c3200e06f3,How many times was Korea attacked?,"[""SELECT['Korea']"", ""PROJECT['times attacked of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['Korea']"", ""PROJECT['attacks of #REF', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_history_1517_6cbe18a5-09e1-4eed-a56a-9cab4b240bea,Which two nations established friendly relations in 993?,"[""SELECT['nations']"", ""FILTER['#1', 'that established friendly relations in 993']""]","[""SELECT['nations']"", ""PROJECT['friendliness of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is established in 993']""]"
DROP_dev_history_1517_8c21d069-f785-4209-8614-60b19141afeb,What dynasty repulsed Song China?,"[""SELECT['Song China']"", ""PROJECT['dynasty that repulsed #REF', '#1']""]","[""SELECT['song China']"", ""PROJECT['dynasty that repulsed #REF', '#1']""]"
DROP_dev_history_1517_ab90ed9f-624c-4ebe-b5a2-e775565a0323,How many years passed since the Kitans invaded Korea to when the alliance was broken?,"[""SELECT['the Kitans invaded Korea']"", ""SELECT['the alliance was broken']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['Kitans invaded Korea']"", ""SELECT['the alliance was broken']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]"
DROP_dev_history_154_55197c09-fea5-4e8b-8303-9cd7d221dc35,How many months did the Republic of Aras last?,"[""SELECT['the Republic of Aras']"", ""PROJECT['months that #REF last', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['Republic of Aras']"", ""PROJECT['months that #REF last', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_history_154_b1f8f71a-bf7f-4332-a0d2-dd57fb4aa7a7,"What happened first the city of Nakhchivan being captured, or a cease-fire being signed.","[""SELECT['the city of Nakhchivan being captured']"", ""SELECT['a cease-fire being signed']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]","[""SELECT['cities']"", ""FILTER['#1', 'that is Nakhchivan being captured']"", ""SELECT['a cease-fire being signed']"", ""PROJECT['when was #REF', '#2']"", ""PROJECT['when was #REF', '#3']"", ""COMPARISON['min', '#4', '#5']""]"
DROP_dev_history_154_bce165b9-b457-4886-948a-5c4464a133ce,About how many months after the capture of Nakhchivan was the cease-fire signed?,"[""SELECT['the capture of Nakhchivan']"", ""SELECT['the cease-fire was signed']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['the capture of Nakhchivan']"", ""SELECT['the cease-fire was signed']"", ""PROJECT['month of #REF', '#1']"", ""PROJECT['month of #REF', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]"
DROP_dev_history_154_fe8a7760-6e36-4976-b223-84757163c032,How many months after Armenian troops captured the city of Nakhchivan and destroyed the Republic of Aras was a cease-fire signed?,"[""SELECT['Armenian troops captured the city of Nakhchivan and destroyed the Republic of Aras']"", ""SELECT['a cease-fire was signed']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['Armenian troops captured the city of Nakhchivan and destroyed the Republic of Aras']"", ""SELECT['a cease-fire signed']"", ""PROJECT['month of #REF', '#1']"", ""PROJECT['month of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]"
DROP_dev_history_1542_09af6e09-38f2-47f7-a3d5-055a779204a2,Who were King Amangkurat I two sons?,"[""SELECT['King Amangkurat I']"", ""PROJECT['sons of #REF', '#1']""]","[""SELECT['King Amangkurat I']"", ""PROJECT['sons of #REF', '#1']"", ""PROJECT['who were #REF', '#2']""]"
DROP_dev_history_1542_4d93ff5f-d1c5-4fb3-ad99-5692cd2aac70,Who was Pangeran Puger's father?,"[""SELECT['Pangeran Puger']"", ""PROJECT['father of #REF', '#1']""]","[""SELECT['Pandoran Puger']"", ""PROJECT['father of #REF', '#1']""]"
DROP_dev_history_1542_5433745b-d0d5-4dcd-bfc6-d94b36185234,How many years after Pangeran Puger took Plered did he surrender?,"[""SELECT['Pangeran Puger took Plered']"", ""SELECT['Pangeran Puger did surrender']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['Pandoran Puger took Plered']"", ""SELECT['Pandoran Puger did surrender']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]"
DROP_dev_history_1542_c8a637e5-6bb7-4d1d-91d2-d799b731b120,What was captured first: Plered or Trunajaya?,"[""SELECT['Plered was captured']"", ""SELECT['Trunajaya was captured']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]","[""SELECT['Plered captured']"", ""SELECT['Trunajaya captured']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]"
DROP_dev_history_1542_d3f893f0-b871-4da3-8bd5-ed11f4604c63,Who was born first: Amangkurat I or Amangkurat II?,"[""SELECT['Amangkurat I was born']"", ""SELECT['Amangkurat II was born']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]","[""SELECT['Amangkurat I born']"", ""SELECT['Amangkurat II born']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]"
DROP_dev_history_1542_ed3e7bd3-78f5-4ad3-b0af-cadcdacf99d6,Who was born last: Amangkurat I or Amangkurat II?,"[""SELECT['Amangkurat I was born']"", ""SELECT['Amangkurat II was born']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['max', '#3', '#4']""]","[""SELECT['Amangkurat I born']"", ""SELECT['Amangkurat II born']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['max', '#3', '#4']""]"
DROP_dev_history_1542_f143393e-1a89-4dd8-aae0-e5c102b1001a,"Which happened first, the defeat of the royal army at Gegodog, or the death of King Amangkurat?","[""SELECT['the defeat of the royal army at Gegodog']"", ""SELECT['the death of King Amangkurat']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]","[""SELECT['the defeat of the royal army in Gegodog']"", ""SELECT['the death of King Amangkurat']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]"
DROP_dev_history_1542_fe492d92-0945-4627-9f1f-c48eee07da55,"Who died later, Amangkurat I or Amangkurat II?","[""SELECT['Amangkurat I died']"", ""SELECT['Amangkurat II died']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['max', '#3', '#4']""]","[""SELECT['Aangkurat I died']"", ""SELECT['Aangkurat II died']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['max', '#3', '#4']""]"
DROP_dev_history_1552_cee3e6f4-ee7d-4611-9095-cc9af7b96a3f,"Who was a prince first, Dmitry Donskoy or Alexander Vasilyevich?","[""SELECT['Dmitry Donskoy was a prince']"", ""SELECT['Alexander Vasilyevich was a prince']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]","[""SELECT['Dmitry Donskoy was a prince']"", ""PROJECT['when was #REF', '#1']"", ""SELECT['Alexander Vasilyevich was a prince']"", ""PROJECT['when was #REF', '#3']"", ""COMPARISON['min', '#2', '#4']""]"
DROP_dev_history_1578_b4230db9-a914-4172-9489-c0f6ea85d583,How many years after becoming king did Baldwin get captured by Balak of Mardin?,"[""SELECT['Balder becoming king']"", ""SELECT['Balder get captured by Balak of Mardin']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['becoming king']"", ""SELECT['Baldwin get captured by Balak of Mardin']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]"
DROP_dev_history_1578_d3bc4a55-84c8-4379-a2df-610e30794d1a,How many years after Baldwin de Burg became Count of Edessa did he become King Baldwin II of Jerusalem?,"[""SELECT['Baldwin de Burg became Count of Edessa']"", ""SELECT['Baldwin de Burg become King Baldwin II of Jerusalem']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['Balder de Burg became Count of Edessa']"", ""SELECT['Balder de Burg become King Baldwin II of Jerusalem']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]"
DROP_dev_history_159_6055719c-1250-4962-97c1-270f66105e69,What kind of mines did Amiandos have?,"[""SELECT['Aamiandos']"", ""PROJECT['mines of #REF', '#1']"", ""PROJECT['kind of #REF', '#2']""]","[""SELECT['Amiandos']"", ""PROJECT['mines of #REF', '#1']"", ""PROJECT['kind of #REF', '#2']""]"
DROP_dev_history_159_6cdd230c-51c4-49db-9720-e322a57f1d46,Where was the secondary school?,"[""SELECT['secondary school']"", ""PROJECT['Where was #REF', '#1']""]","[""SELECT['secondary school']"", ""PROJECT['where was #REF', '#1']""]"
DROP_dev_history_159_a59f511c-2912-4089-b2b4-f2a47cd3c404,"Where were the copper mines, Mavrovouni and Skouriotissa or Amiandos?","[""SELECT['the copper mines were Mavrovouni and Skouriotissa']"", ""SELECT['the copper mines were Amiandos']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['max', '#3', '#4']""]","[""SELECT['the copper mines was Mavrovouni and Skouriotissa']"", ""SELECT['the copper mines was Amiandos']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['max', '#3', '#4']""]"
DROP_dev_history_1601_53469cfb-7516-4de2-80dd-6d8e496cedca,Where did the Portuguese army go after leaving Mérida?,"[""SELECT['the Portuguese army']"", ""PROJECT['where did #REF go', '#1']"", ""FILTER['#2', 'after leaving Mérida']""]","[""SELECT['the Portuguese army left Mérida']"", ""PROJECT['Where did #REF go', '#1']""]"
DROP_dev_history_1601_841d8b22-68ec-450e-a6a9-17d23665d7e8,How many more Knights were in Portuguese army than the Isabellian army?,"[""SELECT['the Portuguese army']"", ""SELECT['the Isabellian army']"", ""PROJECT['Knights of #REF', '#1']"", ""PROJECT['Knights of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['Knights']"", ""FILTER['#1', 'in Portuguese army']"", ""FILTER['#1', 'in Isabellian army']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]"
DROP_dev_history_1601_fd0ab58b-8ad0-4408-915b-1cbf3d8bda0e,How many more Portuguese Knights were killed than Isabellian Knights?,"[""SELECT['Portuguese Knights']"", ""SELECT['Isabelllian Knights']"", ""FILTER['#1', 'that were killed']"", ""FILTER['#2', 'that were killed']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['Portuguese Knights']"", ""SELECT['Isabelllian Knights']"", ""FILTER['#1', 'that were killed']"", ""FILTER['#3', 'that were killed']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]"
DROP_dev_history_1650_2a7434bc-8b5e-4670-8ab4-e2068d5eb24b,How many months after the Siege of Derry did the encounter at Dromore County Down take place?,"[""SELECT['the Siege of Derry']"", ""SELECT['the encounter at Dromore County Down']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['the Siege of Derry']"", ""SELECT['the encounter at Dromore County Down']"", ""PROJECT['month of #REF', '#1']"", ""PROJECT['month of #REF', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]"
DROP_dev_history_1650_729cba0a-fdee-4af3-902f-23d32937d503,"Who did Derry close the gates against on December 7th, 1688?","[""SELECT['Derry']"", ""PROJECT['who did #REF close the gates against', '#1']"", ""FILTER['#2', 'on December 7th 1688']""]","[""SELECT['Derry']"", ""PROJECT['who closed the gates against of #REF', '#1']"", ""FILTER['#2', 'on December 7th 1688']""]"
DROP_dev_history_1665_08df1bd0-67b7-4c99-aa78-a436da6963d4,who agreed to end the war?,"[""SELECT['the war']"", ""PROJECT['who agreed to end #REF', '#1']""]","[""SELECT['war']"", ""PROJECT['who agreed to end #REF', '#1']""]"
DROP_dev_history_1665_0e654ddb-d39f-45fc-982e-1b0bba2e2862,What government owned control of passages in the Carpathian Mountains before the end of the War?,"[""SELECT['the Carpathian Mountains']"", ""PROJECT['passes in #REF', '#1']"", ""PROJECT['government owned control of #REF', '#2']"", ""FILTER['#3', 'before the end of the War']""]","[""SELECT['the Carpathian Mountains']"", ""PROJECT['passages in #REF', '#1']"", ""PROJECT['government owned control of #REF', '#2']"", ""FILTER['#3', 'before the end of the War']""]"
DROP_dev_history_1665_134b6269-766a-4f73-be62-f0106ffae212,Who abandoned the province,"[""SELECT['the province']"", ""PROJECT['who abandoned #REF', '#1']""]","[""SELECT['the province']"", ""PROJECT['who abandoned #REF', '#1']?""]"
DROP_dev_history_1665_22ecbde3-dbc5-4092-a7fc-a9a5f657ea43,How many months into the year of 1918 did they re-enter the war?,"[""SELECT['they re-enter the war']"", ""PROJECT['months into #REF', '#1']"", ""AGGREGATE['min', '#2']""]","[""SELECT['the war']"", ""PROJECT['when did they re-enter #REF', '#1']"", ""PROJECT['month of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]"
DROP_dev_history_1665_5473e162-5f44-4d32-bdb4-3ad76b4b0c6a,How many months after Romanian forces established control over Bessarabia did Romania formally attach Bessarabia?,"[""SELECT['Romanian forces established control over Bessarabia']"", ""SELECT['Romania did formally attach Bessarabia']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['Romanian forces established control over Bessarabia']"", ""SELECT['Romania did formally attach Bessarabia']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]"
DROP_dev_history_1665_5ab575f6-0664-4e04-80c7-d7b38b5142b2,What part of the treaty benefited the Romanians?,"[""SELECT['the treaty']"", ""PROJECT['part of #REF', '#1']"", ""FILTER['#2', 'that benefited the Romanians']""]","[""SELECT['the treaty']"", ""PROJECT['parties of #REF', '#1']"", ""FILTER['#2', 'that benefited the Romanians']""]"
DROP_dev_history_1665_6cbf41ba-ca0e-4fb6-b056-2eb0b29a5725,"How many years passed while 748,000 Romanians died?","[""SELECT['748,000 Romanians died']"", ""PROJECT['years of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['748,000 Romanians died']"", ""PROJECT['year of #REF', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_history_1665_8c0cbfc6-298b-4347-b15c-2b8fcae61d69,How many months was the Treaty of Bucharest in effect before it was renounced?,"[""SELECT['the Treaty of Bucharest was in effect']"", ""SELECT['the Treaty of Bucharest was renounced']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['the Treaty of Bucharest was renounced']"", ""PROJECT['when was #REF in effect', '#1']"", ""PROJECT['when was #REF', '#1']"", ""ARITHMETIC['difference', '#3', '#2']""]"
DROP_dev_history_1665_b64fd54b-5d21-4f17-aab1-389d089c4a70,How long did talk last before a treaty was signed between Romanian and Bolshevik governments?,"[""SELECT['talk']"", ""SELECT['a treaty was signed between Romanian and Bolshevik governments']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['talk']"", ""SELECT['a treaty was signed between the Romanian and Bolshevik governments']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]"
DROP_dev_history_1665_d6089739-9950-4c32-86a2-d64fbef8cbdf,How many days did the talks between Russians and Romanians last?,"[""SELECT['the talks between Russians and Romanians']"", ""PROJECT['days of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['the talks between Russias and Romanians']"", ""PROJECT['days of #REF', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_history_1665_e65c08c2-7bd7-40dd-9762-7c7b946b8ced,How were the Romanians able to control Bessarabi?,"[""SELECT['the Romanians']"", ""PROJECT['how were #REF able to control Bessarabi', '#1']""]","[""SELECT['the Romanians']"", ""PROJECT['How were #REF able to control Bessarabi', '#1']""]"
DROP_dev_history_1665_f452e8c4-5eb3-48e9-9cfc-927c2b03ff5d,For how many days did the Romanian and Bolshevik governments talk in March 1918?,"[""SELECT['the Romanian government talks']"", ""SELECT['the Bolshevik government talks']"", ""PROJECT['days of #REF', '#1']"", ""PROJECT['days of #REF', '#2']"", ""FILTER['#3', 'in March 1918']"", ""FILTER['#4', 'in March 1918']"", ""ARITHMETIC['sum', '#5', '#6']""]","[""SELECT['the Romanian government did talk In March 1918']"", ""SELECT['the Bolshevik government did talk In March 1918']"", ""PROJECT['days of #REF', '#1']"", ""PROJECT['days of #REF', '#2']"", ""ARITHMETIC['sum', '#3', '#4']""]"
DROP_dev_history_1665_f9551685-930b-4434-83d1-87a378ed0397,Who granted oil concessions to Germany?,"[""SELECT['Germany']"", ""PROJECT['oil concessions granted to #REF', '#1']"", ""PROJECT['who granted #REF', '#2']""]","[""SELECT['Germany']"", ""PROJECT['oil concessions of #REF', '#1']"", ""PROJECT['who granted #REF', '#2']""]"
DROP_dev_history_1708_2b959aed-f25f-4b71-88e4-7bbcb999fd49,How many Korean immigrants were more men than woman and children?,"[""SELECT['Korean immigrants']"", ""FILTER['#1', 'that were men']"", ""FILTER['#1', 'that were women']"", ""FILTER['#1', 'that were children']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['sum', '#6', '#7']"", ""ARITHMETIC['difference', '#5', '#8']""]","[""SELECT['Korean immigrants']"", ""PROJECT['men of #REF', '#1']"", ""PROJECT['women of #REF', '#1']"", ""PROJECT['children of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['sum', '#5', '#6']"", ""ARITHMETIC['difference', '#7', '#8']""]"
DROP_dev_history_1708_602e3b17-9b42-4fe4-968c-2c11fc26807e,Which port did the Korean immigrants leave later Chemulpo or Veracruz?,"[""SELECT['the Korean immigrants leave Chemulpo']"", ""SELECT['the Korean immigrants leave Veracruz']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['max', '#3', '#4']""]","[""SELECT['the Korean immigrants did leave Chemulpo']"", ""SELECT['the Korean immigrants did leave Veracruz']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['max', '#3', '#4']?""]"
DROP_dev_history_1708_a20c5d22-4168-420b-8b4e-d634cdb3b468,"How many more men were there than women and children who departed from the port of Chemulpo, Incheon aboard the ship Ilford to Salina Cruz, Oaxaca, Mexico?","[""SELECT['the port of Chemulpo, Incheon']"", ""SELECT['the ship Ilford']"", ""PROJECT['men who departed #REF', '#1']"", ""PROJECT['women who departed #REF', '#2']"", ""PROJECT['children who departed #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""ARITHMETIC['sum', '#6', '#7']"", ""ARITHMETIC['difference', '#8', '#9']""]","[""SELECT['the port of Chemulpo, Incheon']"", ""SELECT['the ship Ilford']"", ""PROJECT['men who departed #REF', '#1']"", ""PROJECT['women who departed #REF', '#2']"", ""PROJECT['children who departed #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""ARITHMETIC['sum', '#7', '#8']"", ""ARITHMETIC['difference', '#6', '#9']""]"
DROP_dev_history_1708_db5e9e76-c8a1-4eb4-8314-f3c1bfda9f19,"Where did the immigrants arrive first, Salina Cruz or Coatzacoalcos?","[""SELECT['immigrants did arrive in Salina Cruz']"", ""SELECT['immigrants did arrive in Coatzacoalcos']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]","[""SELECT['immigrants arrive in Salina Cruz']"", ""SELECT['immigrants arrive in Coatzacoalcos']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]"
DROP_dev_history_1720_708405cf-096e-43b3-baa3-0eeeeec1f135,"Which group had more active military personnel, the military specialists or the civil servants?","[""SELECT['the military specialists']"", ""SELECT['the civil servants']"", ""PROJECT['active military personnel of #REF', '#1']"", ""PROJECT['active military personnel of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""COMPARISON['max', '#5', '#6']""]","[""SELECT['military personnel']"", ""FILTER['#1', 'that are the military specialists']"", ""FILTER['#1', 'that are the civil servants']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['max', '#4', '#5']""]"
DROP_dev_history_1720_a5a47d9f-e175-485c-8cc2-b0665e05ec53,"Which personnel were there more of in the Croatian Armed Forces, officers or non-commissioned officers?","[""SELECT['the Croatian Armed Forces']"", ""PROJECT['officiers of #REF', '#1']"", ""PROJECT['non-commissioned officers of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['max', '#4', '#5']""]","[""SELECT['the Croatian Armed Forces']"", ""PROJECT['officiers of #REF', '#1']"", ""PROJECT['non-commissioned officers of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['max', '#4', '#5']""]."
DROP_dev_history_1720_b23e4c0a-0ab9-4f35-bc3b-f3f89a31105a,"In May 2016, how many members of the Armed Forces were not active military personnel?","[""SELECT['the Armed Forces']"", ""PROJECT['members of #REF', '#1']"", ""FILTER['#2', 'In May 2016']"", ""FILTER['#3', 'that were active military personnel']"", ""DISCARD['#3', '#4']"", ""AGGREGATE['count', '#5']""]","[""SELECT['members of the Armed Forces']"", ""FILTER['#1', 'In May 2016']"", ""FILTER['#2', 'that were active military personnel']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['difference', '#5', '#6']""]"
DROP_dev_history_1720_d9d38b53-2dca-4304-9650-1820086a5a8e,How many of the personnel were not officers?,"[""SELECT['the personnel']"", ""FILTER['#1', 'that were officers']"", ""DISCARD['#1', '#2']"", ""AGGREGATE['count', '#3']""]","[""SELECT['the personnel']"", ""FILTER['#1', 'that were officers']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""ARITHMETIC['difference', '#3, '#4']""]"
DROP_dev_history_1723_2acc9cfc-ed29-43f4-acd5-d5dcd0af75fd,How many more people ended up homeless because of the bombing raids compared to being killed?,"[""SELECT['the bombing raids']"", ""PROJECT['people that ended up homeless of #REF', '#1']"", ""PROJECT['people that ended up being killed of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]","[""SELECT['the bombing raids']"", ""PROJECT['people that ended up homeless of #REF', '#1']"", ""PROJECT['people that ended up being killed of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['difference', '#5', '#4']""]"
DROP_dev_history_1723_e2f5edf8-5cf9-4f05-ad46-c3de65a1eba4,What was the largest air raid during the war called?,"[""SELECT['air raids during the war']"", ""PROJECT['size of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is the largest']"", ""PROJECT['what was #REF called', '#3']""]","[""SELECT['air raids during the war']"", ""PROJECT['size of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is the highest']"", ""PROJECT['what was #REF called', '#3']""]"
DROP_dev_history_1723_ea2c7f1c-45f5-4f01-9158-4342211a8a5e,"How many bombers were used in ""Operation Millennium?""","[""SELECT['Operation Millennium']"", ""PROJECT['bombers used in #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['Bombers']"", ""FILTER['#1', 'used in Operation Millennium']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_history_1731_06804db8-816a-4591-bf58-9b3aa6096d72,Which country had the smallest number of people born outside of the EU?,"[""SELECT['countries']"", ""PROJECT['people born outside of the EU of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['min', '#1', '#3']""]","[""SELECT['countries']"", ""PROJECT['people born outside of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is the lowest']""]"
DROP_dev_history_1731_129e212a-a305-48e3-8438-c8cc52c88cf8,How many more millions of people living in the EU we're born in Germany than in Italy?,"[""SELECT['the EU']"", ""PROJECT['people born in #REF', '#1']"", ""FILTER['#2', 'in Germany']"", ""FILTER['#2', 'in Italy']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['the EU']"", ""PROJECT['people born in #REF', '#1']"", ""FILTER['#2', 'that are born in Germany']"", ""FILTER['#2', 'that are born in Italy']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#6', '#5']""]"
DROP_dev_history_1731_5e974684-1e46-4fc2-8523-71845b41626e,Were more people born in Spain or France?,"[""SELECT['people']"", ""FILTER['#1', 'that Were born in Spain']"", ""FILTER['#1', 'that Were born in France']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['max', '#4', '#5']""]","[""SELECT['people']"", ""FILTER['#1', 'born in Spain']"", ""FILTER['#1', 'born in France']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['max', '#4', '#5']""]"
DROP_dev_history_1731_65b66a61-6eb9-43e8-b245-8dd333be4fa3,How many millions of people living in the EU in 2010 were born in another EU member state?,"[""SELECT['the EU']"", ""PROJECT['millions of people living in 2010 of #REF', '#1']"", ""FILTER['#2', 'that were born in another EU member state']"", ""AGGREGATE['count', '#3']""]","[""SELECT['the EU']"", ""PROJECT['millions of people living in #REF', '#1']"", ""FILTER['#2', 'in 2010']"", ""FILTER['#3', 'that were born in another EU member state']"", ""AGGREGATE['count', '#4']""]"
DROP_dev_history_1731_69f93831-4081-44ea-b212-31e475092207,Which countries had less than 4.5 million people who were born outside the EU?,"[""SELECT['countries']"", ""PROJECT['people born outside the EU of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is less than 4.5 million']""]","[""SELECT['countries']"", ""PROJECT['people born outside the EU of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is less than 4.5 million']?""]"
DROP_dev_history_1731_7522f5cf-390e-4bfa-a477-42f22562aa74,How many more percent were born outside the EU than were born in another EU member state?,"[""SELECT['those born outside the EU']"", ""SELECT['those born in another EU member state']"", ""PROJECT['percent of #REF', '#1']"", ""PROJECT['percent of #REF', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]","[""SELECT['the EU']"", ""PROJECT['born outside of #REF', '#1']"", ""PROJECT['born in another EU member state of #REF', '#1']"", ""PROJECT['percent of #REF', '#2']"", ""PROJECT['percent of #REF', '#3']"", ""ARITHMETIC['sum', '#4', '#5']""]"
DROP_dev_history_1731_81d5237a-97d2-45bc-ab7f-69906890c7f0,How many more millions of people living in the EU we're born in France than in the Netherlands?,"[""SELECT['the EU']"", ""PROJECT['people born in #REF', '#1']"", ""FILTER['#2', 'that are born in France']"", ""FILTER['#2', 'that are born in the Netherlands']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['people']"", ""FILTER['#1', 'living in the EU we re born in France']"", ""FILTER['#1', 'born in the Netherlands']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]"
DROP_dev_history_1731_8a7254c4-c79c-444a-bd07-e9c2eacd19fe,How many millions of people residing in France and Italy were born outside of the EU?,"[""SELECT['France']"", ""SELECT['Italy']"", ""PROJECT['millions of people born outside of the EU of #REF', '#1']"", ""PROJECT['millions of people born outside of the EU of #REF', '#2']"", ""ARITHMETIC['sum', '#3', '#4']""]","[""SELECT['France']"", ""SELECT['Italy']"", ""PROJECT['millions of people residing in #REF', '#1']"", ""PROJECT['millions of people born outside of the EU of #REF', '#2']"", ""ARITHMETIC['sum', '#3', '#4']""]"
DROP_dev_history_1731_a28d736c-4b32-44f3-b24a-987775399f4f,"In 2010, how many percent of the total EU population were not born outside their resident country?","[""SELECT['EU']"", ""PROJECT['population of #REF', '#1']"", ""FILTER['#2', 'in 2010']"", ""FILTER['#3', 'that were born outside their resident country']"", ""PROJECT['percent of #REF', '#4']"", ""PROJECT['difference of 100 and #REF', '#5']""]","[""SELECT['the EU']"", ""PROJECT['population of #REF', '#1']"", ""FILTER['#2', 'that were born outside their resident country']"", ""FILTER['#3', 'in 2010']"", ""PROJECT['percent of #REF', '#4']"", ""PROJECT['difference of 100 and #REF', '#5']""]"
DROP_dev_history_1731_c149b2a4-f11e-4303-bfb3-d64a419aa22f,How many more millions of people living in the EU we're born in Germany than in France?,"[""SELECT['the EU']"", ""PROJECT['people born in #REF', '#1']"", ""FILTER['#2', 'in Germany']"", ""FILTER['#2', 'in France']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['people']"", ""FILTER['#1', 'living in the EU']"", ""FILTER['#2', 'that are born in Germany']"", ""FILTER['#2', 'that are born in France']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]"
DROP_dev_history_1731_d1d9687f-0cf4-4c5a-81b0-65cb09dec3e7,How many more millions of people living in the EU we're born in France than in the Italy?,"[""SELECT['people']"", ""FILTER['#1', 'living in the EU we re born in France']"", ""FILTER['#1', 'born in Italy']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]","[""SELECT['people']"", ""FILTER['#1', 'living in the EU we re born in France']"", ""FILTER['#1', 'born in Italy']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['difference', '#5', '#4']""]"
DROP_dev_history_1731_e5906c91-1127-4b90-8965-b2a93c715f71,How many more millions of people were born outside of the EU than were born in another EU member state?,"[""SELECT['people']"", ""FILTER['#1', 'that were born outside of the EU']"", ""FILTER['#1', 'that were born in another EU member state']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]","[""SELECT['people']"", ""FILTER['#1', 'born outside of the EU']"", ""FILTER['#1', 'born in another EU member state']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]"
DROP_dev_history_1731_f20d56dc-7860-4fd3-a94e-d193722ae53d,How many more millions of people living in the EU we're born in Germany than in Spain?,"[""SELECT['the EU']"", ""PROJECT['people born in #REF', '#1']"", ""FILTER['#2', 'in Germany']"", ""FILTER['#2', 'in Spain']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['people']"", ""FILTER['#1', 'living in the EU we are born in Germany']"", ""FILTER['#1', 'born in Spain']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]"
DROP_dev_history_1744_32f17dd1-cc10-432a-bdc5-d483c8de229e,How many days after the Spanish Republican Air Force attacked off Ibiza did the Admiral Scheer Bombardment of Almería occur in retaliation?,"[""SELECT['the Spanish Republican Air Force attacked off Ibiza']"", ""SELECT['the Admiral Scheer Bombardment of Almera occur in retaliation']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['the Spanish Republican Air Force attacked off Ibiza']"", ""SELECT['the Admiral Scheer Bombardment of Almera did occur in retaliation']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]"
DROP_dev_history_1744_7572789f-3881-4340-997d-ef6bb206a44e,How many refugees were not German citizens?,"[""SELECT['refugees']"", ""FILTER['#1', 'that were German citizens']"", ""DISCARD['#1', '#2']"", ""AGGREGATE['count', '#3']""]","[""SELECT['refugees']"", ""FILTER['#1', 'that were German citizens']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]"
DROP_dev_history_1744_8d12a97f-27a2-4de6-b319-a33b28567c67,"Which suffered more deaths in the Deutschland incident, Germany or Spanish?","[""SELECT['Germany']"", ""SELECT['Spanish']"", ""PROJECT['deaths of #REF', '#1']"", ""PROJECT['deaths of #REF', '#2']"", ""FILTER['#3', 'in the Deutschland incident']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""COMPARISON['max', '#6', '#7']""]","[""SELECT['Germany']"", ""SELECT['the Spanish']"", ""PROJECT['deaths of #REF', '#1']"", ""PROJECT['deaths of #REF', '#2']"", ""FILTER['#3', 'in the Deutschland incident']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""COMPARISON['max', '#6', '#7']""]"
DROP_dev_history_1744_b60f3871-a9d9-481f-8c50-e4d775a8a5a5,How many days after the Deutschland incident did Germany retaliate?,"[""SELECT['the Deutschland incident']"", ""SELECT['Germany did retaliate']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['Deutschland incident']"", ""SELECT['Germany did retaliate']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]"
DROP_dev_history_1746_17b647b7-dade-44e6-b075-8c60e8b97b38,Did the army have less tank battalions or Infantry battalions?,"[""SELECT['the army']"", ""PROJECT['tank battalions of #REF', '#1']"", ""PROJECT['Infantry battalions of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['min', '#4', '#5']""]","[""SELECT['tank battalions']"", ""SELECT['Infantry battalions']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""COMPARISON['min', '#3', '#4']""]"
DROP_dev_history_1746_7dd8ce0e-90f6-4d16-8504-cb398f0d43e5,Which battalions in the army had the smallest number?,"[""SELECT['the army']"", ""PROJECT['battalions of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['min', '#1', '#3']""]","[""SELECT['the army']"", ""PROJECT['battalions of #REF', '#1']"", ""GROUP['count', '#1', '#2']"", ""SUPERLATIVE['min', '#2', '#3']""]"
DROP_dev_history_1746_ac69efde-0cb6-4dff-9a67-847be390eecc,How many combined Mechanized Infantry Battalions and Infantry Battalions were part of the Libyan Army in 2009?,"[""SELECT['the Libyan Army']"", ""PROJECT['Mechanized Infantry Battalions of #REF', '#1']"", ""PROJECT['Infantry Battalions of #REF', '#1']"", ""FILTER['#2', 'in 2009']"", ""FILTER['#3', 'in 2009']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""ARITHMETIC['sum', '#6', '#7']""]","[""SELECT['the Libyan Army']"", ""PROJECT['Mechanized Infantry Battalions of #REF', '#1']"", ""PROJECT['Infantry Battalions of #REF', '#1']"", ""FILTER['#2', 'in 2009']"", ""FILTER['#3', 'in 2009']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""ARITHMETIC['sum', '#7', '#8']""]"
DROP_dev_history_1746_cd96f9c9-db17-445e-885c-cc7dabba1aa9,Which battalions in the Libyan Army was the largest?,"[""SELECT['the Libyan Army']"", ""PROJECT['battalions of #REF', '#1']"", ""PROJECT['size of #REF', '#2']"", ""SUPERLATIVE['max', '#2', '#3']""]","[""SELECT['the Libyan Army']"", ""PROJECT['battalions in #REF', '#1']"", ""PROJECT['size of #REF', '#2']"", ""SUPERLATIVE['max', '#2', '#3']""]"
DROP_dev_history_1748_435366d2-3547-4adc-9419-d268336e47a1,"How many people are in Chişinău, Bălţi, and Ungheni combined?","[""SELECT['people']"", ""FILTER['#1', 'in Chişinău']"", ""FILTER['#1', 'in Bălţi']"", ""FILTER['#1', 'in Ungheni']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['sum', '#5', '#6']"", ""ARITHMETIC['sum', '#7', '#8']""]","[""SELECT['people']"", ""FILTER['#1', 'in Chişinău']"", ""FILTER['#1', 'in Bălţi']"", ""FILTER['#1', 'in Ungheni']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['sum', '#6', '#7']"", ""ARITHMETIC['sum', '#8', '#9']""]"
DROP_dev_history_1748_507ba50b-d137-4f0f-9e80-92bbc8890a8b,"How many more people are in Chişinău and Bălţi combined compared to Cahul, Soroca, and Orhei combined?","[""SELECT['people']"", ""FILTER['#1', 'in Chişinău']"", ""FILTER['#1', 'in Bălţi']"", ""FILTER['#1', 'in Cahul']"", ""FILTER['#1', 'in Soroca']"", ""FILTER['#1', 'in Orhei']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""ARITHMETIC['sum', '#6', '#7']"", ""ARITHMETIC['difference', '#8', '#9']""]","[""SELECT['people']"", ""FILTER['#1', 'in Chişinău']"", ""FILTER['#1', 'in Bălţi']"", ""FILTER['#1', 'in Cahul']"", ""FILTER['#1', 'in Soroca']"", ""FILTER['#1', 'in Orhei']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['sum', '#6', '#7']"", ""ARITHMETIC['difference', '#5', '#8']""]"
DROP_dev_history_1748_5e671a33-e94b-4711-a097-e12b1b6fbc51,Which city from the census is larger: Ungheni or  Cahul?,"[""SELECT['the census']"", ""PROJECT['city of #REF', '#1']"", ""FILTER['#2', 'that is Ungheni']"", ""FILTER['#2', 'that is Cahul']"", ""PROJECT['size of #REF', '#3']"", ""PROJECT['size of #REF', '#4']"", ""COMPARISON['max', '#5', '#6']""]","[""SELECT['the census']"", ""PROJECT['cities of #REF', '#1']"", ""PROJECT['size of #REF', '#2']"", ""COMPARATIVE['#3', '#2', 'is Ungheni']"", ""COMPARATIVE['#3', '#2', 'is Cahul']"", ""COMPARISON['max', '#4', '#5']""]"
DROP_dev_history_1748_7167e544-08eb-4aa3-a570-e51759d67f53,How many more people are in Chişinău compared to Soroca and Orhei combined?,"[""SELECT['people']"", ""FILTER['#1', 'in Chişinău']"", ""FILTER['#1', 'in Soroca']"", ""FILTER['#1', 'in Orhei']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['sum', '#6', '#7']"", ""ARITHMETIC['difference', '#5', '#8']""]","[""SELECT['people']"", ""FILTER['#1', 'in Chişinău']"", ""FILTER['#1', 'in Soroca']"", ""FILTER['#1', 'in Orhei']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['sum', '#5', '#6']"", ""ARITHMETIC['difference', '#7', '#8']""]"
DROP_dev_history_1748_733e0c71-9f04-411b-8fd1-5064b8dd8137,How many from the census were in Ungheni and Orhei?,"[""SELECT['the census']"", ""PROJECT['includes of #REF', '#1']"", ""FILTER['#2', 'that were in Ungheni']"", ""FILTER['#2', 'that were in Orhei']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['sum', '#5', '#6']""]","[""SELECT['the census']"", ""PROJECT['inhabitants of #REF', '#1']"", ""FILTER['#2', 'that were Ungheni']"", ""FILTER['#2', 'that were Orhei']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['sum', '#5', '#6']""]"
DROP_dev_history_1748_749d41be-3488-483b-bb8f-89b25dfc95aa,How many more residents were in Ungheni and Cahul than in Soroca and Orhei?,"[""SELECT['residents']"", ""FILTER['#1', 'in Ungheni']"", ""FILTER['#1', 'in Cahul']"", ""FILTER['#1', 'in Soroca']"", ""FILTER['#1', 'in Orhei']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""ARITHMETIC['sum', '#6', '#7']"", ""ARITHMETIC['difference', '#8', '#9']""]","[""SELECT['residents']"", ""FILTER['#1', 'in Ungheni']"", ""FILTER['#1', 'in Cahul']"", ""FILTER['#1', 'in Soroca']"", ""FILTER['#1', 'in Orhei']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""ARITHMETIC['sum', '#6', '#7']"", ""ARITHMETIC['difference', '#9', '#10']""]"
DROP_dev_history_1748_800f33a4-297d-4c84-b711-8d089093270d,Which city from the census is smaller: Cahul or Orhei?,"[""SELECT['the census']"", ""PROJECT['cities of #REF', '#1']"", ""PROJECT['size of #REF', '#2']"", ""COMPARATIVE['#3', '#2', 'is Cahul']"", ""COMPARATIVE['#3', '#2', 'is Orhei']"", ""COMPARISON['min', '#4', '#5']""]","[""SELECT['the census']"", ""PROJECT['city of #REF', '#1']"", ""BOOLEAN['#2', 'is Cahul']"", ""BOOLEAN['#2', 'is Orhei']"", ""COMPARISON['min', '#3', '#4']""]"
DROP_dev_history_1748_89f3558f-3dd2-41a7-9f0a-65846acf01f1,Which city from the census is smaller: Ungheni or Cahul?,"[""SELECT['the census']"", ""PROJECT['city of #REF', '#1']"", ""FILTER['#2', 'that is Ungheni']"", ""FILTER['#2', 'that is Cahul']"", ""PROJECT['size of #REF', '#3']"", ""PROJECT['size of #REF', '#4']"", ""COMPARISON['min', '#5', '#6']""]","[""SELECT['the census']"", ""PROJECT['cities of #REF', '#1']"", ""FILTER['#2', 'that is Ungheni']"", ""FILTER['#2', 'that is Cahul']"", ""PROJECT['size of #REF', '#3']"", ""PROJECT['size of #REF', '#4']"", ""COMPARISON['min', '#5', '#6']""]"
DROP_dev_history_175_17f59db4-794b-4cc4-9036-b6f0ccd9789c,How many years old was Louis II when he died?,"[""SELECT['Louis II']"", ""PROJECT['years old of #REF', '#1']"", ""FILTER['#2', 'when he died']""]","[""SELECT['Louis II']"", ""PROJECT['year old of #REF', '#1']"", ""FILTER['#2', 'when he died']""]"
DROP_dev_history_175_4037af37-ee87-499d-b0b2-2da2c5835547,Who became the king of Hungary following Louis II's death?,"[""SELECT['Hungary']"", ""PROJECT['king of #REF', '#1']"", ""FILTER['#2', 'after the death of Louis II']""]","[""SELECT['Hungary']"", ""PROJECT['king of #REF', '#1']"", ""FILTER['#2', 'after Louis II s death']""]"
DROP_dev_history_175_626792ad-5b62-4461-8bef-7e603f7a3bd9,How many years after Maximilian I signed the Peace of Pressburg was Vladislaus son Louis II born?,"[""SELECT['Maximilian I signed the Peace of Pressburg']"", ""SELECT['Vladislaus son Louis II was born']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['Maximilian I signed the Peace of Pressburg']"", ""SELECT['Vladislaus son Louis II was born']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]"
DROP_dev_history_175_79356317-3eb0-4b26-8267-f0da7e519a2b,How many years after Vladislaus' son Louis II was born did Habsburgs exert pressure on the Jagiellonians in which they arragned two royal weddings of Vladislaus' daughter with Maximilian's grandson and Maximilian's granddaughter Mary with Louis II?,"[""SELECT['Vladislaus son Louis II was born']"", ""SELECT['the Habsburgs exert pressure on the Jagiellonians in which they arragned two royal weddings of Vladislaus s daughter with Maximilian s grandson and Maximilian s granddaughter Mary with Louis II']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]","[""SELECT['Vladislaus son Louis II was born']"", ""SELECT['the Habsburgs exert pressure on the Jagiellonians in which they arragned two royal weddings of Vladislaus s daughter with Maximilian s grandson and Maximilian s granddaughter Mary with Louis II']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#5']""]"
DROP_dev_history_175_98730f0d-df02-4e56-982d-2b56f08ae253,What happened first: First Congress of Vienna or the double wedding?,"[""SELECT['the First Congress of Vienna']"", ""SELECT['the double wedding']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]","[""SELECT['First Congress of Vienna']"", ""SELECT['double wedding']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]"
DROP_dev_history_175_a276d73c-0685-43e4-990d-b89d58a13070,How many years after Peace of Pressburg was Vladislaus' son born?,"[""SELECT['Peace of Pressburg']"", ""SELECT['Vladislaus s son was born']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['Peace of Pressburg']"", ""SELECT['Vladislaus s son was born']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]"
DROP_dev_history_175_ba141618-4caa-48bf-b53f-928dd4049b84,Who was King Maximilian I's father?,"[""SELECT['King Maximilian I']"", ""PROJECT['father of #REF', '#1']""]","[""SELECT['King Maximilian I']"", ""PROJECT['son of #REF', '#1']""]"
DROP_dev_history_175_c2a3909c-69a8-457a-a447-85185a34c7f1,Who was Maximilian's father?,"[""SELECT['Maximilian']"", ""PROJECT['father of #REF', '#1']""]","[""SELECT['Maximilian']"", ""PROJECT['dad of #REF', '#1']""]"
DROP_dev_history_175_d3b994da-6a2a-4792-9caa-38c6497c4db0,"How many years after Matthias Corvinus died did his son, King Maximilian I sign the Peace of Pressburg with Vladislaus Jagiellon?","[""SELECT['Matthias Corvinus died']"", ""SELECT['his son King Maximilian I sign the Peace of Pressburg with Vladislaus Jagiellon']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['Matthias Corvinus died']"", ""SELECT['his son King Maximilian I sign the Peace of Pressburg with Vladislaus Jagiellon']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]"
DROP_dev_history_175_d3f7065a-8eb3-416a-9241-9855c857f2cc,What was Ferdinand of Austria's relation to Emperor Charles V?,"[""SELECT['Ferdinand of Austria']"", ""PROJECT['relation to Emperor Charles V of #REF', '#1']""]","[""SELECT['Ferdinand of Austria']"", ""PROJECT['the relation to Emperor Charles V of #REF', '#1']""]"
DROP_dev_history_175_e78bd046-1df8-4191-8645-1baf57255d48,Who is the father of King Maximilian I?,"[""SELECT['King Maximilian I']"", ""PROJECT['father of #REF', '#1']""]","[""SELECT['King Maximilian I']"", ""PROJECT['parent of #REF', '#1']""]"
DROP_dev_history_1773_88a1f5eb-167c-4eb9-96ea-4a3b4ae54e90,How many in percent of the economically active were employed?,"[""SELECT['the economically active']"", ""FILTER['#1', 'that were employed']"", ""PROJECT['percent of #REF', '#2']""]","[""SELECT['the economically active']"", ""FILTER['#1', 'who were employed']"", ""PROJECT['percent of #REF', '#2']""]"
DROP_dev_history_1773_947307cd-6428-44c1-af51-55a7d2802496,How many in percent of those aged 15 and over weren't economically active?,"[""SELECT['those aged 15 and over']"", ""FILTER['#1', 'that were economically active']"", ""PROJECT['percent of #REF', '#2']"", ""PROJECT['the difference of 100 percent and #REF', '#3']""]","[""SELECT['people aged 15 and over']"", ""FILTER['#1', 'that were economically active']"", ""PROJECT['percent of #REF', '#2']"", ""PROJECT['the difference of 100 percent and #REF', '#3']""]"
DROP_dev_history_1773_c2b99dcd-f6a3-4928-ac83-8a88518e7fc1,How many in percent of those aged 15 and over weren't students?,"[""SELECT['those aged 15 and over']"", ""FILTER['#1', 'that were students']"", ""PROJECT['percent of #REF', '#2']"", ""PROJECT['the difference of 100 percent and #REF', '#3']""]","[""SELECT['those aged 15 and over']"", ""FILTER['#1', 'that were students']"", ""PROJECT['percent of #REF', '#2']"", ""PROJECT['the difference of 100 percent and #REF', '#3']""]."
DROP_dev_history_1773_ed3fdd8e-bab1-437c-a2c9-9e1a54ae41ef,"How many people total made up homemaking, students and those unable to work?","[""SELECT['people']"", ""FILTER['#1', 'that made up homemaking']"", ""FILTER['#2', 'that are students']"", ""FILTER['#2', 'that are unable to work']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['sum', '#5', '#6']""]","[""SELECT['people']"", ""FILTER['#1', 'that made up homemaking']"", ""FILTER['#2', 'that are students']"", ""FILTER['#2', 'that are unable to work']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['sum', '#5', '#6']"", ""ARITHMETIC['difference', '#7', '#8']""]"
DROP_dev_history_1782_0dec7ec5-e8eb-46fe-9756-fc132750ca60,How many points were the Cowboys winning by at the end of the half?,"[""SELECT['the Cowboys']"", ""PROJECT['points winning by of #REF', '#1']"", ""FILTER['#2', 'at the end of the half']""]","[""SELECT['the Cowboys']"", ""PROJECT['points by which #REF were winning', '#1']"", ""FILTER['#2', 'at the end of the half']""]"
DROP_dev_history_1782_4f85554d-9421-4435-a543-97b3b0dfe55e,How many points were scored at the end of the game?,"[""SELECT['points']"", ""FILTER['#1', 'that were scored at the end of the game']"", ""AGGREGATE['sum', '#2']""]","[""SELECT['points']"", ""FILTER['#1', 'that were scored at the end of the game']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_history_1782_71e42ee0-7e91-4a1a-bf61-ce7d03c259e4,"Who started the game at quarterback for the Cowboys, Aikmen or Kosar?","[""SELECT['the Cowboys']"", ""PROJECT['quarterback of #REF', '#1']"", ""BOOLEAN['#2', 'if Aikmen started the game at quarterback']"", ""BOOLEAN['#2', 'if Kosar started the game at quarterback']"", ""COMPARISON['true', '#3', '#4']""]","[""SELECT['the Cowboys']"", ""PROJECT['quarterback of #REF', '#1']"", ""BOOLEAN['#2','started by Aikmen']"", ""BOOLEAN['#2','started by Kosar']"", ""COMPARISON['true', '#3', '#4']""]"
DROP_dev_history_1782_97fb52fe-0314-4d30-97cd-58e4813db267,"Who scored first in the second half of the game, Cowboys or 49ers?","[""SELECT['the Cowboys scored']"", ""SELECT['the 49ers scored']"", ""FILTER['#1', 'in the second half']"", ""FILTER['#2', 'in the second half']"", ""PROJECT['when was #REF', '#3']"", ""PROJECT['when was #REF', '#4']"", ""COMPARISON['min', '#5', '#6']""]","[""SELECT['the Cowboys scored']"", ""SELECT['the 49ers scored']"", ""FILTER['#1', 'in the second half']"", ""FILTER['#2', 'in the second half']"", ""PROJECT['when was #REF', '#3']"", ""PROJECT['when was #REF', '#4']"", ""COMPARISON['min', '#5', '#6']""]-"
DROP_dev_history_1782_aec757e7-1807-4b63-b8de-2ec49edbed44,How many passes did Aikman not complete in the first half?,"[""SELECT['Aikman']"", ""PROJECT['passes of #REF', '#1']"", ""FILTER['#2', 'in the first half']"", ""DISCARD['#2', '#3']"", ""AGGREGATE['count', '#4']""]","[""SELECT['Aikman']"", ""PROJECT['passes of #REF', '#1']"", ""FILTER['#2', 'in the first half']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]"
DROP_dev_history_1793_33f8a455-0779-4c19-9309-703e3210f6f6,"Which household had a higher median income, those with single adults with no dependent children or those who were couples with no dependent children?","[""SELECT['households']"", ""FILTER['#1', 'with single adults with no dependent children']"", ""FILTER['#1', 'that were couples with no dependent children']"", ""PROJECT['median income of #REF', '#2']"", ""PROJECT['median income of #REF', '#3']"", ""COMPARISON['max', '#4', '#5']""]","[""SELECT['households']"", ""FILTER['#1', 'that are single adults with no dependent children']"", ""FILTER['#1', 'that are couples with no dependent children']"", ""PROJECT['median income of #REF', '#2']"", ""PROJECT['median income of #REF', '#3']"", ""COMPARISON['max', '#4', '#5']""]"
DROP_dev_history_1793_ed11e092-ed66-49a9-a3c1-d611b9f4d1ad,How many £ difference is the poverty line of a single adult with no dependent children  compared to couples with no dependent children?,"[""SELECT['adults']"", ""PROJECT['dependent children of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is one']"", ""COMPARATIVE['#1', '#3', 'is zero']"", ""INTERSECTION['#1', '#4', '#5']"", ""PROJECT['the poverty line of #REF', '#6']"", ""PROJECT['the poverty line of #REF', '#7']"", ""ARITHMETIC['difference', '#8', '#9']""]","[""SELECT['adults']"", ""PROJECT['dependent children of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is one']"", ""COMPARATIVE['#1', '#3', 'is zero']"", ""INTERSECTION['#1', '#4', '#5']"", ""PROJECT['the poverty line of #REF', '#6']"", ""PROJECT['the poverty line of #REF', '#7']"", ""ARITHMETIC['difference', '#9', '#8']""]"
DROP_dev_history_1802_a20bf4cc-7db6-4a58-862b-759b51a06024,How many more dollars did the V-22 Total cost of ownership per hour in 2013 compared to Sikorsky CH-53E Super Stallion cost per flight hour in 2007?,"[""SELECT['the V-22 Total cost of ownership per hour in 2013']"", ""SELECT['the Sikorsky CH-53E Super Stallion cost per flight hour in 2007']"", ""ARITHMETIC['difference', '#1', '#2']""]","[""SELECT['V-22 Total cost of ownership per hour in 2013']"", ""SELECT['Sikorsky CH-53E Super Stallion cost per flight hour in 2007']"", ""ARITHMETIC['difference', '#1', '#2']""]"
DROP_dev_history_1802_b0840ae1-87f7-4396-b8d1-2661d91bd9a5,How many of the 200 reports did not have improperly recorded information?,"[""SELECT['reports']"", ""PROJECT['information of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is improperly recorded']"", ""DISCARD['#1', '#3']"", ""AGGREGATE['count', '#4']""]","[""SELECT['reports']"", ""PROJECT['information in #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is improperly recorded']"", ""DISCARD['#1', '#3']"", ""AGGREGATE['count', '#4']""]"
DROP_dev_history_1802_fac208a2-5081-49a4-8e15-6cf8cde1ee78,"Which cost more, the Sikorsky CH-53E Super Stallion cost per flight hour in 2007 or V-22 total cost of ownership per hour in 2013?","[""SELECT['the Sikorsky CH-53E Super Stallion cost per flight hour in 2007']"", ""SELECT['the V-22 total cost of ownership per hour in 2013']"", ""COMPARISON['max', '#1', '#2']""]","[""SELECT['Sikorsky CH-53E Super Stallion cost per flight hour in 2007']"", ""SELECT['V-22 total cost of ownership per hour in 2013']"", ""COMPARISON['max', '#1', '#2']""]"
DROP_dev_history_1811_1748ad77-26e5-4a8b-9881-40b7151d99e0,Which year was family allowances were increased by 44% for families with 3 children?,"[""SELECT['family allowances were increased by 44 % for families with 3 children']"", ""PROJECT['year of #REF', '#1']""]","[""SELECT['family allowances were increased by 44 %']"", ""PROJECT['children of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is 3']"", ""PROJECT['year of #REF', '#4']""]"
DROP_dev_history_1811_279e8fd5-6a85-441f-9344-03f446765370,how many francs is the combined total pension for a single person and a couple prior to the raise?,"[""SELECT['person']"", ""FILTER['#1', 'that is prior to the raise']"", ""PROJECT['pension in francs of #REF', '#2']"", ""AGGREGATE['sum', '#3']""]","[""SELECT['people']"", ""FILTER['#1', 'that are prior to the raise']"", ""PROJECT['pension of #REF', '#2']"", ""AGGREGATE['sum', '#3']"", ""PROJECT['francs of #REF', '#4']"", ""AGGREGATE['sum', '#5']"", ""ARITHMETIC['sum', '#6', '#7']""]"
DROP_dev_history_1811_3059f5b3-e3a8-4fd5-8a2f-d0c3071f5c16,How many francs was old age pensions per month before it was raised by 300 francs for a single person?,"[""SELECT['old age pensions per month']"", ""SELECT['300 francs for a single person']"", ""ARITHMETIC['difference', '#1', '#2']""]","[""SELECT['old age pensions per month']"", ""SELECT['300 francs for a single person']"", ""AGGREGATE['min', '#1']"", ""AGGREGATE['min', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]"
DROP_dev_history_1811_6c9aa74d-14c8-4247-9088-a001975e03a8,How many percentage points did the purchasing power of social transfers increase by from 1981 to 1982?,"[""SELECT['social transfers']"", ""PROJECT['purchased power in percentage of #REF', '#1']"", ""FILTER['#2', 'in 1981']"", ""FILTER['#2', 'in 1982']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['social transfers']"", ""PROJECT['purchased power in percentages of #REF', '#1']"", ""FILTER['#2', 'in 1981']"", ""FILTER['#2', 'in 1982']"", ""ARITHMETIC['difference', '#3', '#4']""]"
DROP_dev_history_1811_7b97c202-4eee-4f9f-9ed2-ca04972bd115,How many more francs were they getting than a month ago?,"[""SELECT['francs']"", ""FILTER['#1', 'that they were getting']"", ""FILTER['#1', 'a month ago']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]","[""SELECT['francs']"", ""FILTER['#1', 'a month ago']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]"
DROP_dev_history_1811_8f5468e9-42f3-4fea-849b-b5b25f1a735a,"Who received a higher raise in allowance, families with 3 children or families with 2 children?","[""SELECT['families']"", ""FILTER['#1', 'with 3 children']"", ""FILTER['#1', 'with 2 children']"", ""PROJECT['raise in allowance of #REF', '#2']"", ""PROJECT['raise in allowance of #REF', '#3']"", ""COMPARISON['max', '#4', '#5']""]","[""SELECT['families']"", ""FILTER['#1', 'with 3 children']"", ""FILTER['#1', 'with 2 children']"", ""PROJECT['reason of #REF', '#2']"", ""PROJECT['reason of #REF', '#3']"", ""COMPARISON['max', '#4', '#5']""]"
DROP_dev_history_1811_9b70bc55-b697-45ea-9bf0-565c444e2fa4,How many months was the time span where the minimum wage was increased by 15% in real terms?,"[""SELECT['the minimum wage was increased by 15 % in real terms']"", ""PROJECT['time span of #REF', '#1']"", ""PROJECT['months of #REF', '#2']"", ""AGGREGATE['count', '#3']""]","[""SELECT['time span where the minimum wage was increased by 15 % in real terms']"", ""PROJECT['months of #REF', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_history_1811_d7953e3f-1371-410a-98f3-5f2bd05d7843,How many more francs per month did a couple receive than a single person?,"[""SELECT['a couple']"", ""SELECT['a single person']"", ""PROJECT['francs per month received of #REF', '#1']"", ""PROJECT['francs per month received of #REF', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]","[""SELECT['couples']"", ""SELECT['persons']"", ""PROJECT['francs per month received of #REF', '#1']"", ""PROJECT['francs per month received of #REF', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]"
DROP_dev_history_1811_ed444cd2-61c4-4afc-825a-e81e7183082d,"Which year was the purchasing power of social transfers higher, 1981 or 1982?","[""SELECT['social transfers']"", ""PROJECT['purchased power of #REF', '#1']"", ""FILTER['#2', 'in 1981']"", ""FILTER['#2', 'in 1982']"", ""COMPARISON['max', '#3', '#4']""]","[""SELECT['social transfers']"", ""PROJECT['priced power of #REF', '#1']"", ""FILTER['#2', 'in 1981']"", ""FILTER['#2', 'in 1982']"", ""COMPARISON['max', '#3', '#4']""]"
DROP_dev_history_1814_5621c94c-0120-4676-b778-528f202ac31a,How many more Buick vehicles were produced in 1906 than in 1905?,"[""SELECT['Buick vehicles']"", ""FILTER['#1', 'produced in 1906']"", ""FILTER['#1', 'produced in 1905']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]","[""SELECT['Buick vehicles']"", ""FILTER['#1', 'that were produced in 1906']"", ""FILTER['#1', 'that were produced in 1905']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['difference', '#5', '#4']""]"
DROP_dev_history_1814_5bc8b6b1-4f81-49ef-97f3-df0b7800df67,How many Buick automobiles were built from 1899 thru 1907?,"[""SELECT['Buick automobiles']"", ""FILTER['#1', 'that were built from 1899 thru 1907']"", ""AGGREGATE['count', '#2']""]","[""SELECT['Buick automobiles']"", ""FILTER['#1', 'that was built from 1899 thru 1907']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_history_1814_600ed5a0-96fb-4170-8e67-61775e2302e1,How many cars were produced total from 1904 to 1908?,"[""SELECT['cars produced']"", ""FILTER['#1', 'from 1904 to 1908']"", ""AGGREGATE['count', '#2']""]","[""SELECT['cars']"", ""FILTER['#1', 'produced betweenleftside 1904']"", ""FILTER['#2', 'produced betweenrightside 1908']"", ""AGGREGATE['sum', '#3']""]"
DROP_dev_history_1814_9b3d3759-7ad1-4d82-82f2-afd55f0909f3,How many Buick automobiles were built between 1904 and 1905?,"[""SELECT['Buick automobiles']"", ""FILTER['#1', 'that were built betweenleftside 1904']"", ""FILTER['#2', 'that were built betweenrightside 1905']"", ""AGGREGATE['count', '#3']""]","[""SELECT['Buick automobiles']"", ""FILTER['#1', 'built betweenleftside 1904']"", ""FILTER['#2', 'built betweenrightside 1905']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_history_1814_a26a97a8-8ca9-4c2c-b6e4-490d37826f09,When were 37 Buick automobiles made?,"[""SELECT['37 Buick automobiles']"", ""PROJECT['when were #REF made', '#1']""]","[""SELECT['automobiles']"", ""FILTER['#1', 'that were Buick']"", ""PROJECT['when were #REF made', '#2']""]"
DROP_dev_history_1814_acad296c-ca6f-49b8-b862-ee2b461cd4b3,How many Buick automobiles were built from 1899 thru 1906?,"[""SELECT['Buick automobiles']"", ""FILTER['#1', 'that were built from 1899 thru 1906']"", ""AGGREGATE['count', '#2']""]","[""SELECT['Buick automobiles']"", ""PROJECT['when was #REF built', '#1']"", ""COMPARATIVE['#1', '#2', 'is 1899 thru 1906']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_history_1814_c035a076-35c0-440c-b39d-4951027a3cec,In which year was Marr rehired and a production of 37 vehicles occurred?,"[""SELECT['Marr was rehired']"", ""SELECT['a production of 37 vehicles occurred']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""UNION['#3', '#4']""]","[""SELECT['Marr was rehired']"", ""SELECT['a production of 37 vehicles occurred']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is the highest']""]"
DROP_dev_history_1814_e52388f9-a4e7-4d73-995b-c80e80c1cd14,How many years after leaving Buick did Walter Lorenzo Marr return to work at Buick?,"[""SELECT['Walter Lorenzo Marr leaving Buick']"", ""SELECT['Walter Lorenzo Marr return to work at Buick']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['Walter Lorenzo Marr leaving Buick']"", ""SELECT['Walter Lorenzo Marr returned to work at Buick']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]"
DROP_dev_history_1837_094a5ed5-4e52-4258-841f-c6e01088c3fe,"How many books did the main library have in 1884, plus the volumes held in the Main Building on the Ring?","[""SELECT['the main library']"", ""PROJECT['books of #REF', '#1']"", ""FILTER['#2', 'in 1884']"", ""AGGREGATE['count', '#3']"", ""SELECT['volumes']"", ""FILTER['#5', 'held in the Main Building on the Ring']"", ""AGGREGATE['count', '#6']"", ""ARITHMETIC['difference', '#4', '#7']""]","[""SELECT['the main library']"", ""PROJECT['books of #REF', '#1']"", ""FILTER['#2', 'in 1884']"", ""AGGREGATE['count', '#3']"", ""SELECT['volumes']"", ""FILTER['#5', 'held in the Main Building on the Ring']"", ""AGGREGATE['count', '#6']"", ""ARITHMETIC['sum', '#4', '#7']"", ""ARITHMETIC['difference', '#4', '#8']""]"
DROP_dev_history_1837_babde1b6-94f2-4625-bb55-29d6d921519b,How many more volumes per year does the Main Library deal with compared to the growth of the Academic LIbrary 100 years prior?,"[""SELECT['the Main Library']"", ""SELECT['the Academic LIbrary']"", ""PROJECT['volumes per year of #REF', '#1']"", ""PROJECT['volumes per year of #REF', '#2']"", ""FILTER['#3', '100 years prior']"", ""ARITHMETIC['difference', '#4', '#5']""]","[""SELECT['the Main Library']"", ""SELECT['the Academic LIbrary']"", ""PROJECT['volumes per year of #REF', '#1']"", ""PROJECT['volumes per year of #REF', '#2']"", ""FILTER['#3', 'that are 100 years prior']"", ""ARITHMETIC['difference', '#4', '#5']""]"
DROP_dev_history_1853_11f2bc60-e859-41e5-9577-2ec51f4b0a2b,"Which crime dropped by a larger percentage, the murder rate of the rate of rapes?","[""SELECT['murder rates']"", ""SELECT['rapes']"", ""PROJECT['percentage of #REF', '#1']"", ""PROJECT['percentage of #REF', '#2']"", ""COMPARISON['max', '#3', '#4']""]","[""SELECT['murder rate']"", ""SELECT['rapes rate']"", ""PROJECT['percentage of #REF', '#1']"", ""PROJECT['percentage of #REF', '#2']"", ""COMPARISON['max', '#3', '#4']""]"
DROP_dev_history_1853_176835fe-042f-4085-af4a-945ef3f1f903,How many years since 1981 did the robberies drop?,"[""SELECT['the robberies drop']"", ""PROJECT['years of #REF', '#1']"", ""FILTER['#2','since 1981']"", ""AGGREGATE['count', '#3']""]","[""SELECT['the robberies dropped']"", ""PROJECT['years of #REF', '#1']"", ""FILTER['#2','since 1981']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_history_1853_3bdedbf5-1856-438f-9f79-26f3ce4501a4,How many fewer robberies were reported to the New York City Police Department in 2010 than in 2000?,"[""SELECT['robberies reported to the New York City Police Department']"", ""FILTER['#1', 'in 2010']"", ""FILTER['#1', 'in 2000']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]","[""SELECT['robberies']"", ""FILTER['#1','reported to the New York City Police Department']"", ""FILTER['#2', 'in 2010']"", ""FILTER['#2', 'in 2000']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#6', '#5']""]"
DROP_dev_history_1853_5bdccaef-04ee-44dc-b876-8cd75cc45f71,How many more percentage points did the burglary rate drop than murder rate between 1990 and 2013?,"[""SELECT['the burglary rate']"", ""SELECT['the murder rate']"", ""PROJECT['percentage of #REF', '#1']"", ""PROJECT['percentage of #REF', '#2']"", ""FILTER['#3', 'in 1990']"", ""FILTER['#4', 'in 2013']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['the burglary rate']"", ""SELECT['the murder rate']"", ""PROJECT['percentage of #REF', '#1']"", ""PROJECT['percentage of #REF', '#2']"", ""FILTER['#3', 'betweenleftside 1990']"", ""FILTER['#4', 'betweenrightside 2013']"", ""ARITHMETIC['difference', '#5', '#6']""]"
DROP_dev_history_1853_6c6f5cbe-c01c-46f0-aad5-df16aa478aa5,which year had the most robberies?,"[""SELECT['robberies']"", ""PROJECT['years of #REF', '#1']"", ""GROUP['count', '#1', '#2']"", ""SUPERLATIVE['max', '#2', '#3']""]","[""SELECT['years']"", ""PROJECT['robberies of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']""]"
DROP_dev_history_1853_6fc56ebd-64f9-48ef-a336-174e465fe48e,Which crimes dropped by more than 85%,"[""SELECT['crimes']"", ""PROJECT['%S of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is higher than 85 %']""]","[""SELECT['crimes']"", ""PROJECT['drop of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is higher than 85 %']""]"
DROP_dev_history_1853_84853441-8f08-44fb-bd78-6d63b562619e,Were there more robberies in Harlem in 1981 or 1990?,"[""SELECT['Harlem']"", ""PROJECT['robberies of #REF', '#1']"", ""FILTER['#2', 'in 1981']"", ""FILTER['#2', 'in 1990']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""COMPARISON['max', '#5', '#6']""]","[""SELECT['Harlem']"", ""FILTER['#1', 'in 1981']"", ""FILTER['#1', 'in 1990']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['max', '#4', '#5']""]"
DROP_dev_history_1853_91fddb15-6c0e-405c-bc27-b6dee3d04072,"Which crime had the smallest drop in Harlem between 1990-2003, rape or robbery?","[""SELECT['Harlem']"", ""PROJECT['crime drops of #REF', '#1']"", ""FILTER['#2', 'between 1990-2003']"", ""FILTER['#3', 'that was rape']"", ""FILTER['#3', 'that was robbery']"", ""AGGREGATE['min', '#4']"", ""AGGREGATE['min', '#5']"", ""COMPARISON['min', '#6', '#7']""]","[""SELECT['Harlem']"", ""PROJECT['crime drops of #REF', '#1']"", ""FILTER['#2', 'between 1990-2003']"", ""FILTER['#3', 'that was rape']"", ""FILTER['#3', 'that was robbery']"", ""COMPARISON['min', '#4', '#5']""]"
DROP_dev_history_1853_a7f33252-0270-4155-8ed8-231bad0a1d99,How many fewer robberies were there in 2000 than in 1981?,"[""SELECT['robberies']"", ""FILTER['#1', 'in 2000']"", ""FILTER['#1', 'in 1981']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]","[""SELECT['robberies in 2000']"", ""SELECT['robberies in 1981']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]"
DROP_dev_history_1853_b561597e-f78b-414c-b25d-c2391620497a,Which crime saw the largest percentage decrease between 1990 and 2013?,"[""SELECT['crime']"", ""FILTER['#1', 'in 1990']"", ""FILTER['#1', 'in 2013']"", ""PROJECT['percentage decrease of #REF', '#2']"", ""PROJECT['percentage decrease of #REF', '#3']"", ""COMPARISON['max', '#4', '#5']""]","[""SELECT['crime']"", ""FILTER['#1', 'that saw the largest percentage decrease between 1990 and 2013']""]"
DROP_dev_history_1853_b7b1ec7c-4bb3-4691-ab70-edf3eaab68a7,"Which year was the latest that the crimes were tracked by the New York Police Department,  1990 or 2003?","[""SELECT['crimes tracked by the New York Police Department']"", ""FILTER['#1', 'in 1990']"", ""FILTER['#1', 'in 2003']"", ""PROJECT['when was #REF', '#2']"", ""PROJECT['when was #REF', '#3']"", ""COMPARISON['max', '#4', '#5']""]","[""SELECT['crimes tracked by the New York Police Department']"", ""FILTER['#1', 'in 1990']"", ""FILTER['#1', 'in 2003']"", ""PROJECT['the latest of #REF', '#2']"", ""PROJECT['the latest of #REF', '#3']"", ""COMPARISON['max', '#4', '#5']""]"
DROP_dev_history_1853_ec234b8a-0155-4306-9482-61d8b438cdfb,"Which crime had the largest drop in Harlem btween 1990-2003, murder or rape?","[""SELECT['murder']"", ""SELECT['rape']"", ""PROJECT['drop in Harlem of #REF', '#1']"", ""PROJECT['drop in Harlem of #REF', '#2']"", ""FILTER['#3', 'between 1990-2003']"", ""FILTER['#4', 'between 1990-2003']"", ""COMPARISON['max', '#5', '#6']""]","[""SELECT['murder']"", ""SELECT['rape']"", ""PROJECT['drop in Harlem btween 1990-2003 of #REF', '#1']"", ""PROJECT['drop in Harlem btween 1990-2003 of #REF', '#2']"", ""COMPARISON['max', '#3', '#4']""]"
DROP_dev_history_1853_f5e1c2fb-22ec-4fcf-8c67-55ab538039ea,How many more robberies were there in 1981 compared to 2010?,"[""SELECT['robberies']"", ""FILTER['#1', 'in 1981']"", ""FILTER['#1', 'in 2010']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]","[""SELECT['robberies']"", ""FILTER['#1', 'in 1981']"", ""FILTER['#1', 'in 2010']"", ""ARITHMETIC['difference', '#2', '#3']""]"
DROP_dev_history_1853_fe5e086b-c8f0-4f5c-8f88-d30b8830f7f0,"Which year was the earliest that crimes were tracked by the New York Police Department, 2003 or 1990?","[""SELECT['crimes tracked by the New York Police Department']"", ""FILTER['#1', 'in 2003']"", ""FILTER['#1', 'in 1990']"", ""PROJECT['when was #REF', '#2']"", ""PROJECT['when was #REF', '#3']"", ""COMPARISON['min', '#4', '#5']""]","[""SELECT['crimes were tracked by the New York Police Department']"", ""FILTER['#1', 'in 2003']"", ""FILTER['#1', 'in 1990']"", ""COMPARISON['min', '#2', '#3']""]"
DROP_dev_history_1859_5e8f6db4-71a3-4ed6-b691-96ed7069913b,Where there more households with households that had individuals under 18 or someone living alone who was 65 years of age or older?,"[""SELECT['households']"", ""FILTER['#1', 'with individuals under 18']"", ""FILTER['#1', 'with someone living alone who was 65 years of age or older']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['max', '#4', '#5']""]","[""SELECT['households']"", ""PROJECT['individuals in #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'was under 18']"", ""COMPARATIVE['#1', '#2', 'was someone living alone who was 65 years of age or older']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""COMPARATIVE['#1', '#5', 'is higher than #6']"", ""UNION['#7', '#8']""]"
DROP_dev_history_1859_68af093c-5f19-4b7e-ab4a-85e7bec27b3d,How many in percent of households were in a Marriage and not living together?,"[""SELECT['households']"", ""FILTER['#1', 'that were in a Marriage']"", ""FILTER['#2', 'that were living together']"", ""PROJECT['percent of #REF', '#3']"", ""PROJECT['difference of 100 and #REF', '#4']""]","[""SELECT['households']"", ""FILTER['#1', 'that were in a Marriage']"", ""FILTER['#1', 'that were living together']"", ""PROJECT['percent of #REF', '#2']"", ""PROJECT['difference of 100 and #REF', '#3']""]"
DROP_dev_history_1859_7c7aeed2-3f87-483a-824b-c8bd10d576f8,How many percentage points is the amount of households that don't have an individual under 18?,"[""SELECT['households']"", ""FILTER['#1', 'that have individuals under 18']"", ""DISCARD['#1', '#2']"", ""PROJECT['percentage of #REF', '#3']""]","[""SELECT['households']"", ""FILTER['#1', 'that have an individual under 18']"", ""DISCARD['#1', '#2']"", ""PROJECT['percentage of #REF', '#3']"")""]"
DROP_dev_history_1859_7dd6cc9c-8344-46f0-a63d-a4d73414753b,"How many households, in percent, were not made up of individuals?","[""SELECT['households']"", ""FILTER['#1', 'that were made up of individuals']"", ""PROJECT['percent of #REF', '#2']"", ""PROJECT['difference of 100 and #REF', '#3']""]","[""SELECT['households']"", ""FILTER['#1', 'that were made up of individuals']"", ""PROJECT['percent of #REF', '#2']"", ""PROJECT['the difference of 100 percent and #REF', '#3']""]"
DROP_dev_history_1860_2684ade2-5687-43a9-b238-c63a8c94d2a4,How many age groups made up more than 6% of the population but less than 7% of the population?,"[""SELECT['age groups']"", ""PROJECT['%S of the population of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is higher than 6 %']"", ""COMPARATIVE['#1', '#2', 'is lower than 7 %']"", ""INTERSECTION['#1', '#3', '#4']"", ""AGGREGATE['count', '#5']""]","[""SELECT['age groups']"", ""PROJECT['%S of the population of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is higher than 6 %']"", ""COMPARATIVE['#1', '#2', 'is less than 7 %']"", ""INTERSECTION['#1', '#3', '#4']"", ""AGGREGATE['count', '#5']""]"
DROP_dev_history_1860_303ab451-cf3d-4824-af72-bd8b25f356a1,How many age groups made up less than 6% of the population?,"[""SELECT['age groups']"", ""PROJECT['%S of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is lower than 6 %']"", ""AGGREGATE['count', '#3']""]","[""SELECT['age groups']"", ""PROJECT['%S of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is less than 6 %']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_history_1860_354675ed-a147-4b07-b41c-78c6cbdc9b82,How many percent of people were not between 15 and 19 years?,"[""SELECT['people']"", ""FILTER['#1', 'that were betweenleftside 15 years']"", ""FILTER['#2', 'that were betweenrightside 19 years']"", ""PROJECT['percent of #REF', '#3']"", ""PROJECT['difference of 100 and #REF', '#4']""]","[""SELECT['people']"", ""FILTER['#1', 'that were betweenleftside 15']"", ""FILTER['#2', 'that were betweenrightside 19 years']"", ""PROJECT['percent of #REF', '#3']"", ""PROJECT['difference of 100 and #REF', '#4']""]--"
DROP_dev_history_1860_37b30b0d-db14-40c6-80d4-626d03ec0d8b,Were more people between the ages of 10 to 19 or 20 to 29?,"[""SELECT['people']"", ""FILTER['#1', 'between the ages of 10 to 19']"", ""FILTER['#1', 'between the ages of 20 to 29']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['max', '#4', '#5']""]","[""SELECT['people']"", ""PROJECT['ages of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is at least 10']"", ""COMPARATIVE['#1', '#2', 'is at most 20']"", ""COMPARATIVE['#1', '#2', 'is at most 29']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#5']"", ""COMPARISON['max', '#6', '#7']""]"
DROP_dev_history_1860_3a7cc26a-8403-47d7-bf29-c3c2068941bc,How many percent of Saratoga Countys population in 2010 was over the age of 18?,"[""SELECT['Saratoga Countys']"", ""PROJECT['population of #REF', '#1']"", ""FILTER['#2', 'in 2010']"", ""FILTER['#3', 'that was over the age of 18']"", ""PROJECT['percent of #REF', '#4']""]","[""SELECT['Saratoga Countys population']"", ""FILTER['#1', 'in 2010']"", ""FILTER['#2', 'that was over the age of 18']"", ""PROJECT['percent of #REF', '#3']""]"
DROP_dev_history_1860_435cd2ca-6dea-4957-9642-d79ac09cb712,How many percent of people were not between 25 and 29 years?,"[""SELECT['people']"", ""FILTER['#1', 'that were betweenleftside 25 years']"", ""FILTER['#2', 'that were betweenrightside 29 years']"", ""PROJECT['percent of #REF', '#3']"", ""PROJECT['difference of 100 and #REF', '#4']""]","[""SELECT['people']"", ""FILTER['#1', 'that were betweenleftside 25 years']"", ""FILTER['#2', 'that were betweenrightside 29 years']"", ""PROJECT['percent of #REF', '#3']"", ""PROJECT['difference of 100 and #REF', '#5']""]"
DROP_dev_history_1860_571efca3-ce0f-4fd9-b6c4-fa61553a2956,Were more people between 40 and 54 or between 20 and 34?,"[""SELECT['people']"", ""FILTER['#1', 'betweenleftside 40']"", ""FILTER['#2', 'betweenrightside 54']"", ""FILTER['#1', 'betweenrightside 20']"", ""FILTER['#4', 'betweenrightside 34']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#5']"", ""COMPARISON['max', '#6', '#7']""]","[""SELECT['people']"", ""FILTER['#1', 'betweenleftside 40']"", ""FILTER['#2', 'betweenrightside 54']"", ""FILTER['#3', 'betweenrightside 20']"", ""FILTER['#4', 'betweenrightside 34']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#6']"", ""COMPARISON['max', '#7', '#8']""]"
DROP_dev_history_1860_695eb057-cd16-43b6-ae10-642117235f62,How many percent of people were not between 45 and 49 years?,"[""SELECT['people']"", ""FILTER['#1', 'that were betweenleftside 45']"", ""FILTER['#2', 'that were betweenrightside 49 years']"", ""PROJECT['percent of #REF', '#3']"", ""PROJECT['difference of 100 and #REF', '#4']""]","[""SELECT['people']"", ""FILTER['#1', 'betweenleftside 45']"", ""FILTER['#2', 'betweenrightside 49 years']"", ""PROJECT['percent of #REF', '#3']"", ""PROJECT['difference of 100 and #REF', '#4']""]"
DROP_dev_history_1860_800ecfe2-0638-4514-93b6-5d06359444ad,Which age group had the lowest percent of population in the 2010 census?,"[""SELECT['the 2010 census']"", ""PROJECT['age groups of #REF', '#1']"", ""PROJECT['percents of population of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is the lowest']""]","[""SELECT['the 2010 census']"", ""PROJECT['age groups of #REF', '#1']"", ""PROJECT['percents of population of #REF', '#2']"", ""SUPERLATIVE['min', '#2', '#3']""]"
DROP_dev_history_1860_9b00a7f1-c5f1-4c60-926e-d7df131b26e3,Which age ranges are tied for the fewest percentage of people?,"[""SELECT['age ranges']"", ""PROJECT['percentages of people of #REF', '#1']"", ""SUPERLATIVE['min', '#1', '#2']""]","[""SELECT['age ranges']"", ""PROJECT['percentages of people tied for #REF', '#1']"", ""SUPERLATIVE['min', '#1', '#2']""]"
DROP_dev_history_1860_be526f40-9aef-4e30-9d4d-56a7408b3ae9,"Which age group made up more of the population, between 50 and 54 years or between 60 and 64 years?","[""SELECT['age groups']"", ""FILTER['#1', 'betweenleftside 50']"", ""FILTER['#2', 'betweenrightside 54 years']"", ""FILTER['#3', 'betweenrightside 60 years']"", ""FILTER['#4', 'betweenrightside 64 years']"", ""PROJECT['population of #REF', '#5']"", ""PROJECT['population of #REF', '#6']"", ""COMPARISON['max', '#7', '#8']""]","[""SELECT['age groups']"", ""FILTER['#1', 'betweenleftside 50']"", ""FILTER['#2', 'betweenrightside 54 years']"", ""FILTER['#1', 'betweenrightside 60 years']"", ""FILTER['#4', 'betweenrightside 64 years']"", ""PROJECT['population of #REF', '#3']"", ""PROJECT['population of #REF', '#5']"", ""COMPARISON['max', '#6', '#7']""]"
DROP_dev_history_1860_c5731b51-45c6-4c09-a491-96555eb51da0,"Which age group made up less of the population, between 20 and 24 years or between 30 and 34 years?","[""SELECT['age groups']"", ""FILTER['#1', 'betweenleftside 20']"", ""FILTER['#2', 'betweenrightside 24 years']"", ""FILTER['#3', 'betweenrightside 30 years']"", ""FILTER['#4', 'betweenrightside 34 years']"", ""PROJECT['% of the population of #REF', '#5']"", ""PROJECT['% of the population of #REF', '#6']"", ""COMPARISON['min', '#7', '#8']""]","[""SELECT['age groups']"", ""FILTER['#1', 'betweenleftside 20']"", ""FILTER['#2', 'betweenrightside 24 years']"", ""FILTER['#3', 'betweenrightside 30 years']"", ""FILTER['#4', 'betweenrightside 34 years']"", ""PROJECT['size of #REF', '#5']"", ""PROJECT['size of #REF', '#6']"", ""COMPARISON['min', '#7', '#8']""]"
DROP_dev_history_1860_c69e1211-2b3b-4dd1-aaea-b3a867890df1,"How many people, in terms of percentage of the population, were between the ages of 5 and 29, inclusive?","[""SELECT['people']"", ""PROJECT['ages of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is betweenleftside 5']"", ""COMPARATIVE['#3', '#2', 'is betweenrightside 29']"", ""PROJECT['percentage of #REF', '#4']""]","[""SELECT['people']"", ""PROJECT['ages of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is betweenleftside 5']"", ""COMPARATIVE['#3', '#2', 'is betweenrightside 29 inclusive']"", ""PROJECT['percentage of #REF', '#4']""]"
DROP_dev_history_1863_0b4a2c76-180d-436c-948b-4cf659b39058,Were there more Latinos or English?,"[""SELECT['Latinos']"", ""SELECT['English']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""COMPARISON['max', '#3', '#4']""]","[""SELECT['Latinos']"", ""SELECT['Englicans']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""COMPARISON['max', '#3', '#4']""]"
DROP_dev_history_1863_336dc52b-b44b-4056-84f0-4a7095822c50,Were there fewer German or fewer English people?,"[""SELECT['people']"", ""FILTER['#1', 'that Were German']"", ""FILTER['#1', 'that Were English']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['min', '#4', '#5']""]","[""SELECT['German people']"", ""SELECT['English people']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""COMPARISON['min', '#3', '#4']""]"
DROP_dev_history_1863_6c84f466-8e32-45a6-86cd-d27f1d7a5da5,How many more English people were there than Germans?,"[""SELECT['English people']"", ""SELECT['Germans']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]","[""SELECT['people']"", ""FILTER['#1', 'that were English']"", ""FILTER['#1', 'that were Germans']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['difference', '#5', '#4']""]"
DROP_dev_history_1863_743b38c0-1e3b-4277-8c6a-86612a4544e7,What was the smallest racial population?,"[""SELECT['racial populations']"", ""PROJECT['size of #REF', '#1']"", ""SUPERLATIVE['min', '#1', '#2']""]","[""SELECT['racial populations']"", ""PROJECT['size of #REF', '#1']"", ""AGGREGATE['min', '#2']""]"
DROP_dev_history_1863_8b9e9d5f-84d2-468b-8662-67380b9504db,Were there more Native Americans or Pacific Islanders?,"[""SELECT['Native Americans']"", ""SELECT['Pacific Islanders']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""COMPARISON['max', '#3', '#4']""]","[""SELECT['Native Americans']"", ""AGGREGATE['count', '#1']"", ""SELECT['Pacific Islanders']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['max', '#2', '#4']""]"
DROP_dev_history_1863_b73c649b-7d9e-433b-8ac0-c91de4b48a6c,"How many people, in terms of percentage, were not solely White or solely African American?","[""SELECT['people']"", ""FILTER['#1', 'that were solely White']"", ""FILTER['#1', 'that were solely African American']"", ""PROJECT['percentage of #REF', '#2']"", ""PROJECT['percentage of #REF', '#3']"", ""ARITHMETIC['sum', '#4', '#5']"", ""ARITHMETIC['difference', '#6', '#7']""]","[""SELECT['people']"", ""FILTER['#1', 'that were solely White']"", ""FILTER['#1', 'that were solely African American']"", ""PROJECT['percentage of #REF', '#2']"", ""PROJECT['percentage of #REF', '#3']"", ""ARITHMETIC['sum', '#5', '#6']"", ""ARITHMETIC['difference', '#4', '#7']""]"
DROP_dev_history_1863_cf5d2f0e-c7cb-4a04-bf33-ecebdabc9791,Which group from the census is larger: Irish or danish?,"[""SELECT['the census']"", ""PROJECT['the Irish group of #REF', '#1']"", ""PROJECT['the danish group of #REF', '#1']"", ""PROJECT['size of #REF', '#2']"", ""PROJECT['size of #REF', '#3']"", ""COMPARISON['max', '#4', '#5']""]","[""SELECT['the census']"", ""PROJECT['the Irish group of #REF', '#1']"", ""PROJECT['the danish group of #REF', '#1']"", ""PROJECT['size of #REF', '#2']"", ""PROJECT['size of #REF', '#3']"", ""COMPARISON['max', '#4', '#6']""]"
DROP_dev_history_1863_fa270863-ed38-4f5b-a7ff-323a0d01634e,What was the largest racial population?,"[""SELECT['racial populations']"", ""PROJECT['size of #REF', '#1']"", ""SUPERLATIVE['max', '#1', '#2']""]","[""SELECT['racial populations']"", ""PROJECT['size of #REF', '#1']"", ""AGGREGATE['max', '#2']""]"
DROP_dev_history_187_5e325403-9c54-48ed-88fd-2b3d8c26baf1,How many days were there between the two unsuccessful attacks?,"[""SELECT['the unsuccessful attacks']"", ""PROJECT['days between #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['the unsuccessful attacks']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]"
DROP_dev_history_187_8ef593fa-df19-4643-bef5-5ffbf27ec248,What happened first: Russians blocked Azov or Treaty of Constantinople?,"[""SELECT['Russians blocked Azov']"", ""SELECT['the Treaty of Constantinople']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]","[""SELECT['Russians blocked Azov']"", ""SELECT['Treaty of Constantinople']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]"
DROP_dev_history_187_a7e50fe9-5635-438b-9d31-207ea023a9fc,"Which year the Ottoman garrison of the fortress was 3,656, of whom 2,272 were Janissaries?","[""SELECT['the Ottoman garrison of the fortress was 3 656']"", ""PROJECT['years of #REF', '#1']"", ""FILTER['#2', 'that were Janissaries']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['the Ottoman garrison of the fortress was 3 656']"", ""PROJECT['years of #REF', '#1']"", ""FILTER['#2', 'that were Janissaries']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['division', '#5', '#6']""]"
DROP_dev_history_1876_3af77762-24fc-4ec4-a88a-e40a3e109c63,How many more percentage does Indonesia exports account for than Malaysia?,"[""SELECT['Indonesia']"", ""SELECT['Malaysia']"", ""PROJECT['exports of #REF', '#1']"", ""PROJECT['exports of #REF', '#2']"", ""PROJECT['percentage of #REF', '#3']"", ""PROJECT['percentage of #REF', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['Indonesia']"", ""PROJECT['exports of #REF', '#1']"", ""PROJECT['percentage of #REF', '#2']"", ""SELECT['Malaysia']"", ""PROJECT['exports of #REF', '#4']"", ""PROJECT['percentage of #REF', '#5']"", ""ARITHMETIC['difference', '#3', '#6']""]"
DROP_dev_history_1876_57091132-57ad-4c32-9766-29ae8155ba6c,How many more percent does Indonesia export compared to Malaysia?,"[""SELECT['Indonesia']"", ""SELECT['Malaysia']"", ""PROJECT['export of #REF', '#1']"", ""PROJECT['export of #REF', '#2']"", ""PROJECT['percent of #REF', '#3']"", ""PROJECT['percent of #REF', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['Indonesia']"", ""SELECT['Malaysia']"", ""PROJECT['percent export of #REF', '#1']"", ""PROJECT['percent export of #REF', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]"
DROP_dev_history_1876_6336b16a-de5d-4be1-b17c-37f7a1a9b51f,What is the largest percentage of palm oil in Thailand production: world total orglobal exports?,"[""SELECT['Thailand']"", ""PROJECT['palm oil production of #REF', '#1']"", ""PROJECT['global exports of #REF', '#1']"", ""PROJECT['percentage of #REF', '#2']"", ""PROJECT['percentage of #REF', '#3']"", ""COMPARISON['max', '#4', '#5']""]","[""SELECT['Thailand']"", ""PROJECT['palm oil productions of #REF', '#1']"", ""AGGREGATE['sum', '#2']"", ""PROJECT['global exports of #REF', '#1']"", ""AGGREGATE['sum', '#4']"", ""COMPARISON['max', '#3', '#5']""]"
DROP_dev_history_1876_804a2dfb-c112-4d68-b252-fc1985eb2a02,How many percent more world export does Indonesia contribute than Malaysian?,"[""SELECT['Indonesia']"", ""SELECT['Malaysia']"", ""PROJECT['world export of #REF', '#1']"", ""PROJECT['world export of #REF', '#2']"", ""PROJECT['percent of #REF', '#3']"", ""PROJECT['percent of #REF', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['Indonesia']"", ""SELECT['Malaysia']"", ""PROJECT['world export contribute of #REF', '#1']"", ""PROJECT['world export contribute of #REF', '#2']"", ""PROJECT['percent of #REF', '#3']"", ""PROJECT['percent of #REF', '#4']"", ""ARITHMETIC['difference', '#6', '#5']""]"
DROP_dev_history_1876_a0e4aa81-3902-487b-a6c1-7f406a15aa27,What percent of crude palm oil produced in Thailand is not consumed locally?,"[""SELECT['crude palm oil']"", ""FILTER['#1', 'produced in Thailand']"", ""FILTER['#2', 'that is consumed locally']"", ""PROJECT['percent of #REF', '#3']"", ""PROJECT['difference of 100 and #REF', '#4']""]","[""SELECT['Thailand']"", ""PROJECT['crude palm oil produced in #REF', '#1']"", ""FILTER['#2', 'that is locally']"", ""PROJECT['percent of #REF', '#3']"", ""PROJECT['the difference of 100 percent and #REF', '#4']""]"
DROP_dev_history_1876_b57e81aa-4a21-4af3-9659-fe5172667a5b,About how many percent of palm plantations and extraction mills are in northern Thailand?,"[""SELECT['northern Thailand']"", ""PROJECT['palm plantations of #REF', '#1']"", ""PROJECT['extraction mills of #REF', '#1']"", ""PROJECT['percent of #REF', '#2']"", ""PROJECT['percent of #REF', '#3']"", ""ARITHMETIC['sum', '#4', '#5']""]","[""SELECT['northern Thailand']"", ""PROJECT['palm plantations in #REF', '#1']"", ""PROJECT['extraction mills in #REF', '#1']"", ""PROJECT['percent of #REF', '#2']"", ""PROJECT['percent of #REF', '#3']"", ""ARITHMETIC['sum', '#4', '#5']""]"
DROP_dev_history_1876_bba91abe-f66a-4458-a97f-e980c1b5a41f,Which two countries produce more crude palm oil than Thailand?,"[""SELECT['countries']"", ""SELECT['Thailand']"", ""PROJECT['crude palm oil produced of #REF', '#1']"", ""PROJECT['crude palm oil produced of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""COMPARISON['max', '#5', '#6']""]","[""SELECT['Thailand']"", ""PROJECT['crude palm oil produced of #REF', '#1']"", ""PROJECT['crude palm oil produced of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""COMPARISON['max', '#5', '#6']""]"
DROP_dev_history_1884_02254a93-0cac-4576-b192-5d46b9b683e9,How many races each made up less than 1% of the population?,"[""SELECT['races']"", ""PROJECT['%S of the population of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is lower than 1 %']"", ""AGGREGATE['count', '#3']""]","[""SELECT['races']"", ""PROJECT['%S of the population of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is less than 1 %']""]"
DROP_dev_history_1884_15e84b63-4fcb-4c0b-a7de-d1a130fce77d,"As of the 2000 census, how many percent of people gave their ancestry origins as German?","[""SELECT['the 2000 census']"", ""PROJECT['people of #REF', '#1']"", ""PROJECT['ancestry origins of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is German']"", ""PROJECT['percent of #REF', '#4']""]","[""SELECT['the 2000 census']"", ""PROJECT['people of #REF', '#1']"", ""PROJECT['ancestry origins of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'was German']"", ""PROJECT['percent of #REF', '#4']""]"
DROP_dev_history_1884_406685dc-6400-41e3-a670-62cadb596ccc,How many percent more people were in the largest ancestry group compared to the smallest?,"[""SELECT['ancestry groups']"", ""PROJECT['size of #REF', '#1']"", ""SUPERLATIVE['max', '#1', '#2']"", ""SUPERLATIVE['min', '#1', '#2']"", ""PROJECT['percent of #REF', '#3']"", ""PROJECT['percent of #REF', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['ancestry groups']"", ""PROJECT['percents of people in #REF', '#1']"", ""AGGREGATE['max', '#2']"", ""AGGREGATE['min', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]"
DROP_dev_history_1884_4281c95b-f8a9-4adc-aefb-d31ca0b7748c,How many more people did the 2000 census show compared to housing units?,"[""SELECT['the 2000 census']"", ""PROJECT['people of #REF', '#1']"", ""PROJECT['housing units of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]","[""SELECT['the 2000 census']"", ""PROJECT['people in #REF', '#1']"", ""PROJECT['housing units in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]"
DROP_dev_history_1884_4afc0f35-644f-4d18-a2e7-aee75bb9dd38,How many from the census is fewer: Germans or English?,"[""SELECT['the census']"", ""PROJECT['Germans of #REF', '#1']"", ""PROJECT['English of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['min', '#4', '#5']""]","[""SELECT['Germans from the census']"", ""SELECT['English from the census']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]"
DROP_dev_history_1884_61b15cc4-a284-4504-9858-45f1cf40c1fa,How many from the census is bigger: Germans or English?,"[""SELECT['the census']"", ""PROJECT['Germans of #REF', '#1']"", ""PROJECT['English of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['max', '#4', '#5']""]","[""SELECT['the census']"", ""PROJECT['Germans from #REF', '#1']"", ""PROJECT['English from #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['max', '#4', '#5']""]"
DROP_dev_history_1884_7944e5b2-d3c2-4eaf-9a58-91fef27335e7,How many percent were not  english?,"[""SELECT['english']"", ""PROJECT['percent of #REF', '#1']"", ""PROJECT['difference of 100 and #REF', '#2']""]","[""SELECT['englisch']"", ""PROJECT['percent of #REF', '#1']"", ""PROJECT['difference of 100 and #REF', '#2']""]"
DROP_dev_history_1884_79cca8c7-6300-42d8-a594-6757ee3d19b0,How many percent of the population gave their ancestral origins as something other than German in the 2000 census?,"[""SELECT['the 2000 census']"", ""PROJECT['population of #REF', '#1']"", ""PROJECT['ancestral origins of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is German']"", ""PROJECT['percent of #REF', '#4']""]","[""SELECT['the 2000 census']"", ""PROJECT['the population that gave their ancestral origins as something other than German', '#1']"", ""PROJECT['percent of #REF', '#2']""]"
DROP_dev_history_1884_e540afbb-4596-4e5d-a73c-f67e38902a61,Which group from the census is larger: English or Irish?,"[""SELECT['the census']"", ""PROJECT['English group of #REF', '#1']"", ""PROJECT['Irish group of #REF', '#1']"", ""PROJECT['size of #REF', '#2']"", ""PROJECT['size of #REF', '#3']"", ""COMPARISON['max', '#4', '#5']""]","[""SELECT['the census']"", ""PROJECT['English group of #REF', '#1']"", ""PROJECT['Irish group of #REF', '#1']"", ""PROJECT['size of #REF', '#2']"", ""PROJECT['size of #REF', '#3']"", ""COMPARISON['max', '#4', '#6']""]"
DROP_dev_history_1887_00329d90-40db-480e-ab33-02db7fdb3b22,Which group is larger that resided in the county according to the 2000 census: people or families?,"[""SELECT['the 2000 census']"", ""PROJECT['people of #REF', '#1']"", ""PROJECT['families of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['max', '#4', '#5']""]","[""SELECT['the 2000 census']"", ""PROJECT['people that resided in the county of #REF', '#1']"", ""PROJECT['families that resided in the county of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['max', '#4', '#5']""]"
DROP_dev_history_1887_1c767649-4207-43e4-a18e-7120a4b3c9c4,Which group is bigger that resided in the county according to the 2000 census: households or families?,"[""SELECT['the 2000 census']"", ""PROJECT['households of #REF', '#1']"", ""PROJECT['families of #REF', '#1']"", ""PROJECT['size of #REF', '#2']"", ""PROJECT['size of #REF', '#3']"", ""COMPARISON['max', '#4', '#5']""]","[""SELECT['the 2000 census']"", ""PROJECT['households that resided in the county of #REF', '#1']"", ""PROJECT['families that resided in the county of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['max', '#4', '#5']""]"
DROP_dev_history_1887_2c8d3d0c-23eb-4d15-9c66-0e9567f1e58b,Which group is smaller that resided in the county according to the 2000 census: people or households?,"[""SELECT['the 2000 census']"", ""PROJECT['people of #REF', '#1']"", ""PROJECT['households of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['min', '#4', '#5']""]","[""SELECT['the 2000 census']"", ""PROJECT['people that resided in the county according to #REF', '#1']"", ""PROJECT['households that resided in the county according to #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['min', '#5', '#6']""]"
DROP_dev_history_1887_5d675568-f500-40ba-a4ea-feef0a9d3504,How many more people than families resided in the county according to the 2000 census?,"[""SELECT['the 2000 census']"", ""PROJECT['people of #REF', '#1']"", ""PROJECT['families of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]","[""SELECT['the 2000 census']"", ""PROJECT['people resided in the county of #REF', '#1']"", ""PROJECT['families resided in the county of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]"
DROP_dev_history_1887_9458ecb9-02be-456c-b126-c5616f3af4d4,How many more households than families residing in the county?,"[""SELECT['the county']"", ""PROJECT['households of #REF', '#1']"", ""PROJECT['families of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]","[""SELECT['households in the county']"", ""SELECT['families in the county']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]"
DROP_dev_history_1891_49ea18fc-c09b-437f-a805-2aea644535bc,How many people are there per 4 square miles?,"[""SELECT['people']"", ""PROJECT['square miles of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is 4 square miles']"", ""AGGREGATE['count', '#3']""]","[""SELECT['people']"", ""PROJECT['square miles of #REF', '#1']"", ""GROUP['count', '#1', '#2']"", ""COMPARATIVE['#2', '#3', 'is 4']""]"
DROP_dev_history_1891_52e7a14a-4600-4fe9-a018-523345c9046a,Were there more African Americans or Native Americans in Huntington Beach?,"[""SELECT['Huntington Beach']"", ""PROJECT['African Americans of #REF', '#1']"", ""PROJECT['Native Americans of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['max', '#4', '#5']""]","[""SELECT['Huntington Beach']"", ""PROJECT['African Americans of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""PROJECT['Native Americans of #REF', '#1']"", ""AGGREGATE['count', '#4']"", ""COMPARISON['max', '#3', '#5']""]"
DROP_dev_history_1891_7498a273-b510-41e3-89dd-12ac52e60cb1,Which group in percent of Huntington Beach from the 2010 United States Census is larger: African American or Native American?,"[""SELECT['the 2010 United States Census']"", ""PROJECT['African American groups of #REF', '#1']"", ""PROJECT['Native American groups of #REF', '#1']"", ""PROJECT['percent of #REF', '#2']"", ""PROJECT['percent of #REF', '#3']"", ""COMPARISON['max', '#4', '#5']""]","[""SELECT['the 2010 United States Census']"", ""PROJECT['African American group of #REF', '#1']"", ""PROJECT['Native American group of #REF', '#1']"", ""PROJECT['percentage of #REF', '#2']"", ""PROJECT['percentage of #REF', '#3']"", ""COMPARISON['max', '#4', '#5']""]"
DROP_dev_history_1891_7bece337-96ad-4fdd-a599-8ed46bde99b5,How many people are there per 10 square miles?,"[""SELECT['people']"", ""PROJECT['square miles of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is 10 square miles']"", ""AGGREGATE['count', '#3']""]","[""SELECT['people']"", ""FILTER['#1', 'per 10 square miles']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_history_1891_845ae939-f240-4e06-8cc9-fb9724e5fcbf,How many more non-hispanic whites were reported by percent in 1970 compared to 2010?,"[""SELECT['non-hispanic whites reported by percent']"", ""FILTER['#1', 'in 1970']"", ""FILTER['#1', 'in 2010']"", ""ARITHMETIC['difference', '#2', '#3']""]","[""SELECT['non-hispanic whites']"", ""FILTER['#1', 'that were reported by 1970']"", ""FILTER['#1', 'that were reported by 2010']"", ""ARITHMETIC['difference', '#2', '#4']""]"
DROP_dev_history_1891_8f493902-c60a-43fb-a48e-4092afa894c7,Were there more African Americans or Native Americans in Huntington Beach in 2010?,"[""SELECT['Huntington Beach']"", ""PROJECT['African Americans of #REF', '#1']"", ""PROJECT['Native Americans of #REF', '#1']"", ""FILTER['#2', 'in 2010']"", ""FILTER['#3', 'in 2010']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""COMPARISON['max', '#6', '#7']""]","[""SELECT['Huntington Beach']"", ""FILTER['#1', 'in 2010']"", ""PROJECT['African Americans of #REF', '#2']"", ""PROJECT['Native Americans of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""COMPARISON['max', '#5', '#6']""]"
DROP_dev_history_1891_b057b298-4f02-4952-a5c2-2bb543443d80,Were more people in Huntington Beach in 2010 Native American or African American?,"[""SELECT['Huntington Beach']"", ""PROJECT['people of #REF', '#1']"", ""FILTER['#2', 'in 2010']"", ""FILTER['#3', 'that Were Native American']"", ""FILTER['#3', 'that Were African American']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""COMPARISON['max', '#6', '#7']""]","[""SELECT['Huntington Beach']"", ""PROJECT['people of #REF', '#1']"", ""FILTER['#2', 'in 2010']"", ""FILTER['#3', 'that Were Native American']"", ""FILTER['#3', 'that Were African American']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""COMPARISON['max', '#7', '#8']""]"
DROP_dev_history_1891_c8b0e443-f866-47cd-af2b-f2e969d5f7c1,How many more Asian people were there compared to Native American people in 2010?,"[""SELECT['Asian people']"", ""SELECT['Native American people']"", ""FILTER['#1', 'in 2010']"", ""FILTER['#2', 'in 2010']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['Asians']"", ""SELECT['Native American people']"", ""FILTER['#1', 'in 2010']"", ""FILTER['#2', 'in 2010']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]"
DROP_dev_history_1891_cee22a81-5513-44b3-a3e9-8973d8a191d3,How many more White people were there compared to African American people in 2010?,"[""SELECT['people']"", ""FILTER['#1', 'in 2010']"", ""FILTER['#2', 'that were White']"", ""FILTER['#2', 'that were African American']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['people']"", ""FILTER['#1', 'in 2010']"", ""FILTER['#2', 'that were White']"", ""FILTER['#2', 'that were African American']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#6', '#5']""]"
DROP_dev_history_1892_60de0e6e-4f2a-4522-850e-e5d83555e7cb,How many percent were not POSSLQ?,"[""SELECT['POSSLQ']"", ""PROJECT['percent of #REF', '#1']"", ""PROJECT['difference of 100 and #REF', '#2']""]","[""SELECT['POSSLQ']"", ""PROJECT['percent of #REF', '#1']"", ""PROJECT['the difference of 100 percent and #REF', '#2']""]"
DROP_dev_history_1892_8c2c294d-c471-4da0-9631-ecc13b6b4ebd,How many percent are not made up of individuals?,"[""SELECT['individuals']"", ""PROJECT['percent of #REF', '#1']"", ""PROJECT['difference of 100 and #REF', '#2']""]","[""SELECT['percent that are made up of individuals']"", ""PROJECT['the difference of 100 percent and #REF', '#1']""]"
DROP_dev_history_1892_9556e1aa-cf1e-49f2-97e3-08a4b40eb769,Where there more households with POSSLQ or those with same-sex partnerships?,"[""SELECT['households']"", ""FILTER['#1', 'with POSSLQ']"", ""FILTER['#1', 'with same-sex partnerships']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['max', '#4', '#5']""]","[""SELECT['households with POSSLQ']"", ""SELECT['households with same-sex partnerships']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""COMPARISON['max', '#3', '#4']""]"
DROP_dev_history_1892_ec48ffdd-f2c8-4c2b-9098-11264d5f614f,How many percent are not same-sex partnerships?,"[""SELECT['partnerships']"", ""FILTER['#1', 'that are same-sex']"", ""PROJECT['percent of #REF', '#2']"", ""PROJECT['difference of 100 and #REF', '#3']""]","[""SELECT['participation']"", ""FILTER['#1', 'that are same-sex']"", ""PROJECT['percent of #REF', '#2']"", ""PROJECT['difference of 100 and #REF', '#3']""]"
DROP_dev_history_1898_421eb770-cd50-489c-9c1c-f10688c05c3b,How many percent higher was the average family size compared to the average household size?,"[""SELECT['families']"", ""PROJECT['sizes of #REF', '#1']"", ""AGGREGATE['avg', '#2']"", ""SELECT['households']"", ""PROJECT['sizes of #REF', '#4']"", ""AGGREGATE['avg', '#5']"", ""ARITHMETIC['difference', '#3', '#6']""]","[""SELECT['family sizes']"", ""SELECT['households']"", ""PROJECT['sizes of #REF', '#1']"", ""AGGREGATE['avg', '#2']"", ""AGGREGATE['avg', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]"
DROP_dev_history_1898_46797771-d143-47ee-afd0-a6d34f2c6344,Which household had the smallest percentage?,"[""SELECT['households']"", ""PROJECT['percentages of #REF', '#1']"", ""SUPERLATIVE['min', '#1', '#2']""]","[""SELECT['households']"", ""PROJECT['percentage of #REF', '#1']"", ""SUPERLATIVE['min', '#1', '#2']""]"
DROP_dev_history_1898_5059fb01-82d8-4c7f-a3aa-120391f5497e,How many more was the average household size than the family size?,"[""SELECT['households']"", ""PROJECT['sizes of #REF', '#1']"", ""AGGREGATE['avg', '#2']"", ""SELECT['family']"", ""PROJECT['sizes of #REF', '#4']"", ""AGGREGATE['avg', '#5']"", ""ARITHMETIC['difference', '#3', '#6']""]","[""SELECT['households']"", ""SELECT['families']"", ""PROJECT['size of #REF', '#1']"", ""AGGREGATE['avg', '#2']"", ""AGGREGATE['avg', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]"
DROP_dev_history_1898_505ee78a-8aa7-489d-b9c9-3fe72ec96d74,"How many more, in percentage, were households were non-families than were Marriage living together?","[""SELECT['households']"", ""FILTER['#1', 'that were non-families']"", ""FILTER['#1', 'that were Marriage living together']"", ""PROJECT['percentage of #REF', '#2']"", ""PROJECT['percentage of #REF', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]","[""SELECT['households']"", ""FILTER['#1', 'that were non-families']"", ""FILTER['#1', 'that were married']"", ""PROJECT['percentage of #REF', '#2']"", ""PROJECT['percentage of #REF', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]"
DROP_dev_history_1898_8b859eea-bf2c-4c53-ab6d-c914a42a13c1,How many more households had a female householder with no husband present compared to a  male householder with no wife present?,"[""SELECT['households']"", ""FILTER['#1', 'with a female householder with no husband present']"", ""FILTER['#1', 'with a male householder with no wife present']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]","[""SELECT['households']"", ""FILTER['#1', 'that had a female householder with no husband present']"", ""FILTER['#1', 'that had a male householder with no wife present']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""."
DROP_dev_history_1898_97ab0422-ecbc-4c1a-8d9c-51c951fc16da,"How many more, in percentage, were households made up of were Marriage living together than had children under the age of 18 living with them?","[""SELECT['households']"", ""FILTER['#1', 'that are made up of Marriage living together']"", ""FILTER['#1', 'that have children under the age of 18 living with them']"", ""PROJECT['percentage of #REF', '#2']"", ""PROJECT['percentage of #REF', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]","[""SELECT['households']"", ""FILTER['#1','made up of Marriage living together']"", ""FILTER['#1', 'that had children under the age of 18 living with them']"", ""PROJECT['percentage of #REF', '#2']"", ""PROJECT['percentage of #REF', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]"
DROP_dev_history_1898_e0983665-cd56-44c6-91ca-895db0fd057c,"Which household had the largest percentage, female householder or male householder?","[""SELECT['female householder']"", ""SELECT['male householder']"", ""PROJECT['percentage of #REF', '#1']"", ""PROJECT['percentage of #REF', '#2']"", ""COMPARISON['max', '#3', '#4']""]","[""SELECT['households']"", ""PROJECT['percentages of #REF', '#1']"", ""COMPARATIVE['#2', '#1', 'is female householder']"", ""COMPARATIVE['#2', '#1', 'is male householder']"", ""COMPARISON['max', '#3', '#4']""]"
DROP_dev_history_1907_2e5f562d-7c22-4b82-9532-2cd8e7b68ca6,For how many years did Alan Sugar own the majority of the club?,"[""SELECT['Alan Sugar own the majority of the club']"", ""PROJECT['years of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['Alan Sugar does own the majority of the club']"", ""PROJECT['years of #REF', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_history_1907_70eca194-eea5-40de-af70-530e194d44ba,"As of 2002, who was the major shareholder of Tottenham Hotspur Football and Athletic Company?","[""SELECT['Tottenham Hotspur Football and Athletic Company']"", ""PROJECT['major shareholder of #REF', '#1']"", ""FILTER['#2', 'As of 2002']""]","[""SELECT['Toronto Hotspur Football and Athletic Company']"", ""PROJECT['major shareholder of #REF', '#1']"", ""FILTER['#2', 'As of 2002']""]"
DROP_dev_history_1928_107a4dce-b052-4cae-a2ad-d018ece621c2,How many points did the Spurs win Game 1 by?,"[""SELECT['the Spurs']"", ""PROJECT['points by which #REF win Game 1', '#1']""]","[""SELECT['Points']"", ""FILTER['#1', 'of Spurs']"", ""FILTER['#2', 'in Game 1']"", ""ARITHMETIC['difference', '#3', '#2']""]"
DROP_dev_history_1928_536b6a83-8b69-4907-93af-68f70367ed78,How many points did the Mavericks win by?,"[""SELECT['the Mavericks']"", ""PROJECT['points win by of #REF', '#1']""]","[""SELECT['the Mavericks']"", ""PROJECT['points win by of #REF', '#1']""]."
DROP_dev_history_1928_7532375f-2733-438b-9c0b-5ed6b89eeeb8,How many more points did the Mavericks score against Phoenix to win the eighth playoff spot?,"[""SELECT['the Mavericks']"", ""PROJECT['points of #REF', '#1']"", ""AGGREGATE['sum', '#2']"", ""SELECT['Phoenix']"", ""PROJECT['points of #REF', '#4']"", ""AGGREGATE['sum', '#5']"", ""ARITHMETIC['difference', '#3', '#6']""]","[""SELECT['the Mavericks']"", ""SELECT['Phoenix']"", ""PROJECT['points scored of #REF', '#1']"", ""PROJECT['points scored of #REF', '#2']"", ""FILTER['#3', 'to win the eighth playoff spot']"", ""FILTER['#4', 'to win the eighth playoff spot']"", ""ARITHMETIC['difference', '#5', '#7']""]"
DROP_dev_history_1928_8e3b3e4c-6cdc-4b1b-8aa9-804b8b4fd1c4,How many total points were scored for both teams in games 6 and 7 combined?,"[""SELECT['teams']"", ""PROJECT['points scored of #REF', '#1']"", ""FILTER['#2', 'in games 6']"", ""FILTER['#2', 'in games 7']"", ""AGGREGATE['sum', '#3']"", ""AGGREGATE['sum', '#4']"", ""ARITHMETIC['sum', '#5', '#6']""]","[""SELECT['teams']"", ""PROJECT['points scored of #REF', '#1']"", ""FILTER['#2', 'in games 6']"", ""FILTER['#2', 'in games 7']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['sum', '#5', '#6']""]"
DROP_dev_history_1928_de7cb89a-1809-451c-8cd9-78ef5fe8d298,Which game had the highest combined score between both teams?,"[""SELECT['games']"", ""PROJECT['scores of #REF', '#1']"", ""GROUP['sum', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is the highest']""]","[""SELECT['games']"", ""PROJECT['summated scores of #REF', '#1']"", ""GROUP['sum', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']""]"
DROP_dev_history_1928_f92e86c1-130f-4a6c-877d-8be42bbb2c93,How many more points were scored by both teams combined in game 6 compared to game 1?,"[""SELECT['teams']"", ""PROJECT['points scored by #REF', '#1']"", ""FILTER['#2', 'in game 6']"", ""FILTER['#2', 'in game 1']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['teams']"", ""PROJECT['points scored of #REF', '#1']"", ""FILTER['#2', 'in game 6']"", ""FILTER['#2', 'in game 1']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]"
DROP_dev_history_1935_55a3faa7-3a8e-464d-80ba-3c38356e255e,Was there a bigger percentage of people married living together or a female householder with no husband present?,"[""SELECT['people']"", ""FILTER['#1', 'that are married living together']"", ""FILTER['#1', 'that are female householders with no husband present']"", ""PROJECT['percentage of #REF', '#2']"", ""PROJECT['percentage of #REF', '#3']"", ""COMPARISON['max', '#4', '#5']""]","[""SELECT['people']"", ""FILTER['#1', 'that are married living together']"", ""FILTER['#1', 'that are female householders with no husband present']"", ""PROJECT['percentage of #REF', '#2']"", ""PROJECT['percentage of #REF', '#3']"", ""COMPARISON['max', '#4', '#5']""]"
DROP_dev_history_1935_72993c31-5d42-4d25-a1e2-2814b3e8bc8b,How many in percent of households were a Married not living together?,"[""SELECT['households']"", ""FILTER['#1', 'that were Married living together']"", ""PROJECT['percent of #REF', '#2']"", ""PROJECT['difference of 100 and #REF', '#3']""]","[""SELECT['households']"", ""FILTER['#1', 'that were Married Living together']"", ""PROJECT['percent of #REF', '#2']"", ""PROJECT['difference of 100 and #REF', '#3']""]"
DROP_dev_history_1935_896f45f9-63d0-4795-8046-c6e934b2221f,"Which was greater, the average household size or the average family size?","[""SELECT['households']"", ""PROJECT['sizes of #REF', '#1']"", ""AGGREGATE['avg', '#2']"", ""SELECT['families']"", ""PROJECT['sizes of #REF', '#4']"", ""AGGREGATE['avg', '#5']"", ""COMPARISON['max', '#3', '#6']""]","[""SELECT['households']"", ""AGGREGATE['avg', '#1']"", ""SELECT['families']"", ""AGGREGATE['avg', '#3']"", ""COMPARISON['max', '#2', '#4']""]"
DROP_dev_history_1935_abeebbf2-bf81-47bb-940f-7317ff58b8a3,How many percent were not females 65 or older living alone?,"[""SELECT['females']"", ""FILTER['#1', 'that were 65 or older']"", ""FILTER['#2', 'that were living alone']"", ""PROJECT['percent of #REF', '#3']"", ""PROJECT['difference of 100 and #REF', '#4']""]","[""SELECT['females']"", ""FILTER['#1', 'that were 65 or older']"", ""FILTER['#2', 'living alone']"", ""PROJECT['percent of #REF', '#3']"", ""PROJECT['difference of 100 and #REF', '#4']""]"
DROP_dev_history_1935_bf12abdc-0a53-4a6f-ada5-158af4206ea2,How many percent of households were not people living by themselves?,"[""SELECT['households']"", ""FILTER['#1', 'that were people living by themselves']"", ""PROJECT['percent of #REF', '#2']"", ""PROJECT['difference of 100 and #REF', '#3']""]","[""SELECT['households']"", ""FILTER['#1', 'that are people living by themselves']"", ""PROJECT['percent of #REF', '#2']"", ""PROJECT['difference of 100 and #REF', '#3']""]"
DROP_dev_history_1935_ca0e966d-3e0d-43f8-8991-9c544b300c89,Which group for households is smaller: average household size or average family size?,"[""SELECT['households']"", ""PROJECT['group of #REF', '#1']"", ""PROJECT['size of #REF', '#2']"", ""AGGREGATE['avg', '#3']"", ""PROJECT['size of #REF', '#3']"", ""AGGREGATE['avg', '#5']"", ""COMPARISON['min', '#4', '#6']""]","[""SELECT['households']"", ""PROJECT['group of #REF', '#1']"", ""PROJECT['size of #REF', '#2']"", ""AGGREGATE['avg', '#3']"", ""PROJECT['size of #REF', '#3']"", ""AGGREGATE['avg', '#5']"", ""COMPARISON['min', '#6', '#7']""]"
DROP_dev_history_1935_ec91e815-70ef-4614-8c12-7c3ac580f1d2,How many percent do not have children under the age of 18 living with them?,"[""SELECT['those that have children under the age of 18 living with them']"", ""PROJECT['percent of #REF', '#1']"", ""PROJECT['the difference of 100 percent and #REF', '#2']""]","[""SELECT['populations']"", ""FILTER['#1', 'that have children under the age of 18 living with them']"", ""PROJECT['percent of #REF', '#2']"", ""PROJECT['the difference of percent and #REF', '#3']""]"
DROP_dev_history_1940_4c1b0cdf-242a-4d51-a71e-20730bbf23c6,How many in percent in the county from the census of 2000 weren't polish?,"[""SELECT['the county census']"", ""FILTER['#1', 'in 2000']"", ""PROJECT['polish of #REF', '#2']"", ""PROJECT['percent of #REF', '#3']"", ""PROJECT['difference of 100 and #REF', '#4']""]","[""SELECT['the county census']"", ""FILTER['#1', 'in 2000']"", ""PROJECT['polyes in #REF', '#2']"", ""PROJECT['percent of #REF', '#3']"", ""PROJECT['difference of 100 and #REF', '#4']""]"
DROP_dev_history_1940_69fd9e90-4fc6-4908-8c99-ac7ba902f577,Which ancestral groups are smaller than 7%?,"[""SELECT['ancestral groups']"", ""PROJECT['%S of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is lower than 7 %']""]","[""SELECT['ancestral groups']"", ""PROJECT['size of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is smaller than 7 %']""]"
DROP_dev_history_1940_db48d681-a10b-499b-9729-717ca31a6fc2,Which group in percent in the county from the census of 2000 is larger: English or Irish?,"[""SELECT['the county census of 2000']"", ""PROJECT['English group of #REF', '#1']"", ""PROJECT['Irish group of #REF', '#1']"", ""PROJECT['percent of #REF', '#2']"", ""PROJECT['percent of #REF', '#3']"", ""COMPARISON['max', '#4', '#5']""]","[""SELECT['the county census of 2000']"", ""PROJECT['English group of #REF', '#1']"", ""PROJECT['Irish group of #REF', '#1']"", ""PROJECT['percent of #REF', '#2']"", ""PROJECT['percent of #REF', '#3']"", ""COMPARISON['max', '#4', '#5']""]."
DROP_dev_history_1940_db6cc06e-0c2a-42f0-be9b-3ef19473fb26,Which groups are at least 30000 in size?,"[""SELECT['groups']"", ""PROJECT['size of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is at least 30000']""]","[""SELECT['groups']"", ""PROJECT['sizes of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'at least 30000']""]"
DROP_dev_history_1940_e5186d1f-b011-48ed-a61d-8e79b0fdee5e,How many in percent in the county from the census of 2000 weren't Irish?,"[""SELECT['the county census']"", ""FILTER['#1', 'in 2000']"", ""PROJECT['Irish of #REF', '#2']"", ""PROJECT['percent of #REF', '#3']"", ""PROJECT['difference of 100 and #REF', '#4']""]","[""SELECT['the county census']"", ""FILTER['#1', 'of 2000']"", ""PROJECT['Irish of #REF', '#2']"", ""PROJECT['percent of #REF', '#3']"", ""PROJECT['difference of 100 and #REF', '#4']""]"
DROP_dev_history_1940_e65b0134-f327-4951-9a64-19073ff8e255,Which group in percent in the county from the census of 2000 is smaller: polish or French?,"[""SELECT['the county census of 2000']"", ""PROJECT['the polish group of #REF', '#1']"", ""PROJECT['the French group of #REF', '#1']"", ""PROJECT['percent of #REF', '#2']"", ""PROJECT['percent of #REF', '#3']"", ""COMPARISON['min', '#4', '#5']""]","[""SELECT['the census of 2000 in the county']"", ""PROJECT['the polish group of #REF', '#1']"", ""PROJECT['the French group of #REF', '#1']"", ""PROJECT['percent of #REF', '#2']"", ""PROJECT['percent of #REF', '#3']"", ""COMPARISON['min', '#4', '#5']""]"
DROP_dev_history_1943_7389c938-e099-4879-a679-a7fa63af6443,How many people and families resided in the county according to the census of 2010?,"[""SELECT['the 2010 census']"", ""PROJECT['people of #REF', '#1']"", ""PROJECT['families of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['sum', '#4', '#5']""]","[""SELECT['the 2010 census']"", ""PROJECT['people that resided in the county of #REF', '#1']"", ""PROJECT['families that resided in the county of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['sum', '#4', '#5']""]"
DROP_dev_history_1945_3c054bdf-c0da-4a26-9d04-48d0f98ecb25,How many countries had a lower relative poverty rate in the OECD compared to Denmark?,"[""SELECT['the OECD']"", ""PROJECT['relative poverty rates of #REF', '#1']"", ""SELECT['Denmark']"", ""PROJECT['relative poverty rates of #REF', '#3']"", ""COMPARATIVE['#2', '#4', 'is lower than #5']"", ""AGGREGATE['count', '#6']""]","[""SELECT['the OECD']"", ""PROJECT['relative poverty rates of #REF', '#1']"", ""SELECT['Denmark']"", ""PROJECT['relative poverty rates of #REF', '#3']"", ""COMPARATIVE['#2', '#4', 'is lower than #5']""."
DROP_dev_history_1948_8cb2008f-f407-41c4-9eb6-1e796bcb4278,How many percent of the population did not reported speaking Spanish language at home?,"[""SELECT['population that reported speaking Spanish language at home']"", ""PROJECT['percent of #REF', '#1']"", ""PROJECT['difference of 100 and #REF', '#2']""]","[""SELECT['population that reported speaking Spanish language at home']"", ""PROJECT['percent of #REF', '#1']"", ""PROJECT['the difference of 100 percent and #REF', '#2']""]"
DROP_dev_history_1952_11e729d2-b86a-4ca0-a20a-cf29c818d6bd,Where there more households or families in the county?,"[""SELECT['households in the county']"", ""SELECT['families in the county']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""COMPARISON['max', '#3', '#4']""]","[""SELECT['households in the county']"", ""SELECT['families in the county']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""COMPARISON['max', '#3', '# 4']""]"
DROP_dev_history_1952_4466a59e-aa3d-438a-97a3-80b696a7ea58,"which has less, housing units or families?","[""SELECT['housing units']"", ""SELECT['families']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""COMPARISON['min', '#3', '#4']""]","[""SELECT['housing units']"", ""PROJECT['size of #REF', '#1']"", ""SELECT['families']"", ""PROJECT['size of #REF', '#3']"", ""COMPARISON['min', '#2', '#4']""]"
DROP_dev_history_1952_8907fa34-5ac1-425c-9a66-b412387f8ac9,"which has more, housing units or households?","[""SELECT['housing units']"", ""SELECT['households']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""COMPARISON['max', '#3', '#4']""]","[""SELECT['housing units']"", ""AGGREGATE['count', '#1']"", ""SELECT['households']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['max', '#2', '#4']""]"
DROP_dev_history_1952_c3f51c8f-ecbd-40d3-8e10-d4d661153d6f,Which group is larger for the county according to the census: people or families?,"[""SELECT['the county census']"", ""PROJECT['people of #REF', '#1']"", ""PROJECT['families of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['max', '#4', '#5']""]","[""SELECT['the census in the county']"", ""PROJECT['people of #REF', '#1']"", ""PROJECT['families of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['max', '#4', '#5']""]."
DROP_dev_history_1952_df815d37-6c81-4e24-aa13-8a41cfce522c,How many more people than housing units were there in the county?,"[""SELECT['the county']"", ""PROJECT['people of #REF', '#1']"", ""PROJECT['housing units of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]","[""SELECT['people in the county']"", ""SELECT['housing units in the county']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]"
DROP_dev_history_1954_2c054bf0-1177-4f44-865c-a6e02d20494e,"How many more people, in terms of percentage, were in the two biggest racial groups combined compared to the two smallest groups combined?","[""SELECT['racial groups']"", ""PROJECT['percentages of #REF', '#1']"", ""AGGREGATE['max', '#2']"", ""AGGREGATE['min', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]","[""SELECT['racial groups']"", ""PROJECT['percentages of people of #REF', '#1']"", ""AGGREGATE['max', '#2']"", ""AGGREGATE['min', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]"
DROP_dev_history_1954_614c91bb-fc11-4a34-a9e4-cc6a2b4cc439,"As of the 2000 census, which race had a larger population, Asian or white?","[""SELECT['the 2000 census']"", ""PROJECT['Asian population of #REF', '#1']"", ""PROJECT['white population of #REF', '#1']"", ""COMPARISON['max', '#2', '#3']""]","[""SELECT['the 2000 census']"", ""PROJECT['Asian populations of #REF', '#1']"", ""PROJECT['white populations of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is higher than #5']""]"
DROP_dev_history_1954_7af25553-830e-4dc5-a406-5031ecc79150,"How many people, in terms of percentage, were not either White or Asian?","[""SELECT['people']"", ""FILTER['#1', 'that were White']"", ""FILTER['#1', 'that were Asian']"", ""PROJECT['percentage of #REF', '#2']"", ""PROJECT['percentage of #REF', '#3']"", ""ARITHMETIC['sum', '#4', '#5']"", ""ARITHMETIC['difference', '#6', '#7']""]","[""SELECT['people']"", ""FILTER['#1', 'that were White']"", ""FILTER['#1', 'that were Asian']"", ""PROJECT['percentage of #REF', '#2']"", ""PROJECT['percentage of #REF', '#3']"", ""ARITHMETIC['sum', '#5', '#4']"", ""ARITHMETIC['difference', '#6', '#4']""]"
DROP_dev_history_1954_85c735e2-84ba-4b2e-8ce0-eeae594f107f,"As of the 2000 census, which race had a larger population, Pacific Islander or African American?","[""SELECT['the 2000 census']"", ""PROJECT['Pacific Islander population of #REF', '#1']"", ""PROJECT['African American population of #REF', '#1']"", ""COMPARISON['max', '#2', '#3']""]","[""SELECT['Pacific Islander']"", ""SELECT['African American']"", ""PROJECT['population as of the 2000 census of #REF', '#1']"", ""PROJECT['population as of the 2000 census of #REF', '#2']"", ""COMPARISON['max', '#3', '#4']""]"
DROP_dev_history_1954_89072b95-9881-43e5-9954-3753f061e154,"As of the 2000 census, which race had a larger population, Native American or Asian?","[""SELECT['the 2000 census']"", ""PROJECT['Native American population of #REF', '#1']"", ""PROJECT['Asian population of #REF', '#1']"", ""COMPARISON['max', '#2', '#3']""]","[""SELECT['the 2000 census']"", ""PROJECT['Native American populations of #REF', '#1']"", ""PROJECT['Asian populations of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['sum', '#3']"", ""COMPARISON['max', '#4', '#5']""]"
DROP_dev_history_1954_c503951a-fd5d-48a9-88a5-8647d27e5841,"How many more people, in terms of percentage, were White compared to Native American and African American combined?","[""SELECT['people']"", ""FILTER['#1', 'that were White']"", ""FILTER['#1', 'that were Native American']"", ""FILTER['#1', 'that were African American']"", ""PROJECT['percentage of #REF', '#2']"", ""PROJECT['percentage of #REF', '#3']"", ""ARITHMETIC['sum', '#4', '#5']"", ""ARITHMETIC['difference', '#6', '#7']""]","[""SELECT['White people']"", ""SELECT['Native American people']"", ""SELECT['African American people']"", ""PROJECT['percentage of #REF', '#1']"", ""PROJECT['percentage of #REF', '#2']"", ""PROJECT['percentage of #REF', '#3']"", ""ARITHMETIC['sum', '#4', '#5']"", ""ARITHMETIC['difference', '#6', '#7']""]"
DROP_dev_history_1954_f1f8bebc-c409-4e4f-9c1c-1accef5d39c9,"How many more people, in terms of percentage, were White compared to Native American and Asian combined?","[""SELECT['people']"", ""FILTER['#1', 'that were White']"", ""FILTER['#1', 'that were Native American']"", ""FILTER['#1', 'that were Asian']"", ""PROJECT['percentage of #REF', '#2']"", ""PROJECT['percentage of #REF', '#3']"", ""PROJECT['percentage of #REF', '#4']"", ""ARITHMETIC['sum', '#6', '#7']"", ""ARITHMETIC['difference', '#5', '#8']""]","[""SELECT['people']"", ""FILTER['#1', 'that were White']"", ""FILTER['#1', 'that were Native American']"", ""FILTER['#1', 'that were Asian']"", ""PROJECT['percentage of #REF', '#2']"", ""PROJECT['percentage of #REF', '#3']"", ""ARITHMETIC['sum', '#4', '#5']"", ""ARITHMETIC['difference', '#6', '#7']""]"
DROP_dev_history_1959_0e7a6038-835a-458d-a6dc-f937a5e1513e,How many more people were in the second biggest racial group compared to the second smallest?,"[""SELECT['racial groups']"", ""PROJECT['size of #REF', '#1']"", ""AGGREGATE['max', '#2']"", ""AGGREGATE['min', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]","[""SELECT['racial groups']"", ""PROJECT['size of #REF', '#1']"", ""SUPERLATIVE['max', '#1', '#2']"", ""SUPERLATIVE['min', '#1', '#2']"", ""AGGREGATE['max', '#4']"", ""AGGREGATE['max', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]"
DROP_dev_history_1959_44b65699-cfb2-4692-93d1-8d771f004430,How many more whites are there than Asians?,"[""SELECT['whites']"", ""SELECT['Asians']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]","[""SELECT['whites']"", ""SELECT['asiatics']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]"
DROP_dev_history_1959_611dcf50-c02d-49fe-8dc9-31406f0ee163,Which ethnic had the 4th most people?,"[""SELECT['ethnics']"", ""PROJECT['people of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is the 4th highest']""]","[""SELECT['ethnics']"", ""PROJECT['population of #REF', '#1']"", ""SUPERLATIVE['max', '#1', '#2']"", ""DISCARD['#1', '#3']"", ""SUPERLATIVE['max', '#4', '#2']""]"
DROP_dev_history_1959_67d9bb8c-d6ce-4ad0-b8d8-61785b3016f5,How many more Asian people lived in Lassen County compared to Pacific Islander?,"[""SELECT['Lassen County']"", ""PROJECT['Asian people of #REF', '#1']"", ""PROJECT['Pacific Islander people of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]","[""SELECT['Lassen County']"", ""PROJECT['Asian people in #REF', '#1']"", ""PROJECT['Pacific Islander in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]"
DROP_dev_history_1959_7891ede5-3a0a-4dc0-8907-1e12b794dbcc,Which group from the census is smaller: Pacific islander or African American?,"[""SELECT['the Pacific islander group']"", ""SELECT['the African American group']"", ""PROJECT['size of #REF', '#1']"", ""PROJECT['size of #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]","[""SELECT['the Pacific islander group from the census']"", ""SELECT['the African American group from the census']"", ""PROJECT['size of #REF', '#1']"", ""PROJECT['size of #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]"
DROP_dev_history_1959_8536a970-3850-4ad4-9626-4eab30af76e4,How many more percent of people were white than Native American?,"[""SELECT['people']"", ""FILTER['#1', 'that were white']"", ""FILTER['#1', 'that were Native American']"", ""PROJECT['percent of #REF', '#2']"", ""PROJECT['percent of #REF', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]","[""SELECT['white people']"", ""SELECT['Native American people']"", ""PROJECT['percent of #REF', '#1']"", ""PROJECT['percent of #REF', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]"
DROP_dev_history_1959_893dd11b-98e6-4c97-8188-e14895e9e014,How many more whites are there than Pacific Islanders?,"[""SELECT['whites']"", ""SELECT['Pacific Islanders']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]","[""SELECT['whites']"", ""FILTER['#1', 'that are Pacific Islanders']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]"
DROP_dev_history_1959_aebce037-f180-4dd9-9e9c-fb7908208bfa,How many more people were in the biggest racial group compared to the smallest?,"[""SELECT['racial groups']"", ""PROJECT['size of #REF', '#1']"", ""SUPERLATIVE['max', '#1', '#2']"", ""SUPERLATIVE['min', '#1', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['racial groups']"", ""PROJECT['size of #REF', '#1']"", ""SUPERLATIVE['max', '#1', '#2']"", ""SUPERLATIVE['min', '#1', '#2']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""ARITHMETIC['difference', '#3', '#6']""]"
DROP_dev_history_1959_af721dbb-7360-4929-a0c6-948ba581a32f,How many more percent of people were white than Pacific Islander?,"[""SELECT['people']"", ""FILTER['#1', 'that were white']"", ""FILTER['#1', 'that were Pacific Islander']"", ""PROJECT['percent of #REF', '#2']"", ""PROJECT['percent of #REF', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]","[""SELECT['people']"", ""FILTER['#1', 'that were white']"", ""FILTER['#1', 'that were Pacific Islander']"", ""PROJECT['percent of #REF', '#2']"", ""PROJECT['percent of #REF', '#3']"", ""ARITHMETIC['difference', '#5', '#4']""]"
DROP_dev_history_1959_b510bfa4-0657-4787-9881-eb26c4411d88,How many percent of people were not Hispanic of any race?,"[""SELECT['people']"", ""FILTER['#1', 'that were Hispanic of any race']"", ""PROJECT['percent of #REF', '#2']"", ""PROJECT['difference of 100 and #REF', '#3']""]","[""SELECT['people']"", ""PROJECT['races of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is Hispanic']"", ""PROJECT['percent of #REF', '#3']"", ""AGGREGATE['sum', '#4']""]"
DROP_dev_history_1959_c4236ef8-7ec8-49f8-8e1f-76f1344202cd,How many more white residents were there in Lassen County compared  African American?,"[""SELECT['Lassen County']"", ""PROJECT['residents of #REF', '#1']"", ""FILTER['#2', 'that were white']"", ""FILTER['#2', 'that were African American']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['Lassen County']"", ""PROJECT['white residents of #REF', '#1']"", ""PROJECT['African American residents of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]"
DROP_dev_history_1959_caf400b2-28c5-440b-835f-d9d516c6afed,How many more whites lived in Lassen County in 2010 compared to African Americans?,"[""SELECT['Lassen County']"", ""PROJECT['whites of #REF', '#1']"", ""PROJECT['African Americans of #REF', '#1']"", ""FILTER['#2', 'in 2010']"", ""FILTER['#3', 'in 2010']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""ARITHMETIC['difference', '#6', '#7']""]","[""SELECT['Lassen County']"", ""PROJECT['whites in 2010 of #REF', '#1']"", ""PROJECT['African Americans in 2010 of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]"
DROP_dev_history_1959_ce7e248f-7f42-4c06-968e-7084c60c441f,How many more Asians lived in Lassen County in 2010 compared to  Pacific Islanders?,"[""SELECT['Lassen County']"", ""PROJECT['Asians of #REF', '#1']"", ""PROJECT['Pacific Islanders of #REF', '#1']"", ""FILTER['#2', 'in 2010']"", ""FILTER['#3', 'in 2010']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""ARITHMETIC['difference', '#6', '#7']""]","[""SELECT['Lassen County']"", ""PROJECT['Asians of #REF', '#1']"", ""PROJECT['Pacific Islanders of #REF', '#1']"", ""FILTER['#2', 'in 2010']"", ""FILTER['#3', 'in 2010']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""ARITHMETIC['difference', '#7', '#6']""]"
DROP_dev_history_1959_d481524b-f213-482e-8c81-47adec6218ab,How many more whites are there than Native Americans?,"[""SELECT['whites']"", ""SELECT['Native Americans']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]","[""SELECT['whites']"", ""AGGREGATE['count', '#1']"", ""SELECT['Native Americans']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['difference', '#2', '#4']""]"
DROP_dev_history_1965_d203458b-ab85-483c-b292-30e653566c75,How many more percent was predicted by the International Monetary Fund for growth in 2011 versus 2010?,"[""SELECT['the International Monetary Fund']"", ""PROJECT['growth predicted by #REF', '#1']"", ""FILTER['#2', 'in 2011']"", ""FILTER['#2', 'in 2010']"", ""PROJECT['percent of #REF', '#3']"", ""PROJECT['percent of #REF', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['growth predicted by the International Monetary Fund']"", ""FILTER['#1', 'in 2011']"", ""FILTER['#1', 'in 2010']"", ""PROJECT['percent of #REF', '#2']"", ""PROJECT['percent of #REF', '#3']"", ""ARITHMETIC['difference', '#5', '#4']""]"
DROP_dev_history_1995_34616e58-1214-4e30-87a4-a8913c76b638,Which FA Cup season had fewer clubs entered: 2007–08 or 2008–09?,"[""SELECT['the FA Cup']"", ""PROJECT['clubs entered #REF', '#1']"", ""FILTER['#2', 'in 2007–08']"", ""FILTER['#2', 'in 2008–09']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""COMPARISON['min', '#5', '#6']""]","[""SELECT['FA Cup seasons']"", ""PROJECT['clubs entered #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is 2007–08']"", ""COMPARATIVE['#1', '#2', 'is 2008–09']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""COMPARISON['min', '#5', '#6']""]"
DROP_dev_history_1995_424e3194-e01a-4c75-b16e-22831416e23d,What season's FA cup holds the current record for most clubs participating?,"[""SELECT['seasons']"", ""PROJECT['FA cup of #REF', '#1']"", ""PROJECT['clubs participating in #REF', '#2']"", ""GROUP['count', '#3', '#2']"", ""SUPERLATIVE['max', '#2', '#4']""]","[""SELECT['seasons']"", ""PROJECT['FA cups of #REF', '#1']"", ""PROJECT['clubs participating in #REF', '#2']"", ""GROUP['count', '#3', '#2']"", ""SUPERLATIVE['max', '#2', '#4']""]"
DROP_dev_history_1995_4343d94c-b803-4768-8a13-2aaecc13cf32,Which FA Cup season had fewer clubs entered: 2004–05 or 1921–22?,"[""SELECT['FA Cup seasons']"", ""PROJECT['clubs entered #REF', '#1']"", ""FILTER['#2', 'in 2004–05']"", ""FILTER['#2', 'in 1921–22']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""COMPARISON['min', '#5', '#6']""]","[""SELECT['FA Cup season']"", ""FILTER['#1', 'in 2004–05']"", ""FILTER['#1', 'in 1921–22']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['min', '#4', '#5']""]"
DROP_dev_history_1995_67741ea6-8762-49d4-ada1-a066fc5bc8fe,Did more clubs enter the FA Cup in the 2004-05 season or the 2008-09 season?,"[""SELECT['the FA Cup']"", ""PROJECT['clubs that enter #REF', '#1']"", ""FILTER['#2', 'in the 2004-05 season']"", ""FILTER['#2', 'in the 2008-09 season']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""COMPARISON['max', '#5', '#6']""]","[""SELECT['the FA Cup']"", ""PROJECT['clubs that enter #REF', '#1']"", ""FILTER['#2', 'in 2004-05 season']"", ""FILTER['#2', 'in 2008-09 season']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""COMPARISON['max', '#5', '#6']""]"
DROP_dev_history_1995_6846bdee-eb04-4d99-9947-e0346c7b913c,Did more clubs enter the FA Cup in the 2004-05 season or the 1921-22 season?,"[""SELECT['the FA Cup']"", ""PROJECT['clubs that enter #REF', '#1']"", ""FILTER['#2', 'in 2004-05 season']"", ""FILTER['#2', 'in 1921-22 season']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""COMPARISON['max', '#5', '#6']""]","[""SELECT['FA Cup']"", ""PROJECT['clubs that enter #REF', '#1']"", ""FILTER['#2', 'in 2004-05 season']"", ""FILTER['#2', 'in 1921-22 season']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""COMPARISON['max', '#5', '#6']""]"
DROP_dev_history_1995_77b3a4e9-ffe2-4e88-bdf9-0669ca6431af,Which seasons had the second highest number of entrants?,"[""SELECT['seasons']"", ""PROJECT['entrants of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is the second highest']""]","[""SELECT['seasons']"", ""PROJECT['entrants in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is the second highest']""]"
DROP_dev_history_1995_f91049a4-d77e-4b3c-ab06-b0e6d8b6157a,How many more clubs entered the FA Cup in the 2013-14 season compared to the 2005-06 season?,"[""SELECT['the FA Cup']"", ""PROJECT['clubs that entered #REF', '#1']"", ""FILTER['#2', 'in 2013-14']"", ""FILTER['#2', 'in 2005-06']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['clubs']"", ""FILTER['#1', 'that entered the FA Cup']"", ""FILTER['#2', 'in 2013-14']"", ""FILTER['#2', 'in 2005-06']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]"
DROP_dev_history_1995_fcab0a39-12a5-4742-879c-ab796ac6651d,What season had the most clubs entered?,"[""SELECT['seasons']"", ""PROJECT['clubs entered of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']""]","[""SELECT['seasons']"", ""PROJECT['clubs entered of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is the highest']""."
DROP_dev_history_1998_1fe9ed85-656f-49a4-ae00-987ab427e97a,"Where did Howe's troops go first, Staten Island or Gravesend, Brooklyn?","[""SELECT['Howe s troops go to Staten Island']"", ""SELECT['Howe s troops go to Gravesend Brooklyn']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]","[""SELECT['Howe s troops go to Staten Island']"", ""SELECT['Howe s troops go to Gravesend, Brooklyn']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]"
DROP_dev_history_1998_46f18444-8749-47b1-afae-8195138a3b85,"Who had more casualties, the Patriots or the British?","[""SELECT['the Patriots']"", ""SELECT['the British']"", ""PROJECT['casualties of #REF', '#1']"", ""PROJECT['casualties of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""COMPARISON['max', '#5', '#6']""]","[""SELECT['casualties']"", ""FILTER['#1', 'of Patriots']"", ""FILTER['#1', 'of British']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['max', '#4', '#5']""]"
DROP_dev_history_1998_992a1196-5aef-4381-8aa7-56446ef9ca4a,How many more Patriots were casualties than British in the New York and New Jersey campaign?,"[""SELECT['the New York campaign']"", ""SELECT['the New Jersey campaign']"", ""PROJECT['casualties of #REF', '#1']"", ""PROJECT['casualties of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['the New York and New Jersey campaign']"", ""PROJECT['casualties of #REF', '#1']"", ""FILTER['#2', 'that were Patriots']"", ""FILTER['#2', 'that were British']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#5', '#7']""]"
DROP_dev_history_1998_b142f09d-45fd-452a-9d21-f0e8ecd5d7fe,"What happened first, the assembly of British forces in New York Bay, or Hows army arriving on Staten Island?","[""SELECT['the assembly of British forces in New York Bay']"", ""SELECT['Hows army arriving on Staten Island']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]","[""SELECT['the assembly of British forces in New York Bay']"", ""SELECT['hows army arriving on Staten Island']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]"
DROP_dev_history_1998_efb84d08-99d6-4754-b075-2d12c4510ddf,How many of Washington's troops were not raw recruits or militia?,"[""SELECT['Washington']"", ""PROJECT['troops of #REF', '#1']"", ""FILTER['#2', 'that were raw recruits']"", ""FILTER['#2', 'that were militia']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['sum', '#5', '#6']"", ""ARITHMETIC['difference', '#7', '#8']""]","[""SELECT['Washington']"", ""PROJECT['troops of #REF', '#1']"", ""FILTER['#2', 'that were raw recruits']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['sum', '#5', '#6']"", ""ARITHMETIC['difference', '#4', '#7']""]"
DROP_dev_history_1998_f66ee451-7c0e-4c0e-aa6f-f054c49d9a86,How many more troops did Howe have than Washington when they arrived in New York in July?,"[""SELECT['Howe']"", ""SELECT['Washington']"", ""PROJECT['troops of #REF', '#1']"", ""PROJECT['troops of #REF', '#2']"", ""FILTER['#3', 'that arrived in New York in July']"", ""FILTER['#4', 'when they arrived in July']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#6']"", ""ARITHMETIC['difference', '#7', '#8']""]","[""SELECT['Howe']"", ""PROJECT['troops of #REF', '#1']"", ""FILTER['#2', 'when they arrived in New York in July']"", ""AGGREGATE['count', '#3']"", ""SELECT['Washington']"", ""PROJECT['troops of #REF', '#5']"", ""FILTER['#6', 'when they arrived in New York in July']"", ""ARITHMETIC['difference', '#4', '#7']""]"
DROP_dev_history_200_0def9c5e-066c-45a4-ab56-81c7c7c685f4,How many more men were part of Charles first battle compared to Charles third battle?,"[""SELECT['Charles first battle']"", ""SELECT['Charles third battle']"", ""PROJECT['men of #REF', '#1']"", ""PROJECT['men of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['Charles']"", ""PROJECT['first battle of #REF', '#1']"", ""PROJECT['third battle of #REF', '#1']"", ""PROJECT['men of #REF', '#2']"", ""PROJECT['men of #REF', '#3']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""ARITHMETIC['difference', '#6', '#7']""]"
DROP_dev_history_200_468a72c0-bfd0-4c02-958e-c8b2eb4f45ce,"Which were there more of in the second battle, Italians or men of Languedoc?","[""SELECT['the second battle']"", ""PROJECT['Italians in #REF', '#1']"", ""PROJECT['men of Languedoc in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['max', '#4', '#5']""]","[""SELECT['Italians in the second battle']"", ""SELECT['men of Languedoc in the second battle']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""COMPARISON['max', '#3', '#4']""]"
DROP_dev_history_200_6153eb8b-88b3-40b7-9644-129f36fde149,How many men in all made up Charles' cavalry?,"[""SELECT['Charles']"", ""PROJECT['cavalry of #REF', '#1']"", ""PROJECT['men that made up #REF', '#2']"", ""AGGREGATE['count', '#3']""]","[""SELECT['Charles cavalry']"", ""PROJECT['men that made up #REF', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_history_200_ac47eb17-6d08-488e-9f69-8d1e0d018767,How many total Italians fought from both sides?,"[""SELECT['Italians']"", ""FILTER['#1', 'that fought from both sides']"", ""AGGREGATE['count', '#2']""]","[""SELECT['Italians']"", ""PROJECT['sides #REF fought from', '#1']"", ""GROUP['count', '#2', '#1']"", ""UNION['#1', '#3']""]"
DROP_dev_history_2001_b1190d11-f7bf-43e0-addf-7cc9d3f3e8cc,How many years did the uprising of the Enriquillos Revolt last?,"[""SELECT['the uprising of the Enriquillos Revolt']"", ""PROJECT['years of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['uprising of the Enriquillos Revolt']"", ""PROJECT['years of #REF', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_history_2004_4bd0232f-ad7b-4140-b543-9bfa34d7caf5,How many points did the Astros win game four by?,"[""SELECT['the Astros']"", ""PROJECT['points win by of #REF', '#1']""]","[""SELECT['the Astros']"", ""PROJECT['points that #REF win by', '#1']"", ""FILTER['#2', 'in game four']""]"
DROP_dev_history_2004_52f65e5e-5c6e-4af3-9e65-fade500f9196,Which team lost the National League Division Series?,"[""SELECT['the National League Division Series']"", ""PROJECT['team that lost #REF', '#1']""]","[""SELECT['the National League Division Series']"", ""PROJECT['team of #REF', '#1']""]"
DROP_dev_history_2004_706150a0-dd65-4495-bb32-e378d0e31411,"Which player playing in the 2005 National League Division Series was older, Julio Franco or Roger Clemens?","[""SELECT['Julio Franco']"", ""SELECT['Roger Clemens']"", ""FILTER['#1', 'playing in the 2005 National League Division Series']"", ""FILTER['#2', 'playing in the 2005 National League Division Series']"", ""PROJECT['how old was #REF', '#3']"", ""PROJECT['how old was #REF', '#4']"", ""COMPARISON['max', '#5', '#6']""]","[""SELECT['Julio Franco']"", ""SELECT['Roger Clemens']"", ""PROJECT['how old was #REF playing in 2005 National League Division Series', '#1']"", ""PROJECT['how old was #REF playing in 2005 National League Division Series', '#2']"", ""COMPARISON['max', '#3', '#4']""]"
DROP_dev_history_2004_901721cd-3a6b-4cd3-b50b-77b58a3d1e67,Which postseason records were set during game for of the 2005 National League Division Series?,"[""SELECT['the 2005 National League Division Series']"", ""PROJECT['games of #REF', '#1']"", ""PROJECT['postseason records of #REF', '#2']""]","[""SELECT['2005 National League Division Series']"", ""PROJECT['games of #REF', '#1']"", ""PROJECT['postseason records of #REF', '#2']""]"
DROP_dev_history_2004_bcb66440-8a81-4d5d-bba3-9a8adaf17bb0,"How many years before William Y. Giles presented the league champion Astros with the Warren C. Giles Trophy did Williams father, Warren Giles, award an MLB franchise to the city of Houston?","[""SELECT['William Y. Giles presented the league champion Astros with the Warren C. Giles Trophy']"", ""SELECT['William Giles father Warren Giles did award an MLB franchise to the city of Houston']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['William Y. Giles presented the league champion Astros with the Warren C. Giles Trophy']"", ""SELECT['William Giles father Warren Giles award an MLB franchise to the city of Houston']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]"
DROP_dev_history_2004_f26e5eb2-d484-441d-965d-5dfe7e8abe05,How many more games did the Astros win against the Braves in the 2005 National League Division Series?,"[""SELECT['the Astros']"", ""SELECT['the Braves']"", ""PROJECT['games of #REF', '#1']"", ""PROJECT['games of #REF', '#2']"", ""FILTER['#3', 'in 2005 National League Division Series']"", ""FILTER['#4', 'in 2005 National League Division Series']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#6']"", ""ARITHMETIC['difference', '#7', '#8']""]","[""SELECT['the Astros']"", ""SELECT['the Braves']"", ""PROJECT['games of #REF', '#1']"", ""PROJECT['games of #REF', '#2']"", ""FILTER['#3', 'in the 2005 National League Division Series']"", ""FILTER['#4', 'in the 2005 National League Division Series']"", ""AGGREGATE['count', '#5']"", ""ARITHMETIC['difference', '#6', '#7']""]"
DROP_dev_history_2011_686e10d5-95bd-4b50-b2a8-72dfe6439f2f,What year was GDP the highest?,"[""SELECT['GDP']"", ""AGGREGATE['max', '#1']"", ""PROJECT['year of #REF', '#2']""]","[""SELECT['GDP']"", ""PROJECT['year of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is highest']""]"
DROP_dev_history_2011_b0366cdc-0dda-4a0f-8bdf-555791cc6784,How many years was Kibaki president?,"[""SELECT['Kibaki was president']"", ""PROJECT['years of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['Kibaki was president']"", ""PROJECT['year of #REF', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_history_2011_b4302673-f9b9-4f8a-92e1-fd0c97a79e84,"Which year had the highest GDP growth, 2008 or 2009?","[""SELECT['GDP growth']"", ""FILTER['#1', 'in 2008']"", ""FILTER['#1', 'in 2009']"", ""COMPARISON['max', '#2', '#3']""]","[""SELECT['GDP growths']"", ""FILTER['#1', 'of 2008']"", ""FILTER['#1', 'of 2009']"", ""COMPARISON['max', '#2', '#3']""]"
DROP_dev_history_2011_d06c65cc-777e-461d-aa68-cadc9da7d890,"What year was the GDP higher, 2007 or 2008?","[""SELECT['GDP']"", ""FILTER['#1', 'in 2007']"", ""FILTER['#1', 'in 2008']"", ""COMPARISON['max', '#2', '#3']""]","[""SELECT['the GDP']"", ""FILTER['#1', 'in 2007']"", ""FILTER['#1', 'in 2008']"", ""COMPARISON['max', '#2', '#3']""]"
DROP_dev_history_2014_048dbf55-d585-4f99-a911-781c43e38b92,Which language as of 2011 had the fewest number of speakers?,"[""SELECT['languages']"", ""PROJECT['speakers of #REF', '#1']"", ""FILTER['#2', 'as of 2011']"", ""GROUP['count', '#3', '#1']"", ""SUPERLATIVE['min', '#1', '#4']""]","[""SELECT['languages']"", ""PROJECT['speakers of #REF', '#1']"", ""FILTER['#2', 'as of 2011']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is the fewest']""]"
DROP_dev_history_2014_1c2c47dc-4d1a-4575-b7d0-b38caef794c4,How many more percent of people spoke the most common language compared to the second most common?,"[""SELECT['people']"", ""PROJECT['languages of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']"", ""SUPERLATIVE['max', '#1', '#3']"", ""PROJECT['percent of #REF', '#4']"", ""PROJECT['percent of #REF', '#5']"", ""ARITHMETIC['difference', '#6', '#7']""]","[""SELECT['people']"", ""PROJECT['languages that #REF spoke', '#1']"", ""GROUP['count', '#2', '#1']"", ""AGGREGATE['max', '#3']"", ""AGGREGATE['max', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]"
DROP_dev_history_2014_67f5f3fe-f418-486f-9a36-6ca00451f5a0,How many in percent of people for Karnataka don't speak Telugu?,"[""SELECT['Karnataka']"", ""PROJECT['people of #REF', '#1']"", ""FILTER['#2', 'that speak Telugu']"", ""PROJECT['percent of #REF', '#3']"", ""PROJECT['difference of 100 and #REF', '#4']""]","[""SELECT['Carnataka']"", ""PROJECT['people of #REF', '#1']"", ""FILTER['#2', 'that speak Telugu']"", ""PROJECT['percent of #REF', '#3']"", ""PROJECT['difference of 100 and #REF', '#4']""]"
DROP_dev_history_2014_6803b732-55bf-4412-9b4a-642f30e7cecf,How many in percent of people for Karnataka don't speak Marathi?,"[""SELECT['Karnataka']"", ""PROJECT['people of #REF', '#1']"", ""FILTER['#2', 'that speak Marathi']"", ""PROJECT['percent of #REF', '#3']"", ""PROJECT['difference of 100 and #REF', '#4']""]","[""SELECT['people']"", ""FILTER['#1', 'for Karnataka']"", ""FILTER['#2', 'that speak Marathi']"", ""PROJECT['percent of #REF', '#3']"", ""PROJECT['the difference of 100 percent and #REF', '#4']""]"
DROP_dev_history_2014_6a6700c1-5b29-4450-9a93-1a55b8b7b420,Was the infant mortality rate or maternal mortality rate higher in 2007?,"[""SELECT['the infant mortality rate in 2007']"", ""SELECT['the maternal mortality rate in 2007']"", ""COMPARISON['max', '#1', '#2']""]","[""SELECT['infant mortality rate in 2007']"", ""SELECT['maternal mortality rate in 2007']"", ""COMPARISON['max', '#1', '#2']""]"
DROP_dev_history_2014_6c1cfa95-1413-455f-82e5-c4876bc477b1,"Which language has more speakers as of 2011, Marathi or Tamil?","[""SELECT['languages']"", ""PROJECT['speakers of #REF', '#1']"", ""FILTER['#2', 'as of 2011']"", ""COMPARATIVE['#1', '#3', 'is Marathi']"", ""COMPARATIVE['#1', '#3', 'is Tamil']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""COMPARISON['max', '#6', '#7']""]","[""SELECT['languages']"", ""PROJECT['speakers of #REF', '#1']"", ""FILTER['#2', 'as of 2011']"", ""COMPARATIVE['#1', '#3', 'is Marathi']"", ""COMPARATIVE['#1', '#3', 'is Tamil']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""COMPARISON['max', '#7', '#8']""]"
DROP_dev_history_2014_6ee3f88b-2c73-43a1-9937-e2661d0ca589,Which language for the people of Karnataka is spoken less: Urdu or Telugu?,"[""SELECT['people of Karnataka']"", ""PROJECT['spoken languages of #REF', '#1']"", ""COMPARATIVE['#2', '#1', 'is Urdu']"", ""COMPARATIVE['#2', '#1', 'is Telugu']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""COMPARISON['min', '#5', '#6']""]","[""SELECT['Karnataka']"", ""PROJECT['people of #REF', '#1']"", ""PROJECT['spoken languages of #REF', '#2']"", ""BOOLEAN['#3', 'is Urdu']"", ""BOOLEAN['#3', 'is Telugu']"", ""COMPARISON['min', '#4', '#5']""]"
DROP_dev_history_2014_8485c372-ba02-4ddf-916b-ab8295eb92e1,How many more percent of the population as of 2011 spoke Teluugu than Tamil?,"[""SELECT['the population']"", ""FILTER['#1', 'as of 2011']"", ""FILTER['#2', 'that spoke Teluugu']"", ""FILTER['#2', 'that spoke Tamil']"", ""PROJECT['percent of #REF', '#3']"", ""PROJECT['percent of #REF', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['population that spoke Teluugu']"", ""SELECT['population that spoke Tamil']"", ""FILTER['#1', 'as of 2011']"", ""FILTER['#2', 'as of 2011']"", ""PROJECT['percent of #REF', '#3']"", ""PROJECT['percent of #REF', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]"
DROP_dev_history_2014_b6b2a97f-f496-454f-bfb6-376847bf151c,"How many people, in terms of percentage, do not speak Kannada as their native language in Karnataka?","[""SELECT['people']"", ""FILTER['#1', 'that speak Kannada as their native language']"", ""FILTER['#2', 'in Karnataka']"", ""PROJECT['percentage of #REF', '#3']"", ""PROJECT['difference of 100 and #REF', '#4']""]","[""SELECT['people']"", ""FILTER['#1', 'that speak Kannada as their native language']"", ""FILTER['#2', 'in Karnataka']"", ""PROJECT['percentage of #REF', '#3']"", ""PROJECT['the difference of 100 and #REF', '#4']""]"
DROP_dev_history_2014_c831f080-6d21-4243-9693-c4c50c5e077d,"Which language has more speakers as of 2011, Marathi or Kodava Takk?","[""SELECT['spoken languages']"", ""FILTER['#1', 'as of 2011']"", ""FILTER['#2', 'that is Marathi']"", ""FILTER['#2', 'that is Kodava Takk']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""COMPARISON['max', '#5', '#6']""]","[""SELECT['spoken languages']"", ""FILTER['#1', 'as of 2011']"", ""FILTER['#2', 'that is Marathi']"", ""FILTER['#2', 'that is Kodava Takk']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""COMPARISON['max', '#5', '#6']?""]"
DROP_dev_history_2014_f19ef84d-757d-4be5-976b-1c40e2937050,"Which linguistic minority is smaller, the Konkani language or Kodava Takk?","[""SELECT['the Konkani language']"", ""SELECT['the Kodava Takk language']"", ""PROJECT['size of #REF', '#1']"", ""PROJECT['size of #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]","[""SELECT['linguistic minority']"", ""FILTER['#1', 'that is Konkani language']"", ""FILTER['#1', 'that is Kodava Takk']"", ""PROJECT['size of #REF', '#2']"", ""PROJECT['size of #REF', '#3']"", ""COMPARISON['min', '#4', '#5']""]"
DROP_dev_history_2014_f352328a-d949-40c0-acbe-88b023144f74,Which language for the people of Karnataka is spoken more: Hindi or Tulu?,"[""SELECT['people of Karnataka']"", ""PROJECT['spoken languages of #REF', '#1']"", ""FILTER['#2', 'that is Hindi']"", ""FILTER['#2', 'that is Tulu']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""COMPARISON['max', '#5', '#6']""]","[""SELECT['people of Karnataka']"", ""PROJECT['spoken languages of #REF', '#1']"", ""FILTER['#2', 'that are Hindi']"", ""FILTER['#2', 'that are Tulu']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""COMPARISON['max', '#5', '#6']""]"
DROP_dev_history_2014_f36d79dc-4298-47be-925d-412620ff8ab6,"Which linguistic minority is larger, Urdu or the Telugu language?","[""SELECT['the Urdu language']"", ""SELECT['the Telugu language']"", ""PROJECT['size of #REF', '#1']"", ""PROJECT['size of #REF', '#2']"", ""COMPARISON['max', '#3', '#4']""]","[""SELECT['linguistic minority']"", ""FILTER['#1', 'that is Urdu']"", ""FILTER['#1', 'that is Telugu']"", ""PROJECT['size of #REF', '#2']"", ""PROJECT['size of #REF', '#3']"", ""COMPARISON['min', '#4', '#5']""]"
DROP_dev_history_2021_42c8925e-7e0a-41fc-a564-f98344c609b2,How many points higher was the HDI value of Mexico City for its 2010 value than Tláhuac?,"[""SELECT['Mexico City']"", ""PROJECT['HDI value of #REF', '#1']"", ""FILTER['#2', 'in 2010']"", ""SELECT['Tláhuac']"", ""PROJECT['HDI value of #REF', '#4']"", ""ARITHMETIC['difference', '#3', '#5']""]","[""SELECT['Mexico City']"", ""SELECT['Tláhuac']"", ""PROJECT['the HDI value of #REF', '#1']"", ""PROJECT['the HDI value of #REF', '#2']"", ""FILTER['#3', 'in 2010']"", ""ARITHMETIC['difference', '#4', '#5']""."
DROP_dev_history_2021_d4ccd870-4064-4663-baaf-922b8e48c4de,How many points higher was the HDI value of Tláhuac than  rural Milpa Alta?,"[""SELECT['Tláhuac']"", ""SELECT['Milpa Alta']"", ""FILTER['#2', 'that is rural']"", ""PROJECT['HDI value of #REF', '#1']"", ""PROJECT['HDI value of #REF', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]","[""SELECT['Tláhuac']"", ""SELECT['Rural Milpa Alta']"", ""PROJECT['HDI value of #REF', '#1']"", ""PROJECT['HDI value of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]"
DROP_dev_history_2044_0903294b-08fc-4061-937a-44890a55ca78,"In which year were there replacement notes of the 1, 5, and 10 pesos?","[""SELECT['replacement notes']"", ""FILTER['#1', 'of the 1, 5, and 10 pesos']"", ""PROJECT['year of #REF', '#2']""]","[""SELECT['replacement notes']"", ""FILTER['#1', 'of the 1, 5 and 10 pesos']"", ""PROJECT['years of #REF', '#2']""]"
DROP_dev_history_2044_1840100d-60a4-4b48-818a-d8133400c381,How many denominations of centavos were there in 1942?,"[""SELECT['denominations of centavos']"", ""FILTER['#1', 'in 1942']"", ""AGGREGATE['count', '#2']""]","[""SELECT['denominations of centavos']"", ""FILTER['#1', 'that were in 1942']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_history_2044_581ced8b-43ce-4d8d-a275-2924c60957ee,How many pesos was the Mickey Mouse money created by the Japanese worth?,"[""SELECT['Mickey Mouse money']"", ""FILTER['#1', 'created by the Japanese']"", ""PROJECT['worth in pesos of #REF', '#2']""]","[""SELECT['Mickey Mouse money']"", ""FILTER['#1', 'created by the Japanese']"", ""PROJECT['value in pesos of #REF', '#2']""]"
DROP_dev_history_2044_7c72066b-f148-4554-8b81-4d74fbe61101,"Which year brought ""replacement notes"" of the 1, 5, 10 and Pesos?","[""SELECT['years']"", ""PROJECT['replacement notes of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is 1, 5, 10']"", ""COMPARATIVE['#1', '#2', 'is Pesos']"", ""INTERSECTION['#1', '#3', '#4']""]","[""SELECT['years']"", ""FILTER['#1', 'that brought replacement notes of the 1, 5, 10 and Pesos']""]"
DROP_dev_history_2044_81d1686a-e380-44ed-a796-cafb13e12eef,"What was more expensive, matches in 1944 or a kilogram of camote in 1945?","[""SELECT['matches in 1944']"", ""SELECT['a kilogram of camote in 1945']"", ""PROJECT['how expensive was #REF', '#1']"", ""PROJECT['how expensive was #REF', '#2']"", ""COMPARISON['max', '#3', '#4']""]","[""SELECT['matches']"", ""FILTER['#1', 'in 1944']"", ""SELECT['a kilogram of camote']"", ""FILTER['#2', 'in 1945']"", ""PROJECT['how expensive was #REF', '#3']"", ""PROJECT['how expensive was #REF', '#4']"", ""COMPARISON['max', '#5', '#6']""]"
DROP_dev_history_2044_b32c5736-a96f-4669-b4a1-398e7c18fdf6,How many different denominations of centavos were there in 1942?,"[""SELECT['centavos']"", ""FILTER['#1', 'in 1942']"", ""PROJECT['different denominations of #REF', '#2']"", ""AGGREGATE['count', '#3']""]","[""SELECT['centavos']"", ""PROJECT['different denominations of #REF', '#1']"", ""FILTER['#2', 'in 1942']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_history_2044_ba507d2f-895e-4227-b78f-e7268854a71f,"Which item cost the highest mickey mouse pesos in the 1940s, a kilogram of Camote or matches?","[""SELECT['items']"", ""FILTER['#1', 'that cost mickey mouse pesos in the 1940s']"", ""FILTER['#2', 'that cost a kilogram of Camote']"", ""FILTER['#2', 'that cost matches']"", ""COMPARISON['max', '#3', '#4']""]","[""SELECT['items']"", ""FILTER['#1', 'in the 1940s']"", ""PROJECT['cost of mickey mouse pesos in the 40s of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is one kilogram']"", ""COMPARATIVE['#2', '#3', 'is matches']"", ""UNION['#4', '#5']""]"
DROP_dev_history_2047_320989dc-498a-4df6-98f9-16362c01afc9,"Which Cardinal died earlier, Pierre des Près or Petrus de Foresta?","[""SELECT['Pierre des Près died']"", ""SELECT['Petrus de Foresta died']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]","[""SELECT['Pierre des Près died']"", ""SELECT['Petrus de Foresta died']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]"
DROP_dev_history_2047_4acd12c4-6394-40a2-a929-2ea6f0a7f340,How many Cardinals died during the month of June 1361?,"[""SELECT['Cardinals']"", ""FILTER['#1', 'that died during the month of June 1361']"", ""AGGREGATE['count', '#2']""]","[""SELECT['Cardinals']"", ""FILTER['#1', 'that died in the month of June 1361']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_history_2047_60e0ffa6-d4c1-4c26-aa08-23347dcb847c,How many of the Cardinals mentioned died in September 1361?,"[""SELECT['Cardinals mentioned']"", ""FILTER['#1', 'that died in September 1361']"", ""AGGREGATE['count', '#2']""]","[""SELECT['Cardinals mentioned']"", ""PROJECT['when #REF died', '#1']"", ""COMPARATIVE['#1', '#2', 'is September 1361']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_history_2047_a250133b-9b85-4c0b-8496-fb1fd74bb274,In which months during 1361 did only one cardinal die?,"[""SELECT['1361']"", ""PROJECT['cardinals that die in #REF', '#1']"", ""PROJECT['months of #REF', '#2']"", ""GROUP['count', '#2', '#3']"", ""COMPARATIVE['#3', '#4', 'is one']""]","[""SELECT['1361']"", ""PROJECT['cardinals that did die in #REF', '#1']"", ""PROJECT['months of #REF', '#2']"", ""GROUP['count', '#2', '#3']"", ""COMPARATIVE['#3', '#4', 'is one']""]"
DROP_dev_history_2047_af628589-4332-40b0-98ac-f689aae03f40,"Who died first: Cardinal Guillaume Court, O.Cist. or Cardinal Petrus Bertrandi?","[""SELECT['Cardinal Guillaume Court, O.Cist died']"", ""SELECT['Cardinal Petrus Bertrandi died']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]","[""SELECT['Cardinal Guillaume Court O.Cist died']"", ""SELECT['Cardinal Petrus Bertrandi died']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]"
DROP_dev_history_2047_e4d6957c-6a40-4a9d-8457-8d8840bae491,Who died last: Cardinal Jean de Caraman or Cardinal Bernard de la Tour?,"[""SELECT['Cardinal Jean de Caraman died']"", ""SELECT['Cardinal Bernard de la Tour died']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['max', '#3', '#4']""]","[""SELECT['Cardinal Jean de Caraman died']"", ""SELECT['Cardinal Bernard de la Tour died']"", ""PROJECT['date of #REF', '#1']"", ""PROJECT['date of #REF', '#2']"", ""COMPARISON['max', '#3', '#4']""]"
DROP_dev_history_2060_5dc37d3d-4702-4f94-9f77-f1145f8e2c65,How many people authored the study released in 2013?,"[""SELECT['the study']"", ""FILTER['#1','released in 2013']"", ""PROJECT['people that authored #REF', '#2']"", ""AGGREGATE['count', '#3']""]","[""SELECT['studies']"", ""FILTER['#1','released in 2013']"", ""PROJECT['people that authored #REF', '#2']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_history_2060_9368ae36-c505-490c-a08f-0b35cb4a623d,How many points difference is the IQ range in 17-year-old black students?,"[""SELECT['students']"", ""FILTER['#1', 'that are 17-year-old']"", ""FILTER['#2', 'that are black']"", ""PROJECT['IQ range of #REF', '#3']"", ""PROJECT['points of #REF', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['students']"", ""FILTER['#1', 'that are 17-year-old']"", ""FILTER['#2', 'that are black']"", ""PROJECT['the IQ range of #REF', '#3']"", ""PROJECT['points of #REF', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]"
DROP_dev_history_2060_c38c8e2c-6bca-467a-ba70-ea1bfc3e1a44,How many IQ points did the black-white IQ gap decrease between 1971 and 2008?,"[""SELECT['black-white IQ gap']"", ""FILTER['#1', 'in 1971']"", ""FILTER['#1', 'in 2008']"", ""ARITHMETIC['difference', '#3', '#2']""]","[""SELECT['black-white IQ gap']"", ""FILTER['#1', 'in 1971']"", ""FILTER['#1', 'in 2008']"", ""ARITHMETIC['difference', '#2', '#3']""]"
DROP_dev_history_2060_e8c68958-e1bc-41af-961a-a03bed9cbd49,How many points did the black-white IQ gap decrease from 1971-2008?,"[""SELECT['black-white IQ gap']"", ""FILTER['#1', 'in 1971-2008']"", ""PROJECT['points of #REF', '#2']"", ""PROJECT['points of #REF', '#3']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['the black-white IQ gap']"", ""PROJECT['points of #REF', '#1']"", ""FILTER['#2', 'in 1971-2008']"", ""ARITHMETIC['difference', '#3', '#4']""]"
DROP_dev_history_2064_1e221f63-9654-4ba4-98ed-355cca7c401b,Which three teams hold the record for 18 total wins in a season?,"[""SELECT['teams']"", ""PROJECT['wins in a season of #REF', '#1']"", ""GROUP['sum', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is 18']""]","[""SELECT['teams']"", ""PROJECT['wins in a season of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is 18']"", ""AGGREGATE['sum', '#4']""]"
DROP_dev_history_2064_36b5bbd6-a873-4bd8-92d9-287e4b0ad78e,How many times was the record for most regular season wins equaled or beat after the 49ers beat it in 1984?,"[""SELECT['the 49ers']"", ""PROJECT['regular season wins of #REF', '#1']"", ""AGGREGATE['max', '#2']"", ""PROJECT['when was #REF equal', '#3']"", ""PROJECT['when was #REF beat', '#3']"", ""ARITHMETIC['sum', '#5', '#6']"", ""ARITHMETIC['difference', '#4', '#7']""]","[""SELECT['the 49ers']"", ""PROJECT['regular season wins of #REF', '#1']"", ""AGGREGATE['max', '#2']"", ""PROJECT['time equal to #REF', '#3']"", ""PROJECT['time beat after 1984 of #REF', '#3']"", ""ARITHMETIC['sum', '#4', '#5']""]"
DROP_dev_history_2064_62cb5db3-892a-4868-a275-6de1b975ff9d,How many points higher was the 49ers' margin of victory against the Chicago Bears compared to against the Giants?,"[""SELECT['the 49ers']"", ""PROJECT['margin of victory against the Chicago Bears of #REF', '#1']"", ""PROJECT['margin of victory against the Giants of #REF', '#1']"", ""ARITHMETIC['difference', '#2', '#3']""]","[""SELECT['the 49ers']"", ""PROJECT['margin of victory against the Chicago Bears of #REF', '#1']"", ""PROJECT['margin of victory against the Giants of #REF', '#1']"", ""ARITHMETIC['difference', '#3', '#2']""]"
DROP_dev_history_2064_88dcc5b0-6e38-4ab7-b717-c1133a03ed8b,In the playoffs did the 49ers win by more points agains the Giants or the Bears?,"[""SELECT['the 49ers']"", ""PROJECT['points win by of #REF', '#1']"", ""FILTER['#2', 'in the playoffs']"", ""AGGREGATE['count', '#3']"", ""SELECT['the Giants']"", ""SELECT['the Bears']"", ""PROJECT['points win by of #REF', '#5']"", ""AGGREGATE['count', '#6']"", ""COMPARISON['max', '#4', '#7']""]","[""SELECT['the 49ers']"", ""PROJECT['points win by of #REF', '#1']"", ""FILTER['#2', 'in the playoffs']"", ""AGGREGATE['sum', '#3']"", ""SELECT['the Giants']"", ""SELECT['the Bears']"", ""PROJECT['points win by of #REF', '#5']"", ""AGGREGATE['sum', '#6']"", ""COMPARISON['max', '#4', '#7']""]"
DROP_dev_history_2064_a5e06783-4028-444f-a396-dc55677f01ba,By how many more points did the 49ers score then the New York Giants in the 1984 playoffs?,"[""SELECT['the 49ers']"", ""SELECT['the New York Giants']"", ""PROJECT['points scored of #REF', '#1']"", ""PROJECT['points scored of #REF', '#2']"", ""FILTER['#3', 'in the 1984 playoffs']"", ""FILTER['#4', 'in the 1984 playoffs']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#6']"", ""ARITHMETIC['difference', '#7', '#8']""]","[""SELECT['the 49ers']"", ""SELECT['the New York Giants']"", ""PROJECT['points scored By of #REF', '#1']"", ""PROJECT['points scored By of #REF', '#2']"", ""FILTER['#3', 'in the 1984 playoffs']"", ""FILTER['#4', 'in the 1984 playoffs']"", ""ARITHMETIC['difference', '#5', '#6']""]"
DROP_dev_history_2064_e3ee593d-095d-4373-83fe-6399c45feea9,How many more points did the 49ers score during the playoffs compared to their opponents?,"[""SELECT['the 49ers']"", ""PROJECT['points scored of #REF', '#1']"", ""FILTER['#2', 'during the playoffs']"", ""AGGREGATE['count', '#3']"", ""SELECT['opponents']"", ""PROJECT['points scored of #REF', '#5']"", ""FILTER['#6', 'during the playoffs']"", ""AGGREGATE['count', '#7']"", ""ARITHMETIC['difference', '#4', '#8']""]","[""SELECT['the 49ers']"", ""PROJECT['points of #REF', '#1']"", ""FILTER['#2', 'during the playoffs']"", ""AGGREGATE['sum', '#3']"", ""SELECT['the 49ers']"", ""PROJECT['points of #REF', '#5']"", ""FILTER['#6', 'during the playoffs']"", ""AGGREGATE['sum', '#7']"", ""ARITHMETIC['difference', '#4', '#8']""]"
DROP_dev_history_2064_e4a6226f-fb4f-4c47-9e33-8cdc5f5ca1bf,How many points did the 49ers win by in the NFC championship against the Chicago Bears?,"[""SELECT['the 49ers']"", ""PROJECT['points win by of #REF', '#1']"", ""FILTER['#2', 'in the NFC championship']"", ""FILTER['#3', 'in the Chicago Bears']""]","[""SELECT['49ers']"", ""PROJECT['points win by of #REF', '#1']"", ""FILTER['#2', 'in the NFC championship']"", ""FILTER['#3', 'in the Chicago Bears']""]"
DROP_dev_history_2064_f59a4f59-01ca-47e6-842a-7f91d81402c4,How many teams beat the 49ers in the 1984 season?,"[""SELECT['the 49ers']"", ""PROJECT['teams that beat #REF', '#1']"", ""FILTER['#2', 'in 1984 season']"", ""AGGREGATE['count', '#3']""]","[""SELECT['teams']"", ""PROJECT['seasons of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is 1984']"", ""FILTER['#3', 'that beat 49ers']"", ""AGGREGATE['count', '#4']""]"
DROP_dev_history_2064_f64b7b77-aaf2-4957-94b1-751b863a3470,Against which team in the playoffs did the 49ers have the highest margin of victory?,"[""SELECT['the playoffs']"", ""PROJECT['teams of #REF', '#1']"", ""PROJECT['margins of victory of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is the highest']"", ""FILTER['#4', 'Against 49ers']""]","[""SELECT['the 49ers']"", ""PROJECT['teams of #REF', '#1']"", ""FILTER['#2', 'in the playoffs']"", ""PROJECT['margins of victory of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is the highest']""]"
DROP_dev_history_208_bafb8e5b-9a52-4d04-b0c8-bdebefccc6c2,"What happened first, the Battle of Cartagena de Indias or planning the attack on La Guaira?","[""SELECT['the Battle of Cartagena de Indias']"", ""SELECT['planning the attack on La Guaira']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]","[""SELECT['the Battle of Cartagena de Indias']"", ""SELECT['planning the attack on La Guaira']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]"
DROP_dev_history_208_f120cdb3-f93e-4a09-8eec-9a5048ec5e25,How many years passed between the Battle of Cartagena de Indias and Sir Charles Knowles sailing from Antigua?,"[""SELECT['the Battle of Cartagena de Indias']"", ""SELECT['Sir Charles Knowles sailing from Antigua']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['the Battle of Cartagena de Indias']"", ""SELECT['Sir Charles Knowles sailing from Antigua']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]"
DROP_dev_history_2086_009e57c9-424b-4a5e-874a-fa76d994db0a,"How many touchdowns did ODonnell, Hastings, and Mills have put together?","[""SELECT['ODonnell']"", ""SELECT['Hastings']"", ""SELECT['Mills']"", ""PROJECT['touchdowns of #REF', '#1']"", ""PROJECT['touchdowns of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""ARITHMETIC['sum', '#6', '#7']""]","[""SELECT['ODonnell']"", ""PROJECT['touchdowns of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""SELECT['Hastings']"", ""SELECT['Mills']"", ""PROJECT['touchdowns of #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#6']"", ""ARITHMETIC['sum', '#3', '#7']""]"
DROP_dev_history_2086_0495403e-60a0-40d7-835b-a1fed1270fd5,"Who had the most receiving touchdowns between Yancey Thigpen, Andre Hastings, and Ernie Mills?","[""SELECT['Yancey Thigpen']"", ""SELECT['Andre Hastings']"", ""SELECT['Ernie Mills']"", ""PROJECT['receiving touchdowns of #REF', '#1']"", ""PROJECT['receiving touchdowns of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""ARITHMETIC['sum', '#6', '#7']"", ""COMPARISON['max', '#8', '#9']""]","[""SELECT['Yancey Thigpen']"", ""PROJECT['receiving touchdowns of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""SELECT['Andre Hastings']"", ""SELECT['Ernie Mills']"", ""PROJECT['receiving touchdowns of #REF', '#5']"", ""AGGREGATE['count', '#6']"", ""AGGREGATE['count', '#7']"", ""ARITHMETIC['sum', '#4', '#8']"", ""COMPARISON['max', '#9', '#10']""]"
DROP_dev_history_2086_05c535da-f368-4d63-9969-a18b7709b34a,Who had more touchdowns: Andre Hastings or Ernie Mills?,"[""SELECT['Andre Hastings']"", ""PROJECT['touchdowns of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""SELECT['Ernie Mills']"", ""PROJECT['touchdowns of #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""COMPARISON['max', '#3', '#6']""]","[""SELECT['Andre Hastings']"", ""PROJECT['touchdown of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""SELECT['Ernie Mills']"", ""PROJECT['touchdowns of #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""COMPARISON['max', '#3', '#6']""]"
DROP_dev_history_2086_18a23fc2-e476-42e8-be8d-de07cfa7ba24,"Who scored more touchdowns,  Erric Pegram and Bam Morris, or Yancey Thigpen?","[""SELECT['Erric Pegram and Bam Morris']"", ""SELECT['Yancey Thigpen']"", ""PROJECT['touchdowns of #REF', '#1']"", ""PROJECT['touchdowns of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""COMPARISON['max', '#5', '#6']""]","[""SELECT['Erric Pegram and Bam Morris scored touchdowns']"", ""SELECT['Yancey Thigpen scored touchdowns']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""COMPARISON['max', '#3', '#4']""]"
DROP_dev_history_2086_40835a6b-afac-4b06-ba23-4a4c87261edd,How many more touchdowns did Neil ODonnell have compared to interceptions?,"[""SELECT['Neil ODonnell']"", ""PROJECT['touchdowns of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""PROJECT['interceptions of #REF', '#1']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#3', '#5']""]","[""SELECT['Neil ODonnell']"", ""PROJECT['touchdowns of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""PROJECT['interceptions of #REF', '#1']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#3', '#6']""]"
DROP_dev_history_2086_74f0250f-d6f4-4744-a8a2-c750ff0823e1,"How many receptions did Yancey Thigpen, Andre Hastings, and Ernie Mills have combined?","[""SELECT['Yancey Thigpen']"", ""SELECT['Andre Hastings']"", ""SELECT['Ernie Mills']"", ""PROJECT['receptions of #REF', '#1']"", ""PROJECT['receptions of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""ARITHMETIC['sum', '#6', '#7']""]","[""SELECT['Yancey Thigpen']"", ""SELECT['Andre Hastings']"", ""SELECT['Ernie Mills']"", ""PROJECT['receptions of #REF', '#1']"", ""PROJECT['receptions of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""ARITHMETIC['sum', '#6', '#7', '#8']""]"
DROP_dev_history_2086_925de638-cd7e-4b29-ac5c-b72836d098e4,"How many yards, rounded to one decimal place, were Andre Hastings' punt returns on average?","[""SELECT['Andre Hastings']"", ""PROJECT['punt returns of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['avg', '#3']""]","[""SELECT['Andre Hastings']"", ""PROJECT['punt returns of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""GROUP['avg', '#3', '#1']"", ""UNION['#1', '#4']""]"
DROP_dev_history_2086_ae4f0fc9-a3a6-4f96-9329-e25d16f0b15c,How many points did the Steelers lose against the Jaguars by in the expansion 1995?,"[""SELECT['the Steelers']"", ""SELECT['the Jaguars']"", ""PROJECT['points of #REF', '#1']"", ""PROJECT['points of #REF', '#2']"", ""FILTER['#3', 'in the expansion 1995']"", ""FILTER['#4', 'in the expansion 1995']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['the Steelers']"", ""SELECT['the Jaguars']"", ""PROJECT['points of #REF', '#1']"", ""PROJECT['points of #REF', '#2']"", ""FILTER['#3', 'in the expansion 1995']"", ""FILTER['#4', 'in the expansion 1995']"", ""ARITHMETIC['difference', '#6', '#5']""]"
DROP_dev_history_2086_bd01ac93-f741-44d0-bc63-ea17da8d2cfe,How many passes did Neil ODonnell not complete?,"[""SELECT['Neil ODonnell']"", ""PROJECT['passes of #REF', '#1']"", ""FILTER['#2', 'that Neil ODonnell completes']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]","[""SELECT['Neil ODonnell']"", ""PROJECT['passes of #REF', '#1']"", ""FILTER['#2', 'that Neil ODonnell did complete']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['difference', '#5', '#4']""]"
DROP_dev_history_2086_be468264-4e73-41ca-bc45-2d0ae7bf1715,How many years in a row did Dermontti Dawson make the Pro Bowl?,"[""SELECT['Dermontti Dawson did make the Pro Bowl']"", ""PROJECT['years in a row of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['Dermontti Dawson makes the Pro Bowl']"", ""PROJECT['years in a row of #REF', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_history_2086_cdba8bc9-0570-4911-8553-b0660c231503,The Steelers finished their 1995 season having lost how many games difference to the number of games they had won?,"[""SELECT['the Steelers finished their 1995 season having lost']"", ""SELECT['the Steelers had won']"", ""PROJECT['games of #REF', '#1']"", ""PROJECT['games of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['the Steelers finished their 1995 season having lost']"", ""SELECT['the Steelers had won']"", ""PROJECT['games of #REF', '#1']"", ""PROJECT['games of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#6', '#5']""]"
DROP_dev_history_2086_ded4bc12-bfdf-4ea9-8773-09784ca3b8e1,"How many receiving touchdowns did Yancey Thigpen, Andre Hastings, and Ernie Mills have combined?","[""SELECT['Yancey Thigpen']"", ""SELECT['Andre Hastings']"", ""SELECT['Ernie Mills']"", ""PROJECT['receiving touchdowns of #REF', '#1']"", ""PROJECT['receiving touchdowns of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""ARITHMETIC['sum', '#6', '#7']""]","[""SELECT['Yancey Thigpen']"", ""PROJECT['receiving touchdowns of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""SELECT['Andre Hastings']"", ""SELECT['Ernie Mills']"", ""PROJECT['receiving touchdowns of #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#6']"", ""ARITHMETIC['sum', '#7', '#8']""]"
DROP_dev_history_2086_e266304d-c05b-4cd2-8d30-a1aa0a16c0dd,How many games did the Steelers win in 1995?,"[""SELECT['the Steelers']"", ""PROJECT['games win of #REF', '#1']"", ""FILTER['#2', 'in 1995']"", ""AGGREGATE['count', '#3']""]","[""SELECT['the Steelers']"", ""PROJECT['wins of #REF', '#1']"", ""FILTER['#2', 'in 1995']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_history_2086_f3e1b60f-639c-4bc1-9486-2190e00c1e75,How many more yards did Ernie Mills get than Andre Hastings?,"[""SELECT['Ernie Mills']"", ""PROJECT['yards of #REF', '#1']"", ""AGGREGATE['sum', '#2']"", ""SELECT['Andre Hastings']"", ""PROJECT['yards of #REF', '#4']"", ""AGGREGATE['sum', '#5']"", ""ARITHMETIC['difference', '#3', '#6']""]","[""SELECT['Ernie Mills']"", ""PROJECT['yards of #REF', '#1']"", ""AGGREGATE['sum', '#2']"", ""SELECT['Andre Hastings']"", ""PROJECT['yards of #REF', '#4']"", ""AGGREGATE['sum', '#5']"", ""ARITHMETIC['difference', '#6', '#7']""]"
DROP_dev_history_2088_15aaeea0-bab7-43fd-b7a5-7086dc2a9039,"Which group has a smaller percentage in Skojpe, the Serbs or the Roma?","[""SELECT['the Serbs']"", ""SELECT['the Roma']"", ""PROJECT['percentage in Skojpe of #REF', '#1']"", ""PROJECT['percentage in Skojpe of #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]","[""SELECT['the Serbs']"", ""SELECT['the Roma']"", ""PROJECT['percentage of Skojpe of #REF', '#1']"", ""PROJECT['percentage of Skojpe of #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]"
DROP_dev_history_2088_20d30236-f998-427a-8392-2ab000a25267,Which ethnic group of the ones listed was the smallest?,"[""SELECT['ethnic groups']"", ""FILTER['#1', 'that was the smallest']""]","[""SELECT['ethnic groups']"", ""PROJECT['size of #REF', '#1']"", ""AGGREGATE['min', '#2']""]"
DROP_dev_history_2088_3daad9bd-055b-4c19-a5b2-f360ee1fb638,How many in percent from the census in Skopje weren't Roma?,"[""SELECT['the census in Skopje']"", ""PROJECT['romans of #REF', '#1']"", ""PROJECT['percent of #REF', '#2']"", ""PROJECT['difference of 100 and #REF', '#3']""]","[""SELECT['the census in Skopje']"", ""PROJECT['Roma of #REF', '#1']"", ""PROJECT['percent of #REF', '#2']"", ""PROJECT['difference of 100 and #REF', '#3']""]"
DROP_dev_history_2088_410bb5ec-eb16-40aa-a375-08c6062be0ef,Which group from the census in Skopje is smaller: Macedonians or Bosniaks?,"[""SELECT['the census in Skopje']"", ""PROJECT['the Macedonians group of #REF', '#1']"", ""PROJECT['the Bosniaks group of #REF', '#1']"", ""PROJECT['size of #REF', '#2']"", ""PROJECT['size of #REF', '#3']"", ""COMPARISON['min', '#4', '#5']""]","[""SELECT['the census in Skopje']"", ""PROJECT['Macedonian groups of #REF', '#1']"", ""PROJECT['Bosnian groups of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['min', '#4', '#5']""]"
DROP_dev_history_2088_667b8972-f95e-4ce9-bd11-ec0a071fcc95,Which group from the census in Skopje is larger: Macedonians or Turks?,"[""SELECT['the census in Skopje']"", ""PROJECT['Macedonian group of #REF', '#1']"", ""PROJECT['Turks group of #REF', '#1']"", ""PROJECT['size of #REF', '#2']"", ""PROJECT['size of #REF', '#3']"", ""COMPARISON['max', '#4', '#5']""]","[""SELECT['the census in Skopje']"", ""PROJECT['Macedonian groups of #REF', '#1']"", ""PROJECT['Turks groups of #REF', '#1']"", ""PROJECT['size of #REF', '#2']"", ""PROJECT['size of #REF', '#3']"", ""COMPARISON['max', '#4', '#5']""]"
DROP_dev_history_2088_7729539d-3fec-4108-872b-3d1e6c193148,How many more Macedonians were there compared to Albanians according to the 2002 census?,"[""SELECT['the 2002 census']"", ""PROJECT['Macedonians of #REF', '#1']"", ""PROJECT['Albanians of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]","[""SELECT['the 2002 census']"", ""PROJECT['Macedonians of #REF', '#1']"", ""PROJECT['Albanians of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""."
DROP_dev_history_2088_806017ea-fe47-4515-a485-319ca782f07b,"Which group has a larger percentage in Skojpe, Albanians or Macedonians?","[""SELECT['Skojpe']"", ""PROJECT['Albanians of #REF', '#1']"", ""PROJECT['Macedonians of #REF', '#1']"", ""PROJECT['percentage of #REF', '#2']"", ""PROJECT['percentage of #REF', '#3']"", ""COMPARISON['max', '#4', '#5']""]","[""SELECT['Albanians']"", ""SELECT['Macedonians']"", ""PROJECT['percentage of #REF in Skojpe', '#1']"", ""PROJECT['percentage of #REF', '#2']"", ""COMPARISON['max', '#3', '#4']""]"
DROP_dev_history_2088_82c5fa37-c885-4ded-8ba4-08212c028fde,Which ethnic groups went to Macedonia?,"[""SELECT['Macedonia']"", ""PROJECT['ethnic groups that went to #REF', '#1']""]","[""SELECT['Macedonia']"", ""PROJECT['ethnic groups who went to #REF', '#1']""]"
DROP_dev_history_2088_91141a11-5e0c-4d4e-9e79-175f8ad8c2a4,Which group from the census in Skopje is smaller: Macedonians or Serbs?,"[""SELECT['the census in Skopje']"", ""PROJECT['the Macedonians group of #REF', '#1']"", ""PROJECT['the Serbs group of #REF', '#1']"", ""PROJECT['size of #REF', '#2']"", ""PROJECT['size of #REF', '#3']"", ""COMPARISON['min', '#4', '#5']""]","[""SELECT['the census in Skopje']"", ""PROJECT['the Macedonians group of #REF', '#1']"", ""PROJECT['the Serbs group of #REF', '#1']"", ""PROJECT['size of #REF', '#2']"", ""PROJECT['size of #REF', '#3']"", ""COMPARISON['min', '#4', '#6']""]"
DROP_dev_history_2088_a8884c7e-c30b-4fbe-8d90-c9c3b1f9c4c4,Were there more Serbs or Vlachs in Skopje in 2002?,"[""SELECT['Skopje']"", ""FILTER['#1', 'in 2002']"", ""PROJECT['Serbs of #REF', '#2']"", ""PROJECT['Vlachs of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""COMPARISON['max', '#5', '#6']""]","[""SELECT['Skopje']"", ""FILTER['#1', 'in 2002']"", ""PROJECT['Serbs in #REF', '#2']"", ""PROJECT['Vlachs in #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""COMPARISON['max', '#5', '#6']""]"
DROP_dev_history_2090_442df6b2-6168-4f85-b31c-c87cd9ede0da,How many more cases of heart disease is TX expected to see in 2030 compared with 2010?,"[""SELECT['TX']"", ""PROJECT['cases of heart disease expected to see of #REF', '#1']"", ""FILTER['#2', 'in 2030']"", ""FILTER['#2', 'in 2010']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['TX']"", ""PROJECT['cases of heart disease expected to see of #REF', '#1']"", ""FILTER['#2', 'in 2030']"", ""FILTER['#2', 'in 2010']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#6', '#5']""]"
DROP_dev_history_2090_5bf02085-eb0e-4cfb-b996-d85e65b3c5f4,What are all the disease cases that are the higher than heart disease in 2010?,"[""SELECT['diseases']"", ""FILTER['#1', 'in 2010']"", ""PROJECT['cases of #REF', '#2']"", ""PROJECT['cases of #REF', '#3']"", ""FILTER['#4', 'that are heart disease']"", ""FILTER['#5', 'in 2010']"", ""COMPARATIVE['#3', '#6', 'is higher than #7']""]","[""SELECT['disease cases']"", ""FILTER['#1', 'in 2010']"", ""SELECT['heart disease']"", ""FILTER['#2', 'in 2010']"", ""COMPARATIVE['#1', '#3', 'is higher than #4']""]"
DROP_dev_history_2090_70219b12-ba29-4831-9adc-817c3b0c7898,Are there expected to be more cases of heart disease or diabetes in 2030?,"[""SELECT['cases of heart disease in 2030']"", ""SELECT['cases of diabetes in 2030']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""COMPARISON['max', '#3', '#4']""]","[""SELECT['cases of heart disease']"", ""FILTER['#1', 'in 2030']"", ""AGGREGATE['count', '#2']"", ""SELECT['cases of diabetes']"", ""AGGREGATE['count', '#4']"", ""COMPARISON['max', '#5', '#3']""]"
DROP_dev_history_2090_856c15b7-3390-4dfa-b58b-a5d14d22dace,What were all cases predicted in 2030 to be higher than 5 million?,"[""SELECT['cases']"", ""FILTER['#1', 'prevised in 2030']"", ""PROJECT['population of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is higher than 5 million']""]","[""SELECT['cases']"", ""FILTER['#1', 'predicted in 2030']"", ""PROJECT['population of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is higher than 5 million']""]"
DROP_dev_history_2090_8d3db860-8c45-4c5d-9ebc-9a0a2db323f0,Does Texas expect to see more cases of heart disease in 2010 or in 2030?,"[""SELECT['Texas']"", ""PROJECT['cases of heart disease in 2010 of #REF', '#1']"", ""PROJECT['cases of heart disease in 2030 of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['max', '#4', '#5']""]","[""SELECT['Texas']"", ""PROJECT['cases of heart disease expected in 2010 of #REF', '#1']"", ""PROJECT['cases of heart disease expected in 2030 of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['max', '#4', '#5']""]"
DROP_dev_history_2090_9f07fda6-fa65-4e82-b09f-e86f27137d51,Were there more cases of heart disease or of diabetes in 2010?,"[""SELECT['cases of heart disease']"", ""SELECT['cases of diabetes']"", ""FILTER['#1', 'in 2010']"", ""FILTER['#2', 'in 2010']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""COMPARISON['max', '#5', '#6']""]","[""SELECT['cases of heart disease']"", ""SELECT['cases of diabetes']"", ""FILTER['#1', 'of 2010']"", ""FILTER['#2', 'of 2010']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""COMPARISON['max', '#5', '#6']""]"
DROP_dev_history_2090_c2770bd8-24e3-453d-ac39-38df971dcdeb,How many more cases of heart disease does Texas predict it will see in 2030 compared with 2010?,"[""SELECT['Texas']"", ""PROJECT['cases of heart disease predicted it will see in 2030 of #REF', '#1']"", ""PROJECT['cases predicted it will see in 2010 of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]","[""SELECT['TX']"", ""PROJECT['cases of heart disease predicted of #REF', '#1']"", ""FILTER['#2', 'in 2030']"", ""FILTER['#2', 'in 2010']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]"
DROP_dev_history_2090_e176be1d-7725-45d0-8b3f-be112bc7d968,"What disease has predicted to be the largest amount of cases in 2030, hypertension or diabetes?","[""SELECT['hypertension']"", ""SELECT['diabetes']"", ""FILTER['#1', 'that predicted to be the largest amount of cases in 2030']"", ""FILTER['#2', 'that predicted to be the largest amount of cases in 2030']"", ""COMPARISON['max', '#3', '#4']""]","[""SELECT['hypertension predicted to be the largest amount of cases in 2030']"", ""SELECT['diabetes predicted to be the largest amount of cases in 2030']"", ""BOOLEAN['#1', 'if there is #REF']""]"
DROP_dev_history_2090_f813f690-e9c4-42e0-bcd5-957b98f7a563,What was the largest number of cases in 2010; hypertension or diabetes?,"[""SELECT['cases']"", ""FILTER['#1', 'in 2010']"", ""FILTER['#2', 'of hypertension']"", ""FILTER['#2', 'of diabetes']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""COMPARISON['max', '#5', '#6']""]","[""SELECT['hypertension cases']"", ""FILTER['#1', 'in 2010']"", ""AGGREGATE['count', '#2']"", ""SELECT['diabetes cases']"", ""FILTER['#4', 'in 2010']"", ""AGGREGATE['count', '#5']"", ""COMPARISON['max', '#3', '#6']""]"
DROP_dev_history_2090_fa1cb100-d66a-48c1-bbee-b4ddc538c415,How many fewer cases of hypertension is TX expecting to see in 2010 comapred with 2030?,"[""SELECT['TX']"", ""PROJECT['cases of hypertension expecting to see in 2010 of #REF', '#1']"", ""PROJECT['cases of hypertension expecting to see in 2030 of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]","[""SELECT['TX']"", ""PROJECT['cases of hypertension expecting to see in 2010 of #REF', '#1']"", ""PROJECT['cases of hypertension expecting to see in 2030 of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['difference', '#5', '#6']""]"
DROP_dev_history_2102_246cafc3-2072-4af8-a684-fa54046095ac,How many percent more people worked in services in 1980 compared to 1955?,"[""SELECT['people']"", ""FILTER['#1', 'that worked in services']"", ""FILTER['#2', 'in 1980']"", ""FILTER['#2', 'in 1955']"", ""PROJECT['percent of #REF', '#3']"", ""PROJECT['percent of #REF', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['people']"", ""FILTER['#1', 'that worked in services']"", ""FILTER['#2', 'in 1980']"", ""FILTER['#2', 'in 1955']"", ""PROJECT['percent of #REF', '#3']"", ""PROJECT['percent of #REF', '#4']"", ""ARITHMETIC['difference', '#6', '#5']""]"
DROP_dev_history_2102_2f2a8ca0-199f-433a-a64c-d65b03c7ddd5,"Which year had more people working in agriculture, 1955 or 1980?","[""SELECT['people working in agriculture']"", ""FILTER['#1', 'in 1955']"", ""FILTER['#1', 'in 1980']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['max', '#4', '#5']""]","[""SELECT['people']"", ""FILTER['#1', 'that were working in agriculture']"", ""FILTER['#2', 'in 1955']"", ""FILTER['#2', 'in 1980']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""COMPARISON['max', '#5', '#6']""]"
DROP_dev_history_2102_5f7441b4-138c-4c70-9a20-0fc0c373e940,Did less people work in agriculture in 1980 or 1955?,"[""SELECT['people']"", ""FILTER['#1', 'that work in agriculture']"", ""FILTER['#2', 'in 1980']"", ""FILTER['#2', 'in 1955']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""COMPARISON['min', '#5', '#6']""]","[""SELECT['people']"", ""FILTER['#1', 'that worked in agriculture']"", ""FILTER['#2', 'in 1980']"", ""FILTER['#2', 'in 1955']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""COMPARISON['min', '#5', '#6']""]"
DROP_dev_history_2102_79bacdf4-b669-4e2a-9be3-e73ab82a9467,"Which year had less employees in services, 1955 or 1980?","[""SELECT['employees in services']"", ""FILTER['#1', 'in 1955']"", ""FILTER['#1', 'in 1980']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['min', '#4', '#5']""]","[""SELECT['employees']"", ""FILTER['#1', 'in services']"", ""FILTER['#2', 'in 1955']"", ""FILTER['#2', 'in 1980']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""COMPARISON['min', '#5', '#6']""]"
DROP_dev_history_2102_8e94ecbc-ed37-4b38-bd21-ad2ce7422387,"Which race had the highest unemployment in the US in 1955,Caucasians or African Americans?","[""SELECT['the US']"", ""PROJECT['unemployment of #REF', '#1']"", ""FILTER['#2', 'in 1955']"", ""FILTER['#3', 'that was Caucasians']"", ""FILTER['#3', 'that was African Americans']"", ""COMPARISON['max', '#4', '#5']""]","[""SELECT['the US']"", ""PROJECT['unemployment in 1955 of #REF', '#1']"", ""FILTER['#2', 'that is Caucasians']"", ""FILTER['#2', 'that is African Americans']"", ""COMPARISON['max', '#3', '#4']""]"
DROP_dev_history_2102_a3192959-ef01-425d-8dfe-84678d68e362,About how many more percent of Amerians worked in services in 1980 than in 1955?,"[""SELECT['Amerians']"", ""FILTER['#1', 'that worked in services']"", ""FILTER['#2', 'in 1980']"", ""FILTER['#2', 'in 1955']"", ""PROJECT['percent of #REF', '#3']"", ""PROJECT['percent of #REF', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['Amerians']"", ""FILTER['#1', 'that worked in services']"", ""FILTER['#2', 'in 1980']"", ""FILTER['#2', 'in 1955']"", ""PROJECT['percent of #REF', '#3']"", ""PROJECT['percent of #REF', '#4']"", ""ARITHMETIC['difference', '#6', '#5']""]"
DROP_dev_history_2142_064ea513-bf9b-46bd-bcdd-1f221dabad9a,How many percent did not speak Vietnamese?,"[""SELECT['those that speak Vietnamese']"", ""PROJECT['percent of #REF', '#1']"", ""PROJECT['the difference of 100 percent and #REF', '#2']""]","[""SELECT['those that speak Vietnamese']"", ""PROJECT['percent of #REF', '#1']"", ""PROJECT['difference of 100 and #REF', '#2']""]"
DROP_dev_history_2142_13b0a833-7a21-4d82-b894-22df69413f28,How many percent were English American and German American combined?,"[""SELECT['English American']"", ""SELECT['German American']"", ""PROJECT['percent of #REF', '#1']"", ""PROJECT['percent of #REF', '#2']"", ""ARITHMETIC['sum', '#3', '#4']""]","[""SELECT['English American']"", ""PROJECT['percent of #REF', '#1']"", ""SELECT['German American']"", ""PROJECT['percent of #REF', '#3']"", ""ARITHMETIC['sum', '#2', '#4']""]"
DROP_dev_history_2142_165de714-e8ba-4aa4-b8cc-329fbb6df82d,How many races each made up over 5% of the population?,"[""SELECT['races']"", ""PROJECT['%S of the population of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is higher than 5 %']"", ""AGGREGATE['count', '#3']""]","[""SELECT['races']"", ""PROJECT['%S of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is higher than 5 %']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_history_2142_373f73fb-83ea-483f-a7c3-1cbed017ad84,How many in percent from the census weren't Irish American?,"[""SELECT['the census']"", ""PROJECT['Irish American of #REF', '#1']"", ""PROJECT['percent of #REF', '#2']"", ""PROJECT['difference of 100 and #REF', '#3']""]","[""SELECT['the census']"", ""PROJECT['Irish American in #REF', '#1']"", ""PROJECT['percent of #REF', '#2']"", ""PROJECT['difference of 100 and #REF', '#3']""]"
DROP_dev_history_2142_52399365-b02a-47a1-bb71-fa416814aefd,Which group from the census in the county is larger: German American or English American?,"[""SELECT['the census in the county']"", ""PROJECT['German American group of #REF', '#1']"", ""PROJECT['English American group of #REF', '#1']"", ""PROJECT['size of #REF', '#2']"", ""PROJECT['size of #REF', '#3']"", ""COMPARISON['max', '#4', '#5']""]","[""SELECT['the census in the county']"", ""PROJECT['German American group of #REF', '#1']"", ""PROJECT['English American group of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['max', '#4', '#5']""]"
DROP_dev_history_2142_6bb9fdba-d625-4710-82eb-c7ebada449d1,Which group from the census is larger: German American or English American?,"[""SELECT['the census']"", ""PROJECT['German American group of #REF', '#1']"", ""PROJECT['English American group of #REF', '#1']"", ""PROJECT['size of #REF', '#2']"", ""PROJECT['size of #REF', '#3']"", ""COMPARISON['max', '#4', '#5']""]","[""SELECT['the census']"", ""PROJECT['German American of #REF', '#1']"", ""PROJECT['English American of #REF', '#1']"", ""PROJECT['size of #REF', '#2']"", ""PROJECT['size of #REF', '#3']"", ""COMPARISON['max', '#4', '#5']""]"
DROP_dev_history_2142_b037ec8a-2db1-4e8c-949d-41409543e18f,Which group from the census is larger: German American or Americans ancestry?,"[""SELECT['the census']"", ""PROJECT['German American group of #REF', '#1']"", ""PROJECT['American groups of #REF', '#1']"", ""PROJECT['size of #REF', '#2']"", ""PROJECT['size of #REF', '#3']"", ""COMPARISON['max', '#4', '#5']""]","[""SELECT['the census']"", ""PROJECT['German American groups of #REF', '#1']"", ""PROJECT['American groups of #REF', '#1']"", ""PROJECT['size of #REF', '#2']"", ""PROJECT['size of #REF', '#3']"", ""COMPARISON['max', '#4', '#5']""]"
DROP_dev_history_2142_b327bbd7-e633-4d44-b2b2-69cdd035c1ae,Which group from the census in the county is smaller: German American or Irish American?,"[""SELECT['the census in the county']"", ""PROJECT['German American group of #REF', '#1']"", ""PROJECT['Irish American group of #REF', '#1']"", ""PROJECT['size of #REF', '#2']"", ""PROJECT['size of #REF', '#3']"", ""COMPARISON['min', '#4', '#5']""]","[""SELECT['the census in the county']"", ""PROJECT['the German American group of #REF', '#1']"", ""PROJECT['the Irish American group of #REF', '#1']"", ""PROJECT['size of #REF', '#2']"", ""PROJECT['size of #REF', '#3']"", ""COMPARISON['min', '#4', '#5']""]"
DROP_dev_history_2142_d7b01be5-e94c-42b1-b83a-5cadc9e86b38,How many different languages are spoken at home in this county according to the percentages listed in the census of 2000?,"[""SELECT['the census of 2000']"", ""PROJECT['different languages spoken at home in this county of #REF', '#1']"", ""PROJECT['percentage of #REF', '#2']""]","[""SELECT['the census of 2000']"", ""PROJECT['different spoken languages of #REF', '#1']"", ""PROJECT['percentage of #REF', '#2']"", ""ARITHMETIC['difference', '#3', '#1']""]"
DROP_dev_history_2142_df447655-2373-4d9a-8ba3-9333523b897a,Which group from the census is larger: German American or Irish American?,"[""SELECT['the census']"", ""PROJECT['German American group of #REF', '#1']"", ""PROJECT['Irish American group of #REF', '#1']"", ""PROJECT['size of #REF', '#2']"", ""PROJECT['size of #REF', '#3']"", ""COMPARISON['max', '#4', '#5']""]","[""SELECT['group from the census']"", ""FILTER['#1', 'that is German American']"", ""FILTER['#1', 'that is Irish American']"", ""PROJECT['size of #REF', '#2']"", ""PROJECT['size of #REF', '#3']"", ""COMPARISON['max', '#4', '#5']""]"
DROP_dev_history_2142_e8f776ef-6438-419b-bb3f-f64aa2e086eb,Which group from the census is smaller: German American or Americans ancestry?,"[""SELECT['the census']"", ""PROJECT['the German American group of #REF', '#1']"", ""PROJECT['the Americans ancestry group of #REF', '#1']"", ""PROJECT['size of #REF', '#2']"", ""PROJECT['size of #REF', '#3']"", ""COMPARISON['min', '#4', '#5']""]","[""SELECT['the census']"", ""PROJECT['German American group of #REF', '#1']"", ""PROJECT['American ancestry group of #REF', '#1']"", ""PROJECT['size of #REF', '#2']"", ""PROJECT['size of #REF', '#3']"", ""COMPARISON['min', '#4', '#5']""]"
DROP_dev_history_2151_9fba868d-c51a-4baf-81f8-cfdc4f08cdd7,Which age group had the smallest percentage?,"[""SELECT['age groups']"", ""PROJECT['percentages of #REF', '#1']"", ""SUPERLATIVE['min', '#1', '#2']""]","[""SELECT['age groups']"", ""FILTER['#1', 'with the smallest percentage']""]"
DROP_dev_history_2151_c5eb7e68-a994-484e-9cb5-6af2e28c9a62,Which age group had the second most people,"[""SELECT['age groups']"", ""PROJECT['people of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']"", ""DISCARD['#1', '#4']"", ""SUPERLATIVE['max', '#5', '#3']""]","[""SELECT['age groups']"", ""PROJECT['people of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']"", ""DISCARD['#1', '#4']"", ""SUPERLATIVE['max', '#4', '#5']""]"
DROP_dev_history_2151_e2514a1c-07d1-49dc-b987-0dd832b5bd52,"How many more people, in terms of percentage, were in the 2nd and 3rd largest age groups combined compared to the largest?","[""SELECT['age groups']"", ""PROJECT['percentages of #REF', '#1']"", ""AGGREGATE['max', '#2']"", ""AGGREGATE['max', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]","[""SELECT['age groups']"", ""PROJECT['percentages of #REF', '#1']"", ""AGGREGATE['max', '#2']"", ""AGGREGATE['max', '#2']"", ""ARITHMETIC['sum', '#3', '#4']"", ""ARITHMETIC['difference', '#4', '#5']""]"
DROP_dev_history_2151_fb3128d1-c543-4942-a530-54379d83e196,Were there more people under 45 or 45 and older?,"[""SELECT['people']"", ""FILTER['#1', 'that were under 45']"", ""FILTER['#1', 'that were 45 and older']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['max', '#4', '#5']""]","[""SELECT['people']"", ""FILTER['#1', 'that are under 45']"", ""FILTER['#1', 'that are 45 and older']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['max', '#4', '#5']""]"
DROP_dev_history_2153_14a79d27-648a-4a2f-8dea-01a86d01b1a5,How many more percentage points in truancy did South Bucks have over Slough?,"[""SELECT['South Bucks']"", ""SELECT['Slows']"", ""PROJECT['truancy of #REF', '#1']"", ""PROJECT['truancy of #REF', '#2']"", ""PROJECT['percentage of #REF', '#3']"", ""PROJECT['percentage of #REF', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['South Bucks']"", ""SELECT['Slows']"", ""PROJECT['truancy of #REF', '#1']"", ""PROJECT['truancy of #REF', '#2']"", ""PROJECT['percentage of #REF', '#3']"", ""PROJECT['percentage of #REF', '#4']"", ""ARITHMETIC['difference', '#6', '#5']""]"
DROP_dev_history_2153_31523efd-03f9-4cd9-a3bc-b917ec096ede,How many percent difference is there between the highest and lowest percentage of school free meals?,"[""SELECT['school free meals']"", ""PROJECT['percentage of #REF', '#1']"", ""AGGREGATE['max', '#2']"", ""AGGREGATE['min', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]","[""SELECT['meals']"", ""FILTER['#1', 'that are school free']"", ""PROJECT['percentage of #REF', '#2']"", ""AGGREGATE['max', '#3']"", ""AGGREGATE['min', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]"
DROP_dev_history_2153_3f49f693-488a-47d4-9c68-e09cae496276,How many places have the same lowest truancy percentages of 2.5?,"[""SELECT['places']"", ""PROJECT['truancy percentages of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is the lowest']"", ""COMPARATIVE['#1', '#2', 'is 2.5']"", ""INTERSECTION['#1', '#3', '#4']"", ""AGGREGATE['count', '#5']""]","[""SELECT['places']"", ""PROJECT['truancy percentages of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is 2.5']"", ""GROUP['min', '#3', '#1']"", ""COMPARATIVE['#1', '#2', 'is equal to #4']"", ""AGGREGATE['count', '#5']""]"
DROP_dev_history_2153_626890bf-3f00-4e77-ab41-3c12fd0037ab,How many points difference is the truancy rate between Southampton and Rushmoor?,"[""SELECT['truancy rates']"", ""FILTER['#1', 'of Southampton']"", ""FILTER['#1', 'of Rushmoor']"", ""ARITHMETIC['difference', '#2', '#3']""]","[""SELECT['Salem']"", ""PROJECT['truancy rate of #REF', '#1']"", ""SELECT['Rushmoor']"", ""PROJECT['truancy rate of #REF', '#3']"", ""ARITHMETIC['difference', '#4', '#2']""]"
DROP_dev_history_2153_6a0dd595-8ce1-4181-8900-8280282aad56,How many percentages higher is truancy in South Bucks compared to Tandridge?,"[""SELECT['South Bucks']"", ""SELECT['Tandridge']"", ""PROJECT['truancy of #REF', '#1']"", ""PROJECT['truancy of #REF', '#2']"", ""PROJECT['percentage of #REF', '#3']"", ""PROJECT['percentage of #REF', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['South Bucks']"", ""SELECT['Tandridge']"", ""PROJECT['truancy in percentage of #REF', '#1']"", ""PROJECT['truancy in percentage of #REF', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]"
DROP_dev_history_2153_cd92f4cf-e248-42bd-9b2b-8d5706dc2cd9,How many more percentage points in truancy did South Bucks have over Rushmoor?,"[""SELECT['South Bucks']"", ""SELECT['Rushmoor']"", ""PROJECT['truancy of #REF', '#1']"", ""PROJECT['truancy of #REF', '#2']"", ""PROJECT['percentage of #REF', '#3']"", ""PROJECT['percentage of #REF', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['South Bucks']"", ""SELECT['Rushmoor']"", ""PROJECT['truancy of #REF', '#1']"", ""PROJECT['truancy of #REF', '#2']"", ""PROJECT['percentage of #REF', '#3']"", ""PROJECT['percentage of #REF', '#4']"", ""ARITHMETIC['difference', '#6', '#5']""]"
DROP_dev_history_2153_ea2a6082-5b95-4b43-9f78-ed9b61528a00,How many percent difference is there between the school with the highest number of students that did not gain an GCSE pass and the lowest?,"[""SELECT['schools']"", ""PROJECT['students of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is the highest']"", ""COMPARATIVE['#1', '#3', 'is the lowest']"", ""INTERSECTION['#1', '#4', '#5']"", ""PROJECT['percent of #REF', '#6']"", ""PROJECT['percent of #REF', '#7']"", ""ARITHMETIC['difference', '#8', '#9']""]","[""SELECT['schools']"", ""PROJECT['students of #REF', '#1']"", ""FILTER['#2', 'that did gain an GCSE pass']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is the highest']"", ""COMPARATIVE['#1', '#5', 'is the lowest']"", ""PROJECT['percent of #REF', '#6']"", ""PROJECT['percent of #REF', '#7']"", ""ARITHMETIC['difference', '#8', '#9']""]"
DROP_dev_history_2162_29c05556-cec1-4e8c-8f33-e973cd51f7bf,"How many residents, in terms of percentage, were younger than 25?","[""SELECT['residents']"", ""FILTER['#1', 'that were younger than 25']"", ""PROJECT['percentage of #REF', '#2']""]","[""SELECT['residents']"", ""PROJECT['younger than 25 of #REF', '#1']"", ""PROJECT['percentage of #REF', '#2']""]"
DROP_dev_history_2162_3c1da219-7fc4-43a3-9543-f7310b8c4281,"How many more people, in terms of percentage, belonged to the biggest age group compared to the 2nd and 3rd biggest age groups combined?","[""SELECT['age groups']"", ""PROJECT['percentages of #REF', '#1']"", ""AGGREGATE['max', '#2']"", ""AGGREGATE['max', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]","[""SELECT['age groups']"", ""PROJECT['percentages of #REF', '#1']"", ""AGGREGATE['max', '#2']"", ""AGGREGATE['max', '#2']"", ""ARITHMETIC['sum', '#3', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]"
DROP_dev_history_2162_73a2ec3b-27d3-4fe0-972b-7e8ba3de5687,Was the median age higher or lower than 22 years old?,"[""SELECT['median age']"", ""FILTER['#1', 'that was higher than 22 years old']"", ""FILTER['#1', 'that was lower than 22 years old']"", ""UNION['#2', '#3']""]","[""SELECT['median age']"", ""FILTER['#1', 'of 22 years old']"", ""BOOLEAN['#2', 'higher than #3']"", ""BOOLEAN['#2', 'lower than #3']"", ""COMPARISON['true', '#4', '#5']""]"
DROP_dev_history_2162_7b9d968f-cf07-4b56-a1df-4cc68fb9bea4,"Were more people between the ages of 25 to 44, or 45 to 64?","[""SELECT['people']"", ""FILTER['#1', 'between the ages of 25 to 44']"", ""FILTER['#1', 'between the ages of 45 to 64']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['max', '#4', '#5']""]","[""SELECT['people']"", ""PROJECT['ages of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is higher than 25']"", ""COMPARATIVE['#1', '#2', 'is lower than 44']"", ""COMPARATIVE['#1', '#2', 'is lower than 45']"", ""COMPARATIVE['#1', '#4', 'is higher than 64']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#6']"", ""COMPARISON['max', '#7', '#8']""]"
DROP_dev_history_2162_96171ae9-6096-4b1b-a2b3-88f25f75989b,How many in percent weren't 18 and 24?,"[""SELECT['those that were 18 and 24']"", ""PROJECT['percent of #REF', '#1']"", ""PROJECT['the difference of 100 percent and #REF', '#2']""]","[""SELECT['those that were 18 and 24']"", ""PROJECT['percent of #REF', '#1']"", ""PROJECT['difference of 100 and #REF', '#2']""]"
DROP_dev_history_2162_97ac650a-23b8-4630-81c7-c6e6757c1112,"Were more people between the ages of 25 to 44, or over 65?","[""SELECT['people']"", ""FILTER['#1', 'between the ages of 25 to 44']"", ""FILTER['#1', 'over 65']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['max', '#4', '#5']""]","[""SELECT['people']"", ""FILTER['#1', 'between the ages of 25 to 44']"", ""FILTER['#1', 'over the age of 65']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['max', '#4', '#5']""]"
DROP_dev_history_2162_9e860e5c-a113-41b4-b609-b1b6223727cf,How many in percent weren't between the ages of 18 and 24?,"[""SELECT['those that were between the ages of 18 and 24']"", ""PROJECT['percent of #REF', '#1']"", ""PROJECT['the difference of 100 percent and #REF', '#2']""]","[""SELECT['those between the ages of 18 and 24']"", ""PROJECT['percent of #REF', '#1']"", ""PROJECT['the difference of 100 percent and #REF', '#2']""]"
DROP_dev_history_2162_a974dc44-2594-4d56-860e-d29914635c93,"How many more people, in terms of percentage, belonged to the biggest age group compared to the two smallest age groups combined?","[""SELECT['age groups']"", ""PROJECT['percentages of people of #REF', '#1']"", ""AGGREGATE['max', '#2']"", ""AGGREGATE['min', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]","[""SELECT['age groups']"", ""PROJECT['percentages of #REF', '#1']"", ""AGGREGATE['max', '#2']"", ""AGGREGATE['min', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]"
DROP_dev_history_2162_af33339f-91ba-46c8-bf69-cd5aea8c8b71,How many in percent weren't male?,"[""SELECT['percent that were male']"", ""PROJECT['the difference of 100 percent and #REF', '#1']""]","[""SELECT['males']"", ""PROJECT['percent of #REF', '#1']"", ""PROJECT['difference of 100 and #REF', '#2']""]"
DROP_dev_history_2162_b93c971d-e880-4748-9524-634d97b11ed4,Which age group was the second smallest?,"[""SELECT['age groups']"", ""PROJECT['size of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is the second lowest']""]","[""SELECT['age groups']"", ""PROJECT['size of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is second lowest']""]"
DROP_dev_history_2162_bc2bd2aa-dff6-4d2d-9db3-0302df5eefa0,Was the median age higher or lower than 23 years old?,"[""SELECT['median age']"", ""FILTER['#1', 'that was higher than 23 years old']"", ""FILTER['#1', 'that was lower than 23 years old']"", ""UNION['#2', '#3']""]","[""SELECT['median age']"", ""FILTER['#1', 'that is higher than 23 years old']"", ""FILTER['#1', 'that is lower than 23 years old']"", ""UNION['#2', '#3']""]"
DROP_dev_history_2162_f433e0b0-aa58-4363-9faa-4702ce08e9ac,What group in percent is larger: 25 to 44 or 45 to 64?,"[""SELECT['groups']"", ""FILTER['#1', 'that is 25 to 44']"", ""FILTER['#1', 'that is 45 to 64']"", ""PROJECT['percent of #REF', '#2']"", ""PROJECT['percent of #REF', '#3']"", ""COMPARISON['max', '#4', '#5']""]","[""SELECT['groups']"", ""FILTER['#1', 'that are 25 to 44']"", ""FILTER['#1', 'that are 45 to 64']"", ""PROJECT['percent of #REF', '#2']"", ""PROJECT['percent of #REF', '#3']"", ""COMPARISON['max', '#4', '#5']""]"
DROP_dev_history_2162_f8a14a78-76b9-4ac2-b4ec-961b3e676a2f,"Were more people under 18, or between the ages of 45 to 64?","[""SELECT['people']"", ""FILTER['#1', 'that Were under 18']"", ""FILTER['#1', 'that Were between the ages of 45 to 64']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['max', '#4', '#5']""]","[""SELECT['people']"", ""FILTER['#1', 'under 18']"", ""FILTER['#1', 'between the ages of 45 to 64']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['max', '#4', '#5']""]"
DROP_dev_history_2164_198dd9f7-2558-4ffc-8fe3-1aa033be4f4e,How many more percentage points was there of those from 18 to 24 than there was from 25 to 44?,"[""SELECT['those from 18 to 24']"", ""SELECT['those from 25 to 44']"", ""PROJECT['percentage of #REF', '#1']"", ""PROJECT['percentage of #REF', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]","[""SELECT['those that are from 18 to 24']"", ""SELECT['those that are from 25 to 44']"", ""PROJECT['percentage of #REF', '#1']"", ""PROJECT['percentage of #REF', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]"
DROP_dev_history_2164_36e8d0d5-c6a0-44f4-9dce-0dcf510706a9,How many percentage points difference is there between the number of people 18 years old and under and those who are 18 to 24 years old?,"[""SELECT['people']"", ""FILTER['#1', 'that are 18 years old and under']"", ""FILTER['#1', 'that are 18 to 24 years old']"", ""PROJECT['percentage of #REF', '#2']"", ""PROJECT['percentage of #REF', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]","[""SELECT['people']"", ""FILTER['#1', 'that are 18 years old and under']"", ""FILTER['#1', 'that are 18 to 24 years old']"", ""PROJECT['percentage of #REF', '#2']"", ""PROJECT['percentage of #REF', '#3']"", ""ARITHMETIC['difference', '#5', '#4']""]"
DROP_dev_history_2164_56d03fac-5aed-4ce5-ba9b-af28d64b7e14,"Who has the lowest percent in the city population, 65 45 to 64?","[""SELECT['the city']"", ""PROJECT['population of #REF', '#1']"", ""FILTER['#2', 'that is 65 45 to 64']"", ""PROJECT['percent of #REF', '#3']"", ""SUPERLATIVE['min', '#1', '#4']""]","[""SELECT['the city']"", ""PROJECT['population of #REF', '#1']"", ""FILTER['#2', 'that is 65 45 to 64']"", ""PROJECT['percent of #REF', '#3']"", ""AGGREGATE['min', '#4']""]"
DROP_dev_history_2164_7c738afe-3dda-4d4d-ae07-7a46dd64e0e0,How many are 25 years old than 65 years old?,"[""SELECT['people']"", ""FILTER['#1', 'that are 25 years old']"", ""FILTER['#1', 'that are 65 years old']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]","[""SELECT['25 years old']"", ""SELECT['65 years old']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]"
DROP_dev_history_2164_fa0ff92d-eacc-4eaa-9ca0-7ab639445ef9,How many more females per 100 age 18 and over were there than males?,"[""SELECT['females']"", ""FILTER['#1', 'per 100 age 18 and over']"", ""AGGREGATE['count', '#2']"", ""SELECT['males']"", ""FILTER['#4', 'per 100 age 18 and over']"", ""AGGREGATE['count', '#5']"", ""ARITHMETIC['difference', '#3', '#6']""]","[""SELECT['females']"", ""PROJECT['ages of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is at least 18']"", ""AGGREGATE['count', '#3']"", ""SELECT['males']"", ""PROJECT['ages of #REF', '#5']"", ""COMPARATIVE['#5', '#6', 'is at least 18']"", ""AGGREGATE['count', '#7']"", ""ARITHMETIC['difference', '#4', '#8']""]"
DROP_dev_history_2170_021777cc-48af-4379-9c44-f444dc80e73b,Were there more people of self-identified Puerto Rican or French ancestry?,"[""SELECT['people']"", ""FILTER['#1', 'of self-identified Puerto Rican ancestry']"", ""FILTER['#1', 'of French ancestry']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['max', '#4', '#5']""]","[""SELECT['people']"", ""FILTER['#1', 'with self-identified Puerto Rican ancestry']"", ""FILTER['#1', 'with French ancestry']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['max', '#4', '#5']""]"
DROP_dev_history_2170_0d079bc9-1394-44a7-adbd-945e638722fb,Were there more Asian or Native American citizens in the 2010 census?,"[""SELECT['the 2010 census']"", ""PROJECT['Asian citizens of #REF', '#1']"", ""PROJECT['Native American citizens of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['max', '#4', '#5']""]","[""SELECT['2010 census']"", ""PROJECT['Asian citizens of #REF', '#1']"", ""PROJECT['Native American citizens of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['max', '#4', '#5']""]"
DROP_dev_history_2170_467dc327-60ca-41b2-9eb1-945518b72edc,How many percent of people were not white-Hispanic?,"[""SELECT['people']"", ""FILTER['#1', 'that were white-Hispanic']"", ""PROJECT['percent of #REF', '#2']"", ""PROJECT['difference of 100 and #REF', '#3']""]","[""SELECT['white-Hispanic people']"", ""PROJECT['percent of #REF', '#1']"", ""PROJECT['difference of 100 and #REF', '#2']""]"
DROP_dev_history_2170_715def7c-7ab2-4ca7-a669-a926615a09fb,Did more people self-identify with a Guyanese or Irish ancestry?,"[""SELECT['people']"", ""PROJECT['ancestry of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is Guyanese']"", ""COMPARATIVE['#1', '#2', 'is Irish']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""COMPARISON['max', '#5', '#6']""]","[""SELECT['people']"", ""FILTER['#1', 'that self-identify with a Guyanese ancestry']"", ""FILTER['#1', 'that self-identify with an Irish ancestry']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['max', '#4', '#5']""]"
DROP_dev_history_2170_749ed05c-22fc-4ba8-ac83-040be66718d5,How many percent of people were not  Puerto Rican?,"[""SELECT['people']"", ""FILTER['#1', 'that were Puerto Rican']"", ""PROJECT['percent of #REF', '#2']"", ""PROJECT['difference of 100 and #REF', '#3']""]","[""SELECT['people']"", ""FILTER['#1', 'that were Puerto Rican']"", ""PROJECT['percent of #REF', '#2']"", ""PROJECT['the difference of 100 percent and #REF', '#3']""]"
DROP_dev_history_2170_77ec7d38-739a-4ca5-9bc2-b63670f435f6,How many percent more people were in the the second largest group compared to the second smallest?,"[""SELECT['groups']"", ""PROJECT['percents of people of #REF', '#1']"", ""AGGREGATE['max', '#2']"", ""AGGREGATE['min', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]","[""SELECT['groups']"", ""PROJECT['percents of people in #REF', '#1']"", ""AGGREGATE['max', '#2']"", ""AGGREGATE['min', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]"
DROP_dev_history_2170_9b27311d-81ec-4f40-a4af-7ead916d5859,How many ancestries were identified by less than 10% of the population for each group?,"[""SELECT['groups']"", ""PROJECT['ancestries of #REF', '#1']"", ""PROJECT['%S of the population identified by #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is lower than 10 %']"", ""GROUP['count', '#4', '#1']"", ""UNION['#1', '#5']""]","[""SELECT['groups']"", ""PROJECT['ancestries identified by #REF', '#1']"", ""PROJECT['%S of the population of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is lower than 10 %']"", ""GROUP['count', '#4', '#1']"", ""UNION['#1', '#5']""]"
DROP_dev_history_2170_a058bdd9-a1e8-444d-9899-efc9ceb72bc1,What ancestries were self-identified by fewer than 7% of the population?,"[""SELECT['ancestries']"", ""PROJECT['%S self-identified of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is lower than 7 %']""]","[""SELECT['ancestries']"", ""PROJECT['%S self-identified of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is less than 7 %']""]"
DROP_dev_history_2170_a0d6b6e2-edbe-47e9-a8bf-41d434edd643,Which ancestries are between 12 and 12.9%?,"[""SELECT['ancestries']"", ""PROJECT['%S of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is betweenleftside 12']"", ""COMPARATIVE['#3', '#2', 'is betweenrightside 12']""]","[""SELECT['ancestries']"", ""PROJECT['%S of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is at least 12 and 12.9%']""]"
DROP_dev_history_2170_a546a7ce-3869-48f8-96e7-20a9c005c759,Were there more self-identified Guyanese or Irish?,"[""SELECT['Guyananese']"", ""SELECT['Irish']"", ""FILTER['#1', 'that were self-identified']"", ""FILTER['#2', 'that were self-identified']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""COMPARISON['max', '#5', '#6']""]","[""SELECT['Guyananese']"", ""SELECT['Irish']"", ""FILTER['#1', 'that were self-identified']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['max', '#4', '#5']""]"
DROP_dev_history_2170_c952a52d-9c56-47cf-89a0-8f249a2e4992,How many more percent did the largest ancestry have compared to the smallest?,"[""SELECT['ancestries']"", ""PROJECT['size of #REF', '#1']"", ""SUPERLATIVE['max', '#1', '#2']"", ""SUPERLATIVE['min', '#1', '#2']"", ""PROJECT['percent of #REF', '#3']"", ""PROJECT['percent of #REF', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['ancestries']"", ""PROJECT['size of #REF', '#1']"", ""SUPERLATIVE['max', '#1', '#2']"", ""SUPERLATIVE['min', '#1', '#2']"", ""PROJECT['percent of #REF', '#3']"", ""PROJECT['percent of #REF', '#4']"", ""ARITHMETIC['difference', '#6', '#5']""]"
DROP_dev_history_2170_ed881ec8-1232-4fee-9b6a-29ac20cf8a43,What ancestries were self-identified by more than 10% of the population?,"[""SELECT['ancestries']"", ""PROJECT['%S self-identified of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is higher than 10 %']""]","[""SELECT['ancestries']"", ""FILTER['#1', 'that were self-identified by more than 10 % of the population']""]"
DROP_dev_history_2170_ee68cc80-e09a-4177-a3dc-5da3f116cc02,Which ancestries were between 5 and 9%?,"[""SELECT['ancestries']"", ""PROJECT['%S of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is betweenleftside 5']"", ""COMPARATIVE['#3', '#2', 'is betweenrightside 9 %']""]","[""SELECT['ancestries']"", ""PROJECT['%S of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is betweenleftside 5']"", ""COMPARATIVE['#4', '#2', 'is betweenrightside 9 %']""]"
DROP_dev_history_2176_09d3a94c-c50b-4beb-9282-409156b91b88,Which group had the smallest amount of foreign nationals in Bangkok?,"[""SELECT['groups']"", ""PROJECT['foreign nationals of #REF', '#1']"", ""FILTER['#2', 'in Bangkok']"", ""GROUP['count', '#3', '#1']"", ""SUPERLATIVE['min', '#1', '#4']""]","[""SELECT['groups']"", ""PROJECT['foreign nationals in Bangkok of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['min', '#1', '#3']""]"
DROP_dev_history_2176_0bdc1504-ddda-4dfb-8baa-4fcd76657056,Approximately how many more people live in Bangkok in 2018 compared to 2010?,"[""SELECT['Bangkok']"", ""PROJECT['people that live in #REF', '#1']"", ""FILTER['#2', 'in 2018']"", ""FILTER['#2', 'in 2010']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['Bangkok']"", ""PROJECT['people of #REF', '#1']"", ""FILTER['#2', 'in 2018']"", ""FILTER['#2', 'in 2010']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]"
DROP_dev_history_2176_152ee1a0-2954-4fa4-925c-0344f609b3a2,Are there more Japanese or Chinese nationals in Bangkok?,"[""SELECT['Bangkok']"", ""PROJECT['nationals of #REF', '#1']"", ""FILTER['#2', 'that are Japanese']"", ""FILTER['#2', 'that are Chinese']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""COMPARISON['max', '#5', '#6']""]","[""SELECT['Bangkok']"", ""PROJECT['national Japanese in #REF', '#1']"", ""PROJECT['national Chinese in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['max', '#4', '#5']""]"
DROP_dev_history_2176_355ba35f-8132-498d-ac54-53b85d5db0b8,Do more expatriates come from europe or the Americas?,"[""SELECT['expatriates']"", ""FILTER['#1', 'that come from europe']"", ""FILTER['#1', 'that come from the Americas']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['max', '#4', '#5']""]","[""SELECT['expats']"", ""FILTER['#1', 'from europe']"", ""FILTER['#1', 'from the Americas']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['max', '#4', '#5']""]"
DROP_dev_history_2176_44ede24d-a942-4315-98b0-ca4fae2377d0,Where there more expatriots in Bangkok from Africa or Australia?,"[""SELECT['Bangkok']"", ""PROJECT['expatriots of #REF', '#1']"", ""FILTER['#2', 'from Africa']"", ""FILTER['#2', 'from Australia']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""COMPARISON['max', '#5', '#6']""]","[""SELECT['Bangkok']"", ""PROJECT['expatriots in #REF', '#1']"", ""FILTER['#2', 'from Africa']"", ""FILTER['#2', 'from Australia']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""COMPARISON['max', '#5', '#6']""]"
DROP_dev_history_2176_6303dde9-0e0e-4083-ad63-292aee0b6bdc,Are there more Burmese or Cambodian immigrants in Bangkok?,"[""SELECT['Bangkok']"", ""PROJECT['immigrants of #REF', '#1']"", ""FILTER['#2', 'that are Burmese']"", ""FILTER['#2', 'that are Cambodian']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""COMPARISON['max', '#5', '#6']""]","[""SELECT['Bangkok']"", ""PROJECT['immigrants in #REF', '#1']"", ""FILTER['#2', 'that are Burmese']"", ""FILTER['#2', 'that are Cambodian']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""COMPARISON['max', '#5', '#6']""]"
DROP_dev_history_2176_6c6a6c3c-7201-41d5-ad26-6d4108419b03,Does Bangkok have more Japanese or Chinese nationals?,"[""SELECT['Bangkok']"", ""PROJECT['nationals of #REF', '#1']"", ""FILTER['#2', 'that are Japanese']"", ""FILTER['#2', 'that are Chinese']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""COMPARISON['max', '#5', '#6']""]","[""SELECT['Bangkok']"", ""PROJECT['national Japanese in #REF', '#1']"", ""PROJECT['national Chinese in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['max', '#4', '#5']""]"
DROP_dev_history_2176_8203ffaf-cb55-4d28-a010-d933cb0e9c8e,Where there more expatriots in Bangkok from Africa or Lao?,"[""SELECT['Bangkok']"", ""PROJECT['expatriots of #REF', '#1']"", ""FILTER['#2', 'from Africa']"", ""FILTER['#2', 'from Lao']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""COMPARISON['max', '#5', '#6']""]","[""SELECT['Bangkok']"", ""PROJECT['expatriots in #REF', '#1']"", ""FILTER['#2', 'from Africa']"", ""FILTER['#2', 'from Lao']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""COMPARISON['max', '#5', '#6']""]"
DROP_dev_history_2176_89231d6d-51f7-44bc-a314-f01695ab3bf8,How many more Japanese are there compared to Chinese nationals in Bangkok?,"[""SELECT['Bangkok']"", ""PROJECT['nationals of #REF', '#1']"", ""FILTER['#2', 'that are Japanese']"", ""FILTER['#2', 'that are Chinese']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['Bangkok']"", ""PROJECT['nationals in #REF', '#1']"", ""FILTER['#2', 'that are Japanese']"", ""FILTER['#2', 'that are Chinese']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]"
DROP_dev_history_2176_d39bdaae-26b1-4c57-af41-88293cf51eb6,Where there more expatriots in Bangkok from China or Burma?,"[""SELECT['Bangkok']"", ""PROJECT['expatriots of #REF', '#1']"", ""FILTER['#2', 'from China']"", ""FILTER['#2', 'from Burma']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""COMPARISON['max', '#5', '#6']""]","[""SELECT['Bangkok']"", ""PROJECT['expatriots of #REF', '#1']"", ""FILTER['#2', 'that are from China']"", ""FILTER['#2', 'that are from Burma']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""COMPARISON['max', '#5', '#6']."
DROP_dev_history_2176_fa24c271-dcf2-48fe-ab39-b27dfff88d98,Which area has a large population: Bangkok or the Bangkok Metropolitan Region?,"[""SELECT['Bangkok']"", ""PROJECT['population of #REF', '#1']"", ""SELECT['the Bangkok Metropolitan Region']"", ""PROJECT['population of #REF', '#3']"", ""COMPARISON['max', '#2', '#4']""]","[""SELECT['the Bangkok Metropolitan Region']"", ""PROJECT['population of #REF', '#1']"", ""PROJECT['population of #REF', '#2']"", ""COMPARISON['max', '#3', '#4']""]"
DROP_dev_history_2176_ff3cbbfa-bf0b-4355-9a4c-2066dd4782ab,Are there less immigrants from the Burmese or Cambodia?,"[""SELECT['immigrants']"", ""FILTER['#1', 'from the Burmese']"", ""FILTER['#1', 'from Cambodia']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['min', '#4', '#5']""]","[""SELECT['immigrants']"", ""FILTER['#1', 'from Burmese']"", ""FILTER['#1', 'from Cambodia']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['min', '#4', '#5']""]"
DROP_dev_history_2179_00a87937-cf6b-487e-a5fd-fd93ab298c35,How many more travelers in Bangkok were Thai rather than foreign in 2010?,"[""SELECT['Thailand']"", ""PROJECT['travelers of #REF', '#1']"", ""FILTER['#2', 'in 2010']"", ""FILTER['#3', 'that were Thai']"", ""FILTER['#3', 'that were foreign']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""ARITHMETIC['difference', '#6', '#7']""]","[""SELECT['Thailand']"", ""PROJECT['travelers of #REF', '#1']"", ""FILTER['#2', 'in 2010']"", ""FILTER['#3', 'that were foreign']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""ARITHMETIC['difference', '#6', '#7']""]"
DROP_dev_history_2179_1628225b-efe7-4282-8066-6a26eb03bfaf,How many more Thai tourists were there than foreign tourists?,"[""SELECT['Thai tourists']"", ""SELECT['foreign tourists']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]","[""SELECT['Thai tourists']"", ""SELECT['foreign tourists']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]same as #5']"
DROP_dev_history_2179_1d9fd840-eb77-46b2-9dfc-bf60a5b0ec88,Were there more foreign visitors or Thai travelers in Bangkok?,"[""SELECT['Bangkok']"", ""PROJECT['foreign visitors of #REF', '#1']"", ""PROJECT['Thai travelers of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['max', '#4', '#5']""]","[""SELECT['Bangkok']"", ""PROJECT['foreign visitors in #REF', '#1']"", ""PROJECT['Thai travelers in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['max', '#4', '#5']""]"
DROP_dev_history_2179_5ddb9402-24e9-4b5a-b5e4-d40600b439a8,"Which visited Bangkok more in 2010, Thai visitors or foreign visitors?","[""SELECT['Thai visitors']"", ""SELECT['foreign visitors']"", ""FILTER['#1', 'in 2010']"", ""FILTER['#2', 'in 2010']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""COMPARISON['max', '#5', '#6']""]","[""SELECT['Bangkok']"", ""PROJECT['Thai visitors visited #REF', '#1']"", ""PROJECT['foreign visitors visited #REF', '#1']"", ""FILTER['#2', 'in 2010']"", ""FILTER['#3', 'in 2010']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""COMPARISON['max', '#6', '#7']""]"
DROP_dev_history_2179_5e44f574-bab2-406f-9c96-be4facfc56f4,Which had the highest amount of tourists in Bangkok 2010 according to the Department of Tourism: Thai or foreign visitors?,"[""SELECT['Bangkok 2010']"", ""PROJECT['tourists of #REF', '#1']"", ""FILTER['#2', 'according to the Department of Tourism']"", ""FILTER['#3', 'that are Thai']"", ""FILTER['#3', 'that are foreign visitors']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""COMPARISON['max', '#6', '#7']""]","[""SELECT['Bangkok 2010']"", ""PROJECT['tourists of #REF', '#1']"", ""FILTER['#2', 'according to the Department of Tourism']"", ""FILTER['#3', 'that are Thai']"", ""FILTER['#3', 'that are foreign visitors']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""COMPARISON['max', '#6', '#7']""]"
DROP_dev_history_2179_b2940de2-45cc-4727-a5df-bff309816c52,How many more Thai visitors did Bangkok have in 2010 compared to other foreign visitors?,"[""SELECT['Thai visitors']"", ""SELECT['other foreign visitors']"", ""FILTER['#1', 'in 2010']"", ""FILTER['#2', 'in 2010']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['Bangkok']"", ""PROJECT['Thai visitors in 2010 of #REF', '#1']"", ""PROJECT['other foreign visitors in 2010 of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""."
DROP_dev_history_2187_27189445-ef12-49b8-8cdb-d1e2f79799c5,How many percent were not  Polish?,"[""SELECT['Polish']"", ""PROJECT['percent of #REF', '#1']"", ""PROJECT['difference of 100 and #REF', '#2']""]","[""SELECT['Polish']"", ""PROJECT['percent of #REF', '#1']"", ""PROJECT['the difference of 100 percent and #REF', '#2']""]"
DROP_dev_history_2187_32a8d1bc-8cba-4f9c-b219-43ac7d12b831,How many percent of people were not Irish?,"[""SELECT['people']"", ""FILTER['#1', 'that were Irish']"", ""PROJECT['percent of #REF', '#2']"", ""PROJECT['difference of 100 and #REF', '#3']""]","[""SELECT['people']"", ""FILTER['#1', 'that were Irish']"", ""DISCARD['#1', '#2']"", ""PROJECT['percent of #REF', '#3']""]"
DROP_dev_history_2187_9cfda451-d4d6-4191-bd43-ee0f38711cb5,How many percent of people were not German?,"[""SELECT['people']"", ""FILTER['#1', 'that were German']"", ""PROJECT['percent of #REF', '#2']"", ""PROJECT['difference of 100 and #REF', '#3']""]","[""SELECT['people']"", ""FILTER['#1', 'that were German']"", ""AGGREGATE['count', '#2']"", ""PROJECT['percent of #REF', '#3']"", ""PROJECT['the difference of 100 and #REF', '#4']""]"
DROP_dev_history_2187_a6590aaf-a372-4c1c-8fe5-b918d4a61309,"Which group had less of a population, two or more races or Pacific Islander?","[""SELECT['two or more races']"", ""SELECT['Pacific Islander']"", ""PROJECT['population of #REF', '#1']"", ""PROJECT['population of #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]","[""SELECT['groups']"", ""PROJECT['population of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is two or more races']"", ""COMPARATIVE['#1', '#2', 'is Pacific Islander']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""COMPARISON['min', '#5', '#6']""]"
DROP_dev_history_2188_1ffa94c5-05b2-4e78-9a98-a0ac56fbc5cc,Which ancestral groups are smaller than 13%?,"[""SELECT['ancestral groups']"", ""PROJECT['size of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is lower than 13 %']""]","[""SELECT['ancestral groups']"", ""PROJECT['%S of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is lower than 13']""]"
DROP_dev_history_2188_35aacaf4-9e63-4afb-8570-d6050cf351bb,How many people and families reside in the county according to the 2000 census?,"[""SELECT['the 2000 census']"", ""PROJECT['people of #REF', '#1']"", ""PROJECT['families of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['sum', '#4', '#5']""]","[""SELECT['the 2000 census']"", ""PROJECT['people in the county of #REF', '#1']"", ""PROJECT['families in the county of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['sum', '#5', '#4']""]"
DROP_dev_history_2188_399d1a7c-eebd-4fbf-8110-37d74032bab3,How many in percent from the census weren't of united states?,"[""SELECT['the census']"", ""PROJECT['those that were of united states of #REF', '#1']"", ""PROJECT['percent of #REF', '#2']"", ""PROJECT['the difference of 100 percent and #REF', '#3']""]","[""SELECT['the census']"", ""PROJECT['those that were of united states in percent of #REF', '#1']"", ""PROJECT['the difference of 100 percent and #REF', '#2']""]"
DROP_dev_history_2188_420c9197-ccfb-4354-8f62-0f9ea5282d17,How many in percent in the county from the census of 2000 weren't German?,"[""SELECT['the county census']"", ""FILTER['#1', 'in 2000']"", ""PROJECT['German of #REF', '#2']"", ""PROJECT['percent of #REF', '#3']"", ""PROJECT['difference of 100 and #REF', '#4']""]","[""SELECT['the county census']"", ""FILTER['#1', 'in 2000']"", ""PROJECT['German of #REF', '#2']"", ""PROJECT['percent of #REF', '#3']"", ""PROJECT['the difference of 100 percent and #REF', '#4']""]"
DROP_dev_history_2188_57b67f40-2e96-4028-afee-824865565ce1,"In the county according to the 2000 census, which group is smaller: people or households?","[""SELECT['the 2000 census in the county']"", ""PROJECT['people of #REF', '#1']"", ""PROJECT['households of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['min', '#4', '#5']""]","[""SELECT['the 2000 census']"", ""PROJECT['the county according to #REF', '#1']"", ""PROJECT['people in #REF', '#2']"", ""PROJECT['households in #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""COMPARISON['min', '#5', '#6']""]"
DROP_dev_history_2188_a6389e88-d39a-41b3-873f-4011b1d70457,"In the county according to the 2000 census, which group is larger: people or households?","[""SELECT['the 2000 census in the county']"", ""PROJECT['people of #REF', '#1']"", ""PROJECT['households of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['max', '#4', '#5']""]","[""SELECT['the 2000 census']"", ""PROJECT['the county according to #REF', '#1']"", ""PROJECT['people in #REF', '#2']"", ""PROJECT['households in #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""COMPARISON['max', '#6', '#5']""]"
DROP_dev_history_2188_ccb7bedf-3002-4e11-86ea-0ff957be29a5,How many more percentages of people were germans compared to irish?,"[""SELECT['people']"", ""FILTER['#1', 'that were germans']"", ""FILTER['#1', 'that were irish']"", ""PROJECT['percentage of #REF', '#2']"", ""PROJECT['percentage of #REF', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]","[""SELECT['people']"", ""FILTER['#1', 'that were germans']"", ""FILTER['#2', 'that were irish']"", ""PROJECT['percentage of #REF', '#3']"", ""PROJECT['percentage of #REF', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]"
DROP_dev_history_2188_ceb6aa17-0e69-4b48-9814-aadd02795fbe,"In the county according to the 2000 census, which group is smaller: people or families?","[""SELECT['the 2000 census in the county']"", ""PROJECT['people of #REF', '#1']"", ""PROJECT['families of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['min', '#4', '#5']""]","[""SELECT['the 2000 census']"", ""PROJECT['the county according to #REF', '#1']"", ""PROJECT['people in #REF', '#2']"", ""PROJECT['families in #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""COMPARISON['min', '#5', '#6']""]"
DROP_dev_history_2188_cfa00e24-c565-439c-96ec-e76383631a66,"In the county according to the 2000 census, which group is larger: people or families?","[""SELECT['the 2000 census in the county']"", ""PROJECT['people of #REF', '#1']"", ""PROJECT['families of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['max', '#4', '#5']""]","[""SELECT['groups in the county according to the 2000 census']"", ""FILTER['#1', 'that is people']"", ""FILTER['#1', 'that is families']"", ""PROJECT['size of #REF', '#2']"", ""PROJECT['size of #REF', '#3']"", ""COMPARISON['max', '#4', '#5']""]"
DROP_dev_history_2196_03074e4c-5e32-4625-8934-78dec716e3f1,"How many homes out of 19,306 consisted of non-families?","[""SELECT['homes']"", ""FILTER['#1', 'that consisted of non-families']"", ""AGGREGATE['count', '#2']""]","[""SELECT['homes']"", ""FILTER['#1', 'that were non-families']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_history_2196_0fa46d12-b4a8-4873-a8b2-99d4ddba04ff,"As of 2000, which group for households is larger: married couples living together or non-families?","[""SELECT['households']"", ""PROJECT['groups of #REF', '#1']"", ""FILTER['#2', 'As of 2000']"", ""FILTER['#3', 'that are married couples living together']"", ""FILTER['#3', 'that are non-families']"", ""PROJECT['size of #REF', '#4']"", ""PROJECT['size of #REF', '#5']"", ""COMPARISON['max', '#6', '#7']""]","[""SELECT['households']"", ""FILTER['#1', 'that are married couples living together']"", ""FILTER['#1', 'that are non-families']"", ""PROJECT['size of #REF', '#2']"", ""PROJECT['size of #REF', '#3']"", ""COMPARISON['max', '#4', '#5']""]"
DROP_dev_history_2196_10ed065e-4376-49e2-9d1e-6353f13bb4f8,How many people larger is the average family size than the average household size?,"[""SELECT['family size']"", ""SELECT['household size']"", ""AGGREGATE['avg', '#1']"", ""AGGREGATE['avg', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]","[""SELECT['families']"", ""SELECT['households']"", ""PROJECT['size of #REF', '#1']"", ""PROJECT['size of #REF', '#2']"", ""AGGREGATE['avg', '#3']"", ""AGGREGATE['avg', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]"
DROP_dev_history_2196_4bbb6f57-2118-4f9c-94d9-7cf3f37fa0fa,"As of 2000, which group for households is smaller: married couples living together or made up of individuals?","[""SELECT['households']"", ""FILTER['#1', 'that are married couples living together']"", ""FILTER['#1', 'that are made up of individuals']"", ""PROJECT['size of #REF', '#2']"", ""PROJECT['size of #REF', '#3']"", ""COMPARISON['min', '#4', '#5']""]","[""SELECT['households']"", ""PROJECT['groups of #REF', '#1']"", ""FILTER['#2', 'that are married couples living together']"", ""FILTER['#2', 'that are made up of individuals']"", ""FILTER['#3', 'As of 2000']"", ""FILTER['#4', 'As of 2000']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#6']"", ""COMPARISON['min', '#7', '#8']""]"
DROP_dev_history_2196_4c3a97cc-6c26-480c-b555-de4c53fda310,"As of 2000, how many in percent of households had someone living alone who wasn't 65 years of age or older?","[""SELECT['households']"", ""FILTER['#1', 'that had someone living alone']"", ""FILTER['#2', 'As of 2000']"", ""PROJECT['percent of #REF', '#3']"", ""PROJECT['the difference of 100 percent and #REF', '#4']""]","[""SELECT['households']"", ""FILTER['#1', 'As of 2000']"", ""FILTER['#2', 'that had someone living alone who was at least 65 years of age']"", ""PROJECT['percent of #REF', '#3']""]"
DROP_dev_history_2196_54abf62e-23c6-49eb-84c9-a6c4f38c5059,"As of 2000, how many in percent of households had a female householder with a husband present?","[""SELECT['households']"", ""FILTER['#1', 'that had a female householder with a husband present']"", ""FILTER['#2', 'As of 2000']"", ""PROJECT['percent of #REF', '#3']""]","[""SELECT['households']"", ""FILTER['#1', 'As of 2000']"", ""FILTER['#2', 'with a female householder present']"", ""PROJECT['percent of #REF', '#3']""]"
DROP_dev_history_2196_5ff917c0-8ebc-4b03-baad-4deee565b508,How many percent of households as of 2000 were not married couples living together?,"[""SELECT['households']"", ""FILTER['#1', 'as of 2000']"", ""FILTER['#2', 'that were married couples living together']"", ""PROJECT['percent of #REF', '#3']"", ""PROJECT['difference of 100 and #REF', '#4']""]","[""SELECT['households as of 2000']"", ""FILTER['#1', 'that were married couples living together']"", ""PROJECT['percent of #REF', '#2']"", ""PROJECT['difference of 100 and #REF', '#3']""]"
DROP_dev_history_2196_69ef3d8a-bbb7-462f-9519-ff32941b51da,How many percent of households did not have children under the age of 18 living with them?,"[""SELECT['households']"", ""FILTER['#1', 'that have children under the age of 18 living with them']"", ""PROJECT['percent of #REF', '#2']"", ""PROJECT['difference of 100 and #REF', '#3']""]","[""SELECT['households']"", ""FILTER['#1', 'with children under the age of 18 living with them']"", ""PROJECT['percent of #REF', '#2']"", ""PROJECT['difference of 100 and #REF', '#3']""]"
DROP_dev_history_2196_c91c3b0f-c77c-41f9-bd9a-d5cc0e897783,How many percent of households in 2000 did not have someone 65 years or older living alone?,"[""SELECT['households']"", ""FILTER['#1', 'in 2000']"", ""FILTER['#2', 'that have someone 65 years or older living alone']"", ""PROJECT['percent of #REF', '#3']"", ""PROJECT['difference of 100 and #REF', '#4']""]","[""SELECT['households']"", ""FILTER['#1', 'in 2000']"", ""FILTER['#2', 'that did have someone 65 years or older living alone']"", ""PROJECT['percent of #REF', '#3']"", ""PROJECT['difference of 100 and #REF', '#4']""]"
DROP_dev_history_2196_e9ab8e1a-fea8-45cd-ad6b-19559bf39062,How many more percent are married couples than non-families?,"[""SELECT['married couples']"", ""SELECT['non-families']"", ""PROJECT['percent of #REF', '#1']"", ""PROJECT['percent of #REF', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]","[""SELECT['couples']"", ""FILTER['#1', 'that are married']"", ""SELECT['non-families']"", ""PROJECT['percent of #REF', '#2']"", ""PROJECT['percent of #REF', '#3']"", ""ARITHMETIC['difference', '#5', '#4']""]"
DROP_dev_history_2196_f09257e6-b661-4e27-90fa-71e2915f1eda,How many percent of households in 2000 did not have a household made up individuals?,"[""SELECT['households']"", ""FILTER['#1', 'in 2000']"", ""FILTER['#2', 'that are made up individuals']"", ""PROJECT['percent of #REF', '#3']"", ""PROJECT['difference of 100 and #REF', '#4']""]","[""SELECT['households']"", ""FILTER['#1', 'in 2000']"", ""FILTER['#2', 'that were made up individuals']"", ""PROJECT['percent of #REF', '#3']"", ""PROJECT['difference of 100 and #REF', '#4']""]"
DROP_dev_history_2196_fa780708-3025-423a-a7c6-0c12274106a2,Which group for households is smaller: married couples living together or non-families?,"[""SELECT['households']"", ""FILTER['#1', 'that are married couples living together']"", ""FILTER['#1', 'that are non-families']"", ""PROJECT['size of #REF', '#2']"", ""PROJECT['size of #REF', '#3']"", ""COMPARISON['min', '#4', '#5']""]","[""SELECT['households']"", ""FILTER['#1', 'that are married couples living together']"", ""FILTER['#1', 'that are non-families']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['min', '#4', '#5']""]"
DROP_dev_history_2199_716959bd-3180-40e9-acbd-033106766db5,What two players scored 11 Test centuries against Australia?,"[""SELECT['Australia']"", ""PROJECT['Test centuries of #REF', '#1']"", ""PROJECT['players of #REF', '#2']"", ""GROUP['count', '#2', '#3']"", ""COMPARATIVE['#3', '#4', 'is 11']""]","[""SELECT['Australia']"", ""PROJECT['Test centuries against #REF', '#1']"", ""PROJECT['players of #REF', '#2']"", ""GROUP['count', '#2', '#3']"", ""COMPARATIVE['#3', '#4', 'is 11']""]"
DROP_dev_history_2199_f7819d7b-bf66-4963-beaa-6c39dec5e9a9,"Who crossed the 50-run mark the most number of times in Test cricket history, Tendulkar or Allan Border?","[""SELECT['Tendulkar']"", ""SELECT['Allan Border']"", ""PROJECT['Test cricket history that crossed the 50-run mark of #REF', '#1']"", ""PROJECT['Test cricket history that crossed the 50-run mark of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""COMPARISON['max', '#5', '#6']""]","[""SELECT['Tendulkar']"", ""PROJECT['Test cricket history of #REF', '#1']"", ""PROJECT['times crossed the 50-run mark of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""SELECT['Allan Border']"", ""PROJECT['times crossed the 50-run mark of #REF', '#5']"", ""AGGREGATE['count', '#6']"", ""COMPARISON['max', '#7', '#8']""]"
DROP_dev_history_221_476c2e96-9367-40e5-80c5-fe90642ced40,How many days did they spend killing regular civilians of the city?,"[""SELECT['the city']"", ""PROJECT['days they spend killing regular civilians of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['the city']"", ""PROJECT['days they spend killing regular civilians of #REF', '#1']"", ""AGGREGATE['count', '#2']?""]"
DROP_dev_history_221_a9ba89e1-5c3c-46c0-bf42-423463aef78f,What did the Bergamo city fear would happen to them?,"[""SELECT['the Bergamo city']"", ""PROJECT['what did #REF fear would happen to them', '#1']""]","[""SELECT['the Bergamo city']"", ""PROJECT['what did #REF fear of', '#1']""]"
DROP_dev_history_221_c1a7bcdf-8236-45db-93cd-a1b0b39f652f,What happened during the War of the League of Cambrai,"[""SELECT['the War of the League of Cambrai']"", ""PROJECT['what happened during #REF', '#1']""]","[""SELECT['the War of the League of Cambrai']"", ""PROJECT['what happened during #REF', '#1']""]-"
DROP_dev_history_2234_3778ff16-fcb9-4008-89dd-1053235875d2,How many more members di the party have in 1947 compared to 1929?,"[""SELECT['the party']"", ""PROJECT['members of #REF', '#1']"", ""FILTER['#2', 'in 1947']"", ""FILTER['#2', 'in 1929']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['parties']"", ""PROJECT['members of #REF', '#1']"", ""FILTER['#2', 'in 1947']"", ""FILTER['#2', 'in 1929']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]"
DROP_dev_history_2234_a2ea2d15-157c-495e-8078-7634045e0643,How many members did the party lose 1933 to 1939?,"[""SELECT['the party']"", ""PROJECT['members lost of #REF', '#1']"", ""FILTER['#2', 'in 1933']"", ""FILTER['#2', 'in 1939']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['the party']"", ""PROJECT['members of #REF', '#1']"", ""FILTER['#2', 'that did lose 1933 to 1939']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_history_2258_800d3b41-91bf-4af2-b460-7d92437433c2,Was the total fertility rate in Guatemala higher in 2000 or in 2006?,"[""SELECT['Guatemala']"", ""PROJECT['fertility rate of #REF', '#1']"", ""FILTER['#2', 'in 2000']"", ""FILTER['#2', 'in 2006']"", ""COMPARISON['max', '#3', '#4']""]","[""SELECT['Guatemala']"", ""PROJECT['fertility rates of #REF', '#1']"", ""AGGREGATE['sum', '#2']"", ""FILTER['#3', 'in 2000']"", ""FILTER['#3', 'in 2006']"", ""COMPARISON['higher than #4', '#5']""]"
DROP_dev_history_227_6672ab00-d4e7-483c-8ec9-bc4958dcad01,How many people were lost in the peninsula as a result of the war?,"[""SELECT['people']"", ""FILTER['#1', 'that were lost in the peninsula as a result of the war']"", ""AGGREGATE['count', '#2']""]","[""SELECT['the war']"", ""PROJECT['people lost in the peninsula as a result of #REF', '#1']"", ""AGGREGATE['count', '#2']""]."
DROP_dev_history_227_6b6b2bb9-ee2f-4aa5-99f4-cc064bd31aa0,Approximately how many Venetians perished in the war?,"[""SELECT['Venetians']"", ""FILTER['#1', 'that perished in the war']"", ""AGGREGATE['count', '#2']""]","[""SELECT['Venetians']"", ""FILTER['#1', 'who perished in the war']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_history_227_6de294c6-ff05-4e8d-96c8-f72ff65fd2df,How many more people lived in the area in 1708 compared to the pre-war population?,"[""SELECT['the area']"", ""PROJECT['people of #REF', '#1']"", ""FILTER['#2', 'in 1708']"", ""FILTER['#2', 'in the pre-war period']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['the area']"", ""PROJECT['people of #REF', '#1']"", ""FILTER['#2', 'in 1708']"", ""FILTER['#2', 'in the pre-war period']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#6', '#5']""]"
DROP_dev_history_227_78330072-09f3-4606-8590-ca1900b01093,What were the names of the seats of the provinces of Morea?,"[""SELECT['provinces']"", ""FILTER['#1', 'of Morea']"", ""PROJECT['seats of #REF', '#2']"", ""PROJECT['names of #REF', '#3']""]","[""SELECT['provinces']"", ""FILTER['#1', 'of Morea']"", ""PROJECT['seats of #REF', '#2']"", ""PROJECT['the names of #REF', '#3']""]"
DROP_dev_history_227_bc94d5da-bedc-4713-afd4-b6014391d766,How many many people were in the peninsula compared to a pre-war population?,"[""SELECT['people']"", ""FILTER['#1', 'that were in the peninsula']"", ""FILTER['#1', 'that were pre-war']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]","[""SELECT['the peninsula']"", ""PROJECT['population of #REF', '#1']"", ""FILTER['#2', 'that was pre-war']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]"
DROP_dev_history_227_cce22857-b00e-451a-8594-5450b38b64e7,Which province of the Kingdom of the Morea had a seat at Navarino?,"[""SELECT['the Kingdom of the Morea']"", ""PROJECT['province of #REF', '#1']"", ""FILTER['#2', 'that had a seat at Navarino']""]","[""SELECT['the Kingdom of the Morea']"", ""PROJECT['province of #REF', '#1']"", ""FILTER['#2', 'that had a seat at Navarino']""]--"
DROP_dev_history_2270_0ec43a88-b174-4aa9-ba47-8fe1be941999,How many people live in Lausanne?,"[""SELECT['people']"", ""FILTER['#1', 'that live in Lausanne']"", ""AGGREGATE['count', '#2']""]","[""SELECT['Luisanne']"", ""PROJECT['people that live in #REF', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_history_2270_3f9cfa58-21f9-4b90-8fe7-7d984b23cb65,How many more people are there 60 and over than there are 19 and under?,"[""SELECT['people']"", ""FILTER['#1', 'that are 60 and over']"", ""FILTER['#1', 'that are 19 and under']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]","[""SELECT['people']"", ""FILTER['#1', 'that is 60 and over']"", ""FILTER['#1', 'that is 19 and under']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]"
DROP_dev_history_2270_799246c9-454c-46f4-873f-54c28eadadf5,Which groups had between 20000 and 25000 people?,"[""SELECT['groups']"", ""PROJECT['people of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is betweenleftside 20000']"", ""COMPARATIVE['#4', '#3', 'is betweenrightside 25000']""]","[""SELECT['groups']"", ""PROJECT['people of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is betweenleftside 20000']"", ""COMPARATIVE['#4', '#3', 'is betweenrightside 25000']""]-"
DROP_dev_history_2270_89eaea07-95a6-42af-8279-516c03eaa933,"Are there more people between 20 and 29, or between 30 and 39?","[""SELECT['people']"", ""FILTER['#1', 'betweenleftside 20']"", ""FILTER['#2', 'betweenrightside 29']"", ""FILTER['#3', 'betweenrightside 39']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""COMPARISON['max', '#6', '#7']""]","[""SELECT['people']"", ""FILTER['#1', 'betweenleftside 20']"", ""FILTER['#2', 'betweenrightside 29']"", ""FILTER['#1', 'betweenrightside 39']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""COMPARISON['max', '#5', '#6']""]"
DROP_dev_history_2270_d06dff8c-f730-4a3b-b6f7-af4957c830ee,Were there more people between 20 and 40 or between 40 and 60?,"[""SELECT['people']"", ""FILTER['#1', 'betweenleftside 20']"", ""FILTER['#2', 'betweenrightside 40']"", ""FILTER['#3', 'betweenrightside 60']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""COMPARISON['max', '#6', '#7']""]","[""SELECT['people']"", ""FILTER['#1', 'that Are betweenleftside 20']"", ""FILTER['#2', 'that Are betweenrightside 40']"", ""FILTER['#3', 'that Are betweenrightside 60']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""COMPARISON['max', '#6', '#7']""]"
DROP_dev_history_2270_eb447dd3-169e-4bad-92fc-e457f2137681,Which group had the second highest number of people?,"[""SELECT['groups']"", ""PROJECT['people of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is the second highest']""]","[""SELECT['groups']"", ""PROJECT['people of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""AGGREGATE['max', '#3']"", ""COMPARATIVE['#1', '#3', 'is equal to #4']""]"
DROP_dev_history_2270_f841ad8c-7591-49db-8c92-3d97a4614e31,In Lausanne are their fewer children or teenagers?,"[""SELECT['Lausanne']"", ""PROJECT['children of #REF', '#1']"", ""PROJECT['teenagers of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['min', '#4', '#5']""]","[""SELECT['Luisanne']"", ""PROJECT['children of #REF', '#1']"", ""PROJECT['teenagers of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['min', '#4', '#5']""]"
DROP_dev_history_2270_f9895ceb-80f3-4078-8994-a08545b9d1af,Are more people between the ages of 30 to 49 or 10 to 29?,"[""SELECT['people']"", ""FILTER['#1', 'between the ages of 30 to 49']"", ""FILTER['#1', 'between the ages of 10 to 29']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['max', '#4', '#5']""]","[""SELECT['people']"", ""FILTER['#1', 'between the ages of 30 to 49']"", ""FILTER['#1', 'between the ages of 10 to 29']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['max', '#4', '#5']""]"
DROP_dev_history_228_16e4b810-0779-447e-98e2-fb80a94540d3,How many akinjis didn't return home alive?,"[""SELECT['akinjis']"", ""FILTER['#1', 'that return home alive']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]","[""SELECT['akinjis']"", ""FILTER['#1', 'that return home alive']"", ""DISCARD['#1', '#2']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_history_228_62e99d8c-586a-4631-acaf-d2ed1e8a7905,How many of the akinjis died?,"[""SELECT['akinjis']"", ""FILTER['#1', 'that died']"", ""AGGREGATE['count', '#2']""]","[""SELECT['akinjis']"", ""AGGREGATE['count', '#1']"", ""FILTER['#2', 'that died']""]"
DROP_dev_history_228_6cabea52-3a20-4b1f-a1c5-79d14c10c63f,What were the akinjis doing that ultimately got most of them killed?,"[""SELECT['akinjis']"", ""PROJECT['what were #REF doing', '#1']"", ""FILTER['#2', 'that ultimately got most of them killed']""]","[""SELECT['akinjis']"", ""PROJECT['what did #REF do', '#1']"", ""FILTER['#2', 'that ultimately got most of them killed']""]"
DROP_dev_history_2298_5af72816-96bd-4970-8052-1cc83ba6fda0,How many years did France use instances of napalm during the Algerian War of Independence?,"[""SELECT['France did use instances of napalm during the Algerian War of Independence']"", ""PROJECT['years of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['France used instances of napalm during the Algerian War of Independence']"", ""PROJECT['years of #REF', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_history_2298_6798db12-e7c5-45e9-ad28-81cddfcda3d9,"Which country were napalms used in first, Nigeria or Egypt?","[""SELECT['napalms were used in Nigeria']"", ""SELECT['napalms were used in Egypt']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]","[""SELECT['napalms were used in Nigeria']"", ""SELECT['napalms were used in Egypt']"", ""PROJECT['date of #REF', '#1']"", ""PROJECT['date of #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]"
DROP_dev_history_2298_7f3056c5-d276-4b3d-933e-0de7ef9e4edd,How many wars happened from 1980 to 1988?,"[""SELECT['wars']"", ""FILTER['#1', 'from 1980 to 1988']"", ""AGGREGATE['count', '#2']""]","[""SELECT['wars']"", ""FILTER['#1', 'that happened from 1980 to 1988']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_history_2298_92ae64d4-f6c5-44d9-9fc7-16d39d9f239d,What two wars were happening in 1967?,"[""SELECT['wars']"", ""FILTER['#1', 'in 1967']""]","[""SELECT['1967']"", ""PROJECT['wars of #REF', '#1']""]"
DROP_dev_history_2298_93944496-8d4b-49d5-8c78-a4f1ac8c544a,What two countries were napalm used in the period from 1980 to 1988?,"[""SELECT['napalm']"", ""PROJECT['countries used in of #REF', '#1']"", ""FILTER['#2', 'from 1980 to 1988']""]","[""SELECT['napalm']"", ""PROJECT['countries used of #REF', '#1']"", ""FILTER['#2', 'from 1980 to 1988']""]"
DROP_dev_history_2298_b61cb679-02a8-4de0-8adf-5a79aa0485f4,How many areas used napalm in only one year?,"[""SELECT['areas']"", ""FILTER['#1', 'that used napalm']"", ""PROJECT['years of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is one']"", ""AGGREGATE['count', '#4']""]","[""SELECT['areas']"", ""FILTER['#1', 'that used napalm']"", ""FILTER['#2', 'in only one year']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_history_2298_e5bf6712-e837-4399-8c24-b3bb678f1c86,Did Egypt or Israel use napalm first?,"[""SELECT['Egypt']"", ""SELECT['Israel']"", ""PROJECT['when did #REF use napalm', '#1']"", ""PROJECT['when did #REF use napalm', '#2']"", ""COMPARISON['min', '#3', '#4']""]","[""SELECT['Egypt use napalm']"", ""SELECT['Israel use napalm']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]"
DROP_dev_history_2298_f5575f5a-a5db-4f50-b6b5-a72b5e618f3d,How many years did the First Indochina War last?,"[""SELECT['the First Indochina War']"", ""PROJECT['years of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['The First Indochina War']"", ""PROJECT['years of #REF', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_history_2298_f76831ea-0a1a-4abc-a47a-707ad0f96bb9,How many years did Morocco use napalm during the Western Sahara War?,"[""SELECT['Maroc use napalm during the Western Sahara War']"", ""PROJECT['years of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['Marokko did use napalm during the Western Sahara War']"", ""PROJECT['years of #REF', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_history_23_0686d1f9-4a8e-4031-b665-49d425afb777,What kind of people were on the ships that arrived at St. Croix in August?,"[""SELECT['ships']"", ""FILTER['#1', 'that arrived at St. Croix']"", ""FILTER['#2', 'in August']"", ""PROJECT['people on #REF', '#3']"", ""PROJECT['kind of #REF', '#4']""]","[""SELECT['ships']"", ""FILTER['#1', 'that arrived at St. Croix']"", ""FILTER['#2', 'in August']"", ""PROJECT['kind of people on #REF', '#3']""]"
DROP_dev_history_23_66b85717-e254-45d7-808a-9ce2c9308ac6,What day did two french ships arrive at St. John?,"[""SELECT['french ships']"", ""FILTER['#1', 'that arrive at St. John']"", ""PROJECT['day of #REF', '#2']""]","[""SELECT['french ships']"", ""FILTER['#1', 'that arrive at St. John']"", ""PROJECT['days of #REF', '#2']""]"
DROP_dev_history_23_9d5b3589-d92c-46d8-8a22-0412f7d2d306,When year two french ships arrive at St. John?,"[""SELECT['french ships']"", ""FILTER['#1', 'that arrive at St. John']"", ""PROJECT['year two of #REF', '#2']"", ""PROJECT['when was #REF', '#3']""]","[""SELECT['french ships']"", ""PROJECT['year two of #REF arrive at St. John', '#1']"", ""PROJECT['when was #REF', '#2']""]"
DROP_dev_history_2339_aa8755e8-2cee-4c31-8b5d-f2ea5923134e,How many years after the economics of Serbia and Montenegro entered a prolonged decline did it start showing signs of recovery?,"[""SELECT['the economics of Serbia and Montenegro entered a prolonged decline']"", ""SELECT['the economics of Serbia and Montenegro did start showing signs of recovery']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['the economics of Serbia and Montenegro entered a prolonged decline']"", ""SELECT['the economics of Serbia and Montenegro did start showing signs of recovery']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]"
DROP_dev_history_2361_6406a4e8-2ee7-4d56-b479-d5e8f1a6c96c,"How many years after wild grains began being harvested was the potato domesticated, at its earliest?","[""SELECT['wild grains began being harvested']"", ""SELECT['the potato was domesticated at its earliest']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['wild grains began being harvested']"", ""SELECT['the potato domesticated at its earliest']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]"
DROP_dev_history_2380_61b43b8f-017d-40b7-8287-11ea2576d049,How many more games did Baltimore win than lose during the season?,"[""SELECT['Baltimore']"", ""PROJECT['games win of #REF', '#1']"", ""PROJECT['games lose of #REF', '#1']"", ""FILTER['#2', 'during the season']"", ""FILTER['#3', 'during the season']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""ARITHMETIC['difference', '#6', '#7']""]","[""SELECT['Baltimore']"", ""PROJECT['wins of #REF', '#1']"", ""PROJECT['losses of #REF', '#1']"", ""FILTER['#2', 'during the season']"", ""FILTER['#3', 'during the season']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""ARITHMETIC['difference', '#6', '#7']""]"
DROP_dev_history_2380_6490a684-c717-4a51-aa10-038e4976470e,How many games did the Ravens lose in the first month of the season?,"[""SELECT['the Ravens']"", ""PROJECT['games lost of #REF', '#1']"", ""FILTER['#2', 'in the first month of the season']"", ""AGGREGATE['count', '#3']""]","[""SELECT['the Ravens']"", ""PROJECT['games lose of #REF', '#1']"", ""FILTER['#2', 'in the first month of the season']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_history_2380_a86c1cca-3af3-41e9-bffc-4a9fe8d9bb19,How many more points did the Ravens win by against Denver compared to their win against the Jets?,"[""SELECT['the Ravens']"", ""PROJECT['points win by of #REF', '#1']"", ""FILTER['#2','versus Denver']"", ""FILTER['#2','versus the Jets']"", ""ARITHMETIC['difference', '#3', '#4']""]","[""SELECT['the Ravens']"", ""PROJECT['points win by of #REF', '#1']"", ""FILTER['#2', 'vs Denver']"", ""FILTER['#2', 'vs the Jets']"", ""ARITHMETIC['difference', '#3', '#4']""]"
DROP_dev_history_2380_be4b3c8f-8e90-47f8-a4bc-b569e8ed833f,How many points did Baltimore beat the Jets by in their first game?,"[""SELECT['Baltimore']"", ""PROJECT['points of #REF', '#1']"", ""FILTER['#2', 'in their first game']"", ""AGGREGATE['sum', '#3']"", ""SELECT['the Jets']"", ""PROJECT['points of #REF', '#5']"", ""ARITHMETIC['difference', '#6', '#4']""]","[""SELECT['Baltimore']"", ""PROJECT['points beat the Jets by of #REF', '#1']"", ""FILTER['#2', 'in their first game']""]"
DROP_dev_history_2380_c3d501f6-868c-4516-acfb-58a1096e5e4d,Did the Ravens score more points in week 3 or in week 4?,"[""SELECT['the Ravens']"", ""PROJECT['points scored of #REF', '#1']"", ""FILTER['#2', 'in week 3']"", ""FILTER['#2', 'in week 4']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""COMPARISON['max', '#5', '#6']""]","[""SELECT['the Ravens']"", ""PROJECT['points of #REF', '#1']"", ""FILTER['#2', 'in week 3']"", ""FILTER['#2', 'in week 4']"", ""AGGREGATE['sum', '#3']"", ""AGGREGATE['sum', '#4']"", ""COMPARISON['max', '#5', '#6']""]"
DROP_dev_history_2380_ddb04730-1656-4d56-bc4b-b3be9b469baf,How many points did the Ravens score in their two highest scoring games?,"[""SELECT['the Ravens']"", ""PROJECT['points of #REF', '#1']"", ""AGGREGATE['max', '#2']"", ""DISCARD['#2', '#3']"", ""AGGREGATE['max', '#4']"", ""ARITHMETIC['sum', '#3', '#5']""]","[""SELECT['the Ravens']"", ""PROJECT['points of #REF', '#1']"", ""AGGREGATE['max', '#2']"", ""DISCARD['#2', '#3']"", ""AGGREGATE['sum', '#4']""]"
DROP_dev_history_2390_29648c25-d6fb-4ab3-a8ed-c38e3e493968,How many fewer Soviet prisoners of war were in the official totals than in the Finish estmates?,"[""SELECT['official totals']"", ""PROJECT['Soviet prisoners of war in #REF', '#1']"", ""PROJECT['Finish estmates in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]","[""SELECT['official totals']"", ""PROJECT['Soviet prisoners of war in #REF', '#1']"", ""PROJECT['Finish estmates in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['difference', '#5', '#4']""]"
DROP_dev_history_2390_4445e01a-164b-46ff-aced-6bf497cdc6b9,How many more men did the Finnish estimate were prisoners of war compared to the official number from the Soviet Union?,"[""SELECT['the Finnish estimate']"", ""SELECT['the Soviet Union']"", ""PROJECT['official prisoners of war of #REF', '#1']"", ""PROJECT['official prisoners of war of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['the Finnish estimate']"", ""SELECT['the Soviet Union']"", ""PROJECT['official number of prisoners of war of #REF', '#1']"", ""PROJECT['official number of prisoners of war of #REF', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]"
DROP_dev_history_2390_db37b6ec-35e0-4923-b667-c43508ae5178,Were more German casualties killed or missing?,"[""SELECT['German casualties']"", ""FILTER['#1', 'that Were killed']"", ""FILTER['#1', 'that Were missing']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['max', '#4', '#5']""]","[""SELECT['German casualties']"", ""FILTER['#1', 'that were killed']"", ""FILTER['#1', 'that were missing']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['max', '#4', '#5']""]"
DROP_dev_history_241_08eff0f5-c75a-4bdc-b09c-b29aa3d83cd0,"What happened first, the French Revolution or the Battle of Aidenbach?","[""SELECT['the French Revolution']"", ""SELECT['the Battle of Aidenbach']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]","[""SELECT['the French Revolution and the Battle of Aidenbach']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['min', '#3', '#4']""]"
DROP_dev_history_241_0ac9c4ec-9ef4-429b-970a-9af43bdb672b,How many regions did the popular uprising start in?,"[""SELECT['the popular uprising']"", ""PROJECT['regions that #REF start in', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['popular uprising']"", ""PROJECT['regions that #REF start in', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_history_241_0bd29555-3714-4699-be22-89fe0934ee01,How many days passed between the Sendling Christmas Day Massacre and the Battle of Aidenbach?,"[""SELECT['the Sendling Christmas Day Massacre']"", ""SELECT['the Battle of Aidenbach']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['Sendling Christmas Day Massacre']"", ""SELECT['Battle of Aidenbach']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]"
DROP_dev_history_241_39b1772e-28ba-44d4-be18-52f24d87bf09,what is the difference in casualty numbers between Bavarian and Austrian?,"[""SELECT['casualty numbers']"", ""FILTER['#1', 'of Bavarian']"", ""FILTER['#1', 'of Austrian']"", ""ARITHMETIC['difference', '#2', '#3']""]","[""SELECT['casualty numbers']"", ""FILTER['#1', 'of Bavarian']"", ""FILTER['#1', 'of Austrian']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['difference', '#5', '#4']""]"
DROP_dev_history_241_68d02b1b-285b-4e37-83b0-34b3d403c976,Which country had most deaths?,"[""SELECT['countries']"", ""PROJECT['deaths of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']""]","[""SELECT['countries']"", ""FILTER['#1', 'that had the most deaths']""]"
DROP_dev_history_241_8932b025-d69e-4110-ad18-13462761c791,How many days after the Braunau Parliament meeting was the Sendling's Night of Murder?,"[""SELECT['the Braunau Parliament meeting']"", ""SELECT['the Sendling s Night of Murder']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['the Braunau Parliament meeting']"", ""SELECT['Sendling s Night of Murder']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]"
DROP_dev_history_241_9c99ae46-9e98-4e8a-ae30-09c0c96c97e9,How many more deaths occurred on the Bavarian side than on the Austrian side?,"[""SELECT['deaths']"", ""FILTER['#1', 'on the Bavarian side']"", ""FILTER['#1', 'on the Austrian side']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]","[""SELECT['deaths']"", ""FILTER['#1', 'that occurred on the Bavarian side']"", ""FILTER['#1', 'that occurred on the Austrian side']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['difference', '#4', '#5']."
DROP_dev_history_2412_20bce397-9176-4d2b-8c22-35d85541e054,How many of the 72 high-rises in the city were built after 2000?,"[""SELECT['the city']"", ""PROJECT['high-rises in #REF', '#1']"", ""FILTER['#2', 'that were built after 2000']"", ""AGGREGATE['count', '#3']""]","[""SELECT['the city']"", ""PROJECT['high-rises of #REF', '#1']"", ""FILTER['#2', 'that were built after 2000']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_history_2412_480ad2be-bf69-423c-bb6d-feefe00d780d,How many more stories tall is Williams Tower than the Skanska building?,"[""SELECT['William Tower']"", ""SELECT['Skanska building']"", ""PROJECT['story tallness of #REF', '#1']"", ""PROJECT['story tallness of #REF', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]","[""SELECT['William Tower']"", ""SELECT['Skanska building']"", ""PROJECT['stories tall of #REF', '#1']"", ""PROJECT['stories tall of #REF', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]"
DROP_dev_history_2412_54b3be33-59da-4860-86b5-5c5c17833ee6,How many more millions of square feet of office space total is there than class A office space?,"[""SELECT['class A office space']"", ""PROJECT['office space in millions of square feet of #REF', '#1']"", ""PROJECT['office space in millions of square feet of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['class A office space']"", ""PROJECT['office space in millions of square feet of #REF', '#1']"", ""PROJECT['office space in millions of square feet of #REF', '#2']"", ""AGGREGATE['sum', '#3']"", ""AGGREGATE['sum', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]"
DROP_dev_history_2412_9fadc4cd-89cd-43a8-8381-9c69ca11572a,How many of the 72 high rises in Houston were built before the year 2000?,"[""SELECT['Houston']"", ""PROJECT['high rises of #REF', '#1']"", ""PROJECT['year built of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is lower than 2000']"", ""AGGREGATE['count', '#4']""]","[""SELECT['Houston']"", ""PROJECT['high rises in #REF', '#1']"", ""FILTER['#2', 'that were built before 2000']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_history_2417_bb86df26-a545-45ca-a0da-6173c26449fb,How many more people speak Hungarian as a first language than a second language?,"[""SELECT['people']"", ""PROJECT['first languages of #REF', '#1']"", ""PROJECT['second languages of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is Hungarian']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['people']"", ""FILTER['#1', 'that speak Hungarian as a first language']"", ""FILTER['#1', 'that speak Hungarian as a second language']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]"
DROP_dev_history_2434_189c7f8f-7a06-4106-b907-90a3fe530228,"In 2000, which federal entities had between $20000 and $30000 per capita GDP?","[""SELECT['federal entities']"", ""PROJECT['GDP per capita of #REF', '#1']"", ""FILTER['#2', 'in 2000']"", ""COMPARATIVE['#1', '#3', 'is at least $20000']"", ""COMPARATIVE['#1', '#3', 'is at most $30000']"", ""INTERSECTION['#1', '#4', '#5']""]","[""SELECT['federal entities']"", ""PROJECT['per capita GDP of #REF', '#1']"", ""FILTER['#2', 'in 2000']"", ""COMPARATIVE['#1', '#3', 'is at least $20000']"", ""COMPARATIVE['#1', '#3', 'is at most $30000']"", ""INTERSECTION['#1', '#4', '#5']""]"
DROP_dev_history_2434_7b68915e-a17e-4bd8-b200-2777553a195c,Which is the state with the third highest GDP growth rate?,"[""SELECT['states']"", ""PROJECT['GDP growth rates of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is the third highest']""]","[""SELECT['states']"", ""PROJECT['GDP growth rates of #REF', '#1']"", ""AGGREGATE['max', '#2']"", ""COMPARATIVE['#1', '#2', 'is equal to #3']""]"
DROP_dev_history_2453_b9da7d2f-a86a-4259-aa1d-0a0951ccf119,Who paid the least amount of a relatives rank; eldest sons or widows?,"[""SELECT['relatives rank']"", ""PROJECT['the eldest sons of #REF', '#1']"", ""PROJECT['the widows of #REF', '#1']"", ""PROJECT['amount paid of #REF', '#2']"", ""PROJECT['amount paid of #REF', '#3']"", ""COMPARISON['min', '#4', '#5']""]","[""SELECT['relatives rank']"", ""PROJECT['eldest sons of #REF', '#1']"", ""PROJECT['wives of #REF', '#1']"", ""PROJECT['amount paid of #REF', '#2']"", ""PROJECT['amount paid of #REF', '#3']"", ""COMPARISON['min', '#4', '#5']""]"
DROP_dev_history_2456_256a7939-557b-425f-b311-f4e517fcbdd3,How many fewer US dollars was the Russian military budget in 2014 than it was be in 2015?,"[""SELECT['the Russian military budget']"", ""FILTER['#1', 'in 2014']"", ""FILTER['#1', 'in 2015']"", ""ARITHMETIC['difference', '#2', '#3']""]","[""SELECT['Russian military budget']"", ""FILTER['#1', 'in 2014']"", ""FILTER['#1', 'in 2015']"", ""PROJECT['US dollars of #REF', '#2']"", ""PROJECT['US dollars of #REF', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]"
DROP_dev_history_2474_06e6b835-f954-46cc-8096-1d2862099c4a,How many total yards did Tom Rathman have?,"[""SELECT['Tom Rathman']"", ""PROJECT['yards of #REF', '#1']"", ""AGGREGATE['sum', '#2']""]","[""SELECT['Tom Rathman']"", ""PROJECT['yards of #REF', '#1']"", ""AGGREGATE['sum', '#2']""]."
DROP_dev_history_2474_2916cf1b-3a53-451e-9174-8b3fa5c0ab70,"Which player had more touchdowns, Craig or Rice?","[""SELECT['Craig']"", ""PROJECT['touchdowns of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""SELECT['Rice']"", ""PROJECT['touchdowns of #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""COMPARISON['max', '#3', '#6']""]","[""SELECT['Chair']"", ""PROJECT['touchdowns of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""SELECT['Rice']"", ""PROJECT['touchdowns of #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""COMPARISON['max', '#3', '#6']""]"
DROP_dev_history_2474_2d74a2ac-207c-4f6f-8855-781457eb7101,Who finished the NFL season with more yards: Montana or Craig?,"[""SELECT['Montana']"", ""PROJECT['yards of #REF', '#1']"", ""AGGREGATE['sum', '#2']"", ""SELECT['Craig']"", ""PROJECT['yards of #REF', '#4']"", ""AGGREGATE['sum', '#5']"", ""COMPARISON['max', '#3', '#6']""]","[""SELECT['Montana']"", ""PROJECT['yards of #REF', '#1']"", ""AGGREGATE['sum', '#2']"", ""SELECT['Craig']"", ""PROJECT['yards of #REF', '#4']"", ""AGGREGATE['sum', '#5']"", ""COMPARISON['max', '#6', '#7']""]"
DROP_dev_history_2474_608fc9f3-9f88-4b87-8462-76477e216bbc,How many more receptions were scored by Craig than by Rice?,"[""SELECT['Craig']"", ""SELECT['Rice']"", ""PROJECT['receptions of #REF', '#1']"", ""PROJECT['receptions of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['Craig']"", ""PROJECT['receptions of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""SELECT['Rice']"", ""PROJECT['receptions of #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""ARITHMETIC['difference', '#3', '#6']""]"
DROP_dev_history_2474_6f579268-78fa-4887-84ea-2ee4ba68f8cf,"Who scored more touchdowns, Rice or Craig?","[""SELECT['Rice']"", ""PROJECT['touchdowns of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""SELECT['Craig']"", ""PROJECT['touchdowns of #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""COMPARISON['max', '#3', '#6']""]","[""SELECT['Rice']"", ""PROJECT['touchdowns of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""SELECT[' Craig']"", ""PROJECT['touchdowns of #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""COMPARISON['max', '#3', '#6']""]"
DROP_dev_history_2474_77039573-024b-4fa3-be57-06e86861df98,"Who had more rushing yards, Montana or Tom Rathman?","[""SELECT['Montana']"", ""PROJECT['rushing yards of #REF', '#1']"", ""AGGREGATE['sum', '#2']"", ""SELECT['Tom Rathman']"", ""PROJECT['rushing yards of #REF', '#4']"", ""AGGREGATE['sum', '#5']"", ""COMPARISON['max', '#3', '#6']""]","[""SELECT['Malcolm Montana']"", ""PROJECT['rushing yards of #REF', '#1']"", ""AGGREGATE['sum', '#2']"", ""SELECT['Tom Rathman']"", ""PROJECT['rushing yards of #REF', '#4']"", ""AGGREGATE['sum', '#5']"", ""COMPARISON['max', '#3', '#6']""]"
DROP_dev_history_2474_ac633f01-14e7-4c02-97a9-857082c694a6,Which player scored more touchdowns than Craig and John Taylor combined?,"[""SELECT['Craig']"", ""PROJECT['touchdowns of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""SELECT['John Taylor']"", ""PROJECT['touchdowns of #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""COMPARISON['max', '#3', '#6']""]","[""SELECT['Craig']"", ""PROJECT['touchdowns of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""SELECT['John Taylor']"", ""PROJECT['touchdowns of #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""ARITHMETIC['sum', '#3', '#6']"", ""BOOLEAN['#7', 'is higher than #8']""]"
DROP_dev_history_2474_dbf1cb90-7c9d-4a50-b67e-913164806927,Who finished the NFL with the 49ers with more touchdowns: Montana or Taylor?,"[""SELECT['the 49ers']"", ""PROJECT['touchdowns of #REF', '#1']"", ""FILTER['#2', 'that Montana finished the NFL with']"", ""FILTER['#2', 'that Taylor finished the NFL with']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""COMPARISON['max', '#5', '#6']""]","[""SELECT['the 49ers']"", ""PROJECT['touchdowns of #REF', '#1']"", ""FILTER['#2', 'that Montana finished the NFL with']"", ""FILTER['#2', 'that Taylor finished the NFL with']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""COMPARISON['max', '#3', '#6']""]"
DROP_dev_history_2530_060c47c9-5bb4-41c7-8a17-1bb8034b0f4c,"How many more people, in percentage, are Islam rather than Christian?","[""SELECT['people']"", ""FILTER['#1', 'that are Islam']"", ""FILTER['#1', 'that are Christian']"", ""PROJECT['percentage of #REF', '#2']"", ""PROJECT['percentage of #REF', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]","[""SELECT['people']"", ""FILTER['#1', 'that are Muslims']"", ""FILTER['#1', 'that are Christian']"", ""PROJECT['percentage of #REF', '#2']"", ""PROJECT['percentage of #REF', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]"
DROP_dev_history_2530_1c7e95d9-49aa-40d2-b4f4-c7f9f328673a,How many more people lived in Tunis than Sfax?,"[""SELECT['Tunis']"", ""SELECT['Sfax']"", ""PROJECT['people lived in #REF', '#1']"", ""PROJECT['people lived in #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['Tunis']"", ""SELECT['Sfax']"", ""PROJECT['people of #REF', '#1']"", ""PROJECT['people of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]"
DROP_dev_history_2530_7040bda7-b818-44bd-8f2e-3e2951334fdc,"How many more, in percent, are males literate than females?","[""SELECT['males']"", ""SELECT['females']"", ""FILTER['#1', 'that are literate']"", ""FILTER['#2', 'that are literate']"", ""PROJECT['percent of #REF', '#3']"", ""PROJECT['percent of #REF', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['males literate']"", ""SELECT['females literate']"", ""PROJECT['percent of #REF', '#1']"", ""PROJECT['percent of #REF', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]"
DROP_dev_history_2530_cb1a8759-1074-4c2b-b976-d7a89f4f87b4,What religions make up less than 5% of the population?,"[""SELECT['religions']"", ""PROJECT['%S of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is lower than 5 %']""]","[""SELECT['religions']"", ""PROJECT['% of the population of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is less than 5 %']""]"
DROP_dev_history_254_14720a39-5dd9-498d-a922-8b77af3a4dff,For how many years did Ukraine agree to lease its facilities?,"[""SELECT['Ukraine agree to lease its facilities']"", ""PROJECT['years of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['Ukraine agreed to lease its facilities']"", ""PROJECT['years of #REF', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_history_254_3896aca7-5cf9-4c8d-913e-c0f6f629932a,For how many years from the original deadline was the lease extended?,"[""SELECT['the original deadline']"", ""SELECT['the lease was extended']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['the original deadline']"", ""SELECT['the lease was extended']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]"
DROP_dev_history_254_4844e1c8-a97f-419a-ad11-071fb8292965,How many years did Ukraine agree to lease major parts of the facilities to the Russian Black Sea,"[""SELECT['Ukraine agree to lease major parts of the facilities to the Russian Black Sea']"", ""PROJECT['years of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['Ukraine agree to lease major parts of facilities to the Russian Black Sea']"", ""PROJECT['years of #REF', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_history_254_69f0add7-09b8-4def-86f8-f196003f0159,How many years was the leasehold renegotiated for?,"[""SELECT['the leasehold was renegotiated']"", ""PROJECT['years of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['leasehold was renegotiated']"", ""PROJECT['years of #REF', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_history_254_e8caaba6-6e7c-4170-af2c-f2faf35154ff,How many years past the original date of 2017 is the lease now extended?,"[""SELECT['the original date of 2017']"", ""SELECT['the lease is now extended']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['the original date of 2017']"", ""SELECT['the lease is now extended']"", ""PROJECT['year of #REF', '#1']"", ""PROJECT['year of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]."
DROP_dev_history_254_f60c3de3-2541-4847-b20d-ab43cf2a07dd,How many years was the leasehold extended counting the optional extension after 2042?,"[""SELECT['the leasehold was extended']"", ""FILTER['#1', 'after 2042']"", ""PROJECT['optional extension of #REF', '#2']"", ""PROJECT['years of #REF', '#3']"", ""AGGREGATE['count', '#4']""]","[""SELECT['the leasehold was extended']"", ""FILTER['#1', 'after 2042']"", ""PROJECT['optional extension of #REF', '#2']"", ""PROJECT['years of #REF', '#3']"", ""AGGREGATE['count', '#4']""]."
DROP_dev_history_2546_9f458845-1201-4ba8-9eb4-67fb45fd9b1e,"How many percent of the vote was for the Swiss People's Party, the Liberal and the Green Party?","[""SELECT['the Swiss People s Party']"", ""SELECT['the Liberal Party']"", ""SELECT['the Green Party']"", ""PROJECT['percent of the vote of #REF', '#1']"", ""PROJECT['percent of the vote of #REF', '#2']"", ""PROJECT['percent of the vote of #REF', '#3']"", ""PROJECT['percent of the vote of #REF', '#4']"", ""ARITHMETIC['sum', '#5', '#6']"", ""ARITHMETIC['difference', '#7', '#8']""]","[""SELECT['the Swiss People s Party']"", ""SELECT['the Liberal Party']"", ""SELECT['the Green Party']"", ""PROJECT['percent of the vote of #REF', '#1']"", ""PROJECT['percent of the vote of #REF', '#2']"", ""PROJECT['percent of the vote of #REF', '#3']"", ""PROJECT['percent of the vote of #REF', '#4']"", ""PROJECT['percent of the vote of #REF', '#5']"", ""ARITHMETIC['sum', '#6', '#7', '#8']""]"
DROP_dev_history_2609_0ca05637-43b9-444f-9c0a-3d27a214d83d,How many more people were German than English or Danish?,"[""SELECT['people']"", ""FILTER['#1', 'that were German']"", ""FILTER['#1', 'that were English']"", ""FILTER['#1', 'that were Danish']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['sum', '#5', '#6']"", ""ARITHMETIC['difference', '#7', '#8']""]","[""SELECT['people']"", ""FILTER['#1', 'that were German']"", ""FILTER['#1', 'that were English']"", ""FILTER['#1', 'that were Danish']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['sum', '#5', '#6']"", ""ARITHMETIC['difference', '#8', '#7']""]"
DROP_dev_history_2609_139eab9d-3c2f-4d35-b562-b4520bb73c45,How many more household and housing units were there than families?,"[""SELECT['households']"", ""SELECT['housing units']"", ""SELECT['families']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]","[""SELECT['households']"", ""SELECT['housing units']"", ""SELECT['families']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]"
DROP_dev_history_2609_8325b66f-987a-443c-9940-ed95c9d80d6c,How many more people were Swedish than English or Dutch?,"[""SELECT['people']"", ""FILTER['#1', 'that were Swedish']"", ""FILTER['#1', 'that were English']"", ""FILTER['#1', 'that were Dutch']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['sum', '#5', '#6']"", ""ARITHMETIC['difference', '#7', '#8']""]","[""SELECT['people']"", ""FILTER['#1', 'that were Swedish']"", ""FILTER['#1', 'that were English']"", ""FILTER['#1', 'that were Dutch']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['sum', '#5', '#6']"", ""ARITHMETIC['difference', '#4', '#7']""]"
DROP_dev_history_2609_af8c56be-3f79-45c1-8e9c-eb8f21777d13,Which groups are between 2000 and 3200 in size?,"[""SELECT['groups']"", ""PROJECT['sizes of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is at least 2000']"", ""COMPARATIVE['#1', '#2', 'is at most 3200']"", ""INTERSECTION['#1', '#3', '#4']""]","[""SELECT['groups']"", ""PROJECT['sizes of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is betweenleftside 2000']"", ""COMPARATIVE['#3', '#2', 'is betweenrightside 3200']""]"
DROP_dev_history_2609_d6f9a757-8749-4aaa-8f29-feabe654c58b,Which ancestral group is larger: swedish or irish?,"[""SELECT['ancestral groups']"", ""FILTER['#1', 'that is swedish']"", ""FILTER['#1', 'that is irish']"", ""PROJECT['size of #REF', '#2']"", ""PROJECT['size of #REF', '#3']"", ""COMPARISON['max', '#4', '#5']""]","[""SELECT['ancestral groups']"", ""PROJECT['size of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is swedish']"", ""COMPARATIVE['#1', '#2', 'is irish']"", ""COMPARISON['max', '#3', '#4']""]"
DROP_dev_history_2609_e243dd34-131c-4172-8a33-178f41013f39,Which ancestral group is larger: germans or swedish?,"[""SELECT['germans']"", ""SELECT['swedish']"", ""PROJECT['ancestral group of #REF', '#1']"", ""PROJECT['ancestral group of #REF', '#2']"", ""PROJECT['size of #REF', '#3']"", ""PROJECT['size of #REF', '#4']"", ""COMPARISON['max', '#5', '#6']""]","[""SELECT['germans']"", ""SELECT['swedish']"", ""PROJECT['ancestral group of #REF', '#1']"", ""PROJECT['ancestral group of #REF', '#2']"", ""PROJECT['size of #REF', '#3']"", ""PROJECT['size of #REF', '#4']"", ""COMPARISON['max', '#6', '#5']""]"
DROP_dev_history_2609_eb1581c9-d297-47aa-a54d-c30be2e81530,How many more people were German than Irish and Danish?,"[""SELECT['people']"", ""FILTER['#1', 'that were German']"", ""FILTER['#1', 'that were Irish']"", ""FILTER['#1', 'that were Danish']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['sum', '#5', '#6']"", ""ARITHMETIC['difference', '#7', '#8']""]","[""SELECT['people']"", ""FILTER['#1', 'that were German']"", ""FILTER['#1', 'that were Irish']"", ""FILTER['#1', 'that were Danish']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['sum', '#6', '#7']"", ""ARITHMETIC['difference', '#5', '#8']""]"
DROP_dev_history_2609_ef9ce2a5-7ca9-43af-bbd4-e4976e5141a1,Which groups are at least 3500 in size?,"[""SELECT['groups']"", ""PROJECT['size of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is at least 3500']""]","[""SELECT['groups']"", ""FILTER['#1', 'with size at least 3500']""]"
DROP_dev_history_2619_a625695a-d2b9-4b56-a2f6-efecfb49161d,How many more large bears are there in Sweden compared to Finland?,"[""SELECT['large bears']"", ""FILTER['#1', 'in Sweden']"", ""FILTER['#1', 'in Finland']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]","[""SELECT['large bears']"", ""FILTER['#1', 'that are in Sweden']"", ""FILTER['#1', 'that are in Finland']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['difference', '#4', '#5']?""]"
DROP_dev_history_2626_1b9e0b8b-9075-467d-b249-e34e28f09f05,How many percent of the population was not living below the poverty line?,"[""SELECT['population that was living below the poverty line']"", ""PROJECT['percent of #REF', '#1']"", ""PROJECT['difference of 100 and #REF', '#2']""]","[""SELECT['population living below the poverty line']"", ""PROJECT['percent of #REF', '#1']"", ""PROJECT['the difference of 100 percent and #REF', '#2']""]"
DROP_dev_history_2642_4ba7e086-d9ea-4abd-803f-ce4bc9261de7,How many points lower was the fertility rate in 1999 in Hungary compared to what it is now experiencing?,"[""SELECT['Hungary']"", ""PROJECT['fertility rate of #REF', '#1']"", ""FILTER['#2', 'in 1999']"", ""FILTER['#2', 'now experiencing']"", ""ARITHMETIC['difference', '#3', '#4']""]","[""SELECT['Hungary']"", ""PROJECT['fertility rate in points of #REF', '#1']"", ""FILTER['#2', 'in 1999']"", ""FILTER['#2', 'now experiencing']"", ""ARITHMETIC['difference', '#3', '#4']""]"
DROP_dev_history_2642_74bff066-bd5f-4b19-8e8a-01fab0991cb4,"In 2015, how many percent of births were to married women?","[""SELECT['births']"", ""FILTER['#1', 'in 2015']"", ""FILTER['#2', 'that were to married women']"", ""PROJECT['percent of #REF', '#3']""]","[""SELECT['births']"", ""FILTER['#1', 'In 2015']"", ""FILTER['#2', 'that were to married women']"", ""PROJECT['percent of #REF', '#3']""]"
DROP_dev_history_2642_c0c88600-4eeb-47f8-b2b5-7d88d2f203fc,How many  years of life expectancy does women have than men in Hungary?,"[""SELECT['Hungary']"", ""PROJECT['life expectancy of #REF', '#1']"", ""FILTER['#2', 'of women']"", ""FILTER['#2', 'of men']"", ""ARITHMETIC['difference', '#3', '#4']""]","[""SELECT['Hungary']"", ""PROJECT['life expectancy of #REF', '#1']"", ""FILTER['#2', 'that women have']"", ""FILTER['#2', 'that men have']"", ""ARITHMETIC['difference', '#3', '#4']"")""]"
DROP_dev_history_2650_b06d3130-f65d-4da9-b87e-a20a62dd8191,How many of the Marines light tactical vehicle fleet by 2017 will not consist of the A2 series?,"[""SELECT['the Marines']"", ""PROJECT['light tactical vehicle fleet of #REF', '#1']"", ""FILTER['#2', 'in 2017']"", ""FILTER['#3', 'that consist of the A2 series']"", ""DISCARD['#3', '#4']"", ""AGGREGATE['count', '#5']""]","[""SELECT['the Marines']"", ""PROJECT['light tactical vehicle fleet of #REF', '#1']"", ""FILTER['#2', 'in 2017']"", ""FILTER['#3', 'that will consist of the A2 series']"", ""DISCARD['#3', '#4']"", ""AGGREGATE['count', '#5']""]"
DROP_dev_history_2661_923c1673-9a62-4bef-9c45-6048d8f5ad09,"Which year had the highest total population, 1950 or 1900?","[""SELECT['populations']"", ""FILTER['#1', 'in 1950']"", ""FILTER['#1', 'in 1900']"", ""AGGREGATE['sum', '#2']"", ""AGGREGATE['sum', '#3']"", ""COMPARISON['max', '#4', '#5']""]","[""SELECT['populations']"", ""FILTER['#1', 'in 1950']"", ""FILTER['#1', 'in 1900']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['max', '#4', '#5']""]"
DROP_dev_history_2671_43b23e7d-a848-41f9-98b2-4d977b225c79,"How many total people, households and families were there in 2000?","[""SELECT['people']"", ""PROJECT['households of #REF', '#1']"", ""PROJECT['families of #REF', '#1']"", ""FILTER['#2', 'in 2000']"", ""FILTER['#3', 'in 2000']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""ARITHMETIC['sum', '#6', '#7']""]","[""SELECT['people']"", ""FILTER['#1', 'in 2000']"", ""AGGREGATE['count', '#2']"", ""PROJECT['households of #REF', '#2']"", ""PROJECT['families of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['sum', '#4', '#5', '#6']""]"
DROP_dev_history_2671_e270b56e-7e21-4b74-905d-3ac5aecfb27d,Which groups are between 4000 through 5800 in size?,"[""SELECT['groups']"", ""PROJECT['sizes of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is at least 4000']"", ""COMPARATIVE['#1', '#2', 'is at most 5800']"", ""INTERSECTION['#1', '#3', '#4']""]","[""SELECT['groups']"", ""PROJECT['sizes of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is higher than 4000']"", ""COMPARATIVE['#1', '#2', 'is lower than 5800']"", ""INTERSECTION['#1', '#3', '#4']""]"
DROP_dev_history_2676_24b74e17-31c6-450c-9b77-7e6c8519f703,How many more times did the Synchronicity album go platinum between 1984 and 2001?,"[""SELECT['the Synchronicity album']"", ""PROJECT['times platinum of #REF', '#1']"", ""FILTER['#2', 'betweenleftside 1984']"", ""FILTER['#3', 'betweenrightside 2001']"", ""AGGREGATE['count', '#4']""]","[""SELECT['the Synchronicity album']"", ""PROJECT['times platinum of #REF', '#1']"", ""FILTER['#2', 'in 1984']"", ""FILTER['#2', 'in 2001']"", ""ARITHMETIC['difference', '#3', '#4']""]"
DROP_dev_history_2676_4ae63d91-02cb-4299-809d-4d7128520a87,How many total days was the gap between the two number 1 periods for the Synchronicity album?,"[""SELECT['the Synchronicity album']"", ""PROJECT['number 1 periods of #REF', '#1']"", ""PROJECT['days that #REF was the gap between', '#2']"", ""AGGREGATE['sum', '#3']""]","[""SELECT['the Synchronicity album']"", ""PROJECT['number 1 periods of #REF', '#1']"", ""PROJECT['days that #REF was the gap between', '#2']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_nfl_1021_581a25ed-56ca-4be7-aa0f-260959f3dd74,How many yards difference was Jay Cutler’s first touchdown pass compared to his second?,"[""SELECT['Jay Cutler']"", ""PROJECT['touchdown passes of #REF', '#1']"", ""AGGREGATE['min', '#2']"", ""PROJECT['second of #REF', '#2']"", ""PROJECT['yards of #REF', '#3']"", ""PROJECT['yards of #REF', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['Jay Cutler']"", ""PROJECT['touchdown passes of #REF', '#1']"", ""AGGREGATE['min', '#2']"", ""PROJECT['the second of #REF', '#2']"", ""PROJECT['yards of #REF', '#3']"", ""PROJECT['yards of #REF', '#4']"", ""ARITHMETIC['difference', '#6', '#5']""]"
DROP_dev_nfl_1021_f8d43ba3-89bf-4c31-b3b4-c4b24725c214,How many yards difference was Michael Pittman’s last touchdown run compared to his first?,"[""SELECT['Michael Pittman']"", ""PROJECT['touchdown runs of #REF', '#1']"", ""AGGREGATE['max', '#2']"", ""AGGREGATE['min', '#2']"", ""PROJECT['yards of #REF', '#3']"", ""PROJECT['yards of #REF', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['Michael Pittman']"", ""PROJECT['touchdown run of #REF', '#1']"", ""AGGREGATE['max', '#2']"", ""AGGREGATE['min', '#2']"", ""PROJECT['yards of #REF', '#3']"", ""PROJECT['yards of #REF', '#4']"", ""ARITHMETIC['difference', '#6', '#5']""]"
DROP_dev_nfl_104_2d43aca4-9996-4bb0-99aa-8009591f76bb,How many yards longer was the longest field goal over the second longest?,"[""SELECT['field goals']"", ""PROJECT['yards of #REF', '#1']"", ""AGGREGATE['max', '#2']"", ""DISCARD['#2', '#3']"", ""AGGREGATE['max', '#4']"", ""ARITHMETIC['difference', '#3', '#5']""]","[""SELECT['field goals']"", ""PROJECT['yards of #REF', '#1']"", ""AGGREGATE['max', '#2']"", ""AGGREGATE['max', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]"
DROP_dev_nfl_104_a565bddc-a727-4956-b14e-6e6d6f57abd9,Which player had the longest touchdown?,"[""SELECT['touchdowns']"", ""AGGREGATE['max', '#1']"", ""PROJECT['player of #REF', '#2']""]","[""SELECT['touchdowns']"", ""PROJECT['longness of #REF', '#1']"", ""SUPERLATIVE['max', '#1', '#2']"", ""PROJECT['player of #REF', '#3']""]"
DROP_dev_nfl_104_a71a910f-f2e0-412a-846d-b49fcce5b79f,Who completed the longest field goal?,"[""SELECT['field goals']"", ""AGGREGATE['max', '#1']"", ""PROJECT['who completed #REF', '#2']""]","[""SELECT['field goals']"", ""PROJECT['longness of #REF', '#1']"", ""SUPERLATIVE['max', '#1', '#2']"", ""PROJECT['who completed #REF', '#3']""]"
DROP_dev_nfl_1096_25293bf7-6e8c-4362-8a37-1078142e5be1,How many total yards did JaMarcus Russell's completed passes add up to?,"[""SELECT['JaMarcus Russell']"", ""PROJECT['completed passes of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['sum', '#3']""]","[""SELECT['JaMarcus Russell']"", ""PROJECT['passes of #REF', '#1']"", ""PROJECT['completed #REF', '#2']"", ""PROJECT['yards of #REF', '#3']""."
DROP_dev_nfl_1096_5577b716-c636-4042-a4f5-77f50aed7be1,How many incomplete passes did JaMarcus Russell throw?,"[""SELECT['JaMarcus Russell']"", ""PROJECT['incomplete passes of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['JaMarcus Russell']"", ""PROJECT['incomplete passes #REF did throw', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_nfl_1096_58ee1f35-a66e-4a5a-847d-68bb1a91324a,How many field goals of 40 yards or more did Janikowski make?,"[""SELECT['Janikowski']"", ""PROJECT['field goals of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is at least 40']"", ""AGGREGATE['count', '#4']""]","[""SELECT['Janikowski']"", ""PROJECT['field goals of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is higher than 40']"", ""AGGREGATE['count', '#4']""]"
DROP_dev_nfl_1096_cbf71212-323b-42d5-b047-529817de3db5,How many passes did JaMarcus Russell not complete?,"[""SELECT['JaMarcus Russell']"", ""PROJECT['passes of #REF', '#1']"", ""FILTER['#2', 'that JaMarcus Russell completes']"", ""DISCARD['#2', '#3']"", ""AGGREGATE['count', '#4']""]","[""SELECT['JaMarcus Russell']"", ""PROJECT['passes completed of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""PROJECT['difference of #REF and one', '#3']""]"
DROP_dev_nfl_1136_2ed0b78d-5bb5-4a6d-a471-c1c97c3eaa2e,Which team got the ball first?,"[""SELECT['teams']"", ""FILTER['#1', 'that got the ball first']""]","[""SELECT['teams']"", ""FILTER['#1', 'who got the ball first']""]"
DROP_dev_nfl_1136_500eb537-6c16-447b-ae0d-f480eb336156,Who scored a touchdown from the farthest distance?,"[""SELECT['touchdowns']"", ""PROJECT['the distance of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is the highest']"", ""PROJECT['who scored #REF', '#3']""]","[""SELECT['touchdowns']"", ""PROJECT['how far away are #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is the highest']"", ""PROJECT['who scored #REF', '#3']""]"
DROP_dev_nfl_1136_6639ffe0-acdd-40cc-a6f5-081c6e09df04,How long were the two touchdown scrambles?,"[""SELECT['touchdown scrambles']"", ""PROJECT['How long were #REF', '#1']""]","[""SELECT['touchdown scrambles']"", ""PROJECT['how long was #REF', '#1']""]"
DROP_dev_nfl_1136_7361d127-759d-484a-99e9-0eea91ce5cae,How many points did the Dolphins lose by?,"[""SELECT['the Dolphins']"", ""PROJECT['points lose by of #REF', '#1']""]","[""SELECT['the Dolphins']"", ""PROJECT['points by which #REF lose', '#1']""]"
DROP_dev_nfl_1136_9ab4f12e-7526-44e9-ad98-11cd2d79e381,How many more yards did the Patriots have in 1979 than this game?,"[""SELECT['the Patriots']"", ""PROJECT['yards of #REF', '#1']"", ""FILTER['#2', 'in 1979']"", ""FILTER['#2', 'in this game']"", ""ARITHMETIC['difference', '#3', '#4']""]","[""SELECT['the Patriots']"", ""PROJECT['yards of #REF', '#1']"", ""FILTER['#2', 'in 1979']"", ""AGGREGATE['sum', '#3']"", ""FILTER['#2', 'in this game']"", ""AGGREGATE['sum', '#5']"", ""ARITHMETIC['difference', '#4', '#6']""]"
DROP_dev_nfl_1136_a16fc6ad-fb3d-4b4e-8da0-d87e49b6c17a,How many points was New England winning by at halftime?,"[""SELECT['New England']"", ""PROJECT['points winning by of #REF', '#1']"", ""FILTER['#2', 'at halftime']""]","[""SELECT['New England']"", ""PROJECT['points by which #REF was winning', '#1']"", ""FILTER['#2', 'at halftime']""]"
DROP_dev_nfl_1136_b5812c99-494b-4730-a7b2-cca7bff83c91,How many points ahead were the Dolphins after Pennington hit fullback Casey Cramer?,"[""SELECT['the Dolphins']"", ""PROJECT['points ahead of #REF', '#1']"", ""FILTER['#2', 'after Pennington hit fullback Casey Cramer']""]","[""SELECT['Pennington hit fullback Casey Cramer']"", ""PROJECT['points ahead of #REF', '#1']""]"
DROP_dev_nfl_1136_dc62e06c-7f3d-4957-93da-85d09525c7b9,How long were each of Randy Moss's touchdown receptions?,"[""SELECT['Randy Moss']"", ""PROJECT['touchdown receptions of #REF', '#1']"", ""PROJECT['How long were #REF', '#2']""]","[""SELECT['Randy Moss']"", ""PROJECT['touchdown receptions of #REF', '#1']"", ""PROJECT['how long were #REF', '#2']""]"
DROP_dev_nfl_1152_386f665c-12e3-4f19-9a75-c5a0166aa8dd,How many passing touchdowns did Manning score?,"[""SELECT['Manning']"", ""PROJECT['passing touchdowns of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['Manning']"", ""PROJECT['passing touchdown scores of #REF', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_nfl_1152_56f7aa4b-bb3a-4ad7-93e3-f1c90711ccb7,How many times did the Giants score in the first quarter?,"[""SELECT['the Giants']"", ""PROJECT['scores of #REF', '#1']"", ""FILTER['#2', 'in the first quarter']"", ""AGGREGATE['count', '#3']""]","[""SELECT['Giants']"", ""PROJECT['scores of #REF', '#1']"", ""FILTER['#2', 'in the first quarter']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_nfl_1152_5ac14e77-9836-4824-a1f0-15b69e45536f,Who got the final TD of the first half?,"[""SELECT['TD']"", ""FILTER['#1', 'in the first half']"", ""PROJECT['the final of #REF', '#2']"", ""PROJECT['who got #REF', '#3']""]","[""SELECT['TDs']"", ""FILTER['#1', 'in the first half']"", ""PROJECT['the final of #REF', '#2']"", ""PROJECT['who got #REF', '#3']""]"
DROP_dev_nfl_1152_6c9969c0-d691-491c-bfa7-faf0dd01eb9f,How many yards did Manning pass to Toomer?,"[""SELECT['Manning']"", ""PROJECT['passes of #REF', '#1']"", ""FILTER['#2', 'to Toomer']"", ""PROJECT['yards of #REF', '#3']"", ""AGGREGATE['sum', '#4']""]","[""SELECT['Manning']"", ""PROJECT['passes of #REF', '#1']"", ""FILTER['#2', 'to Toomer']"", ""PROJECT['yards of #REF', '#3']""]"
DROP_dev_nfl_1152_a44ccaf8-9716-46ff-9b10-f437e657c768,how many yards did Carney get?,"[""SELECT['Carney']"", ""PROJECT['yards of #REF', '#1']"", ""AGGREGATE['sum', '#2']""]","[""SELECT['Carney']"", ""PROJECT['yards of #REF', '#1']""]"
DROP_dev_nfl_1152_a7954f50-c039-4181-889c-ed0e8d9d8ff6,How many field longer than 30 yards did Carney kick?,"[""SELECT['Carney']"", ""PROJECT['fields of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is higher than 30']"", ""AGGREGATE['count', '#4']""]","[""SELECT['Carney']"", ""PROJECT['fields of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is higher than 30 yards']"", ""AGGREGATE['count', '#4']""]"
DROP_dev_nfl_1167_11d473f7-0d41-4004-8a89-888f8078530f,Which player only had one field goal?,"[""SELECT['players']"", ""PROJECT['field goals of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is one']""]","[""SELECT['players']"", ""PROJECT['field goals of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']""]"
DROP_dev_nfl_1167_3b8f00e9-ffd6-48a9-8858-57664199bfa7,How many more yards was Thomas Jones' longest TD run than his shortest?,"[""SELECT['Thomas Jones']"", ""PROJECT['TD runs of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['max', '#3']"", ""AGGREGATE['min', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]","[""SELECT['Thomas Jones']"", ""PROJECT['TD runs of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['max', '#3']"", ""AGGREGATE['min', '#3']"", ""ARITHMETIC['difference', '#5', '#4']""]"
DROP_dev_nfl_1167_3c3f3961-8122-4fe5-94e9-652843402f42,What was Thomas Jones' shortest TD run?,"[""SELECT['Thomas Jones']"", ""PROJECT['TD runs of #REF', '#1']"", ""AGGREGATE['min', '#2']""]","[""SELECT['Thomas Jones']"", ""PROJECT['TD runs of #REF', '#1']"", ""AGGREGATE['min', '#2']""]"
DROP_dev_nfl_1167_682a17f1-04b7-45d8-8ed4-6c4b4e20f8ac,How many TD runs were under 10 yards?,"[""SELECT['TD runs']"", ""PROJECT['yards of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is lower than 10']"", ""AGGREGATE['count', '#3']""]","[""SELECT['TD runs']"", ""PROJECT['yards of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'lower than 10']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_nfl_1167_831f909a-25bf-4d3e-82c3-f208cdc11f9e,What team does Peyton Hillis play for?,"[""SELECT['Peyton Hillis']"", ""PROJECT['team of #REF', '#1']""]","[""SELECT['Peyton Hillis']"", ""PROJECT['team #REF plays for', '#1']""]"
DROP_dev_nfl_1167_8d3569c3-3434-46b1-8d42-187feed4cdc0,Who is the running back for the Jets?,"[""SELECT['the Jets']"", ""PROJECT['running back of #REF', '#1']""]","[""SELECT['the Jets']"", ""PROJECT['running back for #REF', '#1']""]"
DROP_dev_nfl_1184_03fdc8a0-d62b-49a0-8087-af92e6659650,How many field goals did Sebastian Janikowski and Kris Brown both score each?,"[""SELECT['Sebastian Janikowski']"", ""SELECT['Kris Brown']"", ""PROJECT['field goals of #REF', '#1']"", ""PROJECT['field goals of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['sum', '#5', '#6']""]","[""SELECT['Sebastian Janikowski']"", ""SELECT['Kris Brown']"", ""PROJECT['field goals of #REF', '#1']"", ""PROJECT['field goals of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['sum', '#6', '#5']""]"
DROP_dev_nfl_1184_0aa153e9-057a-4347-acb7-8114cb1d68e8,How many yards longer was the 80-yard punt than the touchdown pass from Russell to Johnnie Lee Higgins?,"[""SELECT['the 80-yard punt']"", ""SELECT['the touchdown pass from Russell to Johnnie Lee Higgins']"", ""PROJECT['yards of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]","[""SELECT['the 80-yard punt']"", ""SELECT['the touchdown pass from Russell to Johnnie Lee Higgins']"", ""PROJECT['yards of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]"
DROP_dev_nfl_1184_121a8f57-7752-4373-a9ba-748b2c577cd2,How many more yards was Kris Browns's first field goal over his second?,"[""SELECT['Kris Browns']"", ""PROJECT['field goals of #REF', '#1']"", ""AGGREGATE['min', '#2']"", ""PROJECT['second of #REF', '#2']"", ""PROJECT['yards of #REF', '#3']"", ""PROJECT['yards of #REF', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['Kris Browns']"", ""PROJECT['field goals of #REF', '#1']"", ""AGGREGATE['min', '#2']"", ""PROJECT['second of #REF', '#2']"", ""PROJECT['yards of #REF', '#3']"", ""PROJECT['yards of #REF', '#4']"", ""ARITHMETIC['difference', '#6', '#5']""]"
DROP_dev_nfl_1184_17bdcfb1-8ad9-46b5-8a3b-1f9769dfd60a,How many yards difference is there between Sebastian Janikowski's longest field goal and his shortest field goal?,"[""SELECT['Sebastian Janikowski']"", ""PROJECT['field goals of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['max', '#3']"", ""AGGREGATE['min', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]","[""SELECT['Sebastian Janikowski']"", ""PROJECT['field goals of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['max', '#3']"", ""AGGREGATE['min', '#3']"", ""ARITHMETIC['difference', '#5', '#6']""]"
DROP_dev_nfl_1184_7dfd2b64-f39e-4bb4-aeb0-1900adda6018,How many field goals did both teams kick in the first half?,"[""SELECT['teams']"", ""PROJECT['field goals of #REF', '#1']"", ""FILTER['#2', 'in the first half']"", ""AGGREGATE['count', '#3']""]","[""SELECT['the first half']"", ""PROJECT['field goals of #REF', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_nfl_1184_ac6ba235-3024-4f63-a6ab-730a14def4cb,How many field goals did Kris Brown kick?,"[""SELECT['Kris Brown']"", ""PROJECT['field goals of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['Kris Brown']"", ""PROJECT['field goals that #REF kicks', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_nfl_1184_d4547161-dd97-4164-93a1-144986d94c51,How many yards difference is there between Kris Brown's longest and shortest field goals?,"[""SELECT['Kris Brown']"", ""PROJECT['field goals of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['max', '#3']"", ""AGGREGATE['min', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]","[""SELECT['Kris Brown']"", ""PROJECT['field goals of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['max', '#3']"", ""AGGREGATE['min', '#3']"", ""ARITHMETIC['difference', '#6', '#4']""]"
DROP_dev_nfl_1193_e5e11477-7b11-4f73-b8c8-2bb7da5c8cdd,Which player scored the first points of the game for the Eagles?,"[""SELECT['the Eagles']"", ""PROJECT['points scored of #REF', '#1']"", ""AGGREGATE['min', '#2']"", ""PROJECT['player of #REF', '#3']""]","[""SELECT['the Eagles']"", ""PROJECT['points scored of #REF', '#1']"", ""AGGREGATE['min', '#2']"", ""PROJECT['player of #REF', '#3']?""]"
DROP_dev_nfl_1195_5c35081c-3c7f-4c30-a2ef-cf013f46a38e,How many field goals occurred in the game?,"[""SELECT['field goals']"", ""AGGREGATE['count', '#1']""]","[""SELECT['field goals in the game']"", ""AGGREGATE['count', '#1']""]"
DROP_dev_nfl_1195_b04522b7-29b3-416d-90ab-8725e6623b64,How many field goals were successful in this game?,"[""SELECT['field goals in this game']"", ""FILTER['#1', 'that were successful']"", ""AGGREGATE['count', '#2']""]","[""SELECT['field goals']"", ""FILTER['#1', 'that were successful in this game']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_nfl_1195_e5d90a83-6a57-4496-b1d7-6f0581044546,How many touchdowns occurred in the 1st half?,"[""SELECT['touchdowns']"", ""FILTER['#1', 'in the 1st half']"", ""AGGREGATE['count', '#2']""]","[""SELECT['touchdowns']"", ""FILTER['#1', 'of the 1st half']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_nfl_1207_02d055e6-1c58-415f-8c47-62955b98f064,How many interceptions did Ben Roethlisberger have?,"[""SELECT['Ben Roethlisberger']"", ""PROJECT['interceptions of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['Bein Roethlisberger']"", ""PROJECT['interceptions of #REF', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_nfl_1207_7e298a36-7343-4e10-a779-01d45fd30c0e,"Who scored more points in the game, Giants or Steelers?","[""SELECT['Giants']"", ""PROJECT['points of #REF', '#1']"", ""AGGREGATE['sum', '#2']"", ""SELECT['Steelers']"", ""PROJECT['points of #REF', '#4']"", ""AGGREGATE['sum', '#5']"", ""COMPARISON['max', '#3', '#6']""]","[""SELECT['the Giants']"", ""PROJECT['points scored of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""SELECT['the Steelers']"", ""PROJECT['points scored of #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""COMPARISON['max', '#3', '#6']""]"
DROP_dev_nfl_1216_2e82b6a6-8afa-4c30-8bf7-8bd101f9e16e,Which team scored more touchdowns in the fourth quarter?,"[""SELECT['teams']"", ""PROJECT['touchdowns of #REF', '#1']"", ""FILTER['#2', 'in the fourth quarter']"", ""GROUP['count', '#3', '#1']"", ""SUPERLATIVE['max', '#1', '#4']""]","[""SELECT['teams']"", ""PROJECT['touchdowns scored of #REF', '#1']"", ""FILTER['#2', 'in the fourth quarter']"", ""GROUP['count', '#3', '#1']"", ""SUPERLATIVE['max', '#1', '#4']""]"
DROP_dev_nfl_1216_3ca3f0be-f34c-4c74-be52-d324d678daf8,Did Philip Rivers throw fewer touchdown passes in the second or fourth quarter?,"[""SELECT['Philip Rivers']"", ""PROJECT['touchdown passes of #REF', '#1']"", ""FILTER['#2', 'in the second quarter']"", ""FILTER['#2', 'in the fourth quarter']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""COMPARISON['min', '#5', '#6']""]","[""SELECT['Philip Rivers']"", ""PROJECT['touchdown passes of #REF', '#1']"", ""FILTER['#2', 'that are in second quarter']"", ""FILTER['#2', 'that are in fourth quarter']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""COMPARISON['min', '#5', '#6']""]"
DROP_dev_nfl_1216_441a4d13-822f-43a1-8fbc-8d381ee3036f,Which team was leading at the end of the third quarter?,"[""SELECT['teams']"", ""FILTER['#1', 'that was leading']"", ""FILTER['#2', 'at the end of the third quarter']""]","[""SELECT['the third quarter']"", ""PROJECT['the end of #REF', '#1']"", ""PROJECT['team leading of #REF', '#2']""]"
DROP_dev_nfl_122_524415eb-084f-48b0-b890-cbe71a12c46d,How many yards were each of the touchdown passes in the game?,"[""SELECT['touchdown passes in the game']"", ""PROJECT['yards of #REF', '#1']""]","[""SELECT['touchdown passes']"", ""PROJECT['yards of #REF', '#1']"", ""AGGREGATE['sum', '#2']""]"
DROP_dev_nfl_122_8dd12719-1ed3-4b9c-9b2d-eae7565499c7,How many yards difference exists between David Akers's longest and shortest field goal?,"[""SELECT['David Akers']"", ""PROJECT['field goals of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['max', '#3']"", ""AGGREGATE['min', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]","[""SELECT['David Akers']"", ""PROJECT['field goal of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['max', '#3']"", ""AGGREGATE['min', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]"
DROP_dev_nfl_122_957c9d3d-6e67-49d8-84de-78cd08817bcc,How long were each of David Akers's field goals?,"[""SELECT['David Akers']"", ""PROJECT['field goals of #REF', '#1']"", ""PROJECT['How long were #REF', '#2']""]","[""SELECT['David Akers']"", ""PROJECT['field goals of #REF', '#1']"", ""PROJECT['How long were each #REF', '#2']""]"
DROP_dev_nfl_1222_09d40815-d551-42db-9096-59378b0190df,Which players caught 12 yard touchdown receptions?,"[""SELECT['touchdown receptions']"", ""PROJECT['yards of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is 12 yards']"", ""PROJECT['players that caught #REF', '#3']""]","[""SELECT['touchdown receptions']"", ""PROJECT['yards of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is 12 yard']"", ""PROJECT['players that caught #REF', '#3']""]"
DROP_dev_nfl_1222_35c2174f-2eb4-45eb-9658-c6ebbc99ea7b,How many yards longer was Kaeding's longest field goal than Mehlhaff's longest field goal?,"[""SELECT['Kaeding']"", ""SELECT['Mehlhaff']"", ""PROJECT['field goals of #REF', '#1']"", ""PROJECT['field goals of #REF', '#2']"", ""PROJECT['yards of #REF', '#3']"", ""PROJECT['yards of #REF', '#4']"", ""AGGREGATE['max', '#5']"", ""AGGREGATE['max', '#6']"", ""ARITHMETIC['difference', '#7', '#8']""]","[""SELECT['Kaeding']"", ""PROJECT['field goals of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['max', '#3']"", ""SELECT['Mehlhaff']"", ""PROJECT['field goal of #REF', '#5']"", ""PROJECT['yards of #REF', '#6']"", ""AGGREGATE['max', '#7']"", ""ARITHMETIC['difference', '#4', '#8']""]"
DROP_dev_nfl_1222_740c8a6f-4d87-43b5-aabe-1683c078b381,The shortest TD pass was thrown to who?,"[""SELECT['TD passes']"", ""PROJECT['how short are #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is the lowest']"", ""PROJECT['who thrown #REF', '#3']""]","[""SELECT['TD passes']"", ""AGGREGATE['min', '#1']"", ""PROJECT['to who was #REF thrown', '#2']""]"
DROP_dev_nfl_1222_7f483afc-67be-4923-a3c0-711dc4e217a6,Which players scored 1-yard touchdowns?,"[""SELECT['touchdowns']"", ""PROJECT['yards of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is 1-yard']"", ""PROJECT['players of #REF', '#3']""]","[""SELECT['touchdowns']"", ""FILTER['#1', 'that are 1-yard']"", ""PROJECT['players of #REF', '#2']""]"
DROP_dev_nfl_1222_a4186127-63c5-47dd-843f-50376c361520,How many more field goals did Kaeding make than Mehlhaff?,"[""SELECT['Kaeding']"", ""SELECT['Mehlhaff']"", ""PROJECT['field goals of #REF', '#1']"", ""PROJECT['field goals of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['Kaeding']"", ""SELECT['Mehlhaff']"", ""PROJECT['field goals of #REF', '#1']"", ""PROJECT['field goals of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#6', '#5']""]"
DROP_dev_nfl_1222_eb02a495-08f1-4721-ab76-01e515b78aa0,"Which player scored more field goals, Nate Kaeding or Taylor Mehlhaff?","[""SELECT['Nate Kaeding']"", ""SELECT['Taylor Mehlhaff']"", ""PROJECT['field goals of #REF', '#1']"", ""PROJECT['field goals of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""COMPARISON['max', '#5', '#6']""]","[""SELECT['Nate Kaeding']"", ""PROJECT['field goals scored of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""SELECT['Taylor Mehlhaff']"", ""PROJECT['field goals scored of #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""COMPARISON['max', '#3', '#6']""]"
DROP_dev_nfl_1222_f631fc80-ccc6-4f65-92a1-be1739ef8fbe,How many more total field goal yards did Nate Kaeding make than Taylor Mehlhaff?,"[""SELECT['Nate Kaeding']"", ""PROJECT['field goals of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['sum', '#3']"", ""SELECT['Taylor Mehlhaff']"", ""PROJECT['field goals of #REF', '#5']"", ""PROJECT['yards of #REF', '#6']"", ""AGGREGATE['sum', '#7']"", ""ARITHMETIC['difference', '#4', '#8']""]","[""SELECT['Nate Kaeding']"", ""PROJECT['field goals of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['sum', '#3']"", ""SELECT['Taylor Mehlhaff']"", ""PROJECT['field goal of #REF', '#5']"", ""PROJECT['yards of #REF', '#6']"", ""AGGREGATE['sum', '#7']"", ""ARITHMETIC['difference', '#4', '#8']""]"
DROP_dev_nfl_1223_265ce825-5892-45c8-8d07-71f72decd729,Which receiver caught the longest touchdown pass?,"[""SELECT['touchdown passes']"", ""PROJECT['longness of #REF', '#1']"", ""SUPERLATIVE['max', '#1', '#2']"", ""PROJECT['receiver that caught #REF', '#3']""]","[""SELECT['touchdown passes']"", ""PROJECT['how long are #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is the highest']"", ""PROJECT['the receiver that caught #REF', '#3']""]"
DROP_dev_nfl_1223_2c1e4972-72e2-4278-8934-c6f3bad8e69d,How many failed 2-point conversions where there by Kansas City in the whole game?,"[""SELECT['Kansas City']"", ""PROJECT['2-point conversions of #REF', '#1']"", ""FILTER['#2', 'that failed']"", ""AGGREGATE['count', '#3']""]","[""SELECT['Kansas City']"", ""PROJECT['2 point conversions of #REF', '#1']"", ""FILTER['#2', 'that failed']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_nfl_1223_33374285-4969-474a-8115-6448c052aec9,Which team allowed the least points against them?,"[""SELECT['teams']"", ""PROJECT['points allowed against #REF', '#1']"", ""GROUP['sum', '#2', '#1']"", ""SUPERLATIVE['min', '#1', '#3']""]","[""SELECT['teams']"", ""PROJECT['points allowed of #REF', '#1']"", ""GROUP['sum', '#2', '#1']"", ""SUPERLATIVE['min', '#1', '#3']""]"
DROP_dev_nfl_1223_7d7a5fc9-724a-4c26-b665-8912bbb94369,How many points did the Chargers score in the second quarter?,"[""SELECT['the Chargers']"", ""PROJECT['points scored of #REF', '#1']"", ""FILTER['#2', 'in the second quarter']"", ""AGGREGATE['count', '#3']""]","[""SELECT['the Chargers']"", ""PROJECT['points that #REF score', '#1']"", ""FILTER['#2', 'in the second quarter']"", ""AGGREGATE['sum', '#3']""]"
DROP_dev_nfl_1223_a53fea0a-aa37-4b00-bc01-4a6ac26628eb,How many quarters had been played before Rivers threw a touchdown pass to Floyd?,"[""SELECT['Rivers']"", ""PROJECT['quarters played before #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['Rivers']"", ""PROJECT['quarters played of #REF', '#1']"", ""FILTER['#2', 'before #1']"", ""AGGREGATE['min', '#3']""]"
DROP_dev_nfl_1223_d0b9f77b-6544-4bda-8793-94bef32799ab,Which team tried an onside kick to get the ball back?,"[""SELECT['onside kicks']"", ""FILTER['#1', 'to get the ball back']"", ""PROJECT['team that tried #REF', '#2']""]","[""SELECT['onside kicks']"", ""FILTER['#1', 'that try to get the ball back']"", ""PROJECT['team of #REF', '#2']""."
DROP_dev_nfl_1223_f6e0777c-c76b-41ae-806c-7abaa26a975d,How many times did Kansas City score in the first half?,"[""SELECT['Kansas City']"", ""PROJECT['scores of #REF', '#1']"", ""FILTER['#2', 'in the first half']"", ""AGGREGATE['count', '#3']""]","[""SELECT['Kansas City']"", ""PROJECT['times #REF did score', '#1']"", ""FILTER['#2', 'in the first half']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_nfl_1223_fcfd1f52-20bc-4bc6-8c2b-f596fe8567cd,What was the shortest pass for a touchdown?,"[""SELECT['touchdown passes']"", ""AGGREGATE['min', '#1']""]","[""SELECT['touchdown passes']"", ""PROJECT['how short are #REF', '#1']"", ""AGGREGATE['min', '#2']""]"
DROP_dev_nfl_1233_23eddacc-2940-4d1f-961f-a0d769cd6ae3,How many touchdown passes over 30 yards were made?,"[""SELECT['touchdown passes']"", ""PROJECT['yards of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is higher than 30']"", ""AGGREGATE['count', '#3']""]","[""SELECT['touchdown passes']"", ""FILTER['#1', 'that were more than 30 yards']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_nfl_1233_681cc6d3-c9d9-4919-ba8d-e0308553d3bc,Which team had the shortest field goal,"[""SELECT['teams']"", ""PROJECT['field goals of #REF', '#1']"", ""SUPERLATIVE['min', '#1', '#2']""]","[""SELECT['field goals']"", ""AGGREGATE['min', '#1']"", ""PROJECT['team of #REF', '#2']""]"
DROP_dev_nfl_1233_7a5e1fbb-46c2-4692-ba5c-8ec201a72585,Which player scored the first points for the Saints?,"[""SELECT['the Saints']"", ""PROJECT['points scored of #REF', '#1']"", ""AGGREGATE['min', '#2']"", ""PROJECT['player of #REF', '#3']""]","[""SELECT['points scored']"", ""FILTER['#1', 'for the Saints']"", ""AGGREGATE['min', '#2']"", ""PROJECT['player of #REF', '#3']""]"
DROP_dev_nfl_1233_bc7dcb96-002f-4c86-a45a-6a6d54b0bd1a,In which quarters did the Saints not score?,"[""SELECT['quarters']"", ""PROJECT['scores of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is zero']""]","[""SELECT['quarters']"", ""FILTER['#1', 'in which the Saints score']"", ""DISCARD['#1', '#2']""]"
DROP_dev_nfl_1233_becd0619-d572-48d5-b039-54f46181b368,Which team beat the Lions in week 3?,"[""SELECT['teams']"", ""FILTER['#1', 'that beat the Lions']"", ""FILTER['#2', 'in week 3']""]","[""SELECT['the Lions']"", ""PROJECT['team that beat #REF', '#1']"", ""FILTER['#2', 'in week 3']""."
DROP_dev_nfl_1233_ca9ec9d0-81ff-4aa5-a523-dc418046b9f9,Which player kicked the last field goal of the game?,"[""SELECT['field goals']"", ""AGGREGATE['max', '#1']"", ""PROJECT['player of #REF', '#2']""]","[""SELECT['field goals']"", ""AGGREGATE['max', '#1']"", ""PROJECT['player that kicked #REF', '#2']?""]"
DROP_dev_nfl_1240_0b228f90-6581-4c94-92f3-a710d69162db,Which player made the field goals between 20 and 30 yards?,"[""SELECT['field goals']"", ""PROJECT['yards of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is at least 20']"", ""COMPARATIVE['#1', '#2', 'is at most 30']"", ""INTERSECTION['#1', '#3', '#4']"", ""PROJECT['player of #REF', '#5']""]","[""SELECT['field goals']"", ""PROJECT['yards of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is higher than 20']"", ""COMPARATIVE['#1', '#2', 'is lower than 30']"", ""INTERSECTION['#1', '#3', '#4']"", ""PROJECT['player of #REF', '#5']""]"
DROP_dev_nfl_1240_0f865677-9e16-4ca1-9517-5c4184605b14,"Which player threw more touchdown passes, Tony Romo or Shaun Hill ?","[""SELECT['Tony Romo']"", ""PROJECT['touchdown passes of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""SELECT['Shaun Hill']"", ""PROJECT['touchdown passes of #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""COMPARISON['max', '#3', '#6']""]","[""SELECT['Toto Romo']"", ""PROJECT['touchdown passes of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""SELECT['Shaun Hill']"", ""PROJECT['touchdown passes of #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""COMPARISON['max', '#3', '#6']""]"
DROP_dev_nfl_1240_3462ea9b-6aaf-4ea4-9313-7b27017013d5,How many yards was the last TD of the game?,"[""SELECT['TD']"", ""AGGREGATE['max', '#1']"", ""PROJECT['yards of #REF', '#2']""]","[""SELECT['TD of the game']"", ""AGGREGATE['max', '#1']"", ""PROJECT['yards of #REF', '#2']""]"
DROP_dev_nfl_1240_389b9b3a-8473-44c9-a8c1-a2ba140c81b6,How many field goals over 30 yards did Nick Folk make?,"[""SELECT['Nick Folk']"", ""PROJECT['field goals of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is higher than 30']"", ""AGGREGATE['count', '#4']""]","[""SELECT['Nick Folk']"", ""PROJECT['field goals of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is more than 30 yards']"", ""AGGREGATE['count', '#4']""]"
DROP_dev_nfl_1240_514f30d2-a26a-4e91-8d21-afbca090ea8c,How many yards shorter was Joe Nedney's second field goal compared to his first?,"[""SELECT['Joe Nedney']"", ""PROJECT['field goals of #REF', '#1']"", ""PROJECT['second of #REF', '#2']"", ""AGGREGATE['min', '#2']"", ""PROJECT['yards of #REF', '#3']"", ""PROJECT['yards of #REF', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['Joe Nedney']"", ""PROJECT['field goals of #REF', '#1']"", ""PROJECT['second of #REF', '#2']"", ""AGGREGATE['min', '#2']"", ""PROJECT['yards of #REF', '#3']"", ""PROJECT['yards of #REF', '#4']"", ""ARITHMETIC['difference', '#6', '#5']""]"
DROP_dev_nfl_1240_6024c14a-c2d9-486c-8402-24c818fa8bed,How many field goals were longer than 30 yards and less than 45 yards?,"[""SELECT['field goals']"", ""PROJECT['yards of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is higher than 30']"", ""COMPARATIVE['#1', '#2', 'is lower than 45']"", ""INTERSECTION['#1', '#3', '#4']"", ""AGGREGATE['count', '#5']""]","[""SELECT['field goals']"", ""PROJECT['yards of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is higher than 30 yards']"", ""COMPARATIVE['#1', '#2', 'is lower than 45 yards']"", ""INTERSECTION['#1', '#3', '#4']"", ""AGGREGATE['count', '#5']""]"
DROP_dev_nfl_1240_698a6b43-994c-4750-82d1-7bb9ecf9f8b9,How many total yards did Folk have?,"[""SELECT['Folk']"", ""PROJECT['yards of #REF', '#1']"", ""AGGREGATE['sum', '#2']""]","[""SELECT['Folk']"", ""PROJECT['yards of #REF', '#1']"", ""AGGREGATE['sum', '#2']""]."
DROP_dev_nfl_1240_7c6366d9-0ab2-49d0-b069-91a4da1115b5,Who scored the TD pases that were over 15 yards?,"[""SELECT['TD pases']"", ""PROJECT['yards of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is higher than 15']"", ""PROJECT['who scored #REF', '#3']""]","[""SELECT['TD pases']"", ""FILTER['#1', 'that were more than 15 yards']"", ""PROJECT['who scored #REF', '#2']""]"
DROP_dev_nfl_1240_9a8a1c4d-7ec9-4b59-8250-76b2b57c97c8,What was Nick Folk's longest field goal?,"[""SELECT['Nick Folk']"", ""PROJECT['field goals of #REF', '#1']"", ""AGGREGATE['max', '#2']""]","[""SELECT['Nick Folk']"", ""PROJECT['field goals of #REF', '#1']"", ""PROJECT['longness of #REF', '#2']"", ""SUPERLATIVE['max', '#2', '#3']""]"
DROP_dev_nfl_1240_b1201907-9e63-438c-8409-51898ba7aab7,How many field goals did Nedney kick in the first quarter?,"[""SELECT['Nedney']"", ""PROJECT['field goals of #REF', '#1']"", ""FILTER['#2', 'in the first quarter']"", ""AGGREGATE['count', '#3']""]","[""SELECT['Nedney']"", ""PROJECT['field goals #REF did kick', '#1']"", ""FILTER['#2', 'in the first quarter']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_nfl_1240_b579211c-85aa-480e-83ef-2228ea640839,"Which player scored more field goals, Nick Folk or Joe Nedney?","[""SELECT['Nick Folk']"", ""PROJECT['field goals of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""SELECT['Joe Nedney']"", ""PROJECT['field goals of #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""COMPARISON['max', '#3', '#6']""]","[""SELECT['Nick Folk']"", ""PROJECT['field goals that #REF scored', '#1']"", ""AGGREGATE['count', '#2']"", ""SELECT['Joe Nedney']"", ""PROJECT['field goals that #REF scored', '#4']"", ""AGGREGATE['count', '#5']"", ""COMPARISON['max', '#3', '#6']""]"
DROP_dev_nfl_1240_ba43d6da-7dae-4611-b4fb-eea9c10d2255,Which team was winning by the half?,"[""SELECT['teams']"", ""FILTER['#1', 'that was winning by the half']""]","[""SELECT['teams']"", ""FILTER['#1', 'that were winning by the half']""]"
DROP_dev_nfl_1240_c0f3de09-ecc1-4471-b8d0-5cbc86d14efe,Which player made the field goals that were over 30 yards?,"[""SELECT['field goals']"", ""PROJECT['yards of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is higher than 30']"", ""PROJECT['player that made #REF', '#3']""]","[""SELECT['field goals']"", ""PROJECT['yards of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is higher than 30']"", ""PROJECT['player of #REF', '#3']""]"
DROP_dev_nfl_1240_cef3f6a2-7a96-46de-a2bb-68c1c5fceeaf,How many more field goals did Nick Folk make compared to Joe Nedney?,"[""SELECT['Nick Folk']"", ""PROJECT['field goals of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""SELECT['Joe Nedney']"", ""PROJECT['field goals of #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""ARITHMETIC['difference', '#3', '#6']""]","[""SELECT['Nick Folk']"", ""SELECT['Joe Nedney']"", ""PROJECT['field goals of #REF', '#1']"", ""PROJECT['field goals of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]"
DROP_dev_nfl_1240_e3e09455-d467-42b0-8f0d-2a0ad733d145,How many yards did Tony Romo throw for on touchdown passes?,"[""SELECT['Tony Romo']"", ""PROJECT['touchdown passes of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['sum', '#3']""]","[""SELECT['Tony Romo']"", ""PROJECT['touchdown throws of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['sum', '#3']""]"
DROP_dev_nfl_1240_f9b600c2-1187-4a33-9fbd-93521c7fd006,How many TD passes were under 10 yards?,"[""SELECT['TD passes']"", ""PROJECT['yards of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is lower than 10']"", ""AGGREGATE['count', '#3']""]","[""SELECT['TD passes']"", ""FILTER['#1', 'that were less than 10 yards']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_nfl_1245_25bd45a8-4ae0-41b6-9ab3-6406659d31e9,how many yards did julius jones get in his touch down runs?,"[""SELECT['julius jones']"", ""PROJECT['touch down runs of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['sum', '#3']""]","[""SELECT['julius jones']"", ""PROJECT['touch down runs of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']""]"
DROP_dev_nfl_1245_2c46e0b8-e02c-4bde-8dc7-1f76aa99e117,Which team was able to score first?,"[""SELECT['scores']"", ""AGGREGATE['min', '#1']"", ""PROJECT['team of #REF', '#2']""]","[""SELECT['scores']"", ""AGGREGATE['min', '#1']"", ""PROJECT['team of #REF', '#2']""]3']"
DROP_dev_nfl_1245_36de8000-251d-4ee5-98bd-9483fe95853e,How many total yards did Olindo Mare have?,"[""SELECT['Olindo Mare']"", ""PROJECT['yards of #REF', '#1']"", ""AGGREGATE['sum', '#2']""]","[""SELECT['Olindo Mare']"", ""PROJECT['yards that #REF have', '#1']"", ""AGGREGATE['sum', '#2']""]"
DROP_dev_nfl_1245_6aec3d51-8638-4d07-b0fd-54d347fa6ffe,How many yards longer was the longest offensive touchdown run versus the shortest?,"[""SELECT['offensive touchdown runs']"", ""PROJECT['yards of #REF', '#1']"", ""AGGREGATE['max', '#2']"", ""AGGREGATE['min', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]","[""SELECT['offense touchdown runs']"", ""PROJECT['yards of #REF', '#1']"", ""AGGREGATE['max', '#2']"", ""AGGREGATE['min', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]"
DROP_dev_nfl_1245_98842c5f-aa44-4372-a501-948765e5a88d,Which players scored defensive points in the game?,"[""SELECT['defensive points scored in the game']"", ""PROJECT['players of #REF', '#1']""]","[""SELECT['the game']"", ""PROJECT['defensive points of #REF', '#1']"", ""PROJECT['players that scored #REF', '#2']""]"
DROP_dev_nfl_1245_9a252e14-2379-4a3b-a705-2d23d20144bb,How many touchdown runs measured 5-yards or less in total yards?,"[""SELECT['touchdown runs']"", ""PROJECT['yards of #REF', '#1']"", ""AGGREGATE['sum', '#2']"", ""COMPARATIVE['#1', '#3', 'is at most 5-yards']"", ""AGGREGATE['sum', '#4']""]","[""SELECT['touchdown runs']"", ""PROJECT['yards of #REF', '#1']"", ""AGGREGATE['sum', '#2']"", ""COMPARATIVE['#1', '#3', 'is at most 5-yards']"", ""AGGREGATE['count', '#4']""]"
DROP_dev_nfl_1245_b9c10490-949f-4d61-9720-b5fef389e04e,How many yards do the shortest touchdown run and the shortest touchdown pass combine for?,"[""SELECT['touchdown runs']"", ""SELECT['touchdown passes']"", ""PROJECT['yards of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['min', '#3']"", ""AGGREGATE['min', '#4']"", ""ARITHMETIC['sum', '#5', '#6']""]","[""SELECT['touchdown runs']"", ""PROJECT['yards of #REF', '#1']"", ""AGGREGATE['min', '#2']"", ""SELECT['touchdown passes']"", ""PROJECT['yards of #REF', '#4']"", ""AGGREGATE['min', '#5']"", ""ARITHMETIC['sum', '#3', '#6']""]"
DROP_dev_nfl_1245_ed8e8505-f012-4f5a-89fd-ffebfb642a3d,How many more field goals did Nedney make than Mare?,"[""SELECT['Nedney']"", ""SELECT['Mare']"", ""PROJECT['field goals of #REF', '#1']"", ""PROJECT['field goals of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['Nedney']"", ""SELECT['Mare']"", ""PROJECT['field goals of #REF', '#1']"", ""PROJECT['field goals of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]-"
DROP_dev_nfl_1245_fa53f992-545e-4a76-ae6c-f22c5aade680,"Who had the longest turnover ran back for a touchdown, Terrill or Willis?","[""SELECT['Terrill']"", ""SELECT['Willis']"", ""PROJECT['touchdown turnovers of #REF', '#1']"", ""PROJECT['touchdown turnovers of #REF', '#2']"", ""AGGREGATE['max', '#3']"", ""AGGREGATE['max', '#4']"", ""COMPARISON['max', '#5', '#6']""]","[""SELECT['Terrill']"", ""SELECT['Willis']"", ""PROJECT['touchdowns of #REF', '#1']"", ""PROJECT['touchdowns of #REF', '#2']"", ""AGGREGATE['max', '#3']"", ""AGGREGATE['max', '#4']"", ""COMPARISON['max', '#5', '#6']""]"
DROP_dev_nfl_1264_0d662acc-5021-4e0b-a340-e0b566582413,Who caught a 56-yard touchdown pass?,"[""SELECT['touchdown passes']"", ""PROJECT['yards of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is 56-yard']"", ""PROJECT['who caught #REF', '#3']""]","[""SELECT['touchdown passes']"", ""FILTER['#1', 'that are 56-yard']"", ""PROJECT['who caught #REF', '#2']""]"
DROP_dev_nfl_1264_3d7dc317-30ed-4483-8a4d-c5544dba72ea,Which team lost to the Patriots week 8?,"[""SELECT['the Patriots']"", ""PROJECT['team lost to #REF', '#1']"", ""FILTER['#2', 'in week 8']""]","[""SELECT['teams']"", ""FILTER['#1', 'that lost to the Patriots']"", ""FILTER['#2', 'in week 8']""]"
DROP_dev_nfl_1264_547588d2-938b-47ba-93a1-106aaa13bfc6,Which team got the first turnover?,"[""SELECT['turnovers']"", ""AGGREGATE['min', '#1']"", ""PROJECT['team of #REF', '#2']""]","[""SELECT['teams']"", ""PROJECT['turnovers of #REF', '#1']"", ""AGGREGATE['min', '#2']""]"
DROP_dev_nfl_1264_7fc49432-2cb3-4141-b295-2a013ab07a86,Who was the Cardinals quarterback?,"[""SELECT['the Cardinals']"", ""PROJECT['quarterback of #REF', '#1']""]","[""SELECT['cardinals']"", ""PROJECT['quarterback of #REF', '#1']""]"
DROP_dev_nfl_1264_9672334d-576a-4943-b93b-5a0f327e4055,How many touchdowns were there in the first quarter?,"[""SELECT['touchdowns']"", ""FILTER['#1', 'in the first quarter']"", ""AGGREGATE['count', '#2']""]","[""SELECT['touchdowns']"", ""FILTER['#1', 'that were in first quarter']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_nfl_1288_13468a63-068c-469d-8625-f73e4ba17f8e,How many yards was the shortest TD run?,"[""SELECT['TD runs']"", ""PROJECT['yards of #REF', '#1']"", ""AGGREGATE['min', '#2']""]","[""SELECT['TD runs']"", ""PROJECT['yards of #REF', '#1']"", ""AGGREGATE['min', '#2']""]."
DROP_dev_nfl_1288_1ac0b98b-abfc-48f4-8f70-c94c95731f41,Who got the shortest TD run?,"[""SELECT['TD runs']"", ""AGGREGATE['min', '#1']"", ""PROJECT['who got #REF', '#2']""]","[""SELECT['TD runs']"", ""PROJECT['the shortest #REF', '#1']"", ""PROJECT['who got #REF', '#2']""]"
DROP_dev_nfl_1288_9ca1ff53-efd0-4484-ab44-82024d2abd97,Who had the longest TD run?,"[""SELECT['TD runs']"", ""PROJECT['longness of #REF', '#1']"", ""SUPERLATIVE['max', '#1', '#2']"", ""PROJECT['who had #REF', '#3']""]","[""SELECT['TD runs']"", ""PROJECT['how long are #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is the highest']"", ""PROJECT['who had #REF', '#3']""]"
DROP_dev_nfl_1288_a9d4eec2-37c9-4329-96b5-28b21bc71515,How many field goals did Bironas get?,"[""SELECT['Bironas']"", ""PROJECT['field goals of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['Bironas']"", ""PROJECT['field goal of #REF', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_nfl_1288_bb673074-42c4-41bd-b683-195cd32c5bf5,How many different players scored a TD in the first half?,"[""SELECT['TD']"", ""FILTER['#1', 'in the first half']"", ""PROJECT['different players of #REF', '#2']"", ""AGGREGATE['count', '#3']""]","[""SELECT['TD']"", ""FILTER['#1', 'in the first half']"", ""PROJECT['different players that scored #REF', '#2']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_nfl_1304_8ada3105-263f-42f1-9d33-e22481fcbb7d,How many rushing touchdowns of under 5-yards were scored?,"[""SELECT['rushing touchdowns']"", ""FILTER['#1', 'that were under 5-yards']"", ""AGGREGATE['count', '#2']""]","[""SELECT['rushing touchdowns']"", ""FILTER['#1', 'under 5-yards']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_nfl_1304_8ed51534-7d6e-45e3-b9f1-01e7a43250f1,How many yards was Portis' longest touchdown run?,"[""SELECT['Portis']"", ""PROJECT['touchdown runs of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['max', '#3']""]","[""SELECT['Portis']"", ""PROJECT['touchdown runs of #REF', '#1']"", ""AGGREGATE['max', '#2']"", ""PROJECT['yards of #REF', '#3']""]"
DROP_dev_nfl_1304_914dd090-2cc5-47ad-8991-e3f26a2382aa,Which team scored more during the first half?,"[""SELECT['teams']"", ""PROJECT['scores of #REF', '#1']"", ""FILTER['#2', 'during the first half']"", ""GROUP['count', '#3', '#1']"", ""SUPERLATIVE['max', '#1', '#4']""]","[""SELECT['teams']"", ""PROJECT['scores of #REF', '#1']"", ""FILTER['#2', 'that are during the first half']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is the highest']""."
DROP_dev_nfl_1304_a34b7192-c01d-4e00-885a-164536d17bc9,How many touchdowns did Clinton Portis have?,"[""SELECT['Clinton Portis']"", ""PROJECT['touchdowns of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['Clinton Portis']"", ""PROJECT['touchdown of #REF', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_nfl_1307_96366f93-75c8-4735-9d60-55aa88bfd93b,Which team had more first quarter field goals?,"[""SELECT['teams']"", ""PROJECT['field goals of #REF', '#1']"", ""FILTER['#2', 'in the first quarter']"", ""GROUP['count', '#3', '#1']"", ""SUPERLATIVE['max', '#1', '#4']""]","[""SELECT['teams']"", ""PROJECT['field goals of #REF', '#1']"", ""FILTER['#2', 'in the first quarter']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is the highest']""]"
DROP_dev_nfl_1329_003aa246-5f52-4917-8646-ab140934a2ae,Which player scored the go-ahead touchdown?,"[""SELECT['touchdowns']"", ""FILTER['#1', 'that are go-ahead']"", ""PROJECT['player that scored #REF', '#2']""]","[""SELECT['touchdowns']"", ""FILTER['#1', 'that was go-ahead']"", ""PROJECT['player that scored #REF', '#2']""]"
DROP_dev_nfl_1329_71a2afb4-6407-4a49-9218-6d618799c9ad,Which player caught a pass for the first score of the game?,"[""SELECT['scores']"", ""AGGREGATE['min', '#1']"", ""PROJECT['player that caught #REF', '#2']""]","[""SELECT['the first score of the game']"", ""PROJECT['player that caught #REF', '#1']""]"
DROP_dev_nfl_1329_95b92928-ef27-4f75-9d28-0508e6e503b7,Which team beat the 49ers in week 5?,"[""SELECT['the 49ers']"", ""PROJECT['team that beat #REF', '#1']"", ""FILTER['#2', 'in week 5']""]","[""SELECT['the 49ers']"", ""PROJECT['team of #REF', '#1']"", ""FILTER['#2', 'in week 5']""]"
DROP_dev_nfl_1329_cdc92052-3bff-4499-b7f1-21908e369cd4,Which player threw the last Touchdown of the game?,"[""SELECT['touchdowns']"", ""AGGREGATE['max', '#1']"", ""PROJECT['player that threw #REF', '#2']""]","[""SELECT['Ttouchdowns']"", ""AGGREGATE['max', '#1']"", ""PROJECT['player that threw #REF', '#2']""]"
DROP_dev_nfl_1329_e2fad5d3-30c9-4114-be2e-96f7477e844e,Which team allowed the most points all four quarters?,"[""SELECT['teams']"", ""PROJECT['points allowed of #REF', '#1']"", ""GROUP['sum', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is the highest']""]","[""SELECT['quarters']"", ""PROJECT['points allowed of #REF', '#1']"", ""GROUP['sum', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']"", ""PROJECT['team that allowed #REF', '#4']""]"
DROP_dev_nfl_1332_03d4464c-8509-4a0f-ba98-a495be13a511,How many more rushing touchdowns were there relative to passing touchdowns?,"[""SELECT['rushing touchdowns']"", ""SELECT['passing touchdowns']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]","[""SELECT['rushing touchdowns']"", ""SELECT['passing touchdowns']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]"
DROP_dev_nfl_1332_274b711d-c0d5-45fd-917e-de82153b0724,"What were the distances, in yards, of Michael Turner's rushing touchdowns?","[""SELECT['Michael Turner']"", ""PROJECT['rushing touchdowns of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']""]","[""SELECT['Jimmy Turner']"", ""PROJECT['rushing touchdowns of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']""]"
DROP_dev_nfl_1332_583d1c4f-208d-4d7e-9e43-cdd540a76dd1,How many touchdown passes were made in the fourth quarter?,"[""SELECT['touchdown passes']"", ""FILTER['#1', 'that were made in the fourth quarter']"", ""AGGREGATE['count', '#2']""]","[""SELECT['touchdown passes']"", ""FILTER['#1','made in the fourth quarter']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_nfl_1332_8e90ef22-451b-4666-a0ed-6dd262be06ae,Which player threw the last touchdown run of the game?,"[""SELECT['touchdown runs']"", ""AGGREGATE['max', '#1']"", ""PROJECT['player that threw #REF', '#2']""]","[""SELECT['touchdown runs']"", ""AGGREGATE['max', '#1']"", ""PROJECT['player that threw #REF', '#2']?""]"
DROP_dev_nfl_1332_c2b75743-7128-49d4-9387-b62e73508476,How many total interceptions were in the game?,"[""SELECT['interceptions in the game']"", ""AGGREGATE['count', '#1']""]","[""SELECT['interceptions']"", ""AGGREGATE['count', '#1']""]"
DROP_dev_nfl_1332_c72d357b-6ba1-4a82-85b1-7ef7adf55270,Which player scored first for the Falcons in the second quarter?,"[""SELECT['the Falcons']"", ""PROJECT['scores of #REF', '#1']"", ""FILTER['#2', 'in the second quarter']"", ""AGGREGATE['min', '#3']"", ""PROJECT['player of #REF', '#4']""]","[""SELECT['the Falcons']"", ""PROJECT['scores of #REF', '#1']"", ""FILTER['#2', 'in the second quarter']"", ""AGGREGATE['min', '#3']"", ""PROJECT['who scored #REF', '#4']""]"
DROP_dev_nfl_1332_c87797b8-eefe-4572-b24e-8d8716460746,How many touchdowns were 30-yards or longer?,"[""SELECT['touchdowns']"", ""PROJECT['yards of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is at least 30-yards']"", ""AGGREGATE['count', '#3']""]","[""SELECT['touchdowns']"", ""FILTER['#1', 'that were at least 30-yards']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_nfl_1332_e6ecba1b-691f-4f53-a231-d1a4cc96c669,What was the winning move,"[""SELECT['moves']"", ""FILTER['#1', 'that was winning']""]","[""SELECT['the winning move']""]"
DROP_dev_nfl_1333_68179cd0-a98d-4c58-be4a-84828963e831,How many field goals did Elam score in the first quarter?,"[""SELECT['Elam']"", ""PROJECT['field goals of #REF', '#1']"", ""FILTER['#2', 'in the first quarter']"", ""AGGREGATE['count', '#3']""]","[""SELECT['Elam']"", ""PROJECT['field goals of #REF', '#1']"", ""FILTER['#2', 'in the first quarter']"", ""AGGREGATE['count', '#3']""]."
DROP_dev_nfl_1333_d423553a-44cb-4577-b7f5-ee418c924816,How many 4-yard passing touchdowns were in the game?,"[""SELECT['passing touchdowns in the game']"", ""FILTER['#1', 'that were 4-yard']"", ""AGGREGATE['count', '#2']""]","[""SELECT['passing touchdowns']"", ""PROJECT['yards of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is 4-yard']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_nfl_1333_e1c0558d-fe69-4a29-abeb-6f723ea243e9,Which team beat the Redskins in week 9?,"[""SELECT['the Redskins']"", ""PROJECT['team that beat #REF', '#1']"", ""FILTER['#2', 'in week 9']""]","[""SELECT['teams']"", ""FILTER['#1', 'that beat the Redskins']"", ""FILTER['#2', 'in week 9']""]"
DROP_dev_nfl_1344_232fc92c-db56-45a8-89db-313663eb06fc,how many yards did Brady pass to Moss?,"[""SELECT['Brady']"", ""PROJECT['passes of #REF', '#1']"", ""FILTER['#2', 'to Moss']"", ""PROJECT['yards of #REF', '#3']"", ""AGGREGATE['sum', '#4']""]","[""SELECT['Brady']"", ""PROJECT['passes of #REF', '#1']"", ""FILTER['#2', 'to Moss']"", ""PROJECT['yards of #REF', '#3']"", ""AGGREGATE['max', '#4']""]"
DROP_dev_nfl_1344_5024c197-1e1a-49b3-add2-8fbfef2008b4,Who scored the first points of the game for the Ravens?,"[""SELECT['the Ravens']"", ""PROJECT['points of #REF', '#1']"", ""AGGREGATE['min', '#2']"", ""PROJECT['who scored #REF', '#3']""]","[""SELECT['the Ravens']"", ""PROJECT['points of #REF', '#1']"", ""AGGREGATE['min', '#2']"", ""PROJECT['who scored #REF', '#3']?""]"
DROP_dev_nfl_1344_c206b2a8-b367-421e-98ed-58c3a71dcb71,Which player scored first in the game?,"[""SELECT['the game']"", ""PROJECT['scores of #REF', '#1']"", ""AGGREGATE['min', '#2']"", ""PROJECT['player of #REF', '#3']""]","[""SELECT['the game']"", ""PROJECT['scores in #REF', '#1']"", ""AGGREGATE['min', '#2']"", ""PROJECT['player of #REF', '#3']""]"
DROP_dev_nfl_1344_d6e899b2-581f-484f-8479-23e185a6afac,how many yards did mason get on the td pass?,"[""SELECT['mason']"", ""PROJECT['td pass of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']""]","[""SELECT['mason']"", ""PROJECT['td passes of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['sum', '#3']""]"
DROP_dev_nfl_1361_1ef96d5d-67b9-457d-9b63-cfde65683953,Which team scored more field goals in the first quarter?,"[""SELECT['teams']"", ""PROJECT['field goals of #REF', '#1']"", ""FILTER['#2', 'in the first quarter']"", ""GROUP['count', '#3', '#1']"", ""SUPERLATIVE['max', '#1', '#4']""]","[""SELECT['teams']"", ""PROJECT['field goals of #REF', '#1']"", ""FILTER['#2', 'in the first quarter']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is the highest']""]"
DROP_dev_nfl_1361_575d2d43-acaf-404f-86da-ff50e0d9d968,How many touchdowns of 3-yards were scored?,"[""SELECT['touchdowns']"", ""FILTER['#1', 'of 3-yards']"", ""AGGREGATE['count', '#2']""]","[""SELECT['touchdowns']"", ""FILTER['#1', 'that were scored of 3-yards']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_nfl_1361_6bad3e08-6965-4888-adbf-50ae588550ee,Which kicker had more field goals in the first quarter?,"[""SELECT['kickers']"", ""PROJECT['field goals of #REF', '#1']"", ""FILTER['#2', 'in the first quarter']"", ""GROUP['count', '#3', '#1']"", ""SUPERLATIVE['max', '#1', '#4']""]","[""SELECT['kickers']"", ""PROJECT['field goals of #REF', '#1']"", ""FILTER['#2', 'that are in first quarter']"", ""GROUP['count', '#3', '#1']"", ""SUPERLATIVE['max', '#1', '#4']""]"
DROP_dev_nfl_1361_6fd345ba-c814-4fd3-9551-6bbc807a5c27,How many field goals were scored by both teams in the 1st quarter?,"[""SELECT['teams']"", ""PROJECT['field goals of #REF', '#1']"", ""FILTER['#2', 'in the 1st quarter']"", ""AGGREGATE['count', '#3']""]","[""SELECT['the 1st quarter']"", ""PROJECT['field goals of #REF', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_nfl_1361_754b16ee-0dec-481d-ae1f-09d0a4d43c2a,What was the last scoring play of the first half?,"[""SELECT['scoring plays']"", ""FILTER['#1', 'of the first half']"", ""AGGREGATE['max', '#2']""]","[""SELECT['plays']"", ""FILTER['#1', 'of the first half']"", ""AGGREGATE['max', '#2']""]"
DROP_dev_nfl_1361_959c0f71-abe9-47f1-bc8f-2ec87c7d788a,How many more total field goal yards did Rian Lindell get than Josh Scobee?,"[""SELECT['Rian Lindell']"", ""PROJECT['field goals of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['sum', '#3']"", ""SELECT['Josh Scobee']"", ""PROJECT['field goals of #REF', '#5']"", ""PROJECT['yards of #REF', '#6']"", ""AGGREGATE['sum', '#7']"", ""ARITHMETIC['difference', '#4', '#8']""]","[""SELECT['Rian Lindell']"", ""PROJECT['field goal yards of #REF', '#1']"", ""AGGREGATE['sum', '#2']"", ""SELECT['Josh Scobee']"", ""PROJECT['field goal yards of #REF', '#4']"", ""AGGREGATE['sum', '#5']"", ""ARITHMETIC['difference', '#3', '#6']""]"
DROP_dev_nfl_1361_ae95c9ca-4af0-4e48-bd5e-138556192e1d,How many more field goals did Rian Lindell get than Josh Scobee?,"[""SELECT['Rian Lindell']"", ""SELECT['Josh Scobee']"", ""PROJECT['field goals of #REF', '#1']"", ""PROJECT['field goals of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['Rian Lindell']"", ""SELECT['Josh Scobee']"", ""PROJECT['field goals of #REF', '#1']"", ""PROJECT['field goals of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#6', '#5']""]"
DROP_dev_nfl_1361_ea2f7e17-7f38-4f23-9698-1ad14496ce71,How many more losses than wins did the Bills have after this game?,"[""SELECT['the Bills']"", ""PROJECT['losses of #REF', '#1']"", ""PROJECT['wins of #REF', '#1']"", ""FILTER['#2', 'after this game']"", ""FILTER['#3', 'after this game']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""ARITHMETIC['difference', '#6', '#7']""]","[""SELECT['the Bills']"", ""PROJECT['losses of #REF', '#1']"", ""PROJECT['wins of #REF', '#1']"", ""FILTER['#3', 'after this game']"", ""FILTER['#4', 'after this game']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#5']"", ""ARITHMETIC['difference', '#6', '#7']""]"
DROP_dev_nfl_1378_2ae484c2-65d4-4dce-8a19-46c7554d1f14,How many more field goals did Gould kick compared to Hanson?,"[""SELECT['Gould']"", ""SELECT['Hanson']"", ""PROJECT['field goals of #REF', '#1']"", ""PROJECT['field goals of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['Gould']"", ""SELECT['Hanson']"", ""PROJECT['field goals of #REF', '#1']"", ""PROJECT['field goals of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]"
DROP_dev_nfl_1378_74ab5291-6b8b-479c-896b-f99f0e8023fe,How many yards was the shortest rushing touchdown?,"[""SELECT['rushing touchdowns']"", ""PROJECT['yards of #REF', '#1']"", ""AGGREGATE['min', '#2']""]","[""SELECT['rushing touchdowns']"", ""PROJECT['yards of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is the lowest']""]"
DROP_dev_nfl_1390_0d3c5b70-49a5-44ea-b79a-8bd85d20cfa0,How many touchdown passes did Carson Palmer  throw in the first quarter?,"[""SELECT['Carson Palmer']"", ""PROJECT['touchdown passes of #REF', '#1']"", ""FILTER['#2', 'in the first quarter']"", ""AGGREGATE['count', '#3']""]","[""SELECT['Carson Palmer']"", ""PROJECT['touchdown passes of #REF', '#1']"", ""FILTER['#2', 'that are in the first quarter']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_nfl_1390_143a118b-f487-451d-8a10-9a58b9b6b862,HOW MANY WEEK BENGALS STAYED AT HOME,"[""SELECT['WEEK BENGALS']"", ""FILTER['#1', 'that STAYED AT HOME']"", ""AGGREGATE['count', '#2']""]","[""SELECT['WEEK BENGALS']"", ""FILTER['#1', 'STAYED AT HOME']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_nfl_1390_58e44ab0-915f-4859-a0f7-63aa417da8cb,Did Palmer have more touchdown yards in the first quarter or the second quarter?,"[""SELECT['Palmer']"", ""PROJECT['touchdowns of #REF', '#1']"", ""FILTER['#2', 'in the first quarter']"", ""FILTER['#2', 'in the second quarter']"", ""PROJECT['yards of #REF', '#3']"", ""PROJECT['yards of #REF', '#4']"", ""AGGREGATE['sum', '#5']"", ""AGGREGATE['sum', '#6']"", ""COMPARISON['max', '#7', '#8']""]","[""SELECT['Palmer']"", ""PROJECT['touchdown of #REF', '#1']"", ""FILTER['#2', 'in the first quarter']"", ""FILTER['#2', 'in the second quarter']"", ""PROJECT['yards of #REF', '#3']"", ""PROJECT['yards of #REF', '#4']"", ""AGGREGATE['sum', '#5']"", ""AGGREGATE['sum', '#6']"", ""COMPARISON['max', '#7', '#8']""]"
DROP_dev_nfl_1390_e663937d-11d7-40dd-8dc7-7bf325aa493f,How many yards longer was Ochocinco's second half touchdown compared to his first half touchdown?,"[""SELECT['Ochocinco']"", ""PROJECT['touchdowns of #REF', '#1']"", ""FILTER['#2', 'in the second half']"", ""FILTER['#2', 'in the first half']"", ""PROJECT['yards of #REF', '#3']"", ""PROJECT['yards of #REF', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['Ochocinco']"", ""PROJECT['touchdowns of #REF', '#1']"", ""FILTER['#2', 'in the second half']"", ""FILTER['#2', 'in the first half']"", ""PROJECT['yards of #REF', '#3']"", ""PROJECT['yards of #REF', '#4']"", ""ARITHMETIC['difference', '#6', '#5']""]"
DROP_dev_nfl_1390_f1613fa6-cb64-4944-a9a4-de083b260362,HOW MANY YARD THE BEARS WOULD CLOSE OUT THE HALF,"[""SELECT['the BEARS']"", ""PROJECT['YARD that #REF CLOSE OUT THE HALF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['the BEARS']"", ""PROJECT['YARDS that #REF CLOSE OUT THE HALF', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_nfl_1390_f5206a46-fa68-4918-b981-721c2fb3b834,How many touchdown yards did Palmer have in the first quarter?,"[""SELECT['Palmer']"", ""PROJECT['touchdowns of #REF', '#1']"", ""FILTER['#2', 'in the first quarter']"", ""PROJECT['yards of #REF', '#3']"", ""AGGREGATE['sum', '#4']""]","[""SELECT['Palmer']"", ""PROJECT['touchdown of #REF', '#1']"", ""FILTER['#2', 'in the first quarter']"", ""PROJECT['yards of #REF', '#3']""]"
DROP_dev_nfl_1412_b8765a65-0f8d-4ce3-ac9e-5a86f078301f,How many points did the Steelers score in the first half?,"[""SELECT['the Steelers']"", ""PROJECT['points scored of #REF', '#1']"", ""FILTER['#2', 'in the first half']"", ""AGGREGATE['count', '#3']""]","[""SELECT['Steelers']"", ""PROJECT['points of #REF', '#1']"", ""FILTER['#2', 'in the first half']"", ""AGGREGATE['sum', '#3']""]"
DROP_dev_nfl_1454_27dba182-0137-4566-98c6-52451d2bc4a0,How many incomplete passes did Daunte Culpepper have?,"[""SELECT['Daunte Culpepper']"", ""PROJECT['incomplete passes of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['Daunton Culpepper']"", ""PROJECT['incomplete passes of #REF', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_nfl_1454_34c22d2f-1581-491d-9c82-120f3859f49a,How many yards was Willis McGahee's first touchdown run?,"[""SELECT['Willis McGahee']"", ""PROJECT['touchdown runs of #REF', '#1']"", ""AGGREGATE['min', '#2']"", ""PROJECT['yards of #REF', '#3']""]","[""SELECT['Wis McGahee']"", ""PROJECT['touchdown runs of #REF', '#1']"", ""AGGREGATE['min', '#2']"", ""PROJECT['yards of #REF', '#3']""]"
DROP_dev_nfl_1454_4a964c39-47ad-4bba-8942-c98cb289afb3,"Which team scored last in the second quarter, the Ravens or Lions?","[""SELECT['the Ravens']"", ""SELECT['the Lions']"", ""PROJECT['scores in the second quarter of #REF', '#1']"", ""PROJECT['scores in the second quarter of #REF', '#2']"", ""AGGREGATE['max', '#3']"", ""AGGREGATE['max', '#4']"", ""COMPARISON['max', '#5', '#6']""]","[""SELECT['the Ravens scored in the second quarter']"", ""SELECT['the Lions scored in the second quarter']"", ""PROJECT['when was #REF', '#1']"", ""PROJECT['when was #REF', '#2']"", ""COMPARISON['max', '#3', '#4']""]"
DROP_dev_nfl_1454_5d0590e6-f1ad-4e48-9fce-a0aa6a1bcfed,During the game how many players scored touchdowns?,"[""SELECT['players']"", ""PROJECT['touchdowns of #REF', '#1']"", ""FILTER['#2', 'During the game']"", ""GROUP['count', '#3', '#1']"", ""UNION['#1', '#4']""]","[""SELECT['touchdowns']"", ""FILTER['#1', 'During the game']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_nfl_1454_e37fc969-eb1e-44bb-8a67-0cc2b92f58e2,How many yards was Willis McGahee's longest touchdown run?,"[""SELECT['Willis McGahee']"", ""PROJECT['touchdown runs of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['max', '#3']""]","[""SELECT['willis McGahee']"", ""PROJECT['touchdown runs of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['max', '#3']""]"
DROP_dev_nfl_1454_e72e0a5a-047c-4482-b5ae-b2f623b44d96,How many touchdowns did the Ravens score in the third quarter?,"[""SELECT['the Ravens']"", ""PROJECT['touchdowns of #REF', '#1']"", ""FILTER['#2', 'in the third quarter']"", ""AGGREGATE['count', '#3']""]","[""SELECT['Ravens']"", ""PROJECT['touchdowns of #REF', '#1']"", ""FILTER['#2', 'in the third quarter']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_nfl_1471_003b0822-3079-4352-92cd-d7c8582472d5,How many yards longer was Kris Brown's second field goal compared to his first?,"[""SELECT['Kris Brown']"", ""PROJECT['field goals of #REF', '#1']"", ""PROJECT['second of #REF', '#2']"", ""AGGREGATE['min', '#2']"", ""PROJECT['yards of #REF', '#3']"", ""PROJECT['yards of #REF', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['Kris Brown']"", ""PROJECT['field goals of #REF', '#1']"", ""PROJECT['second of #REF', '#2']"", ""AGGREGATE['min', '#2']"", ""PROJECT['yards of #REF', '#3']"", ""PROJECT['yards of #REF', '#4']"", ""ARITHMETIC['difference', '#6', '#5']""]"
DROP_dev_nfl_1471_550b8df8-2fa6-4254-a655-78c629dadfc4,Which player had two touchdowns in the first half?,"[""SELECT['players']"", ""PROJECT['touchdowns of #REF', '#1']"", ""FILTER['#2', 'in the first half']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is two']""]","[""SELECT['touchdowns']"", ""FILTER['#1', 'in the first half']"", ""PROJECT['player of #REF', '#2']"", ""GROUP['count', '#2', '#3']"", ""COMPARATIVE['#3', '#4', 'is two']""]"
DROP_dev_nfl_1471_638f8deb-1304-4de3-94aa-64f395d58441,How many field goals were kicked in the first quarter?,"[""SELECT['field goals']"", ""FILTER['#1', 'that were kicked in the first quarter']"", ""AGGREGATE['count', '#2']""]","[""SELECT['field goals']"", ""FILTER['#1', 'that are kicked in the first quarter']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_nfl_1471_7837648a-f34f-4062-bd99-d827e9240fbc,How many yards longer was the second field goal than the first?,"[""SELECT['field goals']"", ""PROJECT['second of #REF', '#1']"", ""AGGREGATE['min', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""PROJECT['yards of #REF', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]","[""SELECT['field goals']"", ""PROJECT['the second of #REF', '#1']"", ""AGGREGATE['min', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""PROJECT['yards of #REF', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]"
DROP_dev_nfl_1471_7d97814e-34aa-45a1-8aac-cc5844c789e3,Which player scored the first field goal of the game?,"[""SELECT['field goals']"", ""AGGREGATE['min', '#1']"", ""PROJECT['player that scored #REF', '#2']""]","[""SELECT['field goals']"", ""AGGREGATE['min', '#1']"", ""PROJECT['player who scored #REF', '#2']""]"
DROP_dev_nfl_1471_90a420bb-8381-42d1-8964-8ba40b0bd123,Were there fewer touchdowns in the first half or the second half?,"[""SELECT['touchdowns']"", ""FILTER['#1', 'in the first half']"", ""FILTER['#1', 'in the second half']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['min', '#4', '#5']""]","[""SELECT['touchdowns']"", ""FILTER['#1', 'of the first half']"", ""FILTER['#1', 'of the second half']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""COMPARISON['min', '#4', '#5']""]"
DROP_dev_nfl_1471_b448d01b-65d7-497c-bcfa-89e9ab450d42,Which players scored field goals longer than 18 yards?,"[""SELECT['players']"", ""PROJECT['field goals of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""COMPARATIVE['#1', '#3', 'is higher than 18']""]","[""SELECT['players']"", ""PROJECT['field goals of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""COMPARATIVE['#1', '#3', 'is longer than 18']""]"
DROP_dev_nfl_1471_bf148e64-9319-44a9-a3b7-a84ed898cfad,How many plays did the Texans score on in the third quarter?,"[""SELECT['the Texans']"", ""PROJECT['plays of #REF', '#1']"", ""FILTER['#2', 'in the third quarter']"", ""AGGREGATE['count', '#3']""]","[""SELECT['the Texans']"", ""PROJECT['plays of #REF', '#1']"", ""FILTER['#2', 'that are in the third quarter']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_nfl_1471_fadb0169-392d-4f10-939d-83e5890bc3f4,How many more yards was Janikowski's longest field goal over Brown's longest one?,"[""SELECT['Janikowski']"", ""PROJECT['field goals of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['max', '#3']"", ""SELECT['Brown']"", ""PROJECT['field goals of #REF', '#5']"", ""PROJECT['yards of #REF', '#6']"", ""AGGREGATE['max', '#7']"", ""ARITHMETIC['difference', '#4', '#8']""]","[""SELECT['Janikowski']"", ""PROJECT['field goals of #REF', '#1']"", ""AGGREGATE['max', '#2']"", ""PROJECT['yards of #REF', '#3']"", ""SELECT['Brown']"", ""PROJECT['field goals of #REF', '#5']"", ""PROJECT['yards of #REF', '#6']"", ""AGGREGATE['max', '#7']"", ""ARITHMETIC['difference', '#4', '#8']""]"
DROP_dev_nfl_1476_0f47ae00-f859-4b05-94c8-6f58f78e2190,How many touchdowns were score in the game?,"[""SELECT['touchdowns in the game']"", ""AGGREGATE['count', '#1']""]","[""SELECT['touchdowns']"", ""FILTER['#1', 'that were scored in the game']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_nfl_1476_a2dd3a99-5eca-49a3-8497-f9dd9b477f68,How many more yards of fieldgoals did Stover score compared to Brown?,"[""SELECT['Stover']"", ""SELECT['Brown']"", ""PROJECT['fieldgoals of #REF', '#1']"", ""PROJECT['fieldgoals of #REF', '#2']"", ""PROJECT['yards of #REF', '#3']"", ""PROJECT['yards of #REF', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['Stover']"", ""SELECT['Brown']"", ""PROJECT['fieldgoals of #REF', '#1']"", ""PROJECT['fieldgoals of #REF', '#2']"", ""PROJECT['yards of #REF', '#3']"", ""PROJECT['yards of #REF', '#4']"", ""ARITHMETIC['difference', '#6', '#5']""]"
DROP_dev_nfl_1476_b33e7b4d-8c48-4e52-ae23-bf2103387d64,How many field goals did Matt Stover kick?,"[""SELECT['Matt Stover']"", ""PROJECT['field goals of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['Matt Stover']"", ""PROJECT['field goals that #REF kicks', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_nfl_1476_cc6547d2-34c4-4fbd-8f13-186547338ddb,Which player ran the ball in for a two yard touchdown?,"[""SELECT['touchdown runs']"", ""PROJECT['yards of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is two yards']"", ""PROJECT['player of #REF', '#3']""]","[""SELECT['touchdowns']"", ""FILTER['#1', 'that are two yard']"", ""PROJECT['player that ran the ball in for #REF', '#2']""]"
DROP_dev_nfl_1476_d01bc78c-03de-41f0-a347-d63290ba35da,How many yards of field goals were kicked and scored?,"[""SELECT['field goals']"", ""PROJECT['yards of #REF', '#1']"", ""AGGREGATE['sum', '#2']""]","[""SELECT['field goals']"", ""AGGREGATE['sum', '#1']""]"
DROP_dev_nfl_1476_d59c842a-86f6-49f9-aa43-f9ae40698fe8,Which team won the game between the Bills and the Texans?,"[""SELECT['the Bills']"", ""SELECT['the Texans']"", ""PROJECT['game win of #REF', '#1']"", ""PROJECT['game win of #REF', '#2']"", ""COMPARISON['true', '#3', '#4']""]","[""SELECT['the Bills']"", ""SELECT['the Texans']"", ""PROJECT['game win of #REF', '#1']"", ""PROJECT['game win of #REF', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]"
DROP_dev_nfl_1476_f5e1e09b-04ac-47c7-8746-6e34a8f518e7,How many field goals did Matt Stover kick in the first half?,"[""SELECT['Matt Stover']"", ""PROJECT['field goals of #REF', '#1']"", ""FILTER['#2', 'in the first half']"", ""AGGREGATE['count', '#3']""]","[""SELECT['Matt Stover']"", ""PROJECT['field goals of #REF', '#1']"", ""FILTER['#2', 'that were in first half']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_nfl_1478_0a502ede-d962-4fd5-a54a-3b874e479942,Which team scored in the second quarter?,"[""SELECT['the second quarter']"", ""PROJECT['scores of #REF', '#1']"", ""PROJECT['team of #REF', '#2']""]","[""SELECT['teams']"", ""FILTER['#1', 'that scored in the second quarter']""]"
DROP_dev_nfl_1478_1a0d7a7a-bbe1-476e-9679-3f94af700f9c,What years did Olf Trafford host the Kangaroo Tours of Great Britain and France?,"[""SELECT['Olf Trafford host the Kangaroo Tours of Great Britain and France']"", ""PROJECT['years of #REF', '#1']""]","[""SELECT['Olf Trafford did host the Kangaroo Tours of Great Britain and France']"", ""PROJECT['years of #REF', '#1']""."
DROP_dev_nfl_1478_a38ce93f-dd3e-46c1-9ab3-4cc9793f4fd5,How many points did the Australian national rugby team beat Great Britain's team in 1986?,"[""SELECT['Australian national rugby team']"", ""SELECT['Great Britain s national rugby team']"", ""PROJECT['points of #REF', '#1']"", ""PROJECT['points of #REF', '#2']"", ""FILTER['#3', 'in 1986']"", ""FILTER['#4', 'in 1986']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['Australian national rugby team']"", ""SELECT['Great Britain s national rugby team']"", ""PROJECT['points of #REF', '#1']"", ""PROJECT['points of #REF', '#2']"", ""FILTER['#3', 'in 1986']"", ""ARITHMETIC['difference', '#5', '#4']""]"
DROP_dev_nfl_1478_c8394254-70fd-4366-85e3-502c66458edd,How many more spectators were at Old Trafford in 1986 for the first test of the Kangaroo tour of Great Britain and France than the 1989 World Cup Challenege?,"[""SELECT['the 1986 first test of the Kangaroo tour of Great Britain and France']"", ""SELECT['the 1989 World Cup Challenege']"", ""PROJECT['attendees of #REF', '#1']"", ""PROJECT['attendees of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['the 1986 first test of the Kangaroo tour of Great Britain and France']"", ""SELECT['the 1989 World Cup Challenege']"", ""PROJECT['attendees of #REF', '#1']"", ""PROJECT['attendees of #REF', '#2']"", ""FILTER['#4', 'at Old Trafford']"", ""FILTER['#5', 'at Old Trafford']"", ""FILTER['#6', 'at Old Trafford']"", ""ARITHMETIC['difference', '#7', '#8']""]"
DROP_dev_nfl_1486_cd1e0092-028a-45a3-88b8-a68c40bb2cc7,"Who kicked the longer field goal, Succop or Janikowski?","[""SELECT['Succop']"", ""SELECT['Janikowski']"", ""PROJECT['field goal of #REF', '#1']"", ""PROJECT['field goal of #REF', '#2']"", ""PROJECT['how long was #REF', '#3']"", ""PROJECT['how long was #REF', '#4']"", ""COMPARISON['max', '#5', '#6']""]","[""SELECT['Succop']"", ""SELECT['Janikowski']"", ""PROJECT['field goals of #REF', '#1']"", ""PROJECT['field goals of #REF', '#2']"", ""PROJECT['longness of #REF', '#3']"", ""PROJECT['longness of #REF', '#4']"", ""COMPARISON['max', '#5', '#6']""]"
DROP_dev_nfl_1486_f8cc6e88-203d-4502-947f-d9019892434c,How many yards was the longest field goal kicked?,"[""SELECT['field goals']"", ""PROJECT['yards of #REF', '#1']"", ""AGGREGATE['max', '#2']""]","[""SELECT['field goals']"", ""AGGREGATE['max', '#1']"", ""PROJECT['yards of #REF', '#2']""]"
DROP_dev_nfl_1492_3e9ea709-c113-4170-8118-b565bf235f38,How many scoring plays were there in the third quarter?,"[""SELECT['the third quarter']"", ""PROJECT['scoring plays of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['the third quarter']"", ""PROJECT['scoring plays in #REF', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_nfl_1492_a0688b38-6ecf-49ae-bf9c-1b0779812943,Which team was in the lead by the fourth quarter?,"[""SELECT['teams']"", ""FILTER['#1', 'that was in the lead by the fourth quarter']""]","[""SELECT['teams']"", ""PROJECT['the lead of #REF', '#1']"", ""FILTER['#2', 'by the fourth quarter']""]"
DROP_dev_nfl_1492_a2a8e5c5-d55b-4aa3-ae74-a8ffb1c395ff,How many scores were there in the third quarter?,"[""SELECT['the third quarter']"", ""PROJECT['scores of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['scores']"", ""FILTER['#1', 'that were in third quarter']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_nfl_1492_b030e1bf-2c42-4421-84c9-f16c5121a6ea,Who scored the first TD?,"[""SELECT['TD']"", ""AGGREGATE['min', '#1']"", ""PROJECT['who scored #REF', '#2']""]","[""SELECT['TDs']"", ""AGGREGATE['min', '#1']"", ""PROJECT['who scored #REF', '#2']""]"
DROP_dev_nfl_1498_b43c4623-57e1-481b-a9af-1d574bf75460,Who had an 80-yard touchdown reception?,"[""SELECT['touchdown receptions']"", ""PROJECT['yards of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is 80-yard']"", ""PROJECT['who had #REF', '#3']""]","[""SELECT['touchdown receptions']"", ""FILTER['#1', 'that were 80-yard']"", ""PROJECT['who had #REF', '#2']""]"
DROP_dev_nfl_1503_08e97977-0c88-46f4-a4e1-541833a52fd1,what team was second to score in the game?,"[""SELECT['teams']"", ""PROJECT['scores of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is the highest']""]","[""SELECT['teams']"", ""PROJECT['scores of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']""]"
DROP_dev_nfl_1503_2de31cfa-c0dc-42a6-bdc5-8d13d88bef54,Which quarterback threw a touchdown pass in the first half?,"[""SELECT['touchdown passes']"", ""FILTER['#1', 'in the first half']"", ""PROJECT['quarterback of #REF', '#2']""]","[""SELECT['touchdown passes']"", ""FILTER['#1', 'that are in first half']"", ""PROJECT['quarterback of #REF', '#2']""]"
DROP_dev_nfl_1515_39b31fb4-4690-42e4-bfbb-0c4d89f824ae,How many scoreless quarters did Carolina have?,"[""SELECT['Carolina']"", ""PROJECT['quarters of #REF', '#1']"", ""FILTER['#2', 'that are scoreless']"", ""AGGREGATE['count', '#3']""]","[""SELECT['Carolina']"", ""PROJECT['quarters of #REF', '#1']"", ""FILTER['#2', 'that were scoreless']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_nfl_1515_664534cc-3f71-4e82-98eb-4cfbf44eed7c,How many touchdown passes did the Vikings have?,"[""SELECT['the Vikings']"", ""PROJECT['touchdown passes of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['The Vikings']"", ""PROJECT['touchdown passes of #REF', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_nfl_1515_b6bc4ad8-1d5b-4b0d-b5d8-ef41347b9b7a,How many scoring yards did Jonathan Stewart have?,"[""SELECT['Jonathan Stewart']"", ""PROJECT['scoring yards of #REF', '#1']"", ""AGGREGATE['sum', '#2']""]","[""SELECT['Jonathan Stewart']"", ""PROJECT['scoreting yards of #REF', '#1']"", ""AGGREGATE['sum', '#2']""]"
DROP_dev_nfl_1515_c32061d4-83fe-4ef9-af9b-69ed138bc5c5,How many touchdowns did Jonathan Stewart achieve?,"[""SELECT['Jonathan Stewart']"", ""PROJECT['touchdowns of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['Johnny Stewart']"", ""PROJECT['touchdowns of #REF', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_nfl_1516_12d7ab9f-8547-4fe1-94f6-610d9a468769,How many  yards longer was Robbie Gould's longest field goal than Ryan Longwell's longest field goal?,"[""SELECT['Robbie Gould']"", ""SELECT['Ryan Longwell']"", ""PROJECT['field goals of #REF', '#1']"", ""PROJECT['field goals of #REF', '#2']"", ""PROJECT['yards of #REF', '#3']"", ""PROJECT['yards of #REF', '#4']"", ""AGGREGATE['max', '#5']"", ""AGGREGATE['max', '#6']"", ""ARITHMETIC['difference', '#7', '#8']""]","[""SELECT['Robbie Gould']"", ""SELECT['Ryan Longwell']"", ""PROJECT['field goal of #REF', '#1']"", ""PROJECT['field goals of #REF', '#2']"", ""PROJECT['yards of #REF', '#3']"", ""PROJECT['yards of #REF', '#4']"", ""AGGREGATE['max', '#5']"", ""AGGREGATE['max', '#6']"", ""ARITHMETIC['difference', '#7', '#8']""]"
DROP_dev_nfl_1516_1e7b6670-2685-40c3-b146-1541e06a8144,How many total yards of touchdown passes did Favre make?,"[""SELECT['Favre']"", ""PROJECT['touchdown passes of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['sum', '#3']""]","[""SELECT['Favre']"", ""PROJECT['touchdown passes of #REF', '#1']"", ""AGGREGATE['sum', '#2']""]"
DROP_dev_nfl_1516_30e30004-e6d0-4fa4-919d-6e5d3633221c,How many yards longer was Jay Cutler's longest touchdown pass than his shortest?,"[""SELECT['Jay Cutler']"", ""PROJECT['touchdown passes of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['max', '#3']"", ""AGGREGATE['min', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]","[""SELECT['Jay Cutler']"", ""PROJECT['touchdown pass of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['max', '#3']"", ""AGGREGATE['min', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]"
DROP_dev_nfl_1516_3af25fa0-812b-4ff1-a1b2-74fc33606643,How many total touchdown passing yards did Jay Cutler make?,"[""SELECT['Jay Cutler']"", ""PROJECT['touchdown passes of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['sum', '#3']""]","[""SELECT['Jay Cutler']"", ""PROJECT['touchdown passing yards of #REF', '#1']"", ""AGGREGATE['sum', '#2']""]"
DROP_dev_nfl_1516_73c6a71f-da5e-429c-88e6-bb22f67d509a,How many more TD passes did Cutler throw than Favre?,"[""SELECT['Cutler']"", ""SELECT['Favre']"", ""PROJECT['TD passes of #REF', '#1']"", ""PROJECT['TD passes of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['Cutler']"", ""PROJECT['TD passes of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""SELECT['Favre']"", ""PROJECT['TD passes of #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""ARITHMETIC['difference', '#3', '#6']""]"
DROP_dev_nfl_1516_772dceb5-8863-4120-b526-aa1b37f22ad3,how many yards did cutler increase with?,"[""SELECT['cutler']"", ""PROJECT['yards of #REF', '#1']"", ""AGGREGATE['sum', '#2']""]","[""SELECT['cutler']"", ""PROJECT['yards increase with of #REF', '#1']""]"
DROP_dev_nfl_1516_78217f0c-768b-4b40-a692-35fbe7f46826,How many more total yards of field goals did Robbie Gould make than Ryan Longwell?,"[""SELECT['Robbie Gould']"", ""PROJECT['field goals of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['sum', '#3']"", ""SELECT['Ryan Longwell']"", ""PROJECT['field goals of #REF', '#5']"", ""PROJECT['yards of #REF', '#6']"", ""AGGREGATE['sum', '#7']"", ""ARITHMETIC['difference', '#4', '#8']""]","[""SELECT['Robie Gould']"", ""SELECT['Ryan Longwell']"", ""PROJECT['field goals of #REF', '#1']"", ""PROJECT['field goals of #REF', '#2']"", ""PROJECT['yards of #REF', '#3']"", ""PROJECT['yards of #REF', '#4']"", ""AGGREGATE['sum', '#5']"", ""AGGREGATE['sum', '#6']"", ""ARITHMETIC['difference', '#7', '#8']""]"
DROP_dev_nfl_1516_829385ee-9fe0-4663-a9dd-38dd57812ad0,How many yards longer was Jay Cutler's longest touchdown pass than Brett Favre's longest touchdown pass?,"[""SELECT['Jay Cutler']"", ""PROJECT['touchdown passes of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['max', '#3']"", ""SELECT['Brett Favre']"", ""PROJECT['touchdown passes of #REF', '#5']"", ""PROJECT['yards of #REF', '#6']"", ""AGGREGATE['max', '#7']"", ""ARITHMETIC['difference', '#4', '#8']""]","[""SELECT['Jay Cutler']"", ""PROJECT['touchdown pass of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['max', '#3']"", ""SELECT['Brett Favre']"", ""PROJECT['touchdown pass of #REF', '#5']"", ""PROJECT['yards of #REF', '#6']"", ""AGGREGATE['max', '#7']"", ""ARITHMETIC['difference', '#4', '#8']""]"
DROP_dev_nfl_1516_8511edf7-f222-469d-b5bf-e7cb4158c21c,How many total games did the Pacers play in the playoffs?,"[""SELECT['the Pacers']"", ""PROJECT['games of #REF', '#1']"", ""FILTER['#2', 'in the playoffs']"", ""AGGREGATE['count', '#3']""]","[""SELECT['the Pacers']"", ""PROJECT['games played in the playoffs of #REF', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_nfl_1516_8af82d6d-0c3f-4d31-a9d0-10f51b76d4b2,How many 41-yard field goals were made in the game?,"[""SELECT['field goals in the game']"", ""FILTER['#1', 'that were 41-yard']"", ""AGGREGATE['count', '#2']""]","[""SELECT['field goals made in the game']"", ""FILTER['#1', 'that are 41-yard']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_nfl_1516_8b4f47b1-0224-4091-958a-ac47e1f77507,How many 1-yard touchdown runs were made in the game?,"[""SELECT['touchdown runs']"", ""FILTER['#1', 'that were 1-yard']"", ""AGGREGATE['count', '#2']""]","[""SELECT['touchdown runs in the game']"", ""FILTER['#1', 'that were 1-yard']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_nfl_1516_91de0f9e-fe21-4c6b-b470-aceea39a0a9c,How many yards longer was Gould's longest field goal over his shortest one?,"[""SELECT['Gould']"", ""PROJECT['field goals of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['max', '#3']"", ""AGGREGATE['min', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]","[""SELECT['Gould']"", ""PROJECT['field goals of #REF', '#1']"", ""AGGREGATE['max', '#2']"", ""AGGREGATE['min', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]"
DROP_dev_nfl_1516_921121f9-02dc-4edb-bc3f-903d9c75a310,How many points did the saints lose to tampa?,"[""SELECT['the saints']"", ""PROJECT['points of #REF', '#1']"", ""FILTER['#2', 'to tampa']"", ""AGGREGATE['sum', '#3']""]","[""SELECT['the saints']"", ""PROJECT['points lost to tampa of #REF', '#1']""]"
DROP_dev_nfl_1516_9bfd2c2f-7e89-4093-a547-4982ad999651,how many yards did Gould nail in the first quarter?,"[""SELECT['Gould']"", ""PROJECT['yards of #REF', '#1']"", ""FILTER['#2', 'in the first quarter']"", ""AGGREGATE['sum', '#3']""]","[""SELECT['Guld']"", ""PROJECT['yards of #REF', '#1']"", ""FILTER['#2', 'in the first quarter']"", ""AGGREGATE['sum', '#3']""]"
DROP_dev_nfl_1516_9e09713a-318b-421e-964e-cc96ccc1d0bc,How many more total touchdown passing yards did Jay Cutler make than Brett Favre?,"[""SELECT['Jay Cutler']"", ""PROJECT['touchdown passes of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['sum', '#3']"", ""SELECT['Brett Favre']"", ""PROJECT['touchdown passes of #REF', '#5']"", ""PROJECT['yards of #REF', '#6']"", ""AGGREGATE['sum', '#7']"", ""ARITHMETIC['difference', '#4', '#8']""]","[""SELECT['Jay Cutler']"", ""PROJECT['touchdown passings of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['sum', '#3']"", ""SELECT['Brett Favre']"", ""PROJECT['touchdown passings of #REF', '#5']"", ""PROJECT['yards of #REF', '#6']"", ""ARITHMETIC['difference', '#4', '#7']""]"
DROP_dev_nfl_1516_c3848932-475e-4212-af62-f695bcbded61,How many total yards of touchdown passes did Cutler make?,"[""SELECT['Cutler']"", ""PROJECT['touchdown passes of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['sum', '#3']""]","[""SELECT['Clark']"", ""PROJECT['touchdown passes of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['sum', '#3']""]"
DROP_dev_nfl_1516_c75f94d2-a8ba-4cde-9266-30009b4230de,How many yards longer was Cutler's longest touchdown pass than his shortest?,"[""SELECT['Cutler']"", ""PROJECT['touchdown passes of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['max', '#3']"", ""AGGREGATE['min', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]","[""SELECT['Cutler']"", ""PROJECT['touchdown passes of #REF', '#1']"", ""AGGREGATE['max', '#2']"", ""AGGREGATE['min', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]"
DROP_dev_nfl_1516_d7df715b-82c1-45db-a69b-2ec08557e92c,How many touchdowns occurred in the first half?,"[""SELECT['touchdowns']"", ""FILTER['#1', 'in the first half']"", ""AGGREGATE['count', '#2']""]","[""SELECT['touchdowns']"", ""FILTER['#1', 'that occur in the first half']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_nfl_1516_e48db11c-c0cd-4a24-8390-63bd3d33c813,How many field goals of at least 40 yards did Gould make?,"[""SELECT['Gould']"", ""PROJECT['field goals of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is at least 40']"", ""AGGREGATE['count', '#4']""]","[""SELECT['Gould']"", ""PROJECT['field goals of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is at least 40 yards']"", ""AGGREGATE['count', '#4']""]"
DROP_dev_nfl_1516_ea45fe99-8b5f-4db1-8fd7-f8e78ac4f9e3,How many 6-yard touchdown passes did Brett Favre have?,"[""SELECT['Brett Favre']"", ""PROJECT['touchdown passes of #REF', '#1']"", ""FILTER['#2', 'that are 6-yard passes']"", ""AGGREGATE['count', '#3']""]","[""SELECT['Brett Favre']"", ""PROJECT['touchdown passes of #REF', '#1']"", ""FILTER['#2', 'that was 6-yard']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_nfl_1516_ec49e997-8c47-410e-9b94-ec59017f9d9a,How many points did the Pacers win game 7 against the Celtics by?,"[""SELECT['the Pacers']"", ""PROJECT['points of #REF', '#1']"", ""FILTER['#2', 'in game 7']"", ""FILTER['#2', 'in game 7']"", ""ARITHMETIC['difference', '#4', '#3']""]","[""SELECT['the Pacers']"", ""PROJECT['points win by of #REF', '#1']"", ""FILTER['#2', 'in game 7']"", ""FILTER['#2', 'in game 7']"", ""ARITHMETIC['difference', '#4', '#3']""]"
DROP_dev_nfl_153_027ac1ea-4f41-447e-bc7b-0d5eb892d8e6,How many more touchdown passes did Jon Kitna throw compared to everyone else?,"[""SELECT['Jon Kitna']"", ""PROJECT['touchdown passes of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""SELECT['everyone']"", ""PROJECT['touchdown passes of #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""ARITHMETIC['difference', '#3', '#6']""]","[""SELECT['Jon Kitna']"", ""PROJECT['touchdown passes of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""SELECT['the rest of the team']"", ""PROJECT['touchdown passes of #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""ARITHMETIC['difference', '#3', '#6']""]"
DROP_dev_nfl_153_3ffad00b-cdcb-40b2-b2c5-fe459d716884,How many yards of touchdown passes did Jon Kitna throw?,"[""SELECT['Jon Kitna']"", ""PROJECT['touchdown passes of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['sum', '#3']""]","[""SELECT['Jon Kitna']"", ""PROJECT['touchdown passes #REF did throw', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['sum', '#3']""]"
DROP_dev_nfl_153_54db511c-f83d-43ef-8b54-dc43db2909fd,How many field goals did Robbie Gould make in the 4th quarter?,"[""SELECT['Robbie Gould']"", ""PROJECT['field goals of #REF', '#1']"", ""FILTER['#2', 'in the 4th quarter']"", ""AGGREGATE['count', '#3']""]","[""SELECT['Robbie Gould']"", ""PROJECT['field goals that #REF make', '#1']"", ""FILTER['#2', 'in the 4th quarter']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_nfl_153_951ba606-5145-4f2d-bddb-7f7f456c911f,From what distance did Robbie Gould make more than one field goal attempt?,"[""SELECT['Robbie Gould']"", ""PROJECT['field goal attempts of #REF', '#1']"", ""PROJECT['distances of #REF', '#2']"", ""GROUP['count', '#2', '#3']"", ""COMPARATIVE['#3', '#4', 'is higher than one']""]","[""SELECT['Robbie Gould']"", ""PROJECT['field goals of #REF', '#1']"", ""PROJECT['distances of #REF', '#2']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is higher than one']""]"
DROP_dev_nfl_153_b307c078-0df3-4823-a6e9-fa8cf912063d,How many more yards was Kitnas 20 yards touchdown pass compared  to Adrian Petersons touchdown run?,"[""SELECT['Kitnas']"", ""PROJECT['touchdown pass of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['sum', '#3']"", ""SELECT['Adrian Peterson']"", ""PROJECT['touchdown run of #REF', '#5']"", ""PROJECT['yards of #REF', '#6']"", ""ARITHMETIC['difference', '#4', '#7']""]","[""SELECT['Kitnas']"", ""PROJECT['touchdown passes of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['sum', '#3']"", ""SELECT['Adrian Petersons']"", ""PROJECT['touchdown run of #REF', '#5']"", ""PROJECT['yards of #REF', '#6']"", ""ARITHMETIC['difference', '#4', '#7']""]"
DROP_dev_nfl_153_c6bce289-1649-47cf-93df-29ebd80d41ed,How many field goals were over 30 yards?,"[""SELECT['field goals']"", ""PROJECT['yards of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is higher than 30']"", ""AGGREGATE['count', '#3']""]","[""SELECT['field goals']"", ""FILTER['#1', 'that were over 30 yards']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_nfl_153_e2970301-6182-40db-b2fe-cfe60b1bc388,How many touchdown passes were over 19 yards?,"[""SELECT['touchdown passes']"", ""PROJECT['yards of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is higher than 19']"", ""AGGREGATE['count', '#3']""]","[""SELECT['touchdown passes']"", ""PROJECT['yards of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'higher than 19']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_nfl_1540_9928edae-774f-4d56-b6cf-568c69a6074e,"Who threw the longer touchdown pass in the first half, Brees or Bulger?","[""SELECT['Brees']"", ""SELECT['Bulger']"", ""PROJECT['touchdown passes of #REF', '#1']"", ""PROJECT['touchdown passes of #REF', '#2']"", ""FILTER['#3', 'in the first half']"", ""FILTER['#4', 'in the first half']"", ""PROJECT['how long was #REF', '#5']"", ""PROJECT['how long was #REF', '#6']"", ""COMPARISON['max', '#7', '#8']""]","[""SELECT['Brees']"", ""PROJECT['touchdown passes of #REF', '#1']"", ""FILTER['#2', 'in the first half']"", ""PROJECT['how long are #REF', '#3']"", ""COMPARISON['max', '#4', '#5']""]"
DROP_dev_nfl_1540_b33b8939-05ac-4935-898b-405fec790924,How many yards was Brees longest touchdown pass of the game?,"[""SELECT['Brees']"", ""PROJECT['touchdown passes of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['max', '#3']""]","[""SELECT['Brees']"", ""PROJECT['touchdown passes of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['max', '#3']""]."
DROP_dev_nfl_1540_f2337152-73f4-4f78-bdca-0eacaee91dd5,How many is the difference in the number of yards of Bush's TD run and the number of yards of the pass to Meachem?,"[""SELECT['Bush']"", ""PROJECT['TD run of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""SELECT['Meachem']"", ""PROJECT['pass to #REF', '#4']"", ""PROJECT['yards of #REF', '#5']"", ""ARITHMETIC['difference', '#3', '#6']""]","[""SELECT['Bush']"", ""PROJECT['TD run of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""SELECT['the pass to Meachem']"", ""PROJECT['yards of #REF', '#4']"", ""ARITHMETIC['difference', '#3', '#5']""]"
DROP_dev_nfl_1540_fe4d6ed9-c523-4225-8c5c-d6a35532de6b,In which quarter did both teams not score any points?,"[""SELECT['quarters']"", ""PROJECT['points scored of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is zero']""]","[""SELECT['teams']"", ""PROJECT['points scored of #REF', '#1']"", ""PROJECT['quarters of #REF', '#2']"", ""GROUP['count', '#2', '#3']"", ""COMPARATIVE['#3', '#4', 'is zero']""]"
DROP_dev_nfl_1553_8a4780e8-b150-4dd5-894b-4fe1ba7806cd,How many interceptions did Arizona catch?,"[""SELECT['Arizona']"", ""PROJECT['interceptions of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['Arizona']"", ""PROJECT['interceptions that #REF catch', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_nfl_1553_9b6bd0fc-f8db-453b-a190-046c6cd6ff26,Which player made the first score of the game?,"[""SELECT['scores of the game']"", ""AGGREGATE['min', '#1']"", ""PROJECT['player that made #REF', '#2']""]","[""SELECT['scores in the game']"", ""AGGREGATE['min', '#1']"", ""PROJECT['player of #REF', '#2']""]"
DROP_dev_nfl_1566_3edb976e-e822-4321-8ae0-e908513b60ea,how many yards did Pierre run for the TD?,"[""SELECT['Pierre']"", ""PROJECT['TD of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']""]","[""SELECT['Pierre']"", ""PROJECT['TD run of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['sum', '#3']""]"
DROP_dev_nfl_1566_79e8a954-2c88-4b68-969c-ff0a7dfa8c66,how many yards did Feely close with?,"[""SELECT['Feely']"", ""PROJECT['yards that #REF close with', '#1']"", ""AGGREGATE['sum', '#2']""]","[""SELECT['Feely']"", ""PROJECT['yards close with of #REF', '#1']"", ""AGGREGATE['sum', '#2']""]"
DROP_dev_nfl_1566_f0b18ae3-a7ed-427b-89a8-e493fa8b6391,How many yards did Carney make?,"[""SELECT['Carney']"", ""PROJECT['yards of #REF', '#1']"", ""AGGREGATE['sum', '#2']""]","[""SELECT['Carney']"", ""PROJECT['yards made of #REF', '#1']"", ""AGGREGATE['sum', '#2']""]"
DROP_dev_nfl_1586_00329ae1-ff9a-48a4-bc8a-cff500eb7580,How many yards was the longest scoring play of the first quarter?,"[""SELECT['scoring plays']"", ""FILTER['#1', 'of the first quarter']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['max', '#3']""]","[""SELECT['scoring plays']"", ""FILTER['#1', 'in the first quarter']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['max', '#3']""]"
DROP_dev_nfl_1586_3f8d819f-7ca9-43c7-abf7-43163be96802,How many yards longer was Donovan McNabb's longest touchdown pass than his shortest?,"[""SELECT['Donovan McNabb']"", ""PROJECT['touchdown passes of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['max', '#3']"", ""AGGREGATE['min', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]","[""SELECT['Donnavan McNabb']"", ""PROJECT['touchdown passes of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['max', '#3']"", ""AGGREGATE['min', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]"
DROP_dev_nfl_1586_41060b06-27f3-4da8-8a3d-9153d574ccd3,How many yards longer was Akers' field goal over Kasay's one?,"[""SELECT['Akers']"", ""SELECT['Kasay']"", ""PROJECT['field goal of #REF', '#1']"", ""PROJECT['field goal of #REF', '#2']"", ""PROJECT['yards of #REF', '#3']"", ""PROJECT['yards of #REF', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['Akers']"", ""SELECT['Kasay']"", ""PROJECT['field goal of #REF', '#1']"", ""PROJECT['field goal of #REF', '#2']"", ""PROJECT['yards of #REF', '#3']"", ""PROJECT['yards of #REF', '#4']"", ""ARITHMETIC['difference', '#6', '#5']""]"
DROP_dev_nfl_1586_49a3691e-be4e-412b-9f22-c1e46adf4e90,How many more yards was McNabb's longest TD pass over his shortest one?,"[""SELECT['McNabb']"", ""PROJECT['TD passes of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['max', '#3']"", ""AGGREGATE['min', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]","[""SELECT['Ncabb']"", ""PROJECT['TD passes of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['max', '#3']"", ""AGGREGATE['min', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]"
DROP_dev_nfl_1586_6a213de4-b244-4fd1-80a3-5c14c46c2ff2,In which quarter did Eagles score most touchdowns?,"[""SELECT['the Eagles']"", ""PROJECT['touchdowns of #REF', '#1']"", ""PROJECT['quarters of #REF', '#2']"", ""GROUP['count', '#2', '#3']"", ""COMPARATIVE['#3', '#4', 'is the highest']""]","[""SELECT['the Eagles']"", ""PROJECT['touchdowns of #REF', '#1']"", ""PROJECT['quarters of #REF', '#2']"", ""GROUP['count', '#2', '#3']"", ""SUPERLATIVE['max', '#3', '#4']""]"
DROP_dev_nfl_1586_7f3817a7-da9e-4d65-a6c6-2b3a06456b6f,How many passing touchdown yards did Donovan McNabb throw?,"[""SELECT['Donovan McNabb']"", ""PROJECT['passing touchdown throws of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['sum', '#3']""]","[""SELECT['Donovan McNabb']"", ""PROJECT['passing touchdown of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['sum', '#3']""]"
DROP_dev_nfl_1586_869dfdaf-bb73-4af7-a04a-7d5fec5c825b,Which players made field goals longer than 20-yards?,"[""SELECT['players']"", ""PROJECT['field goals of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""COMPARATIVE['#1', '#3', 'is higher than 20-yards']""]","[""SELECT['field goals']"", ""PROJECT['yards of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is longer than 20-yards']"", ""PROJECT['players of #REF', '#3']""]"
DROP_dev_nfl_1586_d85999c9-8e2e-42ee-98c4-9921ab62398f,What all touchdowns did Philadelphia make?,"[""SELECT['Philadelphia']"", ""PROJECT['touchdowns of #REF', '#1']""]","[""SELECT['Philadelphia']"", ""PROJECT['touchdown passes of #REF', '#1']""]"
DROP_dev_nfl_1586_edaab33f-c6fc-49a6-a1e7-7142adb334fc,"Who had the longer TD run, Williams or McNabb?","[""SELECT['Williams']"", ""SELECT['McNabb']"", ""PROJECT['TD run of #REF', '#1']"", ""PROJECT['TD run of #REF', '#2']"", ""PROJECT['how long was #REF', '#3']"", ""PROJECT['how long was #REF', '#4']"", ""COMPARISON['max', '#5', '#6']""]","[""SELECT['Williams']"", ""SELECT['McNabb']"", ""PROJECT['TD run of #REF', '#1']"", ""PROJECT['TD run of #REF', '#2']"", ""COMPARISON['max', '#3', '#4']""]"
DROP_dev_nfl_1586_f8966e64-6ed8-4afa-977c-2393b1f63c62,How many yards longer was Williams' TD run over McNabb's one?,"[""SELECT['Williams']"", ""PROJECT['TD run of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""SELECT['McNabb']"", ""PROJECT['TD run of #REF', '#4']"", ""PROJECT['yards of #REF', '#5']"", ""ARITHMETIC['difference', '#3', '#6']""]","[""SELECT['Williams']"", ""SELECT['McNabb']"", ""PROJECT['TD run of #REF', '#1']"", ""PROJECT['TD run of #REF', '#2']"", ""PROJECT['yards of #REF', '#3']"", ""PROJECT['yards of #REF', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]"
DROP_dev_nfl_1596_4f16edca-fe01-4ae8-9092-523548d8d1c4,how many yards did ganther return?,"[""SELECT['ganther']"", ""PROJECT['return yards of #REF', '#1']"", ""AGGREGATE['sum', '#2']""]","[""SELECT['ganther']"", ""PROJECT['yards of #REF', '#1']"", ""AGGREGATE['sum', '#2']""]"
DROP_dev_nfl_1596_ef82d962-7ffe-481a-b51d-63e60bbf2c2c,How many of the touchdowns were running plays?,"[""SELECT['touchdowns']"", ""FILTER['#1', 'that were running plays']"", ""AGGREGATE['count', '#2']""]","[""SELECT['touchdown runs']"", ""AGGREGATE['count', '#1']""]"
DROP_dev_nfl_16_1b6ba6ab-1fcd-49ef-bd41-8307dfbfa6a6,How many points did the Falcons score?,"[""SELECT['the Falcons']"", ""PROJECT['points of #REF', '#1']"", ""AGGREGATE['sum', '#2']""]","[""SELECT['the Falcons']"", ""PROJECT['points scored of #REF', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_nfl_16_44343536-3610-4ed2-b478-d3e4d10417fe,How many combined yardage did  John Carney kick in the second quarter?,"[""SELECT['John Carney']"", ""PROJECT['kicks of #REF', '#1']"", ""FILTER['#2', 'in the second quarter']"", ""PROJECT['yardages of #REF', '#3']"", ""AGGREGATE['sum', '#4']""]","[""SELECT['John Carney']"", ""PROJECT['kickers of #REF', '#1']"", ""FILTER['#2', 'in the second quarter']"", ""PROJECT['yardages of #REF', '#3']"", ""AGGREGATE['sum', '#4']""]"
DROP_dev_nfl_16_62adf2f2-ed66-48a7-b5f6-5a97e0cab815,How many field goals did Carney kick in the second half?,"[""SELECT['Carney']"", ""PROJECT['field goals of #REF', '#1']"", ""FILTER['#2', 'in the second half']"", ""AGGREGATE['count', '#3']""]","[""SELECT['Carney']"", ""PROJECT['field goals #REF did kick', '#1']"", ""FILTER['#2', 'in the second half']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_nfl_16_675a3207-ee8d-40cc-a014-97684dac5f3a,How many field goals did Morten Andersen kick in the first quarter?,"[""SELECT['Morten Andersen']"", ""PROJECT['field goals of #REF', '#1']"", ""FILTER['#2', 'in the first quarter']"", ""AGGREGATE['count', '#3']""]","[""SELECT['Morten Andersen']"", ""PROJECT['field goals of #REF', '#1']"", ""FILTER['#2', 'that are in first quarter']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_nfl_16_88b4c5b2-c9cc-46af-b79b-a888766c406f,Who had an 11 yard touchdown run?,"[""SELECT['touchdown runs']"", ""PROJECT['yards of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is 11']"", ""PROJECT['who had #REF', '#3']""]","[""SELECT['touchdown runs']"", ""FILTER['#1', 'that was 11 yards']"", ""PROJECT['who had #REF', '#2']""]"
DROP_dev_nfl_16_9eb68f5c-0c59-4850-9f2d-e6bbb80cbfa0,How many points did the Falcons fall behind?,"[""SELECT['the Falcons']"", ""PROJECT['points fall behind of #REF', '#1']""]","[""SELECT['Falcons']"", ""PROJECT['points fall behind of #REF', '#1']""]"
DROP_dev_nfl_1618_06483ca6-0593-400e-837d-03ff24721e1e,How many yards longer was San Diego's first field goal than the Dolphin's first field goal?,"[""SELECT['San Diego']"", ""SELECT['the Dolphin']"", ""PROJECT['field goals of #REF', '#1']"", ""PROJECT['field goals of #REF', '#2']"", ""AGGREGATE['min', '#3']"", ""AGGREGATE['min', '#4']"", ""PROJECT['yards of #REF', '#5']"", ""PROJECT['yards of #REF', '#6']"", ""ARITHMETIC['difference', '#7', '#8']""]","[""SELECT['field goals']"", ""AGGREGATE['min', '#1']"", ""FILTER['#2', 'of San Diego']"", ""FILTER['#2', 'of the Dolphin']"", ""PROJECT['yards of #REF', '#3']"", ""PROJECT['yards of #REF', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]"
DROP_dev_nfl_1618_19a74946-cf5a-429f-9a7e-f409c012379b,"Who scored more field goals, Nate Kaeding or Dan Carpenter?","[""SELECT['Nate Kaeding']"", ""PROJECT['field goals of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""SELECT['Dan Carpenter']"", ""PROJECT['field goals of #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""COMPARISON['max', '#3', '#6']""]","[""SELECT['Nate Kaeding']"", ""SELECT['Dan Carpenter']"", ""PROJECT['field goals scored of #REF', '#1']"", ""PROJECT['field goals scored of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""COMPARISON['max', '#5', '#6']""]"
DROP_dev_nfl_1652_153470a0-f39f-4869-af19-9d0289905eb8,How many field goals did Josh Brown successfully kick?,"[""SELECT['Josh Brown']"", ""PROJECT['field goals of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['Josh Brown']"", ""PROJECT['field goals that #REF successfully kick', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_nfl_1652_9e825996-b1b9-4773-bd0a-ff0d206621d1,How many touchdown receptions did Packers wideouts score?,"[""SELECT['the Packers']"", ""PROJECT['touchdown receptions of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['Green Bay Packers']"", ""PROJECT['touchdown receptions of #REF', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_nfl_1670_12cf63d0-7a22-4278-a04b-f21097cf1e69,How many yards longer was Barth's second field goal over his first one?,"[""SELECT['Barth']"", ""PROJECT['field goals of #REF', '#1']"", ""PROJECT['second of #REF', '#2']"", ""AGGREGATE['min', '#2']"", ""PROJECT['yards of #REF', '#3']"", ""PROJECT['yards of #REF', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['Barth']"", ""PROJECT['field goals of #REF', '#1']"", ""PROJECT['the second of #REF', '#2']"", ""AGGREGATE['min', '#2']"", ""PROJECT['yards of #REF', '#3']"", ""PROJECT['yards of #REF', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]"
DROP_dev_nfl_1670_71719576-574b-42cf-8bbb-c3ce23283249,"In which quarter did the Bucs kick a longer field goal, the second or the third?","[""SELECT['the Bucs']"", ""PROJECT['field goals of #REF', '#1']"", ""FILTER['#2', 'in the second quarter']"", ""FILTER['#2', 'in the third quarter']"", ""PROJECT['how long was #REF', '#3']"", ""PROJECT['how long was #REF', '#4']"", ""COMPARISON['max', '#5', '#6']""]","[""SELECT['the Bucs']"", ""PROJECT['field goals of #REF', '#1']"", ""FILTER['#2', 'in the second quarter']"", ""FILTER['#2', 'in the third quarter']"", ""PROJECT['how long were #REF', '#3']"", ""PROJECT['how long were #REF', '#4']"", ""COMPARISON['max', '#5', '#6']""]"
DROP_dev_nfl_1670_9435d1dc-13d1-4cef-97f5-abfb416320b7,Did the Buccaneers score first in the first half or the second?,"[""SELECT['the Buccaneers']"", ""PROJECT['scores of #REF', '#1']"", ""FILTER['#2', 'in the first half']"", ""FILTER['#2', 'in the second half']"", ""AGGREGATE['min', '#3']"", ""AGGREGATE['min', '#4']"", ""COMPARISON['min', '#5', '#6']""]","[""SELECT['the Buccaneers']"", ""PROJECT['scores in the first half of #REF', '#1']"", ""PROJECT['scores in the second half of #REF', '#1']"", ""AGGREGATE['min', '#2']"", ""AGGREGATE['min', '#3']"", ""COMPARISON['min', '#4', '#5']""]"
DROP_dev_nfl_1670_b6785b9f-389a-4e0c-a563-942fab85bb06,How many interceptions did Matt Hasselbeck throw?,"[""SELECT['Matt Hasselbeck']"", ""PROJECT['interceptions of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['Matt Hasselbeck']"", ""PROJECT['interceptions #REF did throw', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_nfl_1670_e3aa621b-9f06-4e8a-8981-39dcf0b59ab2,How many yards difference was there between Josh Freeman's field goal and touchdown pass?,"[""SELECT['Josh Freeman']"", ""PROJECT['field goal of #REF', '#1']"", ""PROJECT['touchdown pass of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""PROJECT['yards of #REF', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]","[""SELECT['Josh Freeman']"", ""PROJECT['field goal of #REF', '#1']"", ""PROJECT['touchdown pass of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""PROJECT['yards of #REF', '#3']"", ""ARITHMETIC['difference', '#5', '#6']""]"
DROP_dev_nfl_1670_ec6f6a9d-75c8-4c22-89d9-9e0f7e41be2e,How many field goals did Barth kick in the second half?,"[""SELECT['Barth']"", ""PROJECT['field goals of #REF', '#1']"", ""FILTER['#2', 'in the second half']"", ""AGGREGATE['count', '#3']""]","[""SELECT['Barth']"", ""PROJECT['field goals of #REF', '#1']"", ""FILTER['#2', 'that were in second half']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_nfl_1672_0d4f9fa3-1999-467f-b3d2-c61bf0e278dc,How many yards longer was Bironas' fourth quarter field goal than Reeds?,"[""SELECT['Bironas']"", ""SELECT['Reeds']"", ""PROJECT['field goal of #REF', '#1']"", ""PROJECT['field goal of #REF', '#2']"", ""FILTER['#3', 'in the fourth quarter']"", ""PROJECT['yards of #REF', '#4']"", ""PROJECT['yards of #REF', '#5']"", ""ARITHMETIC['difference', '#6', '#7']""]","[""SELECT['Bironas']"", ""PROJECT['field goal of #REF', '#1']"", ""FILTER['#2', 'in the fourth quarter']"", ""PROJECT['yards of #REF', '#3']"", ""SELECT['Reeds']"", ""PROJECT['field goal of #REF', '#5']"", ""PROJECT['yards of #REF', '#6']"", ""ARITHMETIC['difference', '#4', '#7']""]"
DROP_dev_nfl_1672_4e87ade8-b7e6-48c3-accc-d779e2b960cf,How many yards did the Steelers get to win the game?,"[""SELECT['the Steelers']"", ""PROJECT['yards of #REF', '#1']"", ""AGGREGATE['sum', '#2']""]","[""SELECT['the Steelers']"", ""PROJECT['yards to win the game of #REF', '#1']"", ""AGGREGATE['sum', '#2']""]--"
DROP_dev_nfl_1672_9036cb63-c2b1-4a43-acf2-ee2208181f29,How many yards was Roethlisbergers touchdown pass?,"[""SELECT['Roethlisberger']"", ""PROJECT['touchdown pass of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']""]","[""SELECT['Roethlisbergers']"", ""PROJECT['touchdown passes of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']""]"
DROP_dev_nfl_1672_96a27b0b-ddcf-42c8-9651-6074c40a9d4f,Whose second quarter touchdown pass was longer Roethlisberger or Collins?,"[""SELECT['Roethlisberger']"", ""SELECT['Collins']"", ""PROJECT['touchdown passes of #REF', '#1']"", ""PROJECT['touchdown passes of #REF', '#2']"", ""FILTER['#3', 'in the second quarter']"", ""FILTER['#4', 'in the second quarter']"", ""PROJECT['how long was #REF', '#5']"", ""PROJECT['how long was #REF', '#6']"", ""COMPARISON['max', '#7', '#8']""]","[""SELECT['Roethlisberger']"", ""SELECT['Collins']"", ""PROJECT['touchdown passes of #REF', '#1']"", ""PROJECT['touchdown passes of #REF', '#2']"", ""FILTER['#3', 'in the second quarter']"", ""FILTER['#4', 'in the second quarter']"", ""PROJECT['how long was #REF', '#5']"", ""PROJECT['how long was #REF', '#6']"", ""COMPARISON['max', '#7', '#8']""]"
DROP_dev_nfl_1689_42caf0e7-5100-4c9b-83d9-e488c1c739b7,How many first-half touchdowns did Atlanta score?,"[""SELECT['Atlanta']"", ""PROJECT['touchdowns of #REF', '#1']"", ""FILTER['#2', 'in the first-half']"", ""AGGREGATE['count', '#3']""]","[""SELECT['Atlanta']"", ""PROJECT['touchdowns of #REF', '#1']"", ""FILTER['#2', 'that were in the first-half']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_nfl_1743_07b2512d-e0de-4d2f-9c2f-74a358fc4f7f,How many yards were gained on passing touchdowns measuring less than 5-yards in length?,"[""SELECT['passing touchdowns']"", ""PROJECT['lengths of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is less than 5-yards']"", ""PROJECT['yards of #REF', '#3']"", ""AGGREGATE['sum', '#4']""]","[""SELECT['passing touchdowns']"", ""PROJECT['lengths of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is lower than 5-yards']"", ""PROJECT['yards of #REF', '#3']"", ""AGGREGATE['sum', '#4']""]"
DROP_dev_nfl_1743_1a1ee593-9b66-45f6-b60b-f2bde8117886,how many yards did folk nail?,"[""SELECT['folk']"", ""PROJECT['yards of #REF', '#1']"", ""AGGREGATE['sum', '#2']""]","[""SELECT['folks']"", ""PROJECT['yards of #REF', '#1']"", ""AGGREGATE['sum', '#2']""]"
DROP_dev_nfl_1743_27311f04-73dd-49ee-9b2f-7f079b032c9b,How many more first half touchdowns did the Jets have than Buffalo?,"[""SELECT['the Jets']"", ""PROJECT['touchdowns of #REF', '#1']"", ""FILTER['#2', 'in the first half']"", ""AGGREGATE['count', '#3']"", ""SELECT['Buffalo']"", ""PROJECT['touchdowns of #REF', '#5']"", ""FILTER['#6', 'in the first half']"", ""AGGREGATE['count', '#7']"", ""ARITHMETIC['difference', '#4', '#8']""]","[""SELECT['the Jets']"", ""PROJECT['touchdowns of #REF', '#1']"", ""FILTER['#2', 'in the first half']"", ""AGGREGATE['count', '#3']"", ""SELECT['Buffalo']"", ""PROJECT['touchdowns of #REF', '#5']"", ""FILTER['#6', 'in the first half']"", ""AGGREGATE['count', '#7']"", ""ARITHMETIC['difference', '#4', '#8']""]-"
DROP_dev_nfl_1743_2cde67b2-80e5-40aa-9598-f65a893cde6b,How many yards were gained on passing touchdowns measuring longer than 20-yards in length?,"[""SELECT['passing touchdowns']"", ""PROJECT['lengths of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is longer than 20-yards']"", ""PROJECT['yards gained on #REF', '#3']"", ""AGGREGATE['sum', '#4']""]","[""SELECT['passing touchdowns']"", ""PROJECT['lengths of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is longer than 20-yards']"", ""PROJECT['yards of #REF', '#3']"", ""AGGREGATE['sum', '#4']""]"
DROP_dev_nfl_1743_34f96c58-9e46-4a4d-8b21-65799d79dfa8,How many different players threw a TD pass for the Jets?,"[""SELECT['the Jets']"", ""PROJECT['TD passes of #REF', '#1']"", ""PROJECT['different players of #REF', '#2']"", ""AGGREGATE['count', '#3']""]","[""SELECT['the Jets']"", ""PROJECT['TD pass of #REF', '#1']"", ""PROJECT['different players of #REF', '#2']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_nfl_1743_4e968686-319f-4d94-b490-652220cf1575,How many total yards were gained on rushing touchdowns by LaDainian Tomlinson?,"[""SELECT['LaDainian Tomlinson']"", ""PROJECT['rushing touchdowns of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['sum', '#3']""]","[""SELECT['rushing touchdowns']"", ""FILTER['#1', 'of LaDainian Tomlinson']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['sum', '#3']""]"
DROP_dev_nfl_1743_808b9efc-b11d-4016-b148-5eb22316ed2c,How many touchdowns did Mark Sanchez throw?,"[""SELECT['Mark Sanchez']"", ""PROJECT['touchdown throws of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['Mark Sanchez']"", ""PROJECT['touchdown threw of #REF', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_nfl_1743_81d476cd-8451-4ef2-8181-fd38116c8fe5,How many passing touchdowns measured shorter than 5-yards in length?,"[""SELECT['passing touchdowns']"", ""PROJECT['lengths of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is shorter than 5-yards']"", ""AGGREGATE['count', '#3']""]","[""SELECT['passing touchdowns']"", ""PROJECT['lengths of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is lower than 5-yards']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_nfl_1743_8aa72066-46f1-4fa2-ba5a-8fb6b85e22f4,How many yards of differential were there between Nick Folk's first field goal and the first rushing touchdown of the game?,"[""SELECT['Nick Folk']"", ""PROJECT['field goals of #REF', '#1']"", ""AGGREGATE['min', '#2']"", ""PROJECT['rushing touchdowns of #REF', '#1']"", ""AGGREGATE['min', '#4']"", ""PROJECT['yards of #REF', '#3']"", ""PROJECT['yards of #REF', '#5']"", ""ARITHMETIC['difference', '#6', '#7']""]","[""SELECT['Nick Folk']"", ""PROJECT['field goals of #REF', '#1']"", ""AGGREGATE['min', '#2']"", ""PROJECT['rushing touchdown of #REF', '#1']"", ""AGGREGATE['min', '#4']"", ""PROJECT['yards of #REF', '#3']"", ""PROJECT['yards of #REF', '#5']"", ""ARITHMETIC['difference', '#6', '#7']""]"
DROP_dev_nfl_1743_8bb11a98-fe3c-402b-b5b9-9dba92a639ee,Which player caught the second shortest touchdown pass?,"[""SELECT['touchdown passes']"", ""AGGREGATE['min', '#1']"", ""DISCARD['#1', '#2']"", ""AGGREGATE['min', '#3']"", ""PROJECT['player that caught #REF', '#4']""]","[""SELECT['touchdown passes']"", ""AGGREGATE['min', '#1']"", ""PROJECT['player that caught #REF', '#2']""]"
DROP_dev_nfl_1743_91c8dd6c-7176-4690-8210-0cae0266be54,How many yards did the first rushing touchdown and the first field goal of the game combine for?,"[""SELECT['rushing touchdowns']"", ""SELECT['field goals']"", ""AGGREGATE['min', '#1']"", ""AGGREGATE['min', '#2']"", ""PROJECT['yards of #REF', '#3']"", ""PROJECT['yards of #REF', '#4']"", ""ARITHMETIC['sum', '#5', '#6']""]","[""SELECT['rushing touchdowns']"", ""AGGREGATE['min', '#1']"", ""SELECT['field goals']"", ""AGGREGATE['min', '#3']"", ""PROJECT['yards of #REF', '#2']"", ""PROJECT['yards of #REF', '#4']"", ""ARITHMETIC['sum', '#5', '#6']""]"
DROP_dev_nfl_1743_9921c50b-e446-4c46-9f5f-899bc6157b71,How many yards was the longest TD play?,"[""SELECT['TD plays']"", ""PROJECT['yards of #REF', '#1']"", ""AGGREGATE['max', '#2']""]","[""SELECT['TD plays']"", ""AGGREGATE['max', '#1']"", ""PROJECT['yards of #REF', '#2']""]"
DROP_dev_nfl_1743_a41f2022-868f-4dba-9ac5-f5710c5865b8,Which players threw more than 1 touchdown pass?,"[""SELECT['players']"", ""PROJECT['touchdown passes of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is higher than 1']""]","[""SELECT['touchdown passes']"", ""PROJECT['players that threw #REF', '#1']"", ""GROUP['count', '#1', '#2']"", ""COMPARATIVE['#2', '#3', 'is higher than 1']""."
DROP_dev_nfl_1743_ab8f34b8-67b4-49b3-9148-150cf63434db,Which players scored touchdowns longer than 10 yards?,"[""SELECT['players']"", ""PROJECT['touchdowns of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""COMPARATIVE['#1', '#3', 'is higher than 10']""]","[""SELECT['touchdowns']"", ""PROJECT['yards of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is longer than 10 yards']"", ""PROJECT['players of #REF', '#3']""]"
DROP_dev_nfl_1769_09b90451-e508-4b2e-9c96-948b18573bac,How many players helped to take the early Bears lead?,"[""SELECT['the early Bears']"", ""PROJECT['the lead of #REF', '#1']"", ""PROJECT['players that helped to take #REF', '#2']"", ""AGGREGATE['count', '#3']""]","[""SELECT['the early Bears']"", ""PROJECT['leaders of #REF', '#1']"", ""PROJECT['players that helped to take #REF', '#2']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_nfl_1769_869bbf13-12f9-4973-b8f4-b6e0020a3c8f,How many total yards did Jahvid Best have on touchdown runs?,"[""SELECT['Jahvid Best']"", ""PROJECT['touchdown runs of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['sum', '#3']""]","[""SELECT['Jahvid Best']"", ""PROJECT['touchdown run of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['sum', '#3']""]"
DROP_dev_nfl_1789_2c82a53c-4852-483a-bfba-68a3b2ecb0ca,How many total yards did Carson Palmer throw on touchdown passes?,"[""SELECT['Carson Palmer']"", ""PROJECT['touchdown passes of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['sum', '#3']""]","[""SELECT['Carson Palmer']"", ""PROJECT['touchdown passes of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['sum', '#3']""]."
DROP_dev_nfl_1789_3b77f199-0cd0-4e2a-a119-ae4009c9c620,How many yards was the first fieldgoal?,"[""SELECT['fieldgoals']"", ""AGGREGATE['min', '#1']"", ""PROJECT['yards of #REF', '#2']""]","[""SELECT['fieldgoals']"", ""PROJECT['yards of #REF', '#1']"", ""AGGREGATE['min', '#2']""]"
DROP_dev_nfl_1789_80105ea8-6c3e-4329-9105-92943a301626,How many yards was the third touchdown?,"[""SELECT['touchdowns']"", ""PROJECT['third of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']""]","[""SELECT['touchdowns']"", ""AGGREGATE['min', '#1']"", ""PROJECT['yards of #REF', '#2']""]"
DROP_dev_nfl_1789_d86bde75-14f0-4758-a17b-581cd9f5e150,What team had the longest fumble return of the game?,"[""SELECT['fumble returns']"", ""AGGREGATE['max', '#1']"", ""PROJECT['team of #REF', '#2']""]","[""SELECT['fumble returns']"", ""AGGREGATE['max', '#1']"", ""PROJECT['team that had #REF', '#2']""]"
DROP_dev_nfl_1789_e4fda3e3-9b8c-47ec-8134-daf4cadd0827,How many yards it total field goals did Nugent kick?,"[""SELECT['Nugent']"", ""PROJECT['field goals of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['sum', '#3']""]","[""SELECT['Nugent']"", ""PROJECT['field goals #REF did kick', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['sum', '#3']""]"
DROP_dev_nfl_180_217203d5-84be-456f-9bc9-ba6be82838eb,Peyton Manning and Marvin Harriso connected for how many touchdowns?,"[""SELECT['touchdowns']"", ""FILTER['#1', 'of Peyton Manning']"", ""FILTER['#1', 'of Marvin Harriso']"", ""INTERSECTION['#1', '#2', '#3']"", ""AGGREGATE['count', '#4']""]","[""SELECT['touchdowns']"", ""FILTER['#1', 'that Peyton Manning connected for']"", ""FILTER['#1', 'that Marvin Harriso connected for']"", ""INTERSECTION['#1', '#2', '#3']"", ""AGGREGATE['count', '#4']""]"
DROP_dev_nfl_180_3758240d-23ad-421c-8468-f794662ac8b3,How many passes did David Carr throw?,"[""SELECT['David Carr']"", ""PROJECT['passes of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['David Carr']"", ""PROJECT['passes #REF did throw', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_nfl_180_3dbc2d95-68be-4b3e-a468-7f0154a0edc2,Who recovered a Dominic Rhodes fumble?,"[""SELECT['Dominik Rhodes']"", ""PROJECT['fumble of #REF', '#1']"", ""PROJECT['who recovered #REF', '#2']""]","[""SELECT['Dominic Rhodes']"", ""PROJECT['fumble recovery of #REF', '#1']"", ""PROJECT['who recovered #REF', '#2']""]"
DROP_dev_nfl_180_7d8a4eea-d804-4ce6-8c0e-110bc9d47345,How many times was David Carr sacked?,"[""SELECT['David Carr']"", ""PROJECT['times sacked of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['David Carr']"", ""PROJECT['when was #REF sacked', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_nfl_180_94dcc3a6-e0b6-4b61-ac18-1bc8028a2272,How many passes did Marvin Harrison receive?,"[""SELECT['Marvin Harrison']"", ""PROJECT['passes #REF did receive', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['Marvin Harrison']"", ""PROJECT['passes receive of #REF', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_nfl_180_bb3fcb2a-44aa-4828-b379-a2abe0b7174e,How many yards did Carr throw for?,"[""SELECT['Carr']"", ""PROJECT['yards of #REF', '#1']"", ""AGGREGATE['sum', '#2']""]","[""SELECT['Carr']"", ""PROJECT['yards throw for of #REF', '#1']""]"
DROP_dev_nfl_180_e8e26d61-79a6-4ba2-8e94-ee7d99fa38cd,How many turnovers were there?,"[""SELECT['turnovers']"", ""AGGREGATE['count', '#1']""]","[""SELECT['turnovers of']"", ""AGGREGATE['count', '#1']""]"
DROP_dev_nfl_1829_1707acb3-8799-4fdc-bef0-d233a9ffffed,"Who threw more touchdown passes, Kyle Orton or Matt Hasselbeck?","[""SELECT['Kyle Orton']"", ""PROJECT['touchdown passes of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""SELECT['Matt Hasselbeck']"", ""PROJECT['touchdown passes of #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""COMPARISON['max', '#3', '#6']""]","[""SELECT['Kyle Orton']"", ""SELECT['Matt Hasselbeck']"", ""PROJECT['touchdown passes of #REF', '#1']"", ""PROJECT['touchdown passes of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""COMPARISON['max', '#5', '#6']""]"
DROP_dev_nfl_1829_b42a61fe-1d34-48dd-9806-4f552248f6ef,How many total yards of rushing touchdowns were scored?,"[""SELECT['rushing touchdowns']"", ""PROJECT['yards of #REF', '#1']"", ""AGGREGATE['sum', '#2']""]","[""SELECT['rushing touchdowns']"", ""FILTER['#1', 'that were scored']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['sum', '#3']""]"
DROP_dev_nfl_1829_ca041a39-bddb-465b-8c66-de4a21de1073,Which Broncos had rushing touchdowns?,"[""SELECT['Broncos']"", ""PROJECT['rushing touchdowns of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is higher than zero']""]","[""SELECT['Broncos']"", ""PROJECT['rushing touchdowns of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is at least one']""]"
DROP_dev_nfl_1829_d238552b-0bcb-4483-b72d-791b8b093cef,How many 1-yard touchdowns did the Broncos score?,"[""SELECT['the Broncos']"", ""PROJECT['touchdowns of #REF', '#1']"", ""FILTER['#2', 'that are 1-yard']"", ""AGGREGATE['count', '#3']""]","[""SELECT['Broncos']"", ""PROJECT['touchdowns of #REF', '#1']"", ""FILTER['#2', 'that are 1-yard']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_nfl_1838_2f70aca0-fbe1-43e1-8f0e-a448c3326430,How many yards difference was Matt Prater’s first field goal compared to his second?,"[""SELECT['Matt Prater']"", ""PROJECT['field goals of #REF', '#1']"", ""AGGREGATE['min', '#2']"", ""PROJECT['second of #REF', '#2']"", ""PROJECT['yards of #REF', '#3']"", ""PROJECT['yards of #REF', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['Matt Prater']"", ""PROJECT['field goals of #REF', '#1']"", ""AGGREGATE['min', '#2']"", ""PROJECT['the second of #REF', '#2']"", ""PROJECT['yards of #REF', '#3']"", ""PROJECT['yards of #REF', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]"
DROP_dev_nfl_1838_38327bd5-01a4-4342-b7e0-cb209f2b4655,How many scores behind were the Rams before their first points?,"[""SELECT['the Rams']"", ""PROJECT['points of #REF', '#1']"", ""AGGREGATE['min', '#2']"", ""PROJECT['points of #REF', '#1']"", ""AGGREGATE['min', '#4']"", ""ARITHMETIC['difference', '#3', '#5']""]","[""SELECT['the Rams']"", ""PROJECT['points of #REF', '#1']"", ""AGGREGATE['min', '#2']"", ""PROJECT['points of #REF', '#1']"", ""AGGREGATE['min', '#4']"", ""ARITHMETIC['difference', '#2', '#3']""]"
DROP_dev_nfl_1838_3ea61d8b-6c73-41fa-9369-7fddda8a4d3f,Which team scored the most total game points?,"[""SELECT['teams']"", ""PROJECT['game points scored of #REF', '#1']"", ""GROUP['sum', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']""]","[""SELECT['teams']"", ""PROJECT['game points #REF scored', '#1']"", ""GROUP['sum', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']""]"
DROP_dev_nfl_1838_42a4f9af-fd71-4157-928c-67ed1db8f132,How many yards difference was Josh Brown’s first field goal compared to his second?,"[""SELECT['Josh Brown']"", ""PROJECT['field goals of #REF', '#1']"", ""AGGREGATE['min', '#2']"", ""PROJECT['second of #REF', '#2']"", ""PROJECT['yards of #REF', '#3']"", ""PROJECT['yards of #REF', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['Josh Brown']"", ""PROJECT['field goals of #REF', '#1']"", ""AGGREGATE['min', '#2']"", ""PROJECT['the second of #REF', '#2']"", ""PROJECT['yards of #REF', '#3']"", ""PROJECT['yards of #REF', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]"
DROP_dev_nfl_1838_51b62947-62f5-4b16-97bd-211ec8d6b51b,What all field goals did Matt Prater make?,"[""SELECT['Matt Prater']"", ""PROJECT['field goals of #REF', '#1']""]","[""SELECT['Matt Prater']"", ""PROJECT['field goals that #REF makes', '#1']""]"
DROP_dev_nfl_1838_77a454c3-ded4-4ea6-b71f-8e750997698a,Who kicked the least number of field goals?,"[""SELECT['field goals']"", ""PROJECT['who kicked #REF', '#1']"", ""GROUP['count', '#1', '#2']"", ""SUPERLATIVE['min', '#2', '#3']""]","[""SELECT['field goals']"", ""AGGREGATE['count', '#1']"", ""PROJECT['who kicked #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is the lowest']""]"
DROP_dev_nfl_1838_85b90ec6-808e-4577-9ee7-e839ecb57797,How many more field goals did Brown kick than Prater?,"[""SELECT['Brown']"", ""SELECT['Prater']"", ""PROJECT['field goals of #REF', '#1']"", ""PROJECT['field goals of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['Brown']"", ""SELECT['Prater']"", ""PROJECT['field goals of #REF', '#1']"", ""PROJECT['field goals of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]"
DROP_dev_nfl_1838_d729b650-0e09-4c6c-b534-89fbf546f08e,Which player kicked at most two field goals?,"[""SELECT['players']"", ""PROJECT['field goals of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is at most two']""]","[""SELECT['players']"", ""PROJECT['field goals that #REF kicked', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is at most two']""."
DROP_dev_nfl_1838_e916c2af-e483-48cf-97f9-6140d107eb94,How many yards was Denvers first quarter scores?,"[""SELECT['Denvers']"", ""PROJECT['scores of #REF', '#1']"", ""FILTER['#2', 'in the first quarter']"", ""PROJECT['yards of #REF', '#3']""]","[""SELECT['Denver s']"", ""PROJECT['scores of #REF', '#1']"", ""FILTER['#2', 'in the first quarter']"", ""PROJECT['yards of #REF', '#3']""."
DROP_dev_nfl_187_2f55bf24-9983-4fc2-b2d6-c3fc98f930f9,Who was in the lead at the end of the third quarter?,"[""SELECT['the third quarter']"", ""PROJECT['the end of #REF', '#1']"", ""PROJECT['who was in the lead at #REF', '#2']""]","[""SELECT['third quarter']"", ""PROJECT['the end of #REF', '#1']"", ""PROJECT['who was in the lead at #REF', '#2']""]"
DROP_dev_nfl_187_97c10767-92d1-4942-a376-962170996a5b,What type of score caused the game to tie at 31?,"[""SELECT['scores']"", ""FILTER['#1', 'that caused the game to tie at 31']"", ""PROJECT['type of #REF', '#2']""]","[""SELECT['the game']"", ""FILTER['#1', 'that tie at 31']"", ""PROJECT['type of score that caused #REF', '#2']""]"
DROP_dev_nfl_1873_0341eaa0-e154-432e-85d5-a88ee3de7bfc,"Which team scored more touchdowns in the first quarter, Texans or Chargers?","[""SELECT['the Texans']"", ""SELECT['the Chargers']"", ""PROJECT['touchdowns of #REF', '#1']"", ""PROJECT['touchdowns of #REF', '#2']"", ""FILTER['#3', 'in the first quarter']"", ""FILTER['#4', 'in the first quarter']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#6']"", ""COMPARISON['max', '#7', '#8']""]","[""SELECT['Texans']"", ""PROJECT['touchdowns of #REF', '#1']"", ""FILTER['#2', 'in the first quarter']"", ""AGGREGATE['count', '#3']"", ""SELECT['Chargers']"", ""PROJECT['touchdowns of #REF', '#5']"", ""FILTER['#6', 'in the first quarter']"", ""FILTER['#7', 'in the first quarter']"", ""AGGREGATE['count', '#8']"", ""COMPARISON['max', '#9', '#10']""]"
DROP_dev_nfl_1873_2bb463c2-4348-447b-b09f-1f4353aa8889,how many yards did rivers pass to ajirotutu?,"[""SELECT['rivers']"", ""PROJECT['yards pass to ajirotutu of #REF', '#1']"", ""AGGREGATE['sum', '#2']""]","[""SELECT['rivers']"", ""PROJECT['yards passed to ajirotutu of #REF', '#1']"", ""AGGREGATE['sum', '#2']""]."
DROP_dev_nfl_1873_30504e30-71aa-4643-98f3-8132de444b3b,How many different players scored two touchdowns?,"[""SELECT['touchdowns']"", ""PROJECT['different players of #REF', '#1']"", ""GROUP['count', '#1', '#2']"", ""COMPARATIVE['#2', '#3', 'is two']"", ""AGGREGATE['count', '#4']""]","[""SELECT['touchdowns']"", ""PROJECT['different players that scored #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is two']"", ""AGGREGATE['count', '#4']""]"
DROP_dev_nfl_1873_40fab99c-46f8-40ec-8987-2d36c1a73b82,Who scored on the longest play for a touchdown?,"[""SELECT['touchdowns']"", ""PROJECT['plays of #REF', '#1']"", ""AGGREGATE['max', '#2']"", ""PROJECT['who scored on #REF', '#3']""]","[""SELECT['touchdowns']"", ""AGGREGATE['max', '#1']"", ""PROJECT['play for #REF', '#2']"", ""PROJECT['who scored on #REF', '#3']""]"
DROP_dev_nfl_1879_4e5b6445-ecf9-4940-9698-c2b99134a77d,How many yards longer was the longest touchdown reception than the shortest?,"[""SELECT['touchdown receptions']"", ""PROJECT['yards of #REF', '#1']"", ""AGGREGATE['max', '#2']"", ""AGGREGATE['min', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]","[""SELECT['touchdown receptions']"", ""PROJECT['yards of #REF', '#1']"", ""AGGREGATE['max', '#2']"", ""AGGREGATE['min', '#2']"", ""ARITHMETIC['difference', '#4', '#3']""]"
DROP_dev_nfl_1879_6b28d610-1e26-417e-995c-677f231de1d5,What was the Texan's record after the game?,"[""SELECT['the Texan']"", ""PROJECT['record after the game of #REF', '#1']""]","[""SELECT['Texan']"", ""PROJECT['record of #REF', '#1']"", ""FILTER['#2."
DROP_dev_nfl_1883_585c3a26-c4aa-42f2-9aaf-ad69fe92a608,how many yards did the colds have,"[""SELECT['the colds']"", ""PROJECT['yards of #REF', '#1']"", ""AGGREGATE['sum', '#2']""]","[""SELECT['colds']"", ""PROJECT['yards of #REF', '#1']"", ""AGGREGATE['sum', '#2']""]"
DROP_dev_nfl_1883_655e44af-df8d-43f3-81d6-4516d6a9f13e,How many points did the colts lead by?,"[""SELECT['the colts']"", ""PROJECT['points lead by of #REF', '#1']""]","[""SELECT['the colts']"", ""PROJECT['points lead by of #REF', '#1']""]."
DROP_dev_nfl_1883_92510f57-e63a-4f5d-bde1-3ad6a42904af,What was the score coming out of half time?,"[""SELECT['half time']"", ""PROJECT['the score coming out of #REF', '#1']""]","[""SELECT['scores']"", ""FILTER['#1', 'coming out of half time']""]"
DROP_dev_nfl_1914_c272f8b5-80b0-42a1-8043-49c90143bb53,How many more is Carpenter's 50 yard compared to Nick Folk's 30 yard?,"[""SELECT['Carpenter']"", ""PROJECT['yards of #REF', '#1']"", ""FILTER['#2', 'that is 50 yards']"", ""FILTER['#2', 'that is 30 yards']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['Carpenter']"", ""PROJECT['yards of #REF', '#1']"", ""FILTER['#2', 'that is 50']"", ""FILTER['#2', 'that is 30 yards']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]"
DROP_dev_nfl_1914_c6204e5d-8e5e-42c4-9d40-e37ddcbe14f4,How many points did Miami score in the first quarter?,"[""SELECT['Miami']"", ""PROJECT['points scored of #REF', '#1']"", ""FILTER['#2', 'in the first quarter']"", ""AGGREGATE['count', '#3']""]","[""SELECT['Miami']"", ""PROJECT['points that #REF score', '#1']"", ""FILTER['#2', 'in the first quarter']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_nfl_1914_ff3b66cf-74ed-4f48-ad46-1f55b6ee6dc4,How many more yard did Sanchez's 67 yard touch down compare to  Henne's 11 yard touch down?,"[""SELECT['Sanchez']"", ""PROJECT['touch down of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['sum', '#3']"", ""SELECT['Henne']"", ""PROJECT['touch down of #REF', '#5']"", ""PROJECT['yards of #REF', '#6']"", ""AGGREGATE['sum', '#7']"", ""ARITHMETIC['difference', '#4', '#8']""]","[""SELECT['Sanchez']"", ""PROJECT['touch downs of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['sum', '#3']"", ""SELECT['Henne']"", ""PROJECT['touch downs of #REF', '#5']"", ""PROJECT['yards of #REF', '#6']"", ""AGGREGATE['sum', '#7']"", ""ARITHMETIC['difference', '#4', '#8']""]"
DROP_dev_nfl_194_3ef4823f-1297-4633-92a3-54b46b7057d5,Which team won the game between the Jaguars and the Colts?,"[""SELECT['the Jaguars']"", ""SELECT['the Colts']"", ""PROJECT['game of #REF', '#1']"", ""PROJECT['game of #REF', '#2']"", ""COMPARISON['true', '#3', '#4']""]","[""SELECT['the Jaguars']"", ""SELECT['the Colts']"", ""PROJECT['game win of #REF', '#1']"", ""PROJECT['game win of #REF', '#2']"", ""COMPARISON['true', '#3', '#4']""]"
DROP_dev_nfl_194_870a66da-55ab-48c6-870a-7e3abac88339,How many field goals were kicked in total by both teams?,"[""SELECT['teams']"", ""PROJECT['field goals of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""AGGREGATE['sum', '#3']""]","[""SELECT['field goals']"", ""PROJECT['teams of #REF', '#1']"", ""GROUP['count', '#1', '#2']"", ""AGGREGATE['sum', '#3']""]"
DROP_dev_nfl_194_bdcc289c-0316-4dfa-81e9-e36e777b9a28,How many touchdowns did Marvin Harrison score in the second quarter?,"[""SELECT['Marvin Harrison']"", ""PROJECT['touchdowns of #REF', '#1']"", ""FILTER['#2', 'in the second quarter']"", ""AGGREGATE['count', '#3']""]","[""SELECT['Marvin Harrison']"", ""PROJECT['touchdown scores of #REF', '#1']"", ""FILTER['#2', 'in the second quarter']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_nfl_194_cb558cfc-9787-452a-91f7-2ff9c865f238,How many field goals over 40 yards did Adam Vinatieri kick?,"[""SELECT['Adam Vinatieri']"", ""PROJECT['field goals of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is higher than 40']"", ""AGGREGATE['count', '#4']""]","[""SELECT['Adam Vinatieri']"", ""PROJECT['field goals of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is more than 40 yards']"", ""AGGREGATE['count', '#4']""]"
DROP_dev_nfl_194_eeacc39f-b238-4dfd-8765-424be50a4cdc,Which quarterback completed fewer passes?,"[""SELECT['quarterbacks']"", ""PROJECT['passes completed of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['min', '#1', '#3']""]","[""SELECT['quarterbacks']"", ""PROJECT['passes of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['min', '#1', '#3']""]"
DROP_dev_nfl_1962_0ad88258-9b24-4733-bb73-1e32d639bec6,How many field goals did Garrett Hartley kick in the fourth quarter?,"[""SELECT['Garrett Hartley']"", ""PROJECT['field goals of #REF', '#1']"", ""FILTER['#2', 'in the fourth quarter']"", ""AGGREGATE['count', '#3']""]","[""SELECT['Garrett Hartley']"", ""PROJECT['field goals of #REF', '#1']"", ""FILTER['#2', 'in the fourth quarter']"", ""AGGREGATE['count', '#3']""]."
DROP_dev_nfl_1962_17803eae-5390-4b6e-9004-c7d0a7e5cb4e,How many field goals longer than 40-yards were completed?,"[""SELECT['field goals']"", ""PROJECT['yards of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is longer than 40-yards']"", ""AGGREGATE['count', '#3']""]","[""SELECT['field goals']"", ""FILTER['#1', 'longer than 40-yards']"", ""FILTER['#2', 'that were completed']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_nfl_1962_205dddbc-cc1a-45a8-9c98-9b88f7c169c9,Which quarterback had more yards completed on touchdown passes?,"[""SELECT['quarterbacks']"", ""PROJECT['touchdown passes of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""GROUP['sum', '#3', '#1']"", ""SUPERLATIVE['max', '#1', '#4']""]","[""SELECT['quarterbacks']"", ""PROJECT['touchdown passes of #REF', '#1']"", ""PROJECT['yards completed of #REF', '#2']"", ""GROUP['sum', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is the highest']""."
DROP_dev_nfl_1962_20fc3177-88af-4460-b053-dee560576d16,How many more touchdown passes were there compared with touchdown runs?,"[""SELECT['touchdown passes']"", ""SELECT['touchdown runs']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]","[""SELECT['touchdown passes']"", ""PROJECT['touchdown runs of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]"
DROP_dev_nfl_1962_2a170199-836f-4837-b71a-de970a53ef77,How many total yards did Hartley have?,"[""SELECT['Hartley']"", ""PROJECT['yards of #REF', '#1']"", ""AGGREGATE['sum', '#2']""]","[""SELECT['Hackerley']"", ""PROJECT['yards of #REF', '#1']"", ""AGGREGATE['sum', '#2']""]"
DROP_dev_nfl_1962_355ca7c5-b3f9-4aca-8ed6-e0b8dc745835,How many yards were scored on touchdown passes by Drew Brees?,"[""SELECT['Drew Brees']"", ""PROJECT['touchdown passes of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['sum', '#3']""]","[""SELECT['Drew Brees']"", ""PROJECT['touchdown passes of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']""]"
DROP_dev_nfl_1962_63972a8a-e5d3-4525-ae80-8e51ed47dfad,Which runningback had the longer touchdown reception?,"[""SELECT['touchdown receptions']"", ""PROJECT['longness of #REF', '#1']"", ""SUPERLATIVE['max', '#1', '#2']"", ""PROJECT['runningback of #REF', '#3']""]","[""SELECT['runningbacks']"", ""PROJECT['touchdown receptions of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is longer']""]"
DROP_dev_nfl_1962_760742ae-bcdc-4456-be66-842e6aae50d8,Which offensive player gave points to the defense?,"[""SELECT['offensive players']"", ""FILTER['#1', 'that gave points to the defense']""]","[""SELECT['offensive players']"", ""SELECT['defense']"", ""FILTER['#1', 'that gave point to #2']""]"
DROP_dev_nfl_1962_a4e1c06a-f97a-48bf-aeb6-350b0b2fdb47,How many yards longer was two shorter field goals combined than the longest one?,"[""SELECT['field goals']"", ""PROJECT['yards of #REF', '#1']"", ""AGGREGATE['max', '#2']"", ""AGGREGATE['sum', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]","[""SELECT['field goals']"", ""PROJECT['yards of #REF', '#1']"", ""AGGREGATE['max', '#2']"", ""AGGREGATE['min', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]"
DROP_dev_nfl_1962_b98a6455-138e-46df-8706-0d76779331d4,How many yards longer was the longest touchdown pass over the shortest one?,"[""SELECT['touchdown passes']"", ""PROJECT['yards of #REF', '#1']"", ""AGGREGATE['max', '#2']"", ""AGGREGATE['min', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]","[""SELECT['touchdown pass']"", ""PROJECT['yards of #REF', '#1']"", ""AGGREGATE['max', '#2']"", ""AGGREGATE['min', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]"
DROP_dev_nfl_1962_c99c1059-757c-46e7-806f-5db0c6baa3dc,How many field goals under 40-yards in length did Garret Hartley make?,"[""SELECT['Garret Hartley']"", ""PROJECT['field goals of #REF', '#1']"", ""PROJECT['lengths of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is lower than 40-yards']"", ""AGGREGATE['count', '#4']""]","[""SELECT['Garret Hartley']"", ""PROJECT['field goals of #REF', '#1']"", ""PROJECT['lengths of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is less than 40-yards']"", ""AGGREGATE['count', '#4']""]"
DROP_dev_nfl_1962_d507e61b-e062-423d-824d-b60a5338670e,How many yards were scored on rushing touchdowns in total?,"[""SELECT['rushing touchdowns']"", ""PROJECT['yards of #REF', '#1']"", ""AGGREGATE['sum', '#2']""]","[""SELECT['rushing touchdowns']"", ""PROJECT['yards scored on #REF', '#1']"", ""AGGREGATE['sum', '#2']""]"
DROP_dev_nfl_1962_f23cef01-ea02-4fcb-9abc-c0a487a075f2,How many field goals over 40-yards in length did Garret Hartley make?,"[""SELECT['Garret Hartley']"", ""PROJECT['field goals of #REF', '#1']"", ""PROJECT['lengths of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is higher than 40-yards']"", ""AGGREGATE['count', '#4']""]","[""SELECT['Garret Hartley']"", ""PROJECT['field goals of #REF', '#1']"", ""PROJECT['lengths of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is above 40-yards']"", ""AGGREGATE['count', '#4']""]"
DROP_dev_nfl_1981_c32b9ccf-b3ec-44d5-b8b2-2bda74abf00b,How many quarters did Smith play?,"[""SELECT['Smith']"", ""PROJECT['quarters played in of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['Smith']"", ""PROJECT['quarters that #REF play', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_nfl_199_eb985324-7e0d-4959-9cdf-a3a302290542,How many quarters did Dante Hall play in?,"[""SELECT['Dante Hall']"", ""PROJECT['quarters played in of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['Dante Hall']"", ""PROJECT['quarters of #REF', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_nfl_1996_0f9d7029-1ea1-4950-8c82-ba820394e52f,Which players scored a touchdown in the first two quarters?,"[""SELECT['quarters']"", ""PROJECT['the first two of #REF', '#1']"", ""PROJECT['touchdowns of #REF', '#2']"", ""PROJECT['players of #REF', '#3']""]","[""SELECT['quarters']"", ""PROJECT['the first two of #REF', '#1']"", ""PROJECT['touchdowns of #REF', '#2']"", ""PROJECT['players who scored #REF', '#3']""]"
DROP_dev_nfl_1996_c2d0c5dc-a6d9-45cf-a3db-904264b3a27a,Who scored the longest touchdown of the entire game?,"[""SELECT['touchdowns of the game']"", ""AGGREGATE['max', '#1']"", ""PROJECT['who scored #REF', '#2']""]","[""SELECT['touchdowns in the game']"", ""AGGREGATE['max', '#1']"", ""PROJECT['who scored #REF', '#2']""]"
DROP_dev_nfl_1996_d0817b74-3b67-4268-9a74-393de312f9a9,Who scored the longest touchdown of the first two quarters?,"[""SELECT['quarters']"", ""PROJECT['the first two of #REF', '#1']"", ""PROJECT['touchdowns of #REF', '#2']"", ""AGGREGATE['max', '#3']"", ""PROJECT['who scored #REF', '#4']""]","[""SELECT['touchdowns']"", ""FILTER['#1', 'in the first two quarters']"", ""AGGREGATE['max', '#2']"", ""PROJECT['who scored #REF', '#3']""]"
DROP_dev_nfl_1996_e8e12160-2151-4094-8c80-2138104bd206,How many of Phil Dawson's field goals were in the first half?,"[""SELECT['Phil Dawson']"", ""PROJECT['field goals of #REF', '#1']"", ""FILTER['#2', 'in the first half']"", ""AGGREGATE['count', '#3']""]","[""SELECT['Phil Dawson']"", ""PROJECT['field goals of #REF', '#1']"", ""FILTER['#2', 'that were in first half']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_nfl_1996_e92d782f-9cb1-4cfe-8074-bebd50e9551f,Which players scored a touchdown longer than 10 yards in the first two quarters?,"[""SELECT['quarters']"", ""PROJECT['the first two of #REF', '#1']"", ""PROJECT['touchdowns of #REF', '#2']"", ""PROJECT['yards of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is higher than 10']"", ""PROJECT['players of #REF', '#5']""]","[""SELECT['the first two quarters']"", ""PROJECT['touchdowns of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is higher than 10']"", ""PROJECT['players of #REF', '#4']""]"
DROP_dev_nfl_2034_4a62ead9-01c2-4a47-950b-5afb182afbc3,How many times did Rashard Mendenhall ruish for a td?,"[""SELECT['Rashard Mendenhall']"", ""PROJECT['td ruishes of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['Rashard Mendenhall']"", ""PROJECT['td of #REF', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_nfl_2034_aa94973c-862d-4601-be2d-65f8d131949d,How many points did Baltimore have at halftime?,"[""SELECT['Baltimore']"", ""PROJECT['points of #REF', '#1']"", ""FILTER['#2', 'at halftime']""]","[""SELECT['Baltimore']"", ""PROJECT['points that #REF had', '#1']"", ""FILTER['#2', 'at halftime']""]"
DROP_dev_nfl_2034_be649d2b-99a6-42e1-8bfa-2bea5354f22f,Who caught the Ravens touchdown pass?,"[""SELECT['the Ravens']"", ""PROJECT['touchdown pass of #REF', '#1']"", ""PROJECT['who caught #REF', '#2']""]","[""SELECT['Ravens']"", ""PROJECT['touchdown passes of #REF', '#1']"", ""PROJECT['who caught #REF', '#2']""]"
DROP_dev_nfl_2034_f62a11b1-7dbe-43a0-9d68-ec419904e770,How many yards difference was Rashard Mendenhall’s first touchdown run compared to his second touchdown run?,"[""SELECT['Rashard Mendenhall']"", ""PROJECT['touchdown runs of #REF', '#1']"", ""AGGREGATE['min', '#2']"", ""PROJECT['second of #REF', '#2']"", ""PROJECT['yards of #REF', '#3']"", ""PROJECT['yards of #REF', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['Rashard Mendenhall']"", ""PROJECT['touchdown runs of #REF', '#1']"", ""AGGREGATE['min', '#2']"", ""PROJECT['the second of #REF', '#2']"", ""PROJECT['yards of #REF', '#3']"", ""PROJECT['yards of #REF', '#4']"", ""ARITHMETIC['difference', '#6', '#5']""]"
DROP_dev_nfl_2036_3bfac5ba-c9d5-4ad3-b11f-e11469501071,How many field goals were there over 35 yards?,"[""SELECT['field goals']"", ""PROJECT['yards of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is higher than 35']"", ""AGGREGATE['count', '#3']""]","[""SELECT['field goals']"", ""PROJECT['yards of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'higher than 35']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_nfl_2036_3f07deb2-a1da-4e29-b03e-af353da5fccf,"Which kicker had fewer total yards, Carpenter or Reed?","[""SELECT['Carpenter']"", ""PROJECT['yards of #REF', '#1']"", ""AGGREGATE['sum', '#2']"", ""SELECT['Reed']"", ""PROJECT['yards of #REF', '#4']"", ""AGGREGATE['sum', '#5']"", ""COMPARISON['min', '#3', '#6']""]","[""SELECT['Carpenter']"", ""PROJECT['yards of #REF', '#1']"", ""AGGREGATE['sum', '#2']"", ""SELECT['Reeve']"", ""PROJECT['yards of #REF', '#4']"", ""AGGREGATE['sum', '#5']"", ""COMPARISON['min', '#3', '#6']""]"
DROP_dev_nfl_2036_596f8361-922d-4856-91d7-81cede7adcb2,Which team scored all the points in the first quarter?,"[""SELECT['teams']"", ""PROJECT['points scored of #REF', '#1']"", ""FILTER['#2', 'in the first quarter']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is the highest']""]","[""SELECT['teams']"", ""PROJECT['points of #REF', '#1']"", ""FILTER['#2', 'in the first quarter']"", ""GROUP['sum', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is equal to zero']""]"
DROP_dev_nfl_2036_5a6fd11f-fcbe-4711-9a96-bb0a8392483d,How many total yards did Carpenter have during the first quarter?,"[""SELECT['Carpenter']"", ""PROJECT['yards of #REF', '#1']"", ""FILTER['#2', 'during the first quarter']"", ""AGGREGATE['sum', '#3']""]","[""SELECT['Carpenter']"", ""PROJECT['yards of #REF', '#1']"", ""FILTER['#2', 'during first quarter']"", ""AGGREGATE['sum', '#3']""]"
DROP_dev_nfl_2036_6b3478d0-fca6-44b7-97a9-142b88a99796,Which quarterback had the longest touchdown pass?,"[""SELECT['touchdown passes']"", ""PROJECT['how long are #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is the highest']"", ""PROJECT['quarterback of #REF', '#3']""]","[""SELECT['touchdown passes']"", ""PROJECT['how long are #REF', '#1']"", ""SUPERLATIVE['max', '#1', '#2']"", ""PROJECT['quarterback of #REF', '#3']""]"
DROP_dev_nfl_2036_807931e3-b886-4d52-a43d-7a816febd735,Which player caught the first TD of the game?,"[""SELECT['TD of the game']"", ""AGGREGATE['min', '#1']"", ""PROJECT['player that caught #REF', '#2']""]","[""SELECT['TD of the game']"", ""AGGREGATE['min', '#1']"", ""PROJECT['player that caught #REF', '#2']?""]"
DROP_dev_nfl_2036_a87ccdc9-852a-4279-bcc5-b2f63b05ac5b,Which team was losing the game at the end of the third quarter?,"[""SELECT['teams']"", ""FILTER['#1', 'that was losing the game']"", ""FILTER['#2', 'at the end of the third quarter']""]","[""SELECT['teams']"", ""FILTER['#1', 'that was losing the game at the end of the third quarter']""]"
DROP_dev_nfl_2036_d43e8ccd-f060-4a4b-8277-d9ea3cb9abf2,Which players scored from 22 yards?,"[""SELECT['players']"", ""PROJECT['yards of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is 22']""]","[""SELECT['players']"", ""PROJECT['yards scored of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is 22']""]"
DROP_dev_nfl_2036_da09fdf5-b279-4254-a7a9-31169048fe54,how many yards did henne complete?,"[""SELECT['henne']"", ""PROJECT['completed yards of #REF', '#1']"", ""AGGREGATE['sum', '#2']""]","[""SELECT['henne']"", ""PROJECT['completes of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']""]"
DROP_dev_nfl_2042_c38d6005-07b1-4d14-b4dc-01a06576d5ad,How many total touchdowns were scored in the game?,"[""SELECT['touchdowns in the game']"", ""AGGREGATE['count', '#1']""]","[""SELECT['touchdowns in the game']"", ""AGGREGATE['count', '#1']"")""]"
DROP_dev_nfl_2054_3810ce62-35bc-4035-b084-532d754c2f86,How many touchdowns were scored in the game total?,"[""SELECT['touchdowns in the game']"", ""AGGREGATE['count', '#1']""]","[""SELECT['touchdowns scored in the game']"", ""AGGREGATE['count', '#1']""]"
DROP_dev_nfl_2054_7aa482a7-d20c-472a-b8b9-634ea2d52511,How many field goals did Rackers kick?,"[""SELECT['Rackers']"", ""PROJECT['field goals of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['Rockers']"", ""PROJECT['field goals of #REF', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_nfl_2054_80ccf374-c566-4a56-860c-9692fba51584,How many yards was Neil Rackers' shortest field goal?,"[""SELECT['Neil Rackers']"", ""PROJECT['field goals of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['min', '#3']""]","[""SELECT['Neil Rackers']"", ""PROJECT['field goals of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['max', '#3']""]"
DROP_dev_nfl_2054_c9ecfbb2-802e-4ca7-bed2-ae9134d944c1,Who scored the first points for the Chargers?,"[""SELECT['the Chargers']"", ""PROJECT['points scored of #REF', '#1']"", ""AGGREGATE['min', '#2']"", ""PROJECT['who scored #REF', '#3']""]","[""SELECT['the Chargers']"", ""PROJECT['points of #REF', '#1']"", ""AGGREGATE['min', '#2']"", ""PROJECT['who scored #REF', '#3']""]"
DROP_dev_nfl_2067_1d2dd079-b1bf-4177-8491-f9b80a695a92,How many more touchdowns did Moore get compared to Smith?,"[""SELECT['Moore']"", ""PROJECT['touchdowns of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""SELECT['Smith']"", ""PROJECT['touchdowns of #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""ARITHMETIC['difference', '#3', '#6']""]","[""SELECT['Moore']"", ""SELECT['Smith']"", ""PROJECT['touchdowns of #REF', '#1']"", ""PROJECT['touchdowns of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]"
DROP_dev_nfl_2067_4cc640bb-b25d-4fd8-9c68-ade91cc720ad,Which team returned an interception for a touchdown?,"[""SELECT['interceptions']"", ""PROJECT['touchdown returns of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is at least one']"", ""PROJECT['team of #REF', '#4']""]","[""SELECT['interceptions']"", ""PROJECT['touchdown returns of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is one']"", ""PROJECT['team of #REF', '#4']""]"
DROP_dev_nfl_2067_50e80b23-9b53-4368-929a-1e6582ae7f2c,who is the 49ers quarterback?,"[""SELECT['the 49ers']"", ""PROJECT['quarterback of #REF', '#1']""]","[""SELECT['the 49ers']"", ""PROJECT['quarterbacks of #REF', '#1']""."
DROP_dev_nfl_2067_5b2d8596-4f3f-48e2-891f-2114812cba8c,How many yards was Kasay's shortest field goal?,"[""SELECT['Kasay']"", ""PROJECT['field goals of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['min', '#3']""]","[""SELECT['Kasay']"", ""PROJECT['field goals of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['min', '#3']""]."
DROP_dev_nfl_2067_6f0bfd60-02d4-4e64-aecb-76f92f201980,How many field goals did Jow Nedney kick?,"[""SELECT['Jow Nedney']"", ""PROJECT['field goals of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['Jow Nedney']"", ""PROJECT['field goals of #REF', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_nfl_2067_74130560-e1e1-4e68-8014-9d819bc4801b,How many field goals were made in the game/,"[""SELECT['field goals']"", ""AGGREGATE['count', '#1']""]","[""SELECT['field goals in the game']"", ""AGGREGATE['count', '#1']""]"
DROP_dev_nfl_2067_84183dc6-423a-444e-9697-66d3f32073c5,How many touchdowns did Gettis score?,"[""SELECT['Gettis']"", ""PROJECT['touchdowns of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['Gitis']"", ""PROJECT['touchdowns of #REF', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_nfl_2067_ac7ee36c-8ed1-4e73-894b-ba12c148e2eb,who is the panthers quarterback?,"[""SELECT['the panthers']"", ""PROJECT['quarterback of #REF', '#1']""]","[""SELECT['panders']"", ""PROJECT['quarterback of #REF', '#1']""]"
DROP_dev_nfl_2067_d7739af3-b257-4832-913f-f7a9516facca,Who else besides Moore completed TD pass?,"[""SELECT['Moore']"", ""PROJECT['TD pass of #REF', '#1']"", ""PROJECT['who completed #REF', '#2']"", ""DISCARD['#3', '#1']""]","[""SELECT['Moore']"", ""PROJECT['TD passes of #REF', '#1']"", ""PROJECT['who completed #REF', '#2']"", ""DISCARD['#3', '#1']""]"
DROP_dev_nfl_2067_f303e14b-de0e-4937-9f0a-69a8a35c945e,How many field goals did Kasay kick?,"[""SELECT['Kasay']"", ""PROJECT['field goals of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['Kasay']"", ""PROJECT['field goals that #REF did kick', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_nfl_2077_317ff0b0-6480-4cf5-af21-e2842323bc2a,Which player had the first rushing touchdown?,"[""SELECT['rushing touchdowns']"", ""AGGREGATE['min', '#1']"", ""PROJECT['player of #REF', '#2']""]","[""SELECT['rushing touchdowns']"", ""AGGREGATE['min', '#1']"", ""PROJECT['player who had #REF', '#2']""]"
DROP_dev_nfl_2077_645f706b-5ab0-432d-90ab-5a9fc679023b,How many points did Orton throw for in the fourth quarter?,"[""SELECT['Orton']"", ""PROJECT['points of #REF', '#1']"", ""FILTER['#2', 'in the fourth quarter']"", ""AGGREGATE['sum', '#3']""]","[""SELECT['Orton']"", ""PROJECT['points throw for of #REF', '#1']"", ""FILTER['#2', 'in the fourth quarter']""]"
DROP_dev_nfl_2077_abde882c-56cb-4894-9767-616f2684cc95,Which WR had the shortest touchdown catch?,"[""SELECT['touchdown catches']"", ""AGGREGATE['min', '#1']"", ""PROJECT['WR of #REF', '#2']""]","[""SELECT['WR']"", ""PROJECT['touchdown catches of #REF', '#1']"", ""SUPERLATIVE['min', '#1', '#2']""]"
DROP_dev_nfl_2077_bae6a364-518a-4923-bc1e-3619be4456db,How many 1-yard TDs were in the game?,"[""SELECT['TDs in the game']"", ""FILTER['#1', 'that were 1-yard']"", ""AGGREGATE['count', '#2']""]","[""SELECT['TDs']"", ""PROJECT['yards of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is 1-yard']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_nfl_2077_ceb2872d-d166-4390-80d6-64f98138b3af,Which QB had the longest rushing TD?,"[""SELECT['rushing TD']"", ""AGGREGATE['max', '#1']"", ""PROJECT['QB of #REF', '#2']""]","[""SELECT['rushing TDs']"", ""AGGREGATE['max', '#1']"", ""PROJECT['QB of #REF', '#2']""]"
DROP_dev_nfl_2077_de5d18f2-f352-46b8-902d-5544f303d057,Who were the Broncos playing?,"[""SELECT['the Broncos']"", ""PROJECT['who were playing #REF', '#1']""]","[""SELECT['the Broncos']"", ""PROJECT['who were playing of #REF', '#1']""."
DROP_dev_nfl_2077_dee4ae17-51ba-4e39-9e36-3d9dad7102af,How many points did the Seahawks score by halftime?,"[""SELECT['the Seahawks']"", ""PROJECT['points scored of #REF', '#1']"", ""FILTER['#2', 'by halftime']"", ""AGGREGATE['count', '#3']""]","[""SELECT['the Seahawks']"", ""PROJECT['points scored by halftime of #REF', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_nfl_2077_f5ff3679-039b-4d31-ba9c-2b23bcdcf134,How many more rushing touchdowns were scored when compared to passing?,"[""SELECT['rushing touchdowns']"", ""SELECT['passing touchdowns']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]","[""SELECT['rushing touchdowns scored']"", ""SELECT['passing touchdowns scored']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""ARITHMETIC['difference', '#3', '#4']?""]"
DROP_dev_nfl_2082_0913d580-7729-4190-8624-6e04ac927c54,Which team trailed at halftime?,"[""SELECT['teams']"", ""FILTER['#1', 'that trailed at halftime']""]","[""SELECT['teams']"", ""FILTER['#1', 'that trailed']"", ""FILTER['#2', 'at halftime']""]"
DROP_dev_nfl_2082_1245b338-e244-40a0-ba81-0e9d740a28ae,how many yards did janikowski make?,"[""SELECT['janikowski']"", ""PROJECT['yards of #REF', '#1']"", ""AGGREGATE['sum', '#2']""]","[""SELECT['janikowski']"", ""PROJECT['yards made of #REF', '#1']"", ""AGGREGATE['sum', '#2']""]"
DROP_dev_nfl_2082_7e988d9c-b985-4285-be19-5bffe5c2a00f,how many yards did bush make?,"[""SELECT['bush']"", ""PROJECT['yards of #REF', '#1']"", ""AGGREGATE['sum', '#2']""]","[""SELECT['bushes']"", ""PROJECT['yards of #REF', '#1']"", ""AGGREGATE['sum', '#2']""]"
DROP_dev_nfl_2082_9ddbfa72-8896-4edc-92de-b61286bab102,How many field goals did Sebastian Janikowski score in the first quarter?,"[""SELECT['Sebastian Janikowski']"", ""PROJECT['field goals of #REF', '#1']"", ""FILTER['#2', 'in the first quarter']"", ""AGGREGATE['count', '#3']""]","[""SELECT['Sebastian Janikowski']"", ""PROJECT['field goals that #REF score', '#1']"", ""FILTER['#2', 'in the first quarter']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_nfl_2082_ae57cb5f-7ba9-4874-9c08-d1f766f25eea,How many field goals did the raiders score all game?,"[""SELECT['the raiders']"", ""PROJECT['field goals of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['field goals']"", ""FILTER['#1', 'of raiders']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_nfl_2082_e96eae9c-6db3-4534-a7ae-570c8bb9450f,"Which player scored more field goals, Sebastian Janikowski or Olindo Mare?","[""SELECT['Sebastian Janikowski']"", ""SELECT['Olindo Mare']"", ""PROJECT['field goals of #REF', '#1']"", ""PROJECT['field goals of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""COMPARISON['max', '#5', '#6']""]","[""SELECT['Sebastian Janikowski']"", ""PROJECT['field goals scored of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""SELECT['Olindo Mare']"", ""PROJECT['field goals scored of #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""COMPARISON['max', '#3', '#6']""]"
DROP_dev_nfl_2114_19f66ea5-9c82-443f-8d98-342cce8ae7dc,How many more yards was Heap's touchdown catch than Mason's catch?,"[""SELECT['Heap']"", ""SELECT['Mason']"", ""PROJECT['touchdown catch of #REF', '#1']"", ""PROJECT['touchdown catch of #REF', '#2']"", ""PROJECT['yards of #REF', '#3']"", ""PROJECT['yards of #REF', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['Hap']"", ""PROJECT['touchdown catch of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""SELECT['Mason']"", ""PROJECT['touchdown catch of #REF', '#4']"", ""PROJECT['yards of #REF', '#5']"", ""ARITHMETIC['difference', '#3', '#6']""]"
DROP_dev_nfl_2114_28553293-d719-441b-8f00-ce3dc6df5398,"Who caught the shorter touchdown pass, Todd Heap or Derrick Mason/","[""SELECT['Todd Heap']"", ""SELECT['Derrick Mason/']"", ""PROJECT['touchdown catch of #REF', '#1']"", ""PROJECT['touchdown catch of #REF', '#2']"", ""PROJECT['how short was #REF', '#3']"", ""PROJECT['how short was #REF', '#4']"", ""COMPARISON['min', '#5', '#6']""]","[""SELECT['Todd Heap']"", ""PROJECT['touchdown catch of #REF', '#1']"", ""PROJECT['how short was #REF', '#2']"", ""SELECT['Derrick Mason/']"", ""PROJECT['touchdown catch of #REF', '#4']"", ""PROJECT['how short was #REF', '#5']"", ""COMPARISON['min', '#3', '#6']""]"
DROP_dev_nfl_2114_7251a013-1120-44ee-8b94-b2d0c63e7b66,How many points did the Ravens have at the half?,"[""SELECT['the Ravens']"", ""PROJECT['points of #REF', '#1']"", ""FILTER['#2', 'at the half']""]","[""SELECT['the Ravens']"", ""PROJECT['points that #REF have', '#1']"", ""FILTER['#2', 'at the half']""]"
DROP_dev_nfl_2114_728fa7eb-e239-4893-9a6c-d11e21763609,Who threw a longer touchdown pass Freeman or Flacco?,"[""SELECT['Freeman']"", ""SELECT['Flacco']"", ""PROJECT['touchdown pass of #REF', '#1']"", ""PROJECT['touchdown pass of #REF', '#2']"", ""PROJECT['how long was #REF', '#3']"", ""PROJECT['how long was #REF', '#4']"", ""COMPARISON['max', '#5', '#6']""]","[""SELECT['Freeman']"", ""SELECT['Flacco']"", ""PROJECT['touchdown passes of #REF', '#1']"", ""PROJECT['touchdown passes of #REF', '#2']"", ""PROJECT['how long are #REF', '#3']"", ""PROJECT['how long are #REF', '#4']"", ""COMPARISON['max', '#5', '#6']""]"
DROP_dev_nfl_2114_befb6c41-06b0-4d3f-b9fa-4e9a32c2277a,How many yards was Joe Flacco's second touchdown pass?,"[""SELECT['Joe Flacco']"", ""PROJECT['touchdown passes of #REF', '#1']"", ""PROJECT['second of #REF', '#2']"", ""PROJECT['yards of #REF', '#3']""]","[""SELECT['Joe Flacco']"", ""PROJECT['touchdown pass of #REF', '#1']"", ""PROJECT['second of #REF', '#2']"", ""PROJECT['yards of #REF', '#3']""]"
DROP_dev_nfl_2114_c83a8a91-aa08-492a-8a00-85595fd862ba,How many touch downs were scored in the first quarter?,"[""SELECT['touch downs']"", ""FILTER['#1', 'that were scored in the first quarter']"", ""AGGREGATE['count', '#2']""]","[""SELECT['touch downs']"", ""FILTER['#1', 'that were scored in first quarter']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_nfl_2114_f88e7c37-0e2e-4c0e-a2b1-30d1ac3b71a1,How many touchdowns did Flacco score in the first half?,"[""SELECT['Flacco']"", ""PROJECT['touchdowns of #REF', '#1']"", ""FILTER['#2', 'in the first half']"", ""AGGREGATE['count', '#3']""]","[""SELECT['Flacco']"", ""PROJECT['touchdowns of #REF', '#1']"", ""FILTER['#2', 'that are in the first half']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_nfl_2114_f9858a78-bee5-4d15-874d-1ee04343a2df,Which team had the least points at halftime?,"[""SELECT['teams']"", ""PROJECT['points of #REF', '#1']"", ""FILTER['#2', 'at halftime']"", ""SUPERLATIVE['min', '#1', '#3']""]","[""SELECT['teams']"", ""PROJECT['points at halftime of #REF', '#1']"", ""SUPERLATIVE['min', '#1', '#2']""]"
DROP_dev_nfl_2125_3b4fe3ce-46e8-4fc3-8d8c-40d1efc82341,Who threw an interception for a touchdown?,"[""SELECT['interceptions']"", ""FILTER['#1', 'that are for touchdowns']"", ""PROJECT['who threw #REF', '#2']""]","[""SELECT['interceptions']"", ""FILTER['#1', 'that are for touchdowns']"", ""PROJECT['who threw #REF', '#2']?""]"
DROP_dev_nfl_2125_443620bd-6069-408d-ad13-915a9eea6800,How many points did the Eagles have at the half?,"[""SELECT['the Eagles']"", ""PROJECT['points of #REF', '#1']"", ""FILTER['#2', 'at the half']""]","[""SELECT['Eagles']"", ""PROJECT['points of #REF', '#1']"", ""FILTER['#2', 'at the half']""]"
DROP_dev_nfl_2125_7f995e5b-d270-4293-b3f9-bfb499b1a1da,How many touchdowns did Kenny Britt score?,"[""SELECT['Kenny Britt']"", ""PROJECT['touchdowns of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['Kenny Britt']"", ""PROJECT['touchdown scores of #REF', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_nfl_2125_92420219-58dd-4c72-87cb-8804cbb50927,How many points did the eagles get on the board with??,"[""SELECT['the eagles']"", ""PROJECT['points on the board of #REF', '#1']""]","[""SELECT['the eagles']"", ""PROJECT['points of #REF', '#1']""]"
DROP_dev_nfl_2125_c95ac764-33f0-423b-815f-c4d9cfd125bb,How many points did the Titans have at the half?,"[""SELECT['the Titans']"", ""PROJECT['points of #REF', '#1']"", ""FILTER['#2', 'at the half']""]","[""SELECT['the Titans']"", ""PROJECT['points at the half of #REF', '#1']""]"
DROP_dev_nfl_2125_ed4c439e-9904-4e4e-b58b-d22ba2811d00,How many points combined did both teams score in the third quarter?,"[""SELECT['teams']"", ""PROJECT['points scored of #REF', '#1']"", ""FILTER['#2', 'in the third quarter']"", ""AGGREGATE['count', '#3']""]","[""SELECT['teams']"", ""PROJECT['points of #REF', '#1']"", ""FILTER['#2', 'in the third quarter']"", ""AGGREGATE['sum', '#3']""]"
DROP_dev_nfl_2151_163fc8dd-a727-419c-a7ad-81e865047869,How many field goal attempts did Billy Cundiff make?,"[""SELECT['Billy Cundiff']"", ""PROJECT['field goal attempts of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['Billy Cundiff']"", ""PROJECT['field goals of #REF', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_nfl_2151_2cf40f99-789c-4530-ade1-a3f3aff3ca6c,How many yards in length was the average first quarter touchdown scored by Torrey Smith?,"[""SELECT['Torrey Smith']"", ""PROJECT['touchdowns of #REF', '#1']"", ""FILTER['#2', 'in the first quarter']"", ""PROJECT['yards of #REF', '#3']"", ""AGGREGATE['avg', '#4']""]","[""SELECT['Torey Smith']"", ""PROJECT['touchdowns of #REF', '#1']"", ""FILTER['#2', 'in the first quarter']"", ""PROJECT['yards of #REF', '#3']"", ""AGGREGATE['avg', '#4']""]"
DROP_dev_nfl_2151_3a0d7e4a-0bde-4023-a1fd-10fc531c7919,How many touchdowns did the Flacco score in the first quarter?,"[""SELECT['Flacco']"", ""PROJECT['touchdowns of #REF', '#1']"", ""FILTER['#2', 'in the first quarter']"", ""AGGREGATE['count', '#3']""]","[""SELECT['the Flacco']"", ""PROJECT['touchdowns of #REF', '#1']"", ""FILTER['#2', 'in the first quarter']"", ""AGGREGATE['count', '#3']""]."
DROP_dev_nfl_2151_5def2055-0070-4513-8874-8612ecb50b12,How many touchdowns did Ngata score?,"[""SELECT['Ngata']"", ""PROJECT['touchdowns of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['Ngata']"", ""PROJECT['touchdown of #REF', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_nfl_2151_7c22b24e-6025-4343-ba27-d63cd2eb3527,who lead the first quarter?,"[""SELECT['the first quarter']"", ""PROJECT['who lead #REF', '#1']""]","[""SELECT['the first quarter']"", ""PROJECT['who lead #REF', '#1']""]"
DROP_dev_nfl_2151_886fad12-d18d-44cf-b83f-dc31de276144,Which was Flacco's longest touchdown pass in the first quarter?,"[""SELECT['Flacco']"", ""PROJECT['touchdown passes of #REF', '#1']"", ""FILTER['#2', 'in the first quarter']"", ""AGGREGATE['max', '#3']""]","[""SELECT['Flacco']"", ""PROJECT['touchdown passes of #REF', '#1']"", ""FILTER['#2', 'that are in the first quarter']"", ""AGGREGATE['max', '#3']""."
DROP_dev_nfl_2151_9cf58332-1508-4190-bddf-5567a7d11483,How many of Flacco's passes to Smith were in the first quarter?,"[""SELECT['Flacco']"", ""PROJECT['passes of #REF', '#1']"", ""FILTER['#2', 'to Smith']"", ""FILTER['#3', 'in the first quarter']"", ""AGGREGATE['count', '#4']""]","[""SELECT['Flacco']"", ""PROJECT['passes of #REF', '#1']"", ""FILTER['#2', 'in the first quarter']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_nfl_2151_9fe99f6c-016f-4962-9486-37ea340501b4,Which team scored the most points all game?,"[""SELECT['teams']"", ""PROJECT['points scored of #REF', '#1']"", ""GROUP['sum', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']""]","[""SELECT['teams']"", ""PROJECT['points scored of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']""]"
DROP_dev_nfl_2151_b50c66f7-d4af-406e-be6f-9e7d50a117c8,How many total field goal yards did Billy Cundiff miss on?,"[""SELECT['Billy Cundiff']"", ""PROJECT['field goals of #REF', '#1']"", ""PROJECT['misses of #REF', '#2']"", ""PROJECT['yards of #REF', '#3']"", ""AGGREGATE['sum', '#4']""]","[""SELECT['Billy Cundiff']"", ""PROJECT['missed field goal of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['sum', '#3']""]"
DROP_dev_nfl_2151_dba67fbf-8235-4fb0-b039-74b559b471de,How many touchdowns did the Rams score in the third quarter?,"[""SELECT['the Rams']"", ""PROJECT['touchdowns of #REF', '#1']"", ""FILTER['#2', 'in the third quarter']"", ""AGGREGATE['count', '#3']""]","[""SELECT['the Rams']"", ""PROJECT['touchdowns of #REF', '#1']"", ""FILTER['#2', 'that were in the third quarter']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_nfl_2151_dcc7f2db-c3a5-41ba-9678-dee552387ac5,How many unsuccessful field goals did Billy Cundiff have?,"[""SELECT['Billy Cundiff']"", ""PROJECT['field goals of #REF', '#1']"", ""FILTER['#2', 'that are unsuccessful']"", ""AGGREGATE['count', '#3']""]","[""SELECT['Billy Cundiff']"", ""PROJECT['field goals of #REF', '#1']"", ""FILTER['#2', 'that were unsuccessful']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_nfl_2151_f1a548ca-f24c-4b26-9ddb-fa8f0fa38a1a,How many more yards did Torrey Smith gain on touchdown receptions relative to Brandon Gibson?,"[""SELECT['Torrey Smith']"", ""PROJECT['touchdown receptions of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['sum', '#3']"", ""SELECT['Brandon Gibson']"", ""PROJECT['touchdown receptions of #REF', '#5']"", ""PROJECT['yards of #REF', '#6']"", ""AGGREGATE['sum', '#7']"", ""ARITHMETIC['difference', '#4', '#8']""]","[""SELECT['Torey Smith']"", ""SELECT['Brandon Gibson']"", ""PROJECT['touchdown receptions of #REF', '#1']"", ""PROJECT['touchdown receptions of #REF', '#2']"", ""PROJECT['yards of #REF', '#3']"", ""PROJECT['yards of #REF', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]"
DROP_dev_nfl_2151_f95586f4-755f-453e-85c9-7e5dff42efe3,How many total touchdown pass yards did Flacco have in the first quarter?,"[""SELECT['Flacco']"", ""PROJECT['touchdown passes of #REF', '#1']"", ""FILTER['#2', 'in the first quarter']"", ""PROJECT['yards of #REF', '#3']"", ""AGGREGATE['sum', '#4']""]","[""SELECT['Flacco']"", ""PROJECT['touchdown passes of #REF', '#1']"", ""FILTER['#2', 'in the first quarter']"", ""PROJECT['yards of #REF', '#3']"", ""AGGREGATE['sum', '#4']""]-"
DROP_dev_nfl_2191_209ad0b1-2198-4ca1-a170-1b9f14fe449b,How many field goal kicks were missed?,"[""SELECT['field goals']"", ""FILTER['#1', 'that were missed']"", ""AGGREGATE['count', '#2']""]","[""SELECT['field goals']"", ""FILTER['#1', 'which were missed']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_nfl_2191_bc22e45a-cda4-46dd-a1fa-5b982f95417a,How many more field goals did Dan Carpenter convert than Matt Prater?,"[""SELECT['Dan Carpenter']"", ""SELECT['Matt Prater']"", ""PROJECT['field goals of #REF', '#1']"", ""PROJECT['field goals of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]","[""SELECT['Dan Carpenter']"", ""PROJECT['field goals of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""SELECT['Matt Prater']"", ""PROJECT['field goals of #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""ARITHMETIC['difference', '#3', '#6']""]"
DROP_dev_nfl_2191_f19dd4b6-3063-48c1-adb8-739df0bdba4f,How many yards longer was Dan Carpenter's longest field goal than his shortest?,"[""SELECT['Dan Carpenter']"", ""PROJECT['field goals of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['max', '#3']"", ""AGGREGATE['min', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]","[""SELECT['Dan Carpenter']"", ""PROJECT['field goal of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['max', '#3']"", ""AGGREGATE['min', '#3']"", ""ARITHMETIC['difference', '#4', '#5']""]"
DROP_dev_nfl_2197_0ff2f7ee-5a11-4a2b-8c3e-caed6a8671a0,how many yards did longwell make?,"[""SELECT['longwell']"", ""PROJECT['yards of #REF', '#1']"", ""AGGREGATE['sum', '#2']""]","[""SELECT['longwell']"", ""PROJECT['yards that #REF make', '#1']"", ""AGGREGATE['sum', '#2']""]"
DROP_dev_nfl_2197_1ba85d34-afd6-41ea-82ce-15375a47d554,how many yards did ponder get?,"[""SELECT['ponder']"", ""PROJECT['yards of #REF', '#1']"", ""AGGREGATE['sum', '#2']""]","[""SELECT['ponders']"", ""PROJECT['yards of #REF', '#1']"", ""AGGREGATE['sum', '#2']""]"
DROP_dev_nfl_2197_3a5b5c90-7263-4df1-9094-5c38548147e3,how many yards did mcgahee rush?,"[""SELECT['mcgahee']"", ""PROJECT['rushing yards of #REF', '#1']"", ""AGGREGATE['sum', '#2']""]","[""SELECT['mcgahee']"", ""PROJECT['rush yards of #REF', '#1']"", ""AGGREGATE['sum', '#2']""]"
DROP_dev_nfl_2197_4e3c3364-e138-4856-bc90-b67d717fe262,Which team beat San Diego the week prior?,"[""SELECT['San Diego']"", ""PROJECT['team that beat #REF', '#1']"", ""FILTER['#2', 'the week prior']""]","[""SELECT['San Diego']"", ""PROJECT['team that beat #REF', '#1']"", ""FILTER['#2', 'in the week prior']""]"
DROP_dev_nfl_2197_6d0e1520-8c1d-46d8-812e-e3a33e3993c4,How many field goals did Longwell score in the first half?,"[""SELECT['Longwell']"", ""PROJECT['field goals of #REF', '#1']"", ""FILTER['#2', 'in the first half']"", ""AGGREGATE['count', '#3']""]","[""SELECT['Longwell']"", ""PROJECT['field goals #REF did score', '#1']"", ""FILTER['#2', 'in the first half']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_nfl_2197_a0555e2e-d0a1-4c3b-bfa9-834fef7f90c9,how many yards did the broncos respond with?,"[""SELECT['the broncos']"", ""PROJECT['yards of #REF', '#1']"", ""AGGREGATE['sum', '#2']""]","[""SELECT['broncos']"", ""PROJECT['yards that #REF respond with', '#1']"", ""AGGREGATE['sum', '#2']""]"
DROP_dev_nfl_2197_bf2cd339-1f66-47d9-8624-e535944211b2,how many yards did ponder throw?,"[""SELECT['ponder']"", ""PROJECT['throw of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['sum', '#3']""]","[""SELECT['ponder']"", ""PROJECT['yards of #REF', '#1']"", ""AGGREGATE['sum', '#2']""]"
DROP_dev_nfl_2234_035e60dc-9fd7-4a6e-924d-3ccd731ebaa3,What is the Colts current wins for the season?,"[""SELECT['Colts']"", ""PROJECT['wins of #REF', '#1']"", ""FILTER['#2', 'in the season']"", ""PROJECT['current of #REF', '#3']""]","[""SELECT['Colts']"", ""PROJECT['wins of #REF', '#1']"", ""FILTER['#2', 'in the season']"", ""AGGREGATE['current', '#3']""]"
DROP_dev_nfl_2234_190741ed-4f65-4fd8-98e4-a609046fcccf,How many field goals did Bironas kick in the first quarter?,"[""SELECT['Bironas']"", ""PROJECT['field goals of #REF', '#1']"", ""FILTER['#2', 'in the first quarter']"", ""AGGREGATE['count', '#3']""]","[""SELECT['Bironas']"", ""PROJECT['field goals that #REF kick', '#1']"", ""FILTER['#2', 'in the first quarter']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_nfl_2234_2e080a3c-46e3-4f73-81a8-59a221799c64,"What were the distances, in yards, of the Rob Bironas field goal makes?","[""SELECT['Rob Bironas']"", ""PROJECT['field goal of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']""]","[""SELECT['Rob Bironas']"", ""PROJECT['field goal of #REF', '#1']"", ""PROJECT['the yards of #REF', '#2']""]"
DROP_dev_nfl_2234_50615917-af5a-415f-bd18-41b6c4cd78e4,How many field goals did Vinatieri kick in the second half?,"[""SELECT['Vinatieri']"", ""PROJECT['field goals of #REF', '#1']"", ""FILTER['#2', 'in the second half']"", ""AGGREGATE['count', '#3']""]","[""SELECT['Vinatieri']"", ""PROJECT['field goals of #REF', '#1']"", ""FILTER['#2', 'that were in second half']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_nfl_2234_79c7f80e-6c67-4710-8d2b-d1db507814cc,How many field goals did Rob Bironas make?,"[""SELECT['Rob Bironas']"", ""PROJECT['field goals of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['Rob Bironas']"", ""PROJECT['field goals made of #REF', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_nfl_2234_8eba957c-9814-411f-b488-5f3f4719de06,How many points for the winning side?,"[""SELECT['the winning side']"", ""PROJECT['points of #REF', '#1']""]","[""SELECT['the winning side']"", ""PROJECT['points for #REF', '#1']""]"
DROP_dev_nfl_2234_94ad8f6c-d46c-4ca1-8200-4c6b94e1add0,How many points for the former was there after the McCourty touchdown?,"[""SELECT['the former']"", ""PROJECT['points of #REF', '#1']"", ""FILTER['#2', 'after the McCourty touchdown']""]","[""SELECT['the former']"", ""PROJECT['points of #REF', '#1']"", ""FILTER['#2', 'that was after the McCourty touchdown']""]"
DROP_dev_nfl_2234_95d3a1ab-939a-4a83-a6c1-30aeff0cbef0,How many points for the latter was there after the McCourty touchdown?,"[""SELECT['the latter']"", ""PROJECT['points of #REF', '#1']"", ""FILTER['#2', 'after the McCourty touchdown']""]","[""SELECT['the latter']"", ""PROJECT['points of #REF', '#1']"", ""FILTER['#2', 'after the touchdown of McCourty']""]"
DROP_dev_nfl_2234_9ba3fa46-1ff6-4cdb-9f5e-5d5019d3dc38,What is the Colts current amount of losses?,"[""SELECT['Colts']"", ""PROJECT['losses of #REF', '#1']"", ""AGGREGATE['avg', '#2']""]","[""SELECT['Colts']"", ""PROJECT['losses of #REF', '#1']"", ""AGGREGATE['current amount', '#2']""]"
DROP_dev_nfl_2234_a84ce0be-5c4a-4d77-a805-a0f94dd5faba,How many points were scored in total when the game went final?,"[""SELECT['points']"", ""FILTER['#1', 'when the game went final']"", ""AGGREGATE['sum', '#2']""]","[""SELECT['points']"", ""FILTER['#1', 'when game went final']"", ""AGGREGATE['sum', '#2']""]"
DROP_dev_nfl_2234_a929d4a2-7659-4aad-86a7-6eecf9324d8c,How many field goals did Vinatieri kick in the third quarter?,"[""SELECT['Vinatieri']"", ""PROJECT['field goals of #REF', '#1']"", ""FILTER['#2', 'in the third quarter']"", ""AGGREGATE['count', '#3']""]","[""SELECT['Vinatieri']"", ""PROJECT['field goals that #REF kicks', '#1']"", ""FILTER['#2', 'in the third quarter']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_nfl_2234_acb01589-a06b-4865-a78a-064b2dce838c,How many field goals did Bironas kick in the first half?,"[""SELECT['Bironas']"", ""PROJECT['field goals of #REF', '#1']"", ""FILTER['#2', 'in the first half']"", ""AGGREGATE['count', '#3']""]","[""SELECT['Bironas']"", ""PROJECT['field goals #REF did kick', '#1']"", ""FILTER['#2', 'in the first half']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_nfl_2255_534b41c5-1448-4a13-8d68-af9e23217607,How many points did the Patriots score in the 4th quarter?,"[""SELECT['the Patriots']"", ""PROJECT['points scored of #REF', '#1']"", ""FILTER['#2', 'in the 4th quarter']"", ""AGGREGATE['count', '#3']""]","[""SELECT['Patriots']"", ""PROJECT['points scored of #REF', '#1']"", ""FILTER['#2', 'in the 4th quarter']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_nfl_2255_6e127fb1-8bd1-420d-9680-be5d8dd4182c,How many field goals did  Adam Vinateri make?,"[""SELECT['Adam Vinateri']"", ""PROJECT['field goals of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['Adam Vinateri']"", ""PROJECT['field goals #REF did make', '#1']"", ""AGGREGATE['count', '#2']""]"
DROP_dev_nfl_2255_7363a147-a310-47b2-b873-433fc9570716,How many touchdowns did the Colts score in the third quarter?,"[""SELECT['Colts']"", ""PROJECT['touchdowns of #REF', '#1']"", ""FILTER['#2', 'in the third quarter']"", ""AGGREGATE['count', '#3']""]","[""SELECT['Colts']"", ""PROJECT['touchdowns of #REF', '#1']"", ""FILTER['#2', 'that are in third quarter']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_nfl_2255_7cf9bc14-f919-4e3c-a313-098e063e48fd,Which player caught two touchdown passes in the third quarter?,"[""SELECT['touchdown passes']"", ""FILTER['#1', 'in the third quarter']"", ""PROJECT['players of #REF', '#2']"", ""GROUP['count', '#2', '#3']"", ""COMPARATIVE['#3', '#4', 'is two']""]","[""SELECT['touchdown passes']"", ""FILTER['#1', 'in the third quarter']"", ""PROJECT['players that caught #REF', '#2']""]"
DROP_dev_nfl_2255_958bdcf2-7ad2-4ec4-96cb-f89e03867742,How many more TD passes did Brady have than Orlovsky?,"[""SELECT['Brady']"", ""PROJECT['TD passes of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""SELECT['Orlovsky']"", ""PROJECT['TD passes of #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""ARITHMETIC['difference', '#3', '#6']""]","[""SELECT['Brady']"", ""SELECT['Orlovsky']"", ""PROJECT['TD passes of #REF', '#1']"", ""PROJECT['TD passes of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['difference', '#5', '#6']""]"
DROP_dev_nfl_2255_a6117d57-8f80-40f0-9a02-0bd4778509fa,What were the distances of the td receptions by Rob Gronkowski?,"[""SELECT['Rob Gronkowski']"", ""PROJECT['td receptions of #REF', '#1']"", ""PROJECT['distances of #REF', '#2']""]","[""SELECT['Rob Gronkowski']"", ""PROJECT['td receptions by #REF', '#1']"", ""PROJECT['distances of #REF', '#2']""]"
DROP_dev_nfl_2255_e31440da-a85c-4e8e-995a-03049fd23831,Which player made the first scoring play?,"[""SELECT['scoring plays']"", ""AGGREGATE['min', '#1']"", ""PROJECT['player of #REF', '#2']""]","[""SELECT['scoring plays']"", ""AGGREGATE['min', '#1']"", ""PROJECT['who made #REF', '#2']""]"
DROP_dev_nfl_2262_78f903a9-c9bc-4c21-876a-b955f331cce8,How many losses did the Saints have coming into this game?,"[""SELECT['the Saints']"", ""PROJECT['losses coming into this game of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['Saints']"", ""PROJECT['losses of #REF', '#1']"", ""FILTER['#2', 'coming into this game']"", ""AGGREGATE['count', '#3']""]"
DROP_dev_nfl_2269_270d749a-d574-4469-b76d-39a384d24edd,"Which quarterback threw for more yards, Moore or Manning?","[""SELECT['Moore']"", ""PROJECT['yards of #REF', '#1']"", ""AGGREGATE['sum', '#2']"", ""SELECT['Manning']"", ""PROJECT['yards of #REF', '#4']"", ""AGGREGATE['sum', '#5']"", ""COMPARISON['max', '#3', '#6']""]","[""SELECT['Monaco']"", ""PROJECT['yards of #REF', '#1']"", ""AGGREGATE['sum', '#2']"", ""SELECT['Manning']"", ""PROJECT['yards of #REF', '#4']"", ""AGGREGATE['sum', '#5']"", ""COMPARISON['max', '#3', '#6']""]"
DROP_dev_nfl_2269_751d3b8d-7994-4497-95ca-9a27ab58af68,How many points were the Giants behind the Dolphins at the start of the 4th quarter?,"[""SELECT['the Giants']"", ""SELECT['the Dolphins']"", ""PROJECT['points behind #REF', '#1']"", ""FILTER['#2', 'at the start of the 4th quarter']"", ""AGGREGATE['sum', '#3']""]","[""SELECT['the Giants']"", ""PROJECT['points behind the Dolphins of #REF', '#1']"", ""FILTER['#2', 'at the start of the 4th quarter']""]"
DROP_dev_nfl_227_011d1a62-e157-4ae4-a3a9-0c5fc8b7f705,How many more yards was Longwell's longest field goal over his second longest one?,"[""SELECT['Longwell']"", ""PROJECT['field goals of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['max', '#3']"", ""DISCARD['#3', '#4']"", ""AGGREGATE['max', '#5']"", ""ARITHMETIC['difference', '#4', '#6']""]","[""SELECT['Longwell']"", ""PROJECT['field goals of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['max', '#3']"", ""DISCARD['#3', '#4']"", ""AGGREGATE['max', '#5']"", ""ARITHMETIC['difference', '#5', '#6']""]"
DROP_dev_nfl_227_04f796e2-1860-4455-905e-7479f0465000,Which two players both booted a single field goal?,"[""SELECT['field goals']"", ""PROJECT['players that booted #REF', '#1']"", ""GROUP['count', '#1', '#2']"", ""COMPARATIVE['#2', '#3', 'is equal to one']""]","[""SELECT['players']"", ""PROJECT['field goals of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is equal to one']""]"
DROP_dev_nfl_227_7a7d895c-5d6d-47f0-bcdf-e072ba83af7b,How many yards did the Vickings make first?,"[""SELECT['the Vickings']"", ""PROJECT['yards of #REF', '#1']"", ""AGGREGATE['min', '#2']""]","[""SELECT['the Vickings']"", ""PROJECT['yards made of #REF', '#1']"", ""AGGREGATE['min', '#2']""]"
DROP_dev_nfl_227_a6ead493-cd74-4e79-81d7-aac424a4e312,How many yards did Karney kick?,"[""SELECT['Karney']"", ""PROJECT['kicks of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['sum', '#3']""]","[""SELECT['Carney']"", ""PROJECT['kicks of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['sum', '#3']""]"
DROP_dev_nfl_227_bea1a14c-cfcc-405c-b465-e8e0962ca148,Which quarter saw the most field goals?,"[""SELECT['quarters']"", ""PROJECT['field goals of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']""]","[""SELECT['quarters']"", ""PROJECT['field goals in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is the highest']""]"
DROP_dev_nfl_227_ef94ebec-a145-4a1b-b4bc-e817e341fc04,How many more yards was Karney's field goal over Longwell's shortest field goal?,"[""SELECT['Karney']"", ""PROJECT['field goal of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['min', '#3']"", ""SELECT['Longwell']"", ""PROJECT['field goals of #REF', '#5']"", ""PROJECT['yards of #REF', '#6']"", ""AGGREGATE['min', '#7']"", ""ARITHMETIC['difference', '#4', '#8']""]","[""SELECT['Karney']"", ""PROJECT['field goal of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""SELECT['Longwell']"", ""PROJECT['field goals of #REF', '#4']"", ""PROJECT['yards of #REF', '#5']"", ""AGGREGATE['min', '#6']"", ""AGGREGATE['min', '#7']"", ""ARITHMETIC['difference', '#3', '#8']""]"
DROP_dev_nfl_227_fd182724-41b7-4024-9846-6373efbd709e,Who made the winning move?,"[""SELECT['the winning move']"", ""PROJECT['who made #REF', '#1']""]","[""SELECT['moves']"", ""FILTER['#1', 'that is winning']"", ""PROJECT['who made #REF', '#2']""]"
DROP_dev_nfl_2272_13db527f-e2dc-44ea-bde4-cbf3ef4ed2f2,Which team was ahead in the fourth quarter?,"[""SELECT['the fourth quarter']"", ""PROJECT['team that was ahead of #REF', '#1']""]","[""SELECT['the fourth quarter']"", ""PROJECT['team that was ahead of #REF', '#1']""."
DROP_dev_nfl_2272_fa5019cd-1696-42fc-80b2-0b6f3c9b3fe6,"Which player threw more yards in the game, Young or Manning?","[""SELECT['Young']"", ""PROJECT['yards of #REF', '#1']"", ""AGGREGATE['sum', '#2']"", ""SELECT['Manning']"", ""PROJECT['yards of #REF', '#4']"", ""AGGREGATE['sum', '#5']"", ""COMPARISON['max', '#3', '#6']""]","[""SELECT['Young']"", ""SELECT['Manning']"", ""PROJECT['yards of #REF', '#1']"", ""PROJECT['yards of #REF', '#2']"", ""AGGREGATE['sum', '#3']"", ""AGGREGATE['sum', '#4']"", ""COMPARISON['max', '#5', '#6']""]"
NLVR2_dev_dev-0-0-0,If the instrument in the image on the right is long and thin.,"[""SELECT['right image']"", ""PROJECT['instrument in #REF', '#1']"", ""BOOLEAN['#2', 'is long']"", ""BOOLEAN['#2', 'is thin']"", ""BOOLEAN['logical_and', 'true', '#3', '#4']""]","[""SELECT['right image']"", ""PROJECT['instrument in #REF', '#1']"", ""BOOLEAN['#2', 'is long']"", ""BOOLEAN['#3', 'is thin']"", ""BOOLEAN['logical_and', 'true', '#4', '#5']""]"
NLVR2_dev_dev-100-0-0,If there is a hamster being held by a human hand.,"[""SELECT['hamster']"", ""SELECT['human hand']"", ""BOOLEAN['#1', 'is being held by #2']""]","[""SELECT['hamster']"", ""SELECT['human hand']"", ""FILTER['#1', 'being held by #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']""]"
NLVR2_dev_dev-1000-0-1,"If the right image features one folded towel with a black label at its upper left corner, and the left image includes two stacked, folded white towels.","[""SELECT['the right image']"", ""PROJECT['towels in #REF', '#1']"", ""FILTER['#2', 'that are folded']"", ""PROJECT['upper left corner of #REF', '#3']"", ""SELECT['label']"", ""FILTER['#5', 'that is black']"", ""FILTER['#4', 'with #6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to one']"", ""SELECT['the left image']"", ""PROJECT['towels in #REF', '#9']"", ""FILTER['#10', 'that are white']"", ""FILTER['#11', 'that are stacked']"", ""FILTER['#12', 'that are folded']"", ""AGGREGATE['count', '#13']"", ""BOOLEAN['#14', 'is equal to two']"", ""BOOLEAN['logical_and', 'true', '#7', '#15']""]","[""SELECT['right image']"", ""PROJECT['towel in #REF', '#1']"", ""FILTER['#2', 'that is folded']"", ""PROJECT['upper left corner of #REF', '#3']"", ""SELECT['label']"", ""FILTER['#5', 'that is black']"", ""FILTER['#4', 'with #6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to one']"", ""SELECT['left image']"", ""PROJECT['towels in #REF', '#9']"", ""FILTER['#10', 'that are white']"", ""FILTER['#11', 'that are stacked']"", ""FILTER['#12', 'that are folded']"", ""AGGREGATE['count', '#13']"", ""BOOLEAN['#14', 'is equal to two']"", ""BOOLEAN['logical_and', 'true', '#7', '#15']""]"
NLVR2_dev_dev-1000-1-0,If in at least one image there is a stack of two towels with one unfolded towel.,"[""SELECT['images']"", ""PROJECT['towels in #REF', '#1']"", ""FILTER['#2', 'that are unfolded']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is equal to two']"", ""GROUP['count', '#5', '#1']"", ""COMPARATIVE['#1', '#6', 'is equal to one']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is at least one']""]","[""SELECT['towels']"", ""FILTER['#1', 'that are in a stack']"", ""FILTER['#2', 'that are unfolded']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']"", ""BOOLEAN['#5', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#6', '#7']""]"
NLVR2_dev_dev-1001-0-0,If people and dogs are in the snow near the starting line in one of the images.,"[""SELECT['people']"", ""SELECT['dogs']"", ""SELECT['the snow']"", ""FILTER['#1', 'that are in #2']"", ""FILTER['#3', 'that are near the starting line']"", ""FILTER['#4', 'that are near #5']"", ""SELECT['images']"", ""GROUP['count', '#6', '#7']"", ""COMPARATIVE['#7', '#8', 'is at least two']"", ""GROUP['count', '#9', '#7']"", ""COMPARATIVE['#7', '#10', 'is at least two']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is equal to one']""]","[""SELECT['people']"", ""SELECT['dogs']"", ""SELECT['the snow']"", ""FILTER['#1', 'that are in #2']"", ""FILTER['#3', 'that are near the starting line']"", ""FILTER['#4', 'that are near #5']"", ""SELECT['images']"", ""GROUP['count', '#6', '#7']"", ""COMPARATIVE['#7', '#8', 'is at least two']"", ""GROUP['count', '#9', '#7']"", ""COMPARATIVE['#7', '#10', 'is equal to one']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is equal to one']""]"
NLVR2_dev_dev-1001-0-1,"If one image includes a sled driver in a red coat with a yellow vest over it, and the other image includes a sign mounted on two posts in the snow.","[""SELECT['one image']"", ""PROJECT['sled driver in #REF', '#1']"", ""PROJECT['coat of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is red']"", ""PROJECT['vest of #REF', '#4']"", ""COMPARATIVE['#4', '#5', 'is yellow']"", ""BOOLEAN['#6', 'is with #7 over it']"", ""SELECT['other image']"", ""PROJECT['sign in #REF', '#8']"", ""PROJECT['posts in #REF', '#8']"", ""PROJECT['the snow in #REF', '#8']"", ""FILTER['#9', 'that are mounted on #11']"", ""AGGREGATE['count', '#12']"", ""BOOLEAN['#13', 'is equal to two']"", ""BOOLEAN['logical_and', 'true', '#7', '#14']""]","[""SELECT['one image']"", ""PROJECT['sled driver in #REF', '#1']"", ""PROJECT['coat of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is red']"", ""PROJECT['vest of #REF', '#4']"", ""COMPARATIVE['#4', '#5', 'is yellow']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least one']"", ""SELECT['the other image']"", ""PROJECT['sign in #REF', '#9']"", ""PROJECT['posts in #REF', '#9']"", ""PROJECT['the snow in #REF', '#9']"", ""FILTER['#10', 'that are mounted on #11']"", ""AGGREGATE['count', '#12']"", ""BOOLEAN['#13', 'is equal to two']"", ""BOOLEAN['logical_and', 'true', '#7', '#14']""]"
NLVR2_dev_dev-100-2-1,If there is at least one mouse being held by a human hand.,"[""SELECT['mice']"", ""SELECT['human hand']"", ""FILTER['#1', 'being held by #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']""]","[""SELECT['mouse']"", ""SELECT['human hand']"", ""FILTER['#1', 'being held by #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']""]."
NLVR2_dev_dev-1002-1-0,"If each image includes at least one soda bottle shaped gummy candy, with a brown bottom half and clear top half, and no gummy soda bottles are in wrappers.","[""SELECT['gummy candy']"", ""FILTER['#1', 'that is soda bottle shaped']"", ""PROJECT['bottom half of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is brown']"", ""PROJECT['top half of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is clear']"", ""INTERSECTION['#2', '#4', '#5']"", ""SELECT['images']"", ""GROUP['count', '#6', '#7']"", ""COMPARATIVE['#7', '#8', 'is at least one']"", ""AGGREGATE['count', '#9']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is equal to #12']""]","[""SELECT['gummy candy']"", ""FILTER['#1', 'that is soda bottle shaped']"", ""PROJECT['bottom half of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is brown']"", ""PROJECT['top half of #REF', '#2']"", ""COMPARATIVE['#2', '#4', 'is clear']"", ""INTERSECTION['#2', '#5', '#6']"", ""SELECT['images']"", ""GROUP['count', '#7', '#8']"", ""COMPARATIVE['#8', '#9', 'is at least one']"", ""AGGREGATE['count', '#10']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is equal to #13']"", ""SELECT['wrappers']"", ""FILTER['#13', 'in #14']"", ""AGGREGATE['count', '#15']"", ""BOOLEAN['#16', 'is equal to zero']"", ""BOOLEAN['logical_and', 'true', '#14', '#17']""]"
NLVR2_dev_dev-1002-1-1,If a knife is being used to cut through a gelatin dessert that looks like a bottle of soda.,"[""SELECT['knife']"", ""SELECT['gelatin dessert']"", ""SELECT['bottle of soda']"", ""FILTER['#2', 'that looks like #3']"", ""BOOLEAN['#1', 'is being used to cut through #4']""]","[""SELECT['knife']"", ""SELECT['dessert']"", ""FILTER['#2', 'that is gelatin']"", ""SELECT['bottle of soda']"", ""FILTER['#3', 'that looks like #4']"", ""BOOLEAN['#1', 'is being used to cut through #5']""]"
NLVR2_dev_dev-1003-2-0,"If one of the pizza's toppings are not yet cooked,.","[""SELECT['pizzas']"", ""PROJECT['toppings of #REF', '#1']"", ""FILTER['#2', 'that are not yet cooked']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]","[""SELECT['pizzas']"", ""PROJECT['toppings of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are not yet cooked']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is one']""]"
NLVR2_dev_dev-1004-0-1,If a spotted sting ray in the ocean.,"[""SELECT['sting ray']"", ""FILTER['#1', 'that is spotted']"", ""SELECT['ocean']"", ""BOOLEAN['#2', 'is in #3']""]","[""SELECT['sting ray']"", ""SELECT['ocean']"", ""FILTER['#1', 'that is spotted']"", ""BOOLEAN['#3', 'is in #2']""]"
NLVR2_dev_dev-1004-1-0,"If the left and right images each contain one central, prominent stingray, and at least one image features a stingray with an all-over spotted pattern.","[""SELECT['stingrays']"", ""FILTER['#1', 'that are central']"", ""FILTER['#2', 'that are prominent']"", ""SELECT['left image']"", ""SELECT['right image']"", ""FILTER['#3', 'that are in #4']"", ""FILTER['#3', 'that are in #5']"", ""AGGREGATE['count', '#6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to one']"", ""BOOLEAN['#9', 'is at least one']"", ""PROJECT['pattern of #REF', '#10']"", ""COMPARATIVE['#10', '#11', 'is spotted']"", ""BOOLEAN['logical_and', 'true', '#12', '#13']""]","[""SELECT['stingray']"", ""FILTER['#1', 'that is central']"", ""FILTER['#2', 'that is prominent']"", ""SELECT['left image']"", ""SELECT['right image']"", ""FILTER['#3', 'that is in #4']"", ""FILTER['#3', 'that is in #5']"", ""AGGREGATE['count', '#6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to one']"", ""BOOLEAN['#9', 'is at least one']"", ""PROJECT['pattern of #REF', '#10']"", ""COMPARATIVE['#10', '#11', 'is all-over spotted']"", ""BOOLEAN['logical_and', 'true', '#10', '#12']""]"
NLVR2_dev_dev-1005-0-1,If there is one chimney visible.,"[""SELECT['chimney']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to one']""]","[""SELECT['chimneys']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to one']""]."
NLVR2_dev_dev-1006-1-0,If there is only one cut lemon.,"[""SELECT['lemon']"", ""FILTER['#1', 'that is cut']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']""]","[""SELECT['lemon']"", ""FILTER['#1', 'that are cut']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']""]"
NLVR2_dev_dev-1006-2-1,If there are only whole uncut lemons in the right image.,"[""SELECT['the right image']"", ""PROJECT['lemons in #REF', '#1']"", ""FILTER['#2', 'that are whole']"", ""FILTER['#3', 'that are uncut']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to zero']""]","[""SELECT['the right image']"", ""PROJECT['lemons in #REF', '#1']"", ""FILTER['#2', 'that are whole']"", ""BOOLEAN['#3', 'are uncut']""]"
NLVR2_dev_dev-1007-2-1,If the left and right image contains the same number of puppies.,"[""SELECT['puppies']"", ""SELECT['left image']"", ""SELECT['right image']"", ""FILTER['#1', 'in #2']"", ""FILTER['#1', 'in #3']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to #7']""]","[""SELECT['left image']"", ""PROJECT['puppies in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""SELECT['right image']"", ""PROJECT['puppies in #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#3', 'is equal to #6']""]"
NLVR2_dev_dev-1008-0-1,If one glass of red wine sits in each of the images.,"[""SELECT['images']"", ""PROJECT['glasses of wine in #REF', '#1']"", ""FILTER['#2', 'that are red']"", ""FILTER['#3', 'that sit']"", ""GROUP['count', '#4', '#1']"", ""COMPARATIVE['#1', '#5', 'is equal to one']"", ""AGGREGATE['count', '#6']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#7', 'is equal to #8']""]","[""SELECT['images']"", ""PROJECT['glasses of wine in #REF', '#1']"", ""FILTER['#2', 'that are red']"", ""FILTER['#3', 'that sit']"", ""GROUP['count', '#4', '#1']"", ""COMPARATIVE['#1', '#5', 'is equal to one']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to #8']""]"
NLVR2_dev_dev-1008-1-0,If a stream of poured red wine is flowing into a stemmed glass in at least one image.,"[""SELECT['wine']"", ""FILTER['#1', 'that is red']"", ""FILTER['#2', 'poured']"", ""PROJECT['stream of #REF', '#3']"", ""SELECT['glass']"", ""FILTER['#5', 'that is stemmed']"", ""FILTER['#4', 'flowing into #6']"", ""BOOLEAN['#7', 'is in at least one image']""]","[""SELECT['stream of wine']"", ""FILTER['#1', 'that is red']"", ""FILTER['#2', 'poured']"", ""SELECT['glass']"", ""FILTER['#4', 'that is stemmed']"", ""FILTER['#3', 'flowing into #5']"", ""BOOLEAN['#6', 'is in at least one image']""]"
NLVR2_dev_dev-1009-2-0,"If each image shows one orange car parked in front of snow-covered mountain peaks, and in at least one image, the car's convertible top is down.","[""SELECT['images']"", ""PROJECT['cars in #REF', '#1']"", ""FILTER['#2', 'that are orange']"", ""PROJECT['mountain peaks in #REF', '#1']"", ""FILTER['#4', 'that are snow-covered']"", ""FILTER['#3', 'parked in front of #5']"", ""GROUP['count', '#6', '#1']"", ""COMPARATIVE['#1', '#7', 'is equal to one']"", ""AGGREGATE['count', '#8']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to #11']"", ""PROJECT['convertible top of #REF', '#12']"", ""BOOLEAN['#13', 'is down']"", ""BOOLEAN['logical_and', 'true', '#7', '#14']""]","[""SELECT['images']"", ""PROJECT['cars in #REF', '#1']"", ""FILTER['#2', 'that are orange']"", ""PROJECT['mountain peaks in #REF', '#1']"", ""FILTER['#4', 'that are snow-covered']"", ""FILTER['#3', 'parked in front of #5']"", ""GROUP['count', '#6', '#1']"", ""COMPARATIVE['#1', '#7', 'is equal to one']"", ""AGGREGATE['count', '#8']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#9', 'is equal to #10']"", ""PROJECT['convertible top of #REF', '#11']"", ""BOOLEAN['#12', 'is down']"", ""BOOLEAN['logical_and', 'true', '#7', '#13']""]"
NLVR2_dev_dev-1009-2-1,If the left image contains an orange convertible vehicle on top of snow.,"[""SELECT['vehicle']"", ""FILTER['#1', 'that is convertible']"", ""FILTER['#2', 'that is orange']"", ""SELECT['snow']"", ""FILTER['#3', 'on top of #4']"", ""BOOLEAN['#5', 'is in the left image']""]","[""SELECT['vehicle']"", ""FILTER['#1', 'that is convertible']"", ""FILTER['#2', 'that is orange']"", ""SELECT['snow']"", ""FILTER['#3', 'on top of #4']"", ""BOOLEAN['#5', 'is in left image']""]"
NLVR2_dev_dev-1010-2-1,If the image on the right shows two animals following each other.,"[""SELECT['right image']"", ""PROJECT['animals in #REF', '#1']"", ""FILTER['#2', 'that are following each other']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']""]","[""SELECT['the image on the right']"", ""PROJECT['animals in #REF', '#1']"", ""FILTER['#2', 'that are following each other']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']."
NLVR2_dev_dev-1010-3-0,"If each image contains just one hooved animal, and one animal has its head and body in profile.","[""SELECT['images']"", ""PROJECT['animals in #REF', '#1']"", ""FILTER['#2', 'that are hooved']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is equal to one']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#6', 'is equal to #7']"", ""PROJECT['head of #REF', '#1']"", ""PROJECT['body of #REF', '#1']"", ""COMPARATIVE['#1', '#9', 'is in profile']"", ""COMPARATIVE['#1', '#10', 'is in profile']"", ""INTERSECTION['#1', '#11', '#12']"", ""AGGREGATE['count', '#13']"", ""BOOLEAN['#14', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#7', '#15']""]","[""SELECT['images']"", ""PROJECT['animals in #REF', '#1']"", ""FILTER['#2', 'that are hooved']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is equal to one']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#6', 'is equal to #7']"", ""PROJECT['head of #REF', '#1']"", ""PROJECT['body of #REF', '#1']"", ""COMPARATIVE['#1', '#9', 'is in profile']"", ""COMPARATIVE['#1', '#10', 'is in profile']"", ""INTERSECTION['#1', '#11', '#12']"", ""AGGREGATE['count', '#13']"", ""BOOLEAN['#14', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#8', '#15']""]"
NLVR2_dev_dev-101-1-1,"If all dogs are red-orange chows, and at least one of the dogs pictured is reclining with a front paw pointing rightward.","[""SELECT['chows']"", ""FILTER['#1', 'that are red-orange']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to #4']"", ""FILTER['#1', 'that is reclining']"", ""PROJECT['front paw of #REF', '#6']"", ""COMPARATIVE['#6', '#7', 'is pointing rightward']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#5', '#10']""]","[""SELECT['chows']"", ""FILTER['#1', 'that are red-orange']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#4', 'is equal to #3']"", ""FILTER['#1', 'that is reclining']"", ""PROJECT['front paw of #REF', '#6']"", ""COMPARATIVE['#6', '#7', 'is pointing rightward']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#5', '#10']""]"
NLVR2_dev_dev-1011-2-0,If one roof is unfinished.,"[""SELECT['roofs']"", ""FILTER['#1', 'that are unfinished']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']""]","[""SELECT['roofs']"", ""FILTER['#1', 'which are unfinished']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']""]"
NLVR2_dev_dev-1012-0-0,If one dog is holding a stuffed dog.,"[""SELECT['dogs']"", ""SELECT['stuffed dog']"", ""FILTER['#1', 'holding #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]","[""SELECT['dogs']"", ""FILTER['#1', 'that is stuffed']"", ""FILTER['#1', 'holding #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is one']""]"
NLVR2_dev_dev-101-3-0,If the dog in the image on the left is lying on a white surface.,"[""SELECT['left image']"", ""PROJECT['dog in #REF', '#1']"", ""PROJECT['surface in #REF', '#1']"", ""FILTER['#3', 'that is white']"", ""BOOLEAN['#2', 'is lying on #4']""]","[""SELECT['dog']"", ""SELECT['surface']"", ""FILTER['#2', 'that is white']"", ""FILTER['#1', 'lying on #3']"", ""BOOLEAN['#4', 'is in the image on the left']""]"
NLVR2_dev_dev-1013-1-1,"If one dog is swimming forward in a natural body of water, and the other dog is not actually in the water.","[""SELECT['one dog']"", ""SELECT['body of water']"", ""FILTER['#2', 'that is natural']"", ""FILTER['#1','swimming forward in #3']"", ""DISCARD['#1', '#4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']"", ""BOOLEAN['#7', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#8', '#9']""]","[""SELECT['dogs']"", ""SELECT['body of water']"", ""FILTER['#2', 'that is natural']"", ""FILTER['#1','swimming forward in #3']"", ""DISCARD['#1', '#4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']"", ""BOOLEAN['#7', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#8', '#9']""]"
NLVR2_dev_dev-1013-3-0,If the right image contains one dog swimming.,"[""SELECT['right image']"", ""PROJECT['dog in #REF', '#1']"", ""FILTER['#2', 'that is swimming']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]","[""SELECT['right image']"", ""PROJECT['dog of #REF', '#1']"", ""FILTER['#2', 'that is swimming']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]"
NLVR2_dev_dev-1014-1-1,If there is a person shown on at least one of the television screens.,"[""SELECT['person']"", ""SELECT['television screens']"", ""FILTER['#1','shown on #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']""]","[""SELECT['person']"", ""SELECT['television screens']"", ""FILTER['#2', 'that #1 is shown on']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']""]"
NLVR2_dev_dev-1014-2-0,If there are multiple tvs showing different pictures in the left image.,"[""SELECT['left image']"", ""PROJECT['tvs in #REF', '#1']"", ""PROJECT['pictures of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'are different']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least two']""]","[""SELECT['left image']"", ""PROJECT['tvs in #REF', '#1']"", ""PROJECT['pictures of #REF', '#2']"", ""BOOLEAN['#3', 'are different']""]"
NLVR2_dev_dev-1015-1-0,If there are two canopies over chair or outside.,"[""SELECT['canopies']"", ""SELECT['chair']"", ""FILTER['#1', 'that are over #2']"", ""FILTER['#1', 'that are outside']"", ""UNION['#3', '#4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to two']""]","[""SELECT['canopies']"", ""SELECT['chair']"", ""SELECT['outside']"", ""FILTER['#1', 'over #2']"", ""FILTER['#1', 'over #3']"", ""UNION['#4', '#5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'equal to two']""]"
NLVR2_dev_dev-1015-2-1,"If there are drapes, but no bed or environment.","[""SELECT['drapes']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is at least one']"", ""SELECT['bed']"", ""SELECT['environment']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to zero']"", ""BOOLEAN['logical_and', 'true', '#3', '#7']""]","[""SELECT['drapes']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is at least one']"", ""SELECT['bed']"", ""SELECT['environment']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to zero']"", ""BOOLEAN['logical_and', 'true', '#3', '#6']""]"
NLVR2_dev_dev-1016-3-0,If the animal on the right is facing right,"[""SELECT['animal']"", ""FILTER['#1', 'that is on the right']"", ""BOOLEAN['#2', 'is facing right']""]","[""SELECT['animal']"", ""FILTER['#1', 'on the right']"", ""BOOLEAN['#2', 'is facing right']""]"
NLVR2_dev_dev-1017-1-1,"If two hands reach toward a chow puppy in one image, and the other image shows a cream-colored chow standing on all fours.","[""SELECT['one image']"", ""PROJECT['chow puppy in #REF', '#1']"", ""PROJECT['hands in #REF', '#1']"", ""FILTER['#3', 'that reach toward #2']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to two']"", ""SELECT['other image']"", ""PROJECT['chow in #REF', '#7']"", ""FILTER['#8', 'that is cream-colored']"", ""FILTER['#9', 'that is standing on all fours']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#6', '#12']""]","[""SELECT['one image']"", ""PROJECT['chow puppy in #REF', '#1']"", ""PROJECT['hands in #REF', '#1']"", ""FILTER['#3', 'that reach toward #2']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to two']"", ""SELECT['other image']"", ""PROJECT['chow in #REF', '#7']"", ""FILTER['#8', 'that is cream-colored']"", ""PROJECT['all fours of #REF', '#9']"", ""BOOLEAN['#10', 'is standing on #11']"", ""BOOLEAN['logical_and', 'true', '#6', '#12']""]"
NLVR2_dev_dev-1017-2-0,If the dog in the image on the right is being touched by a human.,"[""SELECT['dog']"", ""SELECT['human']"", ""FILTER['#1', 'being touched by #2']"", ""BOOLEAN['#3', 'is in the image on the right']""]","[""SELECT['dog']"", ""SELECT['human']"", ""FILTER['#1', 'being touched by #2']"", ""BOOLEAN['#3', 'is in the right image']""]"
NLVR2_dev_dev-1018-1-1,If at least one image shows a brown wood hutch standing to the left of a pale painted hutch.,"[""SELECT['hutch']"", ""FILTER['#1', 'that is wood']"", ""FILTER['#2', 'that is brown']"", ""FILTER['#2', 'that is painted']"", ""FILTER['#4', 'that is pale']"", ""FILTER['#3','standing to the left of #5']"", ""BOOLEAN['#6', 'is in at least one image']""]","[""SELECT['hutch']"", ""FILTER['#1', 'that is painted']"", ""FILTER['#2', 'that is pale']"", ""FILTER['#1', 'that is standing to the left of #3']"", ""FILTER['#4', 'that is brown']"", ""BOOLEAN['#5', 'is in at least one image']""]"
NLVR2_dev_dev-1018-3-0,If there are less than four pieces of furniture,"[""SELECT['pieces of furniture']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is lower than four']""]","[""SELECT['pieces of furniture']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is at most four']""]"
NLVR2_dev_dev-1019-3-0,If the left image includes a person sitting behind a table and looking downward at an open menu.,"[""SELECT['person']"", ""SELECT['table']"", ""FILTER['#1','sitting behind #2']"", ""SELECT['menu']"", ""FILTER['#4', 'that is open']"", ""FILTER['#3', 'looking downward at #5']"", ""BOOLEAN['#6', 'is in left image']""]","[""SELECT['person']"", ""SELECT['table']"", ""FILTER['#1', 'that is sitting behind #2']"", ""SELECT['menu']"", ""FILTER['#4', 'that is open']"", ""BOOLEAN['#3', 'is looking downward at #5']""]"
NLVR2_dev_dev-1019-3-1,If in at least one image there is a person sitting at a dining table reading the menu.,"[""SELECT['person']"", ""SELECT['dining table']"", ""SELECT['menu']"", ""FILTER['#1','sitting at #2']"", ""FILTER['#4','reading #3']"", ""BOOLEAN['#5', 'is in at least one image']""]","[""SELECT['person']"", ""SELECT['dining table']"", ""SELECT['menu']"", ""FILTER['#1','sitting at #2']"", ""FILTER['#4','reading #3']"", ""PROJECT['images of #REF', '#5']"", ""BOOLEAN['#6', 'is at least one']""]"
NLVR2_dev_dev-1020-1-0,If one dog is jumping in front of another dog in the left image.,"[""SELECT['left image']"", ""PROJECT['dog in #REF', '#1']"", ""FILTER['#2', 'that is jumping in front of #1']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]","[""SELECT['left image']"", ""PROJECT['dog in #REF', '#1']"", ""FILTER['#2', 'that is jumping in front of #1']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is one']""]"
NLVR2_dev_dev-1021-3-0,"If in one image, a blue and yellow bird is grasping onto a human hand with its talon","[""SELECT['bird']"", ""FILTER['#1', 'that is blue and yellow']"", ""SELECT['human hand']"", ""PROJECT['talon of #REF', '#3']"", ""FILTER['#2', 'grasping onto #4']"", ""BOOLEAN['#5', 'is in one image']""]","[""SELECT['bird']"", ""FILTER['#1', 'that is blue and yellow']"", ""SELECT['human hand']"", ""PROJECT['talon of #REF', '#2']"", ""FILTER['#2', 'grasping onto #3']"", ""BOOLEAN['#4', 'is in one image']""]"
NLVR2_dev_dev-1021-3-1,If an image shows a colorful parrot with its claws on a hand reaching into a basket.,"[""SELECT['parrot']"", ""FILTER['#1', 'that is colorful']"", ""PROJECT['claws of #REF', '#2']"", ""SELECT['hand']"", ""SELECT['basket']"", ""COMPARATIVE['#2', '#4', 'are on #5']"", ""FILTER['#6', 'that is reaching into #7']"", ""BOOLEAN['#8', 'is in an image']""]","[""SELECT['parrot']"", ""FILTER['#1', 'that is colorful']"", ""PROJECT['crawls of #REF', '#2']"", ""SELECT['hand']"", ""SELECT['basket']"", ""COMPARATIVE['#2', '#4', 'are on #5']"", ""FILTER['#6', 'that is reaching into #7']"", ""BOOLEAN['#8', 'is in an image']""]"
NLVR2_dev_dev-1022-0-1,If there are a minimum of three elephants.,"[""SELECT['elephants']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is at least three']""]","[""SELECT['elephants']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is at most three']""]"
NLVR2_dev_dev-102-2-1,If the left and right image contains the same number pair of full weights.,"[""SELECT['left image']"", ""PROJECT['full weights in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""SELECT['right image']"", ""PROJECT['full weights in #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#3', 'is equal to #6']""]","[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['full weights in #REF', '#1']"", ""PROJECT['full weights in #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to #6']""]"
NLVR2_dev_dev-1022-3-0,"If one image contains a single elephant, which has tusks and a trunk curled upward to its mouth.","[""SELECT['elephant']"", ""PROJECT['tusks of #REF', '#1']"", ""PROJECT['trunk of #REF', '#1']"", ""PROJECT['mouth of #REF', '#1']"", ""COMPARATIVE['#1', '#3', 'is curled upward to #4']"", ""SELECT['images']"", ""GROUP['count', '#5', '#6']"", ""COMPARATIVE['#6', '#7', 'is equal to one']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to one']""]","[""SELECT['elephant']"", ""PROJECT['tusks of #REF', '#1']"", ""PROJECT['trunk of #REF', '#1']"", ""PROJECT['mouth of #REF', '#1']"", ""COMPARATIVE['#1', '#3', 'is curled upward to #4']"", ""SELECT['images']"", ""GROUP['count', '#5', '#7']"", ""COMPARATIVE['#7', '#8', 'is equal to one']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to one']""]"
NLVR2_dev_dev-102-3-0,"If one image shows dumbbells in at least two horizontal rows, and the other image shows dumbbells in two vertical rows.","[""SELECT['one image']"", ""PROJECT['dumbbells in #REF', '#1']"", ""PROJECT['horizontal rows of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least two']"", ""SELECT['the other image']"", ""PROJECT['dumbbells in #REF', '#6']"", ""PROJECT['vertical rows of #REF', '#7']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to two']"", ""BOOLEAN['logical_and', 'true', '#5', '#10']""]","[""SELECT['one image']"", ""PROJECT['dumbbells in #REF', '#1']"", ""PROJECT['horizontal rows of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least two']"", ""SELECT['the other image']"", ""PROJECT['dumbbells in #REF', '#6']"", ""PROJECT['vertical rows of #REF', '#6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to two']"", ""BOOLEAN['logical_and', 'true', '#5', '#9']""]"
NLVR2_dev_dev-1023-2-1,If an image of a cup with a handle on a saucer is located on the upper half of the front of at least one vending machine.,"[""SELECT['cup']"", ""SELECT['saucer']"", ""FILTER['#1', 'with a handle on #2']"", ""SELECT['vending machine']"", ""PROJECT['the upper half of the front of #REF', '#4']"", ""FILTER['#3', 'that is located on #5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least one']""]","[""SELECT['cup']"", ""SELECT['saucer']"", ""FILTER['#1', 'that has a handle on #2']"", ""SELECT['vending machine']"", ""PROJECT['the upper half of the front of #REF', '#4']"", ""COMPARATIVE['#4', '#5', 'is located on #3']"", ""BOOLEAN['#6', 'is in an image']""]"
NLVR2_dev_dev-1023-3-0,If there  is a machine that offers either nescafe or atlantis brand beverages in the image on the right.,"[""SELECT['machine']"", ""SELECT['beverages']"", ""FILTER['#2', 'that are nescafe brand']"", ""FILTER['#2', 'that are atlantis brand']"", ""UNION['#3', '#4']"", ""BOOLEAN['#5', 'is in the image on the right']""]","[""SELECT['machine']"", ""SELECT['beverages']"", ""PROJECT['brands of #REF', '#2']"", ""COMPARATIVE['#1', '#3', 'is nescafe']"", ""COMPARATIVE['#1', '#3', 'is atlantis']"", ""UNION['#4', '#5']"", ""BOOLEAN['#6', 'is in the image on the right']""]"
NLVR2_dev_dev-1024-1-1,"If one of the cabinets is dark instead of white, and both cabinets pictured have flat tops.","[""SELECT['cabinets']"", ""FILTER['#1', 'that are dark']"", ""FILTER['#1', 'that are white']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']"", ""PROJECT['tops of #REF', '#6']"", ""COMPARATIVE['#6', '#7', 'are flat']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to two']"", ""BOOLEAN['logical_and', 'true', '#5', '#10']""]","[""SELECT['cabinets']"", ""FILTER['#1', 'that are dark']"", ""FILTER['#1', 'that are white']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']"", ""PROJECT['tops of #REF', '#5']"", ""COMPARATIVE['#5', '#6', 'are flat']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to two']"", ""BOOLEAN['logical_and', 'true', '#5', '#9']""]"
NLVR2_dev_dev-1024-2-0,If the cabinet on the left is behind a chair.,"[""SELECT['cabinet']"", ""FILTER['#1', 'that is on the left']"", ""SELECT['chair']"", ""BOOLEAN['#2', 'is behind #3']""]","[""SELECT['cabinet']"", ""FILTER['#1', 'on the left']"", ""SELECT['chair']"", ""BOOLEAN['#2', 'is behind #3']""]"
NLVR2_dev_dev-1025-1-0,If there is a single woman in a bikini in the image on the right.,"[""SELECT['right image']"", ""PROJECT['woman in #REF', '#1']"", ""PROJECT['bikini in #REF', '#1']"", ""FILTER['#2', 'that is in #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']""]","[""SELECT['right image']"", ""PROJECT['woman in #REF', '#1']"", ""PROJECT['bikini in #REF', '#1']"", ""FILTER['#2', 'in #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']""]"
NLVR2_dev_dev-1025-1-1,If the bikini in the left image has a green bottom piece.,"[""SELECT['left image']"", ""PROJECT['bikini in #REF', '#1']"", ""PROJECT['bottom piece of #REF', '#2']"", ""BOOLEAN['#3', 'is green']""]","[""SELECT['bikini']"", ""PROJECT['bottom piece of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is green']"", ""BOOLEAN['#3', 'is in the left image']""]"
NLVR2_dev_dev-1026-1-0,If the left image is of the outside of a church and the right image is of the inside of a church.,"[""SELECT['church']"", ""PROJECT['outside of #REF', '#1']"", ""BOOLEAN['#2', 'is in the left image']"", ""PROJECT['inside of #REF', '#1']"", ""BOOLEAN['#4', 'is in the right image']"", ""BOOLEAN['logical_and', 'true', '#3', '#5']""]","[""SELECT['left image']"", ""PROJECT['church in #REF', '#1']"", ""PROJECT['outside of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']"", ""SELECT['right image']"", ""PROJECT['church in #REF', '#6']"", ""BOOLEAN['#7', 'is inside of #5']"", ""BOOLEAN['logical_and', 'true', '#5', '#8']""]"
NLVR2_dev_dev-1026-3-1,"If the right image features an interior with massive columns and arches, and a red alcove on the back left.","[""SELECT['the right image']"", ""PROJECT['interior in #REF', '#1']"", ""PROJECT['columns in #REF', '#1']"", ""PROJECT['arches in #REF', '#1']"", ""FILTER['#3', 'that are massive']"", ""FILTER['#4', 'that has #5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least one']"", ""SELECT['alcove']"", ""FILTER['#9', 'that is red']"", ""FILTER['#10', 'on the back left']"", ""BOOLEAN['#11', 'is in #12']"", ""BOOLEAN['logical_and', 'true', '#8', '#13']""]","[""SELECT['the right image']"", ""PROJECT['interior in #REF', '#1']"", ""PROJECT['columns in #REF', '#1']"", ""PROJECT['arches in #REF', '#1']"", ""FILTER['#3', 'that are massive']"", ""FILTER['#4', 'that has #5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least one']"", ""SELECT['alcove']"", ""FILTER['#9', 'that is red']"", ""FILTER['#10', 'on the back left']"", ""BOOLEAN['#11', 'is in #12']"", ""BOOLEAN['logical_and', 'true', '#8', '#13']""."
NLVR2_dev_dev-1027-1-1,If there is a total of two elk.,"[""SELECT['elks']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to two']""]","[""SELECT['elks']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to two']""]."
NLVR2_dev_dev-1028-1-1,If one of the images shows eight empty soda bottles in a cardboard carrier.,"[""SELECT['soda bottles']"", ""FILTER['#1', 'that are empty']"", ""SELECT['carrier']"", ""FILTER['#3', 'that is cardboard']"", ""FILTER['#2', 'in #4']"", ""SELECT['images']"", ""GROUP['count', '#5', '#6']"", ""COMPARATIVE['#6', '#7', 'is equal to eight']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to one']""]","[""SELECT['soda bottles']"", ""FILTER['#1', 'that are empty']"", ""SELECT['carrier']"", ""FILTER['#3', 'that is cardboard']"", ""FILTER['#2', 'in #4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to eight']""]"
NLVR2_dev_dev-1028-2-0,If an image shows a clear glass bottle standing slightly ahead of two green glass bottles that flank it.,"[""SELECT['bottle']"", ""FILTER['#1', 'that is glass']"", ""FILTER['#2', 'that is clear']"", ""SELECT['bottles']"", ""FILTER['#4', 'that are glass']"", ""FILTER['#5', 'that are green']"", ""FILTER['#6', 'that flank #3']"", ""FILTER['#3','standing slightly ahead of #7']"", ""BOOLEAN['#8', 'is in an image']""]","[""SELECT['bottle']"", ""FILTER['#1', 'that is glass']"", ""FILTER['#2', 'that is clear']"", ""SELECT['bottles']"", ""FILTER['#4', 'that are green']"", ""FILTER['#5', 'that flank #3']"", ""FILTER['#3', 'that are standing slightly ahead of #6']"", ""BOOLEAN['#7', 'is in an image']""]"
NLVR2_dev_dev-1029-0-0,"If two pairs of kneepads, one pair in each image, are the same color, but different designs.","[""SELECT['images']"", ""PROJECT['pairs of kneepads in #REF', '#1']"", ""PROJECT['colors of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'are the same']"", ""PROJECT['designs of #REF', '#4']"", ""COMPARATIVE['#4', '#5', 'are different']"", ""GROUP['count', '#6', '#1']"", ""COMPARATIVE['#1', '#7', 'is equal to two']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to one']""]","[""SELECT['pairs of kneepads']"", ""PROJECT['colors of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are the same']"", ""PROJECT['designs of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'are different']"", ""SELECT['images']"", ""GROUP['count', '#5', '#6']"", ""COMPARATIVE['#6', '#7', 'is equal to two']"", ""AGGREGATE['count', '#8']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to one']""]"
NLVR2_dev_dev-1029-2-1,"If a total of three black kneepads are shown, and no more than one kneepad does not have a logo showing.","[""SELECT['kneepads']"", ""FILTER['#1', 'that are black']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to three']"", ""SELECT['logo']"", ""FILTER['#1', 'that has #5 showing']"", ""DISCARD['#1', '#6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is at most one']"", ""BOOLEAN['logical_and', 'true', '#4', '#9']""]","[""SELECT['kneepads']"", ""FILTER['#1', 'that are black']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to three']"", ""SELECT['logo']"", ""FILTER['#1', 'with #5 showing']"", ""DISCARD['#1', '#6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is at most one']"", ""BOOLEAN['logical_and', 'true', '#4', '#9']""]"
NLVR2_dev_dev-10-3-0,If there are two tan corgis sitting outside next to each other.,"[""SELECT['corgis']"", ""FILTER['#1', 'that are tan']"", ""FILTER['#2', 'that are sitting outside']"", ""FILTER['#3', 'that are next to each other']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to two']""]","[""SELECT['corgis']"", ""FILTER['#1', 'that are tan']"", ""FILTER['#2', 'that are sitting outside']"", ""FILTER['#3', 'that are next to each other']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to two']""]"
NLVR2_dev_dev-1030-3-1,If both pajamas are related to outer space.,"[""SELECT['pajamas']"", ""SELECT['outer space']"", ""FILTER['#1', 'that are related to #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']""]","[""SELECT['pajamas']"", ""SELECT['outer space']"", ""FILTER['#1','rerelated to #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']""]"
NLVR2_dev_dev-10-3-1,"If the left image contains exactly two open-mouthed corgis, and the right image includes a row of three corgis.","[""SELECT['left image']"", ""PROJECT['corgis in #REF', '#1']"", ""FILTER['#2', 'that are open-mouthed']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']"", ""SELECT['right image']"", ""PROJECT['corgis in #REF', '#6']"", ""FILTER['#7', 'that are in a row']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to three']"", ""BOOLEAN['logical_and', 'true', '#5', '#10']""]","[""SELECT['left image']"", ""PROJECT['corgis in #REF', '#1']"", ""FILTER['#2', 'that are open-mouthed']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']"", ""SELECT['right image']"", ""PROJECT['corgis in #REF', '#6']"", ""FILTER['#7', 'that are in a row']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to three']"", ""BOOLEAN['logical_and', 'true', '#5', '#10']""."
NLVR2_dev_dev-103-1-0,If there are flowers in at least one of the images.,"[""SELECT['flowers']"", ""BOOLEAN['#1', 'are in at least one of the images']""]","[""SELECT['flowers']"", ""BOOLEAN['#1', 'is in at least one image']""]"
NLVR2_dev_dev-1031-2-0,"If in one of the images, the entrance of a bookstore can be seen with people inside browsing for books.","[""SELECT['bookstore']"", ""PROJECT['the entrance of #REF', '#1']"", ""SELECT['people']"", ""FILTER['#3', 'that are inside']"", ""SELECT['books']"", ""FILTER['#4', 'that are browsing for #5']"", ""FILTER['#2', 'that has #6']"", ""BOOLEAN['#7', 'is in one of the images']""]","[""SELECT['bookstore']"", ""PROJECT['the entrance of #REF', '#1']"", ""SELECT['people']"", ""FILTER['#3', 'that are inside']"", ""SELECT['books']"", ""FILTER['#4', 'that are browsing for #5']"", ""FILTER['#2', 'with #6']"", ""BOOLEAN['#7', 'is in one of the images']""]"
NLVR2_dev_dev-1032-3-0,If a person is holding a cup in the right image.,"[""SELECT['person']"", ""SELECT['cup']"", ""FILTER['#1', 'holding #2']"", ""BOOLEAN['#3', 'is in the right image']""]","[""SELECT['person']"", ""SELECT['cup']"", ""BOOLEAN['#1', 'is holding #2']""]"
NLVR2_dev_dev-1032-3-1,If there is exactly one cup in the right image that is red and it does not have the traditional starbucks logo on it.,"[""SELECT['the right image']"", ""PROJECT['cups in #REF', '#1']"", ""FILTER['#2', 'that are red']"", ""PROJECT['the traditional starbucks logo in #REF', '#1']"", ""FILTER['#3', 'on #2']"", ""DISCARD['#3', '#5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']""]","[""SELECT['the right image']"", ""PROJECT['cups in #REF', '#1']"", ""FILTER['#2', 'that are red']"", ""SELECT['the traditional starbucks logo']"", ""FILTER['#3', 'on #1']"", ""DISCARD['#3', '#5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']""]"
NLVR2_dev_dev-1033-2-0,"If in one image, a bride and groom are standing at the side of a white horse-drawn carriage, with a waiting driver nearby.","[""SELECT['bride']"", ""SELECT['groom']"", ""SELECT['carriage']"", ""FILTER['#3', 'that is white']"", ""FILTER['#4', 'that is horse-drawn']"", ""PROJECT['the side of #REF', '#5']"", ""FILTER['#2','standing at #6']"", ""SELECT['driver']"", ""FILTER['#7', 'waiting #8']"", ""COMPARATIVE['#8', '#9', 'is nearby']"", ""BOOLEAN['#10', 'is in one image']""]","[""SELECT['bride']"", ""SELECT['groom']"", ""SELECT['carriage']"", ""FILTER['#3', 'that is horse-drawn']"", ""FILTER['#4', 'that is white']"", ""PROJECT['the side of #REF', '#5']"", ""FILTER['#2','standing at #6']"", ""SELECT['driver']"", ""FILTER['#7', 'waiting #8']"", ""FILTER['#9', 'with #10 nearby']"", ""BOOLEAN['#11', 'is in one image']""]"
NLVR2_dev_dev-1034-0-0,"If the buses on the left and right face the same leftward direction, but one has a flat front while the other has a hood that projects forward.","[""SELECT['buses']"", ""FILTER['#1', 'on the left']"", ""FILTER['#1', 'on the right']"", ""PROJECT['direction face of #REF', '#2']"", ""PROJECT['direction face of #REF', '#3']"", ""BOOLEAN['#4', 'is the same']"", ""BOOLEAN['#5', 'is the same']"", ""PROJECT['front of #REF', '#6']"", ""COMPARATIVE['#6', '#7', 'is flat']"", ""PROJECT['hood of #REF', '#8']"", ""COMPARATIVE['#8', '#9', 'projects forward']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#6', '#12']""]","[""SELECT['buses']"", ""FILTER['#1', 'on the left']"", ""FILTER['#1', 'on the right']"", ""PROJECT['direction face of #REF', '#2']"", ""PROJECT['direction face of #REF', '#3']"", ""BOOLEAN['#4', 'is the same']"", ""BOOLEAN['#5', 'is the same as #6']"", ""PROJECT['front of #REF', '#7']"", ""COMPARATIVE['#7', '#8', 'is flat']"", ""PROJECT['hood of #REF', '#9']"", ""COMPARATIVE['#9', '#10', 'projects forward']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#7', '#13']""]"
NLVR2_dev_dev-1034-3-1,If the front of the buses in both pictures are facing the left.,"[""SELECT['pictures']"", ""PROJECT['buses in #REF', '#1']"", ""PROJECT['front of #REF', '#2']"", ""BOOLEAN['#3', 'is facing the left']""]","[""SELECT['buses']"", ""PROJECT['front of #REF', '#1']"", ""FILTER['#2', 'that are facing the left']"", ""BOOLEAN['#3', 'are in both pictures']""]"
NLVR2_dev_dev-1035-0-0,If both holders have meshlike holes in them.,"[""SELECT['holders']"", ""PROJECT['holes in #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are meshlike']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']""]","[""SELECT['holders']"", ""PROJECT['holes of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are meshlike']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']""]"
NLVR2_dev_dev-1035-3-1,If an image contains one aqua-colored water bottle with a black lid.,"[""SELECT['water bottle']"", ""FILTER['#1', 'that is aqua-colored']"", ""PROJECT['lid of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is black']"", ""SELECT['images']"", ""GROUP['count', '#4', '#5']"", ""COMPARATIVE['#5', '#6', 'is equal to one']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is at least one']""]","[""SELECT['water bottle']"", ""FILTER['#1', 'that is aqua-colored']"", ""PROJECT['lid of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is black']"", ""BOOLEAN['#4', 'is in an image']""]"
NLVR2_dev_dev-1036-1-0,If the left and right image contains the same number of  full round broccoli heads.,"[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['broccoli heads in #REF', '#1']"", ""PROJECT['broccoli heads in #REF', '#2']"", ""FILTER['#3', 'that are full round']"", ""FILTER['#4', 'that are full round']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to #8']""]","[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['broccoli heads in #REF', '#1']"", ""PROJECT['broccoli heads in #REF', '#2']"", ""FILTER['#3', 'that are full round']"", ""FILTER['#4', 'that are full round']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to #8']”]"
NLVR2_dev_dev-1037-2-1,If the surface of the water is visible in exactly one image.,"[""SELECT['water']"", ""PROJECT['surface of #REF', '#1']"", ""FILTER['#2', 'that is visible']"", ""BOOLEAN['#3', 'is in exactly one image']""]","[""SELECT['the water']"", ""PROJECT['surface of #REF', '#1']"", ""BOOLEAN['#2', 'is in exactly one image']""]"
NLVR2_dev_dev-1037-3-0,"If each image shows one forward-facing stingray shown from the top, and the left image shows a leftward-angled stingray at the bottom of the ocean.","[""SELECT['images']"", ""PROJECT['stingrays in #REF', '#1']"", ""FILTER['#2', 'that are forward-facing']"", ""FILTER['#3','shown from the top']"", ""GROUP['count', '#4', '#1']"", ""COMPARATIVE['#1', '#5', 'is equal to one']"", ""AGGREGATE['count', '#6']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#7', 'is equal to #8']"", ""SELECT['the left image']"", ""PROJECT['stingray in #REF', '#10']"", ""FILTER['#11', 'that is leftward-angled']"", ""PROJECT['the ocean in #REF', '#10']"", ""BOOLEAN['#12', 'is at the bottom of #13']"", ""BOOLEAN['logical_and', 'true', '#7', '#14']""]","[""SELECT['images']"", ""PROJECT['stingrays in #REF', '#1']"", ""FILTER['#2', 'that are forward-facing']"", ""FILTER['#3', 'that are shown from the top']"", ""GROUP['count', '#4', '#1']"", ""COMPARATIVE['#1', '#5', 'is equal to one']"", ""AGGREGATE['count', '#6']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#7', 'is equal to #8']"", ""SELECT['the left image']"", ""PROJECT['stingray in #REF', '#10']"", ""FILTER['#11', 'that is leftward-angled']"", ""PROJECT['the ocean in #REF', '#10']"", ""BOOLEAN['#12', 'is at the bottom of #13']"", ""BOOLEAN['logical_and', 'true', '#7', '#14']""]"
NLVR2_dev_dev-1038-0-1,If the left and right image contains a total of three antelope.,"[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['antelopes in #REF', '#1']"", ""PROJECT['antelopes in #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['sum', '#5', '#6']"", ""BOOLEAN['#7', 'is equal to three']""]","[""SELECT['left image']"", ""PROJECT['antelopes in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""SELECT['right image']"", ""PROJECT['antelopes in #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""ARITHMETIC['sum', '#3', '#6']"", ""BOOLEAN['#7', 'is equal to three']""]"
NLVR2_dev_dev-1039-0-1,If there are at least eight huskies pulling the snow sled right and forward.,"[""SELECT['huskies']"", ""SELECT['the snow sled']"", ""FILTER['#1', 'pulling #2 right and forward']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least eight']""]","[""SELECT['huskies']"", ""SELECT['snow sled']"", ""FILTER['#1', 'pulling #2 right and forward']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least eight']""]"
NLVR2_dev_dev-1039-2-0,If one dog sled team is moving and one is not.,"[""SELECT['dog sled teams']"", ""FILTER['#1', 'that are moving']"", ""DISCARD['#1', '#2']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']"", ""BOOLEAN['#5', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#6', '#7']""]","[""SELECT['dog sled teams']"", ""FILTER['#1', 'that are moving']"", ""DISCARD['#1', '#2']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#5', 'is equal to one']"", ""BOOLEAN['#6', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#7', '#8']""]"
NLVR2_dev_dev-1040-1-1,If an image shows beaded pin jewelry featuring at least one heart-shaped element.,"[""SELECT['pin jewelry']"", ""FILTER['#1', 'that is beaded']"", ""PROJECT['elements of #REF', '#2']"", ""FILTER['#3', 'that are heart-shaped']"", ""GROUP['count', '#4', '#2']"", ""COMPARATIVE['#2', '#5', 'is at least one']"", ""BOOLEAN['#6', 'is in an image']""]","[""SELECT['pin jewelry']"", ""FILTER['#1', 'that is beaded']"", ""SELECT['elements']"", ""FILTER['#3', 'that are heart-shaped']"", ""FILTER['#2', 'that features #4']"", ""PROJECT['images of #REF', '#5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least one']""]"
NLVR2_dev_dev-1041-2-0,If the left and right image contains the same number of rectangle soap dispensers.,"[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['soap dispensers in #REF', '#1']"", ""PROJECT['soap dispensers in #REF', '#2']"", ""FILTER['#3', 'that are rectangle']"", ""FILTER['#4', 'that are rectangle']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to #8']""]","[""SELECT['left image']"", ""PROJECT['soap dispensers in #REF', '#1']"", ""FILTER['#2', 'that are rectangle']"", ""AGGREGATE['count', '#3']"", ""SELECT['right image']"", ""PROJECT['soap dispensers in #REF', '#5']"", ""FILTER['#6', 'that are rectangle']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#4', 'is equal to #8']""]"
NLVR2_dev_dev-104-2-0,If there are no lemons on top of chicken.,"[""SELECT['lemons']"", ""SELECT['chicken']"", ""FILTER['#1', 'on top of #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to zero']""]","[""SELECT['lemons']"", ""SELECT['chicken']"", ""BOOLEAN['#1', 'are on top of #2']""]"
NLVR2_dev_dev-1042-0-0,"If in the image to the right, there is a scuba diver with the jellyfish.","[""SELECT['scuba diver']"", ""SELECT['jellyfish']"", ""FILTER['#1', 'with #2']"", ""BOOLEAN['#3', 'is in the image to the right']""]","[""SELECT['scuba diver']"", ""SELECT['jellyfish']"", ""FILTER['#1', 'with #2']"", ""BOOLEAN['#3', 'is in the right image']""]"
NLVR2_dev_dev-1042-2-1,If there are at least 2 humans swimming to the right.,"[""SELECT['humans']"", ""FILTER['#1', 'that are swimming to the right']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least two']""]","[""SELECT['humans']"", ""FILTER['#1', 'that are swimming right']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least two']""]"
NLVR2_dev_dev-1043-0-1,If one of the photos shows a gray bottle with a red and blue label next to it's blue and red box.,"[""SELECT['bottle']"", ""FILTER['#1', 'that is gray']"", ""PROJECT['box of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is blue and red']"", ""PROJECT['label of #REF', '#4']"", ""COMPARATIVE['#2', '#3', 'is red and blue']"", ""FILTER['#5', 'next to #6']"", ""BOOLEAN['#7', 'is in one of the photos']""]","[""SELECT['bottle']"", ""FILTER['#1', 'that is gray']"", ""PROJECT['box of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is blue and red']"", ""PROJECT['label of #REF', '#4']"", ""COMPARATIVE['#2', '#3', 'is red and blue']"", ""INTERSECTION['#2', '#5', '#6']"", ""BOOLEAN['#7', 'is in one of the photos."
NLVR2_dev_dev-104-3-1,"If an image includes something pale and gritty textured in a round container, and an image includes a lemon slice on top of pale food.","[""SELECT['something pale and gritty textured']"", ""SELECT['container']"", ""FILTER['#2', 'that is round']"", ""FILTER['#1', 'in #3']"", ""BOOLEAN['#4', 'is in an image']"", ""SELECT['lemon slice']"", ""SELECT['food']"", ""FILTER['#6', 'that is pale']"", ""FILTER['#7', 'on top of #8']"", ""BOOLEAN['#9', 'is in an image']"", ""BOOLEAN['logical_and', 'true', '#5', '#10']""]","[""SELECT['something']"", ""FILTER['#1', 'that is pale and gritty']"", ""SELECT['container']"", ""FILTER['#3', 'that is round']"", ""FILTER['#2', 'in #4']"", ""BOOLEAN['#5', 'is in an image']"", ""SELECT['lemon slice']"", ""SELECT['food']"", ""FILTER['#7', 'that is pale']"", ""FILTER['#8', 'on top of #9']"", ""BOOLEAN['#10', 'is in an image']"", ""BOOLEAN['logical_and', 'true', '#6', '#11']""]"
NLVR2_dev_dev-1043-1-0,If there are 3 identical bottles of perfume with gold tops.,"[""SELECT['bottles of perfume']"", ""PROJECT['tops of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are gold']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to 3']""]","[""SELECT['bottles of perfume']"", ""PROJECT['tops of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are gold']"", ""BOOLEAN['#3', 'are identical']""]"
NLVR2_dev_dev-1044-2-0,If two rays are swimming in the water in the image on the right.,"[""SELECT['right image']"", ""PROJECT['rays in #REF', '#1']"", ""PROJECT['water in #REF', '#1']"", ""FILTER['#2', 'that are swimming in #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to two']""]","[""SELECT['right image']"", ""PROJECT['rays in #REF', '#1']"", ""PROJECT['water in #REF', '#1']"", ""FILTER['#2','swimming in #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to two']""]"
NLVR2_dev_dev-1044-3-1,If there are two stingrays in the pair of images.,"[""SELECT['stingrays']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to two']""]","[""SELECT['images']"", ""PROJECT['stingrays in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']""]"
NLVR2_dev_dev-1045-0-1,"If the combined images include at least six puppies, and one image contains a row of at least four puppies.","[""SELECT['images']"", ""PROJECT['puppies in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least six']"", ""FILTER['#1', 'in a row']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least four']"", ""BOOLEAN['logical_and', 'true', '#4', '#7']""]","[""SELECT['images']"", ""PROJECT['puppies in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is at least six']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least four']"", ""FILTER['#1', 'that are in a row']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#6', '#10']""]"
NLVR2_dev_dev-1046-0-0,"If at least one of the dogs has uncropped, floppy ears.","[""SELECT['dogs']"", ""PROJECT['ears of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are uncropped']"", ""COMPARATIVE['#1', '#2', 'are floppy']"", ""INTERSECTION['#1', '#3', '#4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least one']""]","[""SELECT['dogs']"", ""PROJECT['ears of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are floppy']"", ""COMPARATIVE['#1', '#2', 'are uncropped']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']""]"
NLVR2_dev_dev-1047-1-1,If a single syringe lies in an open hand in the image on the right.,"[""SELECT['right image']"", ""PROJECT['syringe in #REF', '#1']"", ""PROJECT['hand in #REF', '#1']"", ""FILTER['#3', 'that is open']"", ""FILTER['#2', 'that lies in #4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']""]","[""SELECT['the image on the right']"", ""PROJECT['syringes in #REF', '#1']"", ""PROJECT['hand in #REF', '#1']"", ""FILTER['#3', 'that is open']"", ""FILTER['#2', 'that lie in #4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']""."
NLVR2_dev_dev-1047-3-0,If two people are holding syringes.,"[""SELECT['people']"", ""SELECT['syringes']"", ""FILTER['#1', 'holding #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']""]","[""SELECT['people']"", ""SELECT['syringes']"", ""FILTER['#1', 'holding #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']""]"
NLVR2_dev_dev-1048-1-0,If all dough is unbaked and located in a round bowl.,"[""SELECT['dough']"", ""FILTER['#1', 'that is unbaked']"", ""SELECT['bowl']"", ""FILTER['#3', 'that is round']"", ""FILTER['#2', 'located in #4']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to #7']""]","[""SELECT['dough']"", ""FILTER['#1', 'that is unbaked']"", ""SELECT['bowl']"", ""FILTER['#3', 'that is round']"", ""FILTER['#2', 'located in #4']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to #7']""]"
NLVR2_dev_dev-1048-3-1,"If all images show dough in a round bowl, with the dough not risen above the edge of the bowl.","[""SELECT['dough']"", ""SELECT['bowl']"", ""FILTER['#2', 'that is round']"", ""FILTER['#1', 'in #3']"", ""PROJECT['edge of #REF', '#4']"", ""COMPARATIVE['#4', '#5', 'is not risen above #6']"", ""PROJECT['images of #REF', '#7']"", ""SELECT['images']"", ""AGGREGATE['count', '#8']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to #11']""]","[""SELECT['dough']"", ""SELECT['bowl']"", ""FILTER['#2', 'that is round']"", ""FILTER['#1', 'in #3']"", ""PROJECT['edge of #REF', '#4']"", ""COMPARATIVE['#4', '#5', 'is not risen above #6']"", ""PROJECT['images of #REF', '#7']"", ""SELECT['images']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to #10']""]"
NLVR2_dev_dev-1049-1-1,If there are two different people working out with weight in the gym,"[""SELECT['people']"", ""SELECT['weight']"", ""SELECT['the gym']"", ""FILTER['#2', 'in #3']"", ""FILTER['#1', 'working out with #4']"", ""PROJECT['different #REF', '#5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to two']""]","[""SELECT['people']"", ""SELECT['weight']"", ""SELECT['the gym']"", ""FILTER['#2', 'in #3']"", ""FILTER['#1', 'working out with #4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to two']""]"
NLVR2_dev_dev-105-0-0,If at least one gorilla has his mouth open showing teeth.,"[""SELECT['gorillas']"", ""PROJECT['mouth of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is open']"", ""PROJECT['teeth of #REF', '#1']"", ""FILTER['#3','showing #4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least one']""]","[""SELECT['gorillas']"", ""PROJECT['mouth of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is open']"", ""PROJECT['teeth of #REF', '#1']"", ""FILTER['#3', 'that are showing #4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least one']""]"
NLVR2_dev_dev-1050-1-1,If there is a bottle of body lotion made by alba.,"[""SELECT['bottle of body lotion']"", ""FILTER['#1', 'that is made by alba']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']""]","[""SELECT['bottle of body lotion']"", ""SELECT['alba']"", ""BOOLEAN['#1', 'is made by #2']""]"
NLVR2_dev_dev-1050-2-0,If they are alba brand products in each image.,"[""SELECT['products']"", ""FILTER['#1', 'that are alba brand']"", ""PROJECT['images of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""SELECT['images']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to #4']""]","[""SELECT['products']"", ""PROJECT['brands of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is alba']"", ""PROJECT['images of #REF', '#3']"", ""AGGREGATE['count', '#4']"", ""SELECT['images']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#5', 'is equal to #7']""]"
NLVR2_dev_dev-1051-2-1,If the right image contains no more than two humans.,"[""SELECT['right image']"", ""PROJECT['humans in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at most two']""]","[""SELECT['right image']"", ""PROJECT['human in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at most two']""]"
NLVR2_dev_dev-1052-2-1,If the left and right image contains a total of two women who are both holding a beer bottle.,"[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['women in #REF', '#1']"", ""PROJECT['women in #REF', '#2']"", ""PROJECT['beer bottle in #REF', '#1']"", ""FILTER['#3', 'holding #4']"", ""FILTER['#5', 'holding #6']"", ""AGGREGATE['count', '#7']"", ""AGGREGATE['count', '#8']"", ""ARITHMETIC['sum', '#9', '#10']"", ""BOOLEAN['#11', 'is equal to two']""]","[""SELECT['left image']"", ""PROJECT['women in #REF', '#1']"", ""SELECT['beer bottle']"", ""FILTER['#2', 'holding #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to two']"", ""SELECT['right image']"", ""PROJECT['women in #REF', '#7']"", ""PROJECT['beer bottle in #REF', '#7']"", ""FILTER['#8', 'holding #9']"", ""AGGREGATE['count', '#10']"", ""ARITHMETIC['sum', '#6', '#11']"", ""BOOLEAN['#12', 'is equal to two']""]"
NLVR2_dev_dev-1052-3-0,If only one woman is drinking in the left image.,"[""SELECT['left image']"", ""PROJECT['woman in #REF', '#1']"", ""FILTER['#2', 'that is drinking']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]","[""SELECT['left image']"", ""PROJECT['women in #REF', '#1']"", ""FILTER['#2', 'that are drinking']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]"
NLVR2_dev_dev-1053-0-1,If the left image contains one black and brown dog with its feet touching the grass.,"[""SELECT['left image']"", ""PROJECT['dog in #REF', '#1']"", ""FILTER['#2', 'that is black and brown']"", ""PROJECT['feet of #REF', '#3']"", ""PROJECT['grass in #REF', '#1']"", ""COMPARATIVE['#3', '#5', 'are touching #6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to one']""]","[""SELECT['the left image']"", ""PROJECT['dogs in #REF', '#1']"", ""FILTER['#2', 'that are black and brown']"", ""PROJECT['feet of #REF', '#3']"", ""PROJECT['the grass in #REF', '#1']"", ""COMPARATIVE['#3', '#5', 'are touching #6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to one']""."
NLVR2_dev_dev-1053-2-0,If there is a dog sitting with a silver chain collar around it;s neck,"[""SELECT['dog']"", ""PROJECT['neck of #REF', '#1']"", ""SELECT['chain collar']"", ""FILTER['#3', 'that is silver']"", ""COMPARATIVE['#1', '#2', 'has #4 around']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least one']""]","[""SELECT['dog']"", ""PROJECT['neck of #REF', '#1']"", ""SELECT['chain collar']"", ""FILTER['#3', 'that is silver']"", ""COMPARATIVE['#1', '#4', 'has #2 around']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least one']""]"
NLVR2_dev_dev-106-1-0,If there are piles of pillows that are not stacked neatly.,"[""SELECT['pillows']"", ""PROJECT['piles of #REF', '#1']"", ""FILTER['#2','stacked neatly']"", ""DISCARD['#2', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least two']""]","[""SELECT['pillows']"", ""PROJECT['piles of #REF', '#1']"", ""FILTER['#2', 'that are stacked neatly']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least two']""]"
NLVR2_dev_dev-107-1-0,If there are a total of two phones with more than one physical button.,"[""SELECT['phones']"", ""PROJECT['physical buttons of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is higher than one']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to two']""]","[""SELECT['phones']"", ""PROJECT['physical button of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is higher than one']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to two']""]"
NLVR2_dev_dev-108-0-0,If there are no fewer than 5 pugs.,"[""SELECT['pugs']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is at least 5']""]","[""SELECT['pugs']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is at most 5']""]"
NLVR2_dev_dev-108-2-1,If every image shows exactly one dog running outside.,"[""SELECT['images']"", ""PROJECT['dogs in #REF', '#1']"", ""FILTER['#2', 'that are running outside']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is equal to one']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to #7']""]","[""SELECT['images']"", ""PROJECT['dogs in #REF', '#1']"", ""FILTER['#2', 'that are running outside']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is equal to one']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#6', 'is equal to #7']""]"
NLVR2_dev_dev-109-3-0,"If an image shows exactly two hounds with faces close together, one with its tongue extending downward.","[""SELECT['hounds']"", ""PROJECT['faces of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are close together']"", ""PROJECT['tongue of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is extending downward']"", ""SELECT['images']"", ""GROUP['count', '#5', '#6']"", ""COMPARATIVE['#6', '#7', 'is equal to two']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to one']""]","[""SELECT['hounds']"", ""PROJECT['face of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is close together']"", ""PROJECT['tongue of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is extending downward']"", ""SELECT['images']"", ""GROUP['count', '#5', '#6']"", ""COMPARATIVE['#6', '#7', 'is equal to two']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is at least one']""]"
NLVR2_dev_dev-110-2-0,"If an image includes three zebras standing in a row and gazing forward, with a fourth zebra behind them.","[""SELECT['images']"", ""PROJECT['zebras in #REF', '#1']"", ""FILTER['#2', 'that are standing in a row']"", ""FILTER['#3', 'that are gazing forward']"", ""GROUP['count', '#4', '#1']"", ""COMPARATIVE['#1', '#5', 'is equal to three']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']"", ""BOOLEAN['#8', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#9', '#10']""]","[""SELECT['images']"", ""PROJECT['zebras in #REF', '#1']"", ""FILTER['#2', 'that are standing in a row']"", ""FILTER['#3', 'that are gazing forward']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to three']"", ""PROJECT['vierth of #REF', '#1']"", ""FILTER['#7', 'that is behind them']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#6', '#10']""]"
NLVR2_dev_dev-11-1-1,"If the left image shows a dog standing on a high point with its body turned rightward, and the right image shows at least one dog running down a snow-covered hill.","[""SELECT['left image']"", ""PROJECT['dog in #REF', '#1']"", ""PROJECT['high point in #REF', '#1']"", ""FILTER['#2','standing on #3']"", ""PROJECT['body of #REF', '#4']"", ""BOOLEAN['#5', 'is turned rightward']"", ""SELECT['right image']"", ""PROJECT['dog in #REF', '#7']"", ""PROJECT['hill in #REF', '#7']"", ""FILTER['#8', 'that is snow-covered']"", ""FILTER['#9', 'running down #10']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#6', '#13']""]","[""SELECT['dog']"", ""SELECT['high point']"", ""FILTER['#1','standing on #2']"", ""PROJECT['body of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is turned rightward']"", ""BOOLEAN['#5', 'is in the left image']"", ""SELECT['hill']"", ""FILTER['#7', 'that is snow-covered']"", ""FILTER['#6', 'running down #8']"", ""FILTER['#9', 'in the right image']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#7', '#12']""]"
NLVR2_dev_dev-111-1-0,If the right image contains exactly one blue parrot.,"[""SELECT['right image']"", ""PROJECT['parrot in #REF', '#1']"", ""FILTER['#2', 'that is blue']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]","[""SELECT['right image']"", ""PROJECT['parrot of #REF', '#1']"", ""FILTER['#2', 'that is blue']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]"
NLVR2_dev_dev-111-2-1,If in one image there are two birds standing on a branch.,"[""SELECT['birds']"", ""SELECT['branch']"", ""FILTER['#1','standing on #2']"", ""PROJECT['images of #REF', '#3']"", ""GROUP['count', '#3', '#4']"", ""COMPARATIVE['#4', '#5', 'is equal to two']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']""]","[""SELECT['birds']"", ""SELECT['branch']"", ""FILTER['#1','standing on #2']"", ""SELECT['images']"", ""GROUP['count', '#3', '#4']"", ""COMPARATIVE['#4', '#5', 'is equal to two']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']""]"
NLVR2_dev_dev-112-2-0,If there are at least 10 grey wool sheep in a group foresting on grass.,"[""SELECT['sheep']"", ""FILTER['#1', 'that are grey']"", ""FILTER['#2', 'that are wool']"", ""FILTER['#3', 'that are in a group']"", ""SELECT['grass']"", ""FILTER['#4', 'foresting on #5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least 10']""]","[""SELECT['sheep']"", ""FILTER['#1', 'that are grey']"", ""FILTER['#2', 'that are wool']"", ""FILTER['#3', 'in a group']"", ""SELECT['grass']"", ""FILTER['#4', 'foresting on #5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least 10']""]"
NLVR2_dev_dev-113-0-0,If there is more than one animal species in the picture.,"[""SELECT['animal species']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is higher than one']""]","[""SELECT['images']"", ""PROJECT['animals in #REF', '#1']"", ""PROJECT['species of #REF', '#2']"", ""GROUP['count', '#3', '#1']"", ""BOOLEAN['#4', 'is higher than one']""]"
NLVR2_dev_dev-114-0-0,If the bird on the left is facing right and the bird on the right is facing left.,"[""SELECT['bird']"", ""FILTER['#1', 'on the left']"", ""FILTER['#1', 'on the right']"", ""BOOLEAN['#2', 'is facing right']"", ""BOOLEAN['#3', 'is facing left']"", ""BOOLEAN['logical_and', 'true', '#4', '#5']""]","[""SELECT['bird']"", ""FILTER['#1', 'that is on the left']"", ""FILTER['#1', 'that is on the right']"", ""BOOLEAN['#2', 'is facing right']"", ""BOOLEAN['#3', 'is facing left']"", ""BOOLEAN['logical_and', 'true', '#4', '#5']""]"
NLVR2_dev_dev-114-1-1,"If all of the images show a parrot perched on a branch, surrounded by pink flowers.","[""SELECT['parrot']"", ""SELECT['branch']"", ""FILTER['#1', 'perched on #2']"", ""SELECT['flowers']"", ""FILTER['#4', 'that are pink']"", ""FILTER['#3','surrounded by #5']"", ""PROJECT['images of #REF', '#6']"", ""SELECT['images']"", ""AGGREGATE['count', '#7']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to #10']""]","[""SELECT['parrot']"", ""SELECT['branch']"", ""FILTER['#1', 'perched on #2']"", ""SELECT['flowers']"", ""FILTER['#4', 'that are pink']"", ""FILTER['#3','surrounded by #5']"", ""PROJECT['images of #REF', '#6']"", ""AGGREGATE['count', '#7']"", ""SELECT['images']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to #11']""]"
NLVR2_dev_dev-115-1-0,"If all baboons shown are juveniles, and the right image features two young baboons posed sitting with faces close together.","[""SELECT['baboons']"", ""FILTER['#1', 'that are juveniles']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to #4']"", ""SELECT['the right image']"", ""PROJECT['baboons in #REF', '#6']"", ""FILTER['#7', 'that are young']"", ""FILTER['#8', 'that are posed sitting']"", ""PROJECT['faces of #REF', '#9']"", ""COMPARATIVE['#9', '#10', 'are close together']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is equal to two']"", ""BOOLEAN['logical_and', 'true', '#7', '#13']""]","[""SELECT['baboons']"", ""FILTER['#1', 'that are juveniles']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to #4']"", ""SELECT['the right image']"", ""PROJECT['baboons in #REF', '#6']"", ""FILTER['#7', 'that are young']"", ""FILTER['#8', 'that are posed sitting']"", ""PROJECT['faces of #REF', '#9']"", ""COMPARATIVE['#9', '#10', 'are close together']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is equal to two']"", ""BOOLEAN['logical_and', 'true', '#5', '#13']""]"
NLVR2_dev_dev-115-1-1,If the young monkey in the image on the right is being held by an older monkey.,"[""SELECT['right image']"", ""PROJECT['monkey in #REF', '#1']"", ""FILTER['#2', 'that is young']"", ""FILTER['#2', 'that is older']"", ""BOOLEAN['#3', 'is being held by #4']""]","[""SELECT['the image on the right']"", ""PROJECT['monkey in #REF', '#1']"", ""FILTER['#2', 'that is young']"", ""FILTER['#2', 'that is older']"", ""BOOLEAN['#3', 'is being held by #4']""]"
NLVR2_dev_dev-116-0-0,If a computer monitor rests on a shelf in at least one of the images.,"[""SELECT['computer monitor']"", ""SELECT['shelf']"", ""FILTER['#1', 'that rests on #2']"", ""BOOLEAN['#3', 'is in at least one of the images']""]","[""SELECT['computer monitor']"", ""SELECT['shelf']"", ""FILTER['#1', 'that rests on #2']"", ""BOOLEAN['#3', 'is in at least one image']""]"
NLVR2_dev_dev-117-0-1,If a key is hanging from at least one of the locks in the image on the right.,"[""SELECT['right image']"", ""PROJECT['key in #REF', '#1']"", ""PROJECT['locks in #REF', '#1']"", ""FILTER['#2', 'hanging from #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']""]","[""SELECT['right image']"", ""PROJECT['key in #REF', '#1']"", ""PROJECT['locks in #REF', '#1']"", ""FILTER['#3', 'that #2 is hanging from']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']""]"
NLVR2_dev_dev-117-2-0,If there is only one lock in each image.,"[""SELECT['locks']"", ""SELECT['images']"", ""GROUP['count', '#1', '#2']"", ""COMPARATIVE['#2', '#3', 'is equal to one']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to #6']""]","[""SELECT['images']"", ""PROJECT['locks in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is equal to one']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#5', 'is equal to #6']""]"
NLVR2_dev_dev-118-1-0,If there are no less than 3 black and white dogs.,"[""SELECT['dogs']"", ""FILTER['#1', 'that are black and white']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least 3']""]","[""SELECT['dogs']"", ""FILTER['#1', 'that are black and white']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least three']""]"
NLVR2_dev_dev-118-2-1,"If in one of the pair of images, two dogs faces are visible.","[""SELECT['dogs']"", ""PROJECT['faces of #REF', '#1']"", ""SELECT['images']"", ""GROUP['count', '#2', '#3']"", ""COMPARATIVE['#3', '#4', 'is equal to two']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']""]","[""SELECT['images']"", ""PROJECT['dogs in #REF', '#1']"", ""PROJECT['faces of #REF', '#2']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is equal to two']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is one']""]"
NLVR2_dev_dev-119-0-0,If in at least one image you can see a single dog  with a black nose both sitting on and covered by a white fabric.,"[""SELECT['dog']"", ""PROJECT['nose of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is black']"", ""SELECT['fabric']"", ""FILTER['#4', 'that is white']"", ""FILTER['#3', 'that is sitting on #5']"", ""FILTER['#6', 'that is covered by #5']"", ""SELECT['images']"", ""GROUP['count', '#7', '#8']"", ""COMPARATIVE['#8', '#9', 'is equal to one']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is at least one']""]","[""SELECT['dog']"", ""PROJECT['nose of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is black']"", ""SELECT['fabric']"", ""FILTER['#4', 'that is white']"", ""FILTER['#3', 'that is sitting on #5']"", ""FILTER['#6', 'that is covered by #5']"", ""SELECT['images']"", ""GROUP['count', '#7', '#8']"", ""COMPARATIVE['#8', '#9', 'is equal to one']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is at least one']“]"
NLVR2_dev_dev-119-2-1,"If the right image shows a chihuahua reclining on something white and soft, and the left image shows a chihuahua with a toy in front of it.","[""SELECT['right image']"", ""PROJECT['chihuahua in #REF', '#1']"", ""PROJECT['something in #REF', '#1']"", ""FILTER['#3', 'that is white and soft']"", ""BOOLEAN['#2', 'is reclining on #4']"", ""SELECT['left image']"", ""PROJECT['chihuahua in #REF', '#6']"", ""PROJECT['toy in #REF', '#6']"", ""BOOLEAN['#7', 'is with #8 in front of it']"", ""BOOLEAN['logical_and', 'true', '#5', '#9']""]","[""SELECT['right image']"", ""PROJECT['chihuahua in #REF', '#1']"", ""PROJECT['something in #REF', '#1']"", ""FILTER['#3', 'that is white and soft']"", ""BOOLEAN['#2', 'is reclining on #4']"", ""SELECT['left image']"", ""PROJECT['chihuahua in #REF', '#6']"", ""PROJECT['toy in #REF', '#6']"", ""BOOLEAN['#7', 'has #8 in front of it']"", ""BOOLEAN['logical_and', 'true', '#5', '#9']""]"
NLVR2_dev_dev-120-2-0,"If in the image on the right there is a phone withe the screen visible, a phone with the back visible, and a phone turned to the side.","[""SELECT['the image on the right']"", ""PROJECT['phones in #REF', '#1']"", ""PROJECT['screen of #REF', '#2']"", ""PROJECT['back of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is visible']"", ""COMPARATIVE['#2', '#3', 'is visible']"", ""INTERSECTION['#2', '#4', '#5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least one']"", ""BOOLEAN['#8', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#9', '#10']""]","[""SELECT['phones']"", ""PROJECT['screen of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is visible']"", ""PROJECT['back of #REF', '#1']"", ""COMPARATIVE['#1', '#4', 'is visible']"", ""INTERSECTION['#1', '#3', '#5']"", ""BOOLEAN['#6', 'is in the image on the right']"", ""BOOLEAN['#7', 'is turned to the side']"", ""BOOLEAN['logical_and', 'true', '#8', '#9']""]"
NLVR2_dev_dev-120-2-1,If the phone's profile is shown.,"[""SELECT['phone']"", ""PROJECT['profile of #REF', '#1']"", ""BOOLEAN['#2', 'is shown']""]","[""SELECT['phones']"", ""PROJECT['profile of #REF', '#1']"", ""BOOLEAN['#2', 'is shown']""]"
NLVR2_dev_dev-121-2-0,"If a single seal is swimming underwater in the image on the right, while the one on the left is partially above the surface.","[""SELECT['right image']"", ""PROJECT['seal in #REF', '#1']"", ""FILTER['#2', 'that is swimming underwater']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']"", ""SELECT['left image']"", ""PROJECT['seal in #REF', '#6']"", ""PROJECT['surface in #REF', '#6']"", ""BOOLEAN['#7', 'is partially above #8']"", ""BOOLEAN['logical_and', 'true', '#5', '#9']""]","[""SELECT['right image']"", ""PROJECT['seal in #REF', '#1']"", ""FILTER['#2', 'that is swimming underwater']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']"", ""SELECT['left image']"", ""PROJECT['seal in #REF', '#6']"", ""PROJECT['surface in #REF', '#6']"", ""FILTER['#7', 'that is partially above #8']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#5', '#11']""]"
NLVR2_dev_dev-12-2-0,"If each image contains one reclining wolf, and exactly one image shows a wolf surrounded by snow.","[""SELECT['images']"", ""PROJECT['wolves in #REF', '#1']"", ""FILTER['#2', 'that are reclining']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is equal to one']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#6', 'is equal to #7']"", ""SELECT['snow']"", ""FILTER['#1', 'that is surrounded by #8']"", ""BOOLEAN['#9', 'is in exactly one image']"", ""BOOLEAN['logical_and', 'true', '#8', '#10']""]","[""SELECT['images']"", ""PROJECT['wolves in #REF', '#1']"", ""FILTER['#2', 'that are reclining']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is equal to one']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#6', 'is equal to #7']"", ""SELECT['snow']"", ""FILTER['#1', 'that is surrounded by #8']"", ""BOOLEAN['#9', 'is in one image']"", ""BOOLEAN['logical_and', 'true', '#8', '#10']""]"
NLVR2_dev_dev-12-2-1,If a single wolf is lying down and sleeping in the image on the left.,"[""SELECT['left image']"", ""PROJECT['wolf in #REF', '#1']"", ""FILTER['#2', 'that is lying down']"", ""FILTER['#3', 'that is sleeping']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']""]","[""SELECT['the image on the left']"", ""PROJECT['wolves in #REF', '#1']"", ""FILTER['#2', 'that are lying down']"", ""FILTER['#3', 'that are sleeping']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']""."
NLVR2_dev_dev-122-2-0,"If one image features a single zebra with its rear to the camera, and the other image contains exactly two zebra standing close together.","[""SELECT['one image']"", ""PROJECT['zebras in #REF', '#1']"", ""PROJECT['rear of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is to the camera']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']"", ""SELECT['other image']"", ""PROJECT['zebras in #REF', '#7']"", ""FILTER['#8', 'that are standing close together']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to two']"", ""BOOLEAN['logical_and', 'true', '#6', '#11']""]","[""SELECT['one image']"", ""PROJECT['zebra in #REF', '#1']"", ""PROJECT['rear of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is to the camera']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']"", ""SELECT['other image']"", ""PROJECT['zebras in #REF', '#7']"", ""FILTER['#8', 'that are standing close together']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to two']"", ""BOOLEAN['logical_and', 'true', '#6', '#11']""]"
NLVR2_dev_dev-122-2-1,If there is a zebra facing away from the camera with it's backside facing the camera,"[""SELECT['zebra']"", ""FILTER['#1', 'that is facing away from the camera']"", ""PROJECT['backside of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is facing the camera']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']""]","[""SELECT['zebra']"", ""FILTER['#1', 'that is facing away from the camera']"", ""PROJECT['backside of #REF', '#2']"", ""BOOLEAN['#3', 'is facing the camera']""]"
NLVR2_dev_dev-123-0-1,"If one image shows one panda hanging onto a thick log, and the other image shows two interacting pandas.","[""SELECT['one image']"", ""PROJECT['pandas in #REF', '#1']"", ""PROJECT['log in #REF', '#1']"", ""FILTER['#3', 'that is thick']"", ""FILTER['#2', 'hanging onto #4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']"", ""SELECT['the other image']"", ""PROJECT['pandas in #REF', '#8']"", ""FILTER['#9', 'that are interacting']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is equal to two']"", ""BOOLEAN['logical_and', 'true', '#7', '#12']""]","[""SELECT['one image']"", ""PROJECT['panda in #REF', '#1']"", ""PROJECT['log in #REF', '#1']"", ""FILTER['#3', 'that is thick']"", ""FILTER['#2', 'hanging onto #4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']"", ""SELECT['other image']"", ""PROJECT['pandas in #REF', '#8']"", ""FILTER['#9', 'that are interacting']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is equal to two']"", ""BOOLEAN['logical_and', 'true', '#7', '#12']""]"
NLVR2_dev_dev-123-2-0,"If in one image, a panda is facing forward while leaning on a tree branch, its chin resting on the tree's surface.","[""SELECT['panda']"", ""FILTER['#1', 'that is facing forward']"", ""SELECT['tree branch']"", ""FILTER['#2', 'leaning on #3']"", ""PROJECT['chin of #REF', '#4']"", ""SELECT['tree']"", ""PROJECT['surface of #REF', '#5']"", ""COMPARATIVE['#4', '#6', 'is resting on #7']"", ""BOOLEAN['#8', 'is in one image']""]","[""SELECT['panda']"", ""FILTER['#1', 'that is facing forward']"", ""SELECT['tree branch']"", ""FILTER['#2', 'leaning on #3']"", ""PROJECT['chin of #REF', '#4']"", ""SELECT['tree surface']"", ""COMPARATIVE['#4', '#5', 'is resting on #6']"", ""BOOLEAN['#7', 'is in one image']""]"
NLVR2_dev_dev-124-0-0,"If each image shows a pair of pandas, and one panda pair is in a nose-to-nose kissing pose.","[""SELECT['pair of pandas']"", ""SELECT['images']"", ""GROUP['count', '#1', '#2']"", ""COMPARATIVE['#2', '#3', 'is equal to two']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#5', 'is equal to #6']"", ""FILTER['#1', 'that are in a nose-to-nose kissing pose']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#7', '#10']""]","[""SELECT['pair of pandas']"", ""SELECT['images']"", ""GROUP['count', '#1', '#2']"", ""COMPARATIVE['#2', '#3', 'is equal to two']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#5', 'is equal to #6']"", ""FILTER['#1', 'that are in a nose-to-nose kissing pose']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#7', '#11']""]"
NLVR2_dev_dev-125-0-1,If a german shepherd has its tongue hanging out and is not making a fierce expression.,"[""SELECT['german shepherd']"", ""PROJECT['tongue of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is hanging out']"", ""SELECT['fierce expression']"", ""BOOLEAN['#3', 'is not making #4']""]","[""SELECT['german shepherd']"", ""PROJECT['tongue of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is hanging out']"", ""SELECT['ferocious expression']"", ""BOOLEAN['#3', 'is making #4']""]"
NLVR2_dev_dev-125-3-0,If each image contains a juvenile dog.,"[""SELECT['dog']"", ""FILTER['#1', 'that is juvenile']"", ""PROJECT['images of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""SELECT['images']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to #4']""]","[""SELECT['dogs']"", ""FILTER['#1', 'that are juvenile']"", ""PROJECT['images of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""SELECT['images']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to #4']""]"
NLVR2_dev_dev-126-2-1,If the right image contains a desk near a window.,"[""SELECT['desk']"", ""SELECT['window']"", ""FILTER['#1', 'near #2']"", ""BOOLEAN['#3', 'is in the right image']""]","[""SELECT['right image']"", ""PROJECT['desk in #REF', '#1']"", ""PROJECT['window in #REF', '#1']"", ""FILTER['#2', 'near #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']""]"
NLVR2_dev_dev-127-0-0,If there are exactly four window shades.,"[""SELECT['window shades']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to four']""]","[""SELECT['window shades']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to four']""]."
NLVR2_dev_dev-128-0-1,"If all locks are round, and one image contains three identical locks.","[""SELECT['images']"", ""PROJECT['locks in #REF', '#1']"", ""FILTER['#2', 'that are round']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#5', 'is equal to #4']"", ""PROJECT['locks in #REF', '#1']"", ""FILTER['#7', 'that are identical']"", ""GROUP['count', '#8', '#1']"", ""COMPARATIVE['#1', '#9', 'is equal to three']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is equal to one']""]","[""SELECT['locks']"", ""FILTER['#1', 'that are round']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to #4']"", ""SELECT['images']"", ""PROJECT['locks in #REF', '#5']"", ""FILTER['#6', 'that are identical']"", ""GROUP['count', '#7', '#5']"", ""COMPARATIVE['#5', '#8', 'is equal to three']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to one']""]"
NLVR2_dev_dev-128-1-0,If the right image contains three locks.,"[""SELECT['right image']"", ""PROJECT['locks in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to three']""]","[""SELECT['the right image']"", ""PROJECT['locks of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to three']""]"
NLVR2_dev_dev-129-2-0,If one image shows one lady in a long all-black gown standing behind a rightward-facing hound that is standing up.,"[""SELECT['lady']"", ""SELECT['gown']"", ""FILTER['#2', 'that is all-black']"", ""FILTER['#3', 'that is long']"", ""FILTER['#1', 'in #4']"", ""SELECT['hound']"", ""FILTER['#6', 'that is standing up']"", ""FILTER['#7', 'that is rightward-facing']"", ""FILTER['#5','standing behind #8']"", ""PROJECT['images of #REF', '#9']"", ""GROUP['count', '#9', '#10']"", ""COMPARATIVE['#10', '#11', 'is equal to one']"", ""AGGREGATE['count', '#12']"", ""BOOLEAN['#13', 'is equal to one']""]","[""SELECT['lady']"", ""SELECT['gown']"", ""FILTER['#2', 'that is all-black']"", ""FILTER['#3', 'that is long']"", ""FILTER['#1', 'in #4']"", ""SELECT['hound']"", ""FILTER['#6', 'that is rightward-facing']"", ""FILTER['#7', 'that is standing up']"", ""FILTER['#5','standing behind #8']"", ""BOOLEAN['#9', 'is in one image']""]"
NLVR2_dev_dev-129-2-1,"If in each image, a woman is posed with a large white dog with pointed nose that is standing sideways, the woman smiling in only one photo.","[""SELECT['woman']"", ""SELECT['dog']"", ""FILTER['#2', 'that is large']"", ""FILTER['#3', 'that is white']"", ""PROJECT['nose of #REF', '#4']"", ""COMPARATIVE['#4', '#5', 'is pointed']"", ""FILTER['#6', 'that is standing sideways']"", ""FILTER['#1', 'that is smiling']"", ""SELECT['photos']"", ""GROUP['count', '#7', '#8']"", ""COMPARATIVE['#8', '#9', 'is equal to one']"", ""AGGREGATE['count', '#10']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is equal to #13']""]","[""SELECT['woman']"", ""SELECT['dog']"", ""FILTER['#2', 'that is large']"", ""FILTER['#3', 'that is white']"", ""PROJECT['nose of #REF', '#4']"", ""COMPARATIVE['#4', '#5', 'is pointed']"", ""FILTER['#6', 'that is standing sideways']"", ""FILTER['#1', 'that is smiling']"", ""SELECT['photos']"", ""GROUP['count', '#7', '#8']"", ""COMPARATIVE['#8', '#9', 'is at least one']"", ""AGGREGATE['count', '#10']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#11', 'is equal to #12']""]"
NLVR2_dev_dev-1-3-0,"If at least one hand is touching a furry dog in each image, and no image includes a non-dog pet.","[""SELECT['images']"", ""PROJECT['hands in #REF', '#1']"", ""PROJECT['dogs in #REF', '#1']"", ""FILTER['#3', 'that are furry']"", ""FILTER['#2', 'touching #4']"", ""GROUP['count', '#5', '#1']"", ""COMPARATIVE['#1', '#6', 'is at least one']"", ""AGGREGATE['count', '#7']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#8', 'is equal to #9']"", ""SELECT['images']"", ""PROJECT['pets in #REF', '#11']"", ""FILTER['#12', 'that are non-dog']"", ""AGGREGATE['count', '#13']"", ""BOOLEAN['#14', 'is equal to zero']"", ""BOOLEAN['logical_and', 'true', '#10', '#15']""]","[""SELECT['images']"", ""PROJECT['hands in #REF', '#1']"", ""PROJECT['dogs in #REF', '#1']"", ""FILTER['#3', 'that are furry']"", ""FILTER['#2', 'touching #4']"", ""GROUP['count', '#5', '#1']"", ""COMPARATIVE['#1', '#6', 'is at least one']"", ""AGGREGATE['count', '#7']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#8', 'is equal to #9']"", ""SELECT['images']"", ""PROJECT['pets in #REF', '#10']"", ""FILTER['#11', 'that are non-dog']"", ""AGGREGATE['count', '#12']"", ""BOOLEAN['#13', 'is equal to zero']"", ""BOOLEAN['logical_and', 'true', '#8', '#14']""]"
NLVR2_dev_dev-130-3-0,If one of the dogs has a yellow soccer ball.,"[""SELECT['dogs']"", ""SELECT['soccer ball']"", ""FILTER['#2', 'that is yellow']"", ""FILTER['#1', 'that has #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']""]","[""SELECT['dogs']"", ""SELECT['soccer ball']"", ""FILTER['#2', 'that is yellow']"", ""FILTER['#1', 'that have #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']""]"
NLVR2_dev_dev-130-3-1,If an image contains a dogs playing with a yellow and black ball.,"[""SELECT['dogs']"", ""SELECT['ball']"", ""FILTER['#2', 'that is yellow and black']"", ""FILTER['#1', 'playing with #3']"", ""BOOLEAN['#4', 'is in an image']""]","[""SELECT['dog']"", ""SELECT['ball']"", ""FILTER['#2', 'that is yellow and black']"", ""FILTER['#1', 'playing with #3']"", ""BOOLEAN['#4', 'is in an image']""]"
NLVR2_dev_dev-13-1-0,If there are no humans in any images.,"[""SELECT['humans']"", ""SELECT['images']"", ""GROUP['count', '#1', '#2']"", ""COMPARATIVE['#2', '#3', 'is equal to zero']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']""]","[""SELECT['humans']"", ""PROJECT['images of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to zero']""]"
NLVR2_dev_dev-131-0-1,If a beaker has liquid in it.,"[""SELECT['beaker']"", ""SELECT['liquid']"", ""BOOLEAN['#1', 'has #2 in']""]","[""SELECT['beaker']"", ""SELECT['liquid']"", ""BOOLEAN['#1', 'has #2 in it']""]"
NLVR2_dev_dev-131-2-0,If at least one of the beakers is plastic.,"[""SELECT['beakers']"", ""FILTER['#1', 'that are plastic']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least one']""]","[""SELECT['beakers']"", ""PROJECT['plastic #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least one']""]"
NLVR2_dev_dev-132-0-0,If the mountain goats in one of the pictures are standing on the side of a man made wall.,"[""SELECT['mountain goats']"", ""SELECT['wall']"", ""FILTER['#2', 'that is man made']"", ""PROJECT['the side of #REF', '#3']"", ""FILTER['#1','standing on #4']"", ""BOOLEAN['#5', 'are in one of the pictures']""]","[""SELECT['mountain goats']"", ""SELECT['wall']"", ""FILTER['#2', 'that is man made']"", ""PROJECT['side of #REF', '#3']"", ""FILTER['#1','standing on #4']"", ""BOOLEAN['#5', 'is in one of the pictures']""]"
NLVR2_dev_dev-132-1-1,"If the left image shows at least two goats scaling a very flat, very slanted stone wall.","[""SELECT['left image']"", ""PROJECT['goats in #REF', '#1']"", ""PROJECT['wall in #REF', '#1']"", ""FILTER['#3', 'that is stone']"", ""FILTER['#4', 'that is very flat']"", ""FILTER['#5', 'that is very slanted']"", ""FILTER['#2', 'that are scaling #6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is at least two']""]","[""SELECT['the left image']"", ""PROJECT['goats in #REF', '#1']"", ""PROJECT['wall in #REF', '#1']"", ""FILTER['#3', 'that is very flat']"", ""FILTER['#4', 'that is very slanted']"", ""FILTER['#2', 'that are scaling #5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least two']""]"
NLVR2_dev_dev-133-1-0,"If one image contains a carcass, and the right image contains twice as many vultures as the left image.","[""SELECT['carcass']"", ""BOOLEAN['#1', 'is in one image']"", ""SELECT['right image']"", ""SELECT['left image']"", ""PROJECT['vultures in #REF', '#3']"", ""PROJECT['vultures in #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#6']"", ""ARITHMETIC['division', '#7', '#8']"", ""BOOLEAN['#9', 'is equal to two']"", ""BOOLEAN['logical_and', 'true', '#10', '#11']""]","[""SELECT['carcass']"", ""BOOLEAN['#1', 'is in one image']"", ""SELECT['the right image']"", ""SELECT['the left image']"", ""PROJECT['vultures in #REF', '#3']"", ""PROJECT['vultures in #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#6']"", ""ARITHMETIC['division', '#7', '#8']"", ""BOOLEAN['#9', 'is equal to two']"", ""BOOLEAN['logical_and', 'true', '#10', '#11']""."
NLVR2_dev_dev-133-3-1,If the left and right image contains a total of three vultures.,"[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['vultures in #REF', '#1']"", ""PROJECT['vultures in #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['sum', '#5', '#6']"", ""BOOLEAN['#7', 'is equal to three']""]","[""SELECT['left image']"", ""PROJECT['vultures in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""SELECT['right image']"", ""PROJECT['vultures in #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""ARITHMETIC['sum', '#3', '#6']"", ""BOOLEAN['#7', 'is equal to three']""]"
NLVR2_dev_dev-134-1-0,If there is at least one upholstered ottoman at the foot of a bed in one of the images.,"[""SELECT['ottoman']"", ""FILTER['#1', 'that is upholstered']"", ""SELECT['bed']"", ""PROJECT['the foot of #REF', '#3']"", ""FILTER['#2', 'at #4']"", ""SELECT['images']"", ""GROUP['count', '#5', '#6']"", ""COMPARATIVE['#6', '#7', 'is at least one']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to one']""]","[""SELECT['ottoman']"", ""FILTER['#1', 'that is upholstered']"", ""SELECT['bed']"", ""PROJECT['the foot of #REF', '#3']"", ""FILTER['#2', 'at #4']"", ""PROJECT['images of #REF', '#5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least one']""]"
NLVR2_dev_dev-134-3-1,If an image shows a four-posted tied canopy bed with a tufted footboard and headboard visible.,"[""SELECT['canopy bed']"", ""FILTER['#1', 'that is tied']"", ""FILTER['#2', 'that is four-posted']"", ""PROJECT['footboard of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is tufted']"", ""PROJECT['headboard of #REF', '#5']"", ""COMPARATIVE['#5', '#6', 'is tufted']"", ""INTERSECTION['#5', '#7', '#8']"", ""BOOLEAN['#9', 'is in an image']""]","[""SELECT['canopy bed']"", ""FILTER['#1', 'that is tied']"", ""FILTER['#2', 'that is four-posted']"", ""PROJECT['footboard of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is tufted']"", ""PROJECT['headboard of #REF', '#5']"", ""COMPARATIVE['#5', '#6', 'are visible']"", ""BOOLEAN['#7', 'is in an image']""]"
NLVR2_dev_dev-135-1-0,"If in one image, hands are grasping opposite sides of a crab and separating the shell from the body to expose the meat inside.","[""SELECT['hands']"", ""SELECT['crab']"", ""PROJECT['sides of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'are opposite']"", ""PROJECT['shell of #REF', '#4']"", ""PROJECT['body of #REF', '#4']"", ""PROJECT['meat inside #REF', '#4']"", ""FILTER['#6', 'that is inside #5']"", ""FILTER['#1', 'grasping #7']"", ""FILTER['#8','separating #9']"", ""BOOLEAN['#10', 'are in one image']""]","[""SELECT['hands']"", ""SELECT['crab']"", ""PROJECT['sides of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'are opposite']"", ""PROJECT['shell of #REF', '#4']"", ""PROJECT['body of #REF', '#4']"", ""PROJECT['meat inside #REF', '#4']"", ""FILTER['#5', 'that is inside #6']"", ""FILTER['#1', 'grasping #7']"", ""FILTER['#8','separating #9']"", ""BOOLEAN['#10', 'is in one image']""]"
NLVR2_dev_dev-135-1-1,If a person is prying open the crab body.,"[""SELECT['person']"", ""SELECT['crab body']"", ""BOOLEAN['#1', 'is prying open #2']""]","[""SELECT['person']"", ""SELECT['crab']"", ""PROJECT['body of #REF', '#2']"", ""BOOLEAN['#1', 'is prying open #2']""]"
NLVR2_dev_dev-136-0-1,If the boat is completely in the water in one image and sitting on the edge of the water in the other image.,"[""SELECT['one image']"", ""PROJECT['boat in #REF', '#1']"", ""PROJECT['water in #REF', '#1']"", ""BOOLEAN['#2', 'is completely in #3']"", ""SELECT['other image']"", ""PROJECT['boat in #REF', '#5']"", ""PROJECT['edge of #REF', '#5']"", ""BOOLEAN['#6', 'is sitting on #7']"", ""BOOLEAN['logical_and', 'true', '#4', '#8']""]","[""SELECT['one image']"", ""PROJECT['boat in #REF', '#1']"", ""PROJECT['water in #REF', '#1']"", ""BOOLEAN['#2', 'is completely in #3']"", ""SELECT['the other image']"", ""PROJECT['boat in #REF', '#5']"", ""PROJECT['edge of #REF', '#5']"", ""BOOLEAN['#6', 'is sitting on #7']"", ""BOOLEAN['logical_and', 'true', '#4', '#8']""]"
NLVR2_dev_dev-136-1-0,If an image shows a man in a hat standing on the beach by a green boat pulled up on shore.,"[""SELECT['man']"", ""SELECT['hat']"", ""FILTER['#1', 'in #2']"", ""SELECT['boat']"", ""FILTER['#4', 'that is green']"", ""SELECT['shore']"", ""FILTER['#5', 'pulled up on #6']"", ""FILTER['#3','standing on #7']"", ""BOOLEAN['#8', 'is in an image']""]","[""SELECT['man']"", ""SELECT['hat']"", ""FILTER['#1', 'that is in #2']"", ""SELECT['boat']"", ""FILTER['#4', 'that is green']"", ""SELECT['shore']"", ""FILTER['#5', 'pulled up on #6']"", ""FILTER['#3','standing on #7']"", ""BOOLEAN['#8', 'is by #9']""]"
NLVR2_dev_dev-137-1-0,If one image shows an instrument made of silver and the other has an instrument made of brass or gold.,"[""SELECT['one image']"", ""PROJECT['instrument in #REF', '#1']"", ""BOOLEAN['#2', 'is made of silver']"", ""SELECT['other image']"", ""PROJECT['instrument in #REF', '#4']"", ""BOOLEAN['#5', 'is made of brass']"", ""BOOLEAN['#5', 'is made of gold']"", ""BOOLEAN['logical_and', 'true', '#3', '#6']""]","[""SELECT['one image']"", ""PROJECT['instrument in #REF', '#1']"", ""BOOLEAN['#2', 'is made of silver']"", ""SELECT['other image']"", ""PROJECT['instrument in #REF', '#4']"", ""BOOLEAN['#5', 'is made of brass']"", ""BOOLEAN['#5', 'is made of gold']"", ""BOOLEAN['logical_and', 'true', '#6', '#7']""]"
NLVR2_dev_dev-137-3-1,"If the left and right images feature saxophones of similar color, and no image shows a detached mouthpiece.","[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['saxophones in #REF', '#1']"", ""PROJECT['saxophones in #REF', '#2']"", ""PROJECT['color of #REF', '#3']"", ""PROJECT['color of #REF', '#4']"", ""COMPARATIVE['#4', '#5', 'is similar']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to zero']"", ""SELECT['mouthpiece']"", ""FILTER['#9', 'that is detached']"", ""BOOLEAN['#10', 'is in no image']"", ""BOOLEAN['logical_and', 'true', '#8', '#11']""]","[""SELECT['left image']"", ""PROJECT['saxophones in #REF', '#1']"", ""PROJECT['color of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is similar']"", ""AGGREGATE['count', '#4']"", ""SELECT['right image']"", ""PROJECT['saxophones in #REF', '#6']"", ""PROJECT['color of #REF', '#7']"", ""COMPARATIVE['#7', '#8', 'is similar']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to zero']"", ""PROJECT['mouthpiece in #REF', '#6']"", ""BOOLEAN['#11', 'is detached']"", ""BOOLEAN['logical_and', 'true', '#5', '#12']""]"
NLVR2_dev_dev-138-3-0,If there are more than two dogs.,"[""SELECT['dogs']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is higher than two']""]","[""SELECT['dogs']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is at most two']""]"
NLVR2_dev_dev-139-0-0,If there is a pencil pouch with the zipper open on top,"[""SELECT['pencil pouch']"", ""PROJECT['zipper of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is open']"", ""BOOLEAN['#3', 'is on top of #1']""]","[""SELECT['pencil pouch']"", ""PROJECT['zipper of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is open']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']""]"
NLVR2_dev_dev-139-1-1,If the right image contains only a cylindrical closed pencil case with a blue textured exterior.,"[""SELECT['pencil case']"", ""FILTER['#1', 'that is cylindrical']"", ""FILTER['#2', 'that is closed']"", ""PROJECT['exterior of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is blue']"", ""COMPARATIVE['#3', '#4', 'is textured']"", ""INTERSECTION['#3', '#5', '#6']"", ""BOOLEAN['#7', 'is in the right image']""]","[""SELECT['pencil case']"", ""FILTER['#1', 'that is cylindrical']"", ""FILTER['#2', 'that is closed']"", ""PROJECT['exterior of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is blue textured']"", ""BOOLEAN['#5', 'is in the right image']""]"
NLVR2_dev_dev-140-0-0,If people are standing at a food service counter in the image on the right.,"[""SELECT['people']"", ""SELECT['food service counter']"", ""FILTER['#1','standing at #2']"", ""BOOLEAN['#3', 'are in the image on the right']""]","[""SELECT['people']"", ""SELECT['food service counter']"", ""FILTER['#1','standing at #2']"", ""BOOLEAN['#3', 'are in right image']""]"
NLVR2_dev_dev-141-2-0,If there are both women and men.,"[""SELECT['women']"", ""SELECT['men']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least one']"", ""BOOLEAN['#4', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#5', '#6']""]","[""SELECT['women']"", ""SELECT['men']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least two']"", ""BOOLEAN['#4', 'is at least two']"", ""BOOLEAN['logical_and', 'true', '#5', '#6']""]"
NLVR2_dev_dev-141-3-1,If three dumb bells are being held by humans.,"[""SELECT['dumb bells']"", ""SELECT['humans']"", ""FILTER['#1', 'being held by #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to three']""]","[""SELECT['dumb bells']"", ""SELECT['humans']"", ""BOOLEAN['#1', 'are being held by #2']""]"
NLVR2_dev_dev-142-0-1,"If one image shows multiple golf balls that aren't displayed in a vertically-stacked pyramid, and the other contains a single white ball with printing on it.","[""SELECT['one image']"", ""PROJECT['golf balls in #REF', '#1']"", ""PROJECT['pyramid in #REF', '#1']"", ""FILTER['#3', 'that is vertically-stacked']"", ""FILTER['#2', 'displayed in #4']"", ""DISCARD['#2', '#5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least two']"", ""SELECT['other image']"", ""PROJECT['golf ball in #REF', '#9']"", ""FILTER['#10', 'that is white']"", ""PROJECT['printing on #REF', '#11']"", ""FILTER['#12', 'with #13']"", ""AGGREGATE['count', '#14']"", ""BOOLEAN['#15', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#8', '#16']""]","[""SELECT['one image']"", ""PROJECT['golf balls in #REF', '#1']"", ""PROJECT['pyramid in #REF', '#1']"", ""FILTER['#3', 'that is vertically-stacked']"", ""FILTER['#2', 'displayed in #4']"", ""DISCARD['#2', '#5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least two']"", ""SELECT['other image']"", ""PROJECT['golf ball in #REF', '#9']"", ""FILTER['#10', 'that is white']"", ""PROJECT['printing of #REF', '#11']"", ""FILTER['#12', 'with #13 on it']"", ""AGGREGATE['count', '#14']"", ""BOOLEAN['#15', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#8', '#16']”]"
NLVR2_dev_dev-142-2-0,If there are more than nine golf balls.,"[""SELECT['golf balls']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is higher than nine']""]","[""SELECT['golf balls']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is at least nine']""]"
NLVR2_dev_dev-14-3-1,If one of the images shows at least one open safety pin.,"[""SELECT['safety pins']"", ""FILTER['#1', 'that are open']"", ""SELECT['images']"", ""GROUP['count', '#2', '#3']"", ""COMPARATIVE['#3', '#4', 'is at least one']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']""]","[""SELECT['safety pins']"", ""FILTER['#1', 'that are open']"", ""SELECT['images']"", ""GROUP['count', '#2', '#3']"", ""COMPARATIVE['#3', '#4', 'is at least one']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']""]."
NLVR2_dev_dev-143-1-0,If exactly one doctor is looking at a syringe.,"[""SELECT['doctors']"", ""SELECT['syringe']"", ""FILTER['#1', 'looking at #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]","[""SELECT['doctor']"", ""SELECT['syringe']"", ""FILTER['#1', 'looking at #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]"
NLVR2_dev_dev-143-2-1,If the left image shows a forward-facing woman in white holding up a syringe with one gloved hand.,"[""SELECT['woman']"", ""FILTER['#1', 'that is forward-facing']"", ""FILTER['#2', 'in white']"", ""SELECT['syringe']"", ""PROJECT['hand of #REF', '#4']"", ""FILTER['#5', 'that is gloved']"", ""FILTER['#3', 'holding up #6']"", ""BOOLEAN['#7', 'is in the left image']""]","[""SELECT['woman']"", ""FILTER['#1', 'that is forward-facing']"", ""FILTER['#2', 'that is in white']"", ""SELECT['syringe']"", ""SELECT['hand']"", ""FILTER['#5', 'that is gloved']"", ""FILTER['#3', 'holding up #6']"", ""BOOLEAN['#7', 'is in the left image']""]"
NLVR2_dev_dev-144-2-1,If the dog in the image on the right has their mouth wide open and tongue lolling out.,"[""SELECT['right image']"", ""PROJECT['dog in #REF', '#1']"", ""PROJECT['mouth of #REF', '#2']"", ""BOOLEAN['#3', 'is wide open']"", ""PROJECT['tongue of #REF', '#2']"", ""BOOLEAN['#5', 'is lolling out']"", ""BOOLEAN['logical_and', 'true', '#4', '#6']""]","[""SELECT['right image']"", ""PROJECT['dog in #REF', '#1']"", ""PROJECT['mouth of #REF', '#2']"", ""BOOLEAN['#3', 'is wide open']"", ""PROJECT['tongue of #REF', '#2']"", ""BOOLEAN['#5', 'lolling out']"", ""BOOLEAN['logical_and', 'true', '#4', '#6']""]"
NLVR2_dev_dev-144-3-0,If only one of the dogs is on a leash.,"[""SELECT['dogs']"", ""SELECT['leash']"", ""FILTER['#1', 'on #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]","[""SELECT['dogs']"", ""SELECT['a leash']"", ""FILTER['#1', 'on #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]."
NLVR2_dev_dev-145-0-0,If two cows are standing on dry land in the image on the right.,"[""SELECT['right image']"", ""PROJECT['cows in #REF', '#1']"", ""PROJECT['land in #REF', '#1']"", ""FILTER['#3', 'that is dry']"", ""FILTER['#2','standing on #4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to two']""]","[""SELECT['right image']"", ""PROJECT['cows of #REF', '#1']"", ""PROJECT['land in #REF', '#1']"", ""FILTER['#3', 'that is dry']"", ""FILTER['#2','standing on #4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to two']""]"
NLVR2_dev_dev-145-2-1,"If the left image features water buffalo at least chest deep in water, and the right image includes a camera-facing water buffalo on dry ground.","[""SELECT['left image']"", ""PROJECT['water buffalo in #REF', '#1']"", ""PROJECT['water in #REF', '#1']"", ""FILTER['#2', 'that is chest deep in #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']"", ""SELECT['right image']"", ""PROJECT['water buffalo in #REF', '#7']"", ""FILTER['#8', 'that is camera-facing']"", ""PROJECT['ground in #REF', '#7']"", ""FILTER['#9', 'that is dry']"", ""FILTER['#10', 'on #11']"", ""AGGREGATE['count', '#12']"", ""BOOLEAN['#13', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#6', '#14']""]","[""SELECT['left image']"", ""PROJECT['water buffalo in #REF', '#1']"", ""PROJECT['water in #REF', '#1']"", ""FILTER['#3', 'that is chest deep in #2']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']"", ""SELECT['right image']"", ""PROJECT['water buffalo in #REF', '#7']"", ""FILTER['#8', 'that is camera-facing']"", ""PROJECT['ground in #REF', '#7']"", ""FILTER['#9', 'that is dry']"", ""FILTER['#10', 'on #11']"", ""AGGREGATE['count', '#12']"", ""BOOLEAN['#13', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#6', '#14']""]"
NLVR2_dev_dev-146-0-1,"If one dog is orange-and-white and the other dog has tri-color fur, and all dogs face forward.","[""SELECT['dogs']"", ""FILTER['#1', 'that are orange-and-white']"", ""PROJECT['fur of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is tri-color']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']"", ""FILTER['#1', 'that face forward']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to #9']"", ""BOOLEAN['logical_and', 'true', '#6', '#10']""]","[""SELECT['one dog']"", ""FILTER['#1', 'that is orange-and-white']"", ""PROJECT['fur of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is tri-color']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']"", ""SELECT['dogs']"", ""FILTER['#8', 'that face forward']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to #11']"", ""BOOLEAN['logical_and', 'true', '#6', '#12']""]"
NLVR2_dev_dev-146-3-0,If at least one dog is laying down.,"[""SELECT['dog']"", ""FILTER['#1', 'that is laying down']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least one']""]","[""SELECT['dogs']"", ""FILTER['#1', 'laying down']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least one']""]"
NLVR2_dev_dev-147-0-1,"If the top shell of a crab is visible in each image, and the crabs on the left and right are displayed in the same position and manner.","[""SELECT['crabs']"", ""PROJECT['top shell of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is visible']"", ""SELECT['images']"", ""GROUP['count', '#3', '#4']"", ""COMPARATIVE['#4', '#5', 'is at least one']"", ""AGGREGATE['count', '#6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to #9']"", ""FILTER['#1', 'on the left']"", ""FILTER['#1', 'on the right']"", ""PROJECT['position of #REF', '#10']"", ""PROJECT['managing of #REF', '#11']"", ""BOOLEAN['#12', 'is the same as #13']"", ""BOOLEAN['logical_and', 'true', '#7', '#14']""]","[""SELECT['crabs']"", ""PROJECT['top shell of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is visible']"", ""SELECT['images']"", ""GROUP['count', '#3', '#4']"", ""COMPARATIVE['#4', '#5', 'is at least one']"", ""AGGREGATE['count', '#6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to #9']"", ""FILTER['#1', 'on the left']"", ""FILTER['#1', 'on the right']"", ""PROJECT['position of #REF', '#10']"", ""PROJECT['managing of #REF', '#11']"", ""BOOLEAN['#12', 'is the same as #13']"", ""BOOLEAN['logical_and', 'true', '#8', '#14']""]"
NLVR2_dev_dev-147-2-0,If there are several crabs together in the image on the left.,"[""SELECT['left image']"", ""PROJECT['crabs in #REF', '#1']"", ""FILTER['#2', 'that are together']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least two']""]","[""SELECT['left image']"", ""PROJECT['crabs of #REF', '#1']"", ""FILTER['#2', 'that are together']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least two']""]"
NLVR2_dev_dev-148-1-0,If there is a large computer monitor in both images.,"[""SELECT['computer monitor']"", ""FILTER['#1', 'that is large']"", ""PROJECT['images of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']""]","[""SELECT['computer monitor']"", ""FILTER['#1', 'that is large']"", ""PROJECT['images of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']""]"
NLVR2_dev_dev-149-2-0,If at least one of the monkeys is awake.,"[""SELECT['monkeys']"", ""FILTER['#1', 'that are awake']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least one']""]","[""SELECT['monkeys']"", ""FILTER['#1', 'that is awake']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least one']""]"
NLVR2_dev_dev-149-3-1,If a baboob is laying on his back in the brach of a tree,"[""SELECT['baboob']"", ""PROJECT['back of #REF', '#1']"", ""SELECT['tree']"", ""PROJECT['brach of #REF', '#3']"", ""BOOLEAN['#2', 'is laying on #4']""]","[""SELECT['baboob']"", ""PROJECT['back of #REF', '#1']"", ""SELECT['tree']"", ""PROJECT['brach of #REF', '#3']"", ""BOOLEAN['#2', 'is in #4']""]"
NLVR2_dev_dev-15-0-0,If there are two red bikini tops.,"[""SELECT['bikini tops']"", ""FILTER['#1', 'that are red']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']""]","[""SELECT['bikinis']"", ""FILTER['#1', 'that are red']"", ""PROJECT['tops of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']""."
NLVR2_dev_dev-150-2-0,"If every image has more than one dog photographed outside, and the right and left hand images have the same number of dogs.","[""SELECT['dogs']"", ""FILTER['#1', 'that are photographed outside']"", ""SELECT['images']"", ""GROUP['count', '#2', '#3']"", ""COMPARATIVE['#3', '#4', 'is higher than one']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to #7']"", ""SELECT['the right hand image']"", ""SELECT['the left hand image']"", ""PROJECT['dogs in #REF', '#9']"", ""PROJECT['dogs in #REF', '#10']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is equal to #13']"", ""BOOLEAN['logical_and', 'true', '#8', '#14']""]","[""SELECT['images']"", ""PROJECT['dogs in #REF', '#1']"", ""FILTER['#2', 'that are photographed outside']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is higher than one']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#6', 'is equal to #7']"", ""SELECT['the right hand image']"", ""PROJECT['dogs in #REF', '#9']"", ""SELECT['the left hand image']"", ""PROJECT['dogs in #REF', '#10']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is equal to #13']"", ""BOOLEAN['logical_and', 'true', '#7', '#14']""]"
NLVR2_dev_dev-151-0-1,If there is a white and black wolf standing in the forest.,"[""SELECT['wolf']"", ""FILTER['#1', 'that is white and black']"", ""SELECT['the forest']"", ""BOOLEAN['#2', 'is standing in #3']""]","[""SELECT['wolf']"", ""FILTER['#1', 'that is white']"", ""FILTER['#1', 'that is black']"", ""SELECT['forest']"", ""BOOLEAN['#3', 'is standing in #4']""]"
NLVR2_dev_dev-151-3-0,If all wolves appear to be stepping in snow.,"[""SELECT['wolves']"", ""SELECT['snow']"", ""FILTER['#1','stepping in #2']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#5', 'is equal to #4']""]","[""SELECT['wolves']"", ""SELECT['snow']"", ""FILTER['#1','stepping in #2']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to #5']""]"
NLVR2_dev_dev-15-2-1,If in at least one image there are a total of six bodybuilders in a row with hands on their hips.,"[""SELECT['bodybuilders']"", ""FILTER['#1', 'that are in a row']"", ""PROJECT['hips of #REF', '#2']"", ""PROJECT['hands of #REF', '#3']"", ""COMPARATIVE['#2', '#4', 'are on #3']"", ""SELECT['images']"", ""GROUP['count', '#5', '#6']"", ""COMPARATIVE['#6', '#7', 'is equal to six']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is at least one']""]","[""SELECT['bodybuilders']"", ""FILTER['#1', 'that are in a row']"", ""PROJECT['hands of #REF', '#2']"", ""PROJECT['hips of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'are on #4']"", ""SELECT['images']"", ""GROUP['count', '#5', '#6']"", ""COMPARATIVE['#6', '#7', 'is equal to six']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is at least one']""]"
NLVR2_dev_dev-152-1-1,If the television in the image on the left is mounted on the wall.,"[""SELECT['left image']"", ""PROJECT['television in #REF', '#1']"", ""PROJECT['wall in #REF', '#1']"", ""BOOLEAN['#2', 'is mounted on #3']""]","[""SELECT['the left image']"", ""PROJECT['television in #REF', '#1']"", ""PROJECT['wall in #REF', '#1']"", ""BOOLEAN['#2', 'is mounted on #3']""]"
NLVR2_dev_dev-153-2-0,If there are exactly two soap dispensers in total.,"[""SELECT['soap dispensers']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to two']""]","[""SELECT['soap dispensers']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is exactly two']""]"
NLVR2_dev_dev-153-2-1,"If one image contains exactly three dispensers, and the right image contains more dispensers than the left image.","[""SELECT['one image']"", ""PROJECT['dispensers in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to three']"", ""SELECT['the right image']"", ""PROJECT['dispensers in #REF', '#5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is higher than #8']"", ""BOOLEAN['logical_and', 'true', '#4', '#9']""]","[""SELECT['dispensers']"", ""SELECT['images']"", ""GROUP['count', '#1', '#2']"", ""COMPARATIVE['#2', '#3', 'is equal to three']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']"", ""SELECT['right image']"", ""PROJECT['dispensers in #REF', '#8']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is higher than #11']"", ""BOOLEAN['logical_and', 'true', '#6', '#12']""]"
NLVR2_dev_dev-154-0-0,If the devil ray in the left image is facing left.,"[""SELECT['left image']"", ""PROJECT['devil ray in #REF', '#1']"", ""BOOLEAN['#2', 'is facing left']""]","[""SELECT['the left image']"", ""PROJECT['the devil ray in #REF', '#1']"", ""BOOLEAN['#2', 'is facing left']""."
NLVR2_dev_dev-154-2-1,If a diver is swimming with a stingray,"[""SELECT['diver']"", ""SELECT['stingray']"", ""BOOLEAN['#1', 'is swimming with #2']""]","[""SELECT['diver']"", ""SELECT['stingray']"", ""FILTER['#1','swimming with #2']"", ""BOOLEAN['#3', 'is in #4']""]"
NLVR2_dev_dev-155-0-0,If some of the food items are triangle shaped.,"[""SELECT['food items']"", ""FILTER['#1', 'that are triangle shaped']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least two']""]","[""SELECT['food items']"", ""FILTER['#1', 'that are triangle shaped']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is higher than one']""]"
NLVR2_dev_dev-155-1-1,If there are at least three cooked triangle calzones displayed.,"[""SELECT['triangle calzones']"", ""FILTER['#1', 'that are cooked']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least three']""]","[""SELECT['diamond calzones']"", ""FILTER['#1', 'that are cooked']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least three']""]"
NLVR2_dev_dev-156-0-0,If there is a single item in the right side image,"[""SELECT['right image']"", ""PROJECT['items in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']""]","[""SELECT['right image']"", ""PROJECT['items of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']""]"
NLVR2_dev_dev-156-3-1,If there are 3 pencil cases that are at least 2 different colors.,"[""SELECT['pencil cases']"", ""PROJECT['colors of #REF', '#1']"", ""GROUP['count', '#1', '#2']"", ""COMPARATIVE['#2', '#3', 'is at least 2']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to 3']""]","[""SELECT['pencil cases']"", ""PROJECT['colors of #REF', '#1']"", ""GROUP['count', '#1', '#2']"", ""COMPARATIVE['#2', '#3', 'is at least two']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to 3']""]"
NLVR2_dev_dev-157-0-1,If one if the images has a pelican flying.,"[""SELECT['pelican']"", ""FILTER['#1', 'that is flying']"", ""BOOLEAN['#2', 'is in one of the images']""]","[""SELECT['pelican']"", ""FILTER['#1', 'that is flying']"", ""BOOLEAN['#2', 'is in one image']""]"
NLVR2_dev_dev-157-2-0,If a pelican has a fish in its mouth.,"[""SELECT['pelican']"", ""PROJECT['mouth of #REF', '#1']"", ""SELECT['fish']"", ""BOOLEAN['#2', 'has #3 in']""]","[""SELECT['pelican']"", ""SELECT['fish']"", ""PROJECT['mouth of #REF', '#1']"", ""BOOLEAN['#2', 'is in #3']""]"
NLVR2_dev_dev-158-1-0,If in at least one image there is a crowd with at least 5 brown skinned men with short black hair.,"[""SELECT['men']"", ""FILTER['#1', 'that are brown skinned']"", ""PROJECT['hair of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is short']"", ""COMPARATIVE['#2', '#3', 'is black']"", ""INTERSECTION['#2', '#4', '#5']"", ""SELECT['images']"", ""GROUP['count', '#6', '#7']"", ""COMPARATIVE['#7', '#8', 'is at least 5']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is at least one']""]","[""SELECT['men']"", ""FILTER['#1', 'that are brown skinned']"", ""PROJECT['hair of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is short']"", ""COMPARATIVE['#2', '#3', 'is black']"", ""INTERSECTION['#2', '#4', '#5']"", ""SELECT['images']"", ""GROUP['count', '#6', '#7']"", ""COMPARATIVE['#7', '#8', 'is at least five']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is at least one']""]"
NLVR2_dev_dev-159-3-0,If a single balloon bouquet sits on a surface in one of the images.,"[""SELECT['balloon bouquet']"", ""SELECT['surface']"", ""FILTER['#1', 'that sits on #2']"", ""SELECT['images']"", ""GROUP['count', '#3', '#4']"", ""COMPARATIVE['#4', '#5', 'is equal to one']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']""]","[""SELECT['balloon bouquet']"", ""SELECT['surface']"", ""FILTER['#1', 'that sits on #2']"", ""BOOLEAN['#3', 'is in one of the images']""]"
NLVR2_dev_dev-160-1-1,If an exterior view shows a shrub to the left of a wide sliding glass door unit with a white frame.,"[""SELECT['shrub']"", ""SELECT['door unit']"", ""FILTER['#2', 'that is glass']"", ""FILTER['#3', 'that is wide']"", ""PROJECT['frame of #REF', '#4']"", ""COMPARATIVE['#4', '#5', 'is white']"", ""FILTER['#1', 'to the left of #6']"", ""BOOLEAN['#7', 'is in an exterior view']""]","[""SELECT['shrub']"", ""SELECT['door unit']"", ""FILTER['#2', 'that is glass']"", ""FILTER['#3', 'that is wide']"", ""FILTER['#4', 'that is sliding']"", ""PROJECT['frame of #REF', '#5']"", ""COMPARATIVE['#5', '#6', 'is white']"", ""FILTER['#1', 'to the left of #7']"", ""BOOLEAN['#8', 'is in an exterior view']""]"
NLVR2_dev_dev-160-2-0,If one set of doors is closed and another is open.,"[""SELECT['sets of doors']"", ""FILTER['#1', 'that are closed']"", ""FILTER['#1', 'that are open']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']"", ""BOOLEAN['#5', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#6', '#7']""]","[""SELECT['sets of doors']"", ""FILTER['#1', 'that are closed']"", ""FILTER['#1', 'that are open']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#5', 'is equal to one']"", ""BOOLEAN['#6', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#4', '#7']""]"
NLVR2_dev_dev-161-1-0,If there are five pelicans in both images.,"[""SELECT['pelicans']"", ""SELECT['images']"", ""GROUP['count', '#1', '#2']"", ""COMPARATIVE['#2', '#3', 'is equal to five']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to two']""]","[""SELECT['pelicans']"", ""PROJECT['images of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to five']""]"
NLVR2_dev_dev-161-1-1,"If one image contains three solid-white pelicans facing rightward, and the other image contains exactly two pelicans, who are in the same pose.","[""SELECT['one image']"", ""PROJECT['pelicans in #REF', '#1']"", ""FILTER['#2', 'that are solid-white']"", ""FILTER['#3', 'that are facing rightward']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to three']"", ""SELECT['other image']"", ""PROJECT['pelicans in #REF', '#7']"", ""PROJECT['pose of #REF', '#8']"", ""COMPARATIVE['#8', '#9', 'is the same']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is equal to two']"", ""BOOLEAN['logical_and', 'true', '#6', '#12']""]","[""SELECT['one image']"", ""PROJECT['pelicans in #REF', '#1']"", ""FILTER['#2', 'that are solid-white']"", ""FILTER['#3', 'that are facing rightward']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to three']"", ""SELECT['other image']"", ""PROJECT['pelicans in #REF', '#7']"", ""FILTER['#8', 'that are in the same pose']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to two']"", ""BOOLEAN['logical_and', 'true', '#6', '#11']""]"
NLVR2_dev_dev-16-2-0,If in one image a dung beetle is on top of a ball.,"[""SELECT['dung beetle']"", ""SELECT['ball']"", ""FILTER['#1', 'on top of #2']"", ""BOOLEAN['#3', 'is in one image']""]","[""SELECT['dung beetle']"", ""SELECT['ball']"", ""BOOLEAN['#1', 'is on top of #2']""]"
NLVR2_dev_dev-162-0-0,"If in one image, there is exactly one tv.","[""SELECT['images']"", ""PROJECT['tvs in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is equal to one']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']""]","[""SELECT['images']"", ""PROJECT['tv in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is equal to one']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']""]"
NLVR2_dev_dev-162-1-1,If at least one of the televisions is a flat screen.,"[""SELECT['televisions']"", ""FILTER['#1', 'that has a flat screen']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least one']""]","[""SELECT['televisions']"", ""FILTER['#1', 'with flat screen']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least one']""]"
NLVR2_dev_dev-163-2-0,"If the device on the right is viewed head-on, while the one on the left is angled facing rightward, and both devices have the screen slid up to show the keyboard.","[""SELECT['devices']"", ""FILTER['#1', 'on the right']"", ""FILTER['#1', 'on the left']"", ""BOOLEAN['#2', 'is viewed head-on']"", ""BOOLEAN['#3', 'is angled facing rightward']"", ""PROJECT['screen of #REF', '#4']"", ""SELECT['keyboard']"", ""BOOLEAN['#5', 'is slid up to show #6']"", ""BOOLEAN['logical_and', 'true', '#7', '#8']""]","[""SELECT['devices']"", ""FILTER['#1', 'on the right']"", ""FILTER['#1', 'on the left']"", ""BOOLEAN['#2', 'is viewed head-on']"", ""BOOLEAN['#3', 'is angled facing rightward']"", ""PROJECT['screen of #REF', '#4']"", ""SELECT['keyboard']"", ""BOOLEAN['#6', 'is slid up to show #7']"", ""BOOLEAN['logical_and', 'true', '#5', '#8']""]"
NLVR2_dev_dev-163-2-1,If the keyboard of the phone in one of the images is pink.,"[""SELECT['phone']"", ""PROJECT['keyboard of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is pink']"", ""BOOLEAN['#3', 'is in one image']""]","[""SELECT['phone']"", ""PROJECT['keyboard of #REF', '#1']"", ""BOOLEAN['#2', 'is pink']""]"
NLVR2_dev_dev-164-1-1,If there are two people on the sled being pulled by at least four dogs.,"[""SELECT['people']"", ""SELECT['the sled']"", ""FILTER['#1', 'on #2']"", ""SELECT['dogs']"", ""FILTER['#4', 'being pulled by #3']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to two']"", ""BOOLEAN['#7', 'is at least four']"", ""BOOLEAN['logical_and', 'true', '#4', '#8']""]","[""SELECT['people']"", ""SELECT['the sled']"", ""FILTER['#1', 'on #2']"", ""SELECT['dogs']"", ""FILTER['#4', 'being pulled by #3']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to two']"", ""BOOLEAN['#7', 'is at least four']"", ""BOOLEAN['logical_and', 'true', '#3', '#8']""]"
NLVR2_dev_dev-165-1-0,"If one image shows a pair of legs wearing black knee pads, and the other image shows a pair of legs with a long knee wrap on only the left-side leg.","[""SELECT['one image']"", ""PROJECT['pair of legs in #REF', '#1']"", ""PROJECT['knee pads in #REF', '#1']"", ""FILTER['#3', 'that are black']"", ""BOOLEAN['#2', 'are wearing #4']"", ""SELECT['other image']"", ""PROJECT['pair of legs in #REF', '#6']"", ""PROJECT['knee wrap in #REF', '#6']"", ""FILTER['#7', 'that is long']"", ""FILTER['#8', 'on only the left-side']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to two']"", ""BOOLEAN['logical_and', 'true', '#5', '#11']""]","[""SELECT['one image']"", ""PROJECT['pair of legs in #REF', '#1']"", ""PROJECT['knee pads in #REF', '#1']"", ""FILTER['#3', 'that are black']"", ""BOOLEAN['#2', 'are wearing #4']"", ""SELECT['other image']"", ""PROJECT['pair of legs in #REF', '#6']"", ""PROJECT['knee wrap in #REF', '#6']"", ""FILTER['#8', 'that is long']"", ""PROJECT['legs in #REF', '#6']"", ""FILTER['#9', 'that are on only the left-side']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is equal to two']"", ""BOOLEAN['logical_and', 'true', '#5', '#12']""]"
NLVR2_dev_dev-165-2-1,"If one image shows the knee guards alone, while the other shows them being worn by a person.","[""SELECT['one image']"", ""PROJECT['knee guards in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']"", ""SELECT['other image']"", ""PROJECT['knee guards in #REF', '#5']"", ""PROJECT['person in #REF', '#5']"", ""BOOLEAN['#6', 'are being worn by #7']"", ""BOOLEAN['logical_and', 'true', '#4', '#8']""]","[""SELECT['one image']"", ""PROJECT['knee guards in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']"", ""SELECT['other image']"", ""PROJECT['knee guards in #REF', '#5']"", ""PROJECT['person in #REF', '#5']"", ""BOOLEAN['#7', 'are being worn by #6']"", ""BOOLEAN['logical_and', 'true', '#4', '#8']""]"
NLVR2_dev_dev-166-0-0,If there are exactly two dogs,"[""SELECT['dogs']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to two']""]","[""SELECT['dogs']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'equal to two']""]"
NLVR2_dev_dev-166-2-1,"If one image shows multiple look-alike puppies in some type of container, and the other image features one dog posed on grassy ground.","[""SELECT['one image']"", ""PROJECT['puppies in #REF', '#1']"", ""FILTER['#2', 'that look-alike']"", ""PROJECT['container in #REF', '#1']"", ""FILTER['#3', 'in #4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least two']"", ""SELECT['other image']"", ""PROJECT['dog in #REF', '#8']"", ""PROJECT['ground in #REF', '#8']"", ""FILTER['#9', 'that is grassy']"", ""FILTER['#10', 'that is posed on #11']"", ""AGGREGATE['count', '#12']"", ""BOOLEAN['#13', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#7', '#14']""]","[""SELECT['one image']"", ""PROJECT['puppies in #REF', '#1']"", ""FILTER['#2', 'that look-alike']"", ""PROJECT['container in #REF', '#1']"", ""FILTER['#3', 'in #4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least two']"", ""SELECT['the other image']"", ""PROJECT['dog in #REF', '#8']"", ""PROJECT['ground in #REF', '#8']"", ""FILTER['#9', 'that is grassy']"", ""FILTER['#10', 'that is posed on #11']"", ""AGGREGATE['count', '#12']"", ""BOOLEAN['#13', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#7', '#14']""]"
NLVR2_dev_dev-167-1-0,If the dog in the image on the left has something in its mouth.,"[""SELECT['left image']"", ""PROJECT['dog in #REF', '#1']"", ""PROJECT['mouth of #REF', '#2']"", ""BOOLEAN['#2', 'has something in #3']""]","[""SELECT['the image on the left']"", ""PROJECT['dog in #REF', '#1']"", ""PROJECT['mouth of #REF', '#2']"", ""BOOLEAN['#2', 'has something in #3']""]"
NLVR2_dev_dev-167-3-1,If the right image shows at least one dog in a bounding pose with all four legs off the ground.,"[""SELECT['right image']"", ""PROJECT['dog in #REF', '#1']"", ""FILTER['#2', 'that is in a bounding pose']"", ""PROJECT['legs of #REF', '#3']"", ""PROJECT['ground in #REF', '#1']"", ""FILTER['#4', 'that are off #5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least one']""]","[""SELECT['the right image']"", ""PROJECT['dogs in #REF', '#1']"", ""FILTER['#2', 'in a bounding pose']"", ""PROJECT['legs of #REF', '#3']"", ""PROJECT['the ground in #REF', '#1']"", ""FILTER['#4', 'that are off #5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least one']""."
NLVR2_dev_dev-168-0-1,If at least one safety pin is not embellished.,"[""SELECT['safety pins']"", ""FILTER['#1', 'that are embellished']"", ""DISCARD['#1', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']""]","[""SELECT['safety pin']"", ""FILTER['#1', 'that is embellished']"", ""DISCARD['#1', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']""]"
NLVR2_dev_dev-168-2-0,If there is a set of white pearl earrings made out of a safety pin with round copper backing.,"[""SELECT['set of pearl earrings']"", ""FILTER['#1', 'that are white']"", ""SELECT['safety pin']"", ""PROJECT['backing of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is round']"", ""COMPARATIVE['#3', '#4', 'is copper']"", ""INTERSECTION['#3', '#5', '#6']"", ""BOOLEAN['#7', 'is made out of #8']""]","[""SELECT['earrings']"", ""FILTER['#1', 'that are pearl']"", ""FILTER['#2', 'that are white']"", ""SELECT['safety pin']"", ""PROJECT['backing of #REF', '#4']"", ""COMPARATIVE['#4', '#5', 'is round']"", ""COMPARATIVE['#4', '#6', 'is copper']"", ""INTERSECTION['#4', '#3', '#7']"", ""BOOLEAN['#8', 'is made out of #9']""."
NLVR2_dev_dev-169-0-0,"If each image contains only an adult gorilla, and in one image the gorilla is sitting with an elbow on a bent knee.","[""SELECT['gorilla']"", ""FILTER['#1', 'that is adult']"", ""SELECT['images']"", ""GROUP['count', '#2', '#3']"", ""COMPARATIVE['#3', '#4', 'is equal to one']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to #7']"", ""FILTER['#1', 'that is sitting']"", ""PROJECT['elbow of #REF', '#8']"", ""PROJECT['knee of #REF', '#8']"", ""COMPARATIVE['#8', '#9', 'is bent']"", ""BOOLEAN['#10', 'is in one image']"", ""BOOLEAN['logical_and', 'true', '#7', '#11']""]","[""SELECT['gorillas']"", ""FILTER['#1', 'that is adult']"", ""SELECT['images']"", ""GROUP['count', '#2', '#3']"", ""COMPARATIVE['#3', '#4', 'is equal to one']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to #7']"", ""FILTER['#1', 'that is sitting']"", ""PROJECT['elbow of #REF', '#9']"", ""PROJECT['knee of #REF', '#9']"", ""COMPARATIVE['#9', '#10', 'is bent']"", ""BOOLEAN['#11', 'is in one image']"", ""BOOLEAN['logical_and', 'true', '#7', '#12']""]"
NLVR2_dev_dev-169-1-1,If at least one gorilla is standing on the edge of a rock.,"[""SELECT['gorillas']"", ""SELECT['rock']"", ""PROJECT['the edge of #REF', '#2']"", ""FILTER['#1','standing on #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']""]","[""SELECT['gorilla']"", ""SELECT['rock']"", ""PROJECT['edge of #REF', '#2']"", ""FILTER['#1','standing on #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']""]"
NLVR2_dev_dev-17-0-0,"If there are six different syringes in the image on the left, and less than six in the image on the right.","[""SELECT['left image']"", ""PROJECT['different syringes in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to six']"", ""SELECT['right image']"", ""PROJECT['different syringes in #REF', '#5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is lower than six']"", ""BOOLEAN['logical_and', 'true', '#4', '#8']""]","[""SELECT['the image on the left']"", ""PROJECT['different syringes in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to six']"", ""SELECT['the image on the right']"", ""PROJECT['different syringes in #REF', '#5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is lower than six']"", ""BOOLEAN['logical_and', 'true', '#4', '#8']""]"
NLVR2_dev_dev-17-0-1,If the left and right image contains the same number of needles.,"[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['needles in #REF', '#1']"", ""PROJECT['needles in #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to #6']""]","[""SELECT['left image']"", ""PROJECT['needles of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""SELECT['right image']"", ""PROJECT['needles of #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#3', 'is equal to #6']""]"
NLVR2_dev_dev-170-1-0,"If the television in the image on the left is on, while the one on the left is off.","[""SELECT['left image']"", ""PROJECT['television in #REF', '#1']"", ""BOOLEAN['#2', 'is on']"", ""BOOLEAN['#2', 'is off']"", ""BOOLEAN['logical_and', 'true', '#3', '#4']""]","[""SELECT['the image on the left']"", ""PROJECT['television in #REF', '#1']"", ""BOOLEAN['#2', 'is on']"", ""BOOLEAN['#2', 'is off']"", ""BOOLEAN['logical_and', 'true', '#3', '#4']""]"
NLVR2_dev_dev-170-1-1,If in at least one image there is a tv with blue block on the tv itself.,"[""SELECT['tv']"", ""SELECT['block']"", ""FILTER['#2', 'that is blue']"", ""FILTER['#1', 'with #3 on the tv itself']"", ""BOOLEAN['#4', 'is in at least one image']""]","[""SELECT['tv']"", ""SELECT['block']"", ""FILTER['#2', 'that is blue']"", ""FILTER['#1', 'with #3 on the tv itself']"", ""BOOLEAN['#4', 'is in at least one of the images']""]"
NLVR2_dev_dev-171-2-0,If one of the laptops is a toshiba.,"[""SELECT['laptops']"", ""FILTER['#1', 'that is a toshiba']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']""]","[""SELECT['laptops']"", ""FILTER['#1', 'that are a toshiba']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']""]"
NLVR2_dev_dev-171-3-1,"If each image contains one open laptop with its screen facing inward instead of inverted, and one image features a laptop displayed head-on while the other shows a laptop angled.","[""SELECT['one image']"", ""PROJECT['laptop in #REF', '#1']"", ""FILTER['#2', 'that is open']"", ""PROJECT['screen of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is facing inward']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']"", ""SELECT['other image']"", ""PROJECT['laptop in #REF', '#8']"", ""FILTER['#9', 'that is displayed head-on']"", ""FILTER['#10', 'that is angled']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#7', '#13']""]","[""SELECT['one image']"", ""PROJECT['laptop in #REF', '#1']"", ""FILTER['#2', 'that is open']"", ""PROJECT['screen of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is facing inward']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']"", ""SELECT['other image']"", ""PROJECT['laptop in #REF', '#8']"", ""FILTER['#9', 'that is displayed head-on']"", ""FILTER['#10', 'that is angled']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is equal to #13']"", ""BOOLEAN['logical_and', 'true', '#7', '#14']""]"
NLVR2_dev_dev-172-2-1,If the left image contains a penguin with a fish in its mouth.,"[""SELECT['penguin']"", ""PROJECT['mouth of #REF', '#1']"", ""SELECT['fish']"", ""COMPARATIVE['#1', '#2', 'has #3 in']"", ""BOOLEAN['#4', 'is in the left image']""]","[""SELECT['penguin']"", ""SELECT['fish']"", ""PROJECT['mouth of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is in #3']"", ""BOOLEAN['#4', 'is in the left image']""]"
NLVR2_dev_dev-172-3-0,If in one image a penguin has a fish in its mouth,"[""SELECT['penguin']"", ""PROJECT['mouth of #REF', '#1']"", ""SELECT['fish']"", ""COMPARATIVE['#1', '#2', 'has #3 in']"", ""BOOLEAN['#4', 'is in one image']""]","[""SELECT['penguin']"", ""SELECT['fish']"", ""PROJECT['mouth of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'has #3 in']"", ""BOOLEAN['#4', 'is in one image']""]"
NLVR2_dev_dev-173-0-0,"If the image to the right features two macaws, and zero budgeriers.","[""SELECT['right image']"", ""PROJECT['macaws in #REF', '#1']"", ""PROJECT['budgeriers in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']"", ""BOOLEAN['#5', 'is equal to zero']"", ""BOOLEAN['logical_and', 'true', '#6', '#7']""]","[""SELECT['the image to the right']"", ""PROJECT['macaws in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']"", ""PROJECT['budgeriers in #REF', '#1']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to zero']"", ""BOOLEAN['logical_and', 'true', '#4', '#7']""."
NLVR2_dev_dev-173-3-1,"If the right image shows two yellow-headed birds in a wire cage, and the left image includes a red-headed bird.","[""SELECT['right image']"", ""PROJECT['birds in #REF', '#1']"", ""FILTER['#2', 'that are yellow-headed']"", ""PROJECT['cage in #REF', '#1']"", ""FILTER['#4', 'that is wire']"", ""FILTER['#3', 'in #5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to two']"", ""SELECT['left image']"", ""PROJECT['bird in #REF', '#9']"", ""FILTER['#10', 'that is red-headed']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#7', '#13']""]","[""SELECT['the right image']"", ""PROJECT['birds in #REF', '#1']"", ""FILTER['#2', 'that are yellow-headed']"", ""PROJECT['cage in #REF', '#1']"", ""FILTER['#4', 'that is wire']"", ""FILTER['#3', 'in #5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to two']"", ""SELECT['the left image']"", ""PROJECT['bird in #REF', '#9']"", ""FILTER['#10', 'that is red-headed']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#7', '#13']""]"
NLVR2_dev_dev-174-0-0,If there are two weight racks full of black weights.,"[""SELECT['weight racks']"", ""SELECT['weights']"", ""FILTER['#2', 'that are black']"", ""FILTER['#1', 'full of #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to two']""]","[""SELECT['weight racks']"", ""SELECT['weights']"", ""FILTER['#2', 'that are black']"", ""FILTER['#1', 'with #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to two']""]"
NLVR2_dev_dev-175-2-0,If at least one human is wearing eye glasses.,"[""SELECT['humans']"", ""SELECT['eye glasses']"", ""FILTER['#1', 'wearing #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']""]","[""SELECT['humans']"", ""SELECT['eye glasses']"", ""FILTER['#1', 'wearing #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']""]."
NLVR2_dev_dev-175-2-1,If an image shows a barber with a beard holding an electric clipper near his client.,"[""SELECT['barber']"", ""SELECT['beard']"", ""FILTER['#1', 'with #2']"", ""SELECT['clipper']"", ""FILTER['#4', 'that is electric']"", ""SELECT['client']"", ""FILTER['#5', 'holding #6 near #7']"", ""BOOLEAN['#8', 'is in an image']""]","[""SELECT['barber']"", ""SELECT['beard']"", ""FILTER['#1', 'with #2']"", ""SELECT['clipper']"", ""FILTER['#4', 'that is electric']"", ""PROJECT['client of #REF', '#3']"", ""FILTER['#3', 'holding #5']"", ""BOOLEAN['#6', 'is near #7']""]"
NLVR2_dev_dev-176-2-0,If there are no more than 2 animals featured.,"[""SELECT['animals']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is at most two']""]","[""SELECT['animals featured']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is at most 2']""]"
NLVR2_dev_dev-176-2-1,If there are two guinea pigs beside each-other in one of the images.,"[""SELECT['guinea pigs']"", ""FILTER['#1', 'that are beside each-other']"", ""SELECT['images']"", ""GROUP['count', '#2', '#3']"", ""COMPARATIVE['#3', '#4', 'is equal to two']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']""]","[""SELECT['guinea pigs']"", ""FILTER['#1', 'that are beside each-other']"", ""SELECT['images']"", ""GROUP['count', '#2', '#4']"", ""COMPARATIVE['#4', '#5', 'is equal to two']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']""]"
NLVR2_dev_dev-177-0-1,If in at least one image there is a single jellyfish in water with blue tentacles stretching up.,"[""SELECT['jellyfish']"", ""SELECT['water']"", ""FILTER['#1', 'in #2']"", ""PROJECT['tentacles of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'are blue']"", ""COMPARATIVE['#3', '#4', 'are stretching up']"", ""SELECT['images']"", ""GROUP['count', '#5', '#7']"", ""COMPARATIVE['#7', '#8', 'is equal to one']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is at least one']""]","[""SELECT['jellyfish']"", ""SELECT['water']"", ""FILTER['#1', 'that is in #2']"", ""PROJECT['tentacles of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'are blue']"", ""COMPARATIVE['#3', '#4', 'are stretching up']"", ""SELECT['images']"", ""GROUP['count', '#5', '#7']"", ""COMPARATIVE['#7', '#8', 'is equal to one']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is at least one']""."
NLVR2_dev_dev-177-1-0,If exactly one organism is floating freely.,"[""SELECT['organisms']"", ""FILTER['#1', 'that are floating freely']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']""]","[""SELECT['organisms']"", ""FILTER['#1', 'that is floating freely']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']""]"
NLVR2_dev_dev-178-3-1,If the dog in the image on the right is standing up on all fours.,"[""SELECT['right image']"", ""PROJECT['dog in #REF', '#1']"", ""BOOLEAN['#2', 'is standing up on all fours']""]","[""SELECT['right image']"", ""PROJECT['dog of #REF', '#1']"", ""BOOLEAN['#2', 'is standing up on all fours']""]"
NLVR2_dev_dev-179-2-0,"If the left image shows a group of no more than five people, including at least three women, sitting on something while looking at their phones.","[""SELECT['left image']"", ""PROJECT['people in #REF', '#1']"", ""PROJECT['phones in #REF', '#1']"", ""FILTER['#2', 'that are looking at #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at most five']"", ""PROJECT['women in #REF', '#1']"", ""FILTER['#7', 'that are sitting on something']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is at least three']"", ""BOOLEAN['logical_and', 'true', '#6', '#10']""]","[""SELECT['left image']"", ""PROJECT['people in #REF', '#1']"", ""PROJECT['phones in #REF', '#1']"", ""FILTER['#2', 'that are looking at #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at most five']"", ""PROJECT['women in #REF', '#1']"", ""FILTER['#6', 'that are sitting on something']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is at least three']"", ""BOOLEAN['logical_and', 'true', '#6', '#9']""]"
NLVR2_dev_dev-179-3-1,If everyone in the right image is looking at their phone.,"[""SELECT['right image']"", ""PROJECT['everyone in #REF', '#1']"", ""PROJECT['phone of #REF', '#2']"", ""BOOLEAN['#2', 'is looking at #3']""]","[""SELECT['right image']"", ""PROJECT['everyone in #REF', '#1']"", ""PROJECT['phone of #REF', '#2']"", ""BOOLEAN['#2', 'is looking at #3']”]"
NLVR2_dev_dev-18-0-1,"If one image shows three seabirds flying, and the other shows at least one bird standing on something that is in the water.","[""SELECT['one image']"", ""PROJECT['seabirds in #REF', '#1']"", ""FILTER['#2', 'that are flying']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to three']"", ""SELECT['the other image']"", ""PROJECT['birds in #REF', '#6']"", ""PROJECT['something in the water in #REF', '#6']"", ""FILTER['#7', 'that is standing on #8']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#5', '#11']""]","[""SELECT['one image']"", ""PROJECT['seabirds in #REF', '#1']"", ""FILTER['#2', 'that are flying']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to three']"", ""SELECT['other image']"", ""PROJECT['birds in #REF', '#6']"", ""PROJECT['water in #REF', '#6']"", ""FILTER['#7', 'that is in #8']"", ""FILTER['#9', 'that is standing on #10']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#5', '#13']""]"
NLVR2_dev_dev-180-2-0,If the left image contains a container of lip gloss with a blue top.,"[""SELECT['container of lip gloss']"", ""PROJECT['top of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is blue']"", ""BOOLEAN['#3', 'is in the left image']""]","[""SELECT['left image']"", ""PROJECT['container of lip gloss in #REF', '#1']"", ""PROJECT['top of #REF', '#2']"", ""BOOLEAN['#3', 'is blue']""]"
NLVR2_dev_dev-181-1-0,"If one dingo is on dry ground, and the other dingo is in the water.","[""SELECT['one dingo']"", ""SELECT['ground']"", ""FILTER['#2', 'that is dry']"", ""BOOLEAN['#1', 'is on #3']"", ""SELECT['water']"", ""BOOLEAN['#1', 'is in #4']"", ""BOOLEAN['logical_and', 'true', '#5', '#6']""]","[""SELECT['one dingo']"", ""SELECT['ground']"", ""FILTER['#2', 'that is dry']"", ""SELECT['the other dingo']"", ""SELECT['the water']"", ""BOOLEAN['#1', 'is on #3']"", ""BOOLEAN['#4', 'is in #5']"", ""BOOLEAN['logical_and', 'true', '#6', '#7']""]"
NLVR2_dev_dev-181-2-1,If one of the images contains an animal species that is not a canine.,"[""SELECT['animal species']"", ""FILTER['#1', 'that is not a canine']"", ""BOOLEAN['#2', 'is in one of the images']""]","[""SELECT['animals']"", ""FILTER['#1', 'that are canines']"", ""DISCARD['#1', '#2']"", ""BOOLEAN['#3', 'is in one image']""]"
NLVR2_dev_dev-182-0-1,If the right image shows a dark gray sneaker with purple and turquoise coloring as well and a white bottom,"[""SELECT['sneaker']"", ""FILTER['#1', 'that is dark gray']"", ""PROJECT['coloring of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is purple and turquoise']"", ""PROJECT['bottom of #REF', '#4']"", ""COMPARATIVE['#4', '#5', 'is white']"", ""BOOLEAN['#6', 'is in the right image']""]","[""SELECT['sneaker']"", ""FILTER['#1', 'that is dark gray']"", ""PROJECT['coloring of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is purple']"", ""COMPARATIVE['#2', '#3', 'is turquoise']"", ""INTERSECTION['#2', '#4', '#5']"", ""PROJECT['bottom of #REF', '#6']"", ""BOOLEAN['#7', 'is white']""]"
NLVR2_dev_dev-182-2-0,"If the right image contains a black shoe with purple and aqua trim and aqua laces, and the left image contains one right-facing sneaker.","[""SELECT['the right image']"", ""PROJECT['shoe in #REF', '#1']"", ""FILTER['#2', 'that is black']"", ""PROJECT['trim of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is purple and aqua']"", ""PROJECT['laces of #REF', '#5']"", ""COMPARATIVE['#5', '#6', 'are aqua']"", ""INTERSECTION['#5', '#7', '#8']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to one']"", ""SELECT['the left image']"", ""PROJECT['sneaker in #REF', '#11']"", ""FILTER['#12', 'that is right-facing']"", ""AGGREGATE['count', '#13']"", ""BOOLEAN['#14', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#7', '#15']""]","[""SELECT['the right image']"", ""PROJECT['shoe in #REF', '#1']"", ""FILTER['#2', 'that is black']"", ""PROJECT['trim of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is purple and aqua']"", ""PROJECT['laces of #REF', '#5']"", ""COMPARATIVE['#5', '#6', 'are aqua']"", ""INTERSECTION['#5', '#7', '#8']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to one']"", ""SELECT['the left image']"", ""PROJECT['sneakers in #REF', '#11']"", ""FILTER['#12', 'that are right-facing']"", ""AGGREGATE['count', '#13']"", ""BOOLEAN['#14', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#7', '#15']""]"
NLVR2_dev_dev-18-3-0,If the right image contains exactly three birds.,"[""SELECT['the right image']"", ""PROJECT['birds in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to three']""]","[""SELECT['left image']"", ""PROJECT['birds of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to three']""]"
NLVR2_dev_dev-183-2-0,If in at least one image there is a woman in a mostly blue graduation gown with  short hair and a blue cap.,"[""SELECT['woman']"", ""PROJECT['graduation gown of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is mostly blue']"", ""PROJECT['hair of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is short']"", ""PROJECT['cap of #REF', '#5']"", ""COMPARATIVE['#5', '#6', 'is blue']"", ""BOOLEAN['#7', 'is in at least one image']""]","[""SELECT['woman']"", ""SELECT['graduation gown']"", ""FILTER['#2', 'that is mostly blue']"", ""PROJECT['hair of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is short']"", ""SELECT['cap']"", ""FILTER['#6', 'that is blue']"", ""FILTER['#5', 'with #7']"", ""FILTER['#1', 'in #8']"", ""BOOLEAN['#9', 'is in one image']""]"
NLVR2_dev_dev-184-1-0,If at least one doberman dog is running in the snow,"[""SELECT['doberman dogs']"", ""SELECT['the snow']"", ""FILTER['#1', 'running in #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']""]","[""SELECT['doberman dog']"", ""SELECT['snow']"", ""FILTER['#1', 'running in #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']""]"
NLVR2_dev_dev-184-3-1,"If one image includes a doberman charging forward over snow, and the other image shows one doberman with erect ears.","[""SELECT['one image']"", ""PROJECT['doberman in #REF', '#1']"", ""PROJECT['snow in #REF', '#1']"", ""BOOLEAN['#2', 'is charging forward over #3']"", ""SELECT['other image']"", ""PROJECT['doberman in #REF', '#5']"", ""PROJECT['ears of #REF', '#6']"", ""COMPARATIVE['#6', '#7', 'are erect']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#4', '#10']""]","[""SELECT['one image']"", ""PROJECT['doberman in #REF', '#1']"", ""PROJECT['snow in #REF', '#1']"", ""BOOLEAN['#2', 'is charging forward over #3']"", ""SELECT['the other image']"", ""PROJECT['doberman in #REF', '#5']"", ""PROJECT['ears of #REF', '#6']"", ""COMPARATIVE['#6', '#7', 'are erect']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#3', '#10']""]"
NLVR2_dev_dev-185-1-1,If the combined images include a pinkish-lavender scarf and a solid blue scarf.,"[""SELECT['scarf']"", ""FILTER['#1', 'that is pinkish-lavender']"", ""FILTER['#1', 'that is solid blue']"", ""BOOLEAN['#2', 'is in the images']"", ""BOOLEAN['#3', 'is in the images']"", ""BOOLEAN['logical_and', 'true', '#4', '#5']""]","[""SELECT['scarf']"", ""FILTER['#1', 'that is pinkish-lavender']"", ""FILTER['#1', 'that is solid blue']"", ""BOOLEAN['#2', 'is in the image']"", ""BOOLEAN['#3', 'is in the image']"", ""BOOLEAN['logical_and', 'true', '#4', '#5']""]"
NLVR2_dev_dev-185-3-0,If the left and right image contains the same number of blue tasseled fabric.,"[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['fabrics in #REF', '#1']"", ""PROJECT['fabrics in #REF', '#2']"", ""FILTER['#3', 'that are blue']"", ""FILTER['#4', 'that are tasseled']"", ""FILTER['#5', 'that are blue']"", ""AGGREGATE['count', '#6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to #9']""]","[""SELECT['fabric']"", ""FILTER['#1', 'that is blue']"", ""FILTER['#2', 'that is tasseled']"", ""SELECT['left image']"", ""SELECT['right image']"", ""FILTER['#3', 'that are in #4']"", ""FILTER['#3', 'that are in #5']"", ""AGGREGATE['count', '#6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to #9']""]"
NLVR2_dev_dev-186-0-1,If in the left image a person is sitting in a barber's chair.,"[""SELECT['person']"", ""SELECT['barber s chair']"", ""FILTER['#1','sitting in #2']"", ""BOOLEAN['#3', 'is in the left image']""]","[""SELECT['person']"", ""SELECT['barber s chair']"", ""FILTER['#1','sitting in #2']"", ""BOOLEAN['#3', 'is in left image']""]"
NLVR2_dev_dev-186-2-0,If there is a total of four people in a barbershops.,"[""SELECT['people']"", ""SELECT['barbershops']"", ""FILTER['#1', 'in #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to four']""]","[""SELECT['people']"", ""SELECT['a barbershops']"", ""FILTER['#1', 'in #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to four']""]"
NLVR2_dev_dev-187-0-0,If all bowls in the picture are white,"[""SELECT['bowls']"", ""FILTER['#1', 'that are white']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to #4']""]","[""SELECT['bowls']"", ""FILTER['#1', 'that are white']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#4', 'is equal to #3']""]"
NLVR2_dev_dev-187-2-1,If the potatoes in the lefthand image are served in a light-colored oval bowl and are garnished with something green.,"[""SELECT['lefthand image']"", ""PROJECT['potatoes in #REF', '#1']"", ""SELECT['bowl']"", ""FILTER['#3', 'that is light-colored']"", ""FILTER['#4', 'that is oval']"", ""BOOLEAN['#2', 'are served in #5']"", ""SELECT['something green']"", ""BOOLEAN['#6', 'are garnished with #7']"", ""BOOLEAN['logical_and', 'true', '#7', '#8']""]","[""SELECT['lefthand image']"", ""PROJECT['potatoes in #REF', '#1']"", ""SELECT['bowl']"", ""FILTER['#3', 'that is light-colored']"", ""FILTER['#4', 'that is oval']"", ""BOOLEAN['#2', 'are served in #5']"", ""SELECT['something green']"", ""BOOLEAN['#7', 'are garnished with #6']"", ""BOOLEAN['logical_and', 'true', '#7', '#8']""]"
NLVR2_dev_dev-188-0-1,If the lefthand image shows fingers touching a bird's greenish wing feathers.,"[""SELECT['fingers']"", ""SELECT['bird']"", ""PROJECT['wing feathers of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'are greenish']"", ""FILTER['#1', 'touching #4']"", ""BOOLEAN['#5', 'is in the lefthand image']""]","[""SELECT['fingers']"", ""SELECT['bird']"", ""PROJECT['wing feathers of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'are greenish']"", ""FILTER['#1', 'touching #4']"", ""BOOLEAN['#5', 'is in the lefthanded image']""]"
NLVR2_dev_dev-188-3-0,If the left image contains a human hand touching a colorful parrot.,"[""SELECT['human hand']"", ""SELECT['parrot']"", ""FILTER['#2', 'that is colorful']"", ""FILTER['#1', 'touching #3']"", ""BOOLEAN['#4', 'is in the left image']""]","[""SELECT['human']"", ""PROJECT['hand of #REF', '#1']"", ""SELECT['parrot']"", ""FILTER['#3', 'that is colorful']"", ""FILTER['#2', 'touching #4']"", ""BOOLEAN['#5', 'is in left image']""]"
NLVR2_dev_dev-189-2-1,If an image shows multiple baboons crossing a gray paved road with no buildings on either side.,"[""SELECT['baboons']"", ""SELECT['road']"", ""FILTER['#2', 'that is gray']"", ""FILTER['#3', 'that is paved']"", ""PROJECT['sides of #REF', '#4']"", ""SELECT['buildings']"", ""FILTER['#6', 'on #5']"", ""GROUP['count', '#7', '#4']"", ""COMPARATIVE['#4', '#8', 'is equal to zero']"", ""FILTER['#1', 'crossing #9']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is at least two']""]","[""SELECT['baboons']"", ""SELECT['road']"", ""FILTER['#2', 'that is gray']"", ""FILTER['#3', 'that is paved']"", ""PROJECT['sides of #REF', '#4']"", ""SELECT['buildings']"", ""FILTER['#6', 'on #5']"", ""GROUP['count', '#7', '#4']"", ""COMPARATIVE['#4', '#8', 'is equal to zero']"", ""FILTER['#1', 'crossing #9']"", ""PROJECT['images of #REF', '#10']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is equal to one']""]"
NLVR2_dev_dev-189-3-0,If monkeys are in the street in the image on the left.,"[""SELECT['left image']"", ""PROJECT['monkeys in #REF', '#1']"", ""PROJECT['street in #REF', '#1']"", ""BOOLEAN['#2', 'are in #3']""]","[""SELECT['left image']"", ""PROJECT['monkeys in #REF', '#1']"", ""PROJECT['street in #REF', '#1']"", ""FILTER['#2', 'that are in #3']"", ""BOOLEAN['#4', 'are in #1']""]"
NLVR2_dev_dev-190-1-0,If a hunter is next to his dead target.,"[""SELECT['hunter']"", ""SELECT['target']"", ""FILTER['#2', 'that is dead']"", ""BOOLEAN['#1', 'is next to #3']""]","[""SELECT['hunter']"", ""PROJECT['target of #REF', '#1']"", ""FILTER['#2', 'that is dead']"", ""BOOLEAN['#1', 'is next to #3']""]"
NLVR2_dev_dev-190-2-1,If there is a man sitting behind a large pig.,"[""SELECT['man']"", ""SELECT['pig']"", ""FILTER['#2', 'that is large']"", ""BOOLEAN['#1', 'is sitting behind #3']""]","[""SELECT['man']"", ""SELECT['large pig']"", ""BOOLEAN['#1', 'is sitting behind #2']""]"
NLVR2_dev_dev-19-1-0,If some of the pies have slices cut from them and some have lattice top crusts.,"[""SELECT['pies']"", ""PROJECT['slices of #REF', '#1']"", ""FILTER['#1', 'that have #2 cut from them']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least two']"", ""PROJECT['crusts of #REF', '#1']"", ""COMPARATIVE['#1', '#6', 'are lattice']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#5', '#9']""]","[""SELECT['pies']"", ""PROJECT['slices of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are cut from them']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least two']"", ""PROJECT['crusts of #REF', '#1']"", ""COMPARATIVE['#1', '#6', 'are lattice']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#5', '#9']""]"
NLVR2_dev_dev-191-0-0,If a dog is holding something to its mouth in at least one of the images.,"[""SELECT['dog']"", ""PROJECT['mouth of #REF', '#1']"", ""FILTER['#1', 'that is holding something to #2']"", ""BOOLEAN['#3', 'is in at least one image']""]","[""SELECT['dog']"", ""PROJECT['mouth of #REF', '#1']"", ""BOOLEAN['#1', 'is holding something to #2']""]"
NLVR2_dev_dev-191-2-1,If a dog is playing with a toy.,"[""SELECT['dog']"", ""SELECT['toy']"", ""BOOLEAN['#1', 'is playing with #2']""]","[""SELECT['dog']"", ""SELECT['tyre']"", ""BOOLEAN['#1', 'is playing with #2']""]"
NLVR2_dev_dev-192-1-0,If an image contains a small dog inside a cut open watermelon.,"[""SELECT['dog']"", ""FILTER['#1', 'that is small']"", ""SELECT['watermelon']"", ""FILTER['#3', 'that is open']"", ""FILTER['#4', 'that is cut']"", ""FILTER['#2', 'inside #5']"", ""BOOLEAN['#6', 'is in an image']""]","[""SELECT['dog']"", ""FILTER['#1', 'that is small']"", ""SELECT['watermelon']"", ""FILTER['#3', 'that is open']"", ""FILTER['#4', 'that has been cut']"", ""FILTER['#2', 'inside #5']"", ""BOOLEAN['#6', 'is in an image']""]"
NLVR2_dev_dev-192-1-1,"If all images show a dark gray french bulldog inside a hollowed-out watermelon half, and at least one image shows the dog with its mouth over the edge of the watermelon.","[""SELECT['french bulldog']"", ""FILTER['#1', 'that is dark gray']"", ""SELECT['watermelon half']"", ""FILTER['#3', 'that is hollowed-out']"", ""FILTER['#2', 'inside #4']"", ""PROJECT['images of #REF', '#5']"", ""SELECT['images']"", ""AGGREGATE['count', '#6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to #9']"", ""PROJECT['mouth of #REF', '#10']"", ""PROJECT['edge of #REF', '#10']"", ""COMPARATIVE['#10', '#11', 'is over #12']"", ""BOOLEAN['#13', 'is in at least one image']"", ""BOOLEAN['logical_and', 'true', '#7', '#14']""]","[""SELECT['french bulldog']"", ""FILTER['#1', 'that is dark gray']"", ""SELECT['watermelon half']"", ""FILTER['#3', 'that is hollowed-out']"", ""FILTER['#2', 'inside #4']"", ""PROJECT['images of #REF', '#5']"", ""AGGREGATE['count', '#6']"", ""SELECT['images']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to #9']"", ""PROJECT['mouth of #REF', '#10']"", ""PROJECT['edge of #REF', '#10']"", ""COMPARATIVE['#10', '#11', 'is over #12']"", ""BOOLEAN['#13', 'is in at least one image']"", ""BOOLEAN['logical_and', 'true', '#7', '#14']""]"
NLVR2_dev_dev-193-2-0,If the single dog in the image on the left is standing in the grass.,"[""SELECT['left image']"", ""PROJECT['dog in #REF', '#1']"", ""PROJECT['grass in #REF', '#1']"", ""FILTER['#2','standing in #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']""]","[""SELECT['left image']"", ""PROJECT['dog in #REF', '#1']"", ""PROJECT['grass in #REF', '#1']"", ""FILTER['#2','standing in #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to two']""]"
NLVR2_dev_dev-194-0-0,If an image contains only one gorilla.,"[""SELECT['gorillas']"", ""SELECT['images']"", ""GROUP['count', '#1', '#2']"", ""COMPARATIVE['#2', '#3', 'is equal to one']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']""]","[""SELECT['images']"", ""PROJECT['gorillas in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is equal to one']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']""]"
NLVR2_dev_dev-194-3-1,"If an image shows exactly two gorillas, which are face to face with a hand raised in between them.","[""SELECT['gorillas']"", ""FILTER['#1', 'that are face to face']"", ""PROJECT['hand of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is raised in between them']"", ""SELECT['images']"", ""GROUP['count', '#4', '#5']"", ""COMPARATIVE['#5', '#6', 'is equal to two']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is at least one']""]","[""SELECT['gorillas']"", ""FILTER['#1', 'that are face to face']"", ""PROJECT['hand of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is raised in between them']"", ""SELECT['images']"", ""GROUP['count', '#4', '#5']"", ""COMPARATIVE['#5', '#6', 'is equal to two']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to one']""]"
NLVR2_dev_dev-195-0-0,If all the crabs are out of the water.,"[""SELECT['crabs']"", ""SELECT['water']"", ""FILTER['#1', 'out of #2']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to #5']""]","[""SELECT['crabs']"", ""SELECT['water']"", ""BOOLEAN['#1', 'are out of #2']""]"
NLVR2_dev_dev-195-1-1,"If each image contains one crab facing forward, and at least one of the crabs depicted is purple-tinted.","[""SELECT['crabs']"", ""FILTER['#1', 'that are facing forward']"", ""SELECT['images']"", ""GROUP['count', '#2', '#3']"", ""COMPARATIVE['#3', '#4', 'is equal to one']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to #7']"", ""FILTER['#1', 'that is purple-tinted']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#8', '#11']""]","[""SELECT['images']"", ""PROJECT['crabs in #REF', '#1']"", ""FILTER['#2', 'that are facing forward']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is equal to one']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#6', 'is equal to #7']"", ""FILTER['#1', 'that is purple-tinted']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#10', '#11']""]"
NLVR2_dev_dev-196-2-0,If the person in the image on the right is wearing a white vest.,"[""SELECT['right image']"", ""PROJECT['person in #REF', '#1']"", ""PROJECT['vest of #REF', '#2']"", ""BOOLEAN['#3', 'is white']""]","[""SELECT['right image']"", ""PROJECT['person of #REF', '#1']"", ""SELECT['vest']"", ""FILTER['#3', 'that is white']"", ""BOOLEAN['#2', 'is wearing #4']""."
NLVR2_dev_dev-197-1-1,If images contain more than one animal,"[""SELECT['images']"", ""PROJECT['animals in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is higher than one']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']""]","[""SELECT['images']"", ""PROJECT['animals in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is higher than one']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least two']""]"
NLVR2_dev_dev-197-2-0,"If each image contains one german shepherd, and one dog is sitting upright with an open-mouthed expression.","[""SELECT['images']"", ""PROJECT['german shepherds in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is equal to one']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#5', 'is equal to #6']"", ""FILTER['#1', 'that is sitting upright']"", ""PROJECT['expression of #REF', '#8']"", ""COMPARATIVE['#8', '#9', 'is open-mouthed']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#7', '#12']""]","[""SELECT['images']"", ""PROJECT['german shepherd in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is equal to one']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#5', 'is equal to #6']"", ""FILTER['#1', 'that is sitting upright']"", ""PROJECT['expression of #REF', '#8']"", ""COMPARATIVE['#8', '#9', 'is open-mouthed']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#7', '#12']""]"
NLVR2_dev_dev-198-3-1,"If to the left of one of the images of the statue of the dung beetles, you can see a bench.","[""SELECT['the statue of the dung beetles']"", ""SELECT['bench']"", ""BOOLEAN['#1', 'is to the left of one of the images']""]","[""SELECT['the statue of the dung beetles']"", ""SELECT['a bench']"", ""BOOLEAN['#1', 'is to the left of one of the images']""]"
NLVR2_dev_dev-199-0-0,"If one image contains a building facing downward and diagonally, the other image contains the inside right angle of a wall.","[""SELECT['one image']"", ""PROJECT['building in #REF', '#1']"", ""BOOLEAN['#2', 'is facing downward and diagonally']"", ""SELECT['other image']"", ""PROJECT['wall in #REF', '#4']"", ""PROJECT['inside right angle of #REF', '#5']"", ""BOOLEAN['#6', 'is in #7']"", ""BOOLEAN['logical_and', 'true', '#4', '#8']""]","[""SELECT['one image']"", ""PROJECT['building in #REF', '#1']"", ""BOOLEAN['#2', 'is facing downward and diagonally']"", ""SELECT['the other image']"", ""PROJECT['wall in #REF', '#4']"", ""PROJECT['inside right angle of #REF', '#5']"", ""BOOLEAN['#6', 'is in #7']"", ""BOOLEAN['logical_and', 'true', '#4', '#8']""]sic]"
NLVR2_dev_dev-200-3-0,If the right pic has fewer then five animals,"[""SELECT['the right pic']"", ""PROJECT['animals in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is lower than five']""]","[""SELECT['the right pic']"", ""PROJECT['animals in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at most five']""]"
NLVR2_dev_dev-200-3-1,If there are 4 seals on the sandy beach,"[""SELECT['seals']"", ""SELECT['the sandy beach']"", ""FILTER['#1', 'on #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to 4']""]","[""SELECT['seals']"", ""SELECT['sandy beach']"", ""FILTER['#1', 'on #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to 4']""]"
NLVR2_dev_dev-201-1-0,If the dog in the right image is facing right.,"[""SELECT['right image']"", ""PROJECT['dog in #REF', '#1']"", ""BOOLEAN['#2', 'is facing right']""]","[""SELECT['right image']"", ""PROJECT['dog of #REF', '#1']"", ""BOOLEAN['#2', 'is facing right']""]"
NLVR2_dev_dev-201-1-1,If all of the dogs are facing to the left.,"[""SELECT['dogs']"", ""FILTER['#1', 'that are facing left']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to #4']""]","[""SELECT['dogs']"", ""FILTER['#1', 'that are facing left']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#4', 'is equal to #3']""]"
NLVR2_dev_dev-202-2-0,If there is one pair of human hands.,"[""SELECT['human hands']"", ""PROJECT['pair of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']""]","[""SELECT['pairs of human hands']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to one']""]"
NLVR2_dev_dev-20-3-0,If the dogs in one of the images are wearing orange booties.,"[""SELECT['dogs']"", ""SELECT['booties']"", ""FILTER['#2', 'that are orange']"", ""FILTER['#1', 'wearing #3']"", ""BOOLEAN['#4', 'are in one of the images']""]","[""SELECT['dogs']"", ""SELECT['booties']"", ""FILTER['#2', 'that are orange']"", ""FILTER['#1', 'wearing #3']"", ""BOOLEAN['#4', 'is in one of the images']""]"
NLVR2_dev_dev-203-2-1,"If in one image, a spotted cougar is captured in midair, leaping towards a horned warthog that is facing it from below.","[""SELECT['cougar']"", ""FILTER['#1', 'that is spotted']"", ""FILTER['#2', 'that is captured in midair']"", ""SELECT['warthog']"", ""FILTER['#4', 'that is horned']"", ""FILTER['#5', 'that is facing #3 from below']"", ""FILTER['#3', 'leaving towards #6']"", ""BOOLEAN['#7', 'is in one image']""]","[""SELECT['cougar']"", ""FILTER['#1', 'that is spotted']"", ""FILTER['#2', 'that is captured in midair']"", ""SELECT['warthog']"", ""FILTER['#4', 'that is horned']"", ""FILTER['#5', 'that is facing #6 from below']"", ""FILTER['#3', 'leaving towards #7']"", ""BOOLEAN['#8', 'is in one image']""]"
NLVR2_dev_dev-203-3-0,If an image features a leaping spotted cat above one warthog.,"[""SELECT['cat']"", ""FILTER['#1', 'that is leaping']"", ""FILTER['#2', 'that is spotted']"", ""SELECT['warthog']"", ""FILTER['#3', 'above #4']"", ""BOOLEAN['#5', 'is in an image']""]","[""SELECT['cat']"", ""FILTER['#1', 'that is leaping']"", ""FILTER['#2', 'that is spotted']"", ""SELECT['warthog']"", ""FILTER['#3', 'that #1 is above']"", ""BOOLEAN['#4', 'is in an image']""]"
NLVR2_dev_dev-204-0-0,If the left image shows a hand at the top with fingers aimed downward toward the keys of a saxophone with a curved shape.,"[""SELECT['left image']"", ""PROJECT['hand in #REF', '#1']"", ""PROJECT['top of #REF', '#2']"", ""FILTER['#2', 'at #3']"", ""PROJECT['fingers of #REF', '#4']"", ""PROJECT['keys of #REF', '#1']"", ""FILTER['#6', 'that are aimed downward toward #5']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is at least one']""]","[""SELECT['hand']"", ""FILTER['#1', 'at the top']"", ""PROJECT['fingers of #REF', '#2']"", ""SELECT['saxophone']"", ""PROJECT['shape of #REF', '#4']"", ""COMPARATIVE['#2', '#5', 'is curved']"", ""PROJECT['keys of #REF', '#6']"", ""COMPARATIVE['#6', '#7', 'are aimed downward toward #8']"", ""BOOLEAN['#9', 'is in left image']""]"
NLVR2_dev_dev-204-3-1,If there are no less than five saxophones standing up.,"[""SELECT['saxophones']"", ""FILTER['#1','standing up']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least five']""]","[""SELECT['saxes']"", ""FILTER['#1', 'that are standing up']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least five']""]"
NLVR2_dev_dev-206-0-0,If a pile of cut greenery for munching is in front of an orange-and-white guinea pig.,"[""SELECT['pile of cut greenery']"", ""FILTER['#1', 'that is for munching']"", ""SELECT['guinea pig']"", ""FILTER['#3', 'that is orange-and-white']"", ""BOOLEAN['#2', 'is in front of #4']""]","[""SELECT['pile of cut greenery for munching']"", ""SELECT['guinea pig']"", ""FILTER['#2', 'that is orange-and-white']"", ""BOOLEAN['#1', 'is in front of #3']""]"
NLVR2_dev_dev-206-0-1,If a rodent is cuddled together with another rodent in the image on the right.,"[""SELECT['right image']"", ""PROJECT['rodent in #REF', '#1']"", ""FILTER['#2', 'that is cuddled together with another rodent']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']""]","[""SELECT['right image']"", ""PROJECT['rodent in #REF', '#1']"", ""FILTER['#2', 'that is cuddled together with one another']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']""]"
NLVR2_dev_dev-207-2-1,"If in one photo, three women are wearing swimsuits in different styles that are all the same color.","[""SELECT['women']"", ""SELECT['swimsuits']"", ""PROJECT['styles of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'are different']"", ""PROJECT['colors of #REF', '#4']"", ""COMPARATIVE['#4', '#5', 'are the same']"", ""SELECT['photos']"", ""GROUP['count', '#6', '#7']"", ""COMPARATIVE['#7', '#8', 'is equal to three']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to one']""]","[""SELECT['woman']"", ""SELECT['swimsuits']"", ""PROJECT['styles of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'are different']"", ""PROJECT['colors of #REF', '#4']"", ""COMPARATIVE['#4', '#5', 'are the same']"", ""SELECT['photos']"", ""GROUP['count', '#6', '#7']"", ""COMPARATIVE['#7', '#8', 'is equal to three']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to one']""]"
NLVR2_dev_dev-207-3-0,"If an image shows three camera-facing bikini models, and at least two of them wear all-white swimsuits.","[""SELECT['bikini models']"", ""FILTER['#1', 'that are camera-facing']"", ""SELECT['swimsuits']"", ""FILTER['#3', 'that are all-white']"", ""FILTER['#2', 'that wear #4']"", ""PROJECT['images of #REF', '#5']"", ""GROUP['count', '#5', '#6']"", ""COMPARATIVE['#6', '#7', 'is equal to three']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is at least two']""]","[""SELECT['bikini models']"", ""FILTER['#1', 'that are camera-facing']"", ""SELECT['swimsuits']"", ""FILTER['#3', 'that are all-white']"", ""FILTER['#2', 'that wear #4']"", ""SELECT['images']"", ""GROUP['count', '#5', '#6']"", ""COMPARATIVE['#6', '#7', 'is equal to three']"", ""GROUP['count', '#4', '#8']"", ""COMPARATIVE['#8', '#9', 'is at least two']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is equal to one']""]"
NLVR2_dev_dev-208-3-0,If the colorful parrot-type birds in the left and right images are perching and facing the same general direction.,"[""SELECT['left image']"", ""PROJECT['birds in #REF', '#1']"", ""FILTER['#2', 'that are colorful']"", ""FILTER['#3', 'that are parrot-type']"", ""FILTER['#4', 'that are perching']"", ""AGGREGATE['count', '#5']"", ""SELECT['right image']"", ""PROJECT['birds in #REF', '#7']"", ""FILTER['#8', 'that are colorful']"", ""FILTER['#9', 'that are parrot-type']"", ""PROJECT['general direction that #REF are facing', '#10']"", ""BOOLEAN['#11', 'is the same as #12']""]","[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['birds in #REF', '#1']"", ""PROJECT['birds in #REF', '#2']"", ""FILTER['#3', 'that are colorful']"", ""FILTER['#4', 'that are parrot-type']"", ""FILTER['#5', 'that are perching']"", ""PROJECT['general direction that #REF are facing', '#6']"", ""BOOLEAN['#7', 'are the same']"", ""BOOLEAN['logical_and', 'true', '#8', '#9']""]"
NLVR2_dev_dev-208-3-1,If the two birds are facing in opposite directions.,"[""SELECT['birds']"", ""PROJECT['direction facing of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are opposite']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']""]","[""SELECT['birds']"", ""PROJECT['directions facing of #REF', '#1']"", ""BOOLEAN['#2', 'are opposite']""]"
NLVR2_dev_dev-209-0-0,If in one image there is a line of fence posts with one large darkly colored bird on top of each post.,"[""SELECT['line of fence posts']"", ""SELECT['birds']"", ""FILTER['#2', 'that are large']"", ""FILTER['#3', 'that are darkly colored']"", ""FILTER['#4', 'on top of #1']"", ""PROJECT['images of #REF', '#5']"", ""GROUP['count', '#5', '#6']"", ""COMPARATIVE['#6', '#7', 'is equal to one']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to one']""]","[""SELECT['line of fence posts']"", ""SELECT['bird']"", ""FILTER['#2', 'that is large']"", ""FILTER['#3', 'that is darkly colored']"", ""FILTER['#1', 'on top of #4']"", ""SELECT['images']"", ""GROUP['count', '#5', '#6']"", ""COMPARATIVE['#6', '#7', 'is equal to one']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to one']""]"
NLVR2_dev_dev-210-0-0,If the dog in the image on the left has their front paws up on a higher level than the back ones.,"[""SELECT['left image']"", ""PROJECT['dog in #REF', '#1']"", ""PROJECT['front paws of #REF', '#2']"", ""PROJECT['back paws of #REF', '#2']"", ""BOOLEAN['#3', 'are up on a higher level than #4']""]","[""SELECT['the left image']"", ""PROJECT['dog in #REF', '#1']"", ""PROJECT['front paws of #REF', '#2']"", ""PROJECT['back paws of #REF', '#2']"", ""BOOLEAN['#3', 'are up on a higher level then #4']""]"
NLVR2_dev_dev-210-1-1,If the dog on the left is standing on its hind legs.,"[""SELECT['dog']"", ""FILTER['#1', 'that is on the left']"", ""PROJECT['hind legs of #REF', '#2']"", ""BOOLEAN['#2', 'is standing on #3']""]","[""SELECT['dog']"", ""FILTER['#1', 'that is on the left']"", ""PROJECT['hind legs of #REF', '#2']"", ""BOOLEAN['#2', 'is standing on #3']""]."
NLVR2_dev_dev-2-1-1,If the right image shows a diagonally displayed wooden flute lying on a brown bag on top of a pale carpet.,"[""SELECT['flutes']"", ""FILTER['#1', 'that is wooden']"", ""FILTER['#2', 'that is diagonally displayed']"", ""SELECT['bag']"", ""FILTER['#4', 'that is brown']"", ""SELECT['carpet']"", ""FILTER['#6', 'that is pale']"", ""FILTER['#5', 'on top of #7']"", ""FILTER['#3', 'lying on #8']"", ""BOOLEAN['#9', 'is in the right image']""]","[""SELECT['flutes']"", ""FILTER['#1', 'that are wooden']"", ""FILTER['#2', 'that are diagonally displayed']"", ""SELECT['bag']"", ""FILTER['#4', 'that is brown']"", ""SELECT['carpet']"", ""FILTER['#6', 'that is pale']"", ""FILTER['#5', 'on top of #7']"", ""FILTER['#3', 'lying on #8']"", ""BOOLEAN['#9', 'is in the right image']""]"
NLVR2_dev_dev-21-1-0,If in the left image a canoe is in the water.,"[""SELECT['left image']"", ""PROJECT['canoe in #REF', '#1']"", ""PROJECT['water in #REF', '#1']"", ""BOOLEAN['#2', 'is in #3']""]","[""SELECT['canoe']"", ""SELECT['the water']"", ""FILTER['#1', 'in #2']"", ""BOOLEAN['#3', 'is in the left image']""]"
NLVR2_dev_dev-211-0-0,"If the combined images include one baboon with lowered face interested in the contents of some container, and a trio of same-size baboons sitting close together.","[""SELECT['baboons']"", ""PROJECT['face of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is lowered']"", ""SELECT['container']"", ""PROJECT['contents of #REF', '#4']"", ""FILTER['#3', 'interested in #5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']"", ""FILTER['#1', 'that are same-size']"", ""FILTER['#9', 'that are sitting close together']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is equal to three']"", ""BOOLEAN['logical_and', 'true', '#8', '#12']""]","[""SELECT['images']"", ""PROJECT['baboons in #REF', '#1']"", ""PROJECT['face of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is lowered']"", ""PROJECT['container in #REF', '#1']"", ""PROJECT['contents of #REF', '#5']"", ""FILTER['#4', 'interested in #6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to one']"", ""FILTER['#1', 'that are same-size']"", ""FILTER['#9', 'that are sitting close together']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is equal to three']"", ""BOOLEAN['logical_and', 'true', '#7', '#12']""]"
NLVR2_dev_dev-211-2-1,If a monkey is interacting with a container in the image on the right.,"[""SELECT['monkey']"", ""SELECT['container']"", ""FILTER['#1', 'interacting with #2']"", ""BOOLEAN['#3', 'is in the image on the right']""]","[""SELECT['monkey']"", ""SELECT['container']"", ""FILTER['#1', 'interacting with #2']"", ""BOOLEAN['#3', 'is in the right image']""]"
NLVR2_dev_dev-212-3-0,If in at least one image there is a white bowl of mash sweet potatoes on top of a small wash towel.,"[""SELECT['bowl of mash sweet potatoes']"", ""FILTER['#1', 'that is white']"", ""SELECT['wash towel']"", ""FILTER['#3', 'that is small']"", ""FILTER['#2', 'on top of #4']"", ""BOOLEAN['#5', 'is in at least one image']""]","[""SELECT['bowl of mash sweet potatoes']"", ""FILTER['#1', 'that is white']"", ""SELECT['wash towel']"", ""FILTER['#3', 'that is small']"", ""FILTER['#2', 'on top of #4']"", ""BOOLEAN['#5', 'are in at least one image']""]"
NLVR2_dev_dev-213-0-1,If the right image contains two towels hanging on a towel rod attached to a wall.,"[""SELECT['the right image']"", ""PROJECT['towels in #REF', '#1']"", ""PROJECT['towel rod in #REF', '#1']"", ""PROJECT['wall in #REF', '#1']"", ""FILTER['#3', 'attached to #4']"", ""FILTER['#2', 'hanging on #5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to two']""]","[""SELECT['the right image']"", ""PROJECT['towels in #REF', '#1']"", ""PROJECT['towel rod in #REF', '#1']"", ""PROJECT['wall in #REF', '#1']"", ""FILTER['#3', 'that is attached to #4']"", ""FILTER['#2', 'hanging on #5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to two']""]"
NLVR2_dev_dev-213-2-0,If in at least one image there are four folded towel below single black framed picture.,"[""SELECT['images']"", ""PROJECT['towels in #REF', '#1']"", ""FILTER['#2', 'that are folded']"", ""PROJECT['pictures in #REF', '#1']"", ""FILTER['#4', 'that are black framed']"", ""FILTER['#3', 'that are below #5']"", ""GROUP['count', '#6', '#1']"", ""COMPARATIVE['#1', '#7', 'is equal to four']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is at least one']""]","[""SELECT['towels']"", ""FILTER['#1', 'that are folded']"", ""SELECT['pictures']"", ""FILTER['#3', 'that are black framed']"", ""FILTER['#2', 'that are below #4']"", ""PROJECT['images of #REF', '#5']"", ""GROUP['count', '#5', '#6']"", ""COMPARATIVE['#6', '#7', 'is equal to one']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is at least one']""]"
NLVR2_dev_dev-214-2-0,If the left side image has two different types of animals,"[""SELECT['left image']"", ""PROJECT['animals in #REF', '#1']"", ""PROJECT['types of #REF', '#2']"", ""PROJECT['different #REF', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to two']""]","[""SELECT['left image']"", ""PROJECT['animals in #REF', '#1']"", ""PROJECT['types of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']""]"
NLVR2_dev_dev-215-2-0,"If in at least one image, we can see a human hand.","[""SELECT['human']"", ""PROJECT['hand of #REF', '#1']"", ""BOOLEAN['#2', 'is in at least one image']""]","[""SELECT['human hand']"", ""BOOLEAN['#1', 'is in at least one image']""]"
NLVR2_dev_dev-215-3-1,"If the left image features one flat rectangular phone held screen-side-up in one hand, with fingers and thumb on the edges.","[""SELECT['left image']"", ""PROJECT['phone in #REF', '#1']"", ""FILTER['#2', 'that is flat']"", ""FILTER['#3', 'that is rectangular']"", ""PROJECT['hand of #REF', '#4']"", ""FILTER['#5', 'held screen-side-up']"", ""PROJECT['fingers of #REF', '#6']"", ""PROJECT['edges of #REF', '#7']"", ""COMPARATIVE['#7', '#8', 'are on #9']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is equal to one']""]","[""SELECT['left image']"", ""PROJECT['phone in #REF', '#1']"", ""FILTER['#2', 'that is flat']"", ""FILTER['#3', 'that is rectangular']"", ""PROJECT['hand of #REF', '#4']"", ""FILTER['#5', 'that is held screen-side-up']"", ""FILTER['#6', 'that has fingers']"", ""PROJECT['edges of #REF', '#7']"", ""COMPARATIVE['#7', '#8', 'are on #9']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is equal to one']""]"
NLVR2_dev_dev-216-0-1,If one image includes a rightward-facing adult male gorilla with mouth open wide in a fierce expression.,"[""SELECT['gorilla']"", ""FILTER['#1', 'that is adult']"", ""FILTER['#2', 'that is male']"", ""FILTER['#3', 'that is rightward-facing']"", ""PROJECT['mouth of #REF', '#4']"", ""COMPARATIVE['#4', '#5', 'is open wide']"", ""FILTER['#6', 'in a fierce expression']"", ""BOOLEAN['#7', 'is in one image']""]","[""SELECT['gorilla']"", ""FILTER['#1', 'that is an adult']"", ""FILTER['#2', 'that is male']"", ""FILTER['#3', 'that is rightward-facing']"", ""PROJECT['mouth of #REF', '#4']"", ""COMPARATIVE['#4', '#5', 'is open wide']"", ""FILTER['#6', 'in a fierce expression']"", ""BOOLEAN['#7', 'is in one image']""]."
NLVR2_dev_dev-216-1-0,If one of the images shows a gorilla with an open mouth.,"[""SELECT['gorilla']"", ""PROJECT['mouth of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is open']"", ""BOOLEAN['#3', 'is in one image']""]","[""SELECT['gorilla']"", ""PROJECT['mouth of #REF', '#1']"", ""BOOLEAN['#2', 'is open']""]"
NLVR2_dev_dev-217-1-0,If you can see some damage to the animal in the image to the right.,"[""SELECT['the image to the right']"", ""PROJECT['the animal in #REF', '#1']"", ""BOOLEAN['#2', 'is damaged']""]","[""SELECT['right image']"", ""PROJECT['animal in #REF', '#1']"", ""BOOLEAN['#2', 'is damaged']""]"
NLVR2_dev_dev-218-0-0,If there are no more than 2 groundhogs.,"[""SELECT['groundhogs']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is at most two']""]","[""SELECT['groundhogs']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is at most 2']""]"
NLVR2_dev_dev-218-3-1,If there are exactly two marmots.,"[""SELECT['marmots']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to two']""]","[""SELECT['mammals']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to two']""]"
NLVR2_dev_dev-219-2-0,If a box is next to a lipstick and its cap.,"[""SELECT['box']"", ""SELECT['lipstick']"", ""PROJECT['cap of #REF', '#2']"", ""BOOLEAN['#1', 'is next to #3']"", ""BOOLEAN['#4', 'is next to #3']"", ""BOOLEAN['logical_and', 'true', '#5', '#6']""]","[""SELECT['box']"", ""SELECT['lipstick']"", ""PROJECT['cap of #REF', '#2']"", ""FILTER['#1', 'that is next to #3']"", ""BOOLEAN['#4', 'is next to #2']""]"
NLVR2_dev_dev-219-2-1,If one image shows a lipstick cover on its side near an upright lipstick tube and box.,"[""SELECT['lipstick cover']"", ""PROJECT['side of #REF', '#1']"", ""SELECT['lipstick tube']"", ""SELECT['box']"", ""FILTER['#4', 'that is upright']"", ""FILTER['#3', 'that is near #5']"", ""FILTER['#6', 'that is near #7']"", ""BOOLEAN['#8', 'is in one image']""]","[""SELECT['lipstick cover']"", ""PROJECT['side of #REF', '#1']"", ""SELECT['lipstick tube']"", ""FILTER['#3', 'that is upright']"", ""SELECT['box']"", ""FILTER['#4', 'that is upright']"", ""FILTER['#5', 'that is near #6']"", ""BOOLEAN['#7', 'is in one image']""]"
NLVR2_dev_dev-2-2-0,If the left image has a woodwind instrument on a wooden surface.,"[""SELECT['instrument']"", ""FILTER['#1', 'that is woodwind']"", ""SELECT['surface']"", ""FILTER['#3', 'that is wooden']"", ""FILTER['#2', 'on #4']"", ""BOOLEAN['#5', 'is in the left image']""]","[""SELECT['instrument']"", ""FILTER['#1', 'that is woodwind']"", ""SELECT['surface']"", ""FILTER['#3', 'that is wooden']"", ""BOOLEAN['#2', 'is on #4']""]"
NLVR2_dev_dev-220-0-0,If there are four kids in the pair of images.,"[""SELECT['images']"", ""PROJECT['kids in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to four']""]","[""SELECT['images']"", ""PROJECT['kids in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""BOOLEAN['#3', 'is equal to four']""]"
NLVR2_dev_dev-220-0-1,"If an image shows two young girls each modeling long-legged sleepwear, and at least one wears sleepwear with separate top and bottoms.","[""SELECT['girls']"", ""FILTER['#1', 'that are young']"", ""SELECT['sleepwear']"", ""FILTER['#3', 'that are long-legged']"", ""FILTER['#2','modeling #4']"", ""SELECT['images']"", ""GROUP['count', '#5', '#6']"", ""COMPARATIVE['#6', '#7', 'is equal to two']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is at least one']"", ""PROJECT['sleepwear of #REF', '#10']"", ""PROJECT['top of #REF', '#11']"", ""PROJECT['bottom of #REF', '#11']"", ""COMPARATIVE['#11', '#12', 'is separate']"", ""COMPARATIVE['#11', '#13', 'is separate']"", ""INTERSECTION['#11', '#14', '#15']"", ""AGGREGATE['count', '#16']"", ""BOOLEAN['#17', 'is at least one']""]","[""SELECT['girls']"", ""FILTER['#1', 'that are young']"", ""SELECT['sleepwear']"", ""FILTER['#3', 'that are long-legged']"", ""FILTER['#2','modeling #4']"", ""SELECT['images']"", ""GROUP['count', '#5', '#6']"", ""COMPARATIVE['#6', '#7', 'is equal to two']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is at least one']"", ""PROJECT['sleepwear in #REF', '#6']"", ""PROJECT['top of #REF', '#9']"", ""PROJECT['bottom of #REF', '#9']"", ""COMPARATIVE['#9', '#10', 'is separate']"", ""COMPARATIVE['#9', '#11', 'is separate from #12']"", ""INTERSECTION['#9', '#13', '#14']"", ""AGGREGATE['count', '#15']"", ""BOOLEAN['#16', 'is at least one']""]"
NLVR2_dev_dev-221-2-0,If there are more than three syringes.,"[""SELECT['syringes']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is higher than three']""]","[""SELECT['syringes']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is at most three']""]"
NLVR2_dev_dev-221-3-1,"If each image contains the same number of syringes, and the combined images contain at least four syringes in total.","[""SELECT['images']"", ""PROJECT['syringes in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""BOOLEAN['#3', 'are equal']"", ""AGGREGATE['sum', '#4']"", ""BOOLEAN['#5', 'is at least four']"", ""BOOLEAN['logical_and', 'true', '#6', '#1']""]","[""SELECT['images']"", ""PROJECT['syringes in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is the same']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#6', 'is equal to #5']"", ""BOOLEAN['#7', 'is at least four']"", ""BOOLEAN['logical_and', 'true', '#8', '#9']""]"
NLVR2_dev_dev-22-2-0,If a greyhound is holding a knitted toy with its front legs.,"[""SELECT['grayhound']"", ""SELECT['toy']"", ""FILTER['#2', 'that is knitted']"", ""PROJECT['front legs of #REF', '#1']"", ""BOOLEAN['#1', 'is holding #3 with #4']""]","[""SELECT['greyhound']"", ""SELECT['toy']"", ""FILTER['#2', 'that is knitted']"", ""PROJECT['front legs of #REF', '#1']"", ""BOOLEAN['#1', 'is holding #4 with #3']""]"
NLVR2_dev_dev-222-2-0,If one image shows an overhead view of a beetle and the other shows a side view.,"[""SELECT['one image']"", ""PROJECT['beetle in #REF', '#1']"", ""BOOLEAN['#2', 'is an overhead view']"", ""SELECT['the other image']"", ""PROJECT['beetle in #REF', '#4']"", ""BOOLEAN['#5', 'is a side view']"", ""BOOLEAN['logical_and', 'true', '#3', '#6']""]","[""SELECT['one image']"", ""PROJECT['beetle in #REF', '#1']"", ""PROJECT['overhead view of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']"", ""SELECT['other image']"", ""PROJECT['beetle in #REF', '#6']"", ""BOOLEAN['#7', 'is side view']"", ""BOOLEAN['logical_and', 'true', '#5', '#8']""]"
NLVR2_dev_dev-222-3-1,"If one beetle is displayed vertically and in a top-view, while the other beetle is displayed horizontally.","[""SELECT['beetles']"", ""FILTER['#1', 'that is displayed vertically']"", ""FILTER['#1', 'that is displayed horizontally']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']"", ""BOOLEAN['#5', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#6', '#7']""]","[""SELECT['beetles']"", ""FILTER['#1', 'that is displayed vertically']"", ""FILTER['#1', 'that is displayed horizontally']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']"", ""BOOLEAN['#5', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#6', '#7']""]"
NLVR2_dev_dev-22-3-1,If there is a dog laying on a dog bed cuddling a stuffed toy,"[""SELECT['dog']"", ""SELECT['dog bed']"", ""FILTER['#1', 'laying on #2']"", ""SELECT['stuffed toy']"", ""BOOLEAN['#3', 'is cuddling #4']""]","[""SELECT['dog']"", ""SELECT['dog bed']"", ""BOOLEAN['#1', 'is laying on #2']"", ""SELECT['stuffed toy']"", ""BOOLEAN['#3', 'is cuddling #4']""."
NLVR2_dev_dev-223-1-1,"If the sneaker in the left image has a stretch top opening, currently being stretched open.","[""SELECT['the left image']"", ""PROJECT['sneaker in #REF', '#1']"", ""PROJECT['top of #REF', '#2']"", ""BOOLEAN['#3', 'is stretch open']""]","[""SELECT['the left image']"", ""PROJECT['sneaker in #REF', '#1']"", ""PROJECT['top opening of #REF', '#2']"", ""BOOLEAN['#3', 'is stretch']""]"
NLVR2_dev_dev-223-2-0,If the top band of a sneaker is being stretched with fingers,"[""SELECT['sneaker']"", ""PROJECT['top band of #REF', '#1']"", ""SELECT['fingers']"", ""BOOLEAN['#2', 'is being stretched with #3']""]","[""SELECT['sneaker']"", ""PROJECT['the top band of #REF', '#1']"", ""SELECT['fingers']"", ""BOOLEAN['#2', 'is being stretched with #3']""]"
NLVR2_dev_dev-224-0-1,If every image shows exactly one dog.,"[""SELECT['images']"", ""PROJECT['dogs in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is equal to one']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#5', 'is equal to #6']""]","[""SELECT['images']"", ""PROJECT['dogs in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is equal to one']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to #6']""]"
NLVR2_dev_dev-224-1-0,"If all dogs are corgis with upright ears, and one image contains at least twice as many real corgis as the other image.","[""SELECT['one image']"", ""PROJECT['corgis in #REF', '#1']"", ""PROJECT['ears of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'are upright']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to #6']"", ""SELECT['other image']"", ""PROJECT['real corgis in #REF', '#8']"", ""PROJECT['real corgis in #REF', '#8']"", ""AGGREGATE['count', '#9']"", ""ARITHMETIC['division', '#10', '#11']"", ""BOOLEAN['#12', 'is at least two']"", ""BOOLEAN['logical_and', 'true', '#7', '#13']""]","[""SELECT['one image']"", ""PROJECT['corgis in #REF', '#1']"", ""PROJECT['ears of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'are upright']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to #6']"", ""SELECT['other image']"", ""PROJECT['corgis in #REF', '#8']"", ""FILTER['#9', 'that are real']"", ""AGGREGATE['count', '#10']"", ""ARITHMETIC['division', '#7', '#11']"", ""BOOLEAN['#12', 'is at least two']"", ""BOOLEAN['logical_and', 'true', '#7', '#13']""]"
NLVR2_dev_dev-225-0-0,"If an image contains exactly two llamas, with solid white fur and round heads with upright ears, standing one in front of the other.","[""SELECT['llamas']"", ""PROJECT['fur of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is solid white']"", ""PROJECT['heads of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'are round']"", ""PROJECT['ears of #REF', '#5']"", ""COMPARATIVE['#5', '#6', 'are upright']"", ""FILTER['#7','standing in front of #8']"", ""SELECT['images']"", ""GROUP['count', '#9', '#10']"", ""COMPARATIVE['#10', '#11', 'is equal to two']"", ""AGGREGATE['count', '#12']"", ""BOOLEAN['#13', 'is at least one']""]","[""SELECT['llamas']"", ""PROJECT['fur of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is solid white']"", ""PROJECT['heads of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'are round']"", ""PROJECT['ears of #REF', '#5']"", ""COMPARATIVE['#5', '#6', 'are upright']"", ""FILTER['#7', 'that are standing in front of the other image']"", ""GROUP['count', '#8', '#1']"", ""COMPARATIVE['#1', '#9', 'is equal to two']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is equal to one']""]"
NLVR2_dev_dev-226-1-0,If both stairways have glass sides and wood handrails.,"[""SELECT['stairways']"", ""PROJECT['sides of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are glass']"", ""PROJECT['handrails of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'are wood']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to two']""]","[""SELECT['stairways']"", ""PROJECT['sides of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is glass']"", ""PROJECT['handrails of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'are wood']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to two']""]"
NLVR2_dev_dev-227-1-0,If a rolling pin is rolling out dough in at least one of the pictures.,"[""SELECT['rolling pin']"", ""SELECT['dough']"", ""FILTER['#1', 'rolling out #2']"", ""BOOLEAN['#3', 'is in at least one of the pictures']""]","[""SELECT['rolling pin']"", ""SELECT['dough']"", ""FILTER['#1', 'rolling out #2']"", ""BOOLEAN['#3', 'is in at least one of the pictures']""]."
NLVR2_dev_dev-227-1-1,If the left image shows a long wooden cylinder laid diagonally on top of a flattened circle of dough.,"[""SELECT['cylinder']"", ""FILTER['#1', 'that is wooden']"", ""FILTER['#2', 'that is long']"", ""SELECT['circle of dough']"", ""FILTER['#4', 'that is flattened']"", ""FILTER['#3', 'that is laid diagonally on top of #5']"", ""BOOLEAN['#6', 'is in the left image']""]","[""SELECT['cylinder']"", ""FILTER['#1', 'that is long']"", ""FILTER['#2', 'that is wooden']"", ""SELECT['circle of dough']"", ""FILTER['#4', 'that is flattened']"", ""FILTER['#3', 'laying diagonally on top of #5']"", ""BOOLEAN['#6', 'is in the left image']""]"
NLVR2_dev_dev-228-2-1,If there an underweight dog with ribs and hip bones showing.,"[""SELECT['dog']"", ""FILTER['#1', 'that is underweight']"", ""PROJECT['ribs of #REF', '#2']"", ""PROJECT['hip bones of #REF', '#2']"", ""BOOLEAN['#3', 'are showing']"", ""BOOLEAN['#4', 'are showing']"", ""BOOLEAN['logical_and', 'true', '#5', '#6']""]","[""SELECT['dog']"", ""FILTER['#1', 'that is underweight']"", ""PROJECT['ribs of #REF', '#2']"", ""PROJECT['hip bones of #REF', '#2']"", ""COMPARATIVE['#2', '#4', 'are showing']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least one']""]"
NLVR2_dev_dev-228-3-0,If all the dogs are facing left.,"[""SELECT['dogs']"", ""FILTER['#1', 'that are facing left']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to #4']""]","[""SELECT['dogs']"", ""FILTER['#1', 'that are facing left']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#4', 'is equal to #3']""]"
NLVR2_dev_dev-229-0-1,If a single dog is sitting down in the image on the right.,"[""SELECT['right image']"", ""PROJECT['dog in #REF', '#1']"", ""FILTER['#2', 'that is sitting down']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]","[""SELECT['right image']"", ""PROJECT['dogs in #REF', '#1']"", ""FILTER['#2', 'that are sitting down']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]"
NLVR2_dev_dev-230-1-0,"If one image features at least one panda chewing on a leafless stalk, and the other image shows a sitting panda with the arm on the right bent toward its mouth.","[""SELECT['one image']"", ""PROJECT['panda in #REF', '#1']"", ""PROJECT['stalk in #REF', '#1']"", ""FILTER['#3', 'that is leafless']"", ""FILTER['#2', 'chewing on #4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least one']"", ""SELECT['the other image']"", ""PROJECT['panda in #REF', '#8']"", ""FILTER['#9', 'that is sitting']"", ""PROJECT['arm of #REF', '#10']"", ""COMPARATIVE['#10', '#11', 'is on the right']"", ""PROJECT['mouth of #REF', '#12']"", ""BOOLEAN['#13', 'is bent toward #14']"", ""BOOLEAN['logical_and', 'true', '#7', '#15']""]","[""SELECT['one image']"", ""PROJECT['pandas in #REF', '#1']"", ""PROJECT['stalk in #REF', '#1']"", ""FILTER['#3', 'that is leafless']"", ""FILTER['#2', 'chewing on #4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least one']"", ""SELECT['the other image']"", ""PROJECT['panda in #REF', '#8']"", ""FILTER['#9', 'that is sitting']"", ""PROJECT['arm of #REF', '#10']"", ""COMPARATIVE['#10', '#11', 'is on the right']"", ""PROJECT['mouth of #REF', '#11']"", ""BOOLEAN['#12', 'is bent toward #13']"", ""BOOLEAN['logical_and', 'true', '#7', '#14']""]"
NLVR2_dev_dev-230-1-1,If there are two pandas in the left image and single panda in the right image.,"[""SELECT['left image']"", ""PROJECT['pandas in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']"", ""SELECT['right image']"", ""PROJECT['pandas in #REF', '#5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#4', '#8']""]","[""SELECT['left image']"", ""PROJECT['pandas in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']"", ""SELECT['right image']"", ""PROJECT['pandas in #REF', '#6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#4', '#9']""]"
NLVR2_dev_dev-231-2-0,If the left and right image contains the same numbers of mugs with at least one with a pink printed mug on it.,"[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['mugs in #REF', '#1']"", ""PROJECT['mugs in #REF', '#2']"", ""FILTER['#3', 'that are printed']"", ""FILTER['#4', 'that are pink']"", ""FILTER['#5', 'that are printed']"", ""AGGREGATE['count', '#6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to #9']"", ""BOOLEAN['#10', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#11', '#12']""]","[""SELECT['mugs']"", ""SELECT['left image']"", ""SELECT['right image']"", ""FILTER['#1', 'that are in #2']"", ""FILTER['#1', 'that are in #3']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to #7']"", ""FILTER['#1', 'that is pink printed']"", ""FILTER['#1', 'that has #8 on it']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#8', '#13']""]"
NLVR2_dev_dev-23-2-1,If the pizzas in each image remain uncut.,"[""SELECT['pizzas']"", ""FILTER['#1', 'that remain uncut']"", ""SELECT['images']"", ""GROUP['count', '#2', '#3']"", ""COMPARATIVE['#3', '#4', 'is at least two']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to #7']""]","[""SELECT['pizzas']"", ""FILTER['#1', 'that remain uncut']"", ""SELECT['images']"", ""GROUP['count', '#2', '#3']"", ""COMPARATIVE['#3', '#4', 'is at least one']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to #8']""]"
NLVR2_dev_dev-232-2-1,"If one image shows multiple people standing to the left of a train, and the other image includes a leftward angled train with at least some blue coloring on it.","[""SELECT['one image']"", ""PROJECT['people in #REF', '#1']"", ""PROJECT['train in #REF', '#1']"", ""FILTER['#2','standing to the left of #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least two']"", ""SELECT['other image']"", ""PROJECT['train in #REF', '#7']"", ""FILTER['#8', 'that is leftward angled']"", ""PROJECT['coloring of #REF', '#9']"", ""COMPARATIVE['#9', '#10', 'is blue']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#6', '#13']""]","[""SELECT['one image']"", ""PROJECT['people in #REF', '#1']"", ""PROJECT['train in #REF', '#1']"", ""FILTER['#2','standing to the left of #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is higher than two']"", ""SELECT['other image']"", ""PROJECT['train in #REF', '#7']"", ""FILTER['#8', 'that is leftward angled']"", ""PROJECT['coloring of #REF', '#9']"", ""COMPARATIVE['#9', '#10', 'is at least one']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#6', '#13']""]"
NLVR2_dev_dev-232-3-0,If people are standing near a train in one of the images.,"[""SELECT['people']"", ""SELECT['train']"", ""FILTER['#1','standing near #2']"", ""BOOLEAN['#3', 'are in one of the images']""]","[""SELECT['people']"", ""SELECT['train']"", ""FILTER['#1','standing near #2']"", ""BOOLEAN['#3', 'is in one image']""]"
NLVR2_dev_dev-23-3-0,If a pizza cutter is laying next to the pizza,"[""SELECT['pizza']"", ""PROJECT['cutter of #REF', '#1']"", ""BOOLEAN['#2', 'is laying next to #1']""]","[""SELECT['pizza cutter']"", ""BOOLEAN['#1', 'is laying next to the pizza']""]"
NLVR2_dev_dev-233-0-0,"If the combined images include four devices propped on stands, with at least one stand shaped like an animal.","[""SELECT['devices']"", ""SELECT['stands']"", ""FILTER['#1', 'that are propped on #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to four']"", ""SELECT['animal']"", ""FILTER['#1', 'that is shaped like #5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#8', '#9']""]","[""SELECT['devices']"", ""SELECT['stands']"", ""FILTER['#1', 'that are propped on #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to four']"", ""SELECT['animal']"", ""FILTER['#2', 'that is shaped like #5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#9', '#8']""]"
NLVR2_dev_dev-233-0-1,If one of the images shows a wooden phone stand shaped like an animal.,"[""SELECT['phone stand']"", ""FILTER['#1', 'that is wooden']"", ""SELECT['animal']"", ""FILTER['#2','shaped like #3']"", ""BOOLEAN['#4', 'is in one of the images']""]","[""SELECT['phone stand']"", ""FILTER['#1', 'that is wooden']"", ""SELECT['animal']"", ""FILTER['#2','shaped like #3']"", ""BOOLEAN['#4', 'is in one image']""]"
NLVR2_dev_dev-234-0-1,If a leopard is lying on the ground.,"[""SELECT['leopard']"", ""SELECT['ground']"", ""BOOLEAN['#1', 'is lying on #2']""]","[""SELECT['leopard']"", ""SELECT['the ground']"", ""BOOLEAN['#1', 'is lying on #2']""]"
NLVR2_dev_dev-235-0-1,If there are at least 2 packages of scott in a red packaging.,"[""SELECT['packages of scott']"", ""SELECT['packaging']"", ""FILTER['#2', 'that is red']"", ""FILTER['#1', 'in #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least two']""]","[""SELECT['packages of scott']"", ""PROJECT['packaging of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is red']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least two']""]"
NLVR2_dev_dev-235-2-0,If there are more than 8 packages present.,"[""SELECT['packages']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is higher than 8']""]","[""SELECT['packages present']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is higher than 8']""]"
NLVR2_dev_dev-236-2-0,If the right image contains a person riding a mountain bike wearing knee pads.,"[""SELECT['person']"", ""SELECT['mountain bike']"", ""FILTER['#1', 'riding #2']"", ""SELECT['knee pads']"", ""FILTER['#3', 'wearing #4']"", ""BOOLEAN['#5', 'is in the right image']""]","[""SELECT['person']"", ""SELECT['mountain bike']"", ""FILTER['#1', 'riding #2']"", ""SELECT['knee pads']"", ""FILTER['#4', 'wearing #5']"", ""BOOLEAN['#6', 'is in the right image']""]"
NLVR2_dev_dev-236-3-1,If only the person in the image on the left is on a bike.,"[""SELECT['left image']"", ""PROJECT['person in #REF', '#1']"", ""PROJECT['bike in #REF', '#1']"", ""FILTER['#2', 'on #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to zero']""]","[""SELECT['left image']"", ""PROJECT['person in #REF', '#1']"", ""PROJECT['bike in #REF', '#1']"", ""BOOLEAN['#2', 'is only on #3']""]"
NLVR2_dev_dev-237-1-1,If one of the sinks has an attached chain to hold the drain plug.,"[""SELECT['sinks']"", ""SELECT['chain']"", ""SELECT['drain plug']"", ""FILTER['#1', 'that has #2 attached to hold #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']""]","[""SELECT['sinks']"", ""SELECT['chain']"", ""SELECT['drain plug']"", ""FILTER['#1', 'that has #2 attached']"", ""FILTER['#3', 'that holds #4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']""]"
NLVR2_dev_dev-237-2-0,If the hot and cold faucets are indicated by colored dots.,"[""SELECT['faucets']"", ""FILTER['#1', 'that are hot']"", ""FILTER['#1', 'that are cold']"", ""PROJECT['dots of #REF', '#2']"", ""PROJECT['dots of #REF', '#3']"", ""BOOLEAN['#4', 'are indicated by #5']""]","[""SELECT['faucets']"", ""FILTER['#1', 'that are hot']"", ""FILTER['#1', 'that are cold']"", ""SELECT['dots']"", ""FILTER['#4', 'that are colored']"", ""BOOLEAN['#3', 'are indicated by #5']""]"
NLVR2_dev_dev-238-0-0,"If in one image, a child interacts with a dog in a grassy area, while in a second image of an interior location a dog on a blanket is looking forward.","[""SELECT['one image']"", ""PROJECT['child in #REF', '#1']"", ""PROJECT['dog in #REF', '#1']"", ""PROJECT['area in #REF', '#1']"", ""FILTER['#4', 'that is grassy']"", ""FILTER['#2', 'that interacts with #3']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least one']"", ""SELECT['the second image']"", ""PROJECT['dog in #REF', '#8']"", ""PROJECT['blanket in #REF', '#8']"", ""FILTER['#9', 'that is on #10']"", ""BOOLEAN['#11', 'is looking forward']"", ""BOOLEAN['logical_and', 'true', '#7', '#12']""]","[""SELECT['one image']"", ""PROJECT['child in #REF', '#1']"", ""PROJECT['dog in #REF', '#1']"", ""PROJECT['area in #REF', '#1']"", ""FILTER['#4', 'that is grassy']"", ""BOOLEAN['#2', 'interacts with #3']"", ""SELECT['second image']"", ""PROJECT['dog in #REF', '#7']"", ""PROJECT['blanket in #REF', '#7']"", ""FILTER['#8', 'that is on #9']"", ""BOOLEAN['#10', 'is looking forward']"", ""BOOLEAN['logical_and', 'true', '#6', '#11']""]"
NLVR2_dev_dev-238-0-1,If the left image contains a human interacting with a dog outside.,"[""SELECT['human']"", ""SELECT['dog']"", ""FILTER['#1', 'interacting with #2']"", ""FILTER['#3', 'that is outside']"", ""BOOLEAN['#4', 'is in the left image']""]","[""SELECT['human']"", ""SELECT['dog']"", ""FILTER['#1', 'interacting with #2']"", ""FILTER['#3', 'outside']"", ""BOOLEAN['#4', 'is in the left image']""]"
NLVR2_dev_dev-239-0-1,If there is exactly one pair of drumsticks.,"[""SELECT['pair of drumsticks']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to one']""]","[""SELECT['pairs of drumsticks']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to one']""]"
NLVR2_dev_dev-239-3-0,If in at least one image there is a two color tone drum where tie base is red.,"[""SELECT['drum']"", ""PROJECT['color tone of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is two']"", ""PROJECT['base of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is red']"", ""BOOLEAN['#5', 'is in at least one image']""]","[""SELECT['drum']"", ""PROJECT['tie base of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is red']"", ""PROJECT['color tone of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is equal to two']"", ""BOOLEAN['#5', 'is in at least one image']""]"
NLVR2_dev_dev-240-3-0,If the left image shows a cream-layered dessert in a footed clear glass which includes sliced peanut butter cups and brownie chunks.,"[""SELECT['dessert']"", ""FILTER['#1', 'that is cream-layered']"", ""SELECT['glass']"", ""FILTER['#3', 'that is footed']"", ""FILTER['#4', 'that is clear']"", ""FILTER['#2', 'in #5']"", ""SELECT['peanut butter cups']"", ""FILTER['#7', 'that are sliced']"", ""SELECT['browne chunks']"", ""FILTER['#8', 'that are in #6']"", ""FILTER['#9', 'that include #10']"", ""BOOLEAN['#11', 'is in the left image']""]","[""SELECT['dessert']"", ""FILTER['#1', 'that is cream-layered']"", ""SELECT['glass']"", ""FILTER['#3', 'that is footed']"", ""FILTER['#4', 'that is clear']"", ""FILTER['#2', 'in #5']"", ""SELECT['peanut butter cups']"", ""FILTER['#7', 'that are sliced']"", ""SELECT['browne chunks']"", ""FILTER['#8', 'that are in #9']"", ""FILTER['#10', 'that include #11']"", ""BOOLEAN['#12', 'is in the left image']""]"
NLVR2_dev_dev-240-3-1,"If the image to the right appears to show a single serving, rather than the full trifle.","[""SELECT['right image']"", ""PROJECT['serving in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']"", ""PROJECT['trifle in #REF', '#1']"", ""BOOLEAN['#5', 'is full']"", ""BOOLEAN['logical_and', 'true', '#4', '#6']""]","[""SELECT['right image']"", ""PROJECT['serving of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']"", ""SELECT['full trifle']"", ""BOOLEAN['#5', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#4', '#6']""]"
NLVR2_dev_dev-241-0-0,If at least one of the images in the set does not feature four knee pads.,"[""SELECT['knee pads']"", ""SELECT['images']"", ""GROUP['count', '#1', '#2']"", ""COMPARATIVE['#2', '#3', 'is equal to four']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']""]","[""SELECT['images']"", ""PROJECT['knee pads in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is equal to four']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']""]"
NLVR2_dev_dev-24-1-1,"If there is at least 1 clown fish swimming near an anemone, a clown fish is looking toward the camera","[""SELECT['clown fish']"", ""SELECT['anemone']"", ""FILTER['#1','swimming near #2']"", ""SELECT['camera']"", ""FILTER['#3', 'looking toward #4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least one']""]","[""SELECT['clown fish']"", ""SELECT['anemone']"", ""FILTER['#1','swimming near #2']"", ""SELECT['camera']"", ""FILTER['#1', 'looking toward #4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least one']"", ""BOOLEAN['#7', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#4', '#8']""]"
NLVR2_dev_dev-242-0-0,If the right image contains a spoon placed near a dessert.,"[""SELECT['spoon']"", ""SELECT['dessert']"", ""FILTER['#1', 'placed near #2']"", ""BOOLEAN['#3', 'is in the right image']""]","[""SELECT['spoon']"", ""SELECT['dessert']"", ""FILTER['#1', 'placed near #2']"", ""BOOLEAN['#3', 'is in the right image']""]."
NLVR2_dev_dev-242-2-1,If at least one image shows multiple small desserts containing chocolate-brown cream layers.,"[""SELECT['desserts']"", ""FILTER['#1', 'that are small']"", ""SELECT['cream layers']"", ""FILTER['#3', 'that are chocolate-brown']"", ""FILTER['#2', 'containing #4']"", ""PROJECT['images of #REF', '#5']"", ""GROUP['count', '#5', '#6']"", ""COMPARATIVE['#6', '#7', 'is at least two']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is at least one']""]","[""SELECT['desserts']"", ""FILTER['#1', 'that are small']"", ""SELECT['cream layers']"", ""FILTER['#3', 'that are chocolate-brown']"", ""FILTER['#2', 'containing #4']"", ""PROJECT['images of #REF', '#5']"", ""GROUP['count', '#5', '#6']"", ""COMPARATIVE['#6', '#7', 'is at least two']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to one']""]"
NLVR2_dev_dev-24-3-0,If one image shows a clown fish swimming next to anemone tendrils that are one solid color.,"[""SELECT['clown fish']"", ""SELECT['anemone tendrils']"", ""FILTER['#2', 'that are solid colors']"", ""FILTER['#1','swimming next to #3']"", ""BOOLEAN['#4', 'is in one image']""]","[""SELECT['clown fish']"", ""SELECT['anemone tendrils']"", ""PROJECT['colors of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'are solid']"", ""FILTER['#1','swimming next to #4']"", ""BOOLEAN['#5', 'is in one image']""]"
NLVR2_dev_dev-243-0-0,If there are no more than six birds.,"[""SELECT['birds']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is at most six']""]","[""SELECT['birds']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to six']""]"
NLVR2_dev_dev-243-1-1,If three ducks are floating in water and the other three are on land.,"[""SELECT['ducks']"", ""SELECT['water']"", ""SELECT['land']"", ""FILTER['#1', 'floating in #2']"", ""FILTER['#1', 'floating in #3']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to three']"", ""BOOLEAN['#7', 'is equal to three']"", ""BOOLEAN['logical_and', 'true', '#8', '#9']""]","[""SELECT['ducks']"", ""SELECT['water']"", ""SELECT['land']"", ""FILTER['#1', 'that are floating in #2']"", ""FILTER['#1', 'that are on #3']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to three']"", ""BOOLEAN['#7', 'is equal to three']"", ""BOOLEAN['logical_and', 'true', '#8', '#9']""]"
NLVR2_dev_dev-244-0-0,If the left image contains one old fashioned glass soda bottle filled with a dark liquid.,"[""SELECT['left image']"", ""PROJECT['soda bottle in #REF', '#1']"", ""FILTER['#2', 'that is glass']"", ""FILTER['#3', 'that is old fashioned']"", ""PROJECT['liquid in #REF', '#1']"", ""FILTER['#5', 'that is dark']"", ""FILTER['#4', 'filled with #6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to one']""]","[""SELECT['soda bottle']"", ""FILTER['#1', 'that is glass']"", ""FILTER['#2', 'that is old fashioned']"", ""SELECT['liquid']"", ""FILTER['#4', 'that is dark']"", ""FILTER['#3', 'filled with #5']"", ""BOOLEAN['#6', 'is in the left image']""]"
NLVR2_dev_dev-244-1-1,If one bottle is full.,"[""SELECT['bottles']"", ""FILTER['#1', 'that are full']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']""]","[""SELECT['bottles']"", ""FILTER['#1', 'which are full']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']""]"
NLVR2_dev_dev-245-3-1,If there is one yellow lab puppy and one or more darker colored labrador retriever puppies,"[""SELECT['lab puppy']"", ""FILTER['#1', 'that is yellow']"", ""SELECT['labrador retriever puppies']"", ""FILTER['#3', 'that are darker colored']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']"", ""BOOLEAN['#6', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#7', '#8']""]","[""SELECT['lab puppies']"", ""FILTER['#1', 'that are yellow']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']"", ""SELECT['labrador retriever puppies']"", ""FILTER['#5', 'that are darker colored']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#4', '#8']""]"
NLVR2_dev_dev-246-2-0,If there is an empty beaker.,"[""SELECT['beaker']"", ""FILTER['#1', 'that is empty']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least one']""]","[""SELECT['beakers']"", ""FILTER['#1', 'that are empty']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least one']""]"
NLVR2_dev_dev-247-1-0,"If each image contains one dark solid-colored schnauzer, and the lefthand dog wears a collar while the righthand dog is posed near a colorful dog toy.","[""SELECT['images']"", ""PROJECT['schnauzers in #REF', '#1']"", ""FILTER['#2', 'that are dark solid-colored']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is equal to one']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#6', 'is equal to #7']"", ""SELECT['lefthand dog']"", ""SELECT['collar']"", ""FILTER['#9', 'that wears #10']"", ""SELECT['righthand dog']"", ""SELECT['dog toy']"", ""FILTER['#11', 'that is colorful']"", ""BOOLEAN['#12', 'is posed near #13']"", ""BOOLEAN['logical_and', 'true', '#8', '#14']""]","[""SELECT['images']"", ""PROJECT['schnauzers in #REF', '#1']"", ""FILTER['#2', 'that are dark solid-colored']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is equal to one']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#6', 'is equal to #7']"", ""SELECT['lefthand dog']"", ""SELECT['collar']"", ""FILTER['#1', 'that wear #9']"", ""SELECT['righthand dog']"", ""SELECT['dog toy']"", ""FILTER['#11', 'that is colorful']"", ""BOOLEAN['#12', 'is posed near #10']"", ""BOOLEAN['logical_and', 'true', '#8', '#13']""]"
NLVR2_dev_dev-247-3-1,If one of the images shows a dog next to its toy.,"[""SELECT['dog']"", ""PROJECT['toy of #REF', '#1']"", ""FILTER['#1', 'next to #2']"", ""BOOLEAN['#3', 'is in one image']""]","[""SELECT['dog']"", ""SELECT['toy']"", ""FILTER['#1', 'next to #2']"", ""BOOLEAN['#3', 'is in one image']""]"
NLVR2_dev_dev-249-2-0,If the left and right image contains the same number of white framed door window panes on at least one door way.,"[""SELECT['the left image']"", ""PROJECT['door window panes in #REF', '#1']"", ""FILTER['#2', 'that are white framed']"", ""PROJECT['door way in #REF', '#1']"", ""FILTER['#3', 'on #4']"", ""AGGREGATE['count', '#5']"", ""SELECT['the right image']"", ""PROJECT['door window panes in #REF', '#7']"", ""FILTER['#8', 'that are white framed']"", ""FILTER['#9', 'on #6']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is equal to #12']""]","[""SELECT['the left image']"", ""PROJECT['door window panes in #REF', '#1']"", ""FILTER['#2', 'that are white framed']"", ""PROJECT['door ways in #REF', '#1']"", ""FILTER['#4', 'on #3']"", ""AGGREGATE['count', '#5']"", ""SELECT['the right image']"", ""PROJECT['door window panes in #REF', '#7']"", ""FILTER['#8', 'that are white framed']"", ""FILTER['#9', 'on #6']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is equal to #12']""]"
NLVR2_dev_dev-25-0-0,If the left image contains a white chihuahua.,"[""SELECT['chihuahua']"", ""FILTER['#1', 'that is white']"", ""BOOLEAN['#2', 'is in the left image']""]","[""SELECT['left image']"", ""PROJECT['chihuahua in #REF', '#1']"", ""FILTER['#2', 'that is white']"", ""BOOLEAN['#3', 'is in #4']""]"
NLVR2_dev_dev-250-0-1,"If one image shows a juvenile chimp in front of a larger adult chimp, and the other image contains one frontward-turned chimp and no humans.","[""SELECT['one image']"", ""PROJECT['chimp in #REF', '#1']"", ""FILTER['#2', 'that is juvenile']"", ""FILTER['#2', 'that is adult']"", ""FILTER['#4', 'that is larger']"", ""BOOLEAN['#3', 'is in front of #5']"", ""SELECT['other image']"", ""PROJECT['chimp in #REF', '#7']"", ""FILTER['#8', 'that is frontward-turned']"", ""PROJECT['humans in #REF', '#7']"", ""AGGREGATE['count', '#9']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is equal to one']"", ""BOOLEAN['#12', 'is equal to zero']"", ""BOOLEAN['logical_and', 'true', '#6', '#13']""]","[""SELECT['one image']"", ""PROJECT['chimp in #REF', '#1']"", ""FILTER['#2', 'that is juvenile']"", ""FILTER['#2', 'that is adult']"", ""FILTER['#4', 'that is larger']"", ""BOOLEAN['#3', 'is in front of #5']"", ""SELECT['the other image']"", ""PROJECT['chimp in #REF', '#7']"", ""FILTER['#8', 'that is frontward-turned']"", ""PROJECT['humans in #REF', '#7']"", ""AGGREGATE['count', '#9']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is equal to one']"", ""BOOLEAN['#12', 'is equal to zero']"", ""BOOLEAN['logical_and', 'true', '#6', '#13']""]"
NLVR2_dev_dev-250-3-0,If there are more mammals in the image on the right.,"[""SELECT['mammals']"", ""SELECT['right image']"", ""FILTER['#1', 'in #2']"", ""DISCARD['#1', '#3']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is higher than #6']""]","[""SELECT['mammals']"", ""SELECT['right image']"", ""FILTER['#1', 'that are in #2']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['difference', '#4', '#5']"", ""BOOLEAN['#5', 'is at least two']""]"
NLVR2_dev_dev-25-1-1,If an image features exactly one chihuahua puppy posed on a patterned fabric with no other animal figures present.,"[""SELECT['chihuahua puppy']"", ""SELECT['fabric']"", ""FILTER['#2', 'that is patterned']"", ""FILTER['#1', 'posed on #3']"", ""SELECT['animal figures']"", ""DISCARD['#5', '#4']"", ""PROJECT['images of #REF', '#6']"", ""GROUP['count', '#6', '#7']"", ""COMPARATIVE['#7', '#8', 'is equal to one']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to one']""]","[""SELECT['chihuahua puppy']"", ""SELECT['fabric']"", ""FILTER['#2', 'that is patterned']"", ""FILTER['#1', 'posed on #3']"", ""SELECT['animal figures']"", ""DISCARD['#5', '#4']"", ""PROJECT['images of #REF', '#6']"", ""GROUP['count', '#6', '#7']"", ""COMPARATIVE['#7', '#8', 'is equal to one']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is at least one']""]"
NLVR2_dev_dev-251-2-0,"If the left image features a white truck pushing a red plow forward, and the right image features a red truck pushing a red plow forward.","[""SELECT['left image']"", ""PROJECT['truck in #REF', '#1']"", ""FILTER['#2', 'that is white']"", ""PROJECT['plow in #REF', '#1']"", ""BOOLEAN['#3', 'is pushing #4 forward']"", ""SELECT['right image']"", ""PROJECT['truck in #REF', '#6']"", ""FILTER['#7', 'that is red']"", ""BOOLEAN['#8', 'is pushing #9 forward']"", ""BOOLEAN['logical_and', 'true', '#5', '#10']""]","[""SELECT['left image']"", ""PROJECT['truck in #REF', '#1']"", ""FILTER['#2', 'that is white']"", ""PROJECT['plow in #REF', '#1']"", ""FILTER['#4', 'that is red']"", ""BOOLEAN['#3', 'is pushing #5 forward']"", ""SELECT['right image']"", ""PROJECT['truck in #REF', '#7']"", ""FILTER['#8', 'that is red']"", ""PROJECT['plow in #REF', '#7']"", ""BOOLEAN['#9', 'is pushing #10."
NLVR2_dev_dev-252-1-0,If curtains are open in image and closed in the other image.,"[""SELECT['one image']"", ""PROJECT['curtains in #REF', '#1']"", ""BOOLEAN['#2', 'are open']"", ""BOOLEAN['#2', 'are closed']"", ""BOOLEAN['logical_and', 'true', '#3', '#4']""]","[""SELECT['the other image']"", ""PROJECT['curtains in #REF', '#1']"", ""BOOLEAN['#2', 'are open']"", ""BOOLEAN['#2', 'are closed']"", ""BOOLEAN['logical_and', 'true', '#3', '#4']""]"
NLVR2_dev_dev-253-1-0,If one of the pictures has only two chairs.,"[""SELECT['chairs']"", ""SELECT['pictures']"", ""GROUP['count', '#1', '#2']"", ""COMPARATIVE['#2', '#3', 'is equal to two']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']""]","[""SELECT['chairs']"", ""SELECT['pictures']"", ""GROUP['count', '#1', '#2']"", ""COMPARATIVE['#2', '#3', 'is equal to two']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is one']""]"
NLVR2_dev_dev-253-2-1,If there is one dining table that has exactly two chairs.,"[""SELECT['dining tables']"", ""SELECT['chairs']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is equal to two']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']""]","[""SELECT['dining tables']"", ""SELECT['chairs']"", ""GROUP['count', '#1', '#2']"", ""COMPARATIVE['#2', '#3', 'is equal to two']"", ""AGGREGATE['sum', '#4']"", ""BOOLEAN['#5', 'is equal to one']""]"
NLVR2_dev_dev-254-2-0,If the left and right image contains the same number of dogs in the grass.,"[""SELECT['dogs']"", ""SELECT['grass']"", ""FILTER['#1', 'in #2']"", ""SELECT['left image']"", ""SELECT['right image']"", ""FILTER['#3', 'in #4']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to #8']""]","[""SELECT['dogs']"", ""SELECT['grass']"", ""FILTER['#1', 'that are in #2']"", ""SELECT['left image']"", ""SELECT['right image']"", ""FILTER['#3', 'that are in #4']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to #8']""]"
NLVR2_dev_dev-255-1-0,"If each image contains the same number of dogs, and at least one dog is standing facing leftward.","[""SELECT['dogs']"", ""SELECT['images']"", ""GROUP['count', '#1', '#2']"", ""COMPARATIVE['#2', '#3', 'is equal']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to #6']"", ""FILTER['#1', 'that is standing']"", ""FILTER['#8', 'that is facing leftward']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#7', '#11']""]","[""SELECT['dogs']"", ""SELECT['images']"", ""GROUP['count', '#1', '#2']"", ""COMPARATIVE['#2', '#3', 'is the same']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to #6']"", ""FILTER['#1', 'that is standing']"", ""FILTER['#8', 'that is facing leftward']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#7', '#11']""]"
NLVR2_dev_dev-256-1-0,If one of the wooden sliding doors is open in the center.,"[""SELECT['sliding doors']"", ""FILTER['#1', 'that are wooden']"", ""FILTER['#2', 'that are open in the center']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]","[""SELECT['doors']"", ""FILTER['#1', 'that are sliding']"", ""FILTER['#2', 'that are wooden']"", ""PROJECT['the center of #REF', '#3']"", ""FILTER['#3', 'that are open']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']""]"
NLVR2_dev_dev-256-3-1,If there are three wooden hanging doors.,"[""SELECT['hanging doors']"", ""FILTER['#1', 'that are wooden']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to three']""]","[""SELECT['hanging doors']"", ""FILTER['#1', 'that are wooden']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to three']""]-"
NLVR2_dev_dev-257-0-0,If one of the images shows a model's hand wearing a fingertip-less knit glove with a mitten attachment.,"[""SELECT['model']"", ""PROJECT['hand of #REF', '#1']"", ""SELECT['glove']"", ""FILTER['#3', 'that is knit']"", ""FILTER['#4', 'that is fingertip-less']"", ""SELECT['mitten attachment']"", ""FILTER['#5', 'with #6']"", ""FILTER['#2', 'wearing #7']"", ""BOOLEAN['#8', 'is in one image']""]","[""SELECT['model']"", ""PROJECT['hand of #REF', '#1']"", ""SELECT['glove']"", ""FILTER['#3', 'that is knit']"", ""FILTER['#4', 'that is fingertip-less']"", ""SELECT['mitten attachment']"", ""FILTER['#5', 'with #6']"", ""BOOLEAN['#7', 'is wearing #8']""]"
NLVR2_dev_dev-257-0-1,If in one image features a hand with a striped glove on with the fingers uncovered,"[""SELECT['hand']"", ""SELECT['glove']"", ""FILTER['#2', 'that is striped']"", ""FILTER['#1', 'with #3 on']"", ""PROJECT['fingers of #REF', '#4']"", ""COMPARATIVE['#4', '#5', 'are uncovered']"", ""BOOLEAN['#6', 'is in one image']""]","[""SELECT['hand']"", ""SELECT['glove']"", ""FILTER['#2', 'that is striped']"", ""BOOLEAN['#1', 'is with #3 on']"", ""PROJECT['fingers of #REF', '#4']"", ""COMPARATIVE['#4', '#5', 'are uncovered']"", ""BOOLEAN['#6', 'is in one image']""]"
NLVR2_dev_dev-258-0-0,If there is one full grown dog and at least one puppy.,"[""SELECT['dogs']"", ""FILTER['#1', 'that are full grown']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']"", ""SELECT['puppy']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#4', '#7']""]","[""SELECT['dogs']"", ""FILTER['#1', 'that are full grown']"", ""AGGREGATE['count', '#2']"", ""SELECT['puppies']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']"", ""BOOLEAN['#6', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#3', '#7']""]"
NLVR2_dev_dev-258-0-1,If at least one dog has his tongue out.,"[""SELECT['dogs']"", ""PROJECT['tongue of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is out']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']""]","[""SELECT['dogs']"", ""PROJECT['tongues of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are out']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']""]"
NLVR2_dev_dev-259-0-0,If a thin crust pizza has one slice pulled out slightly way from the rest.,"[""SELECT['pizza']"", ""PROJECT['crust of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is thin']"", ""PROJECT['slices of #REF', '#3']"", ""FILTER['#4', 'that are pulled out slightly way from the rest']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']""]","[""SELECT['pizza']"", ""PROJECT['crust of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is thin']"", ""PROJECT['slices of #REF', '#3']"", ""FILTER['#4', 'that are pulled out slightly way from the rest']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least one']""]"
NLVR2_dev_dev-259-3-1,If a slice of pizza is slightly separated from its whole.,"[""SELECT['slice of pizza']"", ""FILTER['#1', 'that is slightly separated from its whole']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least one']""]","[""SELECT['pizza']"", ""PROJECT['slice of #REF', '#1']"", ""BOOLEAN['#2', 'is slightly separated from its whole']""]"
NLVR2_dev_dev-260-2-0,If the left and right image contains a total of two women in towels with at least one in pink.,"[""SELECT['women']"", ""SELECT['towels']"", ""FILTER['#1', 'in #2']"", ""FILTER['#3', 'in the left image']"", ""FILTER['#3', 'in the right image']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""ARITHMETIC['sum', '#6', '#7']"", ""BOOLEAN['#8', 'is equal to two']"", ""BOOLEAN['#9', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#10', '#11']""]","[""SELECT['women']"", ""SELECT['towels']"", ""FILTER['#1', 'in #2']"", ""FILTER['#3', 'in the left image']"", ""FILTER['#3', 'in the right image']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""ARITHMETIC['sum', '#6', '#7']"", ""BOOLEAN['#8', 'is equal to two']"", ""BOOLEAN['#9', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#7', '#10']""]"
NLVR2_dev_dev-261-3-0,"If the left image contains a curved-screen tv with a blue landscape-type picture displayed on it, and the right image contains one flat-screen tv viewed head-on.","[""SELECT['left image']"", ""PROJECT['tv in #REF', '#1']"", ""FILTER['#2', 'that is curved-screen']"", ""PROJECT['picture in #REF', '#1']"", ""FILTER['#4', 'that is blue']"", ""FILTER['#5', 'that is landscape-type']"", ""BOOLEAN['#3', 'is displayed on #6']"", ""SELECT['right image']"", ""PROJECT['tv in #REF', '#8']"", ""FILTER['#9', 'that is flat-screen']"", ""FILTER['#10', 'that is viewed head-on']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#7', '#13']""]","[""SELECT['left image']"", ""PROJECT['tv in #REF', '#1']"", ""FILTER['#2', 'that is curved-screen']"", ""PROJECT['picture in #REF', '#1']"", ""FILTER['#4', 'that is blue']"", ""FILTER['#5', 'that is landscape-type']"", ""BOOLEAN['#3', 'has #6 displayed on it']"", ""SELECT['right image']"", ""PROJECT['tv in #REF', '#8']"", ""FILTER['#9', 'that is flat-screen']"", ""FILTER['#10', 'that is viewed head-on']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#7', '#13']”]"
NLVR2_dev_dev-261-3-1,If the screen on the left tv is curved.,"[""SELECT['left tv']"", ""PROJECT['screen of #REF', '#1']"", ""BOOLEAN['#2', 'is curved']""]","[""SELECT['tv']"", ""FILTER['#1', 'that is left']"", ""PROJECT['screen of #REF', '#2']"", ""BOOLEAN['#3', 'is curved']""]"
NLVR2_dev_dev-262-0-0,If a group of different colored guinea pigs are sitting on the steps.,"[""SELECT['guinea pigs']"", ""PROJECT['color of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are different']"", ""SELECT['the steps']"", ""BOOLEAN['#3', 'are sitting on #4']""]","[""SELECT['guinea pigs']"", ""FILTER['#1', 'that are different colored']"", ""SELECT['the steps']"", ""FILTER['#2', 'that are sitting on #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']""]"
NLVR2_dev_dev-262-0-1,"If there are 2 or more all white, long-haired guinea pigs.","[""SELECT['guinea pigs']"", ""FILTER['#1', 'that are all white']"", ""FILTER['#2', 'that are long-haired']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least two']""]","[""SELECT['guinea pigs']"", ""FILTER['#1', 'that are long-haired']"", ""FILTER['#2', 'that are all white']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least 2']""]"
NLVR2_dev_dev-26-2-1,If there is a single ibex in the right image.,"[""SELECT['right image']"", ""PROJECT['ibex in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']""]","[""SELECT['the right image']"", ""PROJECT['ibex in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']""]"
NLVR2_dev_dev-263-1-0,"If each image includes a black pug pup, and one image shows a black pug with its head raised upward and to the right.","[""SELECT['pug pup']"", ""FILTER['#1', 'that is black']"", ""SELECT['images']"", ""GROUP['count', '#2', '#3']"", ""COMPARATIVE['#3', '#4', 'is at least one']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to #7']"", ""PROJECT['head of #REF', '#1']"", ""COMPARATIVE['#1', '#8', 'is raised upward']"", ""COMPARATIVE['#1', '#9', 'is to the right']"", ""INTERSECTION['#1', '#10', '#11']"", ""AGGREGATE['count', '#12']"", ""BOOLEAN['#13', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#7', '#14']""]","[""SELECT['pug pup']"", ""FILTER['#1', 'that is black']"", ""SELECT['images']"", ""GROUP['count', '#2', '#3']"", ""COMPARATIVE['#3', '#4', 'is at least one']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to #7']"", ""PROJECT['head of #REF', '#1']"", ""COMPARATIVE['#1', '#8', 'is raised upward']"", ""COMPARATIVE['#1', '#9', 'is to the right']"", ""INTERSECTION['#1', '#10', '#11']"", ""BOOLEAN['#12', 'is in one image']"", ""BOOLEAN['logical_and', 'true', '#7', '#13']""]"
NLVR2_dev_dev-263-2-1,If there's a black dog in every picture.,"[""SELECT['dog']"", ""FILTER['#1', 'that is black']"", ""SELECT['pictures']"", ""GROUP['count', '#2', '#3']"", ""COMPARATIVE['#3', '#4', 'is at least one']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to #7']""]","[""SELECT['dog']"", ""FILTER['#1', 'that is black']"", ""SELECT['pictures']"", ""GROUP['count', '#2', '#3']"", ""COMPARATIVE['#3', '#4', 'is at least one']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#7', 'is equal to #6']""]"
NLVR2_dev_dev-264-0-1,If the wolf in the image on the right is outside in the snow.,"[""SELECT['right image']"", ""PROJECT['wolf in #REF', '#1']"", ""PROJECT['snow in #REF', '#1']"", ""BOOLEAN['#2', 'is outside in #3']""]","[""SELECT['right image']"", ""PROJECT['wolf in #REF', '#1']"", ""PROJECT['snow in #REF', '#1']"", ""BOOLEAN['#2', 'is outside']"", ""BOOLEAN['#4', 'is in #3']"", ""BOOLEAN['logical_and', 'true', '#5', '#6']""]"
NLVR2_dev_dev-264-2-0,"If each image contains only one wolf, and all images include snowy backdrops.","[""SELECT['images']"", ""PROJECT['wolves in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is equal to one']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#5', 'is equal to #6']"", ""SELECT['backdrops']"", ""FILTER['#8', 'that are snowy']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to #11']"", ""BOOLEAN['logical_and', 'true', '#7', '#12']""]","[""SELECT['images']"", ""PROJECT['wolves in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is equal to one']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#5', 'is equal to #6']"", ""SELECT['backdrops']"", ""FILTER['#8', 'that are snowy']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to #11']"", ""BOOLEAN['logical_and', 'true', '#7', '#13']""]"
NLVR2_dev_dev-265-1-1,"If an image shows side-by-side birds in identical but inverted poses, and the two birds do not touch.","[""SELECT['birds']"", ""FILTER['#1', 'that are side-by-side']"", ""PROJECT['poses of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'are identical']"", ""COMPARATIVE['#2', '#3', 'are inverted']"", ""INTERSECTION['#2', '#4', '#5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']""]","[""SELECT['birds']"", ""FILTER['#1', 'that are side-by-side']"", ""PROJECT['poses of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'are identical']"", ""COMPARATIVE['#2', '#3', 'are inverted']"", ""INTERSECTION['#2', '#4', '#5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to two']""]"
NLVR2_dev_dev-265-3-0,If there is an odd number of birds in the two images put together.,"[""SELECT['images']"", ""PROJECT['birds in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is odd']""]","[""SELECT['birds']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to two']"")""]"
NLVR2_dev_dev-266-2-1,"If in one of the photos, there is a body of water.","[""SELECT['body of water']"", ""BOOLEAN['#1', 'is in one of the photos']""]","[""SELECT['bodies of water']"", ""BOOLEAN['#1', 'is in one of the photos']""]"
NLVR2_dev_dev-266-3-0,If there is more than 1 green hut outside.,"[""SELECT['huts']"", ""FILTER['#1', 'that are green']"", ""FILTER['#2', 'that are outside']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is higher than one']""]","[""SELECT['huts']"", ""FILTER['#1', 'that is green']"", ""FILTER['#2', 'that is outside']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is higher than one']""]"
NLVR2_dev_dev-267-0-0,"If there are two dogs here, and at least one of them is a pup.","[""SELECT['dogs']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to two']"", ""FILTER['#1', 'that is a pup']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#3', '#6']""]","[""SELECT['dogs']"", ""FILTER['#1', 'that is a pup']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']"", ""BOOLEAN['#4', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#5', '#6']""]"
NLVR2_dev_dev-267-3-1,If one dog is wearing a leash.,"[""SELECT['dogs']"", ""SELECT['leash']"", ""FILTER['#1', 'wearing #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]","[""SELECT['dogs']"", ""SELECT['leashes']"", ""FILTER['#1', 'wearing #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]"
NLVR2_dev_dev-268-0-0,If picture has a red glove in it.,"[""SELECT['glove']"", ""FILTER['#1', 'that is red']"", ""BOOLEAN['#2', 'is in picture']""]","[""SELECT['glove']"", ""FILTER['#1', 'that is red']"", ""BOOLEAN['#2', 'is in the picture']""]"
NLVR2_dev_dev-269-2-1,"If the knees of the models on the right and left are facing each other, and each model wears just one kneepad.","[""SELECT['models']"", ""FILTER['#1', 'that are on the right']"", ""FILTER['#1', 'that are on the left']"", ""PROJECT['knees of #REF', '#2']"", ""PROJECT['knees of #REF', '#3']"", ""BOOLEAN['#4', 'are facing each other']"", ""BOOLEAN['#5', 'are facing each other']"", ""BOOLEAN['logical_and', 'true', '#6', '#7']""]","[""SELECT['models']"", ""FILTER['#1', 'that are on the right']"", ""FILTER['#1', 'that are on the left']"", ""PROJECT['knees of #REF', '#2']"", ""PROJECT['knees of #REF', '#3']"", ""BOOLEAN['#4', 'are facing each other']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#7', '#8']""]"
NLVR2_dev_dev-269-3-0,If one of the knee braces has a hole in the front so the knee cap is showing.,"[""SELECT['knee braces']"", ""PROJECT['front of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'has a hole']"", ""PROJECT['knee cap of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is showing']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']""]","[""SELECT['knee braces']"", ""PROJECT['front of #REF', '#1']"", ""PROJECT['hole in #REF', '#2']"", ""FILTER['#1', 'that has #3']"", ""PROJECT['knee cap of #REF', '#4']"", ""BOOLEAN['#5', 'is showing']""]"
NLVR2_dev_dev-270-0-1,If one house has a covered porch.,"[""SELECT['houses']"", ""PROJECT['porch of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is covered']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]","[""SELECT['house']"", ""PROJECT['porch of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is covered']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]"
NLVR2_dev_dev-270-3-0,If there are at least 5 potted plants near a house in the image pair.,"[""SELECT['potted plants']"", ""SELECT['house']"", ""FILTER['#1', 'near #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least 5']""]","[""SELECT['potted plants']"", ""SELECT['a house']"", ""FILTER['#1', 'near #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least 5']""]"
NLVR2_dev_dev-271-1-1,"If each image contains one schnauzer, and all schnauzers are on fabric surfaces.","[""SELECT['schnauzers']"", ""SELECT['images']"", ""GROUP['count', '#1', '#2']"", ""COMPARATIVE['#2', '#3', 'is equal to one']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to #6']"", ""SELECT['fabric surfaces']"", ""FILTER['#1', 'that are on #8']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to #11']"", ""BOOLEAN['logical_and', 'true', '#7', '#12']""]","[""SELECT['schnauzers']"", ""SELECT['images']"", ""GROUP['count', '#1', '#2']"", ""COMPARATIVE['#2', '#3', 'is equal to one']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to #6']"", ""FILTER['#1', 'that are on fabric surfaces']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to #10']"", ""BOOLEAN['logical_and', 'true', '#7', '#11']""]"
NLVR2_dev_dev-27-2-0,If one of the images shows two white balls outside of the packaging.,"[""SELECT['balls']"", ""FILTER['#1', 'that are white']"", ""SELECT['packaging']"", ""FILTER['#2', 'that are outside of #3']"", ""SELECT['images']"", ""GROUP['count', '#4', '#5']"", ""COMPARATIVE['#5', '#6', 'is equal to two']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to one']""]","[""SELECT['balls']"", ""FILTER['#1', 'that are white']"", ""SELECT['packaging']"", ""FILTER['#2', 'that are outside of #3']"", ""PROJECT['images of #REF', '#4']"", ""GROUP['count', '#4', '#5']"", ""COMPARATIVE['#5', '#6', 'is equal to two']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal one']""]"
NLVR2_dev_dev-272-1-1,If there are at least 4 containers of makeup,"[""SELECT['containers of makeup']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is at least 4']""]","[""SELECT['concerts of makeup']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is at least 4']""]"
NLVR2_dev_dev-272-2-0,If there are a minimum of 4 beauty products.,"[""SELECT['beauty products']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is at least 4']""]","[""SELECT['beauty products']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is at most 4']""]"
NLVR2_dev_dev-273-3-0,If in the right image an anemone is on a grate,"[""SELECT['anemone']"", ""SELECT['grate']"", ""FILTER['#1', 'on #2']"", ""BOOLEAN['#3', 'is in the right image']""]","[""SELECT['right image']"", ""PROJECT['anemone in #REF', '#1']"", ""PROJECT['grate in #REF', '#1']"", ""BOOLEAN['#2', 'is on #3']""]"
NLVR2_dev_dev-274-2-1,"If both dogs have their mouths open, and at least one dog is in a sitting position.","[""SELECT['dogs']"", ""PROJECT['mouth of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is open']"", ""FILTER['#1', 'that is in a sitting position']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to two']"", ""BOOLEAN['#6', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#7', '#8']""]","[""SELECT['dogs']"", ""PROJECT['mouths of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are open']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']"", ""FILTER['#1', 'that is in a sitting position']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#5', '#8']""]"
NLVR2_dev_dev-274-3-0,If one dog is sitting on its butt and another dog is standing.,"[""SELECT['dogs']"", ""PROJECT['butt of #REF', '#1']"", ""FILTER['#1', 'that is sitting on #2']"", ""FILTER['#1', 'that is standing']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']"", ""BOOLEAN['#6', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#7', '#8']""]","[""SELECT['dog']"", ""PROJECT['butt of #REF', '#1']"", ""FILTER['#1', 'that is sitting on #2']"", ""FILTER['#1', 'that is standing']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']"", ""BOOLEAN['#6', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#7', '#8']""]"
NLVR2_dev_dev-275-0-0,If the drum skin in one image is white while the other is black.,"[""SELECT['one image']"", ""PROJECT['drum skin in #REF', '#1']"", ""BOOLEAN['#2', 'is white']"", ""SELECT['other image']"", ""PROJECT['drum skin in #REF', '#4']"", ""BOOLEAN['#5', 'is black']"", ""BOOLEAN['logical_and', 'true', '#3', '#6']""]","[""SELECT['one image']"", ""PROJECT['drum skin in #REF', '#1']"", ""BOOLEAN['#2', 'is white']"", ""SELECT['other image']"", ""PROJECT['drum skin in #REF', '#4']"", ""BOOLEAN['#5', 'is black']"", ""BOOLEAN['logical_and', 'true', '#3', '#6']""]-"
NLVR2_dev_dev-276-3-0,If the tail on the fish in the image on the left is finned.,"[""SELECT['left image']"", ""PROJECT['fish in #REF', '#1']"", ""PROJECT['tail of #REF', '#2']"", ""BOOLEAN['#3', 'is finned']""]","[""SELECT['the left image']"", ""PROJECT['fish in #REF', '#1']"", ""PROJECT['tail of #REF', '#2']"", ""BOOLEAN['#3', 'is finned']""]"
NLVR2_dev_dev-276-3-1,"If the stingray on the right is shown topside-up and with its head aimed sideways, and it has wings that are triangular instead of round.","[""SELECT['stingray']"", ""FILTER['#1', 'that is on the right']"", ""BOOLEAN['#2', 'is shown topside-up']"", ""PROJECT['head of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is aimed sideways']"", ""PROJECT['wings of #REF', '#5']"", ""BOOLEAN['#6', 'are triangular']"", ""BOOLEAN['logical_and', 'true', '#7', '#8']""]","[""SELECT['stingray']"", ""FILTER['#1', 'on the right']"", ""BOOLEAN['#2', 'is shown topside-up']"", ""PROJECT['head of #REF', '#3']"", ""BOOLEAN['#4', 'is aimed sideways']"", ""PROJECT['wings of #REF', '#5']"", ""BOOLEAN['#6', 'are triangular']"", ""BOOLEAN['logical_and', 'true', '#7', '#8']""]"
NLVR2_dev_dev-277-3-0,If a sofa has a row of books under in on a tiled floor,"[""SELECT['sofa']"", ""SELECT['books']"", ""FILTER['#2', 'in a row']"", ""FILTER['#1', 'that has #3 under']"", ""SELECT['floor']"", ""FILTER['#5', 'that is tiled']"", ""BOOLEAN['#4', 'is on #6']""]","[""SELECT['sofa']"", ""SELECT['books']"", ""FILTER['#2', 'that are in a row']"", ""FILTER['#1', 'that has #3 under']"", ""SELECT['floor']"", ""FILTER['#5', 'that is tiled']"", ""BOOLEAN['#4', 'is on #6']."
NLVR2_dev_dev-278-2-1,"If all of the balls have writing and graphics on them, but are all the same base color.","[""SELECT['balls']"", ""FILTER['#1', 'that have writing on them']"", ""FILTER['#1', 'that have graphics on them']"", ""UNION['#2', '#3']"", ""PROJECT['base colors of #REF', '#4']"", ""BOOLEAN['#5', 'are the same']""]","[""SELECT['balls']"", ""FILTER['#1', 'that have writing on them']"", ""FILTER['#1', 'that have graphics on them']"", ""INTERSECTION['#1', '#2', '#3']"", ""PROJECT['base colors of #REF', '#4']"", ""BOOLEAN['#5', 'are the same']""]"
NLVR2_dev_dev-278-3-0,If at least 1 of the golf balls is a neon green color.,"[""SELECT['golf balls']"", ""PROJECT['color of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is neon green']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']""]","[""SELECT['golf balls']"", ""PROJECT['colors of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are neon green']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']""]"
NLVR2_dev_dev-279-0-0,"If atleast one image shows vending machines at an angle, tucked into a recessed area with walls on either side of them.","[""SELECT['vending machines']"", ""FILTER['#1', 'that are at an angle']"", ""SELECT['area']"", ""FILTER['#3', 'that is recessed']"", ""SELECT['walls']"", ""PROJECT['sides of #REF', '#5']"", ""COMPARATIVE['#5', '#6', 'are on #4']"", ""FILTER['#2', 'tucked into #7']"", ""BOOLEAN['#8', 'are in at least one image']""]","[""SELECT['vending machines']"", ""FILTER['#1', 'that are at an angle']"", ""SELECT['area']"", ""FILTER['#3', 'that is recessed']"", ""SELECT['walls']"", ""PROJECT['side of #REF', '#5']"", ""COMPARATIVE['#5', '#6', 'are on #4']"", ""FILTER['#2', 'tucked into #7']"", ""BOOLEAN['#8', 'is in at least one image']""]"
NLVR2_dev_dev-279-0-1,If a soda and water bottle vending machine are next to each other in at least one of the images.,"[""SELECT['vending machine']"", ""SELECT['soda']"", ""SELECT['water bottle']"", ""FILTER['#1', 'that is next to #2']"", ""FILTER['#1', 'that is next to #3']"", ""INTERSECTION['#1', '#4', '#5']"", ""BOOLEAN['#6', 'is in at least one of the images']""]","[""SELECT['vending machine']"", ""SELECT['soda']"", ""SELECT['water bottle']"", ""FILTER['#1', 'that is next to #2']"", ""FILTER['#1', 'that is next to #3']"", ""INTERSECTION['#1', '#4', '#5']"", ""BOOLEAN['#6', 'is in at least one image']""]"
NLVR2_dev_dev-280-0-0,"If all dogs are black and tan dobermans, but one dog has pointed upright ears while the other has floppy rounded ears.","[""SELECT['dogs']"", ""FILTER['#1', 'that are black and tan dobermans']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to #4']"", ""PROJECT['ears of #REF', '#5']"", ""COMPARATIVE['#5', '#6', 'are upright']"", ""COMPARATIVE['#5', '#7', 'are floppy']"", ""COMPARATIVE['#5', '#8', 'are rounded']"", ""INTERSECTION['#5', '#9', '#10']"", ""AGGREGATE['count', '#11']"", ""AGGREGATE['count', '#12']"", ""BOOLEAN['#13', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#4', '#14']""]","[""SELECT['dogs']"", ""FILTER['#1', 'that are black and tan dobermans']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to #4']"", ""PROJECT['ears of #REF', '#5']"", ""COMPARATIVE['#5', '#6', 'are upright']"", ""COMPARATIVE['#5', '#7', 'are floppy']"", ""COMPARATIVE['#5', '#8', 'are rounded']"", ""INTERSECTION['#5', '#9', '#10']"", ""AGGREGATE['count', '#11']"", ""AGGREGATE['count', '#12']"", ""BOOLEAN['#13', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#4', '#14']”]"
NLVR2_dev_dev-280-0-1,If there is exactly one doberman with its ears cut.,"[""SELECT['doberman']"", ""PROJECT['ears of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are cut']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]","[""SELECT['dobermen']"", ""PROJECT['ears of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are cut']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]"
NLVR2_dev_dev-281-2-0,If there are at least 3 red brick chimneys.,"[""SELECT['chimneys']"", ""FILTER['#1', 'that are red brick']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least 3']""]","[""SELECT['chimneys']"", ""FILTER['#1', 'that are red brick']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least 3']""]"
NLVR2_dev_dev-281-2-1,If all the chimneys appear to be made of unpainted red brick.,"[""SELECT['chimneys']"", ""SELECT['brick']"", ""FILTER['#2', 'that is red']"", ""FILTER['#3', 'that is unpainted']"", ""FILTER['#1','made of #4']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to #7']""]","[""SELECT['chimneys']"", ""SELECT['brick']"", ""FILTER['#2', 'that is red']"", ""FILTER['#3', 'that is unpainted']"", ""FILTER['#1', 'that appear to be made of #4']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to #7']""."
NLVR2_dev_dev-28-2-1,If one image is from outside a town and the other image is from inside a town.,"[""SELECT['one image']"", ""PROJECT['town in #REF', '#1']"", ""BOOLEAN['#2', 'is outside of #3']"", ""SELECT['other image']"", ""PROJECT['town in #REF', '#4']"", ""BOOLEAN['#5', 'is inside #3']"", ""BOOLEAN['logical_and', 'true', '#4', '#6']""]","[""SELECT['one image']"", ""PROJECT['town in #REF', '#1']"", ""BOOLEAN['#2', 'is outside #3']"", ""SELECT['the other image']"", ""PROJECT['town in #REF', '#4']"", ""BOOLEAN['#5', 'is inside #6']"", ""BOOLEAN['logical_and', 'true', '#4', '#7']""]"
NLVR2_dev_dev-282-1-0,If the left image contains a soap dispenser with three different soap holders.,"[""SELECT['left image']"", ""PROJECT['soap dispenser in #REF', '#1']"", ""PROJECT['different soap holders in #REF', '#1']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to three']""]","[""SELECT['left image']"", ""PROJECT['soap dispenser in #REF', '#1']"", ""PROJECT['different soap holders in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to three']""]"
NLVR2_dev_dev-283-1-1,If three wolves stand together howling in the image on the left.,"[""SELECT['left image']"", ""PROJECT['wolves in #REF', '#1']"", ""FILTER['#2', 'that stand together']"", ""FILTER['#3', 'that are howling']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to three']""]","[""SELECT['the left image']"", ""PROJECT['wolves in #REF', '#1']"", ""FILTER['#2', 'that stand together howling']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to three']""]"
NLVR2_dev_dev-283-2-0,"If the left image shows a trio of wolves, with at least two of them howling with raised heads.","[""SELECT['the left image']"", ""PROJECT['wolves in #REF', '#1']"", ""FILTER['#2', 'that are howling']"", ""PROJECT['heads of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'are raised']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to three']"", ""BOOLEAN['#7', 'is at least two']"", ""BOOLEAN['logical_and', 'true', '#8', '#9']""]","[""SELECT['left image']"", ""PROJECT['wolves in #REF', '#1']"", ""FILTER['#2', 'that are howling']"", ""PROJECT['heads of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'are raised']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least two']"", ""BOOLEAN['#7', 'is at least two']"", ""BOOLEAN['logical_and', 'true', '#8', '#9']""]"
NLVR2_dev_dev-284-0-1,If more then two people are in the left side image,"[""SELECT['the left side image']"", ""PROJECT['people in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is higher than two']""]","[""SELECT['left side image']"", ""PROJECT['people in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is higher than two']""]"
NLVR2_dev_dev-284-3-0,If there is at least one blonde girl.,"[""SELECT['girls']"", ""FILTER['#1', 'that are blonde']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least one']""]","[""SELECT['girls']"", ""FILTER['#1', 'who are blonde']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least one']""]"
NLVR2_dev_dev-285-2-0,If all people in the image are looking at their phones.,"[""SELECT['people']"", ""SELECT['phones']"", ""FILTER['#1', 'looking at #2']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to #5']""]","[""SELECT['people']"", ""SELECT['phones']"", ""FILTER['#1', 'looking at #2']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#5', 'is equal to #4']""]"
NLVR2_dev_dev-286-1-0,If there are at least five animals in total.,"[""SELECT['animals']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is at least five']""]","[""SELECT['animals']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is higher than five']""]"
NLVR2_dev_dev-286-1-1,If the right image shows just one wild pig lying on the ground with its head to the left.,"[""SELECT['right image']"", ""PROJECT['wild pig in #REF', '#1']"", ""PROJECT['ground in #REF', '#1']"", ""FILTER['#2', 'lying on #3']"", ""PROJECT['head of #REF', '#4']"", ""COMPARATIVE['#4', '#5', 'is to the left']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']""]","[""SELECT['right image']"", ""PROJECT['wild pig in #REF', '#1']"", ""PROJECT['ground in #REF', '#1']"", ""FILTER['#2', 'lying on #3']"", ""PROJECT['head of #REF', '#4']"", ""BOOLEAN['#5', 'is to the left']""]"
NLVR2_dev_dev-287-2-1,"If the left image features a left-facing wolf pup, and the right image includes one adult wolf facing right.","[""SELECT['left image']"", ""PROJECT['wolf pup in #REF', '#1']"", ""FILTER['#2', 'that is left-facing']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']"", ""SELECT['right image']"", ""PROJECT['wolf in #REF', '#6']"", ""FILTER['#7', 'that is adult']"", ""FILTER['#8', 'that is facing right']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#5', '#11']""]","[""SELECT['the left image']"", ""PROJECT['wolf pup in #REF', '#1']"", ""FILTER['#2', 'that is left-facing']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']"", ""SELECT['the right image']"", ""PROJECT['wolves in #REF', '#6']"", ""FILTER['#7', 'that are adult']"", ""FILTER['#8', 'that are facing right']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#5', '#11']""."
NLVR2_dev_dev-288-0-0,If the left and right image contains the same number of redbone coonhounds.,"[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['redbone coonhounds in #REF', '#1']"", ""PROJECT['redbone coonhounds in #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to #6']""]","[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['redbone coonhounds in #REF', '#1']"", ""PROJECT['redbone coonhounds in #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to #6']"")""]"
NLVR2_dev_dev-288-1-1,If the right image contains one dog sitting on grass.,"[""SELECT['right image']"", ""PROJECT['dog in #REF', '#1']"", ""PROJECT['grass in #REF', '#1']"", ""FILTER['#2','sitting on #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']""]","[""SELECT['right image']"", ""PROJECT['dog in #REF', '#1']"", ""PROJECT['grass in #REF', '#1']"", ""FILTER['#2', 'that is sitting on #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']""]"
NLVR2_dev_dev-289-1-0,If the left image shows a staircase that ascends to the left and features a wooden handrail with black wrought iron bars accented by scroll shapes.,"[""SELECT['staircase']"", ""FILTER['#1', 'that ascends to the left']"", ""SELECT['handrail']"", ""FILTER['#3', 'that is wooden']"", ""SELECT['bars']"", ""FILTER['#5', 'that are wrought iron']"", ""FILTER['#6', 'that are black']"", ""SELECT['shapes']"", ""FILTER['#7', 'accentuated by #8']"", ""FILTER['#4', 'that features #9']"", ""BOOLEAN['#10', 'is in the left image']""]","[""SELECT['staircase']"", ""FILTER['#1', 'that ascends to the left']"", ""PROJECT['handrail in #REF', '#2']"", ""FILTER['#3', 'that is wooden']"", ""SELECT['bars']"", ""FILTER['#5', 'that are black']"", ""FILTER['#6', 'that are wrought iron']"", ""FILTER['#7', 'that are accented by scroll shapes']"", ""FILTER['#4', 'with #8']"", ""BOOLEAN['#9', 'features in the left image']""]"
NLVR2_dev_dev-289-2-1,If both railings have a vertical post design.,"[""SELECT['railings']"", ""PROJECT['design of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is vertical post']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']""]","[""SELECT['railings']"", ""PROJECT['design of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is vertical post']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least two']""]"
NLVR2_dev_dev-29-0-0,"If an image features a baby seal looking over its shoulder toward the front, with its tail-end to the camera.","[""SELECT['seal']"", ""FILTER['#1', 'that is baby']"", ""PROJECT['shoulder of #REF', '#2']"", ""FILTER['#2', 'that is looking over #3']"", ""FILTER['#4', 'that is toward the front']"", ""PROJECT['tail-end of #REF', '#5']"", ""COMPARATIVE['#5', '#6', 'is to the camera']"", ""BOOLEAN['#7', 'is in an image']""]","[""SELECT['seal']"", ""FILTER['#1', 'that is baby']"", ""PROJECT['shoulder of #REF', '#2']"", ""FILTER['#2', 'looking over #3']"", ""FILTER['#4', 'toward the front']"", ""PROJECT['tail-end of #REF', '#5']"", ""COMPARATIVE['#5', '#6', 'is to the camera']"", ""BOOLEAN['#7', 'is in an image']""]"
NLVR2_dev_dev-290-0-1,If the llamas in both images are eating.,"[""SELECT['llamas']"", ""FILTER['#1', 'that are eating']"", ""PROJECT['images of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']""]","[""SELECT['llamas']"", ""FILTER['#1', 'that are eating']"", ""PROJECT['images of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least two']""]"
NLVR2_dev_dev-290-3-0,If there are four llamas.,"[""SELECT['llamas']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to four']""]","[""SELECT['llamas']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'equal to four']""]"
NLVR2_dev_dev-291-3-0,If the image on the right contains a train that is red and white on at least one cart.,"[""SELECT['right image']"", ""PROJECT['train in #REF', '#1']"", ""FILTER['#2', 'that is red and white']"", ""PROJECT['cart in #REF', '#1']"", ""FILTER['#3', 'on #4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least one']""]","[""SELECT['train']"", ""FILTER['#1', 'that is red and white']"", ""SELECT['cart']"", ""FILTER['#2', 'on #3']"", ""BOOLEAN['#4', 'is in the right image']""]"
NLVR2_dev_dev-291-3-1,"If each image shows a train headed leftward, and one train is green while the other features red on its front.","[""SELECT['train']"", ""FILTER['#1', 'that is headed leftward']"", ""SELECT['images']"", ""GROUP['count', '#2', '#3']"", ""COMPARATIVE['#3', '#4', 'is equal to one']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to #7']"", ""PROJECT['front of #REF', '#1']"", ""COMPARATIVE['#1', '#9', 'is red']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is equal to #12']"", ""BOOLEAN['logical_and', 'true', '#8', '#13']""]","[""SELECT['train']"", ""FILTER['#1', 'that is headed leftward']"", ""SELECT['images']"", ""GROUP['count', '#2', '#3']"", ""COMPARATIVE['#3', '#4', 'is at least one']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to #7']"", ""PROJECT['front of #REF', '#1']"", ""COMPARATIVE['#1', '#9', 'is red']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is equal to #12']"", ""BOOLEAN['logical_and', 'true', '#8', '#13']""]"
NLVR2_dev_dev-29-2-1,If a seal is laying on the sandy beach with an open mouth,"[""SELECT['seal']"", ""SELECT['beach']"", ""FILTER['#2', 'that is sandy']"", ""FILTER['#1', 'laying on #3']"", ""PROJECT['mouth of #REF', '#4']"", ""BOOLEAN['#5', 'is open']""]","[""SELECT['seal']"", ""PROJECT['mouth of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is open']"", ""SELECT['beach']"", ""FILTER['#4', 'that is sandy']"", ""BOOLEAN['#3', 'is laying on #5']""]"
NLVR2_dev_dev-292-2-0,"If one image shows a single standing cheetah eyeing the camera, and the other image shows multiple, interacting cheetahs.","[""SELECT['one image']"", ""PROJECT['cheetahs in #REF', '#1']"", ""FILTER['#2', 'that are standing']"", ""FILTER['#3', 'that are eyeing the camera']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']"", ""SELECT['other image']"", ""PROJECT['cheetahs in #REF', '#7']"", ""FILTER['#8', 'that are interacting']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is at least two']"", ""BOOLEAN['logical_and', 'true', '#6', '#11']""]","[""SELECT['one image']"", ""PROJECT['cheetah in #REF', '#1']"", ""FILTER['#2', 'that is standing']"", ""FILTER['#3', 'that is eyeing the camera']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']"", ""SELECT['the other image']"", ""PROJECT['cheetahs in #REF', '#7']"", ""FILTER['#8', 'that are interacting']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is at least two']"", ""BOOLEAN['logical_and', 'true', '#6', '#11']""]"
NLVR2_dev_dev-292-3-1,If there are exactly four cheetahs.,"[""SELECT['cheetahs']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to four']""]","[""SELECT['chestahs']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to four']""]"
NLVR2_dev_dev-293-0-0,If there are exactly three pugs.,"[""SELECT['pugs']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to three']""]","[""SELECT['puppies']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to three']""]"
NLVR2_dev_dev-294-3-0,If does not contain a picture with an outside view of a book store.,"[""SELECT['pictures']"", ""SELECT['book store']"", ""FILTER['#1', 'with an outside view of #2']"", ""DISCARD['#1', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to zero']""]","[""SELECT['pictures']"", ""SELECT['book store']"", ""FILTER['#1', 'with an outside view of #2']"", ""BOOLEAN['#3', 'is false']""]"
NLVR2_dev_dev-294-3-1,If red-orange signs mark display tables piled with books and set on the wood floor near tall rows of bookshelves in one image.,"[""SELECT['signs']"", ""FILTER['#1', 'that are red-orange']"", ""SELECT['display tables']"", ""SELECT['books']"", ""FILTER['#3', 'piled with #4']"", ""SELECT['floor']"", ""FILTER['#5', 'that is wood']"", ""SELECT['rows of bookshelves']"", ""FILTER['#7', 'that are tall']"", ""FILTER['#6', 'near #8']"", ""FILTER['#2','mark #9']"", ""BOOLEAN['#10', 'is in one image']""]","[""SELECT['signs']"", ""FILTER['#1', 'that are red-orange']"", ""SELECT['display tables']"", ""SELECT['books']"", ""FILTER['#3', 'piled with #4']"", ""SELECT['the wood floor']"", ""FILTER['#5','set on #6']"", ""SELECT['rows of bookshelves']"", ""FILTER['#7', 'that are tall']"", ""FILTER['#8', 'near #6']"", ""BOOLEAN['#9', 'are in one image']""]"
NLVR2_dev_dev-296-1-0,If there is a green wall visible in the background.,"[""SELECT['wall']"", ""FILTER['#1', 'that is green']"", ""SELECT['the background']"", ""BOOLEAN['#2', 'is visible in #3']""]","[""SELECT['wall']"", ""FILTER['#1', 'that is green']"", ""SELECT['background']"", ""BOOLEAN['#2', 'is visible in #3']""]"
NLVR2_dev_dev-297-2-0,If the right image contains a person holding a chihuahua.,"[""SELECT['person']"", ""SELECT['chihuahua']"", ""FILTER['#1', 'holding #2']"", ""BOOLEAN['#3', 'is in the right image']""]","[""SELECT['person']"", ""SELECT['chihuahua']"", ""FILTER['#1', 'holding #2']"", ""BOOLEAN['#3', 'is in right image']""]"
NLVR2_dev_dev-297-2-1,If a woman is holding at least one small dog in each of the images.,"[""SELECT['woman']"", ""SELECT['dog']"", ""FILTER['#2', 'that is small']"", ""FILTER['#1', 'holding #3']"", ""SELECT['images']"", ""GROUP['count', '#4', '#5']"", ""COMPARATIVE['#5', '#6', 'is at least one']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to #9']""]","[""SELECT['woman']"", ""SELECT['dog']"", ""FILTER['#2', 'that is small']"", ""FILTER['#3', 'that #1 is holding']"", ""SELECT['images']"", ""GROUP['count', '#4', '#5']"", ""COMPARATIVE['#5', '#6', 'is at least one']"", ""AGGREGATE['count', '#7']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to #10']""]"
NLVR2_dev_dev-298-3-0,If there is an awning over the machines in one of the images.,"[""SELECT['awning']"", ""SELECT['machines']"", ""FILTER['#1', 'that is over #2']"", ""BOOLEAN['#3', 'is in one image']""]","[""SELECT['awning']"", ""SELECT['machines']"", ""FILTER['#1', 'over #2']"", ""BOOLEAN['#3', 'is in one image']""]"
NLVR2_dev_dev-298-3-1,If the right image shows an outdoor vending kiosk with glass-front displays flanking a central gray solid column.,"[""SELECT['vending kiosk']"", ""FILTER['#1', 'that is outdoor']"", ""PROJECT['displays of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'are glass-front']"", ""SELECT['column']"", ""FILTER['#5', 'that is solid']"", ""FILTER['#6', 'that is gray']"", ""FILTER['#4', 'flanking #7']"", ""BOOLEAN['#8', 'is in the right image']""]","[""SELECT['vending kiosk']"", ""FILTER['#1', 'that is outdoor']"", ""PROJECT['displays of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'are glass-front']"", ""SELECT['column']"", ""FILTER['#5', 'that is solid']"", ""FILTER['#6', 'that is gray']"", ""FILTER['#4', 'flanking #7']"", ""BOOLEAN['#8', 'is in right image']""]"
NLVR2_dev_dev-299-3-0,If at least one bottle is clear with a blue plastic top,"[""SELECT['bottles']"", ""FILTER['#1', 'that are clear']"", ""PROJECT['top of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is blue']"", ""COMPARATIVE['#2', '#3', 'is plastic']"", ""INTERSECTION['#2', '#4', '#5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least one']""]","[""SELECT['bottle']"", ""FILTER['#1', 'that is clear']"", ""PROJECT['top of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is blue']"", ""COMPARATIVE['#2', '#3', 'is plastic']"", ""INTERSECTION['#2', '#4', '#5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least one']""]"
NLVR2_dev_dev-299-3-1,If two of the bottles have carrying handles.,"[""SELECT['bottles']"", ""SELECT['carrying handles']"", ""FILTER['#1', 'that have #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']""]","[""SELECT['bottles']"", ""SELECT['carrying handles']"", ""FILTER['#1', 'that have #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']""]."
NLVR2_dev_dev-300-1-1,If there is an open three ring binder showing the silver rings inside.,"[""SELECT['binder']"", ""FILTER['#1', 'that is open']"", ""PROJECT['rings of #REF', '#2']"", ""FILTER['#3', 'that are silver']"", ""BOOLEAN['#4', 'are showing inside of #2']""]","[""SELECT['binder']"", ""FILTER['#1', 'that is open']"", ""PROJECT['rings of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'are silver']"", ""BOOLEAN['#4', 'is showing inside of #3']""]"
NLVR2_dev_dev-300-2-0,If there is more than one binder in each image.,"[""SELECT['images']"", ""PROJECT['binders in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is higher than one']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#6', 'is equal to #5']""]","[""SELECT['images']"", ""PROJECT['binders in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is higher than one']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#5', 'is equal to #6']""]"
NLVR2_dev_dev-3-0-1,"If in one image, hyenas fight with a big cat.","[""SELECT['hyenas']"", ""SELECT['cat']"", ""FILTER['#2', 'that is big']"", ""FILTER['#1', 'that fight with #3']"", ""BOOLEAN['#4', 'is in one image']""]","[""SELECT['hyenas']"", ""SELECT['big cat']"", ""FILTER['#1', 'that fight with #2']"", ""BOOLEAN['#3', 'is in one image']""]"
NLVR2_dev_dev-301-3-0,If all of the railings are vertical.,"[""SELECT['railings']"", ""FILTER['#1', 'that are vertical']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to #4']""]","[""SELECT['railings']"", ""FILTER['#1', 'that are vertical']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to #3']""]"
NLVR2_dev_dev-301-3-1,"If one image shows a staircase with knotty wood rails that are not completely smooth, next to a knotty wood paneled wall.","[""SELECT['staircase']"", ""PROJECT['rails of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are knotty']"", ""FILTER['#3', 'that are wood']"", ""FILTER['#4', 'that are not completely smooth']"", ""SELECT['wall']"", ""FILTER['#6', 'that is knotty']"", ""FILTER['#7', 'that is paneled']"", ""FILTER['#5', 'next to #8']"", ""BOOLEAN['#9', 'is in one image']""]","[""SELECT['staircase']"", ""PROJECT['rails of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are knotty']"", ""COMPARATIVE['#1', '#2', 'are not completely smooth']"", ""INTERSECTION['#1', '#3', '#4']"", ""SELECT['wall']"", ""FILTER['#7', 'that is knotty']"", ""FILTER['#8', 'that is wood paneled']"", ""FILTER['#5', 'next to #9']"", ""BOOLEAN['#10', 'is in one image']""]"
NLVR2_dev_dev-30-2-0,If at least one dog with long fur has a collar.,"[""SELECT['dogs']"", ""PROJECT['fur of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is long']"", ""SELECT['collar']"", ""FILTER['#3', 'that has #4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least one']""]","[""SELECT['dog']"", ""PROJECT['fur of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is long']"", ""SELECT['collar']"", ""FILTER['#3', 'that has #4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least one']""]"
NLVR2_dev_dev-302-1-1,If the only animals that can be seen in both images are zebras.,"[""SELECT['images']"", ""PROJECT['animals in #REF', '#1']"", ""PROJECT['zebras in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is equal to zero']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to two']""]","[""SELECT['animals']"", ""SELECT['zebras']"", ""PROJECT['images of #REF', '#1']"", ""PROJECT['images of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to #6']""]"
NLVR2_dev_dev-302-2-0,If only two zebras have their heads up.,"[""SELECT['zebras']"", ""PROJECT['heads of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are up']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']""]","[""SELECT['zebras']"", ""FILTER['#1', 'that have their heads up']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']""]"
NLVR2_dev_dev-30-3-1,"If each image shows a single afghan hound, and one image shows a hound with its blond hair sticking somewhat upward on its head.","[""SELECT['images']"", ""PROJECT['afghan hounds in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is equal to one']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to #7']"", ""SELECT['hound']"", ""PROJECT['hair of #REF', '#9']"", ""COMPARATIVE['#9', '#10', 'is blond']"", ""PROJECT['head of #REF', '#11']"", ""COMPARATIVE['#11', '#12', 'is sticking somewhat upward on #13']"", ""AGGREGATE['count', '#14']"", ""BOOLEAN['#15', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#7', '#16']""]","[""SELECT['images']"", ""PROJECT['afghan hounds in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is equal to one']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#5', 'is equal to #6']"", ""SELECT['hound']"", ""PROJECT['hair of #REF', '#8']"", ""COMPARATIVE['#8', '#9', 'is blond']"", ""PROJECT['head of #REF', '#10']"", ""COMPARATIVE['#10', '#11', 'is sticking somewhat upward on #12']"", ""INTERSECTION['#10', '#13', '#14']"", ""BOOLEAN['#15', 'is in one image']""]"
NLVR2_dev_dev-303-1-1,If the left image contains exactly one dog standing on grass.,"[""SELECT['left image']"", ""PROJECT['dog in #REF', '#1']"", ""PROJECT['grass in #REF', '#1']"", ""FILTER['#2', 'that is standing on #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']""]","[""SELECT['left image']"", ""PROJECT['dog in #REF', '#1']"", ""PROJECT['grass in #REF', '#1']"", ""FILTER['#2', 'that is standing on #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']"")""]"
NLVR2_dev_dev-303-2-0,If at least one dog is looking directly at the camera,"[""SELECT['dogs']"", ""SELECT['camera']"", ""FILTER['#1', 'looking directly at #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']""]","[""SELECT['dogs']"", ""FILTER['#1', 'looking directly at the camera']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least one']""]"
NLVR2_dev_dev-304-2-0,If no furniture is visible in front of the book shelf in at least one of the pictures.,"[""SELECT['furniture']"", ""SELECT['book shelf']"", ""FILTER['#1', 'in front of #2']"", ""PROJECT['pictures of #REF', '#3']"", ""GROUP['count', '#3', '#4']"", ""COMPARATIVE['#4', '#5', 'is equal to zero']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least one']""]","[""SELECT['furniture']"", ""SELECT['book shelf']"", ""FILTER['#1', 'in front of #2']"", ""SELECT['pictures']"", ""GROUP['count', '#3', '#4']"", ""COMPARATIVE['#4', '#5', 'is equal to zero']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least one']""]"
NLVR2_dev_dev-304-2-1,If one image shows a ladder standing at one end of a white bookcase.,"[""SELECT['ladder']"", ""SELECT['bookcase']"", ""FILTER['#2', 'that is white']"", ""PROJECT['end of #REF', '#3']"", ""FILTER['#1','standing at #4']"", ""BOOLEAN['#5', 'is in one image']""]","[""SELECT['ladder']"", ""SELECT['bookcase']"", ""FILTER['#2', 'that is white']"", ""PROJECT['one end of #REF', '#3']"", ""FILTER['#1','standing at #4']"", ""BOOLEAN['#5', 'is in one image']""]"
NLVR2_dev_dev-305-1-0,"If each image contains only one ferret, which stands on all fours with its body turned rightward, and the left image features a ferret turning its head to gaze leftward.","[""SELECT['images']"", ""PROJECT['ferrets in #REF', '#1']"", ""FILTER['#2', 'that stand on all fours']"", ""PROJECT['body of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is turned rightward']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#6', 'is equal to one']"", ""SELECT['the left image']"", ""PROJECT['ferret in #REF', '#8']"", ""PROJECT['head of #REF', '#9']"", ""COMPARATIVE['#9', '#10', 'is turning to gaze leftward']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#7', '#13']""]","[""SELECT['images']"", ""PROJECT['ferrets in #REF', '#1']"", ""FILTER['#2', 'that stand on all fours']"", ""PROJECT['body of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is turned rightward']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']"", ""SELECT['the left image']"", ""PROJECT['ferret in #REF', '#8']"", ""PROJECT['head of #REF', '#9']"", ""COMPARATIVE['#9', '#10', 'is turning to gaze leftward']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#7', '#13']""]"
NLVR2_dev_dev-305-2-1,If the left and right image contains the same number of prairie dog with their tale on the left side.,"[""SELECT['the left image']"", ""PROJECT['prairie dogs in #REF', '#1']"", ""PROJECT['tales of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is on the left side']"", ""AGGREGATE['count', '#4']"", ""SELECT['the right image']"", ""PROJECT['prairie dogs in #REF', '#6']"", ""PROJECT['tales of #REF', '#7']"", ""COMPARATIVE['#7', '#8', 'is on the left side']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#5', 'is equal to #10']""]","[""SELECT['the left image']"", ""PROJECT['prairie dogs in #REF', '#1']"", ""PROJECT['tales of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'are on the left side']"", ""AGGREGATE['count', '#4']"", ""SELECT['the right image']"", ""PROJECT['prairie dogs in #REF', '#6']"", ""PROJECT['tales of #REF', '#7']"", ""COMPARATIVE['#7', '#8', 'are on the left side']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#5', 'is equal to #10']""]"
NLVR2_dev_dev-306-1-0,"If all graduation gowns include some reddish color, and at least one image includes at least three female grads in red caps and red gowns.","[""SELECT['graduation gowns']"", ""PROJECT['color of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is reddish']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#5', 'is equal to #4']"", ""SELECT['grads']"", ""FILTER['#7', 'that are female']"", ""SELECT['caps']"", ""FILTER['#8', 'that are red']"", ""SELECT['gowns']"", ""FILTER['#9', 'that are red']"", ""FILTER['#10', 'that are in #11']"", ""GROUP['count', '#11', '#12']"", ""COMPARATIVE['#12', '#13', 'is at least three']"", ""AGGREGATE['count', '#14']"", ""BOOLEAN['#15', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#6', '#16']""]","[""SELECT['graduation gowns']"", ""PROJECT['color of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is reddish']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#5', 'is equal to #4']"", ""SELECT['grads']"", ""FILTER['#7', 'that are female']"", ""SELECT['caps']"", ""FILTER['#8', 'that are red']"", ""SELECT['gowns']"", ""FILTER['#9', 'that are red']"", ""FILTER['#10', 'that are in #11']"", ""GROUP['count', '#11', '#12']"", ""COMPARATIVE['#12', '#13', 'is at least three']"", ""AGGREGATE['count', '#14']"", ""BOOLEAN['#15', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#7', '#16']""]"
NLVR2_dev_dev-306-3-1,If some of the people are wearing red graduation caps.,"[""SELECT['people']"", ""SELECT['graduation caps']"", ""FILTER['#2', 'that are red']"", ""FILTER['#1', 'wearing #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least two']""]","[""SELECT['people']"", ""SELECT['graduation caps']"", ""FILTER['#2', 'that are red']"", ""FILTER['#1', 'wearing #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is higher than two']""]"
NLVR2_dev_dev-307-2-0,If there is only one person visible in the library,"[""SELECT['person']"", ""SELECT['library']"", ""FILTER['#1', 'that is visible in #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]","[""SELECT['person']"", ""SELECT['the library']"", ""FILTER['#1', 'in #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]"
NLVR2_dev_dev-308-1-0,"If each image contains exactly one animal, which has horns and stands with its head turned to face the camera.","[""SELECT['animals']"", ""FILTER['#1', 'that has horns']"", ""FILTER['#2', 'that stands']"", ""PROJECT['head of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is turned to face the camera']"", ""SELECT['images']"", ""GROUP['count', '#5', '#6']"", ""COMPARATIVE['#6', '#7', 'is equal to one']"", ""AGGREGATE['count', '#6']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to #10']""]","[""SELECT['animals']"", ""FILTER['#1', 'that has horns']"", ""FILTER['#2', 'that stands']"", ""PROJECT['head of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is turned to face the camera']"", ""SELECT['images']"", ""GROUP['count', '#5', '#6']"", ""COMPARATIVE['#6', '#7', 'is equal to one']"", ""AGGREGATE['count', '#8']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#9', 'is equal to #10']""]"
NLVR2_dev_dev-308-1-1,If there are exactly two animals.,"[""SELECT['animals']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to two']""]","[""SELECT['animals']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is exactly two']""]"
NLVR2_dev_dev-309-0-1,If each image includes at least one hyena and a spotted wild cat.,"[""SELECT['hyenas']"", ""SELECT['wild cat']"", ""FILTER['#2', 'that is spotted']"", ""SELECT['images']"", ""GROUP['count', '#3', '#4']"", ""COMPARATIVE['#4', '#5', 'is at least one']"", ""GROUP['count', '#6', '#4']"", ""COMPARATIVE['#4', '#7', 'is at least one']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to #10']""]","[""SELECT['images']"", ""PROJECT['hyenas in #REF', '#1']"", ""PROJECT['wild cats in #REF', '#1']"", ""FILTER['#3', 'that are spotted']"", ""GROUP['count', '#4', '#1']"", ""COMPARATIVE['#1', '#5', 'is at least one']"", ""GROUP['count', '#6', '#1']"", ""COMPARATIVE['#1', '#7', 'is at least one']"", ""AGGREGATE['count', '#8']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#9', 'is equal to #10']""]"
NLVR2_dev_dev-309-2-0,If one of the images does not contain a large cat.,"[""SELECT['cat']"", ""FILTER['#1', 'that is large']"", ""PROJECT['images of #REF', '#2']"", ""SELECT['images']"", ""DISCARD['#4', '#3']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']""]","[""SELECT['cat']"", ""FILTER['#1', 'that is large']"", ""SELECT['images']"", ""DISCARD['#3', '#2']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']""]"
NLVR2_dev_dev-31-0-0,If one dog team is wearing booties and the other dog team is not.,"[""SELECT['dog teams']"", ""SELECT['booties']"", ""FILTER['#1', 'wearing #2']"", ""DISCARD['#1', '#3']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']"", ""BOOLEAN['#6', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#7', '#8']""]","[""SELECT['one dog team']"", ""SELECT['booties']"", ""FILTER['#1', 'wearing #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']"", ""SELECT['the other dog team']"", ""BOOLEAN['#5', 'is equal to zero']"", ""BOOLEAN['logical_and', 'true', '#6', '#7']""]"
NLVR2_dev_dev-310-0-0,If the left and right images contain the same number of lemons.,"[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['lemons in #REF', '#1']"", ""PROJECT['lemons in #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to #6']""]","[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['lemons in #REF', '#1']"", ""PROJECT['lemons in #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to #6']""."
NLVR2_dev_dev-31-0-1,If one of the photos shows a person wearing orange and black.,"[""SELECT['person']"", ""FILTER['#1', 'wearing orange and black']"", ""BOOLEAN['#2', 'is in one of the photos']""]","[""SELECT['person']"", ""FILTER['#1', 'that is wearing orange and black']"", ""BOOLEAN['#2', 'is in one photo']""]"
NLVR2_dev_dev-310-3-1,If both images show exactly two lemons.,"[""SELECT['lemons']"", ""SELECT['images']"", ""GROUP['count', '#1', '#2']"", ""COMPARATIVE['#2', '#3', 'is equal to two']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to two']""]","[""SELECT['images']"", ""PROJECT['lemons in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is equal to two']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to two']""]"
NLVR2_dev_dev-311-3-0,"If a person in slacks is behind a dingo standing still on all fours in one image, and the other image features one dingo with an upraised muzzle.","[""SELECT['person']"", ""SELECT['slacks']"", ""FILTER['#1', 'in #2']"", ""SELECT['dingo']"", ""FILTER['#4','standing still on all fours']"", ""BOOLEAN['#3', 'is behind #5']"", ""SELECT['other image']"", ""PROJECT['dingo in #REF', '#7']"", ""PROJECT['muzzle of #REF', '#8']"", ""COMPARATIVE['#8', '#9', 'is upraised']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#6', '#12']""]","[""SELECT['one image']"", ""PROJECT['person in #REF', '#1']"", ""FILTER['#2', 'in slacks']"", ""PROJECT['dingo in #REF', '#1']"", ""FILTER['#4','standing still on all fours']"", ""BOOLEAN['#3', 'is behind #5']"", ""SELECT['other image']"", ""PROJECT['dingo in #REF', '#7']"", ""PROJECT['muzzle of #REF', '#8']"", ""COMPARATIVE['#8', '#9', 'is upraised']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is equal to one']""]"
NLVR2_dev_dev-311-3-1,If a person is next to a dog.,"[""SELECT['person']"", ""SELECT['dog']"", ""BOOLEAN['#1', 'is next to #2']""]","[""SELECT['person']"", ""SELECT['dog']"", ""FILTER['#1', 'that is next to #2']"", ""BOOLEAN['#3', 'is true']""]"
NLVR2_dev_dev-312-0-1,If the skunk in the image on the right is eating.,"[""SELECT['right image']"", ""PROJECT['skunk in #REF', '#1']"", ""BOOLEAN['#2', 'is eating']""]","[""SELECT['right image']"", ""PROJECT['skunk of #REF', '#1']"", ""BOOLEAN['#2', 'is eating']""]"
NLVR2_dev_dev-313-0-0,If the train in the left image is full size and facing left.,"[""SELECT['left image']"", ""PROJECT['train in #REF', '#1']"", ""BOOLEAN['#2', 'is full size']"", ""BOOLEAN['#2', 'is facing left']"", ""BOOLEAN['logical_and', 'true', '#3', '#4']""]","[""SELECT['the left image']"", ""PROJECT['train in #REF', '#1']"", ""BOOLEAN['#2', 'is full size']"", ""BOOLEAN['#2', 'is facing left']"", ""BOOLEAN['logical_and', 'true', '#3', '#4']""]"
NLVR2_dev_dev-314-0-1,If a marmot has food in its hands.,"[""SELECT['marmot']"", ""PROJECT['hands of #REF', '#1']"", ""SELECT['food']"", ""BOOLEAN['#2', 'has #3 in']""]","[""SELECT['marmot']"", ""PROJECT['hands of #REF', '#1']"", ""SELECT['food']"", ""COMPARATIVE['#1', '#2', 'have #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']""]"
NLVR2_dev_dev-315-3-0,If one image contains twice as many red-orange dogs as the other image.,"[""SELECT['one image']"", ""PROJECT['dogs in #REF', '#1']"", ""FILTER['#2', 'that are red-orange']"", ""AGGREGATE['count', '#3']"", ""SELECT['the other image']"", ""PROJECT['dogs in #REF', '#5']"", ""FILTER['#6', 'that are red-orange']"", ""FILTER['#7', 'that are red-orange']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to two']""]","[""SELECT['one image']"", ""PROJECT['dogs in #REF', '#1']"", ""FILTER['#2', 'that are red-orange']"", ""AGGREGATE['count', '#3']"", ""SELECT['other image']"", ""PROJECT['dogs in #REF', '#5']"", ""FILTER['#6', 'that are red-orange']"", ""FILTER['#7', 'that are red-orange']"", ""AGGREGATE['count', '#8']"", ""ARITHMETIC['division', '#4', '#9']"", ""BOOLEAN['#10', 'is equal to two']""]"
NLVR2_dev_dev-316-0-1,If there are no more than three pillows.,"[""SELECT['pillows']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is at most three']""]","[""SELECT['pillows']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is no more than three']""]"
NLVR2_dev_dev-316-2-0,If there are exactly three pillows in on of the images.,"[""SELECT['pillows']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to three']""]","[""SELECT['images']"", ""PROJECT['pillows in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to three']""]"
NLVR2_dev_dev-317-2-0,"If two tall narrow cabinets have at least three upper shelves and have flat tops, but only one has two doors in its lower section.","[""SELECT['cabinets']"", ""FILTER['#1', 'that are narrow']"", ""FILTER['#2', 'that are tall']"", ""PROJECT['upper shelves of #REF', '#3']"", ""GROUP['count', '#4', '#3']"", ""COMPARATIVE['#3', '#5', 'is at least three']"", ""PROJECT['tops of #REF', '#6']"", ""COMPARATIVE['#6', '#7', 'is flat']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to one']"", ""PROJECT['doors of #REF', '#10']"", ""FILTER['#11', 'in its lower section']"", ""AGGREGATE['count', '#12']"", ""BOOLEAN['#13', 'is equal to two']"", ""BOOLEAN['logical_and', 'true', '#8', '#14']""]","[""SELECT['cabinets']"", ""FILTER['#1', 'that are narrow']"", ""FILTER['#2', 'that are tall']"", ""PROJECT['upper shelves of #REF', '#3']"", ""GROUP['count', '#4', '#3']"", ""COMPARATIVE['#3', '#5', 'is at least three']"", ""PROJECT['tops of #REF', '#6']"", ""COMPARATIVE['#6', '#7', 'are flat']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to one']"", ""PROJECT['doors of #REF', '#10']"", ""FILTER['#11', 'in its lower section']"", ""AGGREGATE['count', '#12']"", ""BOOLEAN['#13', 'is equal to two']"", ""BOOLEAN['logical_and', 'true', '#14', '#15']""]"
NLVR2_dev_dev-318-1-1,If an orange and white puppy is beside an orange and white kitten.,"[""SELECT['puppy']"", ""FILTER['#1', 'that is orange and white']"", ""SELECT['kitten']"", ""FILTER['#3', 'that is orange and white']"", ""BOOLEAN['#2', 'is beside #4']""]","[""SELECT['puppy']"", ""FILTER['#1', 'that is orange and white']"", ""SELECT['kitty']"", ""FILTER['#3', 'that is orange and white']"", ""BOOLEAN['#2', 'is beside #4']""]"
NLVR2_dev_dev-318-3-0,If one puppy has a light brown and white striped kitten sitting next to it.,"[""SELECT['puppy']"", ""SELECT['kitten']"", ""FILTER['#2', 'that is light brown and white striped']"", ""FILTER['#3', 'that is sitting next to #1']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']""]","[""SELECT['puppy']"", ""SELECT['kitten']"", ""FILTER['#2', 'that is light brown and white striped']"", ""FILTER['#3','sitting next to #1']"", ""FILTER['#1', 'with #4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is one']""]"
NLVR2_dev_dev-319-2-1,If there are two dogs laying down.,"[""SELECT['dogs']"", ""FILTER['#1', 'that are laying down']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']""]","[""SELECT['dogs']"", ""FILTER['#1', 'laying down']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']""]"
NLVR2_dev_dev-32-0-1,If one rodent is in a vase that is on its side.,"[""SELECT['rodent']"", ""SELECT['vase']"", ""PROJECT['side of #REF', '#2']"", ""FILTER['#1', 'that is on #3']"", ""FILTER['#1', 'that is in #4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']""]","[""SELECT['rodents']"", ""SELECT['vase']"", ""PROJECT['side of #REF', '#2']"", ""FILTER['#1', 'that is on #3']"", ""FILTER['#1', 'that is in #4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']""]"
NLVR2_dev_dev-320-1-0,If in at least one of the photos the man is wearing a baseball cap.,"[""SELECT['man']"", ""SELECT['baseball cap']"", ""FILTER['#1', 'wearing #2']"", ""BOOLEAN['#3', 'is in at least one of the photos']""]","[""SELECT['man']"", ""SELECT['baseball cap']"", ""FILTER['#1', 'wearing #2']"", ""BOOLEAN['#3', 'is in at least one photo']""]"
NLVR2_dev_dev-321-1-0,"If two convertibles with white headrests and front license are facing front, at least one of them with paint striping on the hood.","[""SELECT['convertibles']"", ""PROJECT['headrests of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are white']"", ""PROJECT['front license of #REF', '#3']"", ""FILTER['#3', 'that are facing front']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to two']"", ""PROJECT['hood of #REF', '#7']"", ""COMPARATIVE['#7', '#8', 'has paint striping']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#6', '#11']""]","[""SELECT['convertibles']"", ""PROJECT['headrests of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are white']"", ""PROJECT['front license of #REF', '#3']"", ""FILTER['#3', 'that are facing front']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to two']"", ""PROJECT['hood of #REF', '#1']"", ""COMPARATIVE['#1', '#8', 'has paint striping']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#7', '#11']""]"
NLVR2_dev_dev-321-3-1,"If all cars are topless blue mini convertibles angled front-first, and at least one car is in front of a body of water.","[""SELECT['cars']"", ""FILTER['#1', 'that are blue']"", ""FILTER['#2', 'that are mini convertibles']"", ""FILTER['#3', 'that are topless']"", ""FILTER['#4', 'that are angled front-first']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to #7']"", ""SELECT['body of water']"", ""FILTER['#1', 'in front of #9']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#8', '#12']""]","[""SELECT['cars']"", ""FILTER['#1', 'that are blue']"", ""FILTER['#2', 'that are mini convertibles']"", ""FILTER['#3', 'that are topless']"", ""FILTER['#4', 'that are angled front-first']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to #7']"", ""SELECT['body of water']"", ""FILTER['#1', 'in front of #8']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#8', '#11']""]"
NLVR2_dev_dev-322-2-0,If there are 4 puppies per image pair,"[""SELECT['images']"", ""PROJECT['puppies in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""BOOLEAN['#3', 'is equal to 4']""]","[""SELECT['image pairs']"", ""PROJECT['puppies in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to 4']""]"
NLVR2_dev_dev-322-2-1,If there are more than two dogs sitting next to each-other in one of the images.,"[""SELECT['dogs']"", ""FILTER['#1', 'that are sitting next to each-other']"", ""SELECT['images']"", ""GROUP['count', '#2', '#3']"", ""COMPARATIVE['#3', '#4', 'is higher than two']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']""]","[""SELECT['dogs']"", ""FILTER['#1', 'that are sitting next to each-other']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is higher than two']""]"
NLVR2_dev_dev-32-3-0,If one hamster is next to a hamster of the same color that has its head poking out of an overturned brown vase.,"[""SELECT['hamsters']"", ""SELECT['vase']"", ""FILTER['#2', 'that is overturned']"", ""FILTER['#3', 'that is brown']"", ""PROJECT['head of #REF', '#1']"", ""COMPARATIVE['#1', '#5', 'is poking out of #4']"", ""PROJECT['color of #REF', '#6']"", ""COMPARATIVE['#6', '#7', 'is the same as #8']"", ""FILTER['#1', 'that is next to #9']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is equal to one']""]","[""SELECT['hamsters']"", ""SELECT['vase']"", ""FILTER['#2', 'that is overturned']"", ""FILTER['#3', 'that is brown']"", ""FILTER['#1', 'that has its head poking out of #4']"", ""PROJECT['color of #REF', '#5']"", ""COMPARATIVE['#5', '#6', 'is the same as #7']"", ""FILTER['#1', 'next to #8']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to one']""]"
NLVR2_dev_dev-323-1-0,"If each image contains one non-standing spaniel, and one image features a spaniel with fur in shades of brown with a white chest stripe, posed sitting upright.","[""SELECT['images']"", ""PROJECT['spaniels in #REF', '#1']"", ""FILTER['#2', 'that are non-standing']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is equal to one']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#6', 'is equal to #7']"", ""SELECT['spain']"", ""PROJECT['fur of #REF', '#9']"", ""COMPARATIVE['#9', '#10', 'is in shades of brown']"", ""PROJECT['chest stripe of #REF', '#9']"", ""COMPARATIVE['#9', '#11', 'is white']"", ""FILTER['#12', 'posed sitting upright']"", ""AGGREGATE['count', '#13']"", ""BOOLEAN['#14', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#7', '#15']""]","[""SELECT['images']"", ""PROJECT['spaniels in #REF', '#1']"", ""FILTER['#2', 'that are non-standing']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is equal to one']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#6', 'is equal to #7']"", ""SELECT['spaniel']"", ""PROJECT['fur of #REF', '#9']"", ""COMPARATIVE['#9', '#10', 'is in shades of brown']"", ""PROJECT['chest stripe of #REF', '#9']"", ""COMPARATIVE['#9', '#11', 'is white']"", ""FILTER['#12', 'that is posed sitting upright']"", ""AGGREGATE['count', '#13']"", ""BOOLEAN['#14', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#7', '#15']""]"
NLVR2_dev_dev-323-1-1,If the dog in the image on the right is sitting in the grass outside.,"[""SELECT['the image on the right']"", ""PROJECT['dog in #REF', '#1']"", ""BOOLEAN['#2', 'is sitting in the grass']"", ""BOOLEAN['#2', 'is outside']"", ""BOOLEAN['logical_and', 'true', '#3', '#4']""]","[""SELECT['the image on the right']"", ""PROJECT['dog in #REF', '#1']"", ""BOOLEAN['#2', 'is sitting in the grass']"", ""BOOLEAN['#2', 'is outside']"", ""BOOLEAN['logical_and', 'true', '#4', '#3']""]"
NLVR2_dev_dev-324-2-0,If the left and right image contains a total two women standing in a bikinis.,"[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['women in #REF', '#1']"", ""PROJECT['women in #REF', '#2']"", ""PROJECT['bikinis in #REF', '#1']"", ""FILTER['#3','standing in #4']"", ""FILTER['#5','standing in #6']"", ""AGGREGATE['count', '#7']"", ""AGGREGATE['count', '#8']"", ""ARITHMETIC['sum', '#9', '#10']"", ""BOOLEAN['#11', 'is equal to two']""]","[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['women in #REF', '#1']"", ""PROJECT['women in #REF', '#2']"", ""PROJECT['bikinis in #REF', '#1']"", ""FILTER['#3', 'that are standing in #4']"", ""FILTER['#5', 'that are standing in #6']"", ""AGGREGATE['count', '#7']"", ""AGGREGATE['count', '#8']"", ""ARITHMETIC['sum', '#9', '#10']"", ""BOOLEAN['#11', 'is equal to two']""]"
NLVR2_dev_dev-324-3-1,If two women are standing.,"[""SELECT['women']"", ""FILTER['#1', 'that are standing']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']""]","[""SELECT['women']"", ""FILTER['#1', 'who are standing']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']""]"
NLVR2_dev_dev-325-2-0,If there are at least 30 sea lions laying on a dock that has no less then five exposed wooden dock poles.,"[""SELECT['sea lions']"", ""SELECT['dock']"", ""SELECT['dock poles']"", ""FILTER['#3', 'that are exposed']"", ""FILTER['#4', 'that are wooden']"", ""FILTER['#5', 'that are exposed']"", ""FILTER['#2', 'laying on #6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is at least 30']""]","[""SELECT['sea lions']"", ""SELECT['dock']"", ""SELECT['dock poles']"", ""FILTER['#3', 'that are exposed']"", ""FILTER['#4', 'that are wooden']"", ""FILTER['#2', 'that has #5']"", ""FILTER['#6', 'that are laying on #7']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is at least 30."
NLVR2_dev_dev-325-3-1,"If in the right image, at least one vertical pole is visible near seals lying en masse on a floating manmade platform.","[""SELECT['the right image']"", ""PROJECT['poles in #REF', '#1']"", ""FILTER['#2', 'that are vertical']"", ""PROJECT['seals in #REF', '#1']"", ""FILTER['#4', 'lying en masse on a floating manmade platform']"", ""FILTER['#3', 'near #5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least one']""]","[""SELECT['the right image']"", ""PROJECT['poles in #REF', '#1']"", ""FILTER['#2', 'that are vertical']"", ""PROJECT['seals in #REF', '#1']"", ""FILTER['#4', 'that are lying en masse']"", ""PROJECT['platform in #REF', '#1']"", ""FILTER['#6', 'that is floating']"", ""FILTER['#7', 'that is manmade']"", ""FILTER['#5', 'on #8']"", ""FILTER['#3', 'near #9']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is at least one']""."
NLVR2_dev_dev-326-1-0,If there are three dogs in the image on the left.,"[""SELECT['left image']"", ""PROJECT['dogs of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to three']""]","[""SELECT['the left image']"", ""PROJECT['dogs in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to three']""]"
NLVR2_dev_dev-326-3-1,If the image on the left has more then two dogs,"[""SELECT['left image']"", ""PROJECT['dogs of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is higher than two']""]","[""SELECT['the left image']"", ""PROJECT['dogs in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is higher than two']""]"
NLVR2_dev_dev-327-0-0,If one image shows a smaller gorilla next to the chest of a larger gorilla.,"[""SELECT['gorilla']"", ""FILTER['#1', 'that is smaller']"", ""FILTER['#1', 'that is larger']"", ""PROJECT['chest of #REF', '#3']"", ""FILTER['#2', 'next to #4']"", ""BOOLEAN['#5', 'is in one image']""]","[""SELECT['gorillas']"", ""FILTER['#1', 'that is smaller']"", ""FILTER['#1', 'that is large']"", ""PROJECT['chest of #REF', '#3']"", ""FILTER['#2', 'next to #4']"", ""BOOLEAN['#5', 'is in one image']""]"
NLVR2_dev_dev-327-2-1,If the left image contains an adult gorilla interacting with a young gorilla.,"[""SELECT['gorilla']"", ""FILTER['#1', 'that is adult']"", ""FILTER['#1', 'that is young']"", ""FILTER['#2', 'interacting with #3']"", ""BOOLEAN['#4', 'is in the left image']""]","[""SELECT['gorillas']"", ""FILTER['#1', 'that is adult']"", ""FILTER['#1', 'that is young']"", ""FILTER['#2', 'interacting with #3']"", ""BOOLEAN['#4', 'is in the left image']""]"
NLVR2_dev_dev-328-1-0,If all trains appear to be heading towards the left.,"[""SELECT['trains']"", ""FILTER['#1', 'heading towards the left']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to #4']""]","[""SELECT['trains']"", ""FILTER['#1', 'heading towards the left']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#4', 'is equal to #3']""]"
NLVR2_dev_dev-328-1-1,If all the trains in the images are facing the same direction.,"[""SELECT['images']"", ""PROJECT['trains in #REF', '#1']"", ""PROJECT['direction facing of #REF', '#2']"", ""BOOLEAN['#3', 'are the same']""]","[""SELECT['images']"", ""PROJECT['trains in #REF', '#1']"", ""PROJECT['direction facing of #REF', '#2']"", ""BOOLEAN['#3', 'are all the same']""]"
NLVR2_dev_dev-329-0-0,If there are exactly three pandas in total.,"[""SELECT['pandas']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to three']""]","[""SELECT['pandas']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to three']""]."
NLVR2_dev_dev-329-0-1,If there are 2 pandas in the left image and only 1 panda in the right image.,"[""SELECT['left image']"", ""PROJECT['pandas in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']"", ""SELECT['right image']"", ""PROJECT['pandas in #REF', '#5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#4', '#8']""]","[""SELECT['the left image']"", ""PROJECT['pandas in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']"", ""SELECT['the right image']"", ""PROJECT['pandas in #REF', '#5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#4', '#8']""]"
NLVR2_dev_dev-3-3-0,"If there is only one creature visible in the image on the left side, and it is facing the camera.","[""SELECT['left image']"", ""PROJECT['creature in #REF', '#1']"", ""FILTER['#2', 'that is facing the camera']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]","[""SELECT['left image']"", ""PROJECT['creature of #REF', '#1']"", ""FILTER['#2', 'that is facing the camera']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]"
NLVR2_dev_dev-33-0-1,If the right image contains a lineup of at least three women.,"[""SELECT['the right image']"", ""PROJECT['lineup of women in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least three']""]","[""SELECT['the right image']"", ""PROJECT['lineups of women in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least three']""]"
NLVR2_dev_dev-330-2-1,If one pelican is feeding another pelican.,"[""SELECT['pelicans']"", ""FILTER['#1', 'that is feeding another pelican']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']""]","[""SELECT['pelican']"", ""SELECT['another pelican']"", ""BOOLEAN['#1', 'is feeding #2']""]"
NLVR2_dev_dev-33-1-0,If a woman is holding something in her hand.,"[""SELECT['woman']"", ""PROJECT['hand of #REF', '#1']"", ""BOOLEAN['#1', 'is holding something in #2']""]","[""SELECT['woman']"", ""PROJECT['hand of #REF', '#1']"", ""BOOLEAN['#1', 'is holding something']""]"
NLVR2_dev_dev-331-2-0,If the left image contains a baby ferret chewing on a humans finger.,"[""SELECT['ferret']"", ""FILTER['#1', 'that is baby']"", ""SELECT['human']"", ""PROJECT['finger of #REF', '#3']"", ""FILTER['#2', 'chewing on #4']"", ""BOOLEAN['#5', 'is in the left image']""]","[""SELECT['ferret']"", ""FILTER['#1', 'that is a baby']"", ""SELECT['human']"", ""PROJECT['finger of #REF', '#3']"", ""FILTER['#2', 'chewing on #4']"", ""BOOLEAN['#5', 'is in left image']""]"
NLVR2_dev_dev-332-1-0,If there are mashed potatoes in a white colored bowl.,"[""SELECT['mashed potatoes']"", ""SELECT['bowl']"", ""FILTER['#2', 'that is white colored']"", ""BOOLEAN['#1', 'are in #3']""]","[""SELECT['potatoes']"", ""FILTER['#1', 'that are mashed']"", ""SELECT['bowl']"", ""FILTER['#3', 'that is white colored']"", ""BOOLEAN['#2', 'are in #4']""]"
NLVR2_dev_dev-332-2-1,If the right image has a fatty food visible on top of the mashed potatoes.,"[""SELECT['food']"", ""FILTER['#1', 'that is fatty']"", ""SELECT['potatoes']"", ""FILTER['#3', 'that are mashed']"", ""BOOLEAN['#2', 'is visible on top of #4']""]","[""SELECT['food']"", ""FILTER['#1', 'that is fatty']"", ""SELECT['mashed potatoes']"", ""BOOLEAN['#2', 'is visible on top of #3']""]"
NLVR2_dev_dev-333-0-0,If there is a total of four people in the shop.,"[""SELECT['people']"", ""SELECT['shop']"", ""FILTER['#1', 'in #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to four']""]","[""SELECT['people']"", ""SELECT['shop']"", ""FILTER['#1', 'that are in #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least four']""]"
NLVR2_dev_dev-334-1-1,If the birds in the image on the left are near a body of water.,"[""SELECT['left image']"", ""PROJECT['birds in #REF', '#1']"", ""PROJECT['body of water in #REF', '#1']"", ""BOOLEAN['#2', 'are near #3']""]","[""SELECT['birds']"", ""SELECT['body of water']"", ""FILTER['#1', 'near #2']"", ""BOOLEAN['#3', 'are in the image on the left']""]"
NLVR2_dev_dev-334-2-0,If a goose is eating food with its beak directly in the hand of a person.,"[""SELECT['goose']"", ""SELECT['food']"", ""FILTER['#1', 'that is eating #2']"", ""PROJECT['beak of #REF', '#3']"", ""SELECT['person']"", ""PROJECT['hand of #REF', '#5']"", ""BOOLEAN['#4', 'is directly in #6']""]","[""SELECT['goose']"", ""SELECT['food']"", ""FILTER['#1', 'eating #2']"", ""PROJECT['beak of #REF', '#3']"", ""SELECT['person']"", ""PROJECT['hand of #REF', '#5']"", ""BOOLEAN['#4', 'is directly in #6']""]"
NLVR2_dev_dev-335-0-1,If in the left pic the appendage free body of the sea creature makes up the majority of its height,"[""SELECT['left pic']"", ""PROJECT['sea creature in #REF', '#1']"", ""PROJECT['body of #REF', '#2']"", ""FILTER['#3', 'that is appendage free']"", ""PROJECT['height of #REF', '#2']"", ""AGGREGATE['max', '#4']"", ""BOOLEAN['#5', 'is equal to #6']""]","[""SELECT['the left pic']"", ""PROJECT['sea creature in #REF', '#1']"", ""PROJECT['body of #REF', '#2']"", ""FILTER['#3', 'that is appendage free']"", ""PROJECT['height of #REF', '#4']"", ""BOOLEAN['#5','makes up the majority']""]"
NLVR2_dev_dev-335-3-0,If the image on the left has a stalk with white dots on it.,"[""SELECT['stalk']"", ""SELECT['dots']"", ""FILTER['#2', 'that are white']"", ""FILTER['#1', 'with #3 on it']"", ""BOOLEAN['#4', 'is in the image on the left']""]","[""SELECT['stalk']"", ""SELECT['dots']"", ""FILTER['#2', 'that are white']"", ""FILTER['#1', 'on #3']"", ""BOOLEAN['#4', 'is in the image on the left']""]"
NLVR2_dev_dev-336-1-0,If an image shows a man sitting in front of a computer screen.,"[""SELECT['man']"", ""SELECT['computer screen']"", ""FILTER['#1','sitting in front of #2']"", ""BOOLEAN['#3', 'is in an image']""]","[""SELECT['man']"", ""SELECT['computer']"", ""PROJECT['screen of #REF', '#2']"", ""FILTER['#1','sitting in front of #3']"", ""BOOLEAN['#4', 'is in an image']""]"
NLVR2_dev_dev-336-1-1,If a man is using a computer in one of the images.,"[""SELECT['man']"", ""SELECT['computer']"", ""FILTER['#1', 'using #2']"", ""BOOLEAN['#3', 'is in one image']""]","[""SELECT['man']"", ""SELECT['computer']"", ""BOOLEAN['#1', 'is using #2']""]"
NLVR2_dev_dev-337-2-0,If the right image contains cookie dough balls on a rectangular metal baking pan.,"[""SELECT['cookie dough balls']"", ""SELECT['baking pan']"", ""FILTER['#2', 'that is rectangular']"", ""FILTER['#3', 'that is metal']"", ""FILTER['#1', 'on #4']"", ""BOOLEAN['#5', 'are in the right image']""]","[""SELECT['cook dough balls']"", ""SELECT['baking pan']"", ""FILTER['#2', 'that is rectangular']"", ""FILTER['#3', 'that is metal']"", ""FILTER['#1', 'on #4']"", ""BOOLEAN['#5', 'is in the right image']""]"
NLVR2_dev_dev-337-2-1,If a silver spoon has cookie dough in it.,"[""SELECT['spoon']"", ""FILTER['#1', 'that is silver']"", ""SELECT['cookie dough']"", ""BOOLEAN['#2', 'has #3 in']""]","[""SELECT['spoon']"", ""FILTER['#1', 'that is silver']"", ""SELECT['cookie dough']"", ""BOOLEAN['#2', 'has #3 in it']""]"
NLVR2_dev_dev-338-0-0,If in at least one image there is a white square bookshelf with 12 cubes that have smaller shelves in the cubes.,"[""SELECT['bookshelf']"", ""FILTER['#1', 'that is square']"", ""FILTER['#2', 'that is white']"", ""SELECT['cubes']"", ""PROJECT['smaller shelves in #REF', '#4']"", ""FILTER['#3', 'that have #5']"", ""GROUP['count', '#6', '#4']"", ""COMPARATIVE['#4', '#7', 'is equal to 12']"", ""BOOLEAN['#8', 'is in at least one image']""]","[""SELECT['bookshelf']"", ""FILTER['#1', 'that is square']"", ""FILTER['#2', 'that is white']"", ""SELECT['cubes']"", ""PROJECT['smaller shelves in #REF', '#4']"", ""FILTER['#5', 'that have #3']"", ""GROUP['count', '#6', '#4']"", ""COMPARATIVE['#4', '#7', 'is equal to 12']"", ""BOOLEAN['#8', 'is in at least one image']""]"
NLVR2_dev_dev-339-2-1,If there is a total of three people lifting weights.,"[""SELECT['people']"", ""SELECT['weights']"", ""FILTER['#1', 'lifting #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to three']""]","[""SELECT['people']"", ""SELECT['weights']"", ""FILTER['#1', 'leaving #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to three']""]"
NLVR2_dev_dev-340-0-0,If atleast one picture has no more than 3 people in focus,"[""SELECT['pictures']"", ""PROJECT['people in #REF', '#1']"", ""FILTER['#2', 'that are in focus']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is at most 3']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least one']""]","[""SELECT['pictures']"", ""PROJECT['people in #REF', '#1']"", ""FILTER['#2', 'in focus']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is at most 3']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least one']""]"
NLVR2_dev_dev-34-0-1,If the left image features a three-section white framed unit with mirrored doors.,"[""SELECT['unit']"", ""FILTER['#1', 'that is white framed']"", ""FILTER['#2', 'that has three-sections']"", ""PROJECT['doors of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'are mirrored']"", ""BOOLEAN['#5', 'is in the left image']""]","[""SELECT['unit']"", ""FILTER['#1', 'that is white framed']"", ""PROJECT['doors of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'are mirrored']"", ""FILTER['#4', 'that is three-section']"", ""BOOLEAN['#5', 'is in the left image']""]"
NLVR2_dev_dev-340-2-1,If at least 1 person is wearing a blue and yellow rob for graduation.,"[""SELECT['person']"", ""SELECT['rob']"", ""FILTER['#2', 'that is blue and yellow']"", ""FILTER['#1', 'wearing #3']"", ""FILTER['#4', 'for graduation']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least one']""]","[""SELECT['people']"", ""SELECT['rob']"", ""FILTER['#2', 'that is blue and yellow']"", ""FILTER['#1', 'wearing #3 for graduation']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']""]"
NLVR2_dev_dev-34-1-0,If the sliding door in the right image is open down the middle.,"[""SELECT['right image']"", ""PROJECT['door in #REF', '#1']"", ""FILTER['#2', 'that is sliding']"", ""BOOLEAN['#3', 'is open down the middle']""]","[""SELECT['the right image']"", ""PROJECT['the sliding door in #REF', '#1']"", ""BOOLEAN['#2', 'is open down the middle']""]"
NLVR2_dev_dev-341-0-0,If there are no more than three dogs.,"[""SELECT['dogs']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is at most three']""]","[""SELECT['dogs']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to three']""]"
NLVR2_dev_dev-341-3-1,If the left image shows a yellow lab wearing a collar around its neck,"[""SELECT['lab']"", ""FILTER['#1', 'that is yellow']"", ""PROJECT['neck of #REF', '#2']"", ""SELECT['collar']"", ""COMPARATIVE['#2', '#4', 'is around #3']"", ""BOOLEAN['#5', 'is in the left image']""]","[""SELECT['lab']"", ""FILTER['#1', 'that is yellow']"", ""PROJECT['neck of #REF', '#2']"", ""SELECT['collar']"", ""COMPARATIVE['#2', '#4', 'is around #3']"", ""BOOLEAN['#5', 'is in left image']""]"
NLVR2_dev_dev-342-2-1,"If each image contains a single dog, and one features a tiny white dog with a broad open-mouthed grin.","[""SELECT['images']"", ""PROJECT['dogs in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is equal to one']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#5', 'is equal to #6']"", ""FILTER['#1', 'that is tiny']"", ""FILTER['#8', 'that is white']"", ""PROJECT['grin of #REF', '#9']"", ""COMPARATIVE['#9', '#10', 'is broad']"", ""COMPARATIVE['#9', '#11', 'is open-mouthed']"", ""AGGREGATE['count', '#12']"", ""BOOLEAN['#13', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#7', '#14']""]","[""SELECT['images']"", ""PROJECT['dogs in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is equal to one']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#5', 'is equal to #6']"", ""FILTER['#1', 'that is tiny']"", ""FILTER['#8', 'that is white']"", ""PROJECT['grin of #REF', '#9']"", ""COMPARATIVE['#9', '#10', 'is broad']"", ""COMPARATIVE['#9', '#11', 'is open-mouthed']"", ""AGGREGATE['count', '#12']"", ""BOOLEAN['#13', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#7', '#14']""]]"
NLVR2_dev_dev-343-3-0,If at least one dog is wearing something.,"[""SELECT['dogs']"", ""FILTER['#1', 'that are wearing something']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least one']""]","[""SELECT['dogs']"", ""FILTER['#1', 'wearing something']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least one']""]"
NLVR2_dev_dev-343-3-1,"If one image contains a close-mouthed afghan hound with its muzzle lowered, and the other image contains a white dog with pale orange markings wearing something with a tassle.","[""SELECT['one image']"", ""PROJECT['afghan hound in #REF', '#1']"", ""FILTER['#2', 'that is close-mouthed']"", ""PROJECT['muzzle of #REF', '#3']"", ""BOOLEAN['#4', 'is lowered']"", ""SELECT['the other image']"", ""PROJECT['dog in #REF', '#6']"", ""FILTER['#7', 'that is white']"", ""PROJECT['markings of #REF', '#8']"", ""COMPARATIVE['#8', '#9', 'are pale']"", ""COMPARATIVE['#8', '#10', 'are orange']"", ""INTERSECTION['#8', '#5', '#11']"", ""BOOLEAN['#12', 'is in the other image']""]","[""SELECT['one image']"", ""PROJECT['afghan hound in #REF', '#1']"", ""FILTER['#2', 'that is close-mouthed']"", ""PROJECT['muzzle of #REF', '#3']"", ""BOOLEAN['#4', 'is lowered']"", ""SELECT['the other image']"", ""PROJECT['dog in #REF', '#6']"", ""FILTER['#7', 'that is white']"", ""PROJECT['markings of #REF', '#8']"", ""COMPARATIVE['#8', '#9', 'are pale']"", ""COMPARATIVE['#8', '#10', 'are orange']"", ""SELECT['something with a tassle']"", ""BOOLEAN['#11', 'is wearing #12']"", ""BOOLEAN['logical_and', 'true', '#5', '#13']""]"
NLVR2_dev_dev-344-2-0,If at least three animals are in a flowered field.,"[""SELECT['animals']"", ""SELECT['field']"", ""FILTER['#2', 'that is flowered']"", ""FILTER['#1', 'in #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least three']""]","[""SELECT['animals']"", ""SELECT['field']"", ""FILTER['#2', 'that is flowered']"", ""FILTER['#1', 'that are in #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least three']""]"
NLVR2_dev_dev-344-2-1,If each image includes purplish-pink flowers behind one camera-facing dog.,"[""SELECT['flowers']"", ""FILTER['#1', 'that are purplish-pink']"", ""SELECT['dog']"", ""FILTER['#3', 'that is camera-facing']"", ""FILTER['#2', 'that are behind #4']"", ""SELECT['images']"", ""GROUP['count', '#5', '#6']"", ""COMPARATIVE['#6', '#7', 'is equal to one']"", ""AGGREGATE['count', '#6']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to #10']""]","[""SELECT['flowers']"", ""FILTER['#1', 'that are purplish-pink']"", ""SELECT['dog']"", ""FILTER['#3', 'that is camera-facing']"", ""FILTER['#2', 'that are behind #4']"", ""PROJECT['images of #REF', '#5']"", ""SELECT['images']"", ""AGGREGATE['count', '#6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to #9']""]"
NLVR2_dev_dev-345-2-0,If a dog has retrieved a dead duck.,"[""SELECT['dog']"", ""SELECT['duck']"", ""FILTER['#2', 'that is dead']"", ""BOOLEAN['#1', 'has retrieved #3']""]","[""SELECT['dog']"", ""SELECT['duck']"", ""FILTER['#2', 'that is dead']"", ""BOOLEAN['#1', 'has retrieved #3']""]."
NLVR2_dev_dev-345-3-1,If in one of the images there is a dog holding a dead duck in its mouth.,"[""SELECT['dog']"", ""PROJECT['mouth of #REF', '#1']"", ""SELECT['duck']"", ""FILTER['#3', 'that is dead']"", ""COMPARATIVE['#1', '#2', 'is holding #4 in']"", ""BOOLEAN['#5', 'is in one of the images']""]","[""SELECT['dog']"", ""SELECT['duck']"", ""FILTER['#2', 'that is dead']"", ""PROJECT['mouth of #REF', '#1']"", ""COMPARATIVE['#1', '#4', 'is holding #3']"", ""BOOLEAN['#5', 'is in one of the images']""]"
NLVR2_dev_dev-346-1-0,If an image contains a black and white dog climbing a ladder.,"[""SELECT['dog']"", ""FILTER['#1', 'that is black and white']"", ""SELECT['ladder']"", ""FILTER['#2', 'climbing #3']"", ""BOOLEAN['#4', 'is in an image']""]","[""SELECT['dog']"", ""FILTER['#1', 'that is black and white']"", ""SELECT['ladder']"", ""BOOLEAN['#2', 'is climbing #3']""]"
NLVR2_dev_dev-347-0-1,If an image shows a bright yellow truck on dry pavement with its black plow angled leftward.,"[""SELECT['truck']"", ""FILTER['#1', 'that is bright yellow']"", ""SELECT['pavement']"", ""FILTER['#3', 'that is dry']"", ""FILTER['#2', 'on #4']"", ""PROJECT['plow of #REF', '#5']"", ""COMPARATIVE['#5', '#6', 'is black']"", ""COMPARATIVE['#5', '#7', 'is angled leftward']"", ""BOOLEAN['#8', 'is in an image']""]","[""SELECT['truck']"", ""FILTER['#1', 'that is bright yellow']"", ""SELECT['pavement']"", ""FILTER['#3', 'that is dry']"", ""FILTER['#2', 'on #4']"", ""PROJECT['plow of #REF', '#5']"", ""COMPARATIVE['#5', '#6', 'is black']"", ""COMPARATIVE['#5', '#7', 'is angled leftward']"", ""INTERSECTION['#5', '#6', '#8']"", ""BOOLEAN['#9', 'is in an image']""]"
NLVR2_dev_dev-347-1-0,If a yellow dump truck has a black snow plow attached to the front of it.,"[""SELECT['dump truck']"", ""FILTER['#1', 'that is yellow']"", ""SELECT['snow plow']"", ""FILTER['#3', 'that is black']"", ""PROJECT['the front of #REF', '#2']"", ""BOOLEAN['#4', 'is attached to #5']""]","[""SELECT['dump truck']"", ""FILTER['#1', 'that is yellow']"", ""SELECT['snow plow']"", ""FILTER['#3', 'that is black']"", ""PROJECT['front of #REF', '#2']"", ""BOOLEAN['#4', 'is attached to #5']""]"
NLVR2_dev_dev-348-0-0,If one woman is wearing a silk halter top with a white print.,"[""SELECT['woman']"", ""SELECT['halter top']"", ""FILTER['#2', 'that is silk']"", ""PROJECT['print of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is white']"", ""FILTER['#1', 'wearing #5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']""]","[""SELECT['woman']"", ""SELECT['halter top']"", ""FILTER['#2', 'that is silk']"", ""PROJECT['print of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is white']"", ""FILTER['#1', 'wearing #5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is one']""]"
NLVR2_dev_dev-348-1-1,"If one model wears a reddish lingerie outfit, and the other model wears a lingerie outfit in a shade of blue, and one of the outfits includes sleeves of some length.","[""SELECT['one model']"", ""PROJECT['lingerie outfit of #REF', '#1']"", ""BOOLEAN['#2', 'is reddish']"", ""SELECT['the other model']"", ""PROJECT['lingerie outfit of #REF', '#4']"", ""BOOLEAN['#5', 'is shade of blue']"", ""PROJECT['sleeves of #REF', '#6']"", ""COMPARATIVE['#6', '#7', 'are some length']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#5', '#10']""]","[""SELECT['one model']"", ""PROJECT['lingerie outfit of #REF', '#1']"", ""BOOLEAN['#2', 'is reddish']"", ""SELECT['other model']"", ""PROJECT['lingerie outfit of #REF', '#4']"", ""BOOLEAN['#5', 'is shade of blue']"", ""PROJECT['sleeves of #REF', '#6']"", ""COMPARATIVE['#6', '#7', 'are some length']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#5', '#10']""]"
NLVR2_dev_dev-349-3-1,If the left and right image contains the same number of full lemons and a sliced lemons.,"[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['full lemons in #REF', '#1']"", ""PROJECT['full lemons in #REF', '#2']"", ""PROJECT['sliced lemons in #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to #7']"", ""BOOLEAN['#8', 'is equal to #9']"", ""BOOLEAN['logical_and', 'true', '#10', '#11']""]","[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['full lemons in #REF', '#1']"", ""PROJECT['full lemons in #REF', '#2']"", ""PROJECT['sliced lemons in #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to #7']"", ""BOOLEAN['#8', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#9', '#10']""]"
NLVR2_dev_dev-35-0-1,If two pandas are playing near a tree in one of the images.,"[""SELECT['pandas']"", ""SELECT['tree']"", ""FILTER['#1', 'playing near #2']"", ""PROJECT['images of #REF', '#3']"", ""GROUP['count', '#3', '#4']"", ""COMPARATIVE['#4', '#5', 'is equal to two']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']""]","[""SELECT['pandas']"", ""SELECT['tree']"", ""FILTER['#1', 'playing near #2']"", ""PROJECT['images of #REF', '#3']"", ""GROUP['count', '#3', '#4']"", ""COMPARATIVE['#4', '#5', 'is equal to two']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal one']""]"
NLVR2_dev_dev-350-1-0,If the dog in the left image has one leg completely covered.,"[""SELECT['left image']"", ""PROJECT['dog in #REF', '#1']"", ""PROJECT['leg of #REF', '#2']"", ""BOOLEAN['#3', 'is completely covered']""]","[""SELECT['left image']"", ""PROJECT['dog in #REF', '#1']"", ""PROJECT['legs of #REF', '#2']"", ""BOOLEAN['#3', 'are completely covered']""]"
NLVR2_dev_dev-350-3-1,"If in the image to the left, a greyhound is laying down, and has a cast on a leg.","[""SELECT['left image']"", ""PROJECT['grayhound in #REF', '#1']"", ""FILTER['#2', 'that is laying down']"", ""PROJECT['leg of #REF', '#3']"", ""BOOLEAN['#3', 'has a cast on #4']""]","[""SELECT['left image']"", ""PROJECT['greyhound in #REF', '#1']"", ""FILTER['#2', 'that is laying down']"", ""PROJECT['leg of #REF', '#3']"", ""BOOLEAN['#3', 'has a cast on #4']""]"
NLVR2_dev_dev-35-1-0,If each image contains exactly two pandas and includes at least one panda that is not facing backwards.,"[""SELECT['images']"", ""PROJECT['pandas in #REF', '#1']"", ""FILTER['#2', 'that are facing backwards']"", ""DISCARD['#2', '#1']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is equal to two']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#6', 'is at least one']"", ""BOOLEAN['#7', 'is equal to #8']"", ""BOOLEAN['logical_and', 'true', '#9', '#10']""]","[""SELECT['images']"", ""PROJECT['pandas in #REF', '#1']"", ""FILTER['#2', 'that are facing backwards']"", ""DISCARD['#2', '#1']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is equal to two']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#6', 'is at least one']"", ""BOOLEAN['#7', 'is equal to #8']"", ""BOOLEAN['logical_and', 'true', '#10', '#9']""]"
NLVR2_dev_dev-351-0-0,If at least one image shows a blue-headed bird perched above a tight cluster of hanging red bottle-brush flowers.,"[""SELECT['bird']"", ""FILTER['#1', 'that is blue-headed']"", ""SELECT['cluster of hanging red bottle-brush flowers']"", ""FILTER['#3', 'perched above #2']"", ""BOOLEAN['#4', 'is in at least one image']""]","[""SELECT['bird']"", ""FILTER['#1', 'that is blue-headed']"", ""SELECT['clutch of hanging red bottle-brush flowers']"", ""FILTER['#3', 'perched above #2']"", ""BOOLEAN['#4', 'is in at least one image']""]"
NLVR2_dev_dev-352-0-0,If all the birds in these images are adults,"[""SELECT['images']"", ""PROJECT['birds in #REF', '#1']"", ""FILTER['#2', 'that are adults']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#5', 'is equal to #4']""]","[""SELECT['these images']"", ""PROJECT['birds in #REF', '#1']"", ""FILTER['#2', 'that are adults']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#5', 'is equal to #4']""]"
NLVR2_dev_dev-352-3-1,If there are 4 birds in the image pair,"[""SELECT['images']"", ""PROJECT['birds in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to 4']""]","[""SELECT['birds']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to 4']""]"
NLVR2_dev_dev-353-1-0,If the left and right image contains the same number of open sofa beds.,"[""SELECT['left image']"", ""PROJECT['sofa beds in #REF', '#1']"", ""FILTER['#2', 'that are open']"", ""AGGREGATE['count', '#3']"", ""SELECT['right image']"", ""PROJECT['sofa beds in #REF', '#5']"", ""FILTER['#6', 'that are open']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#4', 'is equal to #8']""]","[""SELECT['sofa beds']"", ""FILTER['#1', 'that are open']"", ""SELECT['left image']"", ""SELECT['right image']"", ""FILTER['#3', 'in #4']"", ""FILTER['#3', 'in #5']"", ""AGGREGATE['count', '#6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to #9']""]"
NLVR2_dev_dev-354-0-0,If there are more than two dogs in total.,"[""SELECT['dogs']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is higher than two']""]","[""SELECT['dogs']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is lower than two']""]"
NLVR2_dev_dev-354-2-1,If there is just one living creature whose nose is visible in the image on the left side.,"[""SELECT['left image']"", ""PROJECT['living creature in #REF', '#1']"", ""PROJECT['nose of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is visible']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']""]","[""SELECT['the left image']"", ""PROJECT['living creatures in #REF', '#1']"", ""PROJECT['nose of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is visible']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']""]."
NLVR2_dev_dev-355-1-1,If more than 5 monkeys total,"[""SELECT['monkeys']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is higher than 5']""]","[""SELECT['monkeys']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is more than 5']""]"
NLVR2_dev_dev-355-2-0,"If in one image containing exactly two baboons, the monkey on the right is grooming the one on the left.","[""SELECT['images']"", ""PROJECT['baboons in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is equal to two']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']"", ""FILTER['#1', 'that is on the right']"", ""FILTER['#1', 'that is grooming #7']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#6', '#10']""]","[""SELECT['images']"", ""PROJECT['baboons in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is equal to two']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']"", ""FILTER['#1', 'that is on the right']"", ""FILTER['#1', 'that is grooming #6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#9', '#10']""]"
NLVR2_dev_dev-356-1-0,"If in one image, a large animal is leaning forward on its knees, its nose to the ground, while a second image shows two similar animals, both of them with their noses to the ground.","[""SELECT['one image']"", ""PROJECT['animal in #REF', '#1']"", ""FILTER['#2', 'that is large']"", ""PROJECT['knees of #REF', '#3']"", ""FILTER['#3', 'leaning forward on #4']"", ""PROJECT['nose of #REF', '#5']"", ""PROJECT['ground in #REF', '#1']"", ""COMPARATIVE['#5', '#6', 'is to #7']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to one']"", ""SELECT['second image']"", ""PROJECT['animals in #REF', '#10']"", ""FILTER['#11', 'that are similar']"", ""PROJECT['noses of #REF', '#12']"", ""COMPARATIVE['#12', '#13', 'are to the ground']"", ""AGGREGATE['count', '#14']"", ""BOOLEAN['#15', 'is equal to two']"", ""BOOLEAN['logical_and', 'true', '#7', '#16']""]","[""SELECT['one image']"", ""PROJECT['animal in #REF', '#1']"", ""FILTER['#2', 'that is large']"", ""PROJECT['knees of #REF', '#3']"", ""FILTER['#3', 'leaning forward on #4']"", ""PROJECT['nose of #REF', '#5']"", ""PROJECT['ground in #REF', '#1']"", ""COMPARATIVE['#5', '#6', 'is to #7']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to one']"", ""SELECT['second image']"", ""PROJECT['animals in #REF', '#11']"", ""FILTER['#12', 'that are similar']"", ""PROJECT['noses of #REF', '#13']"", ""COMPARATIVE['#13', '#14', 'are to the ground']"", ""AGGREGATE['count', '#15']"", ""BOOLEAN['#16', 'is equal to two']"", ""BOOLEAN['logical_and', 'true', '#7', '#17']""]"
NLVR2_dev_dev-356-3-1,If the left image contains exactly two warthogs.,"[""SELECT['left image']"", ""PROJECT['warthogs in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']""]","[""SELECT['left image']"", ""PROJECT['warthogs in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']""]."
NLVR2_dev_dev-357-1-0,"If in the image to the right, the truck is equipped with a red plow.","[""SELECT['right image']"", ""PROJECT['truck in #REF', '#1']"", ""PROJECT['plow of #REF', '#2']"", ""BOOLEAN['#3', 'is red']""]","[""SELECT['the image to the right']"", ""PROJECT['truck in #REF', '#1']"", ""PROJECT['plow of #REF', '#2']"", ""BOOLEAN['#3', 'is red']""]"
NLVR2_dev_dev-357-2-1,If the left and right image contains the same number of trucks with snow plows on it.,"[""SELECT['trucks']"", ""SELECT['snow plows']"", ""FILTER['#1', 'with #2 on it']"", ""SELECT['left image']"", ""SELECT['right image']"", ""FILTER['#3', 'with #4']"", ""FILTER['#3', 'with #5']"", ""AGGREGATE['count', '#6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to #9']""]","[""SELECT['trucks']"", ""SELECT['snow plows']"", ""FILTER['#1', 'with #2 on it']"", ""SELECT['left image']"", ""SELECT['right image']"", ""FILTER['#3', 'that are in #4']"", ""FILTER['#3', 'that are in #5']"", ""AGGREGATE['count', '#6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to #9']""]"
NLVR2_dev_dev-358-0-0,If one of the pictured water bottles has a lid that tilts to the left and features its drinking 'spout' in the center of the lid.,"[""SELECT['water bottles']"", ""PROJECT['lid of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'tilts to the left']"", ""PROJECT['drinking spout of #REF', '#3']"", ""PROJECT['center of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is in #5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']""]","[""SELECT['water bottles']"", ""PROJECT['lid of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'tilts to the left']"", ""PROJECT['drinking spout of #REF', '#3']"", ""PROJECT['center of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'features #5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']""]"
NLVR2_dev_dev-358-0-1,If one water bottle shows two animals interacting with each other printed on the side.,"[""SELECT['water bottle']"", ""SELECT['animals']"", ""FILTER['#2', 'that are interacting with each other']"", ""PROJECT['side of #REF', '#3']"", ""FILTER['#3', 'printed on #4']"", ""FILTER['#1', 'that shows #5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to two']""]","[""SELECT['water bottle']"", ""PROJECT['the side of #REF', '#1']"", ""SELECT['animals']"", ""FILTER['#3', 'that are interacting with each other']"", ""FILTER['#4', 'printed on #2']"", ""FILTER['#1', 'that shows #5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to two']""]"
NLVR2_dev_dev-359-0-1,If each image shows one close-mouthed dingo reclining on a dirt ground.,"[""SELECT['dingo']"", ""FILTER['#1', 'that is close-mouthed']"", ""SELECT['ground']"", ""FILTER['#3', 'that is dirt']"", ""FILTER['#2','reclining on #4']"", ""SELECT['images']"", ""GROUP['count', '#5', '#6']"", ""COMPARATIVE['#6', '#7', 'is equal to one']"", ""AGGREGATE['count', '#6']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to #10']""]","[""SELECT['dingo']"", ""FILTER['#1', 'that is close-mouthed']"", ""SELECT['ground']"", ""FILTER['#3', 'that is dirt']"", ""FILTER['#2','reclining on #4']"", ""PROJECT['images of #REF', '#5']"", ""GROUP['count', '#5', '#6']"", ""COMPARATIVE['#6', '#7', 'is equal to one']"", ""AGGREGATE['count', '#6']"", ""SELECT['images']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to #10']""]"
NLVR2_dev_dev-360-0-0,"If one image contains a single schnauzer, and the other image contains multiple look-alike schnauzers.","[""SELECT['one image']"", ""PROJECT['schnauzers in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']"", ""SELECT['other image']"", ""PROJECT['schnauzers in #REF', '#5']"", ""FILTER['#6', 'that are look-alike']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is at least two']"", ""BOOLEAN['logical_and', 'true', '#4', '#9']""]","[""SELECT['one image']"", ""PROJECT['schnauzers in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']"", ""SELECT['other image']"", ""PROJECT['schnauzers in #REF', '#5']"", ""FILTER['#6', 'that look-alike']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is at least two']"", ""BOOLEAN['logical_and', 'true', '#4', '#9']""]"
NLVR2_dev_dev-361-0-0,"If each image shows exactly one hound on green grass, and one image shows a brown-eared hound while the other shows a black-eared hound.","[""SELECT['images']"", ""PROJECT['hounds in #REF', '#1']"", ""PROJECT['grass in #REF', '#1']"", ""FILTER['#3', 'that is green']"", ""FILTER['#2', 'on #4']"", ""GROUP['count', '#5', '#1']"", ""COMPARATIVE['#1', '#6', 'is equal to one']"", ""AGGREGATE['count', '#7']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#8', 'is equal to #9']"", ""SELECT['one image']"", ""PROJECT['hound in #REF', '#10']"", ""FILTER['#11', 'that is brown-eared']"", ""FILTER['#11', 'that is black-eared']"", ""AGGREGATE['count', '#12']"", ""BOOLEAN['#13', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#7', '#14']""]","[""SELECT['images']"", ""PROJECT['hounds in #REF', '#1']"", ""PROJECT['grass in #REF', '#1']"", ""FILTER['#3', 'that is green']"", ""FILTER['#2', 'on #4']"", ""GROUP['count', '#5', '#1']"", ""COMPARATIVE['#1', '#6', 'is equal to one']"", ""AGGREGATE['count', '#7']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#8', 'is equal to #9']"", ""SELECT['one image']"", ""PROJECT['hound in #REF', '#11']"", ""FILTER['#12', 'that is brown-eared']"", ""FILTER['#13', 'that is black-eared']"", ""AGGREGATE['count', '#14']"", ""BOOLEAN['#15', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#7', '#16']""]"
NLVR2_dev_dev-36-1-1,If a person is holding a syringe.,"[""SELECT['person']"", ""SELECT['syringe']"", ""BOOLEAN['#1', 'is holding #2']""]","[""SELECT['person']"", ""SELECT['syringe']"", ""FILTER['#1', 'that is holding #2']"", ""BOOLEAN['#3', 'is in #4']""]"
NLVR2_dev_dev-361-2-1,If a single dog is standing up in the grass in the image on the left.,"[""SELECT['left image']"", ""PROJECT['dog in #REF', '#1']"", ""PROJECT['grass in #REF', '#1']"", ""FILTER['#2','standing up in #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']""]","[""SELECT['the left image']"", ""PROJECT['dogs in #REF', '#1']"", ""PROJECT['the grass in #REF', '#1']"", ""FILTER['#2','standing up in #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']""]"
NLVR2_dev_dev-362-0-1,If the right image contains no more than five ducks.,"[""SELECT['the right image']"", ""PROJECT['ducks in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at most five']""]","[""SELECT['the right image']"", ""PROJECT['ducks in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at most five']""]."
NLVR2_dev_dev-362-1-0,If there are more birds in the image on the right than in the image on the left.,"[""SELECT['right image']"", ""SELECT['left image']"", ""PROJECT['birds of #REF', '#1']"", ""PROJECT['birds of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is higher than #6']""]","[""SELECT['the right image']"", ""SELECT['the left image']"", ""PROJECT['birds in #REF', '#1']"", ""PROJECT['birds in #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is higher than #6']""]"
NLVR2_dev_dev-36-3-0,If the combined images include a cat and at least one syringe displayed diagonally.,"[""SELECT['cat']"", ""SELECT['syringe']"", ""FILTER['#2', 'that is displayed diagonally']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']"", ""BOOLEAN['#5', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#6', '#7']""]","[""SELECT['cat']"", ""SELECT['syringe']"", ""FILTER['#2', 'that is displayed diagonally']"", ""BOOLEAN['#1', 'is in the images']"", ""BOOLEAN['#3', 'is in the images']"", ""BOOLEAN['logical_and', 'true', '#4', '#5']""]"
NLVR2_dev_dev-363-1-0,If the left image shows exactly two vultures together.,"[""SELECT['left image']"", ""PROJECT['vultures in #REF', '#1']"", ""FILTER['#2', 'that are together']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']""]","[""SELECT['left image']"", ""PROJECT['vultures in #REF', '#1']"", ""FILTER['#2', 'that are together']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is exactly two']""]"
NLVR2_dev_dev-363-2-1,"If one image contains a single vulture in a standing pose with its head and body facing leftward, and the other image contains a group of at least eight vultures.","[""SELECT['one image']"", ""PROJECT['vultures in #REF', '#1']"", ""FILTER['#2', 'in a standing pose']"", ""PROJECT['head of #REF', '#3']"", ""PROJECT['body of #REF', '#3']"", ""COMPARATIVE['#3', '#5', 'is facing leftward']"", ""COMPARATIVE['#3', '#6', 'is facing leftward']"", ""INTERSECTION['#3', '#4', '#7']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to one']"", ""SELECT['the other image']"", ""PROJECT['vultures in #REF', '#10']"", ""FILTER['#11', 'that are in a group']"", ""AGGREGATE['count', '#12']"", ""BOOLEAN['#13', 'is at least eight']"", ""BOOLEAN['logical_and', 'true', '#7', '#14']""]","[""SELECT['one image']"", ""PROJECT['vultures in #REF', '#1']"", ""FILTER['#2', 'in a standing pose']"", ""PROJECT['head of #REF', '#3']"", ""PROJECT['body of #REF', '#3']"", ""COMPARATIVE['#3', '#5', 'is facing leftward']"", ""COMPARATIVE['#3', '#6', 'is facing leftward']"", ""INTERSECTION['#3', '#4', '#7']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to one']"", ""SELECT['other image']"", ""PROJECT['vultures in #REF', '#10']"", ""FILTER['#11', 'that are in a group']"", ""AGGREGATE['count', '#12']"", ""BOOLEAN['#13', 'is at least eight']"", ""BOOLEAN['logical_and', 'true', '#7', '#14']""]"
NLVR2_dev_dev-364-1-1,If a wine glass is behind a wine bottle.,"[""SELECT['wine glass']"", ""SELECT['wine bottle']"", ""BOOLEAN['#1', 'is behind #2']""]","[""SELECT['wines glass']"", ""SELECT['wine bottle']"", ""BOOLEAN['#1', 'is behind #2']""]"
NLVR2_dev_dev-365-3-1,If in at least one image there is a woman eating off a rectangle plate.,"[""SELECT['woman']"", ""SELECT['plate']"", ""FILTER['#2', 'that is rectangle']"", ""FILTER['#1', 'eating off #3']"", ""BOOLEAN['#4', 'is in at least one image']""]","[""SELECT['woman']"", ""SELECT['plate']"", ""FILTER['#2', 'that is rectangular']"", ""FILTER['#1', 'eating off #3']"", ""BOOLEAN['#4', 'is in at least one image']""]"
NLVR2_dev_dev-366-3-1,"If in one of the images, a bluejay is standing in some leaves while holding an acorn in its beak.","[""SELECT['bluejay']"", ""SELECT['leaves']"", ""FILTER['#1','standing in #2']"", ""PROJECT['beak of #REF', '#3']"", ""SELECT['acorn']"", ""COMPARATIVE['#3', '#4', 'is holding #5']"", ""BOOLEAN['#6', 'is in one of the images']""]","[""SELECT['bluejay']"", ""SELECT['leaves']"", ""FILTER['#1','standing in #2']"", ""PROJECT['beak of #REF', '#3']"", ""SELECT['acorn']"", ""COMPARATIVE['#3', '#4', 'is holding #5']"", ""BOOLEAN['#6', 'is in one image']""]"
NLVR2_dev_dev-367-2-1,"If one dog is in a sitting pose looking upward, and the other dog is standing with its body turned leftward.","[""SELECT['dogs']"", ""FILTER['#1', 'that is in a sitting pose']"", ""FILTER['#2', 'that is looking upward']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']"", ""FILTER['#1', 'that is standing']"", ""PROJECT['body of #REF', '#6']"", ""COMPARATIVE['#6', '#7', 'is turned leftward']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#5', '#10']""]","[""SELECT['one dog']"", ""FILTER['#1', 'that is in a sitting pose']"", ""BOOLEAN['#2', 'is looking upward']"", ""SELECT['the other dog']"", ""FILTER['#4', 'that is standing']"", ""PROJECT['body of #REF', '#5']"", ""BOOLEAN['#6', 'is turned leftward']"", ""BOOLEAN['logical_and', 'true', '#3', '#7']""]"
NLVR2_dev_dev-367-3-0,If only one dog has a white chest.,"[""SELECT['dogs']"", ""PROJECT['chest of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is white']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]","[""SELECT['dogs']"", ""PROJECT['chest of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is white']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]."
NLVR2_dev_dev-368-1-0,If there are balloon table centerpieces.,"[""SELECT['balloon table centerpieces']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is at least two']""]","[""SELECT['balloon table centerpieces']"", ""BOOLEAN['#1', 'are there any #REF']""]"
NLVR2_dev_dev-368-3-1,If in at least one image there are 6 balloons in the foreground.,"[""SELECT['balloons']"", ""FILTER['#1', 'that are in the foreground']"", ""SELECT['images']"", ""GROUP['count', '#2', '#3']"", ""COMPARATIVE['#3', '#4', 'is equal to 6']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least one']""]","[""SELECT['balloons']"", ""FILTER['#1', 'in the foreground']"", ""PROJECT['images of #REF', '#2']"", ""GROUP['count', '#2', '#3']"", ""COMPARATIVE['#3', '#4', 'is equal to 6']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least one']""]"
NLVR2_dev_dev-369-1-1,If there are people walking in both images.,"[""SELECT['people']"", ""FILTER['#1', 'that are walking']"", ""PROJECT['images of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']""]","[""SELECT['people']"", ""FILTER['#1', 'that are walking']"", ""SELECT['images']"", ""GROUP['count', '#2', '#3']"", ""COMPARATIVE['#3', '#4', 'is at least two']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to two']""]"
NLVR2_dev_dev-369-3-0,If each image has at least one orange yellow truck removing snow.,"[""SELECT['trucks']"", ""FILTER['#1', 'that are orange']"", ""FILTER['#2', 'that are yellow']"", ""SELECT['snow']"", ""FILTER['#3', 'that are removing #4']"", ""SELECT['images']"", ""GROUP['count', '#5', '#6']"", ""COMPARATIVE['#6', '#7', 'is at least one']"", ""AGGREGATE['count', '#6']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to #10']""]","[""SELECT['truck']"", ""FILTER['#1', 'that is orange']"", ""FILTER['#2', 'that is yellow']"", ""SELECT['snow']"", ""FILTER['#3', 'that is removing #4']"", ""PROJECT['images of #REF', '#5']"", ""GROUP['count', '#5', '#6']"", ""COMPARATIVE['#6', '#7', 'is at least one']"", ""AGGREGATE['count', '#6']"", ""SELECT['images']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to #10']""]"
NLVR2_dev_dev-370-0-0,If there are at least six birds in the right image.,"[""SELECT['right image']"", ""PROJECT['birds of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least six']""]","[""SELECT['right image']"", ""PROJECT['birds in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least six']""]"
NLVR2_dev_dev-370-0-1,If an image contains a single vulture with outspread wings against a blue sky.,"[""SELECT['vultures']"", ""PROJECT['wings of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are outspread']"", ""SELECT['sky']"", ""FILTER['#4', 'that is blue']"", ""FILTER['#3', 'against #5']"", ""SELECT['images']"", ""GROUP['count', '#6', '#7']"", ""COMPARATIVE['#7', '#8', 'is equal to one']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is at least one']""]","[""SELECT['vultures']"", ""PROJECT['wings of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are outspread']"", ""SELECT['sky']"", ""FILTER['#4', 'that is blue']"", ""FILTER['#3', 'against #5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']""]"
NLVR2_dev_dev-37-1-1,If the right picture has more then one non-human animal in it,"[""SELECT['the right picture']"", ""PROJECT['animals in #REF', '#1']"", ""FILTER['#2', 'that are non-human']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is higher than one']""]","[""SELECT['right picture']"", ""PROJECT['animals of #REF', '#1']"", ""FILTER['#2', 'that are non-human']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is higher than one']""]"
NLVR2_dev_dev-371-1-1,"If all pencil cases are closed and black, and at least one pencil case has contrasting piping on the edges.","[""SELECT['pencil cases']"", ""FILTER['#1', 'that are closed']"", ""FILTER['#2', 'that are black']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to #5']"", ""PROJECT['edges of #REF', '#1']"", ""SELECT['piping']"", ""COMPARATIVE['#1', '#8', 'are contrasting']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#6', '#11']""]","[""SELECT['pencil cases']"", ""FILTER['#1', 'that are closed']"", ""FILTER['#2', 'that are black']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to #5']"", ""PROJECT['edges of #REF', '#1']"", ""SELECT['piping']"", ""FILTER['#8', 'that is contrasting']"", ""COMPARATIVE['#1', '#9', 'has #6 on']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#7', '#12']""]"
NLVR2_dev_dev-371-3-0,If in at least one image there is a small bag with a handle and zipper with a red logo sewn in to the front of the bag.,"[""SELECT['bag']"", ""FILTER['#1', 'that is small']"", ""PROJECT['handle of #REF', '#2']"", ""PROJECT['zip of #REF', '#2']"", ""PROJECT['front of #REF', '#2']"", ""COMPARATIVE['#2', '#4', 'has a red logo sewn in to #5']"", ""BOOLEAN['#6', 'is in at least one image']""]","[""SELECT['bag']"", ""FILTER['#1', 'that is small']"", ""PROJECT['handle of #REF', '#2']"", ""PROJECT['zip of #REF', '#2']"", ""PROJECT['front of #REF', '#2']"", ""PROJECT['logo of #REF', '#5']"", ""COMPARATIVE['#2', '#7', 'is red']"", ""COMPARATIVE['#2', '#8', 'is sewn to #6']"", ""INTERSECTION['#2', '#3', '#9']"", ""BOOLEAN['#10', 'is in at least one image']""]"
NLVR2_dev_dev-372-2-1,If the animal in the image on the left is standing near the grass.,"[""SELECT['left image']"", ""PROJECT['animal in #REF', '#1']"", ""PROJECT['grass in #REF', '#1']"", ""BOOLEAN['#2', 'is standing near #3']""]","[""SELECT['left image']"", ""PROJECT['animal of #REF', '#1']"", ""PROJECT['grass of #REF', '#1']"", ""BOOLEAN['#2', 'is standing near #3']""]"
NLVR2_dev_dev-372-3-0,"If one image shows a dingo standing on reddish dirt, its body turned rightward and its face turned to the camera.","[""SELECT['dingo']"", ""SELECT['dirt']"", ""FILTER['#2', 'that is reddish']"", ""FILTER['#1','standing on #3']"", ""PROJECT['body of #REF', '#4']"", ""COMPARATIVE['#4', '#5', 'is turned rightward']"", ""PROJECT['face of #REF', '#6']"", ""COMPARATIVE['#6', '#7', 'is turned to the camera']"", ""BOOLEAN['#8', 'is in one image']""]","[""SELECT['dingo']"", ""SELECT['dirt']"", ""FILTER['#2', 'that is reddish']"", ""FILTER['#1','standing on #3']"", ""PROJECT['body of #REF', '#4']"", ""COMPARATIVE['#4', '#5', 'is turned rightward']"", ""PROJECT['face of #REF', '#6']"", ""COMPARATIVE['#6', '#7', 'is turned to the camera']"", ""INTERSECTION['#6', '#6', '#8']"", ""BOOLEAN['#9', 'is in one image']""]"
NLVR2_dev_dev-37-3-0,If at least one of the dogs is wearing a leash.,"[""SELECT['dogs']"", ""SELECT['leash']"", ""FILTER['#1', 'wearing #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']""]","[""SELECT['dogs']"", ""SELECT['a leash']"", ""FILTER['#1', 'wearing #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']""]"
NLVR2_dev_dev-374-1-0,If in at least one image there is a single churce with a wall made out of stone surrounding it.,"[""SELECT['churce']"", ""SELECT['wall']"", ""FILTER['#2', 'that is made out of stone']"", ""FILTER['#1', 'with #3 surrounding it']"", ""BOOLEAN['#4', 'is in at least one image']""]","[""SELECT['churce']"", ""SELECT['wall']"", ""FILTER['#2', 'that is made out of stone']"", ""FILTER['#1', 'with #3 surrounding it']"", ""PROJECT['images of #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']""]"
NLVR2_dev_dev-375-0-0,If a small white puppy is laying down with its tongue out.,"[""SELECT['puppy']"", ""FILTER['#1', 'that is small']"", ""FILTER['#2', 'that is white']"", ""FILTER['#3', 'that is laying down']"", ""PROJECT['tongue of #REF', '#4']"", ""BOOLEAN['#5', 'is out']""]","[""SELECT['puppy']"", ""FILTER['#1', 'that is white']"", ""FILTER['#2', 'that is small']"", ""FILTER['#3', 'that is laying down']"", ""PROJECT['tongue of #REF', '#4']"", ""BOOLEAN['#5', 'is out']""]"
NLVR2_dev_dev-375-1-1,"If the right image contains one dog in a reclining pose, while the left image contains one forward-turned white puppy with its front paws straight and at least a body-width apart.","[""SELECT['right image']"", ""PROJECT['dog in #REF', '#1']"", ""FILTER['#2', 'that is in a reclining pose']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']"", ""SELECT['left image']"", ""PROJECT['puppy in #REF', '#6']"", ""FILTER['#7', 'that is white']"", ""FILTER['#8', 'that is forward-turned']"", ""PROJECT['front paws of #REF', '#9']"", ""COMPARATIVE['#9', '#10', 'are straight']"", ""COMPARATIVE['#9', '#11', 'are at least a body-width apart']"", ""AGGREGATE['count', '#12']"", ""BOOLEAN['#13', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#5', '#14']""]","[""SELECT['the right image']"", ""PROJECT['dogs in #REF', '#1']"", ""FILTER['#2', 'that are in a reclining pose']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']"", ""SELECT['the left image']"", ""PROJECT['puppy in #REF', '#6']"", ""FILTER['#7', 'that is white']"", ""FILTER['#8', 'that is forward-turned']"", ""PROJECT['front paws of #REF', '#9']"", ""COMPARATIVE['#9', '#10', 'are straight']"", ""COMPARATIVE['#9', '#11', 'are at least a body-width apart']"", ""INTERSECTION['#9', '#12', '#13']"", ""BOOLEAN['#14', 'is in the left image']"", ""BOOLEAN['logical_and', 'true', '#5', '#15']""]"
NLVR2_dev_dev-376-0-1,If there are 2 round bracelets made with beads and safety pins.,"[""SELECT['bracelets']"", ""FILTER['#1', 'that are round']"", ""SELECT['beads']"", ""SELECT['safety pins']"", ""FILTER['#2','made with #3']"", ""FILTER['#4','made with #5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to two']""]","[""SELECT['bracelets']"", ""FILTER['#1', 'that are round']"", ""SELECT['beads']"", ""SELECT['safety pins']"", ""FILTER['#2', 'that are made with #3']"", ""FILTER['#4', 'that are made with #5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to 2']""]"
NLVR2_dev_dev-376-2-0,"If each image features one bracelet made of beads strung on safety pins, and all bracelets contain some green beads.","[""SELECT['images']"", ""PROJECT['bracelets in #REF', '#1']"", ""PROJECT['beads in #REF', '#1']"", ""PROJECT['safety pins in #REF', '#1']"", ""FILTER['#3', 'that are strung on #4']"", ""GROUP['count', '#5', '#1']"", ""COMPARATIVE['#1', '#6', 'is equal to one']"", ""AGGREGATE['count', '#7']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#8', 'is equal to #9']"", ""SELECT['beads']"", ""FILTER['#11', 'that are green']"", ""FILTER['#12', 'that contain #13']"", ""AGGREGATE['count', '#14']"", ""BOOLEAN['#15', 'is equal to #16']"", ""BOOLEAN['logical_and', 'true', '#10', '#17']""]","[""SELECT['images']"", ""PROJECT['bracelets in #REF', '#1']"", ""PROJECT['beads in #REF', '#2']"", ""PROJECT['safety pins in #REF', '#1']"", ""FILTER['#3', 'that are strung on #4']"", ""GROUP['count', '#5', '#1']"", ""COMPARATIVE['#1', '#6', 'is equal to one']"", ""AGGREGATE['count', '#7']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#8', 'is equal to #9']"", ""SELECT['beads']"", ""FILTER['#11', 'that are green']"", ""FILTER['#12', 'that contain #13']"", ""AGGREGATE['count', '#14']"", ""BOOLEAN['#15', 'is equal to #16']"", ""BOOLEAN['logical_and', 'true', '#10', '#17']""]"
NLVR2_dev_dev-377-3-1,"If each image shows a purple flower below a bunch of bananas, and in one image the petals of the flower are spreading.","[""SELECT['flower']"", ""FILTER['#1', 'that is purple']"", ""SELECT['bunch of bananas']"", ""FILTER['#2', 'that is below #3']"", ""PROJECT['images of #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""SELECT['images']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to #8']"", ""PROJECT['petals of #REF', '#9']"", ""COMPARATIVE['#9', '#10', 'are spreading']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#7', '#13']""]","[""SELECT['flower']"", ""FILTER['#1', 'that is purple']"", ""SELECT['bunch of bananas']"", ""FILTER['#2', 'that is below #3']"", ""PROJECT['images of #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""SELECT['images']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to #8']"", ""PROJECT['petals of #REF', '#9']"", ""COMPARATIVE['#9', '#10', 'are spreading']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is equal to #13']"", ""BOOLEAN['logical_and', 'true', '#7', '#14']""]"
NLVR2_dev_dev-378-0-0,If a woman and bald man are wearing gloves together in at least one of the images.,"[""SELECT['woman']"", ""SELECT['man']"", ""FILTER['#2', 'that is bald']"", ""SELECT['gloves']"", ""FILTER['#3', 'wearing #4 together']"", ""FILTER['#1', 'wearing #5']"", ""BOOLEAN['#6', 'is in at least one of the images']""]","[""SELECT['woman']"", ""SELECT['man']"", ""FILTER['#2', 'that is bald']"", ""SELECT['gloves']"", ""FILTER['#1', 'wearing #3 together']"", ""FILTER['#4', 'wearing #5']"", ""BOOLEAN['#6', 'is in at least one of the images']""]"
NLVR2_dev_dev-379-0-0,"If the right image includes a bird with spread wings, but the left image does not.","[""SELECT['right image']"", ""PROJECT['bird in #REF', '#1']"", ""PROJECT['wings of #REF', '#2']"", ""BOOLEAN['#3', 'are spread']"", ""SELECT['left image']"", ""PROJECT['bird in #REF', '#5']"", ""BOOLEAN['#6', 'is not spread']"", ""BOOLEAN['logical_and', 'true', '#4', '#7']""]","[""SELECT['right image']"", ""PROJECT['bird in #REF', '#1']"", ""PROJECT['wings of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'are spread']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']"", ""SELECT['left image']"", ""PROJECT['bird in #REF', '#7']"", ""BOOLEAN['#8', 'is false']"", ""BOOLEAN['logical_and', 'true', '#6', '#9']""]"
NLVR2_dev_dev-379-1-1,If exactly one of the birds is flying in the air.,"[""SELECT['birds']"", ""FILTER['#1', 'that are flying in the air']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']""]","[""SELECT['birds']"", ""FILTER['#1', 'that is flying in the air']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']""]"
NLVR2_dev_dev-380-0-0,"If at least one image shows upright bananas made to resemble dolphins, standing in grapes, and each image contains some green grapes.","[""SELECT['bananas']"", ""FILTER['#1', 'that are upright']"", ""SELECT['dolphins']"", ""FILTER['#2','made to resemble #3']"", ""SELECT['grapes']"", ""FILTER['#4','standing in #5']"", ""PROJECT['images of #REF', '#6']"", ""GROUP['count', '#6', '#7']"", ""COMPARATIVE['#7', '#8', 'is at least two']"", ""AGGREGATE['count', '#9']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#10', 'is equal to #11']""]","[""SELECT['bananas']"", ""FILTER['#1', 'that are upright']"", ""SELECT['dolphins']"", ""FILTER['#2','made to resemble #3']"", ""SELECT['grapes']"", ""FILTER['#4','standing in #5']"", ""SELECT['images']"", ""GROUP['count', '#6', '#7']"", ""COMPARATIVE['#7', '#8', 'is at least two']"", ""AGGREGATE['count', '#7']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to #11']""]"
NLVR2_dev_dev-380-1-1,If several red grapes are near some bananas in one of the images.,"[""SELECT['grapes']"", ""FILTER['#1', 'that are red']"", ""SELECT['bananas']"", ""FILTER['#2', 'that are near #3']"", ""SELECT['images']"", ""GROUP['count', '#4', '#5']"", ""COMPARATIVE['#5', '#6', 'is at least two']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to one']""]","[""SELECT['grapes']"", ""FILTER['#1', 'that are red']"", ""SELECT['bananas']"", ""FILTER['#2', 'that are near #3']"", ""SELECT['images']"", ""GROUP['count', '#4', '#5']"", ""COMPARATIVE['#5', '#6', 'is higher than two']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to one']""]"
NLVR2_dev_dev-38-1-1,If at least one dog has its head tilted back looking straight up.,"[""SELECT['dogs']"", ""PROJECT['head of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is tilted back looking straight up']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']""]","[""SELECT['dogs']"", ""PROJECT['head of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is tilted back']"", ""COMPARATIVE['#1', '#2', 'is looking straight up']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#5', 'is at least one']""]"
NLVR2_dev_dev-381-2-0,"If two barbers, one in each image, are standing and working on the hair of a sitting customer.","[""SELECT['barbers']"", ""FILTER['#1', 'that are standing']"", ""SELECT['customer']"", ""FILTER['#3', 'that is sitting']"", ""PROJECT['hair of #REF', '#4']"", ""FILTER['#2', 'working on #5']"", ""SELECT['images']"", ""GROUP['count', '#6', '#7']"", ""COMPARATIVE['#7', '#8', 'is equal to two']"", ""AGGREGATE['count', '#9']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#10', 'is equal to #11']""]","[""SELECT['barbers']"", ""FILTER['#1', 'that are standing']"", ""SELECT['customer']"", ""FILTER['#3', 'that is sitting']"", ""PROJECT['hair of #REF', '#4']"", ""FILTER['#2', 'working on #5']"", ""SELECT['images']"", ""GROUP['count', '#6', '#7']"", ""COMPARATIVE['#7', '#8', 'is equal to one']"", ""AGGREGATE['count', '#9']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#10', 'is equal to #11']""]"
NLVR2_dev_dev-381-3-1,If the right image shows a man standing on the left working on the hair of a young boy sitting in a barber chair.,"[""SELECT['man']"", ""FILTER['#1', 'that is standing on the left']"", ""SELECT['boy']"", ""FILTER['#3', 'that is young']"", ""SELECT['barber chair']"", ""PROJECT['hair of #REF', '#5']"", ""FILTER['#2', 'working on #4']"", ""BOOLEAN['#6', 'is in the right image']""]","[""SELECT['man']"", ""FILTER['#1', 'that is standing on the left']"", ""SELECT['boy']"", ""FILTER['#3', 'that is young']"", ""PROJECT['hair of #REF', '#4']"", ""SELECT['barber chair']"", ""FILTER['#2', 'working on #5']"", ""BOOLEAN['#6', 'is in the right image']""]"
NLVR2_dev_dev-38-2-0,If the left and right image contains a total of two dogs with at least one in a collar.,"[""SELECT['dogs']"", ""SELECT['collar']"", ""FILTER['#1', 'in the left image']"", ""FILTER['#1', 'in the right image']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['sum', '#5', '#6']"", ""BOOLEAN['#7', 'is equal to two']"", ""BOOLEAN['#8', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#9', '#10']""]","[""SELECT['dogs']"", ""SELECT['collar']"", ""FILTER['#1', 'in the left image']"", ""FILTER['#1', 'in the right image']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['sum', '#5', '#6']"", ""BOOLEAN['#7', 'is equal to two']"", ""BOOLEAN['#8', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#4', '#9']""]"
NLVR2_dev_dev-382-2-0,If in at least one image there is a single employee work next to a three tier glass bakery case.,"[""SELECT['employees']"", ""SELECT['bakery case']"", ""FILTER['#2', 'that is glass']"", ""FILTER['#3', 'that is three tier']"", ""FILTER['#1', 'that work next to #4']"", ""PROJECT['images of #REF', '#5']"", ""GROUP['count', '#5', '#6']"", ""COMPARATIVE['#6', '#7', 'is equal to one']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is at least one']""]","[""SELECT['employee']"", ""SELECT['bakery case']"", ""FILTER['#2', 'that is glass']"", ""PROJECT['tiers of #REF', '#3']"", ""FILTER['#4', 'that are three']"", ""FILTER['#1', 'that work next to #5']"", ""BOOLEAN['#6', 'is in at least one image']""]"
NLVR2_dev_dev-382-3-1,If an image shows at least one person standing face-forward behind a brown wood counter with a glass display case to the left.,"[""SELECT['person']"", ""FILTER['#1', 'that is standing face-forward']"", ""SELECT['counter']"", ""FILTER['#3', 'that is brown']"", ""FILTER['#4', 'that is wood']"", ""SELECT['display case']"", ""FILTER['#6', 'that is glass']"", ""FILTER['#5', 'with #7 to the left']"", ""FILTER['#2', 'behind #8']"", ""PROJECT['images of #REF', '#9']"", ""GROUP['count', '#9', '#10']"", ""COMPARATIVE['#10', '#11', 'is at least one']"", ""AGGREGATE['count', '#12']"", ""BOOLEAN['#13', 'is equal to one']""]","[""SELECT['person']"", ""FILTER['#1','standing face-forward']"", ""SELECT['counter']"", ""FILTER['#3', 'that is brown']"", ""FILTER['#4', 'that is wood']"", ""SELECT['display case']"", ""FILTER['#6', 'that is glass']"", ""FILTER['#5', 'with #7 to the left']"", ""FILTER['#2', 'behind #8']"", ""PROJECT['images of #REF', '#9']"", ""GROUP['count', '#9', '#10']"", ""COMPARATIVE['#10', '#11', 'is at least one']"", ""AGGREGATE['count', '#12']"", ""BOOLEAN['#13', 'is equal to one']""]"
NLVR2_dev_dev-383-0-0,If there is at most 1 binder with a floral design.,"[""SELECT['binders']"", ""PROJECT['design of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is floral']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at most one']""]","[""SELECT['binders']"", ""FILTER['#1', 'that has a floral design']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at most one']""]"
NLVR2_dev_dev-383-3-1,If one of the binders is lying down and spread open.,"[""SELECT['binders']"", ""FILTER['#1', 'that is lying down']"", ""FILTER['#2', 'that is spread open']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]","[""SELECT['binders']"", ""FILTER['#1', 'that are lying down']"", ""FILTER['#2', 'that is spread open']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]"
NLVR2_dev_dev-384-1-1,"If there isn't anything hanging on the walls, no decor.","[""SELECT['decor']"", ""SELECT['walls']"", ""FILTER['#1', 'hanging on #2']"", ""DISCARD['#1', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to zero']""]","[""SELECT['walls']"", ""SELECT['decor']"", ""FILTER['#1', 'hanging on #2']"", ""DISCARD['#1', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to zero']""]"
NLVR2_dev_dev-385-1-0,If a single cow is walking in the street in the image on the right.,"[""SELECT['right image']"", ""PROJECT['cow in #REF', '#1']"", ""PROJECT['street in #REF', '#1']"", ""FILTER['#2', 'walking in #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']""]","[""SELECT['right image']"", ""PROJECT['cows in #REF', '#1']"", ""PROJECT['street in #REF', '#1']"", ""FILTER['#2', 'walking in #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']""]"
NLVR2_dev_dev-385-2-1,"If each image shows a path next to a row of roofed structures, and the right image shows an unhitched black ox in front of a market street.","[""SELECT['path']"", ""SELECT['structures']"", ""FILTER['#2', 'that are roofed']"", ""FILTER['#3', 'that are in a row']"", ""FILTER['#1', 'that is next to #4']"", ""SELECT['images']"", ""GROUP['count', '#5', '#6']"", ""COMPARATIVE['#6', '#7', 'is at least one']"", ""AGGREGATE['count', '#6']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to #10']"", ""SELECT['ox']"", ""FILTER['#11', 'that is unhitched']"", ""SELECT['market street']"", ""FILTER['#12', 'in front of #13']"", ""BOOLEAN['#14', 'is in the right image']"", ""BOOLEAN['logical_and', 'true', '#7', '#15']""]","[""SELECT['path']"", ""SELECT['structures']"", ""FILTER['#2', 'that are roofed']"", ""FILTER['#3', 'that are in a row']"", ""FILTER['#1', 'that is next to #4']"", ""SELECT['images']"", ""GROUP['count', '#5', '#6']"", ""COMPARATIVE['#6', '#7', 'is at least one']"", ""AGGREGATE['count', '#6']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to #10']"", ""SELECT['ox']"", ""FILTER['#11', 'that is black']"", ""FILTER['#12', 'that is unhitched']"", ""SELECT['market street']"", ""FILTER['#13', 'in front of #14']"", ""BOOLEAN['#15', 'is in the right image']"", ""BOOLEAN['logical_and', 'true', '#7', '#17']""]"
NLVR2_dev_dev-386-1-0,"If in one image, a yurt sitting on post supports has an outdoor seating area on a deck with railing that encircles the yurt.","[""SELECT['yurt']"", ""SELECT['post supports']"", ""FILTER['#1','sitting on #2']"", ""SELECT['deck']"", ""PROJECT['railing of #REF', '#4']"", ""COMPARATIVE['#4', '#5', 'encircles #3']"", ""SELECT['outdoor seating area']"", ""FILTER['#6', 'on #7']"", ""BOOLEAN['#8', 'is in one image']""]","[""SELECT['yurt']"", ""SELECT['post supports']"", ""FILTER['#1','sitting on #2']"", ""SELECT['deck']"", ""SELECT['railing']"", ""FILTER['#5', 'that encircles #4']"", ""FILTER['#3', 'with #6']"", ""PROJECT['outdoor seating area of #REF', '#7']"", ""FILTER['#4', 'on #8']"", ""BOOLEAN['#9', 'has #10']""]"
NLVR2_dev_dev-386-1-1,If there is at least one human inside a yurt in one of the images.,"[""SELECT['human']"", ""SELECT['yurt']"", ""FILTER['#1', 'inside #2']"", ""PROJECT['images of #REF', '#3']"", ""GROUP['count', '#3', '#4']"", ""COMPARATIVE['#4', '#5', 'is at least one']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']""]","[""SELECT['human']"", ""SELECT['yurt']"", ""FILTER['#1', 'inside #2']"", ""BOOLEAN['#3', 'is in one image']""]"
NLVR2_dev_dev-387-1-1,If a dog has a tennis ball.,"[""SELECT['dog']"", ""SELECT['tennis ball']"", ""BOOLEAN['#1', 'has #2']""]","[""SELECT['dog']"", ""SELECT['tennis ball']"", ""FILTER['#1', 'that has #2']"", ""BOOLEAN['#3', 'is in #4']""]"
NLVR2_dev_dev-387-3-0,If one of the images in the pair shows a dog with a tennis ball.,"[""SELECT['dog']"", ""SELECT['tennis ball']"", ""FILTER['#1', 'with #2']"", ""BOOLEAN['#3', 'is in one of the images']""]","[""SELECT['dog']"", ""SELECT['tennis ball']"", ""FILTER['#1', 'that is with #2']"", ""BOOLEAN['#3', 'is in one of the images."
NLVR2_dev_dev-388-3-0,If all of the bookshelves are in the middle of the room.,"[""SELECT['bookshelves']"", ""SELECT['the room']"", ""PROJECT['the middle of #REF', '#2']"", ""FILTER['#1', 'in #3']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to #6']""]","[""SELECT['bookshelves']"", ""SELECT['the room']"", ""FILTER['#1', 'that are in the middle of #2']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to #5']""]"
NLVR2_dev_dev-389-2-0,"If one image shows a real man modeling an angled front view of graduation attire, and the other image shows a back view of a black robe with a red sash.","[""SELECT['one image']"", ""PROJECT['man in #REF', '#1']"", ""FILTER['#2', 'that is real']"", ""PROJECT['graduation attire in #REF', '#1']"", ""PROJECT['front view of #REF', '#4']"", ""BOOLEAN['#5', 'is angled']"", ""SELECT['other image']"", ""PROJECT['robe in #REF', '#7']"", ""FILTER['#8', 'that is black']"", ""PROJECT['sash in #REF', '#7']"", ""FILTER['#9', 'that is red']"", ""FILTER['#10', 'with #11']"", ""PROJECT['back view of #REF', '#12']"", ""AGGREGATE['count', '#13']"", ""BOOLEAN['#14', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#6', '#15']""]","[""SELECT['one image']"", ""PROJECT['man in #REF', '#1']"", ""FILTER['#2', 'that is real']"", ""PROJECT['graduation attire in #REF', '#1']"", ""PROJECT['front view of #REF', '#4']"", ""BOOLEAN['#5', 'is angled']"", ""SELECT['other image']"", ""PROJECT['robe in #REF', '#7']"", ""FILTER['#8', 'that is black']"", ""PROJECT['sash in #REF', '#7']"", ""FILTER['#10', 'that is red']"", ""FILTER['#9', 'with #11']"", ""PROJECT['back view of #REF', '#12']"", ""AGGREGATE['count', '#13']"", ""BOOLEAN['#14', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#6', '#15']""]"
NLVR2_dev_dev-389-3-1,If a person is modeling the graduation attire in the image on the left.,"[""SELECT['left image']"", ""PROJECT['person in #REF', '#1']"", ""PROJECT['graduation attire in #REF', '#1']"", ""BOOLEAN['#2', 'is modeling #3']""]","[""SELECT['person']"", ""SELECT['graduation attire']"", ""FILTER['#1','modeling #2']"", ""BOOLEAN['#3', 'is in left image']""]"
NLVR2_dev_dev-39-0-0,If one of the perfume bottles has rounded shoulders.,"[""SELECT['perfume bottles']"", ""PROJECT['shoulders of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are rounded']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]","[""SELECT['perfume bottles']"", ""PROJECT['shoulders of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are round']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]"
NLVR2_dev_dev-390-0-0,If a sofa sits against the wall of a yurt in the image on the right.,"[""SELECT['sofa']"", ""SELECT['yurt']"", ""PROJECT['wall of #REF', '#2']"", ""FILTER['#1', 'that sits against #3']"", ""BOOLEAN['#4', 'is in the image on the right']""]","[""SELECT['sofa']"", ""SELECT['yurt']"", ""PROJECT['the wall of #REF', '#2']"", ""FILTER['#1', 'that sits against #3']"", ""BOOLEAN['#4', 'is in the image on the right']."
NLVR2_dev_dev-390-1-1,If one image shows the interior of a non-square room with a ladder leading to a loft at its center.,"[""SELECT['room']"", ""FILTER['#1', 'that is non-square']"", ""PROJECT['center of #REF', '#2']"", ""SELECT['ladder']"", ""SELECT['loft']"", ""COMPARATIVE['#2', '#4', 'is leading to #5']"", ""PROJECT['interior of #REF', '#6']"", ""BOOLEAN['#7', 'is in one image']""]","[""SELECT['room']"", ""FILTER['#1', 'that is non-square']"", ""PROJECT['interior of #REF', '#2']"", ""SELECT['ladder']"", ""PROJECT['center of #REF', '#4']"", ""SELECT['loft']"", ""COMPARATIVE['#4', '#5', 'is leading to #6']"", ""BOOLEAN['#7', 'is in one image']""]"
NLVR2_dev_dev-391-0-0,If the left image shows a saxophone displayed diagonally with its bell end facing up and its black mouthpiece angled downward.,"[""SELECT['saxophone']"", ""FILTER['#1', 'that is displayed diagonally']"", ""PROJECT['bell end of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is facing up']"", ""PROJECT['mouthpiece of #REF', '#4']"", ""COMPARATIVE['#4', '#5', 'is black']"", ""COMPARATIVE['#4', '#6', 'is angled downward']"", ""INTERSECTION['#4', '#7', '#8']"", ""BOOLEAN['#9', 'is in the left image']""]","[""SELECT['left image']"", ""PROJECT['saxophone in #REF', '#1']"", ""FILTER['#2', 'that is displayed diagonally']"", ""PROJECT['bell end of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is facing up']"", ""PROJECT['mouthpiece of #REF', '#5']"", ""COMPARATIVE['#5', '#6', 'is black']"", ""COMPARATIVE['#5', '#7', 'is angled downward']"", ""INTERSECTION['#5', '#8', '#9']"", ""BOOLEAN['#10', 'is in left image']""]"
NLVR2_dev_dev-391-1-1,"If the saxophone in the left image is brass, while the saxophone in the right image is silver.","[""SELECT['left image']"", ""PROJECT['saxophone in #REF', '#1']"", ""BOOLEAN['#2', 'is brass']"", ""SELECT['right image']"", ""PROJECT['saxophone in #REF', '#4']"", ""BOOLEAN['#5', 'is silver']"", ""BOOLEAN['logical_and', 'true', '#3', '#6']""]","[""SELECT['left image']"", ""PROJECT['saxophone of #REF', '#1']"", ""BOOLEAN['#2', 'is brass']"", ""SELECT['right image']"", ""PROJECT['saxophone of #REF', '#4']"", ""BOOLEAN['#5', 'is silver']"", ""BOOLEAN['logical_and', 'true', '#3', '#6']""]"
NLVR2_dev_dev-392-1-1,If the left and right image contains the same number of groundhogs.,"[""SELECT['groundhogs']"", ""SELECT['left image']"", ""SELECT['right image']"", ""FILTER['#1', 'in #2']"", ""FILTER['#1', 'in #3']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to #7']""]","[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['groundhogs in #REF', '#1']"", ""PROJECT['groundhogs in #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to #6']""]"
NLVR2_dev_dev-393-3-0,If a perfume bottle with a pink label is next to a vase of flowers.,"[""SELECT['perfume bottle']"", ""PROJECT['label of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is pink']"", ""SELECT['vase of flowers']"", ""BOOLEAN['#3', 'is next to #4']""]","[""SELECT['perfume bottle']"", ""FILTER['#1', 'with a pink label']"", ""SELECT['vase of flowers']"", ""BOOLEAN['#2', 'is next to #3']""]"
NLVR2_dev_dev-393-3-1,If the images feature a knobby white lid on the perfume bottle.,"[""SELECT['lid']"", ""FILTER['#1', 'that is knobby']"", ""FILTER['#2', 'that is white']"", ""SELECT['perfume bottle']"", ""FILTER['#3', 'on #4']"", ""BOOLEAN['#5', 'is in the images']""]","[""SELECT['perfume bottle']"", ""SELECT['lid']"", ""FILTER['#2', 'that is knobby']"", ""FILTER['#3', 'that is white']"", ""FILTER['#1', 'on #4']"", ""BOOLEAN['#5', 'is in the images']""]"
NLVR2_dev_dev-394-0-0,"If each image contains one beetle and no ball, and at least one image shows a beetle with a black horn that curves toward its back.","[""SELECT['images']"", ""PROJECT['beetles in #REF', '#1']"", ""PROJECT['balls in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is equal to one']"", ""COMPARATIVE['#1', '#5', 'is equal to zero']"", ""INTERSECTION['#1', '#6', '#7']"", ""AGGREGATE['count', '#8']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#9', 'is equal to #10']"", ""SELECT['beetle']"", ""PROJECT['horn of #REF', '#11']"", ""FILTER['#12', 'that is black']"", ""PROJECT['back of #REF', '#13']"", ""BOOLEAN['#14', 'curves toward #16']"", ""BOOLEAN['logical_and', 'true', '#7', '#17']""]","[""SELECT['images']"", ""PROJECT['beetles in #REF', '#1']"", ""PROJECT['balls in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is equal to one']"", ""COMPARATIVE['#1', '#5', 'is equal to zero']"", ""INTERSECTION['#1', '#6', '#7']"", ""AGGREGATE['count', '#8']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#9', 'is equal to #10']"", ""PROJECT['horn of #REF', '#11']"", ""COMPARATIVE['#11', '#12', 'is black']"", ""PROJECT['back of #REF', '#13']"", ""COMPARATIVE['#14', '#15', 'curves toward #16']"", ""BOOLEAN['#17', 'is in at least one image']"", ""BOOLEAN['logical_and', 'true', '#8', '#18']""]"
NLVR2_dev_dev-394-1-1,"If there are two beetles, both facing away from each other.","[""SELECT['beetles']"", ""FILTER['#1', 'that are facing away from each other']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']""]","[""SELECT['beetles']"", ""FILTER['#1', 'that are facing away from each other']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']"", ""BOOLEAN['#4', 'is equal to two']"", ""BOOLEAN['logical_and', 'true', '#6', '#5']""]"
NLVR2_dev_dev-395-0-0,"If one laptop computer is facing forward and one is angled to the side, but only one is blue with a white keyboard.","[""SELECT['laptop computers']"", ""FILTER['#1', 'that is facing forward']"", ""FILTER['#1', 'that is angled to the side']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']"", ""FILTER['#5', 'that is blue']"", ""PROJECT['keyboard of #REF', '#7']"", ""COMPARATIVE['#7', '#8', 'is white']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#6', '#11']""]","[""SELECT['laptop computers']"", ""FILTER['#1', 'that is facing forward']"", ""FILTER['#1', 'that is angled to the side']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']"", ""FILTER['#5', 'that is blue']"", ""PROJECT['keyboard of #REF', '#6']"", ""COMPARATIVE['#6', '#7', 'is white']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#10', '#11']""]"
NLVR2_dev_dev-395-2-1,If one laptop is blue.,"[""SELECT['laptops']"", ""FILTER['#1', 'that are blue']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']""]","[""SELECT['laptops']"", ""FILTER['#1', 'which is blue']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']""]"
NLVR2_dev_dev-396-1-0,If there are geese swimming in a pond,"[""SELECT['geese']"", ""SELECT['pond']"", ""BOOLEAN['#1', 'are swimming in #2']""]","[""SELECT['geese']"", ""SELECT['pond']"", ""FILTER['#1', 'that are swimming in #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4."
NLVR2_dev_dev-397-0-0,If there are two desserts in one of the images.,"[""SELECT['desserts']"", ""SELECT['images']"", ""GROUP['count', '#1', '#2']"", ""COMPARATIVE['#2', '#3', 'is equal to two']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']""]","[""SELECT['desserts']"", ""SELECT['images']"", ""GROUP['count', '#1', '#2']"", ""COMPARATIVE['#2', '#3', 'is equal to two']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']""]"
NLVR2_dev_dev-397-2-1,"If one image shows a footed dessert with strawberries and no other fruit on top, and the other image shows a footed dessert with yellow-fleshed fruit on top.","[""SELECT['one image']"", ""PROJECT['dessert in #REF', '#1']"", ""FILTER['#2', 'that is footed']"", ""PROJECT['strawberries in #REF', '#1']"", ""PROJECT['other fruit in #REF', '#1']"", ""FILTER['#4', 'with #5 on top']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least one']"", ""SELECT['other image']"", ""PROJECT['footed dessert in #REF', '#9']"", ""PROJECT['fruit in #REF', '#9']"", ""FILTER['#10', 'that is yellow-fleshed']"", ""BOOLEAN['#11', 'has #12 on top']"", ""BOOLEAN['logical_and', 'true', '#7', '#13']""]","[""SELECT['one image']"", ""PROJECT['dessert in #REF', '#1']"", ""FILTER['#2', 'that is footed']"", ""PROJECT['strawberries in #REF', '#1']"", ""PROJECT['other fruit in #REF', '#1']"", ""FILTER['#4', 'with #5 on top']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least one']"", ""SELECT['other image']"", ""PROJECT['footed dessert in #REF', '#8']"", ""PROJECT['fruit in #REF', '#8']"", ""FILTER['#9', 'that is yellow-fleshed']"", ""BOOLEAN['#10', 'has #11 on top']"", ""BOOLEAN['logical_and', 'true', '#7', '#12']""]"
NLVR2_dev_dev-398-2-0,"If a ferret is in a snoozing pose with face visible, snuggled next to something plush and animal-skin patterned.","[""SELECT['ferret']"", ""FILTER['#1', 'that is in a snoozing pose']"", ""PROJECT['face of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is visible']"", ""SELECT['something plush']"", ""FILTER['#5', 'that is animal-skin patterned']"", ""BOOLEAN['#4', 'is snuggled next to #6']""]","[""SELECT['ferret']"", ""PROJECT['face of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is visible']"", ""SELECT['something plush']"", ""FILTER['#4', 'that is animal-skin patterned']"", ""BOOLEAN['#3', 'is snuggled next to #5']""]"
NLVR2_dev_dev-398-2-1,If there is one visible mammal in each image.,"[""SELECT['images']"", ""PROJECT['mammal in #REF', '#1']"", ""FILTER['#2', 'that are visible']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is equal to one']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to #7']""]","[""SELECT['images']"", ""PROJECT['mammal in #REF', '#1']"", ""FILTER['#2', 'that are visible']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is equal to one']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#6', 'is equal to #7']""]"
NLVR2_dev_dev-399-2-1,If the elephant in the image on the right is facing left.,"[""SELECT['right image']"", ""PROJECT['elephant in #REF', '#1']"", ""BOOLEAN['#2', 'is facing left']""]","[""SELECT['left image']"", ""PROJECT['elephant in #REF', '#1']"", ""BOOLEAN['#2', 'is facing left']""]"
NLVR2_dev_dev-4-0-0,If there are no more than 4 bottles of fizzy drink in total.,"[""SELECT['fizzy drink']"", ""PROJECT['bottles of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at most 4']""]","[""SELECT['fzzy drink']"", ""PROJECT['bottles of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at most 4']""]"
NLVR2_dev_dev-400-2-0,If there are five balloons in one image.,"[""SELECT['balloons']"", ""SELECT['images']"", ""GROUP['count', '#1', '#2']"", ""COMPARATIVE['#2', '#3', 'is equal to five']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']""]","[""SELECT['images']"", ""PROJECT['balloons in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""BOOLEAN['#3', 'is equal to five']""]"
NLVR2_dev_dev-400-3-1,If there is a balloon touching the wall or ceiling.,"[""SELECT['balloon']"", ""SELECT['wall']"", ""SELECT['ceiling']"", ""FILTER['#1', 'touching #2']"", ""FILTER['#1', 'touching #3']"", ""INTERSECTION['#1', '#4', '#5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least one']""]","[""SELECT['balloons']"", ""SELECT['wall']"", ""SELECT['ceiling']"", ""FILTER['#1', 'that is touching #2']"", ""FILTER['#1', 'that is touching #3']"", ""UNION['#4', '#5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least one']""]"
NLVR2_dev_dev-401-0-0,"If in one image, a necklace made of beaded safety pins strung in one row on a chain is displayed on a black mannequin form.","[""SELECT['necklace']"", ""SELECT['safety pins']"", ""FILTER['#2', 'that are beaded']"", ""FILTER['#1','made of #3']"", ""FILTER['#4', 'that is strung in one row']"", ""SELECT['chain']"", ""FILTER['#6', 'on #5']"", ""SELECT['mannequin form']"", ""FILTER['#8', 'that is black']"", ""FILTER['#7', 'displayed on #9']"", ""BOOLEAN['#10', 'is in one image']""]","[""SELECT['necklace']"", ""SELECT['safety pins']"", ""FILTER['#2', 'that are beaded']"", ""FILTER['#1', 'that is made of #3']"", ""FILTER['#4', 'that is strung in one row']"", ""SELECT['chain']"", ""FILTER['#5', 'on #6']"", ""SELECT['mannequin form']"", ""FILTER['#8', 'that is black']"", ""FILTER['#7', 'displayed on #9']"", ""BOOLEAN['#10', 'is in one image']""]"
NLVR2_dev_dev-40-1-1,If brown fuzzy penguins are in the background but not the foreground of the right image.,"[""SELECT['right image']"", ""PROJECT['penguins in #REF', '#1']"", ""FILTER['#2', 'that are fuzzy']"", ""FILTER['#3', 'that are brown']"", ""BOOLEAN['#4', 'are in the background']"", ""PROJECT['foreground of #REF', '#1']"", ""BOOLEAN['#5', 'is false']"", ""BOOLEAN['logical_and', 'true', '#6', '#7']""]","[""SELECT['right image']"", ""PROJECT['penguins in #REF', '#1']"", ""FILTER['#2', 'that are fuzzy']"", ""FILTER['#3', 'that are brown']"", ""BOOLEAN['#4', 'are in the background']"", ""PROJECT['foreground of #REF', '#1']"", ""BOOLEAN['#5', 'is false']"", ""BOOLEAN['logical_and', 'true', '#7', '#6']""]"
NLVR2_dev_dev-401-2-1,If the bracelet in the image on the left is made up of pink beads.,"[""SELECT['left image']"", ""PROJECT['bracelet in #REF', '#1']"", ""SELECT['beads']"", ""FILTER['#3', 'that are pink']"", ""BOOLEAN['#2', 'is made up of #4']""]","[""SELECT['left image']"", ""PROJECT['bracelet in #REF', '#1']"", ""SELECT['beads']"", ""FILTER['#3', 'that are pink']"", ""BOOLEAN['#2', 'are made up of #4']""]"
NLVR2_dev_dev-40-2-0,If there is a snow covered mountain in the right image.,"[""SELECT['mountain']"", ""FILTER['#1', 'that is snow covered']"", ""BOOLEAN['#2', 'is in the right image']""]","[""SELECT['mountain']"", ""FILTER['#1', 'that is snow covered']"", ""BOOLEAN['#2', 'is in right image']""]"
NLVR2_dev_dev-402-1-0,If an image shows at least one hamster inside a yellow container with animal ears.,"[""SELECT['hamsters']"", ""SELECT['container']"", ""FILTER['#2', 'that is yellow']"", ""SELECT['animal ears']"", ""FILTER['#3', 'with #4']"", ""FILTER['#1', 'inside #5']"", ""PROJECT['images of #REF', '#6']"", ""GROUP['count', '#6', '#7']"", ""COMPARATIVE['#7', '#8', 'is at least one']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to one']""]","[""SELECT['hamsters']"", ""SELECT['container']"", ""FILTER['#2', 'that is yellow']"", ""SELECT['animal ears']"", ""FILTER['#3', 'with #4']"", ""FILTER['#1', 'inside #5']"", ""PROJECT['images of #REF', '#6']"", ""GROUP['count', '#6', '#7']"", ""COMPARATIVE['#7', '#8', 'is at least one']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to one']""]."
NLVR2_dev_dev-402-1-1,If one mouse is eating.,"[""SELECT['mice']"", ""FILTER['#1', 'that is eating']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']""]","[""SELECT['mouses']"", ""FILTER['#1', 'that are eating']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']""]"
NLVR2_dev_dev-403-3-1,If all of the animals are standing around water.,"[""SELECT['animals']"", ""SELECT['water']"", ""FILTER['#1','standing around #2']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to #5']""]","[""SELECT['animals']"", ""SELECT['water']"", ""BOOLEAN['#1', 'are standing around #2']""]"
NLVR2_dev_dev-404-0-0,If two parrots facing opposite directions are perched on the same branch and have overlapping bodies.,"[""SELECT['parrots']"", ""PROJECT['branch of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is the same']"", ""PROJECT['bodies of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'are overlapping']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to two']""]","[""SELECT['parrots']"", ""PROJECT['branch of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is the same']"", ""PROJECT['bodies of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'are overlapping']"", ""INTERSECTION['#3', '#5', '#6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to two']""]"
NLVR2_dev_dev-404-0-1,"If two parrots are perched on the same branch, and at least two parrots are perched on separate branches.","[""SELECT['parrots']"", ""SELECT['branches']"", ""FILTER['#1', 'that are perched on #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']"", ""FILTER['#1', 'that are separate']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least two']"", ""BOOLEAN['logical_and', 'true', '#7', '#8']""]","[""SELECT['branches']"", ""PROJECT['parrots perched on #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is equal to two']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least two']"", ""SELECT['branches']"", ""FILTER['#8', 'that are separate']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is at least two']"", ""BOOLEAN['logical_and', 'true', '#7', '#11']""]"
NLVR2_dev_dev-405-0-0,If the left and right image contains a total of three crosses.,"[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['crosses in #REF', '#1']"", ""PROJECT['crosses in #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['sum', '#5', '#6']"", ""BOOLEAN['#7', 'is equal to three']""]","[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['crosses in #REF', '#1']"", ""PROJECT['crosses in #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['sum', '#5', '#6']"", ""BOOLEAN['#7', 'is equal to two']""]"
NLVR2_dev_dev-405-0-1,If both images have crosses.,"[""SELECT['crosses']"", ""PROJECT['images of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']""]","[""SELECT['crosses']"", ""BOOLEAN['#1', 'is in both images']""]"
NLVR2_dev_dev-406-0-0,"If each image contains one black frontward-facing dog, and one of the dogs pictured has its pink tongue showing.","[""SELECT['images']"", ""PROJECT['dogs in #REF', '#1']"", ""FILTER['#2', 'that are black']"", ""FILTER['#3', 'that are frontward-facing']"", ""GROUP['count', '#4', '#1']"", ""COMPARATIVE['#1', '#5', 'is equal to one']"", ""AGGREGATE['count', '#6']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#7', 'is equal to #8']"", ""PROJECT['tongue of #REF', '#9']"", ""COMPARATIVE['#9', '#10', 'is pink']"", ""BOOLEAN['#11', 'is showing']"", ""BOOLEAN['logical_and', 'true', '#6', '#12']""]","[""SELECT['images']"", ""PROJECT['dogs in #REF', '#1']"", ""FILTER['#2', 'that are frontward-facing']"", ""FILTER['#3', 'that are black']"", ""GROUP['count', '#4', '#1']"", ""COMPARATIVE['#1', '#5', 'is equal to one']"", ""AGGREGATE['count', '#6']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#7', 'is equal to #8']"", ""PROJECT['tongue of #REF', '#9']"", ""COMPARATIVE['#9', '#10', 'is pink']"", ""BOOLEAN['#11', 'is showing']"", ""BOOLEAN['logical_and', 'true', '#6', '#12']""]"
NLVR2_dev_dev-407-0-1,If there is a black drum set with at least three cymbal and a mixing dock attach to the bar on the left side of the set.,"[""SELECT['drum set']"", ""FILTER['#1', 'that is black']"", ""PROJECT['cymbals of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least three']"", ""SELECT['mixing dock']"", ""SELECT['bar']"", ""FILTER['#7', 'on the left side of #6']"", ""BOOLEAN['#8', 'attach to #9']"", ""BOOLEAN['logical_and', 'true', '#5', '#10']""]","[""SELECT['drum set']"", ""FILTER['#1', 'that is black']"", ""PROJECT['cymbals of #REF', '#2']"", ""GROUP['count', '#3', '#2']"", ""COMPARATIVE['#2', '#4', 'is at least three']"", ""SELECT['mixing dock']"", ""SELECT['bar']"", ""FILTER['#7', 'on the left side of #6']"", ""BOOLEAN['#5', 'attach to #8']""]"
NLVR2_dev_dev-408-2-1,"If each image shows exactly one pair of gloves, and all gloves have fingers.","[""SELECT['pairs of gloves']"", ""SELECT['images']"", ""GROUP['count', '#1', '#2']"", ""COMPARATIVE['#2', '#3', 'is equal to one']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to #6']"", ""FILTER['#1', 'that have fingers']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to #10']"", ""BOOLEAN['logical_and', 'true', '#7', '#11']""]","[""SELECT['pairs of gloves']"", ""SELECT['images']"", ""GROUP['count', '#1', '#2']"", ""COMPARATIVE['#2', '#3', 'is equal to one']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to #6']"", ""FILTER['#1', 'that have fingers']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to #10']"", ""BOOLEAN['logical_and', 'true', '#7', '#11']""]"
NLVR2_dev_dev-409-2-0,If the full body of a jelly fish is visible in the left image.,"[""SELECT['left image']"", ""PROJECT['jelly fish in #REF', '#1']"", ""PROJECT['full body of #REF', '#2']"", ""BOOLEAN['#3', 'is visible']""]","[""SELECT['jelly fish']"", ""PROJECT['full body of #REF', '#1']"", ""BOOLEAN['#2', 'is in the left image']""]"
NLVR2_dev_dev-41-0-0,If there are three chow dogs in the image pair.,"[""SELECT['images']"", ""PROJECT['chow dogs in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to three']""]","[""SELECT['image pair']"", ""PROJECT['chow dogs of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to three']""]"
NLVR2_dev_dev-410-0-0,If at least one bird has it's beak wide open.,"[""SELECT['birds']"", ""PROJECT['beak of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is wide open']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']""]","[""SELECT['birds']"", ""PROJECT['beaks of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are wide open']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']""]"
NLVR2_dev_dev-410-1-1,If there is at least 1 bird near water in the right image.,"[""SELECT['right image']"", ""PROJECT['bird in #REF', '#1']"", ""PROJECT['water in #REF', '#1']"", ""FILTER['#2', 'that is near #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']""]","[""SELECT['the right image']"", ""PROJECT['birds in #REF', '#1']"", ""PROJECT['water in #REF', '#1']"", ""FILTER['#2', 'that are near #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']""]"
NLVR2_dev_dev-411-0-0,If only one of the two images shows an actual dog.,"[""SELECT['dog']"", ""FILTER['#1', 'that is actual']"", ""PROJECT['images of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]","[""SELECT['dog']"", ""FILTER['#1', 'that is real']"", ""PROJECT['images of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']""]"
NLVR2_dev_dev-411-3-1,If there are at least 2 dogs next to each other.,"[""SELECT['dogs']"", ""FILTER['#1', 'that are next to each other']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least two']""]","[""SELECT['dogs']"", ""FILTER['#1', 'that are next to each other']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least 2']""]"
NLVR2_dev_dev-412-1-0,If there are four fruits in total.,"[""SELECT['fruits']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to four']""]","[""SELECT['fruits']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to four']""]."
NLVR2_dev_dev-412-1-1,If there is at least one apple next to the oranges.,"[""SELECT['apples']"", ""SELECT['oranges']"", ""FILTER['#1', 'next to #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']""]","[""SELECT['apple']"", ""SELECT['oranges']"", ""FILTER['#1', 'that is next to #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']""]"
NLVR2_dev_dev-41-3-1,If the right image contains one chow dog outside on grass.,"[""SELECT['the right image']"", ""PROJECT['chow dogs in #REF', '#1']"", ""FILTER['#2', 'that are outside']"", ""PROJECT['grass in #REF', '#1']"", ""FILTER['#3', 'on #4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']""]","[""SELECT['right image']"", ""PROJECT['chow dogs in #REF', '#1']"", ""FILTER['#2', 'that are outside']"", ""PROJECT['grass in #REF', '#1']"", ""FILTER['#3', 'on #4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']""]"
NLVR2_dev_dev-413-1-0,If the left and right image contains the same number of white bowls of mashed potatoes.,"[""SELECT['mashed potatoes']"", ""PROJECT['bowls of #REF', '#1']"", ""FILTER['#2', 'that are white']"", ""SELECT['left image']"", ""SELECT['right image']"", ""FILTER['#3', 'in #4']"", ""FILTER['#3', 'in #5']"", ""AGGREGATE['count', '#6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to #9']""]","[""SELECT['mashed potatoes']"", ""PROJECT['bowls of #REF', '#1']"", ""FILTER['#2', 'that are white']"", ""SELECT['left image']"", ""SELECT['right image']"", ""FILTER['#3', 'in #4']"", ""FILTER['#3', 'in #5']"", ""AGGREGATE['count', '#6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#4', 'is equal to #8']""]"
NLVR2_dev_dev-413-3-1,If one of these dishes has chives/scallions.,"[""SELECT['dishes']"", ""SELECT['chives/scallions']"", ""FILTER['#1', 'that has #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]","[""SELECT['dishes']"", ""SELECT['chives/scallions']"", ""FILTER['#1', 'with #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]"
NLVR2_dev_dev-414-2-0,If one of the images shows a cat and a dog lying together.,"[""SELECT['cat']"", ""SELECT['dog']"", ""FILTER['#1', 'that is lying together with #2']"", ""BOOLEAN['#3', 'is in one of the images']""]","[""SELECT['cat']"", ""SELECT['dog']"", ""BOOLEAN['#1', 'is lying together with #2']""]"
NLVR2_dev_dev-415-0-1,If there is a chair in the left pic,"[""SELECT['chair']"", ""BOOLEAN['#1', 'is in the left pic']""]","[""SELECT['chair']"", ""BOOLEAN['#1', 'is in left pic']""]"
NLVR2_dev_dev-415-1-0,If there is one glass of red wine under a setting sun in one of the images.,"[""SELECT['glass of wine']"", ""FILTER['#1', 'that is red']"", ""SELECT['setting sun']"", ""FILTER['#2', 'under #3']"", ""PROJECT['images of #REF', '#4']"", ""GROUP['count', '#4', '#5']"", ""COMPARATIVE['#5', '#6', 'is equal to one']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to one']""]","[""SELECT['glass of wine']"", ""FILTER['#1', 'that is red']"", ""SELECT['sun']"", ""FILTER['#3', 'that is setting']"", ""FILTER['#2', 'under #4']"", ""PROJECT['images of #REF', '#5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']""]"
NLVR2_dev_dev-416-0-0,If all of the beetles are standing on top of the clods.,"[""SELECT['beetles']"", ""SELECT['clods']"", ""FILTER['#1','standing on top of #2']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to #5']""]","[""SELECT['beetles']"", ""SELECT['clods']"", ""FILTER['#1', 'that are standing on top of #2']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#5', 'is equal to #4']""."
NLVR2_dev_dev-416-1-1,If an image contains two beetles crawling on a dung ball.,"[""SELECT['beetles']"", ""SELECT['dung ball']"", ""FILTER['#1', 'crawling on #2']"", ""PROJECT['images of #REF', '#3']"", ""GROUP['count', '#3', '#4']"", ""COMPARATIVE['#4', '#5', 'is equal to two']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']""]","[""SELECT['beetles']"", ""SELECT['dung ball']"", ""FILTER['#1', 'crawling on #2']"", ""SELECT['images']"", ""GROUP['count', '#3', '#4']"", ""COMPARATIVE['#4', '#5', 'is equal to two']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least one']""]"
NLVR2_dev_dev-417-2-1,If there are more than 4 locks.,"[""SELECT['locks']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is higher than 4']""]","[""SELECT['locked']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is higher than 4']""]"
NLVR2_dev_dev-417-3-0,"If right image includes only one padlock shape, a square with a loop on the top.","[""SELECT['the right image']"", ""PROJECT['padlock shapes in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']"", ""FILTER['#2', 'that is square']"", ""PROJECT['top of #REF', '#5']"", ""SELECT['loop']"", ""COMPARATIVE['#5', '#6', 'has #7 on']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#4', '#10']""]","[""SELECT['the right image']"", ""PROJECT['padlock shapes in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']"", ""FILTER['#2', 'that are squares']"", ""PROJECT['top of #REF', '#5']"", ""SELECT['loop']"", ""COMPARATIVE['#5', '#6', 'has #7 on']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#5', '#10']""]"
NLVR2_dev_dev-418-1-1,"If there are two primates fighting, but only one is currently hitting the other.","[""SELECT['primates']"", ""FILTER['#1', 'that are fighting']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']"", ""FILTER['#1', 'that is hitting #4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#7', '#8']""]","[""SELECT['primatetes']"", ""FILTER['#1', 'that are fighting']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']"", ""FILTER['#1', 'that is currently hitting #4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#7', '#8']""]"
NLVR2_dev_dev-419-1-0,If a marmot is standing on its hind legs behind a camera on a tripod in one image.,"[""SELECT['marmot']"", ""PROJECT['hind legs of #REF', '#1']"", ""FILTER['#1','standing on #2']"", ""SELECT['camera']"", ""SELECT['tripod']"", ""FILTER['#4', 'on #5']"", ""FILTER['#3', 'behind #6']"", ""BOOLEAN['#7', 'is in one image']""]","[""SELECT['marmot']"", ""PROJECT['hind legs of #REF', '#1']"", ""FILTER['#1', 'that is standing on #2']"", ""SELECT['camera']"", ""SELECT['tripod']"", ""FILTER['#4', 'on #5']"", ""FILTER['#3', 'behind #6']"", ""BOOLEAN['#7', 'is in one image']""."
NLVR2_dev_dev-419-1-1,If there are exactly three marmots.,"[""SELECT['marmots']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to three']""]","[""SELECT['mammals']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to three']""]"
NLVR2_dev_dev-420-0-0,If a bobby pin is pinned on a sweater with a collared shirt underneath,"[""SELECT['bobby pin']"", ""SELECT['sweater']"", ""SELECT['shirt']"", ""FILTER['#3', 'that is collared']"", ""FILTER['#2', 'with #4 underneath']"", ""BOOLEAN['#1', 'is pinned on #5']""]","[""SELECT['bobby pin']"", ""SELECT['sweater']"", ""SELECT['shirt']"", ""FILTER['#3', 'that is collared']"", ""BOOLEAN['#1', 'is underneath #4']""]"
NLVR2_dev_dev-420-0-1,If there is one open and one closed safety pin stuck through fabric.,"[""SELECT['safety pins']"", ""SELECT['fabric']"", ""FILTER['#1', 'that are stuck through #2']"", ""FILTER['#3', 'that are open']"", ""FILTER['#3', 'that are closed']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']"", ""BOOLEAN['#7', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#8', '#9']""]","[""SELECT['safety pins']"", ""SELECT['fabric']"", ""FILTER['#1', 'that is stuck through #2']"", ""FILTER['#3', 'that is open']"", ""FILTER['#3', 'that is closed']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']"", ""BOOLEAN['#7', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#8', '#9']""]"
NLVR2_dev_dev-42-1-0,If at least one bird is perched on a branch.,"[""SELECT['birds']"", ""SELECT['branch']"", ""FILTER['#1', 'perched on #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']""]","[""SELECT['bird']"", ""SELECT['branch']"", ""FILTER['#1', 'perched on #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']""]"
NLVR2_dev_dev-42-1-1,"If each image contains just one bird, and the wires of a cage are behind the bird in one image.","[""SELECT['images']"", ""PROJECT['birds in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is equal to one']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#5', 'is equal to #6']"", ""SELECT['cage']"", ""PROJECT['wires of #REF', '#8']"", ""FILTER['#9', 'that are behind #10']"", ""BOOLEAN['#11', 'are in one image']"", ""BOOLEAN['logical_and', 'true', '#7', '#12']""]","[""SELECT['images']"", ""PROJECT['birds in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is equal to one']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#5', 'is equal to #6']"", ""SELECT['cage']"", ""PROJECT['wires of #REF', '#8']"", ""FILTER['#9', 'that are behind #10']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#7', '#13']""]"
NLVR2_dev_dev-421-1-0,If in at least one image there are no more than two vultures eating the carcass.,"[""SELECT['vultures']"", ""SELECT['carcass']"", ""FILTER['#1', 'eating #2']"", ""PROJECT['images of #REF', '#3']"", ""GROUP['count', '#3', '#4']"", ""COMPARATIVE['#4', '#5', 'is at most two']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least one']""]","[""SELECT['vultures']"", ""SELECT['carcass']"", ""FILTER['#1', 'eating #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at most two']""]"
NLVR2_dev_dev-421-1-1,"If the left image definitely contains a quadruped that might not be dead, while the right image does not.","[""SELECT['left image']"", ""PROJECT['quadruped in #REF', '#1']"", ""FILTER['#2', 'that might not be dead']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']"", ""SELECT['right image']"", ""PROJECT['quadruped in #REF', '#6']"", ""BOOLEAN['#7', 'is not dead']"", ""BOOLEAN['logical_and', 'true', '#5', '#8']""]","[""SELECT['left image']"", ""PROJECT['quadruped in #REF', '#1']"", ""FILTER['#2', 'that might not be dead']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']"", ""SELECT['right image']"", ""PROJECT['quadruped in #REF', '#6']"", ""BOOLEAN['#7', 'is false']"", ""BOOLEAN['logical_and', 'true', '#5', '#8']""]"
NLVR2_dev_dev-422-1-0,If the rodent in the image on the left is in a basin of water.,"[""SELECT['left image']"", ""PROJECT['rodent in #REF', '#1']"", ""PROJECT['basin of water in #REF', '#1']"", ""BOOLEAN['#2', 'is in #3']""]","[""SELECT['the left image']"", ""PROJECT['rodent in #REF', '#1']"", ""PROJECT['basin of water in #REF', '#1']"", ""BOOLEAN['#2', 'is in #3']""]"
NLVR2_dev_dev-422-3-1,If a total of two hamsters with wet fur are inside some type of water-filled basin.,"[""SELECT['hamsters']"", ""PROJECT['fur of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is wet']"", ""SELECT['basin']"", ""FILTER['#4', 'that is water-filled']"", ""FILTER['#3', 'inside #5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to two']""]","[""SELECT['hamsters']"", ""PROJECT['fur of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is wet']"", ""SELECT['basin']"", ""FILTER['#4', 'that is water-filled']"", ""FILTER['#3', 'inside #5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least two']""]"
NLVR2_dev_dev-423-1-1,If the left and right image contains the same number of people in the barber shop.,"[""SELECT['the left image']"", ""PROJECT['people in #REF', '#1']"", ""PROJECT['barber shop in #REF', '#1']"", ""FILTER['#2', 'in #3']"", ""AGGREGATE['count', '#4']"", ""SELECT['the right image']"", ""PROJECT['people in #REF', '#6']"", ""PROJECT['barber shop in #REF', '#6']"", ""FILTER['#7', 'in #8']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#5', 'is equal to #10']""]","[""SELECT['people']"", ""SELECT['barber shop']"", ""FILTER['#1', 'in #2']"", ""SELECT['left image']"", ""SELECT['right image']"", ""FILTER['#3', 'in #4']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to #8']""]"
NLVR2_dev_dev-423-3-0,If exactly two people are getting their hair cut.,"[""SELECT['people']"", ""FILTER['#1', 'that are getting their hair cut']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']""]","[""SELECT['people']"", ""PROJECT['hair of #REF', '#1']"", ""BOOLEAN['#2', 'are getting cut']""]"
NLVR2_dev_dev-424-3-0,If there are two bull terriers present.,"[""SELECT['bull terriers']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to two']""]","[""SELECT['bulls terriers']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to two']""]"
NLVR2_dev_dev-424-3-1,If none of the dogs are wearing leashes.,"[""SELECT['dogs']"", ""SELECT['leashes']"", ""FILTER['#1', 'wearing #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to zero']""]","[""SELECT['dogs']"", ""SELECT['leashes']"", ""FILTER['#1', 'that are wearing #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to zero']""]"
NLVR2_dev_dev-425-2-1,If in one of the images a train is not riding on rails.,"[""SELECT['train']"", ""SELECT['rails']"", ""FILTER['#1', 'riding on #2']"", ""DISCARD['#1', '#3']"", ""BOOLEAN['#4', 'is in one of the images']""]","[""SELECT['train']"", ""SELECT['rails']"", ""FILTER['#1', 'riding on #2']"", ""DISCARD['#1', '#3']"", ""BOOLEAN['#4', 'is in one image']""]"
NLVR2_dev_dev-426-1-0,If there are pillows on a chair.,"[""SELECT['pillows']"", ""SELECT['chair']"", ""BOOLEAN['#1', 'are on #2']""]","[""SELECT['pillows']"", ""SELECT['chair']"", ""FILTER['#1', 'on #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]"
NLVR2_dev_dev-427-0-1,"If the right image shows no more than two sled dogs and includes a blue-eyed dog, and the left image shows a dog with a red harness in the lead.","[""SELECT['right image']"", ""PROJECT['sled dogs in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at most two']"", ""PROJECT['dog in #REF', '#1']"", ""FILTER['#5', 'that is blue-eyed']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least one']"", ""SELECT['harness']"", ""FILTER['#9', 'that is red']"", ""PROJECT['lead of #REF', '#10']"", ""COMPARATIVE['#10', '#11', 'is in #12']"", ""BOOLEAN['logical_and', 'true', '#4', '#13']""]","[""SELECT['right image']"", ""PROJECT['sled dogs in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at most two']"", ""PROJECT['dog in #REF', '#1']"", ""FILTER['#5', 'that is blue-eyed']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least one']"", ""SELECT['harness']"", ""FILTER['#9', 'that is red']"", ""PROJECT['lead of #REF', '#10']"", ""BOOLEAN['logical_and', 'true', '#8', '#11']""]"
NLVR2_dev_dev-427-2-0,If the right image contains no more than two dogs.,"[""SELECT['the right image']"", ""PROJECT['dogs in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at most two']""]","[""SELECT['right image']"", ""PROJECT['dogs in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at most two']""]"
NLVR2_dev_dev-428-1-1,"If in each image, a woman is present posing with at least one large-breed dog.","[""SELECT['woman']"", ""SELECT['dog']"", ""FILTER['#2', 'that is large-breed']"", ""FILTER['#1', 'posing with #3']"", ""SELECT['images']"", ""GROUP['count', '#4', '#5']"", ""COMPARATIVE['#5', '#6', 'is at least one']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to #9']""]","[""SELECT['woman']"", ""SELECT['dog']"", ""FILTER['#2', 'that is large-breed']"", ""FILTER['#1', 'posing with #3']"", ""PROJECT['images of #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""SELECT['images']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#6', 'is equal to #8']""]"
NLVR2_dev_dev-428-2-0,If all of the dogs are near humans.,"[""SELECT['dogs']"", ""SELECT['humans']"", ""FILTER['#1', 'that are near #2']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#5', 'is equal to #4']""]","[""SELECT['dogs']"", ""SELECT['humans']"", ""FILTER['#1', 'that are near #2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#5', 'is equal to #4']""]"
NLVR2_dev_dev-429-0-0,If only blue cars can be seen in the image pair.,"[""SELECT['images']"", ""PROJECT['cars in #REF', '#1']"", ""FILTER['#2', 'that are blue']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to zero']""]","[""SELECT['images']"", ""PROJECT['cars in #REF', '#1']"", ""FILTER['#2', 'that are blue']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least two']""]"
NLVR2_dev_dev-429-1-1,If there is at least one car that is not blue.,"[""SELECT['cars']"", ""FILTER['#1', 'that are blue']"", ""DISCARD['#1', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']""]","[""SELECT['cars']"", ""FILTER['#1', 'that is not blue']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least one']""]"
NLVR2_dev_dev-430-2-1,If the image to the left shows a two pack of paper towels.,"[""SELECT['left image']"", ""PROJECT['pack of paper towels in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']""]","[""SELECT['pack of paper towels']"", ""FILTER['#1', 'that are in the image to the left']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']""]"
NLVR2_dev_dev-430-3-0,If an image features one multi-roll paper towel pack standing on a greyish surface in a home.,"[""SELECT['paper towel packs']"", ""FILTER['#1', 'that are multi-roll']"", ""SELECT['surface']"", ""FILTER['#3', 'that is greyish']"", ""SELECT['home']"", ""FILTER['#2','standing on #4']"", ""PROJECT['images of #REF', '#5']"", ""GROUP['count', '#5', '#6']"", ""COMPARATIVE['#6', '#7', 'is equal to one']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to one']""]","[""SELECT['paper towel packs']"", ""FILTER['#1', 'that are multi-roll']"", ""SELECT['surface']"", ""FILTER['#3', 'that is greyish']"", ""SELECT['home']"", ""FILTER['#2','standing on #4']"", ""SELECT['images']"", ""GROUP['count', '#5', '#6']"", ""COMPARATIVE['#6', '#7', 'is equal to one']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is at least one']""]"
NLVR2_dev_dev-4-3-1,If every bottle is green.,"[""SELECT['bottles']"", ""FILTER['#1', 'that are green']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to #4']""]","[""SELECT['bottles']"", ""FILTER['#1', 'that are green']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#4', 'is equal to #3']""]"
NLVR2_dev_dev-431-0-0,"If in one image, a long towel bar attached at the front of the sink area has at least two towels hanging on it.","[""SELECT['towel bar']"", ""FILTER['#1', 'that is long']"", ""SELECT['sink area']"", ""FILTER['#2', 'attached at the front of #3']"", ""SELECT['towels']"", ""FILTER['#5', 'hanging on #4']"", ""GROUP['count', '#6', '#4']"", ""COMPARATIVE['#4', '#7', 'is at least two']"", ""BOOLEAN['#8', 'is in one image']""]","[""SELECT['towel bar']"", ""FILTER['#1', 'that is long']"", ""SELECT['sink area']"", ""PROJECT['the front of #REF', '#3']"", ""FILTER['#2', 'attached at #4']"", ""SELECT['towels']"", ""FILTER['#6', 'hanging on #5']"", ""GROUP['count', '#7', '#5']"", ""COMPARATIVE['#5', '#8', 'is at least two']"", ""BOOLEAN['#9', 'is in one image']""]-"
NLVR2_dev_dev-43-1-1,"If both images contain jewelry with red, white and blue colors.","[""SELECT['jewelry']"", ""PROJECT['colors of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are red']"", ""COMPARATIVE['#1', '#2', 'are white']"", ""COMPARATIVE['#1', '#2', 'are blue']"", ""INTERSECTION['#1', '#3', '#4']"", ""PROJECT['images of #REF', '#5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to two']""]","[""SELECT['jewelry']"", ""PROJECT['colors of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is red']"", ""COMPARATIVE['#1', '#2', 'is white']"", ""COMPARATIVE['#1', '#2', 'is blue']"", ""INTERSECTION['#1', '#3', '#4']"", ""PROJECT['images of #REF', '#5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to two']""]"
NLVR2_dev_dev-431-3-1,If towels hang in front of the sink in one of the images.,"[""SELECT['towels']"", ""SELECT['the sink']"", ""FILTER['#1', 'that hang in front of #2']"", ""BOOLEAN['#3', 'are in one of the images']""]","[""SELECT['towels']"", ""SELECT['sink']"", ""FILTER['#1', 'that hang in front of #2']"", ""BOOLEAN['#3', 'are in one image']""]"
NLVR2_dev_dev-432-0-1,If there are two bowls of fruit salad.,"[""SELECT['bowls of fruit salad']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to two']""]","[""SELECT['bowls']"", ""SELECT['fruit salad']"", ""FILTER['#1', 'of #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'equal to two']""]"
NLVR2_dev_dev-432-3-0,"If bananas, strawberries and blueberries are in a bowl without a spoon inserted in it.","[""SELECT['bananas']"", ""SELECT['strawberries']"", ""SELECT['blueberries']"", ""SELECT['bowl']"", ""FILTER['#3', 'without spoon inserted in it']"", ""FILTER['#1', 'in #4']"", ""FILTER['#1', 'in #5']"", ""AGGREGATE['count', '#6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is at least two']"", ""BOOLEAN['#9', 'is at least two']"", ""BOOLEAN['logical_and', 'true', '#10', '#11']""]","[""SELECT['bananas']"", ""SELECT['strawberries']"", ""SELECT['blueberries']"", ""SELECT['bowl']"", ""FILTER['#3', 'without spoon inserted in it']"", ""FILTER['#1', 'in #4']"", ""FILTER['#1', 'in #2']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least two']"", ""BOOLEAN['#8', 'is at least two']"", ""BOOLEAN['logical_and', 'true', '#9', '#10']""]"
NLVR2_dev_dev-43-3-0,"If in the right image, there's an american flag made out of beads and safety pins.","[""SELECT['american flag']"", ""SELECT['beads']"", ""SELECT['safety pins']"", ""FILTER['#1','made out of #2']"", ""FILTER['#1','made out of #3']"", ""INTERSECTION['#1', '#4', '#5']"", ""BOOLEAN['#6', 'is in the right image']""]","[""SELECT['right image']"", ""PROJECT['american flag in #REF', '#1']"", ""SELECT['beads']"", ""SELECT['safety pins']"", ""FILTER['#2','made out of #3']"", ""FILTER['#4','made out of #5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least one']""]"
NLVR2_dev_dev-433-2-1,"If the right image contains one upright bottle with a flat flip-up lid on it, and the left image includes amber liquid in a bottle with a flip-top lid.","[""SELECT['right image']"", ""PROJECT['bottle in #REF', '#1']"", ""FILTER['#2', 'that is upright']"", ""PROJECT['lid of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is flat']"", ""COMPARATIVE['#3', '#4', 'is flip-up']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']"", ""SELECT['left image']"", ""PROJECT['bottle in #REF', '#8']"", ""PROJECT['lid of #REF', '#9']"", ""COMPARATIVE['#9', '#10', 'is flip-top']"", ""PROJECT['liquid in #REF', '#8']"", ""FILTER['#11', 'that is amber']"", ""FILTER['#12', 'in #13']"", ""AGGREGATE['count', '#14']"", ""BOOLEAN['#15', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#7', '#16']""]","[""SELECT['right image']"", ""PROJECT['bottle in #REF', '#1']"", ""FILTER['#2', 'that is upright']"", ""PROJECT['lid of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is flat']"", ""COMPARATIVE['#3', '#4', 'is flip-up']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']"", ""SELECT['left image']"", ""PROJECT['bottle in #REF', '#8']"", ""PROJECT['lid of #REF', '#9']"", ""COMPARATIVE['#9', '#10', 'is flip-top']"", ""PROJECT['liquid in #REF', '#8']"", ""FILTER['#11', 'that is amber']"", ""FILTER['#12', 'in #13']"", ""AGGREGATE['count', '#14']"", ""BOOLEAN['#16', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#7', '#17']""]"
NLVR2_dev_dev-433-3-0,If the left image contains a vanilla scented bath and shower gel.,"[""SELECT['bath and shower gel']"", ""FILTER['#1', 'that is vanilla scented']"", ""BOOLEAN['#2', 'is in the left image']""]","[""SELECT['left image']"", ""PROJECT['bath and shower gel in #REF', '#1']"", ""FILTER['#2', 'that is vanilla scented']"", ""BOOLEAN['#3', 'is in #4']""]"
NLVR2_dev_dev-434-0-0,If the train in the image on the right has red markings on the front and is facing right.,"[""SELECT['right image']"", ""PROJECT['train in #REF', '#1']"", ""PROJECT['front of #REF', '#2']"", ""PROJECT['markings on #REF', '#3']"", ""BOOLEAN['#4', 'are red']"", ""BOOLEAN['#2', 'is facing right']"", ""BOOLEAN['logical_and', 'true', '#5', '#6']""]","[""SELECT['right image']"", ""PROJECT['train in #REF', '#1']"", ""PROJECT['front of #REF', '#2']"", ""PROJECT['markings on #REF', '#3']"", ""COMPARATIVE['#2', '#4', 'are red']"", ""BOOLEAN['#5', 'is facing right']""]"
NLVR2_dev_dev-434-3-1,If the train in the left image has a design with red and blue painted stripes.,"[""SELECT['left image']"", ""PROJECT['train in #REF', '#1']"", ""PROJECT['design of #REF', '#2']"", ""PROJECT['stripes of #REF', '#3']"", ""BOOLEAN['#4', 'are red and blue painted']""]","[""SELECT['left image']"", ""PROJECT['train in #REF', '#1']"", ""PROJECT['design of #REF', '#2']"", ""PROJECT['stripes of #REF', '#3']"", ""FILTER['#4', 'that are painted red and blue']"", ""BOOLEAN['#5', 'has #6']""]"
NLVR2_dev_dev-435-0-1,"If in both images, there are people working on a staricase.","[""SELECT['people']"", ""SELECT['staricase']"", ""FILTER['#1', 'working on #2']"", ""PROJECT['images of #REF', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to two']""]","[""SELECT['people']"", ""SELECT['staricase']"", ""FILTER['#1', 'working on #2']"", ""PROJECT['images of #REF', '#3']"", ""BOOLEAN['#4', 'are equal']""]"
NLVR2_dev_dev-435-3-0,If stairs are being repaired.,"[""SELECT['stairs']"", ""BOOLEAN['#1', 'are being repaired']""]","[""SELECT['stairs']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is at least one']""]"
NLVR2_dev_dev-436-1-1,"If at least one paper roll stand is made of black horseshoes, and at least one holds a roll horizontally.","[""SELECT['paper roll stand']"", ""SELECT['horseshoes']"", ""FILTER['#2', 'that are black']"", ""FILTER['#1','made of #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']"", ""SELECT['roll']"", ""FILTER['#6', 'that holds #7 horizontally']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#7', '#10']""]","[""SELECT['paper roll stands']"", ""SELECT['horses']"", ""FILTER['#2', 'that are black']"", ""FILTER['#1','made of #3']"", ""FILTER['#1', 'that holds #3 horizontally']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']"", ""BOOLEAN['#6', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#7', '#8']""]"
NLVR2_dev_dev-436-3-0,If there is a paper holder that is made from horse tack items in each image.,"[""SELECT['paper holder']"", ""SELECT['horse tack items']"", ""FILTER['#1','made from #2']"", ""PROJECT['images of #REF', '#3']"", ""AGGREGATE['count', '#4']"", ""SELECT['images']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#5', 'is equal to #7']""]","[""SELECT['paper holder']"", ""SELECT['horse tack items']"", ""FILTER['#1','made from #2']"", ""BOOLEAN['#3', 'is in each image']""]"
NLVR2_dev_dev-437-0-0,If there is a total of four dumbbells.,"[""SELECT['dumbbells']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to four']""]","[""SELECT['dumbbells']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to four']""]-"
NLVR2_dev_dev-437-0-1,If there are exactly four dumbbells.,"[""SELECT['dumbbells']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to four']""]","[""SELECT['dumbells']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to four']""]"
NLVR2_dev_dev-438-2-0,"If the left image shows mashed potatoes in a round brown bowl with a spoon near it, and the right image shows mashed potatoes in an oblong bowl.","[""SELECT['mashed potatoes']"", ""SELECT['bowl']"", ""FILTER['#2', 'that is round']"", ""FILTER['#3', 'that is brown']"", ""FILTER['#1', 'in #4']"", ""SELECT['spoon']"", ""FILTER['#5', 'with #6 near it']"", ""BOOLEAN['#7', 'is in the left image']"", ""FILTER['#1', 'that is oblong']"", ""BOOLEAN['#8', 'is in the right image']"", ""BOOLEAN['logical_and', 'true', '#4', '#9']""]","[""SELECT['mashed potatoes']"", ""SELECT['bowl']"", ""FILTER['#2', 'that is round']"", ""FILTER['#3', 'that is brown']"", ""FILTER['#1', 'with #4 near it']"", ""BOOLEAN['#5', 'is in the left image']"", ""FILTER['#1', 'that is oblong']"", ""BOOLEAN['#7', 'is in the right image']"", ""BOOLEAN['logical_and', 'true', '#6', '#8']""]"
NLVR2_dev_dev-438-2-1,If in at least one image there is a wooden bowl and a spoon on the table.,"[""SELECT['bowl']"", ""FILTER['#1', 'that is wooden']"", ""SELECT['spoon']"", ""SELECT['table']"", ""FILTER['#2', 'on #4']"", ""BOOLEAN['#5', 'is in at least one image']"", ""BOOLEAN['#6', 'is in at least one image']"", ""BOOLEAN['logical_and', 'true', '#7', '#8']""]","[""SELECT['bowl']"", ""FILTER['#1', 'that is wooden']"", ""SELECT['spoon']"", ""SELECT['table']"", ""FILTER['#2', 'that is on #4']"", ""BOOLEAN['#5', 'is in at least one image']"", ""BOOLEAN['#6', 'is in at least one image']"", ""BOOLEAN['logical_and', 'true', '#7', '#8']""."
NLVR2_dev_dev-439-1-0,If a pair of hands is wearing gloves in one of the images.,"[""SELECT['pair of hands']"", ""SELECT['gloves']"", ""FILTER['#1', 'wearing #2']"", ""BOOLEAN['#3', 'is in one image']""]","[""SELECT['pair of hands']"", ""SELECT['gloves']"", ""FILTER['#1', 'that is wearing #2']"", ""BOOLEAN['#3', 'is in one image']""]"
NLVR2_dev_dev-439-3-1,"If in one image, a pair of mittens is modeled on human hands, while a pair in a second image, with one mitten face up and one face down, is not.","[""SELECT['one image']"", ""PROJECT['pair of mittens in #REF', '#1']"", ""PROJECT['human hands in #REF', '#1']"", ""BOOLEAN['#2', 'are modeled on #3']"", ""SELECT['second image']"", ""PROJECT['mittens in #REF', '#5']"", ""FILTER['#6', 'that are face up']"", ""FILTER['#7', 'that are down']"", ""AGGREGATE['count', '#8']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to one']"", ""BOOLEAN['#11', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#6', '#12']""]","[""SELECT['one image']"", ""PROJECT['pair of mittens in #REF', '#1']"", ""PROJECT['hands in #REF', '#1']"", ""FILTER['#3', 'that are human']"", ""BOOLEAN['#2', 'are modeled on #4']"", ""SELECT['second image']"", ""PROJECT['mittens in #REF', '#6']"", ""FILTER['#7', 'that are face up']"", ""FILTER['#8', 'that are down']"", ""AGGREGATE['count', '#9']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is equal to one']"", ""BOOLEAN['#12', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#7', '#13']""]"
NLVR2_dev_dev-44-0-1,If the left and right image contains the same number broccoli head with their leave looking like a circle of sun rays around the head.,"[""SELECT['left image']"", ""PROJECT['broccoli head in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""SELECT['right image']"", ""PROJECT['broccoli head in #REF', '#4']"", ""PROJECT['leave of #REF', '#5']"", ""PROJECT['circle of sun rays around #REF', '#5']"", ""COMPARATIVE['#5', '#6', 'is looking like #7']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to #10']""]","[""SELECT['left image']"", ""PROJECT['broccoli head in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""SELECT['right image']"", ""PROJECT['broccoli head in #REF', '#4']"", ""PROJECT['leave of #REF', '#5']"", ""PROJECT['circle of sun rays around #REF', '#5']"", ""BOOLEAN['#3', 'is looking like #6']"", ""BOOLEAN['logical_and', 'true', '#7', '#8']""]"
NLVR2_dev_dev-440-2-0,If there is a single beetle on a clod of dirt in each of the images.,"[""SELECT['beetles']"", ""SELECT['clod of dirt']"", ""FILTER['#1', 'on #2']"", ""PROJECT['images of #REF', '#3']"", ""GROUP['count', '#3', '#4']"", ""COMPARATIVE['#4', '#5', 'is equal to one']"", ""AGGREGATE['count', '#6']"", ""SELECT['images']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to #9']""]","[""SELECT['beetles']"", ""SELECT['clod of dirt']"", ""FILTER['#1', 'on #2']"", ""PROJECT['images of #REF', '#3']"", ""GROUP['count', '#3', '#4']"", ""COMPARATIVE['#4', '#5', 'is equal to one']"", ""AGGREGATE['count', '#6']"", ""SELECT['images']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#7', 'is equal to #9']""]"
NLVR2_dev_dev-440-3-1,If each image contains a single beetle in contact with a single rounded dung ball.,"[""SELECT['beetle']"", ""SELECT['dung ball']"", ""FILTER['#2', 'that is rounded']"", ""FILTER['#1', 'in contact with #3']"", ""SELECT['images']"", ""GROUP['count', '#4', '#5']"", ""COMPARATIVE['#5', '#6', 'is equal to one']"", ""AGGREGATE['count', '#7']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to #10']""]","[""SELECT['beetle']"", ""SELECT['dung ball']"", ""FILTER['#2', 'that is rounded']"", ""FILTER['#1', 'in contact with #3']"", ""PROJECT['images of #REF', '#4']"", ""GROUP['count', '#4', '#5']"", ""COMPARATIVE['#5', '#6', 'is equal to one']"", ""AGGREGATE['count', '#7']"", ""SELECT['images']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to #10']""]"
NLVR2_dev_dev-441-0-1,If the left side of a bus is visible.,"[""SELECT['bus']"", ""PROJECT['left side of #REF', '#1']"", ""BOOLEAN['#2', 'is visible']""]","[""SELECT['bus']"", ""PROJECT['the left side of #REF', '#1']"", ""BOOLEAN['#2', 'is visible']""]"
NLVR2_dev_dev-44-2-0,If in the left image the leaves take up more space than the broccoli.,"[""SELECT['left image']"", ""PROJECT['leaves in #REF', '#1']"", ""PROJECT['broccoli in #REF', '#1']"", ""PROJECT['space that #REF take up', '#2']"", ""PROJECT['space that #REF take up', '#3']"", ""BOOLEAN['#4', 'is higher than #5']""]","[""SELECT['left image']"", ""PROJECT['leaves in #REF', '#1']"", ""PROJECT['broccoli in #REF', '#1']"", ""PROJECT['space taken up by #REF', '#2']"", ""PROJECT['space taken up by #REF', '#3']"", ""BOOLEAN['#4', 'is higher than #5']""]"
NLVR2_dev_dev-442-0-1,If the image on the left shows two sliced pizzas.,"[""SELECT['left image']"", ""PROJECT['pizzas in #REF', '#1']"", ""FILTER['#2', 'that are sliced']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']""]","[""SELECT['the image on the left']"", ""PROJECT['pizzas in #REF', '#1']"", ""FILTER['#2', 'that are sliced']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']""]"
NLVR2_dev_dev-442-2-0,If there are three or more pizzas.,"[""SELECT['pizzas']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is at least three']""]","[""SELECT['pizzas']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is three or more']""]"
NLVR2_dev_dev-443-2-1,If in the left image a human with a sleeve tattoo is touching a dog.,"[""SELECT['human']"", ""SELECT['sleeve tattoo']"", ""FILTER['#1', 'with #2']"", ""SELECT['dog']"", ""BOOLEAN['#3', 'is touching #4']""]","[""SELECT['human']"", ""SELECT['sleeve tattoo']"", ""FILTER['#1', 'that is with #2']"", ""SELECT['dog']"", ""BOOLEAN['#3', 'is touching #4']""]"
NLVR2_dev_dev-443-3-0,If an image contains two side-by-side dogs which are each wearing a garment that is not just a collar.,"[""SELECT['dogs']"", ""FILTER['#1', 'that are side-by-side']"", ""SELECT['garment']"", ""FILTER['#3', 'that is not just a collar']"", ""FILTER['#2', 'wearing #4']"", ""PROJECT['images of #REF', '#5']"", ""GROUP['count', '#5', '#6']"", ""COMPARATIVE['#6', '#7', 'is equal to two']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to one']""]","[""SELECT['dogs']"", ""FILTER['#1', 'that are side-by-side']"", ""SELECT['garment']"", ""FILTER['#3', 'that is not just a collar']"", ""FILTER['#2', 'wearing #4']"", ""SELECT['images']"", ""GROUP['count', '#5', '#6']"", ""COMPARATIVE['#6', '#7', 'is equal to two']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is at least one']""]"
NLVR2_dev_dev-444-2-0,If in at least one image there is a plastic bottle that is cover in blue knitted stripes.,"[""SELECT['bottle']"", ""FILTER['#1', 'that is plastic']"", ""PROJECT['cover of #REF', '#2']"", ""SELECT['stripes']"", ""FILTER['#4', 'that are knitted']"", ""FILTER['#5', 'that are blue']"", ""FILTER['#3', 'that has #6']"", ""BOOLEAN['#7', 'is in at least one image']""]","[""SELECT['bottle']"", ""FILTER['#1', 'that is plastic']"", ""PROJECT['cover of #REF', '#2']"", ""PROJECT['stripes of #REF', '#3']"", ""COMPARATIVE['#2', '#4', 'are blue knitted']"", ""BOOLEAN['#5', 'is in at least one image']""]"
NLVR2_dev_dev-445-2-0,If the single dog in the image on the right is lying down.,"[""SELECT['right image']"", ""PROJECT['dog in #REF', '#1']"", ""BOOLEAN['#2', 'is lying down']""]","[""SELECT['the image on the right']"", ""PROJECT['dogs in #REF', '#1']"", ""BOOLEAN['#2', 'are lying down']""]"
NLVR2_dev_dev-445-2-1,"If each image contains exactly one white dog, and the lefthand dog has its tongue extended past its teeth and lip.","[""SELECT['images']"", ""PROJECT['dogs in #REF', '#1']"", ""FILTER['#2', 'that are white']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is equal to one']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#6', 'is equal to #7']"", ""FILTER['#1', 'that is lefthand']"", ""PROJECT['tongue of #REF', '#8']"", ""PROJECT['teeth of #REF', '#8']"", ""PROJECT['lip of #REF', '#8']"", ""BOOLEAN['#9', 'is extended past #10']"", ""BOOLEAN['logical_and', 'true', '#7', '#11']""]","[""SELECT['images']"", ""PROJECT['dogs in #REF', '#1']"", ""FILTER['#2', 'that are white']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is equal to one']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#6', 'is equal to #7']"", ""FILTER['#1', 'that is lefthand']"", ""PROJECT['tongue of #REF', '#8']"", ""PROJECT['teeth of #REF', '#8']"", ""PROJECT['lip of #REF', '#8']"", ""COMPARATIVE['#8', '#10', 'is extended past #11']"", ""COMPARATIVE['#8', '#12', 'is extended past #13']"", ""INTERSECTION['#8', '#14', '#15']"", ""AGGREGATE['count', '#16']"", ""BOOLEAN['#17', 'is equal to #11']""]"
NLVR2_dev_dev-446-3-0,If one image shows exactly three keys displayed on the right side of a non-round lock.,"[""SELECT['keys']"", ""SELECT['lock']"", ""FILTER['#2', 'that is non-round']"", ""FILTER['#1', 'displayed on the right side of #3']"", ""PROJECT['images of #REF', '#4']"", ""GROUP['count', '#4', '#5']"", ""COMPARATIVE['#5', '#6', 'is equal to three']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to one']""]","[""SELECT['keys']"", ""SELECT['lock']"", ""FILTER['#2', 'that is non-round']"", ""BOOLEAN['#1', 'are displayed on the right side of #3']""]"
NLVR2_dev_dev-446-3-1,If the left image contains one lock with two keys.,"[""SELECT['the left image']"", ""PROJECT['locks in #REF', '#1']"", ""PROJECT['keys in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']"", ""BOOLEAN['#5', 'is equal to two']"", ""BOOLEAN['logical_and', 'true', '#6', '#7']""]","[""SELECT['left image']"", ""PROJECT['locks in #REF', '#1']"", ""PROJECT['keys in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']"", ""BOOLEAN['#5', 'is equal to two']"", ""BOOLEAN['logical_and', 'true', '#6', '#7']""]"
NLVR2_dev_dev-447-0-1,If the screens in the left and right images face the same direction.,"[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['screens in #REF', '#1']"", ""PROJECT['screens in #REF', '#2']"", ""PROJECT['direction that #REF face', '#3']"", ""PROJECT['direction that #REF face', '#4']"", ""BOOLEAN['#5', 'is the same as #6']""]","[""SELECT['the left image']"", ""PROJECT['screens in #REF', '#1']"", ""PROJECT['direction that #REF face', '#2']"", ""SELECT['the right image']"", ""PROJECT['screens in #REF', '#4']"", ""PROJECT['direction that #REF face', '#5']"", ""BOOLEAN['#6', 'is the same as #7']""]"
NLVR2_dev_dev-447-1-0,If at least one of the laptop screens shows an image of an animal.,"[""SELECT['laptop screens']"", ""SELECT['animal']"", ""FILTER['#1', 'that shows #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']""]","[""SELECT['laptops']"", ""PROJECT['screens of #REF', '#1']"", ""SELECT['animal']"", ""PROJECT['image of #REF', '#3']"", ""FILTER['#2', 'that shows #4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least one']""]"
NLVR2_dev_dev-448-3-0,If there are two objects inside both bed nets.,"[""SELECT['bed nets']"", ""PROJECT['objects inside #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']""]","[""SELECT['bed nets']"", ""SELECT['objects']"", ""FILTER['#2', 'that are inside #1']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']""]"
NLVR2_dev_dev-448-3-1,"If the left image shows a blue-trimmed dome canopy on a beige rug, with one plush animal next to a cushion shape under the canopy.","[""SELECT['left image']"", ""PROJECT['dome canopy in #REF', '#1']"", ""FILTER['#2', 'that is blue-trimmed']"", ""PROJECT['rug in #REF', '#1']"", ""FILTER['#4', 'that is beige']"", ""FILTER['#3', 'on #5']"", ""PROJECT['plush animal in #REF', '#6']"", ""PROJECT[' cushion shape in #REF', '#6']"", ""FILTER['#7', 'next to #8']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to one']""]","[""SELECT['left image']"", ""PROJECT['dome canopy in #REF', '#1']"", ""FILTER['#2', 'that is blue-trimmed']"", ""PROJECT['rug in #REF', '#1']"", ""FILTER['#4', 'that is beige']"", ""FILTER['#3', 'on #5']"", ""PROJECT['plush animal in #REF', '#6']"", ""PROJECT[' cushion shape in #REF', '#6']"", ""FILTER['#7', 'that is next to #8']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to one']""]"
NLVR2_dev_dev-449-3-1,If the right image features one anemone with yellow tapered tendrils flowing from a stalk resembling a mushroom stem.,"[""SELECT['anemone']"", ""SELECT['tendrils']"", ""FILTER['#2', 'that are tapered']"", ""FILTER['#3', 'that are yellow']"", ""SELECT['stalk']"", ""SELECT['mushroom stem']"", ""FILTER['#5','resembling #6']"", ""FILTER['#1', 'flowing from #7']"", ""FILTER['#8', 'in the right image']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to one']""]","[""SELECT['anemone']"", ""SELECT['tendrils']"", ""FILTER['#2', 'that are tapered']"", ""FILTER['#3', 'that are yellow']"", ""SELECT['stalk']"", ""SELECT['mushroom stem']"", ""FILTER['#5','resembling #6']"", ""FILTER['#1', 'flowing from #7']"", ""FILTER['#8', 'in the right image']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to one']""]-"
NLVR2_dev_dev-45-1-1,"If in one of the images, a person is holding a dog's leg just above the paw.","[""SELECT['person']"", ""SELECT['dog']"", ""PROJECT['leg of #REF', '#2']"", ""PROJECT['paw of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is just above #4']"", ""BOOLEAN['#5', 'is in one image']""]","[""SELECT['person']"", ""SELECT['dog']"", ""PROJECT['leg of #REF', '#2']"", ""PROJECT['paw of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is just above #4']"", ""BOOLEAN['#5', 'is in one of the images']""]"
NLVR2_dev_dev-451-2-1,If there is a single brown llama with black ears and eyes staring at the vamera while its body is facing to the right,"[""SELECT['llama']"", ""FILTER['#1', 'that is brown']"", ""PROJECT['ears of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'are black']"", ""PROJECT['eyes of #REF', '#4']"", ""SELECT['vamera']"", ""FILTER['#5', 'that is staring at #6']"", ""PROJECT['body of #REF', '#7']"", ""COMPARATIVE['#7', '#8', 'is facing to the right']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to one']""]","[""SELECT['llama']"", ""FILTER['#1', 'that is brown']"", ""PROJECT['ears of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'are black']"", ""PROJECT['eyes of #REF', '#4']"", ""SELECT['vamera']"", ""FILTER['#5', 'that is staring at #6']"", ""PROJECT['body of #REF', '#7']"", ""BOOLEAN['#8', 'is facing to the right']""]"
NLVR2_dev_dev-451-3-0,If the left and right image contains the same number of standing llamas.,"[""SELECT['left image']"", ""PROJECT['llamas in #REF', '#1']"", ""FILTER['#2', 'that are standing']"", ""AGGREGATE['count', '#3']"", ""SELECT['right image']"", ""PROJECT['llamas in #REF', '#5']"", ""FILTER['#6', 'that are standing']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#4', 'is equal to #8']""]","[""SELECT['left image']"", ""PROJECT['llamas in #REF', '#1']"", ""FILTER['#2', 'that are standing']"", ""AGGREGATE['count', '#3']"", ""SELECT['right image']"", ""PROJECT['llamas in #REF', '#5']"", ""FILTER['#6', 'that are standing']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to #9']""]"
NLVR2_dev_dev-452-0-0,"If each image contains one dog, which is standing on all fours in the grass, and dogs in the left and right images are turned in the same general direction.","[""SELECT['images']"", ""PROJECT['dogs in #REF', '#1']"", ""PROJECT['the grass in #REF', '#1']"", ""FILTER['#2','standing on all fours']"", ""FILTER['#3', 'in #4']"", ""GROUP['count', '#5', '#1']"", ""COMPARATIVE['#1', '#6', 'is equal to one']"", ""AGGREGATE['count', '#7']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#8', 'is equal to #9']"", ""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['dogs in #REF', '#10']"", ""PROJECT['dogs in #REF', '#11']"", ""PROJECT['general direction turned in #REF', '#12']"", ""PROJECT['general direction turned in #REF', '#13']"", ""BOOLEAN['#14', 'is the same as #16']"", ""BOOLEAN['logical_and', 'true', '#7', '#17']""]","[""SELECT['images']"", ""PROJECT['dogs in #REF', '#1']"", ""PROJECT['grass in #REF', '#1']"", ""FILTER['#2','standing on all fours']"", ""FILTER['#3', 'in #4']"", ""GROUP['count', '#5', '#1']"", ""COMPARATIVE['#1', '#6', 'is equal to one']"", ""AGGREGATE['count', '#7']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#8', 'is equal to #9']"", ""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['dogs in #REF', '#10']"", ""PROJECT['dogs in #REF', '#11']"", ""PROJECT['general direction turned in #REF', '#12']"", ""PROJECT['general direction turned in #REF', '#13']"", ""BOOLEAN['#14', 'is the same as #15']"", ""BOOLEAN['logical_and', 'true', '#7', '#16']""]"
NLVR2_dev_dev-452-2-1,If at least one cocker spaniel is facing left.,"[""SELECT['cocker spaniels']"", ""FILTER['#1', 'that are facing left']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least one']""]","[""SELECT['cker spaniels']"", ""FILTER['#1', 'that are facing left']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least one']""]"
NLVR2_dev_dev-45-3-0,"If the dog on the right is being held by a human, the dog on the left is not.","[""SELECT['dogs']"", ""FILTER['#1', 'on the right']"", ""FILTER['#1', 'on the left']"", ""BOOLEAN['#2', 'is being held by a human']"", ""BOOLEAN['#3', 'is not being held by a human']"", ""BOOLEAN['logical_and', 'true', '#4', '#5']""]","[""SELECT['dog']"", ""FILTER['#1', 'on the right']"", ""FILTER['#1', 'on the left']"", ""BOOLEAN['#2', 'is being held by a human']"", ""BOOLEAN['#3', 'is not being held by a human']"", ""BOOLEAN['logical_and', 'true', '#4', '#5']""]"
NLVR2_dev_dev-453-0-1,If there are exactly two beakers.,"[""SELECT['beakers']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to two']""]","[""SELECT['beakers']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is exactly two']""]"
NLVR2_dev_dev-453-1-0,If there are two cup beakers with no additional pieces.,"[""SELECT['cup beakers']"", ""SELECT['extra pieces']"", ""FILTER['#1', 'with #2']"", ""DISCARD['#1', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to two']""]","[""SELECT['cup beakers']"", ""SELECT['pieces']"", ""FILTER['#2', 'that are additional']"", ""DISCARD['#2', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to two']""]"
NLVR2_dev_dev-454-0-1,If there are at least two clear dispensers.,"[""SELECT['dispensers']"", ""FILTER['#1', 'that are clear']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least two']""]","[""SELECT['dispenser']"", ""FILTER['#1', 'that are clear']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least two']""]"
NLVR2_dev_dev-454-3-0,If the left and right image contains the same number of clear glass soap dispensers.,"[""SELECT['soap dispensers']"", ""FILTER['#1', 'that are glass']"", ""FILTER['#2', 'that are clear']"", ""SELECT['left image']"", ""SELECT['right image']"", ""FILTER['#3', 'that are in #4']"", ""FILTER['#3', 'that are in #5']"", ""AGGREGATE['count', '#6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to #9']""]","[""SELECT['soap dispensers']"", ""FILTER['#1', 'that are clear']"", ""FILTER['#2', 'that are glass']"", ""SELECT['left image']"", ""SELECT['right image']"", ""FILTER['#3', 'that are in #4']"", ""FILTER['#3', 'that are in #5']"", ""AGGREGATE['count', '#6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to #9']""]"
NLVR2_dev_dev-455-0-0,"If there are two, and only two, people.","[""SELECT['people']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to two']"", ""BOOLEAN['#2', 'is equal to two']"", ""BOOLEAN['logical_and', 'true', '#3', '#4']""]","[""SELECT['people']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to two']"", ""BOOLEAN['#3', 'is equal to two']"", ""BOOLEAN['logical_and', 'true', '#4', '#5']""]"
NLVR2_dev_dev-455-1-1,If there are exactly two people.,"[""SELECT['people']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to two']""]","[""SELECT['person']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to two']""]"
NLVR2_dev_dev-456-0-1,"If in the right image, a person stands at a vending machine.","[""SELECT['person']"", ""SELECT['vending machine']"", ""FILTER['#1', 'that stands at #2']"", ""BOOLEAN['#3', 'is in the right image']""]","[""SELECT['person']"", ""SELECT['vending machine']"", ""BOOLEAN['#1','stands at #2']""]"
NLVR2_dev_dev-456-2-0,If a person stands directly in front of and facing a vending machine.,"[""SELECT['person']"", ""SELECT['vending machine']"", ""BOOLEAN['#1','stands directly in front of and facing #2']""]","[""SELECT['person']"", ""SELECT['vending machine']"", ""FILTER['#1', 'that stands directly in front of #2']"", ""FILTER['#3', 'that is facing #2']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']""]"
NLVR2_dev_dev-457-0-1,If in one of the images a pug dog is eating a slice of watermelon outside.,"[""SELECT['pug dog']"", ""FILTER['#1', 'that is outside']"", ""SELECT['slice of watermelon']"", ""FILTER['#2', 'eating #3']"", ""BOOLEAN['#4', 'is in one of the images']""]","[""SELECT['pug dog']"", ""FILTER['#1', 'that is outside']"", ""SELECT['slice of watermelon']"", ""FILTER['#2', 'eating #3']"", ""BOOLEAN['#4', 'is in one image']""]"
NLVR2_dev_dev-457-2-0,If one baby pug is eating a slice of watermelon.,"[""SELECT['pugs']"", ""FILTER['#1', 'that are babies']"", ""SELECT['slice of watermelon']"", ""FILTER['#2', 'eating #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']""]","[""SELECT['pugs']"", ""FILTER['#1', 'that are babies']"", ""SELECT['slice of watermelon']"", ""FILTER['#2', 'eating #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']""]-"
NLVR2_dev_dev-458-1-0,If one of the dogs is wading through water.,"[""SELECT['dogs']"", ""SELECT['water']"", ""FILTER['#1', 'wading through #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]","[""SELECT['dogs']"", ""SELECT['water']"", ""FILTER['#1', 'that is wading through #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]"
NLVR2_dev_dev-458-1-1,If at least one dog is in the water.,"[""SELECT['dogs']"", ""SELECT['water']"", ""FILTER['#1', 'in #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']""]","[""SELECT['dogs']"", ""SELECT['water']"", ""FILTER['#1', 'that is in #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']""]"
NLVR2_dev_dev-459-0-1,If some of the bottles are filled with grains.,"[""SELECT['bottles']"", ""SELECT['grains']"", ""FILTER['#1', 'filled with #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least two']""]","[""SELECT['bottles']"", ""SELECT['grains']"", ""FILTER['#1', 'that are filled with #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least two']""."
NLVR2_dev_dev-459-3-0,If in at least one image there are three soda bottles full of rice and beans.,"[""SELECT['soda bottles']"", ""SELECT['rice']"", ""SELECT['beans']"", ""FILTER['#1', 'full of #2']"", ""FILTER['#4', 'full of #3']"", ""SELECT['images']"", ""GROUP['count', '#5', '#6']"", ""COMPARATIVE['#6', '#7', 'is equal to three']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is at least one']""]","[""SELECT['soda bottles']"", ""SELECT['rice']"", ""SELECT['beans']"", ""FILTER['#1', 'full of #2']"", ""FILTER['#3', 'full of #4']"", ""SELECT['images']"", ""GROUP['count', '#5', '#6']"", ""COMPARATIVE['#6', '#7', 'is equal to three']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is at least one']""]-"
NLVR2_dev_dev-460-3-0,If there are 2 animals.,"[""SELECT['animals']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to two']""]","[""SELECT['animals']"", ""BOOLEAN['#1', 'are equal to two']""]"
NLVR2_dev_dev-460-3-1,If the lefthand image shows one basset hound sitting on a gray outdoor surface with a grid pattern.,"[""SELECT['lefthand image']"", ""PROJECT['basset hound in #REF', '#1']"", ""PROJECT['surface in #REF', '#1']"", ""FILTER['#3', 'that is gray']"", ""FILTER['#4', 'that is outdoor']"", ""FILTER['#5', 'that has a grid pattern']"", ""FILTER['#2','sitting on #6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to one']""]","[""SELECT['lefthand image']"", ""PROJECT['basset hound in #REF', '#1']"", ""PROJECT['surface in #REF', '#1']"", ""FILTER['#3', 'that is gray']"", ""FILTER['#4', 'that is outdoor']"", ""FILTER['#5', 'that has a grid pattern']"", ""FILTER['#2','sitting on #6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to one']”]"
NLVR2_dev_dev-461-0-1,If there at most one all white chihuahua in both images.,"[""SELECT['images']"", ""PROJECT['chihuahua in #REF', '#1']"", ""FILTER['#2', 'that are all white']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is at most one']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to two']""]","[""SELECT['chihuahua']"", ""FILTER['#1', 'that are all white']"", ""SELECT['images']"", ""GROUP['count', '#2', '#3']"", ""COMPARATIVE['#3', '#4', 'is at most one']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to two']""]"
NLVR2_dev_dev-46-1-1,If a marmot is peering out of a hole in the left image.,"[""SELECT['left image']"", ""PROJECT['marmot in #REF', '#1']"", ""PROJECT['hole in #REF', '#1']"", ""FILTER['#2', 'peeking out of #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']""]","[""SELECT['marmot']"", ""SELECT['hole']"", ""FILTER['#1', 'peeping out of #2']"", ""BOOLEAN['#3', 'is in the left image']""]"
NLVR2_dev_dev-461-1-0,"If all dogs shown are puppies in sitting poses, and the left image features a puppy sitting on folds of plush fabric.","[""SELECT['dogs']"", ""FILTER['#1', 'that are puppies']"", ""FILTER['#2', 'that are in sitting poses']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#5', 'is equal to #4']"", ""SELECT['left image']"", ""PROJECT['puppy in #REF', '#7']"", ""PROJECT['folds of plush fabric in #REF', '#7']"", ""FILTER['#8', 'that is sitting on #9']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#6', '#12']""]","[""SELECT['dogs']"", ""FILTER['#1', 'that are puppies']"", ""FILTER['#2', 'that are in sitting poses']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#5', 'is equal to #4']"", ""SELECT['left image']"", ""PROJECT['puppy in #REF', '#7']"", ""PROJECT['folds of plush fabric in #REF', '#7']"", ""FILTER['#8', 'that is sitting on #9']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#6', '#12']""]"
NLVR2_dev_dev-46-2-0,If there are exactly two living marmots.,"[""SELECT['marmots']"", ""FILTER['#1', 'that are living']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']""]","[""SELECT['marmots']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to two']""]"
NLVR2_dev_dev-462-0-1,If the left train is facing right and the right train is facing left.,"[""SELECT['trains']"", ""FILTER['#1', 'that is left']"", ""FILTER['#1', 'that is right']"", ""BOOLEAN['#2', 'is facing right']"", ""BOOLEAN['#3', 'is facing left']"", ""BOOLEAN['logical_and', 'true', '#4', '#5']""]","[""SELECT['trains']"", ""FILTER['#1', 'that are facing right']"", ""FILTER['#1', 'that are facing left']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']"", ""BOOLEAN['#5', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#6', '#7']""]"
NLVR2_dev_dev-463-0-0,If one of the photos contains a cheetah that is running.,"[""SELECT['cheetah']"", ""FILTER['#1', 'that is running']"", ""BOOLEAN['#2', 'is in one of the photos']""]","[""SELECT['cheetahs']"", ""FILTER['#1', 'that is running']"", ""BOOLEAN['#2', 'is in one of the photos']""]"
NLVR2_dev_dev-463-0-1,"If at least one of the images features a horned animal facing towards a cheetah, instead of running away.","[""SELECT['animal']"", ""FILTER['#1', 'that is horned']"", ""SELECT['cheetah']"", ""FILTER['#2', 'facing towards #3']"", ""BOOLEAN['#4', 'is in at least one of the images']""]","[""SELECT['animal']"", ""FILTER['#1', 'that is horned']"", ""SELECT['cheetah']"", ""FILTER['#2', 'facing towards #3']"", ""BOOLEAN['#4', 'is in at least one image']""]"
NLVR2_dev_dev-464-0-0,If there is a small puppy with its mother,"[""SELECT['puppy']"", ""FILTER['#1', 'that is small']"", ""PROJECT['mother of #REF', '#2']"", ""BOOLEAN['#2', 'is with #3']""]","[""SELECT['puppy']"", ""FILTER['#1', 'that is small']"", ""PROJECT['mother of #REF', '#2']"", ""BOOLEAN['#2', 'has #3']""]"
NLVR2_dev_dev-464-3-1,"If there is at least one large, white dog outside in the snow.","[""SELECT['dogs']"", ""FILTER['#1', 'that are large']"", ""FILTER['#2', 'that are white']"", ""FILTER['#3', 'that are outside']"", ""SELECT['the snow']"", ""FILTER['#4', 'in #5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least one']""]","[""SELECT['dog']"", ""FILTER['#1', 'that is large']"", ""FILTER['#2', 'that is white']"", ""FILTER['#3', 'that is outside']"", ""SELECT['snow']"", ""FILTER['#4', 'in #5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least one']""]"
NLVR2_dev_dev-465-1-1,If the left and right image contains at total of two boats.,"[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['boats in #REF', '#1']"", ""PROJECT['boats in #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['sum', '#5', '#6']"", ""BOOLEAN['#7', 'is equal to two']""]","[""SELECT['left image']"", ""SELECT['right image']"", ""PROJECT['boats in #REF', '#1']"", ""PROJECT['boats in #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['sum', '#5', '#6']"", ""BOOLEAN['#7', 'is equal to two']""]"
NLVR2_dev_dev-465-3-0,"If the right image features a large blue body of water containing at least six sailboats, and a shore that slopes upward.","[""SELECT['right image']"", ""PROJECT['body of water in #REF', '#1']"", ""FILTER['#2', 'that is large']"", ""FILTER['#3', 'that is blue']"", ""PROJECT['sailboats in #REF', '#1']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least six']"", ""PROJECT['shore in #REF', '#1']"", ""FILTER['#8', 'that slopes upward']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#7', '#11']""]","[""SELECT['right image']"", ""PROJECT['body of water in #REF', '#1']"", ""FILTER['#2', 'that is large']"", ""FILTER['#3', 'that is blue']"", ""PROJECT['sailboats in #REF', '#1']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least six']"", ""PROJECT['shore in #REF', '#1']"", ""BOOLEAN['#8','slops upward']"", ""BOOLEAN['logical_and', 'true', '#7', '#9']""]"
NLVR2_dev_dev-466-2-0,If in at least one image there are two black vaulters.,"[""SELECT['images']"", ""PROJECT['vaulters in #REF', '#1']"", ""FILTER['#2', 'that are black']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is equal to two']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least one']""]","[""SELECT['images']"", ""PROJECT['vaulters in #REF', '#1']"", ""FILTER['#2', 'that are black']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is equal to two']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least one']""]"
NLVR2_dev_dev-466-2-1,If one of the images contains only two vultures.,"[""SELECT['vultures']"", ""SELECT['images']"", ""GROUP['count', '#1', '#2']"", ""COMPARATIVE['#2', '#3', 'is equal to two']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']""]","[""SELECT['vultures']"", ""SELECT['images']"", ""GROUP['count', '#1', '#2']"", ""COMPARATIVE['#2', '#3', 'is equal to two']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']""]"
NLVR2_dev_dev-467-0-0,If an image shows at least two but no more than three over-lapping squarish pieces of sliced bread.,"[""SELECT['sliced bread']"", ""PROJECT['pieces of #REF', '#1']"", ""FILTER['#2', 'that are squarish']"", ""FILTER['#3', 'that are over-lapping']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least two']"", ""BOOLEAN['#6', 'is at most three']"", ""BOOLEAN['logical_and', 'true', '#7', '#8']""]","[""SELECT['bread']"", ""FILTER['#1', 'that is sliced']"", ""PROJECT['pieces of #REF', '#2']"", ""FILTER['#3', 'that are squarish']"", ""FILTER['#4', 'that are over-lapping']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least two']""]"
NLVR2_dev_dev-467-3-1,If there is fruit filling in the breads in one of the images.,"[""SELECT['fruit']"", ""SELECT['breads']"", ""FILTER['#1', 'filling #2']"", ""BOOLEAN['#3', 'is in one of the images']""]","[""SELECT['fruit']"", ""SELECT['breads']"", ""FILTER['#1', 'that is filling in #2']"", ""BOOLEAN['#3', 'is in one image']""]"
NLVR2_dev_dev-468-1-0,If blooming flowers are under the display window of one bookshop.,"[""SELECT['flowers']"", ""FILTER['#1', 'that are blooming']"", ""SELECT['bookshop']"", ""PROJECT['display window of #REF', '#3']"", ""FILTER['#2', 'that are under #4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']""]","[""SELECT['flowers']"", ""FILTER['#1', 'that are blooming']"", ""SELECT['bookshop']"", ""PROJECT['display window of #REF', '#3']"", ""BOOLEAN['#2', 'are under #4']""]"
NLVR2_dev_dev-468-3-1,If in one of the images the door to the shop is open.,"[""SELECT['the shop']"", ""PROJECT['door to #REF', '#1']"", ""BOOLEAN['#2', 'is in one of the images']""]","[""SELECT['door']"", ""SELECT['shop']"", ""FILTER['#1', 'that is open']"", ""BOOLEAN['#2', 'is in one image']""]"
NLVR2_dev_dev-469-1-0,If there are no more than four blinds.,"[""SELECT['blinds']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is at most four']""]","[""SELECT['blinds']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is not more than four']""]"
NLVR2_dev_dev-47-0-0,If a slice of the pizza cake has a fork to the left of it in one image.,"[""SELECT['slice of pizza cake']"", ""SELECT['fork']"", ""FILTER['#1', 'to the left of #2']"", ""BOOLEAN['#3', 'is in one image']""]","[""SELECT['pizza cake']"", ""PROJECT['slice of #REF', '#1']"", ""SELECT['fork']"", ""FILTER['#3', 'to the left of #2']"", ""BOOLEAN['#2', 'has #4']""]"
NLVR2_dev_dev-470-1-0,If at least one image in the pair includes a red blanket.,"[""SELECT['blanket']"", ""FILTER['#1', 'that is red']"", ""BOOLEAN['#2', 'is in at least one image']""]","[""SELECT['blanket']"", ""FILTER['#1', 'that is red']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']""]"
NLVR2_dev_dev-471-0-0,If one stairway railing is made of four horizontal ropes.,"[""SELECT['stairway railing']"", ""SELECT['ropes']"", ""FILTER['#2', 'that are horizontal']"", ""FILTER['#3', 'that #1 is made of']"", ""GROUP['count', '#4', '#1']"", ""COMPARATIVE['#1', '#5', 'is equal to four']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']""]","[""SELECT['stairway railing']"", ""SELECT['ropes']"", ""FILTER['#2', 'that are horizontal']"", ""FILTER['#3', 'that #1 is made of']"", ""GROUP['count', '#4', '#1']"", ""COMPARATIVE['#1', '#5', 'is equal to four']"", ""BOOLEAN['#6', 'is equal to one']""]"
NLVR2_dev_dev-472-2-0,If one seal in the right image has its mouth open.,"[""SELECT['right image']"", ""PROJECT['seal in #REF', '#1']"", ""PROJECT['mouth of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is open']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']""]","[""SELECT['right image']"", ""PROJECT['seals in #REF', '#1']"", ""PROJECT['mouth of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is open']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']""]"
NLVR2_dev_dev-472-3-1,"If one image shows a large seal with wide-open mouth in the foreground, and the other image contains only close-mouthed seals.","[""SELECT['one image']"", ""PROJECT['seal in #REF', '#1']"", ""FILTER['#2', 'that is large']"", ""PROJECT['mouth of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is wide-open']"", ""BOOLEAN['#5', 'is in the foreground']"", ""SELECT['other image']"", ""PROJECT['seals in #REF', '#7']"", ""FILTER['#8', 'that are close-mouthed']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to zero']"", ""BOOLEAN['logical_and', 'true', '#6', '#11']""]","[""SELECT['one image']"", ""PROJECT['seal in #REF', '#1']"", ""FILTER['#2', 'that is large']"", ""PROJECT['mouth of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is wide-open']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least one']"", ""SELECT['other image']"", ""PROJECT['seals in #REF', '#8']"", ""FILTER['#9', 'that are close-mouthed']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is equal to zero']"", ""BOOLEAN['logical_and', 'true', '#6', '#12']""]"
NLVR2_dev_dev-473-1-1,If in at least one image there is a bird with an orange beck facing left toward the face of a horned buffalo.,"[""SELECT['bird']"", ""SELECT['beck']"", ""FILTER['#2', 'that is orange']"", ""FILTER['#1', 'with #3']"", ""SELECT['buffalo']"", ""FILTER['#5', 'that is horned']"", ""PROJECT['face of #REF', '#6']"", ""FILTER['#4', 'facing left toward #7']"", ""BOOLEAN['#8', 'is in at least one image']""]","[""SELECT['bird']"", ""PROJECT['beck of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is orange']"", ""SELECT['buffalo']"", ""FILTER['#4', 'that is horned']"", ""PROJECT['face of #REF', '#5']"", ""FILTER['#3', 'facing left toward #6']"", ""BOOLEAN['#7', 'is in at least one image']""]"
NLVR2_dev_dev-473-3-0,If a bird is standing on the back of a forward-facing water buffalo in each image.,"[""SELECT['bird']"", ""SELECT['water buffalo']"", ""FILTER['#2', 'that is forward-facing']"", ""PROJECT['the back of #REF', '#3']"", ""FILTER['#1','standing on #4']"", ""PROJECT['images of #REF', '#5']"", ""AGGREGATE['count', '#6']"", ""SELECT['images']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to #9']""]","[""SELECT['bird']"", ""SELECT['water buffalo']"", ""FILTER['#2', 'that is forward-facing']"", ""PROJECT['back of #REF', '#3']"", ""FILTER['#1','standing on #4']"", ""PROJECT['images of #REF', '#5']"", ""AGGREGATE['count', '#6']"", ""SELECT['images']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to #9']""]"
NLVR2_dev_dev-474-0-0,If one dog is dyed to look like a panda.,"[""SELECT['dogs']"", ""FILTER['#1', 'that are dyed to look like a panda']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']""]","[""SELECT['dogs']"", ""SELECT['panda']"", ""FILTER['#1', 'that are dyed to look like #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is one']""]"
NLVR2_dev_dev-474-1-1,If the left image features one forward-looking black chow with its blue tongue hanging out.,"[""SELECT['left image']"", ""PROJECT['chow in #REF', '#1']"", ""FILTER['#2', 'that is forward-looking']"", ""FILTER['#3', 'that is black']"", ""PROJECT['tongue of #REF', '#4']"", ""COMPARATIVE['#4', '#5', 'is blue']"", ""COMPARATIVE['#4', '#6', 'is hanging out']"", ""INTERSECTION['#4', '#7', '#8']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to one']""]","[""SELECT['the left image']"", ""PROJECT['chows in #REF', '#1']"", ""FILTER['#2', 'that are forward-looking']"", ""FILTER['#3', 'that are black']"", ""PROJECT['tongue of #REF', '#4']"", ""COMPARATIVE['#4', '#5', 'is blue']"", ""BOOLEAN['#6', 'is hanging out']""]"
NLVR2_dev_dev-475-0-0,"If there are four or less mammals, and they are all standing still.","[""SELECT['mammals']"", ""FILTER['#1', 'that are standing still']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at most four']"", ""BOOLEAN['#4', 'is equal to #5']"", ""BOOLEAN['logical_and', 'true', '#6', '#7']""]","[""SELECT['mammals']"", ""FILTER['#1', 'that are standing still']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at most four']"", ""BOOLEAN['#4', 'is equal to #3']"", ""BOOLEAN['logical_and', 'true', '#5', '#6']""]"
NLVR2_dev_dev-475-2-1,If in at least one image there is a single elk with their face straight forward.,"[""SELECT['elks']"", ""PROJECT['face of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is straight forward']"", ""SELECT['images']"", ""GROUP['count', '#3', '#4']"", ""COMPARATIVE['#4', '#5', 'is equal to one']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least one']""]","[""SELECT['elks']"", ""PROJECT['faces of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are straight forward']"", ""SELECT['images']"", ""GROUP['count', '#3', '#4']"", ""COMPARATIVE['#4', '#5', 'is equal to one']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least one']""]"
NLVR2_dev_dev-476-1-0,If an image shows black ribbon bows used as trim on the lids of bottles of fragrance that are 3d rectangle shapes.,"[""SELECT['bottles of fragrance']"", ""FILTER['#1', 'that are 3d rectangle shapes']"", ""PROJECT['lids of #REF', '#2']"", ""SELECT['ribbon bows']"", ""FILTER['#4', 'that are black']"", ""FILTER['#5', 'used as trim on #3']"", ""BOOLEAN['#6', 'is in an image']""]","[""SELECT['bottles of fragrance']"", ""FILTER['#1', 'that are 3d rectangle shapes']"", ""PROJECT['the lids of #REF', '#2']"", ""SELECT['ribbon bows']"", ""FILTER['#4', 'that are black']"", ""FILTER['#5', 'that are used as trim on #3']"", ""BOOLEAN['#6', 'is in an image']""]"
NLVR2_dev_dev-476-2-1,If there are three vials of perfume in one of the images.,"[""SELECT['vials of perfume']"", ""SELECT['images']"", ""GROUP['count', '#1', '#2']"", ""COMPARATIVE['#2', '#3', 'is equal to three']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']""]","[""SELECT['images']"", ""PROJECT['vials of perfume in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is equal to three']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is one']""]"
NLVR2_dev_dev-477-1-0,If the left and right image contains the same number of wall hanging soap dispensers with at least one of metal.,"[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['wall hanging soap dispensers in #REF', '#1']"", ""PROJECT['wall hanging soap dispensers in #REF', '#2']"", ""FILTER['#3', 'that are metal']"", ""FILTER['#4', 'that are metal']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to #8']"", ""BOOLEAN['#9', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#10', '#11']""]","[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['soap dispensers in #REF', '#1']"", ""PROJECT['soap dispensers in #REF', '#2']"", ""FILTER['#3', 'that are wall hanging']"", ""FILTER['#4', 'that are metal']"", ""FILTER['#5', 'with #6']"", ""AGGREGATE['count', '#7']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to #10']""]"
NLVR2_dev_dev-478-0-0,If the left image has less dogs than the right.,"[""SELECT['left image']"", ""PROJECT['dogs in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""SELECT['right image']"", ""PROJECT['dogs in #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#3', 'is lower than #6']""]","[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['dogs in #REF', '#1']"", ""PROJECT['dogs in #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is lower than #6']""."
NLVR2_dev_dev-478-0-1,If all of the dogs in the images are running.,"[""SELECT['images']"", ""PROJECT['dogs in #REF', '#1']"", ""FILTER['#2', 'that are running']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#5', 'is equal to #4']""]","[""SELECT['dogs']"", ""FILTER['#1', 'that are running']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to #4']""]"
NLVR2_dev_dev-479-0-0,If each image shows fingerless mittens that don't have the 'fold-over flap' that would turn them into mittens.,"[""SELECT['mittens']"", ""FILTER['#1', 'that are fingerless']"", ""PROJECT['fold-over flap of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'would turn them into mittens']"", ""DISCARD['#2', '#4']"", ""PROJECT['images of #REF', '#5']"", ""SELECT['images']"", ""AGGREGATE['count', '#6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to #9']""]","[""SELECT['mittens']"", ""FILTER['#1', 'that are fingerless']"", ""PROJECT['fold-over flap of #REF', '#2']"", ""FILTER['#2', 'that would turn them into mittens']"", ""DISCARD['#2', '#3']"", ""SELECT['images']"", ""GROUP['count', '#5', '#6']"", ""COMPARATIVE['#6', '#7', 'is at least two']"", ""AGGREGATE['count', '#6']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to #10']""]"
NLVR2_dev_dev-479-0-1,If there are two pairs of hands wearing gloves.,"[""SELECT['pairs of hands']"", ""SELECT['gloves']"", ""FILTER['#1', 'wearing #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']""]","[""SELECT['pairs of hands']"", ""SELECT['gloves']"", ""FILTER['#1', 'that are wearing #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']""]"
NLVR2_dev_dev-480-1-0,If the right image features a rectangular box containing three rows of four golf balls.,"[""SELECT['box']"", ""FILTER['#1', 'that is rectangular']"", ""SELECT['golf balls']"", ""PROJECT['rows of #REF', '#3']"", ""GROUP['count', '#4', '#3']"", ""COMPARATIVE['#3', '#5', 'is equal to four']"", ""BOOLEAN['#6', 'is in the right image']""]","[""SELECT['box']"", ""FILTER['#1', 'that is rectangular']"", ""SELECT['golf balls']"", ""PROJECT['rows of #REF', '#3']"", ""GROUP['count', '#3', '#4']"", ""COMPARATIVE['#4', '#5', 'is equal to four']"", ""BOOLEAN['#6', 'is in the right image']""]"
NLVR2_dev_dev-480-2-1,If there is a golf ball on the grass.,"[""SELECT['golf ball']"", ""SELECT['grass']"", ""BOOLEAN['#1', 'is on #2']""]","[""SELECT['golf ball']"", ""SELECT['grass']"", ""FILTER['#1', 'that is on #2']"", ""BOOLEAN['#3', 'is at least one']""]"
NLVR2_dev_dev-48-1-0,If the right image contains no more than one glass perfume bottle.,"[""SELECT['right image']"", ""PROJECT['perfume bottle in #REF', '#1']"", ""FILTER['#2', 'that is glass']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at most one']""]","[""SELECT['the right image']"", ""PROJECT['perfume bottle in #REF', '#1']"", ""FILTER['#2', 'that is glass']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at most one']""]"
NLVR2_dev_dev-481-2-0,If there are more bottles in the image on the right.,"[""SELECT['bottles']"", ""SELECT['right image']"", ""FILTER['#1', 'in #2']"", ""DISCARD['#1', '#3']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is higher than #6']""]","[""SELECT['bottles']"", ""SELECT['right image']"", ""FILTER['#1', 'that are in #2']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['difference', '#4', '#5']"", ""BOOLEAN['#5', 'is at least one']""]"
NLVR2_dev_dev-481-2-1,If all of the beer is in bottles.,"[""SELECT['beer']"", ""SELECT['bottles']"", ""FILTER['#1', 'in #2']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to #5']""]","[""SELECT['beer']"", ""SELECT['bottles']"", ""FILTER['#1', 'that is in #2']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to #5']""."
NLVR2_dev_dev-482-0-0,If the right image shows a boy reaching into a vending machine to retrieve something,"[""SELECT['boy']"", ""SELECT['vending machine']"", ""FILTER['#1','reaching into #2']"", ""PROJECT['something in #REF', '#3']"", ""BOOLEAN['#4', 'is in the right image']""]","[""SELECT['boy']"", ""SELECT['vending machine']"", ""FILTER['#1','reaching into #2']"", ""SELECT['something']"", ""FILTER['#3', 'to retrieve #4']"", ""BOOLEAN['#5', 'is in right image']""]"
NLVR2_dev_dev-482-2-1,If a person in blue jeans is bending and reaching into a slot in a machine.,"[""SELECT['person']"", ""SELECT['jeans']"", ""FILTER['#2', 'that are blue']"", ""FILTER['#1', 'in #3']"", ""BOOLEAN['#4', 'is bending']"", ""SELECT['machine']"", ""PROJECT['slot in #REF', '#5']"", ""BOOLEAN['#6', 'is reaching into #7']"", ""BOOLEAN['logical_and', 'true', '#7', '#8']""]","[""SELECT['person']"", ""SELECT['jeans']"", ""FILTER['#2', 'that are blue']"", ""FILTER['#1', 'in #3']"", ""BOOLEAN['#4', 'is bending']"", ""SELECT['machine']"", ""PROJECT['slot of #REF', '#6']"", ""BOOLEAN['#5', 'is reaching into #7']"", ""BOOLEAN['logical_and', 'true', '#6', '#8']""]"
NLVR2_dev_dev-483-0-1,If the left and right image contains no more than three bottles of lotion.,"[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['bottles of lotion in #REF', '#1']"", ""PROJECT['bottles of lotion in #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at most three']"", ""BOOLEAN['#6', 'is at most three']"", ""BOOLEAN['logical_and', 'true', '#7', '#8']""]","[""SELECT['the left image']"", ""PROJECT['bottles of lotion in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""SELECT['the right image']"", ""PROJECT['bottles of lotion in #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#3', 'is at most three']"", ""BOOLEAN['#6', 'is at most three']"", ""BOOLEAN['logical_and', 'true', '#7', '#8']""]"
NLVR2_dev_dev-48-3-1,"If at least one image shows a woman spraying a bottle of perfume, and at least one image includes a grouping of fragrance bottles without boxes.","[""SELECT['woman']"", ""SELECT['bottle of perfume']"", ""FILTER['#1','spraying #2']"", ""PROJECT['images of #REF', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']"", ""SELECT['fragrance bottles']"", ""SELECT['boxes']"", ""FILTER['#7', 'without #8']"", ""FILTER['#9', 'that are grouping']"", ""BOOLEAN['#10', 'is in at least one image']"", ""BOOLEAN['logical_and', 'true', '#6', '#11']""]","[""SELECT['woman']"", ""SELECT['bottle of perfume']"", ""FILTER['#1','spraying #2']"", ""PROJECT['images of #REF', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']"", ""SELECT['fragrance bottles']"", ""SELECT['boxes']"", ""FILTER['#7', 'without #8']"", ""GROUP['count', '#9', '#6']"", ""COMPARATIVE['#6', '#10', 'is at least one']"", ""BOOLEAN['#11', 'is in at least one image']"", ""BOOLEAN['logical_and', 'true', '#5', '#12']""]"
NLVR2_dev_dev-483-2-0,If there are more than three bottles of lotion.,"[""SELECT['bottles of lotion']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is higher than three']""]","[""SELECT['bottles of lotion']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is more than three']""]"
NLVR2_dev_dev-484-0-1,If the left and right image contains the same number of dogs one being gray and the other brown and black.,"[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['dogs in #REF', '#1']"", ""PROJECT['dogs in #REF', '#2']"", ""FILTER['#3', 'that are gray']"", ""FILTER['#3', 'that are brown and black']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to #7']"", ""BOOLEAN['#8', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#9', '#10']""]","[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['dogs in #REF', '#1']"", ""PROJECT['dogs in #REF', '#2']"", ""FILTER['#3', 'that are gray']"", ""FILTER['#4', 'that are brown and black']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']"", ""BOOLEAN['#8', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#9', '#10']""]"
NLVR2_dev_dev-484-1-0,"If each image contains exactly one puppy and no adult dogs, and the left image features a tri-color puppy in a sitting pose.","[""SELECT['images']"", ""PROJECT['dogs in #REF', '#1']"", ""FILTER['#2', 'that are puppies']"", ""FILTER['#2', 'that are adults']"", ""GROUP['count', '#3', '#1']"", ""GROUP['count', '#4', '#1']"", ""COMPARATIVE['#1', '#5', 'is equal to one']"", ""COMPARATIVE['#1', '#6', 'is equal to zero']"", ""INTERSECTION['#1', '#7', '#8']"", ""AGGREGATE['count', '#9']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#10', 'is equal to #11']"", ""SELECT['the left image']"", ""PROJECT['puppies in #REF', '#12']"", ""FILTER['#13', 'that are tri-color']"", ""FILTER['#14', 'that are sitting pose']"", ""AGGREGATE['count', '#15']"", ""BOOLEAN['#16', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#7', '#17']""]","[""SELECT['images']"", ""PROJECT['dogs in #REF', '#1']"", ""FILTER['#2', 'that are puppies']"", ""FILTER['#2', 'that are adults']"", ""GROUP['count', '#3', '#1']"", ""GROUP['count', '#4', '#1']"", ""COMPARATIVE['#1', '#5', 'is equal to one']"", ""COMPARATIVE['#1', '#6', 'is equal to zero']"", ""INTERSECTION['#1', '#7', '#8']"", ""AGGREGATE['count', '#9']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#10', 'is equal to #11']"", ""SELECT['the left image']"", ""PROJECT['puppy in #REF', '#12']"", ""FILTER['#13', 'that is tri-color']"", ""FILTER['#14', 'that is sitting pose']"", ""BOOLEAN['#15', 'is in the left image']"", ""BOOLEAN['logical_and', 'true', '#7', '#16']""]"
NLVR2_dev_dev-485-0-1,If in the left image a bird has its wings spread.,"[""SELECT['bird']"", ""PROJECT['wings of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are spread']"", ""BOOLEAN['#3', 'is in the left image']""]","[""SELECT['bird']"", ""PROJECT['wings of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are spread']"", ""BOOLEAN['#3', 'is in left image']""]"
NLVR2_dev_dev-485-1-0,If at least 2 vultures are sitting in a tree in one of the pictures.,"[""SELECT['vultures']"", ""SELECT['tree']"", ""FILTER['#1','sitting in #2']"", ""PROJECT['pictures of #REF', '#3']"", ""GROUP['count', '#3', '#4']"", ""COMPARATIVE['#4', '#5', 'is at least two']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']""]","[""SELECT['vultures']"", ""SELECT['trees']"", ""FILTER['#1','sitting in #2']"", ""PROJECT['pictures of #REF', '#3']"", ""GROUP['count', '#3', '#4']"", ""COMPARATIVE['#4', '#5', 'is at least two']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']""]"
NLVR2_dev_dev-486-0-0,If there are 3 pairs of slippers,"[""SELECT['pairs of slippers']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to 3']""]","[""SELECT['pairs of slipper']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to 3']""]"
NLVR2_dev_dev-486-3-1,If there are more than 3 women wearing slippers.,"[""SELECT['women']"", ""SELECT['slippers']"", ""FILTER['#1', 'wearing #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is higher than 3']""]","[""SELECT['women']"", ""SELECT['slippers']"", ""FILTER['#1', 'wearing #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least 3']""]"
NLVR2_dev_dev-487-0-0,If in at least one image there is a sofa chair in front of brown blinds.,"[""SELECT['sofa chair']"", ""SELECT['blinds']"", ""FILTER['#2', 'that are brown']"", ""FILTER['#1', 'in front of #3']"", ""BOOLEAN['#4', 'is in at least one image']""]","[""SELECT['sofa chair']"", ""SELECT['blinds']"", ""FILTER['#2', 'that are brown']"", ""FILTER['#1', 'in front of #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']""]"
NLVR2_dev_dev-487-0-1,If one window shade is partially pulled up.,"[""SELECT['window shades']"", ""FILTER['#1', 'that are partially pulled up']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']""]","[""SELECT['window shade']"", ""FILTER['#1', 'that is partially pulled up']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']""]"
NLVR2_dev_dev-488-0-0,If the right image contains no more than four televisions.,"[""SELECT['the right image']"", ""PROJECT['televisions in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at most four']""]","[""SELECT['televisions']"", ""SELECT['right image']"", ""FILTER['#1', 'that are in #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at most four']""]"
NLVR2_dev_dev-488-2-1,If televisions are stacked in a single column that is four devices high.,"[""SELECT['televisions']"", ""PROJECT['column stacked in of #REF', '#1']"", ""PROJECT['devices high of #REF', '#2']"", ""GROUP['count', '#3', '#2']"", ""COMPARATIVE['#2', '#4', 'is equal to four']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']""]","[""SELECT['televisions']"", ""PROJECT['column stacked in of #REF', '#1']"", ""PROJECT['devices high of #REF', '#2']"", ""GROUP['count', '#3', '#2']"", ""COMPARATIVE['#2', '#4', 'is equal to four']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#7', 'is equal to one']""]"
NLVR2_dev_dev-489-0-0,If at least four women are wearing graduations caps.,"[""SELECT['women']"", ""SELECT['graduation caps']"", ""FILTER['#1', 'wearing #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least four']""]","[""SELECT['women']"", ""SELECT['graduation caps']"", ""FILTER['#1', 'that are wearing #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least four']""]"
NLVR2_dev_dev-489-0-1,If one of the young female graduates is wearing black glasses.,"[""SELECT['graduates']"", ""FILTER['#1', 'that are young']"", ""FILTER['#2', 'that are female']"", ""SELECT['glasses']"", ""FILTER['#4', 'that are black']"", ""FILTER['#3', 'wearing #5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']""]","[""SELECT['graduates']"", ""FILTER['#1', 'that are female']"", ""FILTER['#2', 'that are young']"", ""SELECT['glasses']"", ""FILTER['#4', 'that are black']"", ""FILTER['#3', 'wearing #5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']""]"
NLVR2_dev_dev-49-0-1,If the dog on the left appears to have a blue tongue.,"[""SELECT['dog']"", ""FILTER['#1', 'that is on the left']"", ""PROJECT['tongue of #REF', '#2']"", ""BOOLEAN['#3', 'is blue']""]","[""SELECT['dog']"", ""FILTER['#1', 'that is on the left']"", ""PROJECT['tongue of #REF', '#2']"", ""BOOLEAN['#3', 'are blue']""]"
NLVR2_dev_dev-490-1-0,If one image shows a llama chewing on a mouthful of grass.,"[""SELECT['llama']"", ""SELECT['grass']"", ""PROJECT['mouthful of #REF', '#2']"", ""FILTER['#1', 'chewing on #3']"", ""BOOLEAN['#4', 'is in one image']""]","[""SELECT['llama']"", ""SELECT['grass']"", ""PROJECT['mouthful of #REF', '#3']"", ""FILTER['#1', 'chewing on #2']"", ""BOOLEAN['#4', 'is in one image']""]"
NLVR2_dev_dev-490-2-1,If the left and right image contains the same number of llamas.,"[""SELECT['left image']"", ""PROJECT['llamas in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""SELECT['right image']"", ""PROJECT['llamas in #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#3', 'is equal to #6']""]","[""SELECT['left image']"", ""PROJECT['llamas of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""SELECT['right image']"", ""PROJECT['llamas of #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#3', 'is equal to #6']""]"
NLVR2_dev_dev-491-3-0,"If in one image, a gorilla is sitting with its knees bent and at least one arm resting on a knee.","[""SELECT['gorilla']"", ""FILTER['#1', 'that is sitting']"", ""PROJECT['knees of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'are bent']"", ""PROJECT['arm of #REF', '#4']"", ""PROJECT['knee of #REF', '#4']"", ""COMPARATIVE['#4', '#5', 'are resting on #6']"", ""BOOLEAN['#7', 'is in one image']""]","[""SELECT['gorilla']"", ""FILTER['#1', 'that is sitting']"", ""PROJECT['knees of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'are bent']"", ""PROJECT['arms of #REF', '#4']"", ""PROJECT['knees of #REF', '#4']"", ""COMPARATIVE['#4', '#5', 'are resting on #6']"", ""BOOLEAN['#7', 'is in one image']""]."
NLVR2_dev_dev-49-2-0,"If each image shows a chow with an open mouth showing a blue tongue, and no chow is wearing any kind of adornment.","[""SELECT['chows']"", ""PROJECT['mouth of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is open']"", ""PROJECT['tongue of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is blue']"", ""SELECT['adornment']"", ""FILTER['#5', 'wearing #6']"", ""SELECT['images']"", ""GROUP['count', '#7', '#8']"", ""COMPARATIVE['#8', '#9', 'is equal to zero']"", ""AGGREGATE['count', '#8']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is equal to #12']""]","[""SELECT['chow']"", ""PROJECT['mouth of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is open']"", ""PROJECT['tongue of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is blue']"", ""SELECT['adornment']"", ""FILTER['#5', 'wearing #6']"", ""SELECT['images']"", ""GROUP['count', '#7', '#8']"", ""COMPARATIVE['#8', '#9', 'is equal to zero']"", ""AGGREGATE['count', '#8']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is equal to #12']""]"
NLVR2_dev_dev-492-2-0,If the cabinet on the left has three shelves and the one on the right has more than three.,"[""SELECT['cabinet']"", ""FILTER['#1', 'on the left']"", ""FILTER['#1', 'on the right']"", ""PROJECT['shelves of #REF', '#2']"", ""PROJECT['shelves of #REF', '#3']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to three']"", ""BOOLEAN['#7', 'is higher than three']"", ""BOOLEAN['logical_and', 'true', '#8', '#9']""]","[""SELECT['cabinet']"", ""FILTER['#1', 'that is on the left']"", ""FILTER['#1', 'that is on the right']"", ""PROJECT['shelves of #REF', '#2']"", ""PROJECT['shelves of #REF', '#3']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to three']"", ""BOOLEAN['#7', 'is higher than three']"", ""BOOLEAN['logical_and', 'true', '#8', '#9']""."
NLVR2_dev_dev-492-2-1,If a cabinet has straight legs,"[""SELECT['cabinet']"", ""PROJECT['legs of #REF', '#1']"", ""BOOLEAN['#2', 'are straight']""]","[""SELECT['cabinet']"", ""PROJECT['legs of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']""]"
NLVR2_dev_dev-493-0-0,If there are at least 3 deer in a tree eating in the image pair,"[""SELECT['deer']"", ""SELECT['tree']"", ""FILTER['#1', 'in #2']"", ""FILTER['#3', 'that are eating']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least 3']""]","[""SELECT['images']"", ""PROJECT['deer in #REF', '#1']"", ""PROJECT['tree in #REF', '#1']"", ""FILTER['#2', 'in #3']"", ""FILTER['#4', 'that are eating']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least 3']""]"
NLVR2_dev_dev-493-3-1,If all the animals are on four legs.,"[""SELECT['animals']"", ""PROJECT['legs of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are on']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to four']""]","[""SELECT['animals']"", ""PROJECT['legs of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are on four']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]"
NLVR2_dev_dev-494-1-1,If two dogs can be seen.,"[""SELECT['dogs']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to two']""]","[""SELECT['dogs']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'equal to two']""]"
NLVR2_dev_dev-494-3-0,If the left image features one non-reclining basset hound with its ears extending from its face instead of drooping at the sides.,"[""SELECT['left image']"", ""PROJECT['basset hound in #REF', '#1']"", ""FILTER['#2', 'that is non-reclining']"", ""PROJECT['ears of #REF', '#3']"", ""PROJECT['face of #REF', '#3']"", ""COMPARATIVE['#3', '#5', 'are extending from #4']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']""]","[""SELECT['the left image']"", ""PROJECT['basset hounds in #REF', '#1']"", ""FILTER['#2', 'that are non-reclining']"", ""PROJECT['ears of #REF', '#3']"", ""PROJECT['face of #REF', '#3']"", ""COMPARATIVE['#3', '#5', 'are extending from #4']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']""."
NLVR2_dev_dev-495-3-0,If one of the dogs has a black back.,"[""SELECT['dogs']"", ""PROJECT['back of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is black']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]","[""SELECT['dogs']"", ""FILTER['#1', 'that has a black back']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']""]"
NLVR2_dev_dev-496-0-0,If one of the pictures shows a lot more than five organisms on a beach.,"[""SELECT['organisms']"", ""SELECT['beach']"", ""FILTER['#1', 'on #2']"", ""PROJECT['pictures of #REF', '#3']"", ""GROUP['count', '#3', '#4']"", ""COMPARATIVE['#4', '#5', 'is higher than five']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']""]","[""SELECT['organisms']"", ""SELECT['beach']"", ""FILTER['#1', 'on #2']"", ""PROJECT['pictures of #REF', '#3']"", ""GROUP['count', '#3', '#4']"", ""COMPARATIVE['#4', '#5', 'is higher than five']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is one']""]"
NLVR2_dev_dev-496-1-1,If in one of the two images you can see a beach covered with jellyfish.,"[""SELECT['beach']"", ""SELECT['jellyfish']"", ""FILTER['#1', 'covered with #2']"", ""BOOLEAN['#3', 'is in one of the two images']""]","[""SELECT['beach']"", ""SELECT['jellyfish']"", ""FILTER['#1', 'covered with #2']"", ""BOOLEAN['#3', 'is in one image']""]"
NLVR2_dev_dev-497-0-1,"If each image shows one nearly white afghan hound, and the hound in the right image has its hair blowing to the left.","[""SELECT['images']"", ""PROJECT['afghan hounds in #REF', '#1']"", ""FILTER['#2', 'that are nearly white']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is equal to one']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#6', 'is equal to #7']"", ""SELECT['the right image']"", ""PROJECT['hound in #REF', '#9']"", ""PROJECT['hair of #REF', '#10']"", ""BOOLEAN['#11', 'is blowing to the left']"", ""BOOLEAN['logical_and', 'true', '#8', '#12']""]","[""SELECT['images']"", ""PROJECT['afghan hounds in #REF', '#1']"", ""FILTER['#2', 'that are nearly white']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is equal to one']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#6', 'is equal to #7']"", ""SELECT['right image']"", ""PROJECT['hound in #REF', '#8']"", ""PROJECT['hair of #REF', '#9']"", ""BOOLEAN['#10', 'is blowing to the left']"", ""BOOLEAN['logical_and', 'true', '#8', '#11']""]"
NLVR2_dev_dev-497-1-0,If the right image contains one dog outside on grass.,"[""SELECT['the right image']"", ""PROJECT['dogs in #REF', '#1']"", ""FILTER['#2', 'that are outside']"", ""PROJECT['grass in #REF', '#1']"", ""FILTER['#3', 'on #4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']""]","[""SELECT['right image']"", ""PROJECT['dog in #REF', '#1']"", ""FILTER['#2', 'that is outside']"", ""PROJECT['grass in #REF', '#1']"", ""FILTER['#3', 'on #4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']""]"
NLVR2_dev_dev-498-1-0,If the dog in the image on the right is standing up.,"[""SELECT['right image']"", ""PROJECT['dog in #REF', '#1']"", ""BOOLEAN['#2', 'is standing up']""]","[""SELECT['the right image']"", ""PROJECT['dog in #REF', '#1']"", ""BOOLEAN['#2', 'is standing up']""]"
NLVR2_dev_dev-498-3-1,"If one beagle is standing on all fours, and one beagle is sitting.","[""SELECT['beagles']"", ""FILTER['#1', 'that is standing on all fours']"", ""FILTER['#1', 'that is sitting']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']"", ""BOOLEAN['#5', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#6', '#7']""]","[""SELECT['beagles']"", ""FILTER['#1','standing on all fours']"", ""FILTER['#1', 'that is sitting']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']"", ""BOOLEAN['#5', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#6', '#7']""]"
NLVR2_dev_dev-499-1-1,If the left and right image contains the same number of antelope.,"[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['antelopes in #REF', '#1']"", ""PROJECT['antelopes in #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to #6']""]","[""SELECT['left image']"", ""PROJECT['antelopes of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""SELECT['right image']"", ""PROJECT['antelopes of #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#3', 'is equal to #6']""]"
NLVR2_dev_dev-499-2-0,"If each image includes exactly one adult animal with curved horns, and the right image features a horned animal with body aimed leftward and head turned forward.","[""SELECT['images']"", ""PROJECT['animals in #REF', '#1']"", ""FILTER['#2', 'that are adults']"", ""PROJECT['horns of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'are curved']"", ""GROUP['count', '#5', '#1']"", ""COMPARATIVE['#1', '#6', 'is equal to one']"", ""AGGREGATE['count', '#7']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#8', 'is equal to #9']"", ""SELECT['the right image']"", ""PROJECT['animal in #REF', '#11']"", ""FILTER['#12', 'that is horned']"", ""PROJECT['body of #REF', '#13']"", ""COMPARATIVE['#13', '#14', 'is aimed leftward']"", ""PROJECT['head of #REF', '#15']"", ""COMPARATIVE['#15', '#16', 'is turned forward']"", ""AGGREGATE['count', '#17']"", ""BOOLEAN['#18', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#9', '#17']""]","[""SELECT['images']"", ""PROJECT['animals in #REF', '#1']"", ""FILTER['#2', 'that are adults']"", ""PROJECT['horns of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'are curved']"", ""GROUP['count', '#5', '#1']"", ""COMPARATIVE['#1', '#6', 'is equal to one']"", ""AGGREGATE['count', '#7']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#8', 'is equal to #9']"", ""SELECT['the right image']"", ""PROJECT['animal in #REF', '#11']"", ""FILTER['#12', 'that is horned']"", ""PROJECT['body of #REF', '#13']"", ""COMPARATIVE['#13', '#14', 'is aimed leftward']"", ""PROJECT['head of #REF', '#15']"", ""COMPARATIVE['#15', '#16', 'is turned forward']"", ""AGGREGATE['count', '#17']"", ""BOOLEAN['#18', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#9', '#17']""]"
NLVR2_dev_dev-5-0-0,"If in 1 of the images, 1 bookstore has a staircase.","[""SELECT['bookstore']"", ""SELECT['staircase']"", ""FILTER['#1', 'that has #2']"", ""PROJECT['images of #REF', '#3']"", ""GROUP['count', '#3', '#4']"", ""COMPARATIVE['#4', '#5', 'is equal to one']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']""]","[""SELECT['bookstore']"", ""SELECT['staircase']"", ""FILTER['#1', 'that has #2']"", ""SELECT['images']"", ""GROUP['count', '#3', '#4']"", ""COMPARATIVE['#4', '#5', 'is equal to one']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']""]"
NLVR2_dev_dev-50-0-0,If the pencil pouch in the right image had a logo with a mountain on it,"[""SELECT['the right image']"", ""PROJECT['pencil pouch in #REF', '#1']"", ""PROJECT['logo in #REF', '#1']"", ""PROJECT['mountain in #REF', '#1']"", ""BOOLEAN['#3', 'had #4 on it']""]","[""SELECT['pencil pouch']"", ""SELECT['logo']"", ""SELECT['mountain']"", ""FILTER['#2', 'with #3 on it']"", ""BOOLEAN['#1', 'had #4']""]"
NLVR2_dev_dev-500-3-0,"If each image includes exactly one reclining wolf, one image shows a snowy scene, and one image features a wolf with mostly light fur.","[""SELECT['images']"", ""PROJECT['wolves in #REF', '#1']"", ""FILTER['#2', 'that are reclining']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is equal to one']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#6', 'is equal to #7']"", ""SELECT['snowy scene']"", ""PROJECT['wolf in #REF', '#9']"", ""PROJECT['fur of #REF', '#10']"", ""COMPARATIVE['#10', '#11', 'is mostly light']"", ""BOOLEAN['#12', 'is in one image']"", ""BOOLEAN['logical_and', 'true', '#7', '#13']""]","[""SELECT['images']"", ""PROJECT['wolves in #REF', '#1']"", ""FILTER['#2', 'that are reclining']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is equal to one']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#6', 'is equal to #7']"", ""SELECT['snowy scene']"", ""PROJECT['wolf in #REF', '#9']"", ""PROJECT['fur of #REF', '#10']"", ""COMPARATIVE['#10', '#11', 'is mostly light']"", ""BOOLEAN['#12', 'is in one image']"", ""BOOLEAN['logical_and', 'true', '#8', '#13']""]"
NLVR2_dev_dev-500-3-1,If the wolves in the left image are in snow.,"[""SELECT['left image']"", ""PROJECT['wolves in #REF', '#1']"", ""PROJECT['snow in #REF', '#1']"", ""BOOLEAN['#2', 'are in #3']""]","[""SELECT['left image']"", ""PROJECT['wolves of #REF', '#1']"", ""PROJECT['snow of #REF', '#1']"", ""BOOLEAN['#2', 'are in #3']""]"
NLVR2_dev_dev-501-3-0,"If one image shows two chihuahuas side-by-side, and the other shows one chihuahua posed on patterned fabric.","[""SELECT['one image']"", ""PROJECT['chihuahuas in #REF', '#1']"", ""FILTER['#2', 'that are side-by-side']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']"", ""SELECT['the other image']"", ""PROJECT['chihuahuas in #REF', '#6']"", ""PROJECT['fabric in #REF', '#6']"", ""FILTER['#8', 'that is patterned']"", ""FILTER['#7', 'posed on #9']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#5', '#12']""]","[""SELECT['one image']"", ""PROJECT['chihuahuas in #REF', '#1']"", ""FILTER['#2', 'that are side-by-side']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']"", ""SELECT['the other image']"", ""PROJECT['chihuahuas in #REF', '#7']"", ""PROJECT['fabric in #REF', '#7']"", ""FILTER['#8', 'that is patterned']"", ""FILTER['#9', 'posed on #10']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#6', '#13']""]"
NLVR2_dev_dev-501-3-1,If there are two chihuahuas in the left image.,"[""SELECT['left image']"", ""PROJECT['chihuahuas in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']""]","[""SELECT['left image']"", ""PROJECT['chihuahua in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']""]"
NLVR2_dev_dev-502-2-1,If there is no more than one tennis shoe in the right image.,"[""SELECT['the right image']"", ""PROJECT['tennis shoes in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at most one']""]","[""SELECT['right image']"", ""PROJECT['tennis shoe of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at most one']""]"
NLVR2_dev_dev-503-2-0,If there is a silver drain plug in the basin in the image on the right.,"[""SELECT['right image']"", ""PROJECT['basin of #REF', '#1']"", ""SELECT['drain plug']"", ""FILTER['#3', 'that is silver']"", ""BOOLEAN['#4', 'is in #2']""]","[""SELECT['drain plug']"", ""FILTER['#1', 'that is silver']"", ""SELECT['basin']"", ""FILTER['#2', 'in #3']"", ""BOOLEAN['#4', 'is in the image on the right']""]"
NLVR2_dev_dev-503-3-1,"If two white sinks are the same shape, one larger than the other, neither of them installed or with a faucet fixture.","[""SELECT['sinks']"", ""FILTER['#1', 'that are white']"", ""PROJECT['shapes of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'are the same']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to two']"", ""FILTER['#1', 'that is larger than one']"", ""FILTER['#1', 'that is installed with a faucet fixture']"", ""DISCARD['#1', '#8']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to zero']"", ""BOOLEAN['logical_and', 'true', '#7', '#11']""]","[""SELECT['sinks']"", ""FILTER['#1', 'that are white']"", ""PROJECT['shapes of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'are the same']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to two']"", ""FILTER['#1', 'that is larger than one']"", ""FILTER['#1', 'that is installed with a faucet fixture']"", ""DISCARD['#1', '#8']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to zero']"", ""BOOLEAN['logical_and', 'true', '#6', '#11']""]"
NLVR2_dev_dev-504-0-0,If the dog in one of the images is standing on the grass.,"[""SELECT['dog']"", ""SELECT['grass']"", ""FILTER['#1','standing on #2']"", ""BOOLEAN['#3', 'is in one of the images']""]","[""SELECT['dog']"", ""SELECT['grass']"", ""FILTER['#1', 'that is standing on #2']"", ""BOOLEAN['#3', 'is in one of the images."
NLVR2_dev_dev-504-0-1,"If each image shows a dog with dark fur on its ears, and at least one dog wears a collar.","[""SELECT['dog']"", ""PROJECT['ears of #REF', '#1']"", ""SELECT['fur']"", ""FILTER['#3', 'that is dark']"", ""COMPARATIVE['#1', '#2', 'have #4 on']"", ""SELECT['images']"", ""GROUP['count', '#5', '#6']"", ""COMPARATIVE['#6', '#7', 'is at least one']"", ""AGGREGATE['count', '#6']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to #10']"", ""SELECT['collar']"", ""FILTER['#1', 'that wear']"", ""AGGREGATE['count', '#12']"", ""BOOLEAN['#13', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#11', '#14']""]","[""SELECT['dog']"", ""PROJECT['ears of #REF', '#1']"", ""SELECT['fur']"", ""FILTER['#3', 'that is dark']"", ""COMPARATIVE['#1', '#2', 'have #4 on']"", ""SELECT['images']"", ""GROUP['count', '#5', '#6']"", ""COMPARATIVE['#6', '#7', 'is at least one']"", ""AGGREGATE['count', '#6']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to #10']"", ""SELECT['collar']"", ""FILTER['#1', 'that wear #11']"", ""AGGREGATE['count', '#12']"", ""BOOLEAN['#13', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#11', '#14']""]"
NLVR2_dev_dev-505-1-1,If the hyenas are tearing into a fallen zebra in each of the images.,"[""SELECT['hyenas']"", ""SELECT['zebra']"", ""FILTER['#2', 'that is fallen']"", ""FILTER['#1', 'tearing into #3']"", ""PROJECT['images of #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""SELECT['images']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to #8']""]","[""SELECT['hyenas']"", ""SELECT['zebra']"", ""FILTER['#2', 'that is fallen']"", ""FILTER['#1', 'tearing into #3']"", ""PROJECT['images of #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""SELECT['images']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to #9']""]"
NLVR2_dev_dev-506-2-0,If one basin is square and one is round.,"[""SELECT['basins']"", ""FILTER['#1', 'that is square']"", ""FILTER['#1', 'that is round']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']"", ""BOOLEAN['#5', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#6', '#7']""]","[""SELECT['basins']"", ""FILTER['#1', 'that are square']"", ""FILTER['#1', 'that are round']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']"", ""BOOLEAN['#5', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#6', '#7']""]"
NLVR2_dev_dev-506-3-1,"If the left image features a white sink mounted to a dark wall, with exposed pipe under the sink and a squarish object hanging above it.","[""SELECT['sink']"", ""FILTER['#1', 'that is white']"", ""SELECT['wall']"", ""FILTER['#3', 'that is dark']"", ""FILTER['#2','mounted to #4']"", ""SELECT['pipe']"", ""FILTER['#6', 'that is exposed']"", ""FILTER['#5', 'under #7']"", ""SELECT['object']"", ""FILTER['#8', 'that is squarish']"", ""FILTER['#9', 'hanging above #10']"", ""BOOLEAN['#11', 'is in the left image']""]","[""SELECT['sink']"", ""FILTER['#1', 'that is white']"", ""SELECT['wall']"", ""FILTER['#3', 'that is dark']"", ""FILTER['#2','mounted to #4']"", ""SELECT['pipe']"", ""FILTER['#6', 'that is exposed']"", ""FILTER['#5', 'under #7']"", ""SELECT['object']"", ""FILTER['#8', 'that is squarish']"", ""BOOLEAN['#9', 'is hanging above #10']""]"
NLVR2_dev_dev-507-0-0,If two camera-facing collie dogs are posed reclining side-by-side in one image.,"[""SELECT['images']"", ""PROJECT['collie dogs in #REF', '#1']"", ""FILTER['#2', 'that are camera-facing']"", ""FILTER['#3', 'that are posed side-by-side']"", ""GROUP['count', '#4', '#1']"", ""COMPARATIVE['#1', '#5', 'is equal to two']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']""]","[""SELECT['images']"", ""PROJECT['collie dogs in #REF', '#1']"", ""FILTER['#2', 'that are camera-facing']"", ""FILTER['#3', 'that are posed reclining side-by-side']"", ""GROUP['count', '#4', '#1']"", ""COMPARATIVE['#1', '#5', 'is equal to two']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']""."
NLVR2_dev_dev-508-3-1,"If in at least one image, there is a pizza served on a round metal dish.","[""SELECT['pizza']"", ""SELECT['dish']"", ""FILTER['#2', 'that is round']"", ""FILTER['#3', 'that is metal']"", ""FILTER['#1','served on #4']"", ""BOOLEAN['#5', 'is in at least one image']""]","[""SELECT['pizza']"", ""SELECT['dish']"", ""FILTER['#2', 'that is metal']"", ""FILTER['#3', 'that is round']"", ""FILTER['#1','served on #4']"", ""BOOLEAN['#5', 'is in at least one image']""]"
NLVR2_dev_dev-509-0-1,If lamps are mounted near a vanity in one of the images and they are all on.,"[""SELECT['lamps']"", ""SELECT['vanity']"", ""FILTER['#1','mounted near #2']"", ""FILTER['#3', 'that are on']"", ""SELECT['images']"", ""GROUP['count', '#4', '#5']"", ""COMPARATIVE['#5', '#6', 'is at least two']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to one']""]","[""SELECT['lamps']"", ""SELECT['vanity']"", ""FILTER['#1','mounted near #2']"", ""FILTER['#3', 'on']"", ""SELECT['images']"", ""GROUP['count', '#4', '#5']"", ""COMPARATIVE['#5', '#6', 'is equal to #7']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to one']""]"
NLVR2_dev_dev-510-0-1,If a woman is holding a bottle to her mouth in the left image.,"[""SELECT['woman']"", ""SELECT['bottle']"", ""PROJECT['mouth of #REF', '#1']"", ""FILTER['#1', 'holding #2 to #3']"", ""BOOLEAN['#4', 'is in the left image']""]","[""SELECT['woman']"", ""SELECT['bottle']"", ""PROJECT['mouth of #REF', '#2']"", ""FILTER['#1', 'holding #2 to #3']"", ""BOOLEAN['#4', 'is in the left image']""]"
NLVR2_dev_dev-51-0-1,If at least one dog can be seen wearing a collar and leash.,"[""SELECT['dog']"", ""SELECT['collar']"", ""SELECT['leash']"", ""FILTER['#1', 'wearing #2']"", ""FILTER['#1', 'wearing #3']"", ""INTERSECTION['#1', '#4', '#5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least one']""]","[""SELECT['dogs']"", ""SELECT['collar']"", ""SELECT['leash']"", ""FILTER['#1', 'wearing #2']"", ""FILTER['#3', 'wearing #4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least one']""]"
NLVR2_dev_dev-511-1-1,If there are exactly two fluffy dogs and no reflections.,"[""SELECT['dogs']"", ""FILTER['#1', 'that are fluffy']"", ""SELECT['reflections']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']"", ""BOOLEAN['#5', 'is equal to zero']"", ""BOOLEAN['logical_and', 'true', '#6', '#7']""]","[""SELECT['dogs']"", ""FILTER['#1', 'that are fluffy']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']"", ""SELECT['reflections']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to zero']"", ""BOOLEAN['logical_and', 'true', '#4', '#8']""]"
NLVR2_dev_dev-512-3-0,If there is a television in the room.,"[""SELECT['television']"", ""SELECT['room']"", ""BOOLEAN['#1', 'is in #2']""]","[""SELECT['television']"", ""SELECT['the room']"", ""BOOLEAN['#1', 'is in #2']""]"
NLVR2_dev_dev-51-3-0,"If each image shows a white dog standing without use of an aid or prosthetic, and the left image shows a three-legged dog on green grass.","[""SELECT['dog']"", ""FILTER['#1', 'that is white']"", ""FILTER['#2', 'that is standing']"", ""SELECT['aid']"", ""SELECT['prosthetic']"", ""UNION['#3', '#4']"", ""BOOLEAN['#5', 'is in all images']"", ""SELECT['left image']"", ""PROJECT['dog in #REF', '#7']"", ""FILTER['#8', 'that is three-legged']"", ""SELECT['grass']"", ""FILTER['#9', 'that is green']"", ""FILTER['#10', 'on #11']"", ""AGGREGATE['count', '#12']"", ""BOOLEAN['#13', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#6', '#14']""]","[""SELECT['dog']"", ""FILTER['#1', 'that is white']"", ""FILTER['#2', 'that is standing']"", ""SELECT['aid']"", ""SELECT['prosthetic']"", ""UNION['#3', '#4']"", ""BOOLEAN['#5', 'is in each image']"", ""SELECT['left image']"", ""PROJECT['dog in #REF', '#7']"", ""FILTER['#8', 'that is three-legged']"", ""SELECT['grass']"", ""FILTER['#10', 'that is green']"", ""FILTER['#9', 'on #11']"", ""AGGREGATE['count', '#12']"", ""BOOLEAN['#13', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#6', '#14']""]"
NLVR2_dev_dev-513-0-0,If the right image contains kitchen utensils.,"[""SELECT['kitchen utensils']"", ""BOOLEAN['#1', 'are in the right image']""]","[""SELECT['kitchen utensils']"", ""BOOLEAN['#1', 'is in the right image']""]"
NLVR2_dev_dev-513-1-1,If there is a bowl of mashed potatoes with melted butter on top,"[""SELECT['mashed potatoes']"", ""PROJECT['bowl of #REF', '#1']"", ""SELECT['butter']"", ""FILTER['#3', 'that is melted']"", ""BOOLEAN['#2', 'has #4 on top']""]","[""SELECT['potatoes']"", ""FILTER['#1', 'that are mashed']"", ""SELECT['butter']"", ""FILTER['#3', 'that is melted']"", ""BOOLEAN['#2', 'is in a bowl']""]"
NLVR2_dev_dev-514-0-0,If exactly one zebra is looking straight at the camera.,"[""SELECT['zebras']"", ""FILTER['#1', 'that are looking straight at the camera']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']""]","[""SELECT['zebra']"", ""FILTER['#1', 'that are looking straight at the camera']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']""]"
NLVR2_dev_dev-514-2-1,If one image shows a young zebra next to a leftward-facing grazing adult zebra.,"[""SELECT['zebra']"", ""FILTER['#1', 'that is young']"", ""FILTER['#1', 'that is adult']"", ""FILTER['#3', 'that is leftward-facing']"", ""FILTER['#2', 'grazing #4']"", ""FILTER['#5', 'next to #6']"", ""BOOLEAN['#7', 'is in one image']""]","[""SELECT['zebras']"", ""FILTER['#1', 'that is young']"", ""FILTER['#1', 'that is adult']"", ""FILTER['#3', 'that is leftward-facing']"", ""FILTER['#4', 'grazing #2']"", ""FILTER['#5', 'next to #6']"", ""BOOLEAN['#7', 'is in one image']""]"
NLVR2_dev_dev-515-2-1,If the left image has at least two pillows inside of the canopy,"[""SELECT['the left image']"", ""PROJECT['pillows in #REF', '#1']"", ""PROJECT['canopy in #REF', '#1']"", ""FILTER['#2', 'inside of #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least two']""]","[""SELECT['the left image']"", ""PROJECT['pillows in #REF', '#1']"", ""PROJECT['canopy in #REF', '#1']"", ""FILTER['#2', 'that are inside #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least two']""]"
NLVR2_dev_dev-515-3-0,If one net has pale blue trim.,"[""SELECT['nets']"", ""PROJECT['trim of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is pale blue']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]","[""SELECT['nets']"", ""PROJECT['trim of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is pale blue']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is one']""]"
NLVR2_dev_dev-516-1-0,"If one image shows a round white plate containing crab, lemon wedges, green garnish and small bowls of condiments.","[""SELECT['plate']"", ""FILTER['#1', 'that is round']"", ""FILTER['#2', 'that is white']"", ""SELECT['crab']"", ""SELECT['lemon wedges']"", ""SELECT['garnish']"", ""FILTER['#5', 'that is green']"", ""SELECT['bowls of condiments']"", ""FILTER['#7', 'that are small']"", ""FILTER['#8', 'containing #9']"", ""BOOLEAN['#10', 'is in one image']""]","[""SELECT['plate']"", ""FILTER['#1', 'that is round']"", ""FILTER['#2', 'that is white']"", ""SELECT['crab']"", ""SELECT['lemon wedges']"", ""FILTER['#3', 'containing #4']"", ""SELECT['garnish']"", ""FILTER['#6', 'that is green']"", ""SELECT['bowls of condiments']"", ""FILTER['#7', 'that are small']"", ""FILTER['#8', 'containing #9']"", ""BOOLEAN['#10', 'is in one image']""]"
NLVR2_dev_dev-516-3-1,If there are three crabs in one image and lemons around a crab in the other image.,"[""SELECT['one image']"", ""PROJECT['crabs in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to three']"", ""SELECT['the other image']"", ""PROJECT['crabs in #REF', '#5']"", ""PROJECT['lemons in #REF', '#6']"", ""BOOLEAN['#7', 'are around #8']"", ""BOOLEAN['logical_and', 'true', '#4', '#9']""]","[""SELECT['one image']"", ""PROJECT['crabs in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to three']"", ""SELECT['the other image']"", ""PROJECT['crabs in #REF', '#5']"", ""PROJECT['lemons in #REF', '#6']"", ""FILTER['#7', 'around #8']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is at least two']"", ""BOOLEAN['logical_and', 'true', '#4', '#11']""]"
NLVR2_dev_dev-517-1-1,If you can see a mirror in the image on the left.,"[""SELECT['left image']"", ""PROJECT['mirror in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least one']""]","[""SELECT['the left image']"", ""PROJECT['mirror in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least one']""]"
NLVR2_dev_dev-517-2-0,If in at least one image the wall is made of tile,"[""SELECT['wall']"", ""SELECT['tile']"", ""FILTER['#1','made of #2']"", ""BOOLEAN['#3', 'is in at least one image']""]","[""SELECT['wall']"", ""SELECT['tile']"", ""FILTER['#1', 'that is made of #2']"", ""BOOLEAN['#3', 'is in at least one image']""]"
NLVR2_dev_dev-518-1-0,If one dog is standing on tile.,"[""SELECT['dog']"", ""SELECT['tile']"", ""FILTER['#1','standing on #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]","[""SELECT['dog']"", ""SELECT['tile']"", ""FILTER['#1', 'that is standing on #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]."
NLVR2_dev_dev-518-2-1,"If the left image shows one forward-facing sitting husky, and the right image shows a hand reaching to touch the face of a husky.","[""SELECT['left image']"", ""PROJECT['husky in #REF', '#1']"", ""FILTER['#2', 'that is sitting']"", ""FILTER['#3', 'that is forward-facing']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']"", ""SELECT['right image']"", ""PROJECT['hand in #REF', '#7']"", ""PROJECT['husky in #REF', '#7']"", ""PROJECT['face of #REF', '#7']"", ""FILTER['#8', 'that is reaching to touch #9']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#6', '#12']""]","[""SELECT['the left image']"", ""PROJECT['husky in #REF', '#1']"", ""FILTER['#2', 'that is forward-facing']"", ""FILTER['#3', 'that is sitting']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']"", ""SELECT['the right image']"", ""PROJECT['hand in #REF', '#7']"", ""PROJECT['husky in #REF', '#7']"", ""PROJECT['face of #REF', '#8']"", ""FILTER['#9', 'that is reaching to touch #10']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#6', '#13']""."
NLVR2_dev_dev-519-1-0,If one of the open laptops is actually a mirror.,"[""SELECT['laptops']"", ""FILTER['#1', 'that are open']"", ""SELECT['mirror']"", ""FILTER['#2', 'that is actually #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']""]","[""SELECT['laptops']"", ""FILTER['#1', 'that is open']"", ""SELECT['mirror']"", ""FILTER['#2', 'that is actually #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']""]"
NLVR2_dev_dev-519-1-1,"If one image contains exactly three devices, and the other image features one central device with its screen open to nearly 90-degrees.","[""SELECT['one image']"", ""PROJECT['devices in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to three']"", ""SELECT['the other image']"", ""PROJECT['devices in #REF', '#5']"", ""FILTER['#6', 'that are central']"", ""PROJECT['screen of #REF', '#7']"", ""COMPARATIVE['#7', '#8', 'is open to nearly 90-degrees']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#6', '#11']""]","[""SELECT['one image']"", ""PROJECT['devices in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to three']"", ""SELECT['other image']"", ""PROJECT['central device in #REF', '#5']"", ""PROJECT['screen of #REF', '#6']"", ""COMPARATIVE['#6', '#7', 'is open to nearly 90-degrees']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#4', '#10']""]"
NLVR2_dev_dev-52-0-0,If one image contains a cup with a handle but no saucer.,"[""SELECT['cup']"", ""PROJECT['handle of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is with #3']"", ""SELECT['saucer']"", ""FILTER['#4', 'that has #5']"", ""DISCARD['#4', '#6']"", ""BOOLEAN['#7', 'is in one image']""]","[""SELECT['cup']"", ""PROJECT['handle of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is with #3']"", ""SELECT['saucer']"", ""FILTER['#4', 'that has #5']"", ""DISCARD['#4', '#6']"", ""BOOLEAN['#7', 'are in one image']""]"
NLVR2_dev_dev-52-0-1,"If an image shows a side view of one white cup on a saucer, with a soft-focus bar background.","[""SELECT['cups']"", ""FILTER['#1', 'that are white']"", ""SELECT['saucer']"", ""FILTER['#2', 'on #3']"", ""PROJECT['background of #REF', '#4']"", ""COMPARATIVE['#4', '#5', 'is soft-focus bar']"", ""PROJECT['side view of #REF', '#6']"", ""BOOLEAN['#7', 'is in an image']""]","[""SELECT['cups']"", ""FILTER['#1', 'that are white']"", ""SELECT['saucer']"", ""FILTER['#2', 'on #3']"", ""PROJECT['background of #REF', '#4']"", ""COMPARATIVE['#4', '#5', 'is soft-focus bar']"", ""BOOLEAN['#6', 'is in an image']""]"
NLVR2_dev_dev-520-3-0,If one of the images shows a hyena lying on its back and the other image shows a single hyena.,"[""SELECT['one image']"", ""PROJECT['hyena in #REF', '#1']"", ""PROJECT['back of #REF', '#2']"", ""BOOLEAN['#2', 'is lying on #3']"", ""SELECT['the other image']"", ""PROJECT['hyenas in #REF', '#5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#4', '#8']""]","[""SELECT['one image']"", ""PROJECT['hyena in #REF', '#1']"", ""PROJECT['back of #REF', '#2']"", ""BOOLEAN['#2', 'is lying on #3']"", ""SELECT['other image']"", ""PROJECT['hyena in #REF', '#5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#4', '#8']""]"
NLVR2_dev_dev-520-3-1,If the right image shows one hyena lying on its back with its head and at least its front paws raised.,"[""SELECT['the right image']"", ""PROJECT['hyenas in #REF', '#1']"", ""PROJECT['back of #REF', '#2']"", ""FILTER['#2', 'lying on #3']"", ""PROJECT['head of #REF', '#4']"", ""PROJECT['front paws of #REF', '#4']"", ""COMPARATIVE['#4', '#5', 'are raised']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']""]","[""SELECT['the right image']"", ""PROJECT['hyenas in #REF', '#1']"", ""PROJECT['back of #REF', '#2']"", ""FILTER['#2', 'lying on #3']"", ""PROJECT['head of #REF', '#4']"", ""PROJECT['front paws of #REF', '#4']"", ""COMPARATIVE['#4', '#6', 'are raised']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to one']""]"
NLVR2_dev_dev-522-2-0,If the paper towels in only one of the pictures are part of a stack.,"[""SELECT['paper towels']"", ""FILTER['#1', 'that are part of a stack']"", ""SELECT['pictures']"", ""GROUP['count', '#2', '#3']"", ""COMPARATIVE['#3', '#4', 'is equal to one']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']""]","[""SELECT['paper towels']"", ""FILTER['#1', 'that are part of a stack']"", ""SELECT['pictures']"", ""GROUP['count', '#2', '#3']"", ""COMPARATIVE['#3', '#4', 'is equal to two']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']""]"
NLVR2_dev_dev-522-3-1,If the napkins in the left image are folded into squares and stacked.,"[""SELECT['left image']"", ""PROJECT['napkins in #REF', '#1']"", ""BOOLEAN['#2', 'are folded into squares']"", ""BOOLEAN['#2', 'are stacked']"", ""BOOLEAN['logical_and', 'true', '#3', '#4']""]","[""SELECT['the left image']"", ""PROJECT['napkins in #REF', '#1']"", ""FILTER['#2', 'that are folded into squares']"", ""BOOLEAN['#3', 'are stacked']""]"
NLVR2_dev_dev-523-1-1,If all of the animals are dogs and at least one is playing with a toy.,"[""SELECT['animals']"", ""FILTER['#1', 'that are dogs']"", ""SELECT['toy']"", ""FILTER['#1', 'playing with #3']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to #6']"", ""BOOLEAN['#7', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#8', '#9']""]","[""SELECT['animals']"", ""FILTER['#1', 'that are dogs']"", ""SELECT['toy']"", ""FILTER['#1', 'playing with #3']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to #6']"", ""BOOLEAN['#7', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#8', '#9']""]"
NLVR2_dev_dev-523-3-0,If one of the images shows a single dog and the other shows two dogs playing.,"[""SELECT['one image']"", ""PROJECT['dogs in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']"", ""SELECT['the other image']"", ""PROJECT['dogs in #REF', '#5']"", ""FILTER['#6', 'that are playing']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to two']"", ""BOOLEAN['logical_and', 'true', '#4', '#9']""]","[""SELECT['one image']"", ""PROJECT['dogs in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']"", ""SELECT['the other image']"", ""PROJECT['dogs in #REF', '#5']"", ""FILTER['#6', 'that are playing']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to two']"", ""BOOLEAN['logical_and', 'true', '#4', '#9']""."
NLVR2_dev_dev-524-1-0,If one image features yellow dandelions and one white dog.,"[""SELECT['images']"", ""PROJECT['dandelions in #REF', '#1']"", ""FILTER['#2', 'that are yellow']"", ""PROJECT['dogs in #REF', '#1']"", ""FILTER['#4', 'that are white']"", ""GROUP['count', '#5', '#1']"", ""COMPARATIVE['#1', '#6', 'is equal to one']"", ""GROUP['count', '#7', '#1']"", ""COMPARATIVE['#1', '#8', 'is equal to one']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to one']""]","[""SELECT['dandelions']"", ""FILTER['#1', 'that are yellow']"", ""SELECT['dogs']"", ""FILTER['#3', 'that are white']"", ""SELECT['images']"", ""GROUP['count', '#4', '#5']"", ""COMPARATIVE['#5', '#6', 'is equal to one']"", ""GROUP['count', '#7', '#5']"", ""COMPARATIVE['#5', '#8', 'is equal to one']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to one']""]"
NLVR2_dev_dev-524-1-1,If the front paws of the dog in the image on the left are not touching the ground.,"[""SELECT['left image']"", ""PROJECT['dog in #REF', '#1']"", ""PROJECT['front paws of #REF', '#2']"", ""PROJECT['ground in #REF', '#1']"", ""BOOLEAN['#3', 'are not touching #4']""]","[""SELECT['left image']"", ""PROJECT['dog in #REF', '#1']"", ""PROJECT['front paws of #REF', '#2']"", ""PROJECT['ground in #REF', '#1']"", ""BOOLEAN['#3', 'are touching #4']"", ""BOOLEAN['#5', 'is false']""]"
NLVR2_dev_dev-525-1-1,"If the combined images contain four pillows, with at least two of them square.","[""SELECT['pillows']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to four']"", ""FILTER['#1', 'that are square']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least two']"", ""BOOLEAN['logical_and', 'true', '#3', '#6']""]","[""SELECT['pillows']"", ""FILTER['#1', 'that are square']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to four']"", ""BOOLEAN['#4', 'is at least two']"", ""BOOLEAN['logical_and', 'true', '#5', '#6']""]"
NLVR2_dev_dev-526-2-0,If there are more than two long haired dogs.,"[""SELECT['dogs']"", ""FILTER['#1', 'that are long haired']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is higher than two']""]","[""SELECT['dogs']"", ""PROJECT['haired #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is long']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is more than two']""]"
NLVR2_dev_dev-526-2-1,"If one image contains at least twice as many hounds as the other image, and no hounds are standing in profile.","[""SELECT['one image']"", ""PROJECT['hounds in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""SELECT['the other image']"", ""PROJECT['hounds in #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""ARITHMETIC['division', '#3', '#6']"", ""BOOLEAN['#7', 'is equal to two']"", ""FILTER['#1', 'that are standing in profile']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to zero']"", ""BOOLEAN['logical_and', 'true', '#10', '#11']""]","[""SELECT['one image']"", ""PROJECT['hounds in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""SELECT['other image']"", ""PROJECT['hounds in #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""ARITHMETIC['division', '#3', '#6']"", ""BOOLEAN['#7', 'is equal to two']"", ""FILTER['#1', 'that are standing in profile']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to zero']"", ""BOOLEAN['logical_and', 'true', '#5', '#10']""]"
NLVR2_dev_dev-527-3-1,If there is at least one person on the bus.,"[""SELECT['person']"", ""SELECT['bus']"", ""FILTER['#1', 'on #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']""]","[""SELECT['person']"", ""SELECT['bus']"", ""FILTER['#1', 'that is on #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']""]"
NLVR2_dev_dev-528-2-1,If the rear badge on at least one of the cars is visible.,"[""SELECT['cars']"", ""PROJECT['rear badge of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is visible']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']""]","[""SELECT['cars']"", ""PROJECT['rear badges of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is visible']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']""]"
NLVR2_dev_dev-528-3-0,"If the left image shows a black rear-facing car parked on pavement with its top covered, and the right image features a light-colored car with its top at least partly down.","[""SELECT['car']"", ""FILTER['#1', 'that is black']"", ""FILTER['#2', 'that is rear-facing']"", ""SELECT['pavement']"", ""FILTER['#3', 'parked on #4']"", ""PROJECT['top of #REF', '#5']"", ""COMPARATIVE['#5', '#6', 'is covered']"", ""BOOLEAN['#7', 'is in the left image']"", ""FILTER['#1', 'that is light-colored']"", ""PROJECT['top of #REF', '#8']"", ""COMPARATIVE['#8', '#9', 'is at least partly down']"", ""BOOLEAN['#10', 'is in the right image']"", ""BOOLEAN['logical_and', 'true', '#6', '#11']""]","[""SELECT['car']"", ""FILTER['#1', 'that is rear-facing']"", ""FILTER['#2', 'that is black']"", ""SELECT['pavement']"", ""FILTER['#3', 'parked on #4']"", ""PROJECT['top of #REF', '#5']"", ""COMPARATIVE['#5', '#6', 'is covered']"", ""BOOLEAN['#7', 'is in the left image']"", ""FILTER['#1', 'that is light-colored']"", ""PROJECT['top of #REF', '#8']"", ""COMPARATIVE['#8', '#9', 'is at least partly down']"", ""BOOLEAN['#10', 'is in the right image']"", ""BOOLEAN['logical_and', 'true', '#6', '#11']""]"
NLVR2_dev_dev-529-0-0,If there are two standing dogs.,"[""SELECT['dogs']"", ""FILTER['#1', 'that are standing']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']""]","[""SELECT['dogs']"", ""FILTER['#1', 'which are standing']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']""]"
NLVR2_dev_dev-529-0-1,"If each image shows only one dog, which is in a standing pose, and the right image features a dog with blowing fur and an upright curled tail.","[""SELECT['images']"", ""PROJECT['dogs in #REF', '#1']"", ""FILTER['#2', 'that are in a standing pose']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is equal to one']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#6', 'is equal to #7']"", ""SELECT['the right image']"", ""PROJECT['dog in #REF', '#8']"", ""PROJECT['fur of #REF', '#9']"", ""COMPARATIVE['#9', '#10', 'is blowing']"", ""PROJECT['tail of #REF', '#11']"", ""COMPARATIVE['#11', '#12', 'is curled']"", ""BOOLEAN['#13', 'is in the right image']"", ""BOOLEAN['logical_and', 'true', '#7', '#14']""]","[""SELECT['images']"", ""PROJECT['dogs in #REF', '#1']"", ""FILTER['#2', 'that are in a standing pose']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is equal to one']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#6', 'is equal to #7']"", ""SELECT['the right image']"", ""PROJECT['dog in #REF', '#10']"", ""PROJECT['fur of #REF', '#11']"", ""COMPARATIVE['#11', '#12', 'is blowing']"", ""PROJECT['tail of #REF', '#13']"", ""COMPARATIVE['#13', '#14', 'is curled']"", ""BOOLEAN['#15', 'is in the right image']"", ""BOOLEAN['logical_and', 'true', '#8', '#16']""]"
NLVR2_dev_dev-530-2-1,If there is a door in the left image.,"[""SELECT['door']"", ""BOOLEAN['#1', 'is in the left image']""]","[""SELECT['left image']"", ""PROJECT['door in #REF', '#1']"", ""BOOLEAN['#2', 'is in #3']""]"
NLVR2_dev_dev-530-3-0,"If one image shows one straight, continuous set of stairs while the other shows at least one landing or turn.","[""SELECT['one image']"", ""PROJECT['set of stairs in #REF', '#1']"", ""FILTER['#2', 'that are straight']"", ""FILTER['#3', 'that are continuous']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']"", ""SELECT['other image']"", ""PROJECT['landing in #REF', '#7']"", ""PROJECT['turn in #REF', '#7']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#6', '#10']""]","[""SELECT['one image']"", ""PROJECT['set of stairs in #REF', '#1']"", ""FILTER['#2', 'that are continuous']"", ""FILTER['#3', 'that are straight']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']"", ""SELECT['other image']"", ""PROJECT['landing in #REF', '#7']"", ""PROJECT['turn in #REF', '#7']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#6', '#10']""]"
NLVR2_dev_dev-531-3-0,If the right image shows one canoe on the water with at least six riders heading away from the camera.,"[""SELECT['the right image']"", ""PROJECT['canoes in #REF', '#1']"", ""PROJECT['the water in #REF', '#1']"", ""FILTER['#2', 'on #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']"", ""PROJECT['riders in #REF', '#1']"", ""FILTER['#7', 'that are heading away from the camera']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is at least six']"", ""BOOLEAN['logical_and', 'true', '#6', '#10']""]","[""SELECT['the right image']"", ""PROJECT['canoes in #REF', '#1']"", ""PROJECT['the water in #REF', '#1']"", ""FILTER['#2', 'on #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']"", ""PROJECT['riders in #REF', '#1']"", ""FILTER['#7', 'heading away from the camera']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is at least six']"", ""BOOLEAN['logical_and', 'true', '#6', '#10']""]"
NLVR2_dev_dev-531-3-1,If the left and right image contains the same number of boats with at least one group of people wearing blue life jackets.,"[""SELECT['boats']"", ""SELECT['life jackets']"", ""FILTER['#2', 'that are blue']"", ""FILTER['#1', 'wearing #3']"", ""AGGREGATE['count', '#4']"", ""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['groups of people in #REF', '#6']"", ""PROJECT['groups of people in #REF', '#7']"", ""FILTER['#8', 'wearing #9']"", ""FILTER['#10', 'wearing #11']"", ""AGGREGATE['count', '#12']"", ""AGGREGATE['count', '#13']"", ""BOOLEAN['#14', 'is equal to #15']"", ""BOOLEAN['#16', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#7', '#17']""]","[""SELECT['left image']"", ""PROJECT['boats in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""SELECT['right image']"", ""PROJECT['boats in #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#3', 'is equal to #6']"", ""PROJECT['groups of people in #REF', '#7']"", ""PROJECT['life jackets in #REF', '#7']"", ""FILTER['#8', 'that are blue']"", ""FILTER['#9', 'wearing #10']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#7', '#13']""]"
NLVR2_dev_dev-532-0-1,If a small dog looking at the camera is held by a human hand.,"[""SELECT['dog']"", ""FILTER['#1', 'that is small']"", ""SELECT['camera']"", ""FILTER['#2', 'looking at #3']"", ""SELECT['human hand']"", ""BOOLEAN['#4', 'is held by #5']""]","[""SELECT['dog']"", ""FILTER['#1', 'that is small']"", ""SELECT['camera']"", ""FILTER['#2', 'looking at #3']"", ""SELECT['human hand']"", ""BOOLEAN['#4', 'is hold by #5']""]"
NLVR2_dev_dev-532-3-0,If a chihuahua puppy appears to be within someone's hand.,"[""SELECT['chihuahua puppy']"", ""SELECT['someone']"", ""PROJECT['hand of #REF', '#2']"", ""BOOLEAN['#1', 'appears to be within #3']""]","[""SELECT['chihuahua puppy']"", ""SELECT['someone']"", ""PROJECT['hand of #REF', '#2']"", ""BOOLEAN['#1', 'appears within #3']""]"
NLVR2_dev_dev-53-3-0,If reddish-pink illuminated letters are on a white background over the entrance of a store.,"[""SELECT['letters']"", ""FILTER['#1', 'that are reddish-pink illuminated']"", ""SELECT['background']"", ""FILTER['#3', 'that is white']"", ""SELECT['store']"", ""PROJECT['the entrance of #REF', '#5']"", ""BOOLEAN['#2', 'are over #6']""]","[""SELECT['letters']"", ""FILTER['#1', 'that are reddish-pink illuminated']"", ""SELECT['background']"", ""FILTER['#3', 'that is white']"", ""SELECT['store']"", ""PROJECT['the entrance of #REF', '#5']"", ""BOOLEAN['#2', 'are on #4']""]"
NLVR2_dev_dev-533-1-1,"If each image shows a trio of fragrance bottles, and all bottles have sculptural figures on their lids.","[""SELECT['images']"", ""PROJECT['fragrance bottles in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is equal to three']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#5', 'is equal to #6']"", ""PROJECT['lids of #REF', '#1']"", ""COMPARATIVE['#1', '#8', 'have sculptural figures on']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to #11']"", ""BOOLEAN['logical_and', 'true', '#7', '#12']""]","[""SELECT['images']"", ""PROJECT['fragrance bottles in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is equal to three']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#6', 'is equal to #5']"", ""PROJECT['lids of #REF', '#1']"", ""COMPARATIVE['#1', '#8', 'have sculptural figures on']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to #11']"", ""BOOLEAN['logical_and', 'true', '#7', '#12']""]"
NLVR2_dev_dev-533-3-0,If the right image contains exactly three bottles.,"[""SELECT['right image']"", ""PROJECT['bottles in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to three']""]","[""SELECT['the right image']"", ""PROJECT['bottles of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to three']""]"
NLVR2_dev_dev-534-1-0,If all the instruments are laying on wood.,"[""SELECT['instruments']"", ""SELECT['wood']"", ""FILTER['#1', 'laying on #2']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to #5']""]","[""SELECT['instruments']"", ""SELECT['wood']"", ""FILTER['#1', 'that are laying on #2']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#5', 'is equal to #4']""."
NLVR2_dev_dev-535-1-1,If one of the primates in one of the images is raising a hand.,"[""SELECT['primates']"", ""SELECT['hand']"", ""FILTER['#1', 'raising #2']"", ""BOOLEAN['#3', 'is in one of the images']""]","[""SELECT['primates']"", ""SELECT['hand']"", ""FILTER['#1', 'raising #2']"", ""BOOLEAN['#3', 'is in one image']""]"
NLVR2_dev_dev-535-3-0,If one image shows a sitting chimpanzee clutching an animal to its chest.,"[""SELECT['chimpanzee']"", ""FILTER['#1', 'that is sitting']"", ""PROJECT['chest of #REF', '#2']"", ""SELECT['animal']"", ""COMPARATIVE['#2', '#4', 'is clutching #5']"", ""BOOLEAN['#6', 'is in one image']""]","[""SELECT['chimpanzee']"", ""FILTER['#1', 'that is sitting']"", ""PROJECT['chest of #REF', '#2']"", ""SELECT['animal']"", ""COMPARATIVE['#2', '#4', 'is clutching #3 to']"", ""BOOLEAN['#5', 'is in one image']""]"
NLVR2_dev_dev-536-2-0,If all of the protective gear contains blue.,"[""SELECT['protective gear']"", ""FILTER['#1', 'that contain blue']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to #4']""]","[""SELECT['protective gear']"", ""FILTER['#1', 'that contain blue']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#4', 'is equal to #3']""]"
NLVR2_dev_dev-536-2-1,If there are a variety of 9 pads.,"[""SELECT['varieties']"", ""SELECT['pads']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is equal to 9']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']""]","[""SELECT['variety']"", ""PROJECT['pads of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to 9']""]"
NLVR2_dev_dev-537-0-1,If motored vehicles are parked near the dogs in one of the images.,"[""SELECT['vehicles']"", ""FILTER['#1', 'that are motored']"", ""SELECT['the dogs']"", ""FILTER['#2', 'parked near #3']"", ""BOOLEAN['#4', 'is in one of the images']""]","[""SELECT['vehicles']"", ""FILTER['#1', 'that are motored']"", ""SELECT['dogs']"", ""FILTER['#2', 'parked near #3']"", ""BOOLEAN['#4', 'are in one of the images']""]"
NLVR2_dev_dev-537-2-0,If the right image shows crowds alongside the waving passenger and driver of a sled pulled by some bootie-wearing dogs.,"[""SELECT['crowds']"", ""SELECT['sled']"", ""SELECT['dogs']"", ""FILTER['#3', 'that are bootie-wearing']"", ""FILTER['#2', 'pulled by #4']"", ""PROJECT['passenger of #REF', '#5']"", ""PROJECT['driver of #REF', '#5']"", ""COMPARATIVE['#5', '#6', 'is waving']"", ""COMPARATIVE['#5', '#7', 'is waving']"", ""INTERSECTION['#5', '#8', '#9']"", ""BOOLEAN['#10', 'are in the right image']""]","[""SELECT['crowds']"", ""SELECT['sled']"", ""SELECT['dogs']"", ""FILTER['#3', 'that are bootie-wearing']"", ""FILTER['#2', 'pulled by #4']"", ""PROJECT['passenger of #REF', '#5']"", ""PROJECT['driver of #REF', '#5']"", ""COMPARATIVE['#5', '#6', 'is waving']"", ""COMPARATIVE['#5', '#7', 'is waving']"", ""INTERSECTION['#5', '#8', '#9']"", ""BOOLEAN['#10', 'are alongside #11']""]"
NLVR2_dev_dev-538-0-0,"If in one image, at least three baby penguins are lying on the snow flat on their belly.","[""SELECT['images']"", ""PROJECT['penguins in #REF', '#1']"", ""FILTER['#2', 'that are babies']"", ""PROJECT['the snow in #REF', '#1']"", ""PROJECT['belly of #REF', '#4']"", ""FILTER['#3', 'flat on #5']"", ""GROUP['count', '#6', '#1']"", ""COMPARATIVE['#1', '#7', 'is at least three']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to one']""]","[""SELECT['penguins']"", ""FILTER['#1', 'that are babies']"", ""SELECT['the snow']"", ""PROJECT['belly of #REF', '#2']"", ""FILTER['#3', 'flat on #4']"", ""FILTER['#2', 'lying on #5']"", ""INTERSECTION['#2', '#6', '#7']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is at least three']""]"
NLVR2_dev_dev-539-1-1,If a single cow is in a field in each of the images.,"[""SELECT['cow']"", ""SELECT['field']"", ""FILTER['#1', 'that is in #2']"", ""SELECT['images']"", ""GROUP['count', '#3', '#4']"", ""COMPARATIVE['#4', '#5', 'is equal to one']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to #8']""]","[""SELECT['cow']"", ""SELECT['field']"", ""FILTER['#1', 'in #2']"", ""PROJECT['images of #REF', '#3']"", ""GROUP['count', '#3', '#4']"", ""COMPARATIVE['#4', '#5', 'is equal to one']"", ""AGGREGATE['count', '#6']"", ""SELECT['images']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to #9']""]"
NLVR2_dev_dev-539-3-0,"If left and right images each contain one standing black buffalo in the foreground, and the buffalo in the two images are turned toward each other.","[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['buffaloes in #REF', '#1']"", ""PROJECT['buffaloes in #REF', '#2']"", ""FILTER['#3', 'that are standing']"", ""FILTER['#4', 'that are black']"", ""FILTER['#5', 'in the foreground']"", ""FILTER['#6', 'in the foreground']"", ""AGGREGATE['count', '#7']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to one']"", ""BOOLEAN['#10', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#11', '#12']""]","[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['buffaloes in #REF', '#1']"", ""PROJECT['buffaloes in #REF', '#2']"", ""FILTER['#3', 'that are black']"", ""FILTER['#4', 'that are standing']"", ""FILTER['#5', 'in the foreground']"", ""FILTER['#6', 'in the foreground']"", ""FILTER['#7', 'that are turned toward each other']"", ""AGGREGATE['count', '#8']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to one']"", ""BOOLEAN['#11', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#12', '#13']""]"
NLVR2_dev_dev-540-0-1,If an image shows rows of non-standing people in yellow and burgundy robes.,"[""SELECT['people']"", ""FILTER['#1', 'that are non-standing']"", ""PROJECT['robes of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'are yellow']"", ""COMPARATIVE['#2', '#3', 'are burgundy']"", ""INTERSECTION['#2', '#4', '#5']"", ""BOOLEAN['#6', 'are in rows']""]","[""SELECT['people']"", ""FILTER['#1', 'that are non-standing']"", ""PROJECT['robes of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'are yellow and burgundy']"", ""FILTER['#4', 'in rows']"", ""BOOLEAN['#5', 'are in an image']""]"
NLVR2_dev_dev-540-2-0,If in at least one image there are at least four mean putting their right leg high up on a fence.,"[""SELECT['means']"", ""PROJECT['right leg of #REF', '#1']"", ""SELECT['fence']"", ""COMPARATIVE['#1', '#2', 'is high up on #3']"", ""SELECT['images']"", ""GROUP['count', '#4', '#5']"", ""COMPARATIVE['#5', '#6', 'is at least four']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is at least one']""]","[""SELECT['moans']"", ""PROJECT['right leg of #REF', '#1']"", ""SELECT['fence']"", ""COMPARATIVE['#1', '#2', 'is high up on #3']"", ""SELECT['images']"", ""GROUP['count', '#4', '#5']"", ""COMPARATIVE['#5', '#6', 'is at least four']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is at least one']""]"
NLVR2_dev_dev-54-1-0,If the left-hand image shows a horned animal in profile with its head to the right and rear to the left.,"[""SELECT['animal']"", ""FILTER['#1', 'that is horned']"", ""FILTER['#2', 'that is in profile']"", ""PROJECT['head of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is to the right']"", ""PROJECT['rear of #REF', '#5']"", ""COMPARATIVE['#5', '#6', 'is to the left']"", ""INTERSECTION['#5', '#7', '#8']"", ""BOOLEAN['#9', 'is in the left-hand image']""]","[""SELECT['animal']"", ""FILTER['#1', 'that is horned']"", ""FILTER['#2', 'in profile']"", ""PROJECT['head of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is to the right']"", ""PROJECT['rear of #REF', '#3']"", ""COMPARATIVE['#3', '#5', 'is to the left']"", ""INTERSECTION['#3', '#6', '#7']"", ""BOOLEAN['#8', 'is in the left-hand image']""]"
NLVR2_dev_dev-542-2-0,If there are two hanging doors with at least one being white.,"[""SELECT['doors']"", ""FILTER['#1', 'that are hanging']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']"", ""FILTER['#1', 'that is white']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#4', '#7']""]","[""SELECT['doors']"", ""FILTER['#1', 'that are hanging']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']"", ""FILTER['#2', 'that is white']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#4', '#7']""]"
NLVR2_dev_dev-543-0-1,"If the left image contains one standing doberman with a chain around its neck, and the right image includes at least one doberman reclining on green grass.","[""SELECT['the left image']"", ""PROJECT['doberman in #REF', '#1']"", ""FILTER['#2', 'that is standing']"", ""PROJECT['neck of #REF', '#3']"", ""PROJECT['chain in #REF', '#1']"", ""COMPARATIVE['#3', '#5', 'is around #4']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']"", ""SELECT['the right image']"", ""PROJECT['doberman in #REF', '#9']"", ""PROJECT['grass in #REF', '#9']"", ""FILTER['#10', 'that is green']"", ""FILTER['#11','reclining on #12']"", ""AGGREGATE['count', '#13']"", ""BOOLEAN['#14', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#7', '#15']""]","[""SELECT['the left image']"", ""PROJECT['doberman in #REF', '#1']"", ""FILTER['#2', 'that is standing']"", ""PROJECT['neck of #REF', '#3']"", ""PROJECT['chain in #REF', '#1']"", ""COMPARATIVE['#3', '#5', 'is around #4']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']"", ""SELECT['the right image']"", ""PROJECT['doberman in #REF', '#9']"", ""PROJECT['grass in #REF', '#9']"", ""FILTER['#10', 'that is green']"", ""FILTER['#11','reclining on #12']"", ""AGGREGATE['count', '#13']"", ""BOOLEAN['#14', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#8', '#15']""]"
NLVR2_dev_dev-543-2-0,If one dog has its mouth open and tongue hanging out.,"[""SELECT['dogs']"", ""PROJECT['mouth of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is open']"", ""PROJECT['tongue of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is hanging out']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']""]","[""SELECT['dogs']"", ""PROJECT['mouth of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is open']"", ""PROJECT['tongue of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is hanging out']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']""]-"
NLVR2_dev_dev-544-1-1,If there is snow in the truck's plow in each image,"[""SELECT['snow']"", ""SELECT['truck plow']"", ""FILTER['#1', 'in #2']"", ""PROJECT['images of #REF', '#3']"", ""SELECT['images']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to #7']""]","[""SELECT['snow']"", ""SELECT['truck plow']"", ""FILTER['#1', 'that is in #2']"", ""PROJECT['images of #REF', '#3']"", ""SELECT['images']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to #8']""]"
NLVR2_dev_dev-544-3-0,If one image is from inside a snow plow.,"[""SELECT['snow plow']"", ""PROJECT['inside of #REF', '#1']"", ""BOOLEAN['#2', 'is in one image']""]","[""SELECT['snow plow']"", ""FILTER['#1', 'that is inside #2']"", ""BOOLEAN['#3', 'is in one image']""]"
NLVR2_dev_dev-545-0-1,If the guinea pigs in the left and right images have their bodies turned leftward.,"[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['guinea pigs in #REF', '#1']"", ""PROJECT['guinea pigs in #REF', '#2']"", ""PROJECT['bodies of #REF', '#3']"", ""BOOLEAN['#4', 'are turned leftward']"", ""BOOLEAN['#5', 'are turned leftward']"", ""BOOLEAN['logical_and', 'true', '#6', '#7']""]","[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['guinea pigs in #REF', '#1']"", ""PROJECT['guinea pigs in #REF', '#2']"", ""PROJECT['bodies of #REF', '#3']"", ""BOOLEAN['#4', 'are turned leftward']"", ""BOOLEAN['#5', 'are turned leftward']"", ""BOOLEAN['logical_and', 'true', '#6', '#7']""."
NLVR2_dev_dev-545-1-0,If both images show a guinea pig facing the left.,"[""SELECT['guinea pig']"", ""FILTER['#1', 'that is facing the left']"", ""BOOLEAN['#2', 'is in both images']""]","[""SELECT['guinea pig']"", ""FILTER['#1', 'facing the left']"", ""BOOLEAN['#2', 'is in both images']""]"
NLVR2_dev_dev-546-1-1,If there are three dogs in total.,"[""SELECT['dogs']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to three']""]","[""SELECT['dogs']"", ""AGGREGATE['sum', '#1']"", ""BOOLEAN['#2', 'is equal to three']""]"
NLVR2_dev_dev-547-0-0,If there are at least  five  zebras and five cows grazing.,"[""SELECT['zebras']"", ""SELECT['cows']"", ""FILTER['#1', 'that are grazing']"", ""FILTER['#2', 'that are grazing']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least five']"", ""BOOLEAN['#6', 'is at least five']"", ""BOOLEAN['logical_and', 'true', '#7', '#8']""]","[""SELECT['zebras']"", ""SELECT['cows']"", ""FILTER['#1', 'that are grazing']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least five']"", ""BOOLEAN['#5', 'is at least five']"", ""BOOLEAN['logical_and', 'true', '#6', '#7']""]"
NLVR2_dev_dev-547-0-1,"If in one image, a predator animal's body is turned toward the camera and rightward-aimed zebra are present nearby.","[""SELECT['predator animal']"", ""PROJECT['body of #REF', '#1']"", ""SELECT['camera']"", ""COMPARATIVE['#1', '#2', 'is turned toward #3']"", ""SELECT['zebra']"", ""FILTER['#5', 'that is rightward-aimed']"", ""FILTER['#6', 'that is nearby']"", ""BOOLEAN['#7', 'is in one image']""]","[""SELECT['predator animal']"", ""PROJECT['body of #REF', '#1']"", ""SELECT['camera']"", ""COMPARATIVE['#1', '#2', 'is turned toward #3']"", ""SELECT['zebra']"", ""FILTER['#5', 'that is rightward-aimed']"", ""FILTER['#6', 'that are nearby']"", ""BOOLEAN['#7', 'is in one image']""]"
NLVR2_dev_dev-548-3-0,If two soda bottles have the pepsi logo.,"[""SELECT['soda bottles']"", ""SELECT['the pepsi logo']"", ""FILTER['#1', 'that have #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']""]","[""SELECT['soda bottles']"", ""FILTER['#1', 'that have the pepsi logo']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']""]"
NLVR2_dev_dev-548-3-1,"If two large soda bottles are the same brand with caps and labels using the same colors, but different design details.","[""SELECT['soda bottles']"", ""FILTER['#1', 'that are large']"", ""PROJECT['brands of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'are the same']"", ""PROJECT['caps of #REF', '#4']"", ""PROJECT['labels of #REF', '#4']"", ""PROJECT['colors of #REF', '#6']"", ""COMPARATIVE['#6', '#7', 'are the same']"", ""PROJECT['design details of #REF', '#8']"", ""COMPARATIVE['#8', '#9', 'are different']"", ""INTERSECTION['#8', '#10', '#11']"", ""AGGREGATE['count', '#12']"", ""BOOLEAN['#13', 'is equal to two']""]","[""SELECT['soda bottles']"", ""FILTER['#1', 'that are large']"", ""PROJECT['brands of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'are the same']"", ""PROJECT['caps of #REF', '#4']"", ""PROJECT['labels of #REF', '#4']"", ""PROJECT['colors of #REF', '#6']"", ""COMPARATIVE['#6', '#7', 'are the same']"", ""PROJECT['design details of #REF', '#8']"", ""COMPARATIVE['#8', '#9', 'are different']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is equal to two']""]"
NLVR2_dev_dev-549-0-1,If there is on one crab in each image.,"[""SELECT['crabs']"", ""SELECT['images']"", ""GROUP['count', '#1', '#2']"", ""COMPARATIVE['#2', '#3', 'is equal to one']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to #6']""]","[""SELECT['images']"", ""PROJECT['crabs in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is equal to one']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#6', 'is equal to #5']""]"
NLVR2_dev_dev-549-3-0,If each image includes only a single crab.,"[""SELECT['crabs']"", ""SELECT['images']"", ""GROUP['count', '#1', '#2']"", ""COMPARATIVE['#2', '#3', 'is equal to one']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to #6']""]","[""SELECT['images']"", ""PROJECT['crabs in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is equal to one']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#6', 'is equal to #5']""]"
NLVR2_dev_dev-550-0-0,"If an image contains a single shoe, and the combined images include at least one human leg wearing a sneaker.","[""SELECT['images']"", ""PROJECT['shoes in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is equal to one']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']"", ""PROJECT['human leg in #REF', '#1']"", ""PROJECT['sneaker in #REF', '#1']"", ""FILTER['#8', 'that is wearing #9']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#6', '#12']""]","[""SELECT['images']"", ""PROJECT['shoes in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is equal to one']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']"", ""PROJECT['human leg in #REF', '#1']"", ""PROJECT['sneaker in #REF', '#1']"", ""FILTER['#8', 'wearing #9']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#7', '#12']""]"
NLVR2_dev_dev-550-3-1,If none of the sneakers in the images are on a foot.,"[""SELECT['images']"", ""PROJECT['sneakers in #REF', '#1']"", ""PROJECT['foot in #REF', '#1']"", ""FILTER['#2', 'on #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to zero']""]","[""SELECT['images']"", ""PROJECT['sneakers in #REF', '#1']"", ""PROJECT['foot in #REF', '#1']"", ""FILTER['#2', 'that are on #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to zero']""]"
NLVR2_dev_dev-551-2-0,If there are three hogs in the pair of images.,"[""SELECT['images']"", ""PROJECT['hogs in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to three']""]","[""SELECT['hogs']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to three']""]"
NLVR2_dev_dev-551-2-1,If the larger of two animals in the image on the right has tusks while the smaller animal does not.,"[""SELECT['right image']"", ""PROJECT['animals in #REF', '#1']"", ""PROJECT['size of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is the largest']"", ""PROJECT['tusks of #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to two']"", ""SELECT['smaller animal']"", ""PROJECT['tusks of #REF', '#8']"", ""BOOLEAN['#9', 'is equal to zero']"", ""BOOLEAN['logical_and', 'true', '#7', '#10']""]","[""SELECT['the image on the right']"", ""PROJECT['animals in #REF', '#1']"", ""FILTER['#2', 'that are large']"", ""PROJECT['tusks of #REF', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to two']"", ""SELECT['the smaller animal']"", ""PROJECT['tusks of #REF', '#7']"", ""BOOLEAN['#8', 'is equal to zero']"", ""BOOLEAN['logical_and', 'true', '#6', '#9']""]"
NLVR2_dev_dev-55-2-0,If in at least one image there is a single snow vehicle with its plow in the air.,"[""SELECT['images']"", ""PROJECT['snow vehicles in #REF', '#1']"", ""PROJECT['plow of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is in the air']"", ""GROUP['count', '#4', '#1']"", ""COMPARATIVE['#1', '#5', 'is equal to one']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least one']""]","[""SELECT['snow vehicle']"", ""PROJECT['plow of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is in the air']"", ""SELECT['images']"", ""GROUP['count', '#3', '#4']"", ""COMPARATIVE['#4', '#5', 'is equal to one']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least one']""]"
NLVR2_dev_dev-552-0-0,If all the dogs are standing.,"[""SELECT['dogs']"", ""FILTER['#1', 'that are standing']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to #4']""]","[""SELECT['dogs']"", ""FILTER['#1', 'that are standing']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to #3']""]"
NLVR2_dev_dev-552-0-1,"If in the left image, there's a single basset hound walking to the left.","[""SELECT['left image']"", ""PROJECT['basset hound in #REF', '#1']"", ""FILTER['#2', 'that is walking to the left']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]","[""SELECT['left image']"", ""PROJECT['basset hound of #REF', '#1']"", ""FILTER['#2', 'that is walking to the left']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]"
NLVR2_dev_dev-55-2-1,If one plow is off the ground.,"[""SELECT['plows']"", ""SELECT['ground']"", ""FILTER['#1', 'that are off #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]","[""SELECT['plows']"", ""SELECT['ground']"", ""FILTER['#1', 'that are off #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]."
NLVR2_dev_dev-553-3-0,"If one image shows square throw pillows on a white couch, and the pillows feature letters and numbers on them.","[""SELECT['throw pillows']"", ""FILTER['#1', 'that are square']"", ""SELECT['couch']"", ""FILTER['#3', 'that is white']"", ""FILTER['#2', 'on #4']"", ""PROJECT['letters on #REF', '#5']"", ""PROJECT['numbers on #REF', '#5']"", ""UNION['#6', '#7']"", ""BOOLEAN['#8', 'are in one image']""]","[""SELECT['throw pillows']"", ""FILTER['#1', 'that are square']"", ""SELECT['couch']"", ""FILTER['#3', 'that is white']"", ""FILTER['#2', 'on #4']"", ""BOOLEAN['#5', 'feature letters on them']"", ""BOOLEAN['#5', 'feature numbers on them']"", ""BOOLEAN['logical_and', 'true', '#6', '#7']""]"
NLVR2_dev_dev-553-3-1,If one image shows decorative pillows on a couch and the other shows pillows on a bed.,"[""SELECT['one image']"", ""PROJECT['pillows in #REF', '#1']"", ""FILTER['#2', 'that are decorative']"", ""PROJECT['couch in #REF', '#1']"", ""BOOLEAN['#3', 'are on #4']"", ""SELECT['other image']"", ""PROJECT['pillows in #REF', '#6']"", ""PROJECT['bed in #REF', '#6']"", ""BOOLEAN['#7', 'are on #8']"", ""BOOLEAN['logical_and', 'true', '#5', '#9']""]","[""SELECT['one image']"", ""PROJECT['decorative pillows in #REF', '#1']"", ""PROJECT['couch in #REF', '#1']"", ""BOOLEAN['#2', 'are on #3']"", ""SELECT['the other image']"", ""PROJECT['pillows in #REF', '#5']"", ""PROJECT['bed in #REF', '#5']"", ""BOOLEAN['#6', 'are on #7']"", ""BOOLEAN['logical_and', 'true', '#4', '#8']""]"
NLVR2_dev_dev-554-1-0,If one dog is running and two other dogs are sitting in the grass and watching over some sheep.,"[""SELECT['dogs']"", ""FILTER['#1', 'that are running']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']"", ""SELECT['grass']"", ""FILTER['#4','sitting in #5']"", ""SELECT['sheep']"", ""FILTER['#6', 'watching over #7']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to two']"", ""BOOLEAN['logical_and', 'true', '#7', '#10']""]","[""SELECT['dogs']"", ""FILTER['#1', 'that are running']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']"", ""SELECT['grass']"", ""FILTER['#5','sitting in #4']"", ""SELECT['sheep']"", ""FILTER['#6', 'watching over #7']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to two']"", ""BOOLEAN['logical_and', 'true', '#7', '#10']""]"
NLVR2_dev_dev-554-3-1,"If the right image shows a black-and-white dog in a bounding pose, and the left image includes a dog behind sheep, looking at them.","[""SELECT['right image']"", ""PROJECT['dog in #REF', '#1']"", ""FILTER['#2', 'that is black-and-white']"", ""BOOLEAN['#3', 'is in a bounding pose']"", ""SELECT['left image']"", ""PROJECT['dog in #REF', '#5']"", ""PROJECT['sheep in #REF', '#5']"", ""BOOLEAN['#6', 'is behind #7']"", ""BOOLEAN['logical_and', 'true', '#4', '#8']""]","[""SELECT['right image']"", ""PROJECT['dog in #REF', '#1']"", ""FILTER['#2', 'that is black-and-white']"", ""BOOLEAN['#3', 'is in a bounding pose']"", ""SELECT['left image']"", ""PROJECT['dog in #REF', '#5']"", ""PROJECT['sheep in #REF', '#5']"", ""FILTER['#6', 'that is behind #7']"", ""BOOLEAN['#8', 'is looking at #9']"", ""BOOLEAN['logical_and', 'true', '#4', '#10']""]"
NLVR2_dev_dev-555-0-1,If at least one roll of toilet paper is outside of its packaging.,"[""SELECT['roll of toilet paper']"", ""PROJECT['packaging of #REF', '#1']"", ""FILTER['#1', 'that is outside of #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']""]","[""SELECT['rolls of toilet paper']"", ""PROJECT['packaging of #REF', '#1']"", ""FILTER['#1', 'that is outside of #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']""]"
NLVR2_dev_dev-555-2-0,"If in the left image, one roll of toilet paper is partially unrolled.","[""SELECT['left image']"", ""PROJECT['roll of toilet paper in #REF', '#1']"", ""FILTER['#2', 'that is partially unrolled']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]","[""SELECT['left image']"", ""PROJECT['rolls of toilet paper in #REF', '#1']"", ""FILTER['#2', 'that are partially unrolled']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]"
NLVR2_dev_dev-556-0-0,If one long nosed dog is rolling over and scratching its back.,"[""SELECT['dogs']"", ""FILTER['#1', 'that are long nosed']"", ""PROJECT['back of #REF', '#2']"", ""FILTER['#2', 'that are rolling over']"", ""FILTER['#4', 'that are scratching #3']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']""]","[""SELECT['dogs']"", ""FILTER['#1', 'that are long nosed']"", ""PROJECT['back of #REF', '#2']"", ""FILTER['#2', 'rolling over']"", ""COMPARATIVE['#2', '#3', 'is scratching #4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']""]"
NLVR2_dev_dev-556-2-1,If an image shows a row of cot-type beds with tubular frames holding reclining dogs.,"[""SELECT['beds']"", ""FILTER['#1', 'that are cot-type']"", ""PROJECT['frames of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'are tubular']"", ""SELECT['dogs']"", ""FILTER['#5', 'that are reclining']"", ""FILTER['#4', 'holding #6']"", ""BOOLEAN['#7', 'is in an image']""]","[""SELECT['beds']"", ""FILTER['#1', 'that are cot-type']"", ""PROJECT['frames of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'are tubular']"", ""SELECT['dogs']"", ""FILTER['#6', 'that are reclining']"", ""FILTER['#4', 'holding #5']"", ""BOOLEAN['#7', 'is in an image']""]"
NLVR2_dev_dev-557-0-1,If a cheetah is sitting.,"[""SELECT['cheetah']"", ""FILTER['#1', 'that is sitting']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least one']""]","[""SELECT['cheetahs']"", ""BOOLEAN['#1', 'is sitting']""]"
NLVR2_dev_dev-557-2-0,If no more than two cheetahs are present.,"[""SELECT['cheetahs']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is at most two']""]","[""SELECT['cheetahs']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is no more than two']""]"
NLVR2_dev_dev-558-1-0,If there is only one bottle in the left image.,"[""SELECT['left image']"", ""PROJECT['bottle in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']""]","[""SELECT['left image']"", ""PROJECT['bottles of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']""]"
NLVR2_dev_dev-558-3-1,If there are exactly four bottles in total.,"[""SELECT['bottles']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to four']""]","[""SELECT['bottles']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is exactly four']""]"
NLVR2_dev_dev-559-2-1,"If the left image shows one dog standing in profile with its body turned leftward, and the right image shows one dog running across grass with its mouth open.","[""SELECT['left image']"", ""PROJECT['dog in #REF', '#1']"", ""FILTER['#2', 'that is standing in profile']"", ""PROJECT['body of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is turned leftward']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']"", ""SELECT['right image']"", ""PROJECT['dog in #REF', '#8']"", ""PROJECT['grass in #REF', '#8']"", ""FILTER['#9', 'running across #10']"", ""PROJECT['mouth of #REF', '#11']"", ""COMPARATIVE['#11', '#12', 'is open']"", ""AGGREGATE['count', '#13']"", ""BOOLEAN['#14', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#7', '#15']""]","[""SELECT['left image']"", ""PROJECT['dog in #REF', '#1']"", ""FILTER['#2', 'that is standing in profile']"", ""PROJECT['body of #REF', '#3']"", ""BOOLEAN['#4', 'is turned leftward']"", ""SELECT['right image']"", ""PROJECT['dog in #REF', '#6']"", ""PROJECT['grass in #REF', '#6']"", ""FILTER['#7', 'that is running across #8']"", ""PROJECT['mouth of #REF', '#9']"", ""COMPARATIVE['#9', '#10', 'is open']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#5', '#13']""]"
NLVR2_dev_dev-559-3-0,If exactly one dog is standing still.,"[""SELECT['dogs']"", ""FILTER['#1', 'that are standing still']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']""]","[""SELECT['dogs']"", ""FILTER['#1', 'that is standing still']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']""]"
NLVR2_dev_dev-560-0-1,If three people are sitting in the boat in the water in the image on the right.,"[""SELECT['right image']"", ""PROJECT['people in #REF', '#1']"", ""PROJECT['boat in #REF', '#1']"", ""PROJECT['water in #REF', '#1']"", ""FILTER['#3', 'in #4']"", ""FILTER['#2','sitting in #5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to three']""]","[""SELECT['right image']"", ""PROJECT['people in #REF', '#1']"", ""PROJECT['boat in #REF', '#1']"", ""PROJECT['water in #REF', '#1']"", ""FILTER['#3', 'that is in #4']"", ""FILTER['#2', 'that are sitting in #5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to three']""]"
NLVR2_dev_dev-560-1-0,If an image shows at least one canoe pulled up to the water's edge.,"[""SELECT['canoes']"", ""SELECT['water']"", ""PROJECT['edge of #REF', '#2']"", ""FILTER['#1', 'pulled up to #3']"", ""PROJECT['images of #REF', '#4']"", ""GROUP['count', '#4', '#5']"", ""COMPARATIVE['#5', '#6', 'is at least one']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to one']""]","[""SELECT['canoe']"", ""SELECT['water']"", ""PROJECT['edge of #REF', '#2']"", ""FILTER['#1', 'pulled up to #3']"", ""PROJECT['images of #REF', '#4']"", ""GROUP['count', '#4', '#5']"", ""COMPARATIVE['#5', '#6', 'is at least one']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to one']""]"
NLVR2_dev_dev-561-1-0,If a dog is laying on wood.,"[""SELECT['dog']"", ""SELECT['wood']"", ""BOOLEAN['#1', 'is laying on #2']""]","[""SELECT['dog']"", ""SELECT['wood']"", ""FILTER['#1', 'that is laying on #2']"", ""BOOLEAN['#3', 'is in #4']""]"
NLVR2_dev_dev-561-3-1,"If each image contains just one dog, and one image features a dog in a reclining pose with its head upright and front paws extended.","[""SELECT['images']"", ""PROJECT['dogs in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is equal to one']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#5', 'is equal to #6']"", ""FILTER['#1', 'that is in reclining pose']"", ""PROJECT['head of #REF', '#8']"", ""COMPARATIVE['#8', '#9', 'is upright']"", ""PROJECT['front paws of #REF', '#10']"", ""COMPARATIVE['#10', '#11', 'are extended']"", ""AGGREGATE['count', '#12']"", ""BOOLEAN['#13', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#7', '#14']""]","[""SELECT['images']"", ""PROJECT['dogs in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is equal to one']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#5', 'is equal to #6']"", ""FILTER['#1', 'in reclining pose']"", ""PROJECT['head of #REF', '#8']"", ""COMPARATIVE['#8', '#9', 'is upright']"", ""PROJECT['front paws of #REF', '#10']"", ""COMPARATIVE['#10', '#11', 'are extended']"", ""AGGREGATE['count', '#12']"", ""BOOLEAN['#13', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#7', '#14']""]"
NLVR2_dev_dev-562-2-1,If we've got four chimpanzees here.,"[""SELECT['chimpanzees']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to four']""]","[""SELECT['chimpanzees']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to four']""]"
NLVR2_dev_dev-562-3-0,"If an image shows two adult chimps squatting side by side, one with a wide-opne mouth and at least one with its arms folded across its front.","[""SELECT['chimps']"", ""FILTER['#1', 'that are adult']"", ""FILTER['#2', 'that are squatting side by side']"", ""PROJECT['mouth of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is wide-opne']"", ""PROJECT['arms of #REF', '#5']"", ""PROJECT['front of #REF', '#5']"", ""COMPARATIVE['#5', '#6', 'are folded across #7']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to two']""]","[""SELECT['chimps']"", ""FILTER['#1', 'that are adults']"", ""FILTER['#2', 'that are squatting side by side']"", ""PROJECT['mouth of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is wide-opne']"", ""PROJECT['arms of #REF', '#5']"", ""PROJECT['front of #REF', '#5']"", ""COMPARATIVE['#5', '#6', 'are folded across #7']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to two']""]"
NLVR2_dev_dev-56-3-0,If in at least one image there is a man with a black  hat and brown vest playing three saxophones at once.,"[""SELECT['man']"", ""SELECT['hat']"", ""FILTER['#2', 'that is black']"", ""SELECT['vest']"", ""FILTER['#4', 'that is brown']"", ""FILTER['#1', 'with #3']"", ""FILTER['#5', 'with #6']"", ""SELECT['saxophones']"", ""FILTER['#7', 'playing #8 at once']"", ""PROJECT['images of #REF', '#9']"", ""GROUP['count', '#9', '#10']"", ""COMPARATIVE['#10', '#11', 'is equal to three']"", ""AGGREGATE['count', '#12']"", ""BOOLEAN['#13', 'is at least one']""]","[""SELECT['man']"", ""SELECT['hat']"", ""FILTER['#2', 'that is black']"", ""SELECT['vest']"", ""FILTER['#4', 'that is brown']"", ""FILTER['#1', 'with #3']"", ""FILTER['#6', 'with #5']"", ""SELECT['saxophones']"", ""FILTER['#7', 'playing #8 at once']"", ""GROUP['count', '#9', '#10']"", ""COMPARATIVE['#10', '#11', 'is equal to three']"", ""BOOLEAN['#12', 'is in at least one image']""]"
NLVR2_dev_dev-563-1-1,If in at least one image there is a two stared row of dumbbells.,"[""SELECT['dumbbells']"", ""FILTER['#1', 'that are stared']"", ""PROJECT['row of #REF', '#2']"", ""GROUP['count', '#3', '#2']"", ""COMPARATIVE['#2', '#4', 'is equal to two']"", ""BOOLEAN['#5', 'is in at least one image']""]","[""SELECT['dumbbells']"", ""FILTER['#1', 'that are stared']"", ""PROJECT['row of #REF', '#2']"", ""GROUP['count', '#3', '#2']"", ""COMPARATIVE['#2', '#4', 'is equal to two']"", ""BOOLEAN['#5', 'is in at least one image']""]-"
NLVR2_dev_dev-563-2-0,"If the left image features at least one row of barbell weights on a rack, and the right image features a barbell in the foreground with a view of a gym and its equipment in the background.","[""SELECT['left image']"", ""PROJECT['barbell weights in #REF', '#1']"", ""PROJECT['rack in #REF', '#1']"", ""FILTER['#2', 'on #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']"", ""SELECT['right image']"", ""PROJECT['barbell in #REF', '#7']"", ""FILTER['#8', 'that is in the foreground']"", ""PROJECT['gymna in #REF', '#7']"", ""PROJECT['equipment in #REF', '#7']"", ""FILTER['#9', 'that is in the background of #10']"", ""BOOLEAN['#11', 'is in the foreground']"", ""BOOLEAN['logical_and', 'true', '#6', '#12']""]","[""SELECT['left image']"", ""PROJECT['barbell weights in #REF', '#1']"", ""PROJECT['rack in #REF', '#1']"", ""FILTER['#2', 'on #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']"", ""SELECT['right image']"", ""PROJECT['barbell in #REF', '#7']"", ""FILTER['#8', 'that is in the foreground']"", ""PROJECT['gymnast in #REF', '#7']"", ""PROJECT['equipment of #REF', '#7']"", ""FILTER['#9', 'that is in the background of #10']"", ""BOOLEAN['#11', 'is in the foreground']"", ""BOOLEAN['logical_and', 'true', '#6', '#12']""]"
NLVR2_dev_dev-565-1-0,If there is one puppy sitting alone on a white arm chair.,"[""SELECT['puppy']"", ""FILTER['#1', 'that is sitting alone']"", ""SELECT['arm chair']"", ""FILTER['#3', 'that is white']"", ""FILTER['#2', 'on #4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']""]","[""SELECT['puppy']"", ""FILTER['#1', 'that is sitting alone']"", ""SELECT['arm chair']"", ""FILTER['#3', 'that is white']"", ""FILTER['#2', 'that is on #4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']""]"
NLVR2_dev_dev-566-2-1,"If each image contains a single dog, and one of the dogs is wearing something besides a dog collar.","[""SELECT['images']"", ""PROJECT['dogs in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is equal to one']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#5', 'is equal to #6']"", ""SELECT['dog collar']"", ""FILTER['#8', 'that is wearing #9']"", ""DISCARD['#8', '#10']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#7', '#13']""]","[""SELECT['images']"", ""PROJECT['dogs in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is equal to one']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#5', 'is equal to #6']"", ""SELECT['dog collar']"", ""DISCARD['#8', '#9']"", ""FILTER['#1', 'wearing #10']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#7', '#13']""]"
NLVR2_dev_dev-566-3-0,If two of the dogs have their mouths open and tongues hanging out.,"[""SELECT['dogs']"", ""PROJECT['mouth of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is open']"", ""PROJECT['tongues of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'are hanging out']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to two']""]","[""SELECT['dogs']"", ""PROJECT['mouth of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are open']"", ""PROJECT['tongues of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'are hanging out']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to two']""]"
NLVR2_dev_dev-567-1-0,If there are three skunks in total.,"[""SELECT['skunks']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to three']""]","[""SELECT['skunks']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is three']""]"
NLVR2_dev_dev-567-3-1,If there are a total of 2 skunks.,"[""SELECT['skunks']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to two']""]","[""SELECT['skunks']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to 2']""]-"
NLVR2_dev_dev-568-1-0,If each sailboat sailing in the ocean has three white mainsails.,"[""SELECT['sailboats']"", ""SELECT['the ocean']"", ""FILTER['#1','sailing in #2']"", ""PROJECT['mainsails of #REF', '#3']"", ""FILTER['#4', 'that are white']"", ""GROUP['count', '#5', '#3']"", ""COMPARATIVE['#3', '#6', 'is equal to three']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to #9']""]","[""SELECT['sailboats']"", ""SELECT['ocean']"", ""FILTER['#1','sailing in #2']"", ""PROJECT['mainsails of #REF', '#3']"", ""FILTER['#4', 'that are white']"", ""GROUP['count', '#5', '#3']"", ""COMPARATIVE['#3', '#6', 'is equal to three']"", ""AGGREGATE['count', '#7']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#8', 'is equal to #9']""]"
NLVR2_dev_dev-569-1-1,"If the left image contains exactly six golf balls of different colors, and the right image shows a hand squeezing a blue rubber golf ball.","[""SELECT['the left image']"", ""PROJECT['golf balls in #REF', '#1']"", ""PROJECT['colors of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'are different']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to six']"", ""SELECT['the right image']"", ""PROJECT['hand in #REF', '#7']"", ""PROJECT['golf ball in #REF', '#7']"", ""FILTER['#8', 'that is blue']"", ""FILTER['#9', 'that is rubber']"", ""BOOLEAN['#10', 'is squeezing #11']"", ""BOOLEAN['logical_and', 'true', '#6', '#12']""]","[""SELECT['left image']"", ""PROJECT['golf balls in #REF', '#1']"", ""PROJECT['colors of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'are different']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to six']"", ""SELECT['right image']"", ""PROJECT['hand in #REF', '#7']"", ""PROJECT['golf ball in #REF', '#7']"", ""FILTER['#8', 'that is blue']"", ""FILTER['#9', 'that is rubber']"", ""FILTER['#10', 'that is squeezing #11']"", ""AGGREGATE['count', '#12']"", ""BOOLEAN['#13', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#7', '#14']""]"
NLVR2_dev_dev-569-3-0,If in at least one image there are at least  three squishy yellow dimpled balls.,"[""SELECT['balls']"", ""FILTER['#1', 'that are squishy']"", ""FILTER['#2', 'that are yellow']"", ""FILTER['#3', 'that are dimpled']"", ""SELECT['images']"", ""GROUP['count', '#4', '#5']"", ""COMPARATIVE['#5', '#6', 'is at least three']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is at least one']""]","[""SELECT['balls']"", ""FILTER['#1', 'that are yellow']"", ""FILTER['#2', 'that are dimpled']"", ""FILTER['#3', 'that are squishy']"", ""SELECT['images']"", ""GROUP['count', '#4', '#5']"", ""COMPARATIVE['#5', '#6', 'is at least three']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is at least one']""]"
NLVR2_dev_dev-57-0-1,"If at least one image shows one gorilla standing in a small blue pool to the left of a rope net, with arms raised and splashing water.","[""SELECT['gorillas']"", ""SELECT['pool']"", ""FILTER['#2', 'that is small']"", ""FILTER['#3', 'that is blue']"", ""SELECT['rope net']"", ""FILTER['#1','standing in #4']"", ""PROJECT['arms of #REF', '#5']"", ""COMPARATIVE['#5', '#6', 'are raised']"", ""SELECT['water']"", ""FILTER['#7','splashing #8']"", ""FILTER['#9', 'to the left of #10']"", ""PROJECT['images of #REF', '#11']"", ""GROUP['count', '#11', '#12']"", ""COMPARATIVE['#12', '#13', 'is equal to one']"", ""AGGREGATE['count', '#14']"", ""BOOLEAN['#15', 'is at least one']""]","[""SELECT['gorillas']"", ""SELECT['pool']"", ""FILTER['#2', 'that is small']"", ""FILTER['#3', 'that is blue']"", ""SELECT['rope net']"", ""FILTER['#4', 'to the left of #5']"", ""PROJECT['arms of #REF', '#6']"", ""COMPARATIVE['#6', '#7', 'are raised']"", ""SELECT['water']"", ""FILTER['#8','splashing #9']"", ""FILTER['#1','standing in #10']"", ""BOOLEAN['#11', 'is in at least one image']""]"
NLVR2_dev_dev-570-1-1,If at least some of the perfume in the image on the right is inside a box.,"[""SELECT['right image']"", ""PROJECT['perfume in #REF', '#1']"", ""PROJECT['box in #REF', '#1']"", ""FILTER['#2', 'that is inside #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']""]","[""SELECT['right image']"", ""PROJECT['perfume in #REF', '#1']"", ""PROJECT['box in #REF', '#1']"", ""FILTER['#2', 'that is inside #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least two']""]"
NLVR2_dev_dev-571-2-0,"If an image shows a single, standing dog, with its body turned rightward and some kind of """"""""strap"""""""" around part of its body.","[""SELECT['dog']"", ""FILTER['#1', 'that is standing']"", ""PROJECT['body of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is turned rightward']"", ""PROJECT['part of body of #REF', '#4']"", ""SELECT['strap']"", ""COMPARATIVE['#4', '#5', 'is around #6']"", ""INTERSECTION['#4', '#7', '#8']"", ""BOOLEAN['#9', 'is in an image']""]","[""SELECT['dog']"", ""FILTER['#1', 'that is standing']"", ""PROJECT['body of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is turned rightward']"", ""PROJECT['part of body of #REF', '#4']"", ""SELECT['strap']"", ""FILTER['#6', 'around #5']"", ""FILTER['#7', 'around #8']"", ""BOOLEAN['#9', 'is in an image']""]"
NLVR2_dev_dev-571-3-1,If the dog in the image on the left has something around its neck.,"[""SELECT['left image']"", ""PROJECT['dog in #REF', '#1']"", ""PROJECT['neck of #REF', '#2']"", ""BOOLEAN['#2', 'has something around #3']""]","[""SELECT['left image']"", ""PROJECT['dog of #REF', '#1']"", ""PROJECT['neck of #REF', '#2']"", ""BOOLEAN['#2', 'has something around #3']""]"
NLVR2_dev_dev-57-2-0,If water goes everywhere as a gorilla splashes it out of a blue pool.,"[""SELECT['water']"", ""FILTER['#1', 'that goes everywhere']"", ""SELECT['gorilla']"", ""SELECT['pool']"", ""FILTER['#4', 'that is blue']"", ""BOOLEAN['#2','splashes #3 out of #5']""]","[""SELECT['water']"", ""FILTER['#1', 'that goes everywhere']"", ""SELECT['gorilla']"", ""SELECT['pool']"", ""FILTER['#4', 'that is blue']"", ""BOOLEAN['#3','splashes #2 out of #5']""]"
NLVR2_dev_dev-572-3-0,If a blueprint includes an aerial view of a sailboat as well as a side view with upright sails.,"[""SELECT['sailboat']"", ""PROJECT['aerial view of #REF', '#1']"", ""SELECT['side view']"", ""PROJECT['sails of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'are upright']"", ""BOOLEAN['#2', 'includes #5']"", ""BOOLEAN['#6', 'includes #7']"", ""BOOLEAN['logical_and', 'true', '#4', '#8']""]","[""SELECT['sailboat']"", ""PROJECT['airplane of #REF', '#1']"", ""SELECT['side view']"", ""PROJECT['sails of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'are upright']"", ""BOOLEAN['#2', 'includes #5']"", ""BOOLEAN['#6', 'includes #7']"", ""BOOLEAN['logical_and', 'true', '#8', '#9']""]"
NLVR2_dev_dev-573-0-0,"If in both images, the bottles that hold the soap are attached to the pump.","[""SELECT['bottles']"", ""SELECT['soap']"", ""FILTER['#1', 'that hold #2']"", ""SELECT['pump']"", ""FILTER['#3', 'that are attached to #4']"", ""PROJECT['images of #REF', '#5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to two']""]","[""SELECT['bottles']"", ""SELECT['the soap']"", ""FILTER['#1', 'that hold #2']"", ""SELECT['the pump']"", ""FILTER['#3', 'that are attached to #4']"", ""PROJECT['images of #REF', '#5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to two']""]"
NLVR2_dev_dev-573-1-1,If there are exactly two nozzles pictured.,"[""SELECT['nozzles']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to two']""]","[""SELECT['nozzles']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to two']""]."
NLVR2_dev_dev-574-0-1,If one image has two chimpanzees in it and the other has at least three.,"[""SELECT['one image']"", ""PROJECT['chimpanzees in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']"", ""SELECT['the other image']"", ""PROJECT['chimpanzees in #REF', '#5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least three']"", ""BOOLEAN['logical_and', 'true', '#4', '#8']""]","[""SELECT['one image']"", ""PROJECT['chimpanzees in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']"", ""SELECT['other image']"", ""PROJECT['chimpanzees in #REF', '#6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is at least three']"", ""BOOLEAN['logical_and', 'true', '#4', '#9']""]"
NLVR2_dev_dev-575-1-0,If each image shows more than one seabird flying above a line of breaking waves with white white spray.,"[""SELECT['seabirds']"", ""SELECT['spray']"", ""FILTER['#2', 'that is white']"", ""FILTER['#3', 'that is white']"", ""FILTER['#1', 'flying above #4']"", ""PROJECT['images of #REF', '#5']"", ""GROUP['count', '#5', '#6']"", ""COMPARATIVE['#6', '#7', 'is higher than one']"", ""AGGREGATE['count', '#6']"", ""SELECT['images']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to #10']""]","[""SELECT['seabirds']"", ""SELECT['spray']"", ""FILTER['#2', 'that is white']"", ""FILTER['#3', 'that is white']"", ""FILTER['#1', 'flying above #4']"", ""SELECT['images']"", ""GROUP['count', '#5', '#6']"", ""COMPARATIVE['#6', '#7', 'is higher than one']"", ""AGGREGATE['count', '#6']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to #10']""]"
NLVR2_dev_dev-575-1-1,If three birds are flying over the water in one of the images.,"[""SELECT['birds']"", ""SELECT['water']"", ""FILTER['#1', 'flying over #2']"", ""SELECT['images']"", ""GROUP['count', '#3', '#4']"", ""COMPARATIVE['#4', '#5', 'is equal to three']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']""]","[""SELECT['birds']"", ""SELECT['water']"", ""FILTER['#1', 'flying over #2']"", ""PROJECT['images of #REF', '#3']"", ""GROUP['count', '#3', '#4']"", ""COMPARATIVE['#4', '#5', 'is equal to three']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal one']""]"
NLVR2_dev_dev-576-1-0,If in at least one image there a single pizza getting sauce spread on it with a spoon.,"[""SELECT['pizza']"", ""SELECT['sauce']"", ""SELECT['spoon']"", ""FILTER['#1', 'that is getting #2 spread on it with #3']"", ""PROJECT['images of #REF', '#4']"", ""GROUP['count', '#4', '#5']"", ""COMPARATIVE['#5', '#6', 'is equal to one']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is at least one']""]","[""SELECT['pizza']"", ""SELECT['sauce']"", ""SELECT['spoon']"", ""FILTER['#1', 'that is getting #2 spread on it with #3']"", ""PROJECT['images of #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']""]"
NLVR2_dev_dev-576-1-1,If these is a spoon on top of the pizza.,"[""SELECT['spoon']"", ""SELECT['pizza']"", ""BOOLEAN['#1', 'is on top of #2']""]","[""SELECT['spoon']"", ""SELECT['pizza']"", ""FILTER['#1', 'on top of #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']""]"
NLVR2_dev_dev-577-1-1,"If in one of the images, the penguins stand at a small pool and you can see their reflections in the water.","[""SELECT['penguins']"", ""SELECT['pool']"", ""FILTER['#2', 'that is small']"", ""FILTER['#1', 'that stand at #3']"", ""PROJECT['reflections of #REF', '#4']"", ""SELECT['water']"", ""COMPARATIVE['#4', '#5', 'are in #6']"", ""BOOLEAN['#7', 'are in one of the images']""]","[""SELECT['penguins']"", ""SELECT['pool']"", ""FILTER['#2', 'that is small']"", ""FILTER['#1', 'that stand at #3']"", ""PROJECT['reflections of #REF', '#4']"", ""SELECT['water']"", ""COMPARATIVE['#4', '#5', 'are in #6']"", ""BOOLEAN['#7', 'are in one image']""]"
NLVR2_dev_dev-577-2-0,If penguins' reflections are visible in the water.,"[""SELECT['penguins']"", ""PROJECT['reflections of #REF', '#1']"", ""SELECT['water']"", ""BOOLEAN['#2', 'are visible in #3']""]","[""SELECT['penguins']"", ""SELECT['water']"", ""BOOLEAN['#1', 'are visible in #2']""]"
NLVR2_dev_dev-578-0-1,"If there are two or more layered desserts in each image, and at least one of them is topped with a whole cookie.","[""SELECT['desserts']"", ""FILTER['#1', 'that are layered']"", ""SELECT['cookie']"", ""FILTER['#3', 'that is whole']"", ""FILTER['#2', 'topped with #4']"", ""PROJECT['images of #REF', '#5']"", ""GROUP['count', '#5', '#6']"", ""COMPARATIVE['#6', '#7', 'is at least two']"", ""AGGREGATE['count', '#6']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to #10']""]","[""SELECT['desserts']"", ""FILTER['#1', 'that are layered']"", ""SELECT['cookie']"", ""FILTER['#3', 'that is whole']"", ""FILTER['#2', 'topped with #4']"", ""SELECT['images']"", ""GROUP['count', '#5', '#6']"", ""COMPARATIVE['#6', '#7', 'is at least two']"", ""AGGREGATE['count', '#6']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to #10']"", ""FILTER['#1', 'that is topped with #11']"", ""AGGREGATE['count', '#12']"", ""BOOLEAN['#13', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#10', '#14']""]"
NLVR2_dev_dev-578-2-0,If a cookie sits in the dessert in the image on the left.,"[""SELECT['left image']"", ""PROJECT['cookie in #REF', '#1']"", ""PROJECT['dessert in #REF', '#1']"", ""BOOLEAN['#2','sits in #3']""]","[""SELECT['left image']"", ""PROJECT['cookie of #REF', '#1']"", ""PROJECT['dessert of #REF', '#1']"", ""BOOLEAN['#2','sits in #3']""]"
NLVR2_dev_dev-579-0-1,If the left image contains no more than one dog.,"[""SELECT['left image']"", ""PROJECT['dogs of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at most one']""]","[""SELECT['left image']"", ""PROJECT['dog in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at most one']""]"
NLVR2_dev_dev-579-3-0,If a small child is sitting down next to a dog in the image on the right.,"[""SELECT['child']"", ""FILTER['#1', 'that is small']"", ""SELECT['dog']"", ""FILTER['#2','sitting down next to #3']"", ""BOOLEAN['#4', 'is in the image on the right']""]","[""SELECT['child']"", ""FILTER['#1', 'that is small']"", ""SELECT['dog']"", ""FILTER['#2','sitting down next to #3']"", ""BOOLEAN['#4', 'is in right image']""]"
NLVR2_dev_dev-58-0-0,If one image contains a product that is not body lotion.,"[""SELECT['products']"", ""SELECT['body lotion']"", ""DISCARD['#1', '#2']"", ""BOOLEAN['#3', 'is in one image']""]","[""SELECT['product']"", ""SELECT['body lotion']"", ""DISCARD['#1', '#2']"", ""BOOLEAN['#3', 'is in one image']""]"
NLVR2_dev_dev-58-0-1,If none of the items are 'dove' products.,"[""SELECT['items']"", ""FILTER['#1', 'that aredove products']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to zero']""]","[""SELECT['items']"", ""FILTER['#1', 'that are dove products']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to zero']""]"
NLVR2_dev_dev-580-1-1,If there is at least one closed pouch and one open pouch.,"[""SELECT['pouches']"", ""FILTER['#1', 'that are closed']"", ""FILTER['#1', 'that are open']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']"", ""BOOLEAN['#5', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#6', '#7']""]","[""SELECT['pockets']"", ""FILTER['#1', 'that are closed']"", ""FILTER['#1', 'that are open']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']"", ""BOOLEAN['#5', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#6', '#7']""]"
NLVR2_dev_dev-581-1-0,If one of the vases has utensils in it.,"[""SELECT['vases']"", ""SELECT['utensils']"", ""FILTER['#1', 'with #2 in it']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]","[""SELECT['vases']"", ""SELECT['utensils']"", ""FILTER['#1', 'that have #2 in']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]"
NLVR2_dev_dev-581-2-1,If one of the containers is full of cooking utensils.,"[""SELECT['containers']"", ""SELECT['cooking utensils']"", ""FILTER['#1', 'full of #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]","[""SELECT['containers']"", ""SELECT['cooking utensils']"", ""FILTER['#1', 'that are full of #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]"
NLVR2_dev_dev-582-0-1,If the left image shows several parts of a flute laid down horizontally.,"[""SELECT['left image']"", ""PROJECT['parts of flute in #REF', '#1']"", ""FILTER['#2', 'that are laid down horizontally']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least two']""]","[""SELECT['flute']"", ""PROJECT['parts of #REF', '#1']"", ""FILTER['#2', 'that are laid down horizontally']"", ""BOOLEAN['#3', 'are in the left image']""]"
NLVR2_dev_dev-582-1-0,"If one image contains exactly three complete flutes displayed horizontally, and each image contains at least two items displayed horizontally.","[""SELECT['images']"", ""PROJECT['flutes in #REF', '#1']"", ""FILTER['#2', 'that are complete']"", ""FILTER['#3', 'that are displayed horizontally']"", ""GROUP['count', '#4', '#1']"", ""COMPARATIVE['#1', '#5', 'is equal to three']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']"", ""SELECT['items']"", ""FILTER['#9', 'displayed horizontally']"", ""GROUP['count', '#10', '#11']"", ""COMPARATIVE['#11', '#12', 'is at least two']"", ""AGGREGATE['count', '#13']"", ""AGGREGATE['count', '#14']"", ""BOOLEAN['#15', 'is equal to #11']"", ""BOOLEAN['logical_and', 'true', '#8', '#16']""]","[""SELECT['flutes']"", ""FILTER['#1', 'that are complete']"", ""FILTER['#2', 'that are displayed horizontally']"", ""SELECT['images']"", ""GROUP['count', '#3', '#4']"", ""COMPARATIVE['#4', '#5', 'is equal to three']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']"", ""SELECT['items']"", ""FILTER['#9', 'that are displayed horizontally']"", ""GROUP['count', '#10', '#1']"", ""COMPARATIVE['#1', '#11', 'is at least two']"", ""AGGREGATE['count', '#12']"", ""AGGREGATE['count', '#13']"", ""BOOLEAN['#14', 'is equal to #11']"", ""BOOLEAN['logical_and', 'true', '#8', '#15']""]"
NLVR2_dev_dev-583-1-0,If the right image shows gathers of solid-colored fabric that reach to the peak of a ceiling above a bed.,"[""SELECT['fabric']"", ""FILTER['#1', 'that is solid-colored']"", ""PROJECT['peaks of #REF', '#2']"", ""SELECT['ceiling']"", ""SELECT['bed']"", ""FILTER['#4', 'above #5']"", ""FILTER['#3', 'that reach to #6']"", ""BOOLEAN['#7', 'is in the right image']""]","[""SELECT['right image']"", ""PROJECT['fabric in #REF', '#1']"", ""FILTER['#2', 'that is solid-colored']"", ""PROJECT['peak of ceiling in #REF', '#1']"", ""PROJECT['bed in #REF', '#1']"", ""FILTER['#4', 'above #5']"", ""PROJECT['gathereds of #REF', '#6']"", ""BOOLEAN['#7','reaches to #8']""]"
NLVR2_dev_dev-583-3-1,If a single bed sits in a room in the image on the right.,"[""SELECT['bed']"", ""SELECT['room']"", ""FILTER['#1', 'that sits in #2']"", ""BOOLEAN['#3', 'is in the image on the right']""]","[""SELECT['bed']"", ""SELECT['a room']"", ""FILTER['#1', 'that sits in #2']"", ""BOOLEAN['#3', 'is in the image on the right']""]"
NLVR2_dev_dev-584-1-1,If the left image shows one forward-facing schnauzer reclining on the grass and wearing a ribbon around its neck.,"[""SELECT['left image']"", ""PROJECT['schnauzer in #REF', '#1']"", ""FILTER['#2', 'that is forward-facing']"", ""PROJECT['grass in #REF', '#1']"", ""FILTER['#3','reclining on #4']"", ""PROJECT['neck of #REF', '#5']"", ""SELECT['ribbon']"", ""FILTER['#7', 'wearing #6 around #8']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to one']""]","[""SELECT['the left image']"", ""PROJECT['schnauzers in #REF', '#1']"", ""FILTER['#2', 'that are forward-facing']"", ""PROJECT['the grass in #REF', '#1']"", ""FILTER['#3','reclining on #4']"", ""PROJECT['neck of #REF', '#5']"", ""PROJECT['ribbon in #REF', '#6']"", ""FILTER['#7', 'wearing #8 around #9']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is one']""]"
NLVR2_dev_dev-584-2-0,If a dog is wearing a ribbon.,"[""SELECT['dog']"", ""SELECT['ribbon']"", ""BOOLEAN['#1', 'is wearing #2']""]","[""SELECT['dog']"", ""SELECT['a ribbon']"", ""BOOLEAN['#1', 'is wearing #2']""]"
NLVR2_dev_dev-585-0-1,If the left image contains a human interacting with a large brown dog.,"[""SELECT['human']"", ""SELECT['dog']"", ""FILTER['#2', 'that is large']"", ""FILTER['#3', 'that is brown']"", ""FILTER['#1', 'interacting with #4']"", ""BOOLEAN['#5', 'is in the left image']""]","[""SELECT['human']"", ""SELECT['dog']"", ""FILTER['#2', 'that is large']"", ""FILTER['#3', 'that is brown']"", ""FILTER['#1', 'interacting with #4']"", ""BOOLEAN['#5', 'is in left image']""]"
NLVR2_dev_dev-585-1-0,If a person is accompanying the dog in the image on the left outside.,"[""SELECT['left image']"", ""PROJECT['person in #REF', '#1']"", ""PROJECT['dog in #REF', '#1']"", ""FILTER['#2', 'that is accompanying #3']"", ""BOOLEAN['#4', 'is outside']""]","[""SELECT['person']"", ""SELECT['dog']"", ""FILTER['#1', 'accomplishing #2']"", ""FILTER['#3', 'that is outside']"", ""BOOLEAN['#4', 'is in the left image']""]"
NLVR2_dev_dev-586-1-0,If one image includes at least five camera-facing llama heads with upright ears in a horizontal row.,"[""SELECT['llama heads']"", ""FILTER['#1', 'that are camera-facing']"", ""PROJECT['ears of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'are upright']"", ""FILTER['#4', 'in a horizontal row']"", ""SELECT['images']"", ""GROUP['count', '#5', '#6']"", ""COMPARATIVE['#6', '#7', 'is at least five']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to one']""]","[""SELECT['llama heads']"", ""FILTER['#1', 'that are camera-facing']"", ""PROJECT['ears of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'are upright']"", ""FILTER['#4', 'that are in a horizontal row']"", ""SELECT['images']"", ""GROUP['count', '#5', '#6']"", ""COMPARATIVE['#6', '#7', 'is at least five']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to one']""]"
NLVR2_dev_dev-586-1-1,If in the left image there are llamas looking at the camera.,"[""SELECT['left image']"", ""PROJECT['llamas in #REF', '#1']"", ""BOOLEAN['#2', 'are looking at the camera']""]","[""SELECT['llamas']"", ""SELECT['camera']"", ""FILTER['#1', 'looking at #2']"", ""BOOLEAN['#3', 'are in left image']""]"
NLVR2_dev_dev-588-1-1,"If the right image features one forward-looing beagle wearing a red collar, and the left image features a left-facing beagle with its tail upright.","[""SELECT['the right image']"", ""PROJECT['beagles in #REF', '#1']"", ""FILTER['#2', 'that are forward-looing']"", ""PROJECT['collar of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is red']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']"", ""SELECT['the left image']"", ""PROJECT['beagle in #REF', '#8']"", ""FILTER['#9', 'that is left-facing']"", ""PROJECT['tail of #REF', '#10']"", ""COMPARATIVE['#10', '#11', 'is upright']"", ""AGGREGATE['count', '#12']"", ""BOOLEAN['#13', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#7', '#14']""]","[""SELECT['right image']"", ""PROJECT['beagle in #REF', '#1']"", ""FILTER['#2', 'that is forward-looing']"", ""PROJECT['collar of #REF', '#3']"", ""BOOLEAN['#4', 'is red']"", ""SELECT['left image']"", ""PROJECT['beagle in #REF', '#6']"", ""FILTER['#7', 'that is left-facing']"", ""PROJECT['tail of #REF', '#8']"", ""COMPARATIVE['#8', '#9', 'is upright']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#6', '#12']""]"
NLVR2_dev_dev-588-3-0,If there is a beagle facing the left in one image and a beagle in a red collar in the other image.,"[""SELECT['one image']"", ""PROJECT['beagle in #REF', '#1']"", ""FILTER['#2', 'that is facing the left']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']"", ""SELECT['other image']"", ""PROJECT['beagle in #REF', '#6']"", ""PROJECT['collar in #REF', '#6']"", ""FILTER['#8', 'that is red']"", ""BOOLEAN['#9', 'is in #10']"", ""BOOLEAN['logical_and', 'true', '#5', '#11']""]","[""SELECT['one image']"", ""PROJECT['beagle in #REF', '#1']"", ""BOOLEAN['#2', 'is facing the left']"", ""SELECT['other image']"", ""PROJECT['beagle in #REF', '#5']"", ""PROJECT['collar in #REF', '#5']"", ""FILTER['#6', 'that is red']"", ""BOOLEAN['#7', 'is in #8']"", ""BOOLEAN['logical_and', 'true', '#4', '#9']""]"
NLVR2_dev_dev-589-1-0,If an image contains no more than one penguin.,"[""SELECT['images']"", ""PROJECT['penguins in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is at most one']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']""]","[""SELECT['penguin']"", ""SELECT['images']"", ""GROUP['count', '#1', '#2']"", ""COMPARATIVE['#2', '#3', 'is at most one']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']""]"
NLVR2_dev_dev-589-3-1,"If one image includes a fuzzy baby penguin, and the other only contains adult penguins.","[""SELECT['one image']"", ""PROJECT['penguin in #REF', '#1']"", ""FILTER['#2', 'that is baby']"", ""FILTER['#3', 'that is fuzzy']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']"", ""SELECT['other image']"", ""PROJECT['penguins in #REF', '#7']"", ""FILTER['#8', 'that are adult']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to zero']"", ""BOOLEAN['logical_and', 'true', '#6', '#11']""]","[""SELECT['one image']"", ""PROJECT['penguin in #REF', '#1']"", ""FILTER['#2', 'that is baby']"", ""FILTER['#3', 'that is fuzzy']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']"", ""SELECT['other image']"", ""PROJECT['penguins in #REF', '#7']"", ""FILTER['#8', 'that are adults']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to zero']"", ""BOOLEAN['logical_and', 'true', '#6', '#11']""]"
NLVR2_dev_dev-590-0-1,"If all bikini models are posed by a pool but not touching the water, and one bikini model is reclining by herself by the pool's edge.","[""SELECT['bikini models']"", ""SELECT['pool']"", ""SELECT['water']"", ""FILTER['#1', 'posed by #2']"", ""FILTER['#4', 'touching #3']"", ""DISCARD['#4', '#5']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to #8']"", ""FILTER['#1','reclining by herself']"", ""PROJECT['edge of #REF', '#9']"", ""FILTER['#1', 'by #10']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#7', '#13']""]","[""SELECT['bikini models']"", ""SELECT['pool']"", ""SELECT['water']"", ""FILTER['#1', 'that are posed by #2']"", ""FILTER['#4', 'that are touching #3']"", ""DISCARD['#4', '#5']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to #8']"", ""FILTER['#1', 'that is reclining by herself']"", ""PROJECT['edge of #REF', '#9']"", ""FILTER['#11', 'by #10']"", ""AGGREGATE['count', '#12']"", ""BOOLEAN['#13', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#8', '#14']""]"
NLVR2_dev_dev-590-2-0,If a woman is laying down.,"[""SELECT['woman']"", ""BOOLEAN['#1', 'is laying down']""]","[""SELECT['woman']"", ""FILTER['#1', 'that is laying down']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least one']."
NLVR2_dev_dev-591-3-0,If an area to sit is set up in the bathroom in the image on the left.,"[""SELECT['left image']"", ""PROJECT['area in #REF', '#1']"", ""PROJECT['bathroom in #REF', '#1']"", ""FILTER['#2', 'that is set up in #3']"", ""FILTER['#4', 'that is to sit']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least one']""]","[""SELECT['left image']"", ""PROJECT['area in #REF', '#1']"", ""PROJECT['bathroom in #REF', '#1']"", ""FILTER['#2', 'that is set up in #3']"", ""FILTER['#4', 'that is to sit']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']""]"
NLVR2_dev_dev-591-3-1,If an image shows a backsplash of small square tiles behind a sink that rests atop a counter.,"[""SELECT['backsplash']"", ""FILTER['#1', 'of tiles']"", ""FILTER['#2', 'that are square']"", ""FILTER['#3', 'that are small']"", ""SELECT['sink']"", ""SELECT['counter']"", ""FILTER['#5', 'that rests atop #6']"", ""FILTER['#4', 'behind #7']"", ""BOOLEAN['#8', 'is in an image']""]","[""SELECT['tiles']"", ""FILTER['#1', 'that are square']"", ""FILTER['#2', 'that are small']"", ""SELECT['sink']"", ""SELECT['counter']"", ""FILTER['#4', 'that rests atop #5']"", ""FILTER['#3', 'that is behind #6']"", ""BOOLEAN['#7', 'is in an image']""]"
NLVR2_dev_dev-592-0-0,If the right image features a rightward-angled ferret wearing some type of garment.,"[""SELECT['ferret']"", ""FILTER['#1', 'that is rightward-angled']"", ""SELECT['garment']"", ""FILTER['#2', 'wearing #3']"", ""BOOLEAN['#4', 'is in the right image']""]","[""SELECT['right image']"", ""PROJECT['ferret in #REF', '#1']"", ""FILTER['#2', 'that is rightward-angled']"", ""PROJECT['garment in #REF', '#1']"", ""BOOLEAN['#3', 'is wearing #4']""]"
NLVR2_dev_dev-592-0-1,If there is no more than one ferret in the right image.,"[""SELECT['right image']"", ""PROJECT['ferret in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at most one']""]","[""SELECT['right image']"", ""PROJECT['ferrets in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at most one']""]"
NLVR2_dev_dev-59-3-0,If the sleds in both pictures are pointing towards each other.,"[""SELECT['sleds']"", ""FILTER['#1', 'that are pointing towards each other']"", ""PROJECT['pictures of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']""]","[""SELECT['sleds']"", ""FILTER['#1', 'that are pointing towards each other']"", ""BOOLEAN['#2', 'are in both pictures']""]"
NLVR2_dev_dev-59-3-1,If there are snow dog sleds with riders on board them.,"[""SELECT['snow dog sleds']"", ""SELECT['riders']"", ""BOOLEAN['#1', 'are with #2 on board']""]","[""SELECT['snow dog sleds']"", ""SELECT['riders']"", ""FILTER['#1', 'with #2 on board']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least two']""]"
NLVR2_dev_dev-593-1-1,If there are at least three jellyfish in total.,"[""SELECT['jellyfish']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is at least three']""]","[""SELECT['jellyfish']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is at least two']""]"
NLVR2_dev_dev-593-3-0,If there are two jellyfish in total.,"[""SELECT['jellyfish']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to two']""]","[""SELECT['jellyfish']"", ""FILTER['#1', 'in total']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']""]"
NLVR2_dev_dev-594-3-0,If there are two bottles of perfume without boxes.,"[""SELECT['bottles of perfume']"", ""SELECT['boxes']"", ""FILTER['#1', 'without #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']""]","[""SELECT['bottles of perfume']"", ""SELECT['boxes']"", ""FILTER['#1', 'that have #2']"", ""DISCARD['#1', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to two']""]"
NLVR2_dev_dev-594-3-1,If there are exactly two perfume boxes.,"[""SELECT['perfume boxes']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to two']""]","[""SELECT['perfume box']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to two']""]"
NLVR2_dev_dev-595-2-1,If at least one spiral-bound edge is next to a row of upright binders in the lefthand image.,"[""SELECT['the lefthand image']"", ""PROJECT['edges in #REF', '#1']"", ""FILTER['#2', 'that are spiral-bound']"", ""PROJECT['binders in #REF', '#1']"", ""FILTER['#4', 'that are upright']"", ""FILTER['#5', 'in a row']"", ""FILTER['#3', 'next to #6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is at least one']""]","[""SELECT['lefthand image']"", ""PROJECT['edges in #REF', '#1']"", ""FILTER['#2', 'that are spiral-bound']"", ""PROJECT['binders in #REF', '#1']"", ""FILTER['#4', 'that are upright']"", ""FILTER['#5', 'in a row']"", ""FILTER['#3', 'next to #6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is at least one']""]"
NLVR2_dev_dev-595-3-0,If at least one spiral notebook is stored next to a row of binders.,"[""SELECT['notebooks']"", ""FILTER['#1', 'that are spiral']"", ""SELECT['row of binders']"", ""FILTER['#2','stored next to #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']""]","[""SELECT['notebooks']"", ""FILTER['#1', 'that are spiral']"", ""SELECT['row of binders']"", ""FILTER['#2','stored next to #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5."
NLVR2_dev_dev-596-0-0,"If at least one guinea pig enclosure has a boldly patterned floor, and one enclosure has wire mesh walls and a second story.","[""SELECT['guinea pig enclosures']"", ""PROJECT['floor of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is boldly patterned']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']"", ""PROJECT['walls of #REF', '#1']"", ""COMPARATIVE['#1', '#6', 'are wire mesh']"", ""PROJECT['second story of #REF', '#7']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#5', '#10']""]","[""SELECT['guinea pigs']"", ""PROJECT['enclosures of #REF', '#1']"", ""PROJECT['floor of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is boldly patterned']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']"", ""PROJECT['walls of #REF', '#1']"", ""COMPARATIVE['#1', '#7', 'are wire mesh']"", ""PROJECT['second story of #REF', '#8']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#6', '#11']""]"
NLVR2_dev_dev-596-1-1,If the cage in the image on the left is made of wire.,"[""SELECT['left image']"", ""PROJECT['cage in #REF', '#1']"", ""SELECT['wire']"", ""BOOLEAN['#2', 'is made of #3']""]","[""SELECT['the image on the left']"", ""PROJECT['the cage in #REF', '#1']"", ""BOOLEAN['#2', 'is made of wire']""]"
NLVR2_dev_dev-597-0-0,"If each image contains a single horned animal, which has its head turned directly toward the camera.","[""SELECT['animals']"", ""FILTER['#1', 'that are horned']"", ""PROJECT['head of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is turned directly toward the camera']"", ""SELECT['images']"", ""GROUP['count', '#4', '#5']"", ""COMPARATIVE['#5', '#6', 'is equal to one']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to #9']""]","[""SELECT['images']"", ""PROJECT['animals in #REF', '#1']"", ""FILTER['#2', 'that are horned']"", ""PROJECT['head of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is turned directly toward the camera']"", ""GROUP['count', '#5', '#1']"", ""COMPARATIVE['#1', '#6', 'is equal to one']"", ""AGGREGATE['count', '#7']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#8', 'is at least one']""]"
NLVR2_dev_dev-597-2-1,If a single antelope is standing in the field in both images.,"[""SELECT['antelopes']"", ""SELECT['the field']"", ""FILTER['#1','standing in #2']"", ""PROJECT['images of #REF', '#3']"", ""GROUP['count', '#3', '#4']"", ""COMPARATIVE['#4', '#5', 'is equal to one']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to two']""]","[""SELECT['antelopes']"", ""SELECT['field']"", ""FILTER['#1','standing in #2']"", ""PROJECT['images of #REF', '#3']"", ""GROUP['count', '#3', '#4']"", ""COMPARATIVE['#4', '#5', 'is equal to one']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to two']""]"
NLVR2_dev_dev-598-2-1,If all of the chimps are on the ground.,"[""SELECT['chimps']"", ""SELECT['ground']"", ""FILTER['#1', 'on #2']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to #5']""]","[""SELECT['chimps']"", ""SELECT['ground']"", ""FILTER['#1', 'on #2']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#5', 'is equal to #4']""]"
NLVR2_dev_dev-598-3-0,If there is at least one image of chimps sitting or hanging from a tree branch,"[""SELECT['chimps']"", ""SELECT['tree branch']"", ""FILTER['#1', 'that are sitting from #2']"", ""FILTER['#1', 'that are hanging from #2']"", ""UNION['#3', '#4']"", ""BOOLEAN['#5', 'is in at least one image']""]","[""SELECT['chimps']"", ""SELECT['tree']"", ""PROJECT['branch of #REF', '#2']"", ""FILTER['#1', 'that are sitting from #3']"", ""FILTER['#1', 'that are hanging from #3']"", ""UNION['#4', '#5']"", ""BOOLEAN['#6', 'is in at least one image']""]"
NLVR2_dev_dev-599-2-0,If a person is holding at least one knee pad in the image on the left.,"[""SELECT['left image']"", ""PROJECT['person in #REF', '#1']"", ""PROJECT['knee pad in #REF', '#1']"", ""FILTER['#3', 'that #2 is holding']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']""]","[""SELECT['left image']"", ""PROJECT['person in #REF', '#1']"", ""PROJECT['knee pad in #REF', '#1']"", ""FILTER['#2', 'that #3 is holding']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']""]"
NLVR2_dev_dev-599-2-1,"If one image includes a hand touching a black pad with a small red tag, and the other image shows a pair of pads on a white backdrop.","[""SELECT['one image']"", ""PROJECT['hand in #REF', '#1']"", ""PROJECT['pad in #REF', '#1']"", ""FILTER['#3', 'that is black']"", ""PROJECT['tag of #REF', '#4']"", ""COMPARATIVE['#4', '#5', 'is small']"", ""BOOLEAN['#6', 'is touching #7']"", ""SELECT['other image']"", ""PROJECT['pads in #REF', '#8']"", ""PROJECT['backdrop in #REF', '#8']"", ""FILTER['#9', 'that is white']"", ""FILTER['#10', 'on #11']"", ""AGGREGATE['count', '#12']"", ""BOOLEAN['#13', 'is equal to two']"", ""BOOLEAN['logical_and', 'true', '#7', '#14']""]","[""SELECT['one image']"", ""PROJECT['hand in #REF', '#1']"", ""PROJECT['pad in #REF', '#1']"", ""FILTER['#3', 'that is black']"", ""PROJECT['tag of #REF', '#4']"", ""COMPARATIVE['#4', '#5', 'is small']"", ""BOOLEAN['#6', 'is touching #7']"", ""SELECT['other image']"", ""PROJECT['pads in #REF', '#8']"", ""PROJECT['backdrop in #REF', '#8']"", ""FILTER['#9', 'that is white']"", ""FILTER['#10', 'that are on #11']"", ""AGGREGATE['count', '#12']"", ""BOOLEAN['#13', 'is equal to two']"", ""BOOLEAN['logical_and', 'true', '#7', '#14']""."
NLVR2_dev_dev-600-1-0,If in at least one image there are three flutes.,"[""SELECT['flutes']"", ""SELECT['images']"", ""GROUP['count', '#1', '#2']"", ""COMPARATIVE['#2', '#3', 'is equal to three']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']""]","[""SELECT['flutes']"", ""PROJECT['images of #REF', '#1']"", ""GROUP['count', '#1', '#2']"", ""COMPARATIVE['#2', '#3', 'is equal to three']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']""]"
NLVR2_dev_dev-600-2-1,"If one image shows at least three flutes fanned out, with their tips together at the other end, and the other image features a floral motif on a flute.","[""SELECT['one image']"", ""PROJECT['flutes in #REF', '#1']"", ""FILTER['#2', 'that are fanned out']"", ""PROJECT['tips of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'are together at the other end']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least three']"", ""SELECT['other image']"", ""PROJECT['flutes in #REF', '#8']"", ""PROJECT['motifs in #REF', '#8']"", ""FILTER['#9', 'that is floral']"", ""FILTER['#10', 'on #11']"", ""AGGREGATE['count', '#12']"", ""BOOLEAN['#13', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#7', '#14']""]","[""SELECT['one image']"", ""PROJECT['flutes in #REF', '#1']"", ""FILTER['#2', 'that are fanned out']"", ""PROJECT['tips of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'are together at the other end']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least three']"", ""SELECT['other image']"", ""PROJECT['flutes in #REF', '#8']"", ""PROJECT['motifs in #REF', '#8']"", ""FILTER['#9', 'that is floral']"", ""FILTER['#10', 'on #11']"", ""AGGREGATE['count', '#12']"", ""BOOLEAN['#13', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#7', '#14']""."
NLVR2_dev_dev-601-0-1,If an image features only a bunch of reddish grapes next to a glass of purplish wine and an upright wine bottle.,"[""SELECT['bunch of grapes']"", ""FILTER['#1', 'that are reddish']"", ""SELECT['glass of wine']"", ""FILTER['#3', 'that is purplish']"", ""SELECT['wine bottle']"", ""FILTER['#5', 'that is upright']"", ""FILTER['#2', 'next to #4']"", ""FILTER['#6', 'next to #7']"", ""SELECT['images']"", ""GROUP['count', '#8', '#9']"", ""COMPARATIVE['#9', '#10', 'is equal to one']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is at least one']""]","[""SELECT['bunch of grapes']"", ""FILTER['#1', 'that are reddish']"", ""SELECT['glass of wine']"", ""FILTER['#3', 'that is purplish']"", ""SELECT['wine bottle']"", ""FILTER['#5', 'that is upright']"", ""FILTER['#2', 'next to #4']"", ""FILTER['#6', 'next to #7']"", ""SELECT['images']"", ""GROUP['count', '#8', '#9']"", ""COMPARATIVE['#9', '#10', 'is equal to zero']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is at least one']""]"
NLVR2_dev_dev-601-3-0,If there are two wine glasses in the pair of images.,"[""SELECT['images']"", ""PROJECT['wine glasses in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']""]","[""SELECT['wine glasses']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to two']""]"
NLVR2_dev_dev-60-2-1,If one of the houses has a single chimney.,"[""SELECT['houses']"", ""PROJECT['chimneys of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is equal to one']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']""]","[""SELECT['houses']"", ""PROJECT['chimneys in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is equal to one']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']""]"
NLVR2_dev_dev-602-2-1,"If in the image to the right, two wild pigs meet face to face.","[""SELECT['right image']"", ""PROJECT['wild pigs in #REF', '#1']"", ""FILTER['#2', 'that meet face to face']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']""]","[""SELECT['right image']"", ""PROJECT['wild pigs of #REF', '#1']"", ""FILTER['#2', 'that meet face to face']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']""]"
NLVR2_dev_dev-602-3-0,If only one image shows warthogs butting heads.,"[""SELECT['warthogs']"", ""PROJECT['heads of #REF', '#1']"", ""FILTER['#1', 'butting #2']"", ""BOOLEAN['#3', 'are in only one image']""]","[""SELECT['warthogs']"", ""PROJECT['heads of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are butting #3']"", ""BOOLEAN['#4', 'is in one image']""]"
NLVR2_dev_dev-603-0-1,"If the left image contains one all-white dog, which is sleeping without a blanket and has its face turned downward.","[""SELECT['dog']"", ""FILTER['#1', 'that is all-white']"", ""SELECT['blanket']"", ""FILTER['#2','sleeping without #3']"", ""PROJECT['face of #REF', '#4']"", ""COMPARATIVE['#4', '#5', 'is turned downward']"", ""BOOLEAN['#6', 'is in the left image']""]","[""SELECT['dog']"", ""FILTER['#1', 'that is all-white']"", ""SELECT['blanket']"", ""FILTER['#2','sleeping without #3']"", ""PROJECT['face of #REF', '#4']"", ""COMPARATIVE['#4', '#5', 'is turned downward']"", ""BOOLEAN['#6', 'is in left image']""]"
NLVR2_dev_dev-603-3-0,If a human is touching at least one of the dogs.,"[""SELECT['human']"", ""SELECT['dogs']"", ""FILTER['#2', 'touching #1']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']""]","[""SELECT['human']"", ""SELECT['dogs']"", ""FILTER['#2', 'that #1 is touching']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']""]"
NLVR2_dev_dev-604-2-0,If the left and right image contains the same number of banana bunches with a purple arrow bottom.,"[""SELECT['banana bunches']"", ""PROJECT['bottom of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is purple']"", ""COMPARATIVE['#1', '#2', 'is arrow']"", ""INTERSECTION['#1', '#3', '#4']"", ""SELECT['left image']"", ""PROJECT['banana bunches in #REF', '#6']"", ""AGGREGATE['count', '#7']"", ""SELECT['right image']"", ""PROJECT['banana bunches in #REF', '#8']"", ""FILTER['#9', 'with #10']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is equal to #13']""]","[""SELECT['banana bunches']"", ""PROJECT['bottom of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is purple']"", ""COMPARATIVE['#1', '#2', 'is arrow']"", ""INTERSECTION['#1', '#3', '#4']"", ""SELECT['left image']"", ""SELECT['right image']"", ""FILTER['#6', 'that are in #7']"", ""AGGREGATE['count', '#8']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to #11']""]"
NLVR2_dev_dev-605-0-0,"If all images show corgi dogs inside a vehicle, and no dogs have a part of their body outside a vehicle.","[""SELECT['corgi dogs']"", ""SELECT['vehicle']"", ""FILTER['#1', 'that are inside #2']"", ""PROJECT['images of #REF', '#3']"", ""AGGREGATE['count', '#4']"", ""SELECT['images']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to #7']"", ""PROJECT['body of #REF', '#8']"", ""PROJECT['part of #REF', '#9']"", ""COMPARATIVE['#9', '#10', 'is outside #11']"", ""AGGREGATE['count', '#12']"", ""BOOLEAN['#13', 'is equal to zero']"", ""BOOLEAN['logical_and', 'true', '#7', '#14']""]","[""SELECT['corgi dogs']"", ""SELECT['vehicle']"", ""FILTER['#1', 'that are inside #2']"", ""PROJECT['images of #REF', '#3']"", ""AGGREGATE['count', '#4']"", ""SELECT['images']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to #7']"", ""PROJECT['body of #REF', '#8']"", ""PROJECT['part of #REF', '#9']"", ""COMPARATIVE['#9', '#10', 'is outside of #11']"", ""AGGREGATE['count', '#12']"", ""BOOLEAN['#13', 'is equal to zero']"", ""BOOLEAN['logical_and', 'true', '#7', '#14']""."
NLVR2_dev_dev-605-3-1,If all of the dogs are in a car.,"[""SELECT['dogs']"", ""SELECT['car']"", ""FILTER['#1', 'in #2']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to #5']""]","[""SELECT['dogs']"", ""SELECT['car']"", ""FILTER['#1', 'that are in #2']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#5', 'is equal to #4']""."
NLVR2_dev_dev-606-1-1,If balloons completely fill one of the images.,"[""SELECT['balloons']"", ""SELECT['images']"", ""GROUP['count', '#1', '#2']"", ""COMPARATIVE['#2', '#3', 'is equal to one']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']""]","[""SELECT['balloons']"", ""SELECT['images']"", ""FILTER['#2', 'that completely fill #1']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]"
NLVR2_dev_dev-606-2-0,"If balloons float in a blue sky with dappled clouds on strings that angle rightward, in the right image.","[""SELECT['balloons']"", ""SELECT['sky']"", ""FILTER['#2', 'that is blue']"", ""SELECT['clouds']"", ""FILTER['#4', 'that are dappled']"", ""SELECT['strings']"", ""FILTER['#6', 'that angle rightward']"", ""FILTER['#1', 'that float in #5']"", ""BOOLEAN['#7', 'are in the right image']""]","[""SELECT['the right image']"", ""PROJECT['balloons in #REF', '#1']"", ""PROJECT['sky in #REF', '#1']"", ""FILTER['#3', 'that is blue']"", ""PROJECT['clouds in #REF', '#1']"", ""FILTER['#5', 'that are dappled']"", ""PROJECT['strings in #REF', '#6']"", ""FILTER['#7', 'that angle rightward']"", ""FILTER['#2', 'that float in #4']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to one']""]"
NLVR2_dev_dev-607-2-1,If one image shows a plate with a serving of green beans next to the mashed potatoes.,"[""SELECT['plate']"", ""SELECT['serving of green beans']"", ""SELECT['mashed potatoes']"", ""FILTER['#1', 'with #2']"", ""FILTER['#4', 'next to #3']"", ""BOOLEAN['#5', 'is in one image']""]","[""SELECT['plate']"", ""SELECT['serving of green beans']"", ""SELECT['mashed potatoes']"", ""FILTER['#1', 'next to #2']"", ""FILTER['#3', 'with #4']"", ""BOOLEAN['#5', 'is in one image']""]"
NLVR2_dev_dev-607-3-0,If green beans are sitting besides the potatoes on the dish in one of the images.,"[""SELECT['green beans']"", ""SELECT['potatoes']"", ""SELECT['dish']"", ""FILTER['#2', 'on #3']"", ""FILTER['#1', 'that are sitting besides #4']"", ""BOOLEAN['#5', 'is in one of the images']""]","[""SELECT['green beans']"", ""SELECT['potatoes']"", ""SELECT['dish']"", ""FILTER['#2', 'that are on #3']"", ""FILTER['#1', 'that are sitting besides #4']"", ""BOOLEAN['#5', 'is in one of the images']""]"
NLVR2_dev_dev-608-1-0,If one of the photos has a couch on the right side of the room.,"[""SELECT['couch']"", ""SELECT['room']"", ""FILTER['#1', 'on the right side of #2']"", ""BOOLEAN['#3', 'is in one of the photos']""]","[""SELECT['couch']"", ""SELECT['room']"", ""FILTER['#1', 'that is on the right side of #2']"", ""BOOLEAN['#3', 'is in one of the photos."
NLVR2_dev_dev-608-1-1,"If in one of the images, there are chairs outside.","[""SELECT['chairs']"", ""FILTER['#1', 'that are outside']"", ""BOOLEAN['#2', 'are in one of the images']""]","[""SELECT['chairs']"", ""FILTER['#1', 'that are outside']"", ""BOOLEAN['#2', 'are in one image']""]"
NLVR2_dev_dev-609-3-0,If the left image contains at least two dingoes.,"[""SELECT['the left image']"", ""PROJECT['dingoes in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least two']""]","[""SELECT['left image']"", ""PROJECT['dingoes of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least two']""]"
NLVR2_dev_dev-61-0-0,If one image shows exactly one person standing behind a glass-fronted display case that faces right.,"[""SELECT['person']"", ""SELECT['display case']"", ""FILTER['#2', 'that is glass-fronted']"", ""FILTER['#3', 'that faces right']"", ""FILTER['#1','standing behind #4']"", ""PROJECT['images of #REF', '#5']"", ""GROUP['count', '#5', '#6']"", ""COMPARATIVE['#6', '#7', 'is equal to one']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to one']""]","[""SELECT['people']"", ""SELECT['display case']"", ""FILTER['#2', 'that is glass-fronted']"", ""FILTER['#3', 'that faces right']"", ""FILTER['#1','standing behind #4']"", ""PROJECT['images of #REF', '#5']"", ""GROUP['count', '#5', '#6']"", ""COMPARATIVE['#6', '#7', 'is equal to one']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to one']""]"
NLVR2_dev_dev-611-3-0,If one of the dogs has its mouth open.,"[""SELECT['dogs']"", ""PROJECT['mouth of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is open']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]","[""SELECT['dogs']"", ""PROJECT['mouth of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is open']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']""]"
NLVR2_dev_dev-61-2-1,If in at least one image there is a single employee reaching in to the bakery display case and grabbing a bread product.,"[""SELECT['employee']"", ""SELECT['bakery display case']"", ""FILTER['#1','reaching in to #2']"", ""SELECT['bread product']"", ""FILTER['#3', 'grabbing #4']"", ""PROJECT['images of #REF', '#5']"", ""GROUP['count', '#5', '#6']"", ""COMPARATIVE['#6', '#7', 'is equal to one']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is at least one']""]","[""SELECT['employee']"", ""SELECT['bakery display case']"", ""FILTER['#1','reaching in to #2']"", ""SELECT['bread product']"", ""FILTER['#3', 'grabbing #4']"", ""PROJECT['images of #REF', '#5']"", ""GROUP['count', '#6', '#7']"", ""COMPARATIVE['#7', '#8', 'is equal to one']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is at least one']""]"
NLVR2_dev_dev-612-1-1,If in the right image the kick drum has a white skin.,"[""SELECT['right image']"", ""PROJECT['kick drum in #REF', '#1']"", ""PROJECT['skin of #REF', '#2']"", ""BOOLEAN['#3', 'is white']""]","[""SELECT['the right image']"", ""PROJECT['kick drum in #REF', '#1']"", ""PROJECT['skin of #REF', '#2']"", ""BOOLEAN['#3', 'is white']""]"
NLVR2_dev_dev-612-3-0,"If in each image a person is sitting at a drum kit, with at least one more person in one image.","[""SELECT['person']"", ""SELECT['drum kit']"", ""FILTER['#1','sitting at #2']"", ""SELECT['images']"", ""GROUP['count', '#3', '#4']"", ""COMPARATIVE['#4', '#5', 'is at least one']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to #8']"", ""SELECT['images']"", ""PROJECT['people in #REF', '#9']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#9', '#12']""]","[""SELECT['images']"", ""PROJECT['people in #REF', '#1']"", ""PROJECT['drum kit in #REF', '#1']"", ""FILTER['#2','sitting at #3']"", ""GROUP['count', '#4', '#1']"", ""COMPARATIVE['#1', '#5', 'is at least one']"", ""AGGREGATE['count', '#6']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#7', 'is equal to #8']"", ""SELECT['images']"", ""PROJECT['people in #REF', '#11']"", ""AGGREGATE['count', '#12']"", ""BOOLEAN['#13', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#9', '#14']""]"
NLVR2_dev_dev-613-1-0,"If each image shows one big jellyfish, and only one of the jellyfish pictured has long ribbon-like tentacles trailing downward from a dome-shaped 'cap'.","[""SELECT['jellyfish']"", ""FILTER['#1', 'that is big']"", ""SELECT['images']"", ""GROUP['count', '#2', '#3']"", ""COMPARATIVE['#3', '#4', 'is equal to one']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to #7']"", ""PROJECT['tentacles of #REF', '#8']"", ""FILTER['#9', 'that are ribbon-like']"", ""PROJECT['cap of #REF', '#8']"", ""FILTER['#10', 'that is dome-shaped']"", ""FILTER['#11', 'trading downward from #12']"", ""AGGREGATE['count', '#13']"", ""BOOLEAN['#14', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#7', '#15']""]","[""SELECT['jellyfish']"", ""FILTER['#1', 'that are big']"", ""SELECT['images']"", ""GROUP['count', '#2', '#3']"", ""COMPARATIVE['#3', '#4', 'is equal to one']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to #7']"", ""PROJECT['tentacles of #REF', '#8']"", ""FILTER['#9', 'that are long']"", ""FILTER['#10', 'that are ribbon-like']"", ""PROJECT['cap of #REF', '#8']"", ""FILTER['#11', 'that is dome-shaped']"", ""FILTER['#12', 'trading downward from #13']"", ""AGGREGATE['count', '#14']"", ""BOOLEAN['#15', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#7', '#16']""]"
NLVR2_dev_dev-613-3-1,If a single jellyfish swims through the water in each of the images.,"[""SELECT['jellyfish']"", ""SELECT['water']"", ""FILTER['#1', 'that swims through #2']"", ""SELECT['images']"", ""GROUP['count', '#3', '#4']"", ""COMPARATIVE['#4', '#5', 'is equal to one']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to #8']""]","[""SELECT['jellyfish']"", ""SELECT['the water']"", ""FILTER['#1', 'that swims through #2']"", ""PROJECT['images of #REF', '#3']"", ""GROUP['count', '#3', '#4']"", ""COMPARATIVE['#4', '#5', 'is equal to one']"", ""AGGREGATE['count', '#6']"", ""SELECT['images']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#7', 'is equal to #9']""]"
NLVR2_dev_dev-614-3-0,If there is a female in every picture.,"[""SELECT['female']"", ""SELECT['pictures']"", ""GROUP['count', '#1', '#2']"", ""COMPARATIVE['#2', '#3', 'is at least one']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to #6']""]","[""SELECT['female']"", ""SELECT['pictures']"", ""GROUP['count', '#1', '#2']"", ""COMPARATIVE['#2', '#3', 'is at least one']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#6', 'is equal to #5']""]"
NLVR2_dev_dev-614-3-1,"If each image contains a single model, and left and right images contain models of the opposite sex [one image contains a male and the other contains a female].","[""SELECT['images']"", ""PROJECT['models in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is equal to one']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#5', 'is equal to #6']"", ""SELECT['left image']"", ""SELECT['right image']"", ""PROJECT['models in #REF', '#8']"", ""PROJECT['models in #REF', '#9']"", ""PROJECT['sex of #REF', '#10']"", ""PROJECT['sex of #REF', '#11']"", ""BOOLEAN['#12', 'is opposite of #13']"", ""BOOLEAN['logical_and', 'true', '#7', '#14']""]","[""SELECT['images']"", ""PROJECT['models in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is equal to one']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#5', 'is equal to #6']"", ""SELECT['left image']"", ""SELECT['right image']"", ""PROJECT['models in #REF', '#8']"", ""PROJECT['models in #REF', '#9']"", ""PROJECT['sex of #REF', '#10']"", ""PROJECT['sex of #REF', '#11']"", ""BOOLEAN['#12', 'is opposite of #13']"", ""BOOLEAN['logical_and', 'true', '#7', '#13']""]"
NLVR2_dev_dev-615-1-0,"If each dog is outdoors wearing a collar and gazing off to the side, and at least one dog is sitting upright.","[""SELECT['dogs']"", ""FILTER['#1', 'that are outdoors']"", ""SELECT['collar']"", ""FILTER['#2', 'wearing #3']"", ""FILTER['#4', 'that are gazing off to the side']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to #7']"", ""FILTER['#1', 'that is sitting upright']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#8', '#11']""]","[""SELECT['dogs']"", ""FILTER['#1', 'that are outdoors']"", ""SELECT['collar']"", ""FILTER['#2', 'wearing #3']"", ""FILTER['#4', 'that are gazing off to the side']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to #7']"", ""FILTER['#1', 'that is sitting upright']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#8', '#10']""]"
NLVR2_dev_dev-615-2-1,If there is a dog sitting near  tall brown grass,"[""SELECT['dog']"", ""SELECT['grass']"", ""FILTER['#2', 'that is brown']"", ""FILTER['#3', 'that is tall']"", ""BOOLEAN['#1', 'is sitting near #4']""]","[""SELECT['dog']"", ""SELECT['grass']"", ""FILTER['#2', 'that is tall']"", ""FILTER['#3', 'that is brown']"", ""FILTER['#1','sitting near #4']"", ""BOOLEAN['#5', 'is in #6']""]"
NLVR2_dev_dev-616-1-0,If the rail posts in the image on the right are topped with decorative knobs.,"[""SELECT['rail posts']"", ""SELECT['knobs']"", ""FILTER['#2', 'that are decorative']"", ""BOOLEAN['#1', 'are topped with #3']""]","[""SELECT['the image on the right']"", ""PROJECT['rail posts in #REF', '#1']"", ""SELECT['knobs']"", ""FILTER['#3', 'that are decorative']"", ""BOOLEAN['#2', 'are topped with #4']""]"
NLVR2_dev_dev-616-3-1,"If there is a stairway with the rails made of wood, the rails are positioned horizontally","[""SELECT['stairway']"", ""PROJECT['rails of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are made of wood']"", ""BOOLEAN['#3', 'are positioned horizontally']""]","[""SELECT['stairway']"", ""PROJECT['rails of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is made of wood']"", ""BOOLEAN['#3', 'are positioned horizontally']""]"
NLVR2_dev_dev-617-1-0,If exactly one bus' passenger doors are open.,"[""SELECT['buses']"", ""PROJECT['passenger doors of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are open']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]","[""SELECT['buses']"", ""PROJECT['passenger doors of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is open']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]"
NLVR2_dev_dev-617-2-1,"If each image shows the front of a flat-fronted bus, and the buses depicted on the left and right are angled in the same direction.","[""SELECT['bus']"", ""FILTER['#1', 'that is flat-fronted']"", ""PROJECT['front of #REF', '#2']"", ""SELECT['images']"", ""GROUP['count', '#3', '#4']"", ""COMPARATIVE['#4', '#5', 'is at least one']"", ""AGGREGATE['count', '#6']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#7', 'is equal to #8']"", ""FILTER['#1', 'that are depicted on the left']"", ""FILTER['#1', 'that are depicted on the right']"", ""PROJECT['direction angled in #REF', '#9']"", ""PROJECT['direction angled in #REF', '#10']"", ""BOOLEAN['#11', 'is the same as #12']"", ""BOOLEAN['logical_and', 'true', '#7', '#13']""]","[""SELECT['bus']"", ""FILTER['#1', 'that is flat-fronted']"", ""PROJECT['front of #REF', '#2']"", ""SELECT['images']"", ""GROUP['count', '#3', '#4']"", ""COMPARATIVE['#4', '#5', 'is at least one']"", ""AGGREGATE['count', '#6']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#7', 'is equal to #8']"", ""FILTER['#1', 'that are depicted on the left']"", ""FILTER['#1', 'that are depicted on the right']"", ""PROJECT['direction angled in #REF', '#11']"", ""PROJECT['direction angled in #REF', '#12']"", ""BOOLEAN['#13', 'is the same as #14']"", ""BOOLEAN['logical_and', 'true', '#9', '#15']""]"
NLVR2_dev_dev-618-1-0,If the left and right image contains a total of two horses facing the same direction.,"[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['horses in #REF', '#1']"", ""PROJECT['horses in #REF', '#2']"", ""PROJECT['direction facing of #REF', '#3']"", ""PROJECT['direction facing of #REF', '#4']"", ""COMPARATIVE['#4', '#5', 'is the same']"", ""AGGREGATE['count', '#6']"", ""AGGREGATE['count', '#7']"", ""ARITHMETIC['sum', '#8', '#9']"", ""BOOLEAN['#10', 'is equal to two']""]","[""SELECT['left image']"", ""PROJECT['horses in #REF', '#1']"", ""PROJECT['direction facing of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is the same']"", ""AGGREGATE['count', '#4']"", ""SELECT['right image']"", ""PROJECT['horses in #REF', '#6']"", ""PROJECT['direction facing of #REF', '#7']"", ""COMPARATIVE['#7', '#8', 'is the same']"", ""AGGREGATE['count', '#9']"", ""ARITHMETIC['sum', '#5', '#10']"", ""BOOLEAN['#11', 'is equal to two']""]"
NLVR2_dev_dev-618-3-1,"If an image shows a woman in a hat riding a two wheeled cart pulled by a chestnut-brown horse wearing blinders, on green grass.","[""SELECT['woman']"", ""SELECT['hat']"", ""FILTER['#1', 'in #2']"", ""SELECT['horse']"", ""FILTER['#4', 'that is chestnut-brown']"", ""SELECT['blinders']"", ""FILTER['#6', 'wearing #5']"", ""SELECT['grass']"", ""FILTER['#7', 'that is green']"", ""FILTER['#3', 'pulled by #8']"", ""FILTER['#9', 'riding #10']"", ""BOOLEAN['#11', 'is in an image']""]","[""SELECT['woman']"", ""SELECT['hat']"", ""FILTER['#1', 'that is in #2']"", ""SELECT['cart']"", ""FILTER['#4', 'that is two wheeled']"", ""SELECT['horse']"", ""FILTER['#6', 'that is chestnut-brown']"", ""SELECT['blinders']"", ""FILTER['#7', 'wearing #8']"", ""SELECT['grass']"", ""FILTER['#9', 'that is green']"", ""FILTER['#2', 'riding #10']"", ""BOOLEAN['#11', 'is in an image']""]"
NLVR2_dev_dev-619-1-0,If a person is modeling the mittens in the image on the right.,"[""SELECT['person']"", ""SELECT['mittens']"", ""FILTER['#1','modeling #2']"", ""BOOLEAN['#3', 'is in the image on the right']""]","[""SELECT['person']"", ""SELECT['mittens']"", ""FILTER['#1','modeling #2']"", ""BOOLEAN['#3', 'is in the right image']""]"
NLVR2_dev_dev-619-3-1,If a pair of gloves has a snowflake design on them.,"[""SELECT['pair of gloves']"", ""SELECT['snowflake design']"", ""BOOLEAN['#1', 'has #2 on them']""]","[""SELECT['pair of gloves']"", ""SELECT['design']"", ""FILTER['#2', 'that is snowflake']"", ""BOOLEAN['#1', 'has #3 on them']""]"
NLVR2_dev_dev-6-2-0,"If each image contains at least five pet rodents, and no image includes a part of a person.","[""SELECT['images']"", ""PROJECT['pet rodents in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is at least five']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#6', 'is equal to #5']"", ""SELECT['part of a person']"", ""FILTER['#1', 'that includes #8']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to zero']"", ""BOOLEAN['logical_and', 'true', '#7', '#11']""]","[""SELECT['images']"", ""PROJECT['pet rodents in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is at least five']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#6', 'is equal to #5']"", ""SELECT['part of a person']"", ""FILTER['#1', 'that includes #8']"", ""DISCARD['#1', '#9']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is equal to zero']"", ""BOOLEAN['logical_and', 'true', '#7', '#12']""]"
NLVR2_dev_dev-62-0-1,If at least one of the images shows a person's hand on the pencil holder.,"[""SELECT['person']"", ""PROJECT['hand of #REF', '#1']"", ""SELECT['pencil holder']"", ""FILTER['#2', 'on #3']"", ""BOOLEAN['#4', 'is in at least one image']""]","[""SELECT['person']"", ""PROJECT['hand of #REF', '#1']"", ""SELECT['pencil holder']"", ""FILTER['#2', 'that is on #3']"", ""BOOLEAN['#4', 'is in at least one image']""]"
NLVR2_dev_dev-620-3-0,If the right image contains no more than two penguins.,"[""SELECT['right image']"", ""PROJECT['penguins in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at most two']""]","[""SELECT['right image']"", ""PROJECT['penguins of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at most two']""]"
NLVR2_dev_dev-6-2-1,If exactly one hamster wheel is visible.,"[""SELECT['hamster wheel']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to one']""]","[""SELECT['hamster wheel']"", ""FILTER['#1', 'that is visible']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']""]"
NLVR2_dev_dev-621-2-1,If a ladder is standing on a wood floor in front of a tall bookshelf filled with a variety of items.,"[""SELECT['ladder']"", ""SELECT['floor']"", ""FILTER['#2', 'that is wood']"", ""FILTER['#1','standing on #3']"", ""SELECT['bookshelf']"", ""FILTER['#5', 'that is tall']"", ""SELECT['various items']"", ""FILTER['#6', 'filled with #7']"", ""BOOLEAN['#4', 'is in front of #8']""]","[""SELECT['ladder']"", ""SELECT['floor']"", ""FILTER['#2', 'that is wood']"", ""FILTER['#1','standing on #3']"", ""SELECT['bookshelf']"", ""FILTER['#6', 'that is tall']"", ""SELECT['variety of items']"", ""FILTER['#5', 'filled with #7']"", ""BOOLEAN['#4', 'is in front of #8']""]"
NLVR2_dev_dev-622-0-0,If one of the cars has no people in it and the other car is being driven on the road.,"[""SELECT['cars']"", ""PROJECT['people in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is equal to zero']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']"", ""SELECT['the road']"", ""BOOLEAN['#7', 'is being driven on #8']"", ""BOOLEAN['logical_and', 'true', '#6', '#9']""]","[""SELECT['one car']"", ""SELECT['people']"", ""FILTER['#1', 'in #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to zero']"", ""SELECT['the other car']"", ""SELECT['the road']"", ""BOOLEAN['#6', 'is being driven on #5']"", ""BOOLEAN['logical_and', 'true', '#7', '#8']""]"
NLVR2_dev_dev-623-2-0,If there are exactly five wolves.,"[""SELECT['wolves']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to five']""]","[""SELECT['wolves']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to five']""]."
NLVR2_dev_dev-624-2-1,"If each image contains a black phone with an antenna on top, and the phone on the left has square number buttons, while the phoe on the right has oval buttons.","[""SELECT['phone']"", ""FILTER['#1', 'that is black']"", ""SELECT['antenna']"", ""FILTER['#2', 'with #3 on top']"", ""PROJECT['images of #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""SELECT['images']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to #8']"", ""FILTER['#1', 'that is on the left']"", ""PROJECT['number buttons of #REF', '#9']"", ""COMPARATIVE['#9', '#10', 'is square']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is oval']"", ""BOOLEAN['logical_and', 'true', '#7', '#13']""]","[""SELECT['phone']"", ""FILTER['#1', 'that is black']"", ""SELECT['antenna']"", ""FILTER['#2', 'with #3 on top']"", ""PROJECT['images of #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""SELECT['images']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to #8']"", ""FILTER['#1', 'that is on the left']"", ""PROJECT['number buttons of #REF', '#9']"", ""COMPARATIVE['#9', '#10', 'are square']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is equal to #13']"", ""SELECT['phoe']"", ""PROJECT['number buttons of #REF', '#13']"", ""BOOLEAN['#14', 'is oval']"", ""BOOLEAN['logical_and', 'true', '#8', '#15']""]"
NLVR2_dev_dev-625-1-0,If the right image contains one dog chewing on something.,"[""SELECT['the right image']"", ""PROJECT['dogs in #REF', '#1']"", ""FILTER['#2', 'chewing on something']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]","[""SELECT['right image']"", ""PROJECT['dog in #REF', '#1']"", ""FILTER['#2', 'that is chewing on something']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]"
NLVR2_dev_dev-625-3-1,"If in one of the images, a human can be seen to the left of the dog.","[""SELECT['human']"", ""SELECT['dog']"", ""FILTER['#1', 'to the left of #2']"", ""BOOLEAN['#3', 'is in one of the images']""]","[""SELECT['human']"", ""SELECT['dog']"", ""FILTER['#1', 'to the left of #2']"", ""BOOLEAN['#3', 'is in one image']""]"
NLVR2_dev_dev-626-0-1,If all of the containers are clear.,"[""SELECT['containers']"", ""FILTER['#1', 'that are clear']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to #4']""]","[""SELECT['containers']"", ""FILTER['#1', 'which are clear']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to #4']""]"
NLVR2_dev_dev-626-2-0,If there is no less than eight beakes with no repeating colors of liquid in each image.,"[""SELECT['beakes']"", ""SELECT['liquid']"", ""FILTER['#1', 'with repeating colors of #2']"", ""DISCARD['#1', '#3']"", ""SELECT['images']"", ""GROUP['count', '#4', '#5']"", ""COMPARATIVE['#5', '#6', 'is at least eight']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to #9']""]","[""SELECT['beakes']"", ""SELECT['liquid']"", ""FILTER['#1', 'with repeating colors of #2']"", ""DISCARD['#1', '#3']"", ""SELECT['images']"", ""GROUP['count', '#4', '#5']"", ""COMPARATIVE['#5', '#6', 'is at least eight']"", ""AGGREGATE['count', '#7']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#8', 'is equal to #9']""]"
NLVR2_dev_dev-627-1-1,"If one image features one mountain goat standing on a peak, and the other image features two mountain goats on a sheer, vertical rock side.","[""SELECT['one image']"", ""PROJECT['mountain goats in #REF', '#1']"", ""PROJECT['peak in #REF', '#1']"", ""FILTER['#2','standing on #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']"", ""SELECT['other image']"", ""PROJECT['mountain goats in #REF', '#7']"", ""PROJECT['rock side in #REF', '#7']"", ""FILTER['#8', 'that is sheer']"", ""FILTER['#9', 'that is vertical']"", ""FILTER['#10', 'on #11']"", ""AGGREGATE['count', '#12']"", ""BOOLEAN['#13', 'is equal to two']"", ""BOOLEAN['logical_and', 'true', '#6', '#14']""]","[""SELECT['one image']"", ""PROJECT['mountain goats in #REF', '#1']"", ""PROJECT['peak in #REF', '#1']"", ""FILTER['#2','standing on #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']"", ""SELECT['other image']"", ""PROJECT['mountain goats in #REF', '#7']"", ""PROJECT['rock side in #REF', '#7']"", ""FILTER['#8', 'that is sheer']"", ""FILTER['#9', 'that is vertical']"", ""FILTER['#10', 'on #11']"", ""AGGREGATE['count', '#12']"", ""BOOLEAN['#13', 'is equal to two']"", ""BOOLEAN['logical_and', 'true', '#7', '#14']""]"
NLVR2_dev_dev-627-2-0,If an animal is standing on the top of a object.,"[""SELECT['animal']"", ""SELECT['object']"", ""PROJECT['top of #REF', '#2']"", ""BOOLEAN['#1', 'is standing on #3']""]","[""SELECT['animals']"", ""SELECT['objects']"", ""PROJECT['the top of #REF', '#2']"", ""BOOLEAN['#1', 'is standing on #3']""]"
NLVR2_dev_dev-628-3-0,If there are at least two dogs in one of the images.,"[""SELECT['images']"", ""PROJECT['dogs in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is at least two']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']""]","[""SELECT['images']"", ""PROJECT['dogs in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is higher than two']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']""]"
NLVR2_dev_dev-628-3-1,If in the image on the left there is a single light beige colored dog with a black nose.,"[""SELECT['left image']"", ""PROJECT['dog in #REF', '#1']"", ""FILTER['#2', 'that is light beige colored']"", ""PROJECT['nose of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is black']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']""]","[""SELECT['left image']"", ""PROJECT['dogs in #REF', '#1']"", ""FILTER['#2', 'that is light beige colored']"", ""PROJECT['nose of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is black']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']""]"
NLVR2_dev_dev-629-0-0,If the right image contains a dog eating out of a bowl.,"[""SELECT['dog']"", ""SELECT['bowl']"", ""FILTER['#1', 'eating out of #2']"", ""BOOLEAN['#3', 'is in the right image']""]","[""SELECT['dog']"", ""SELECT['bowl']"", ""FILTER['#1', 'that is eating out of #2']"", ""BOOLEAN['#3', 'is in right image']""]"
NLVR2_dev_dev-629-3-1,If the right image shows a cocker spaniel eating from a bowl on the floor,"[""SELECT['cocker spaniel']"", ""SELECT['bowl']"", ""SELECT['floor']"", ""FILTER['#2', 'on #3']"", ""FILTER['#1', 'eating from #4']"", ""BOOLEAN['#5', 'is in the right image']""]","[""SELECT['cocker spaniel']"", ""SELECT['bowl']"", ""SELECT['the floor']"", ""FILTER['#2', 'on #3']"", ""FILTER['#1', 'eating from #4']"", ""BOOLEAN['#5', 'is in the right image']""]"
NLVR2_dev_dev-630-0-1,If the left and right image contains the same number of stingrays touching the sand.,"[""SELECT['stingrays']"", ""SELECT['the sand']"", ""FILTER['#1', 'touching #2']"", ""FILTER['#3', 'in the left image']"", ""FILTER['#3', 'in the right image']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to #7']""]","[""SELECT['stingrays']"", ""SELECT['sand']"", ""FILTER['#1', 'touching #2']"", ""SELECT['left image']"", ""SELECT['right image']"", ""FILTER['#3', 'touching #4']"", ""FILTER['#3', 'touching #5']"", ""AGGREGATE['count', '#6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to #9']""]"
NLVR2_dev_dev-630-2-0,If an image shows a top-view of a rightward facing stingray with vivid blue dots on deep gray skin.,"[""SELECT['stingray']"", ""FILTER['#1', 'that is rightward facing']"", ""PROJECT['skin of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'has vivid blue dots']"", ""COMPARATIVE['#2', '#3', 'has deep gray skin']"", ""INTERSECTION['#2', '#4', '#5']"", ""PROJECT['top-view of #REF', '#6']"", ""BOOLEAN['#7', 'is in an image']""]","[""SELECT['stingray']"", ""FILTER['#1', 'that is rightward facing']"", ""PROJECT['skin of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is deep gray']"", ""SELECT['blue dots']"", ""COMPARATIVE['#5', '#4', 'are vivid']"", ""BOOLEAN['#6', 'is in a top-view']""]"
NLVR2_dev_dev-63-1-1,If six rolls of paper towels are enclosed in a plastic package with the brand name on it.,"[""SELECT['rolls of paper towels']"", ""SELECT['package']"", ""FILTER['#2', 'that is plastic']"", ""PROJECT['brand name of #REF', '#1']"", ""COMPARATIVE['#1', '#4', 'is on #3']"", ""FILTER['#1', 'enclosed in #5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to six']""]","[""SELECT['rolls of paper towels']"", ""SELECT['package']"", ""FILTER['#2', 'that is plastic']"", ""PROJECT['brand name of #REF', '#1']"", ""COMPARATIVE['#1', '#4', 'has #3 on']"", ""FILTER['#1', 'enclosed in #5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to six']""]"
NLVR2_dev_dev-631-2-0,"If in one image, a barber in a black shirt is working on the hair of a person who is sitting in a chair.","[""SELECT['barber']"", ""SELECT['shirt']"", ""FILTER['#2', 'that is black']"", ""FILTER['#1', 'in #3']"", ""SELECT['person']"", ""SELECT['chair']"", ""FILTER['#5','sitting in #6']"", ""PROJECT['hair of #REF', '#7']"", ""FILTER['#4', 'working on #8']"", ""BOOLEAN['#9', 'is in one image']""]","[""SELECT['barber']"", ""SELECT['shirt']"", ""FILTER['#2', 'that is black']"", ""FILTER['#1', 'in #3']"", ""SELECT['person']"", ""SELECT['chair']"", ""FILTER['#5','sitting in #6']"", ""PROJECT['hair of #REF', '#7']"", ""BOOLEAN['#4', 'is working on #8']""]"
NLVR2_dev_dev-63-2-0,If one of the images contains a 6 roll package of paper towels.,"[""SELECT['package of paper towels']"", ""FILTER['#1', 'that is 6 roll']"", ""BOOLEAN['#2', 'is in one image']""]","[""SELECT['package of paper towels']"", ""FILTER['#1', 'that is 6 roll']"", ""BOOLEAN['#2', 'is in one of the images']""]"
NLVR2_dev_dev-632-2-0,If one dog is wearing a red collar and the other dog has it's tongue hanging out.,"[""SELECT['one dog']"", ""SELECT['collar']"", ""FILTER['#2', 'that is red']"", ""BOOLEAN['#1', 'is wearing #3']"", ""SELECT['the other dog']"", ""PROJECT['tongue of #REF', '#5']"", ""BOOLEAN['#6', 'is hanging out']"", ""BOOLEAN['logical_and', 'true', '#4', '#7']""]","[""SELECT['one dog']"", ""SELECT['collar']"", ""FILTER['#2', 'that is red']"", ""BOOLEAN['#1', 'is wearing #3']"", ""SELECT['other dog']"", ""PROJECT['tongue of #REF', '#5']"", ""BOOLEAN['#6', 'is hanging out']"", ""BOOLEAN['logical_and', 'true', '#4', '#7']""]"
NLVR2_dev_dev-632-3-1,If the right image contains a brown dog with its tongue exposed.,"[""SELECT['dog']"", ""FILTER['#1', 'that is brown']"", ""PROJECT['tongue of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is exposed']"", ""BOOLEAN['#4', 'is in the right image']""]","[""SELECT['dog']"", ""FILTER['#1', 'that is brown']"", ""PROJECT['tongue of #REF', '#2']"", ""BOOLEAN['#3', 'is exposed']""]"
NLVR2_dev_dev-633-0-0,If the image on the left has a boat that is completely in the water and is sailing.,"[""SELECT['boat']"", ""SELECT['water']"", ""FILTER['#1', 'completely in #2']"", ""FILTER['#3', 'that is sailing']"", ""BOOLEAN['#4', 'is in the left image']""]","[""SELECT['boat']"", ""SELECT['water']"", ""FILTER['#1', 'that is completely in #2']"", ""FILTER['#3', 'that is sailing']"", ""BOOLEAN['#4', 'is in the left image']""]"
NLVR2_dev_dev-633-1-1,If there is a yellow boat sitting on the grass in one of the images.,"[""SELECT['boat']"", ""FILTER['#1', 'that is yellow']"", ""SELECT['grass']"", ""FILTER['#2','sitting on #3']"", ""BOOLEAN['#4', 'is in one of the images']""]","[""SELECT['boat']"", ""FILTER['#1', 'that is yellow']"", ""SELECT['the grass']"", ""BOOLEAN['#2', 'is sitting on #3']""]"
NLVR2_dev_dev-634-0-1,"If in one of the images, at least some of the rind is separated from the lemon.","[""SELECT['rind']"", ""SELECT['lemon']"", ""FILTER['#1', 'that is separated from #2']"", ""BOOLEAN['#3', 'is in one of the images']""]","[""SELECT['rind']"", ""SELECT['lemon']"", ""FILTER['#1', 'that is separated from #2']"", ""PROJECT['images of #REF', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']""]"
NLVR2_dev_dev-634-3-0,If the left image contains two whole lemons and one half of a lemon.,"[""SELECT['the left image']"", ""PROJECT['lemons in #REF', '#1']"", ""FILTER['#2', 'that are whole']"", ""FILTER['#2', 'that are half of a lemon']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to two']"", ""BOOLEAN['#6', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#7', '#8']""]","[""SELECT['left image']"", ""PROJECT['lemons in #REF', '#1']"", ""FILTER['#2', 'that are whole']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']"", ""FILTER['#2', 'that is half of a lemon']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#5', '#8']""]"
NLVR2_dev_dev-635-0-0,If the left and right image contains at least one full head of broccoli.,"[""SELECT['left image']"", ""SELECT['right image']"", ""PROJECT['head of broccoli in #REF', '#1']"", ""PROJECT['head of broccoli in #REF', '#2']"", ""FILTER['#3', 'that is full']"", ""FILTER['#4', 'that is full']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least one']"", ""BOOLEAN['#8', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#9', '#10']""]","[""SELECT['left image']"", ""PROJECT['head of broccoli in #REF', '#1']"", ""FILTER['#2', 'that is full']"", ""AGGREGATE['count', '#3']"", ""SELECT['right image']"", ""PROJECT['head of broccoli in #REF', '#5']"", ""FILTER['#6', 'that is full']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is at least one']"", ""BOOLEAN['#9', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#4', '#10']""]"
NLVR2_dev_dev-636-3-0,If at least one fish is facing left in the right image.,"[""SELECT['the right image']"", ""PROJECT['fish in #REF', '#1']"", ""FILTER['#2', 'that are facing left']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']""]","[""SELECT['right image']"", ""PROJECT['fish in #REF', '#1']"", ""FILTER['#2', 'that are facing left']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']""]"
NLVR2_dev_dev-637-0-0,If the baby cheetah is sitting below the mama cheetah in the left image.,"[""SELECT['left image']"", ""PROJECT['cheetah in #REF', '#1']"", ""FILTER['#2', 'that is baby']"", ""FILTER['#2', 'that is mama']"", ""BOOLEAN['#3', 'is sitting below #4']""]","[""SELECT['the left image']"", ""PROJECT['cheetahs in #REF', '#1']"", ""FILTER['#2', 'that are babies']"", ""FILTER['#2', 'that are mama']"", ""BOOLEAN['#3', 'are sitting below #4']""]"
NLVR2_dev_dev-637-1-1,If there are two cheetahs jumping and fighting with each other.,"[""SELECT['cheetahs']"", ""FILTER['#1', 'that are jumping']"", ""FILTER['#2', 'that are fighting with each other']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']""]","[""SELECT['cheetahs']"", ""FILTER['#1', 'that are jumping']"", ""FILTER['#2', 'that are fighting each other']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']""]"
NLVR2_dev_dev-638-2-0,If an image shows real pinkish flowers sticking out from a white cup printed with the same color flowers.,"[""SELECT['flowers']"", ""FILTER['#1', 'that are real']"", ""FILTER['#2', 'that are pinkish']"", ""SELECT['cup']"", ""FILTER['#4', 'that is white']"", ""SELECT['flowers']"", ""PROJECT['color of #REF', '#6']"", ""COMPARATIVE['#6', '#7', 'are the same']"", ""FILTER['#3', 'that are sticking out from #5']"", ""BOOLEAN['#8', 'are in an image']""]","[""SELECT['flowers']"", ""FILTER['#1', 'that are real']"", ""FILTER['#2', 'that are pinkish']"", ""SELECT['cup']"", ""FILTER['#4', 'that is white']"", ""SELECT['flowers']"", ""PROJECT['colors of #REF', '#6']"", ""COMPARATIVE['#6', '#7', 'are the same']"", ""FILTER['#3', 'that are sticking out from #5']"", ""BOOLEAN['#8', 'is in an image']""]"
NLVR2_dev_dev-639-1-0,If in at least one image there is a single horse pulling a cart left.,"[""SELECT['horse']"", ""SELECT['cart']"", ""FILTER['#1', 'pulling #2 left']"", ""PROJECT['images of #REF', '#3']"", ""GROUP['count', '#3', '#4']"", ""COMPARATIVE['#4', '#5', 'is equal to one']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least one']""]","[""SELECT['horse']"", ""SELECT['cart']"", ""FILTER['#1', 'pulling #2 left']"", ""BOOLEAN['#3', 'is in at least one image']""]"
NLVR2_dev_dev-640-1-1,"If the drum kit on the left has violet color around each drum, and the kit on the right has red around each drum.","[""SELECT['drum kit']"", ""FILTER['#1', 'on the left']"", ""PROJECT['color around each drum of #REF', '#2']"", ""BOOLEAN['#3', 'is violet']"", ""FILTER['#1', 'on the right']"", ""PROJECT['color around each drum of #REF', '#5']"", ""BOOLEAN['#6', 'is red']"", ""BOOLEAN['logical_and', 'true', '#4', '#7']""]","[""SELECT['drum kit']"", ""FILTER['#1', 'that is on the left']"", ""PROJECT['color around each drum of #REF', '#2']"", ""BOOLEAN['#3', 'is violet']"", ""FILTER['#1', 'that is on the right']"", ""PROJECT['color around each drum of #REF', '#5']"", ""BOOLEAN['#6', 'is red']"", ""BOOLEAN['logical_and', 'true', '#4', '#7']""."
NLVR2_dev_dev-640-3-0,If one set of drums is pink and the other set of drums is red.,"[""SELECT['sets of drums']"", ""FILTER['#1', 'that are pink']"", ""FILTER['#1', 'that are red']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']"", ""BOOLEAN['#5', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#6', '#7']""]","[""SELECT['one set of drums']"", ""SELECT['the other set of drums']"", ""BOOLEAN['#1', 'is pink']"", ""BOOLEAN['#2', 'is red']"", ""BOOLEAN['logical_and', 'true', '#3', '#4']""]"
NLVR2_dev_dev-641-2-0,If there are at least two chevy corvette convertible cars.,"[""SELECT['chevy corvette convertible cars']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is at least two']""]","[""SELECT['chevy corvette cars']"", ""FILTER['#1', 'that are convertible']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least two']""]"
NLVR2_dev_dev-641-2-1,If all of the convertibles have their tops down.,"[""SELECT['convertibles']"", ""PROJECT['tops of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are down']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to #5']""]","[""SELECT['convertibles']"", ""PROJECT['tops of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are down']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#4', 'is equal to #5']""]"
NLVR2_dev_dev-642-0-0,If there are at least two glass cups with food in them.,"[""SELECT['cups']"", ""FILTER['#1', 'that are glass']"", ""SELECT['food']"", ""FILTER['#2', 'with #3 in them']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least two']""]","[""SELECT['glass cups']"", ""SELECT['food']"", ""FILTER['#1', 'with #2 in them']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least two']""]"
NLVR2_dev_dev-64-2-1,If a single dog is outdoors in each of the images.,"[""SELECT['images']"", ""PROJECT['dogs in #REF', '#1']"", ""FILTER['#2', 'that are outdoors']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is equal to one']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#6', 'is equal to #7']""]","[""SELECT['dog']"", ""FILTER['#1', 'that is outdoors']"", ""SELECT['images']"", ""GROUP['count', '#2', '#3']"", ""COMPARATIVE['#3', '#4', 'is equal to one']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to #7']""]"
NLVR2_dev_dev-642-3-1,If all the desserts have chocolate shavings on top.,"[""SELECT['desserts']"", ""PROJECT['top of #REF', '#1']"", ""SELECT['shavings']"", ""FILTER['#3', 'that are chocolate']"", ""COMPARATIVE['#1', '#2', 'have #4 on']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to #7']""]","[""SELECT['desserts']"", ""PROJECT['top of #REF', '#1']"", ""SELECT['shavings']"", ""FILTER['#3', 'that are chocolate']"", ""COMPARATIVE['#1', '#2', 'have #4 on']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#7', 'is equal to #6']""]"
NLVR2_dev_dev-643-2-0,If both images shows a silver pail being used as a flower vase.,"[""SELECT['pail']"", ""FILTER['#1', 'that is silver']"", ""SELECT['flower vase']"", ""FILTER['#2', 'being used as #3']"", ""PROJECT['images of #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to two']""]","[""SELECT['pail']"", ""FILTER['#1', 'that is silver']"", ""SELECT['flower vase']"", ""FILTER['#2', 'used as #3']"", ""PROJECT['images of #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to two']""]"
NLVR2_dev_dev-643-3-1,If there are exactly two metal vases.,"[""SELECT['vases']"", ""FILTER['#1', 'that are metal']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']""]","[""SELECT['vases']"", ""FILTER['#1', 'which are metal']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']""]"
NLVR2_dev_dev-644-0-0,If all the lemons are free of leaves.,"[""SELECT['lemons']"", ""SELECT['leaves']"", ""FILTER['#1', 'that are free of #2']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#5', 'is equal to #4']""]","[""SELECT['lemons']"", ""SELECT['leaves']"", ""FILTER['#1', 'without #2']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to #5']""]"
NLVR2_dev_dev-644-2-1,If the left image includes lemon leaves.,"[""SELECT['lemon leaves']"", ""BOOLEAN['#1', 'are in the left image']""]","[""SELECT['lemon leaves']"", ""BOOLEAN['#1', 'are in the left image']""]."
NLVR2_dev_dev-645-2-0,If a single person is standing near a wild pig in one of the images.,"[""SELECT['person']"", ""SELECT['wild pig']"", ""FILTER['#1','standing near #2']"", ""PROJECT['images of #REF', '#3']"", ""GROUP['count', '#3', '#4']"", ""COMPARATIVE['#4', '#5', 'is equal to one']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']""]","[""SELECT['person']"", ""SELECT['wild pig']"", ""FILTER['#1', 'that is standing near #2']"", ""SELECT['images']"", ""GROUP['count', '#3', '#4']"", ""COMPARATIVE['#4', '#5', 'is equal to one']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']""]"
NLVR2_dev_dev-645-3-1,If there is no more than one boar in the left image.,"[""SELECT['left image']"", ""PROJECT['boars in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at most one']""]","[""SELECT['left image']"", ""PROJECT['boars of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at most one']""]"
NLVR2_dev_dev-646-0-1,If there is an oval outer cushioned area of padding on the knee pads in the image on the right.,"[""SELECT['the image on the right']"", ""PROJECT['knee pads in #REF', '#1']"", ""SELECT['area of padding']"", ""FILTER['#3', 'that is cushioned']"", ""FILTER['#4', 'that is oval']"", ""FILTER['#5', 'that is outer']"", ""FILTER['#6', 'that is cushioned']"", ""BOOLEAN['#7', 'is on #2']""]","[""SELECT['the right image']"", ""PROJECT['knee pads in #REF', '#1']"", ""PROJECT['area of padding in #REF', '#1']"", ""FILTER['#3', 'that is cushioned']"", ""FILTER['#4', 'that is oval']"", ""FILTER['#5', 'that is outer']"", ""BOOLEAN['#6', 'is on #2']""]"
NLVR2_dev_dev-646-2-0,"If each image contains two pads and no other items, and one pair of pads faces directly forward.","[""SELECT['images']"", ""PROJECT['pads in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is equal to two']"", ""PROJECT['items in #REF', '#1']"", ""GROUP['count', '#5', '#1']"", ""COMPARATIVE['#1', '#6', 'is equal to zero']"", ""INTERSECTION['#1', '#4', '#7']"", ""AGGREGATE['count', '#8']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to #11']"", ""FILTER['#12', 'that face directly forward']"", ""AGGREGATE['count', '#13']"", ""BOOLEAN['#14', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#7', '#15']""]","[""SELECT['images']"", ""PROJECT['pads in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is equal to two']"", ""PROJECT['items in #REF', '#1']"", ""GROUP['count', '#5', '#1']"", ""COMPARATIVE['#1', '#6', 'is equal to zero']"", ""AGGREGATE['count', '#7']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#8', 'is equal to #9']"", ""PROJECT['pair of pads in #REF', '#1']"", ""FILTER['#11', 'that face directly forward']"", ""AGGREGATE['count', '#12']"", ""BOOLEAN['#13', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#10', '#14']""]"
NLVR2_dev_dev-647-0-0,If there are three different colors of bottles.,"[""SELECT['bottles']"", ""PROJECT['different colors of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to three']""]","[""SELECT['bottles']"", ""PROJECT['colors of #REF', '#1']"", ""FILTER['#2', 'that are different']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to three']""]"
NLVR2_dev_dev-647-2-1,If the left and right image contains a total number of three lotion bottles.,"[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['lotion bottles in #REF', '#1']"", ""PROJECT['lotion bottles in #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['sum', '#5', '#6']"", ""BOOLEAN['#7', 'is equal to three']""]","[""SELECT['left image']"", ""SELECT['right image']"", ""PROJECT['lotion bottles in #REF', '#1']"", ""PROJECT['lotion bottles in #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['sum', '#5', '#6']"", ""BOOLEAN['#7', 'is equal to three']""]"
NLVR2_dev_dev-648-0-1,If the combined images include two look-alike close-mouthed young husky dogs in similar poses.,"[""SELECT['images']"", ""PROJECT['husky dogs in #REF', '#1']"", ""FILTER['#2', 'that are look-alike']"", ""FILTER['#3', 'that are close-mouthed']"", ""FILTER['#4', 'that are young']"", ""PROJECT['poses of #REF', '#5']"", ""COMPARATIVE['#5', '#6', 'are similar']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to two']""]","[""SELECT['images']"", ""PROJECT['husky dogs in #REF', '#1']"", ""FILTER['#2', 'that are look-alike']"", ""FILTER['#3', 'that are close-mouthed']"", ""FILTER['#4', 'that are young']"", ""PROJECT['pose of #REF', '#5']"", ""COMPARATIVE['#5', '#6', 'are similar']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to two']""]"
NLVR2_dev_dev-648-1-0,If the left and right image contains the same number of grey and white huskies.,"[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['huskies in #REF', '#1']"", ""PROJECT['huskies in #REF', '#2']"", ""FILTER['#3', 'that are grey']"", ""FILTER['#4', 'that are white']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to #8']""]","[""SELECT['the left image']"", ""PROJECT['huskies in #REF', '#1']"", ""FILTER['#2', 'that are grey']"", ""FILTER['#2', 'that are white']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""SELECT['the right image']"", ""PROJECT['huskies in #REF', '#7']"", ""FILTER['#8', 'that are grey']"", ""FILTER['#9', 'that are white']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is equal to #6']"", ""BOOLEAN['#12', 'is equal to #13']"", ""BOOLEAN['logical_and', 'true', '#14', '#15']""]"
NLVR2_dev_dev-649-2-1,If there are two black coffees.,"[""SELECT['coffees']"", ""FILTER['#1', 'that are black']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']""]","[""SELECT['caffees']"", ""FILTER['#1', 'that are black']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']""]"
NLVR2_dev_dev-649-3-0,If two of the coffees are black.,"[""SELECT['coffees']"", ""FILTER['#1', 'that are black']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']""]","[""SELECT['caffees']"", ""FILTER['#1', 'that are black']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']""]"
NLVR2_dev_dev-65-0-0,If there are no more than three elephants.,"[""SELECT['elephants']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is at most three']""]","[""SELECT['elephantes']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is at most three']""]"
NLVR2_dev_dev-650-1-1,If the left and right image contains the same number of  computer monitors.,"[""SELECT['left image']"", ""PROJECT['computer monitors in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""SELECT['right image']"", ""PROJECT['computer monitors in #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#3', 'is equal to #6']""]","[""SELECT['computer monitors']"", ""SELECT['left image']"", ""SELECT['right image']"", ""FILTER['#1', 'that are in #2']"", ""FILTER['#1', 'that are in #3']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to #7']."
NLVR2_dev_dev-651-1-1,If in at least one image there is a single bus facing right forward.,"[""SELECT['buses']"", ""FILTER['#1', 'that are facing right forward']"", ""SELECT['images']"", ""GROUP['count', '#2', '#3']"", ""COMPARATIVE['#3', '#4', 'is equal to one']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least one']""]","[""SELECT['images']"", ""PROJECT['buses in #REF', '#1']"", ""FILTER['#2', 'that are facing right forward']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is equal to one']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least one']""]"
NLVR2_dev_dev-652-1-0,"If each image contains a single long-eared hound, and in at least one image, the hound has its face in a bowl.","[""SELECT['images']"", ""PROJECT['hounds in #REF', '#1']"", ""FILTER['#2', 'that are long-eared']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is equal to one']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#6', 'is equal to #7']"", ""SELECT['bowl']"", ""FILTER['#1', 'that has its face in #9']"", ""BOOLEAN['#10', 'is in at least one image']"", ""BOOLEAN['logical_and', 'true', '#8', '#11']""]","[""SELECT['images']"", ""PROJECT['hounds in #REF', '#1']"", ""FILTER['#2', 'that are long-eared']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is equal to one']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#6', 'is equal to #7']"", ""SELECT['bowl']"", ""FILTER['#1', 'that has its face in #8']"", ""BOOLEAN['#9', 'is in at least one image']"", ""BOOLEAN['logical_and', 'true', '#10', '#11']""]"
NLVR2_dev_dev-652-2-1,If the dog in the image on the right is touching a food dish with its face.,"[""SELECT['right image']"", ""PROJECT['dog in #REF', '#1']"", ""PROJECT['food dish in #REF', '#1']"", ""PROJECT['face of #REF', '#2']"", ""BOOLEAN['#2', 'is touching #3 with #4']""]","[""SELECT['dog']"", ""PROJECT['face of #REF', '#1']"", ""SELECT['food dish']"", ""COMPARATIVE['#1', '#2', 'is touching #3']"", ""BOOLEAN['#4', 'is in the image on the right']""]"
NLVR2_dev_dev-653-0-1,If in at least one image there is one man in a long sleeve blue shirt with black hair force feeding a duck through a tube.,"[""SELECT['man']"", ""SELECT['shirt']"", ""FILTER['#2', 'that is blue']"", ""FILTER['#3', 'that is long sleeve']"", ""FILTER['#1', 'in #4']"", ""PROJECT['hair of #REF', '#5']"", ""COMPARATIVE['#5', '#6', 'is black']"", ""SELECT['duck']"", ""SELECT['tube']"", ""FILTER['#7', 'force feeding #8 through #9']"", ""BOOLEAN['#10', 'is in at least one image']""]","[""SELECT['man']"", ""SELECT['shirt']"", ""FILTER['#2', 'that is blue']"", ""FILTER['#3', 'that is long sleeve']"", ""FILTER['#1', 'in #4']"", ""PROJECT['hair of #REF', '#5']"", ""COMPARATIVE['#5', '#6', 'is black']"", ""SELECT['duck']"", ""SELECT['tube']"", ""FILTER['#8', 'force feeding #9']"", ""FILTER['#10', 'through #11']"", ""BOOLEAN['#12', 'is in at least one image']""]"
NLVR2_dev_dev-65-3-1,"If the center of one image contains at least one baby elephant in tall grass, and no adults.","[""SELECT['images']"", ""PROJECT['the center of #REF', '#1']"", ""PROJECT['elephants in #REF', '#1']"", ""FILTER['#3', 'that are babies']"", ""PROJECT['grass in #REF', '#1']"", ""FILTER['#5', 'that is tall']"", ""FILTER['#4', 'in #6']"", ""GROUP['count', '#7', '#1']"", ""COMPARATIVE['#1', '#8', 'is at least one']"", ""PROJECT['adults in #REF', '#1']"", ""GROUP['count', '#9', '#1']"", ""COMPARATIVE['#1', '#10', 'is equal to zero']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is equal to one']""]","[""SELECT['images']"", ""PROJECT['center of #REF', '#1']"", ""PROJECT['elephants in #REF', '#1']"", ""FILTER['#3', 'that are babies']"", ""PROJECT['grass in #REF', '#1']"", ""FILTER['#5', 'that is tall']"", ""FILTER['#4', 'in #6']"", ""GROUP['count', '#7', '#1']"", ""COMPARATIVE['#1', '#8', 'is at least one']"", ""PROJECT['adults in #REF', '#1']"", ""GROUP['count', '#9', '#1']"", ""COMPARATIVE['#1', '#10', 'is equal to zero']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is equal to one']""]"
NLVR2_dev_dev-653-3-0,If two geese are being force fed.,"[""SELECT['geese']"", ""FILTER['#1', 'that are being force fed']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']""]","[""SELECT['geese']"", ""FILTER['#1', 'being force fed']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']""]"
NLVR2_dev_dev-654-0-1,"If the left image shows a parked, angled bus with a completely flat front, and the right image includes at least one bus with a hood that projects outward below the windshield.","[""SELECT['left image']"", ""PROJECT['bus in #REF', '#1']"", ""FILTER['#2', 'that is parked']"", ""FILTER['#3', 'that is angled']"", ""PROJECT['front of #REF', '#4']"", ""COMPARATIVE['#4', '#5', 'is completely flat']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least one']"", ""SELECT['hood']"", ""PROJECT['window in #REF', '#8']"", ""BOOLEAN['#9', 'projects outward below #10']"", ""BOOLEAN['logical_and', 'true', '#8', '#11']""]","[""SELECT['the left image']"", ""PROJECT['bus in #REF', '#1']"", ""FILTER['#2', 'that is parked']"", ""FILTER['#3', 'that is angled']"", ""PROJECT['front of #REF', '#4']"", ""COMPARATIVE['#4', '#5', 'is completely flat']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least one']"", ""SELECT['hood']"", ""PROJECT['window in #REF', '#8']"", ""BOOLEAN['#9', 'projects outward below #10']"", ""BOOLEAN['logical_and', 'true', '#8', '#11']""]"
NLVR2_dev_dev-654-2-0,If a single bus is parked in a lot in the image on the left.,"[""SELECT['left image']"", ""PROJECT['bus in #REF', '#1']"", ""PROJECT['lot in #REF', '#1']"", ""FILTER['#2', 'parked in #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']""]","[""SELECT['the image on the left']"", ""PROJECT['buses in #REF', '#1']"", ""PROJECT['lots in #REF', '#1']"", ""FILTER['#2', 'parked in #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal one']""]"
NLVR2_dev_dev-655-1-1,"If the left image contains one left-gazing afghan hound with a dark muzzle, and the right image contains a standing hound with a tail that forms an upward curl.","[""SELECT['left image']"", ""PROJECT['afghan hound in #REF', '#1']"", ""FILTER['#2', 'that is left-gazing']"", ""PROJECT['muzzle of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is dark']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']"", ""SELECT['right image']"", ""PROJECT['hound in #REF', '#8']"", ""FILTER['#9', 'that is standing']"", ""PROJECT['tail of #REF', '#10']"", ""COMPARATIVE['#10', '#11', 'forms an upward curl']"", ""AGGREGATE['count', '#12']"", ""BOOLEAN['#13', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#7', '#14']""]","[""SELECT['the left image']"", ""PROJECT['afghan hounds in #REF', '#1']"", ""FILTER['#2', 'that are left-gazing']"", ""PROJECT['muzzle of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is dark']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']"", ""SELECT['the right image']"", ""PROJECT['hound in #REF', '#8']"", ""FILTER['#9', 'that is standing']"", ""PROJECT['tail of #REF', '#10']"", ""COMPARATIVE['#10', '#11', 'forms an upward curl']"", ""AGGREGATE['count', '#12']"", ""BOOLEAN['#13', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#7', '#14']""."
NLVR2_dev_dev-655-2-0,If in at least one image there is a dog with both black and white fur with their face pointed right forward.,"[""SELECT['dog']"", ""PROJECT['fur of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is black and white']"", ""PROJECT['face of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is pointed right forward']"", ""BOOLEAN['#5', 'is in at least one image']""]","[""SELECT['dog']"", ""PROJECT['fur of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is black']"", ""COMPARATIVE['#1', '#2', 'is white']"", ""INTERSECTION['#1', '#3', '#4']"", ""PROJECT['face of #REF', '#5']"", ""COMPARATIVE['#6', '#7', 'is pointed right forward']"", ""BOOLEAN['#8', 'is in at least one image']""]"
NLVR2_dev_dev-656-0-1,If the left and right image contains the same number of bottled beers.,"[""SELECT['left image']"", ""PROJECT['beers in #REF', '#1']"", ""FILTER['#2', 'that are bottled']"", ""AGGREGATE['count', '#3']"", ""SELECT['right image']"", ""PROJECT['beers in #REF', '#5']"", ""FILTER['#6', 'that are bottled']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#4', 'is equal to #8']""]","[""SELECT['left image']"", ""PROJECT['beers of #REF', '#1']"", ""FILTER['#2', 'that are bottled']"", ""AGGREGATE['count', '#3']"", ""SELECT['right image']"", ""PROJECT['beers of #REF', '#5']"", ""FILTER['#6', 'that are bottled']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#4', 'is equal to #8']""]"
NLVR2_dev_dev-656-2-0,If the left and right images contain the same number of bottles.,"[""SELECT['left image']"", ""PROJECT['bottles in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""SELECT['right image']"", ""PROJECT['bottles in #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#3', 'is equal to #6']""]","[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['bottles in #REF', '#1']"", ""PROJECT['bottles in #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to #6']""]"
NLVR2_dev_dev-657-0-0,If the right side image has two cups,"[""SELECT['right image']"", ""PROJECT['cups in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']""]","[""SELECT['right side image']"", ""PROJECT['cups in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']""]"
NLVR2_dev_dev-658-1-0,If the right image shows a dark rectangular sign with light lettering hung horizontally above a counter.,"[""SELECT['sign']"", ""FILTER['#1', 'that is rectangular']"", ""FILTER['#2', 'that is dark']"", ""PROJECT['lettering of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is light']"", ""SELECT['counter']"", ""BOOLEAN['#5', 'is hung horizontally above #6']""]","[""SELECT['sign']"", ""FILTER['#1', 'that is dark']"", ""FILTER['#2', 'that is rectangular']"", ""PROJECT['lettering of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is light']"", ""SELECT['counter']"", ""FILTER['#5', 'hung horizontally above #6']"", ""BOOLEAN['#7', 'is in right image']""]"
NLVR2_dev_dev-658-3-1,If in at least one image there are at least three rows of writing on a chalkboard above a cafe.,"[""SELECT['rows of writing']"", ""SELECT['chalkboard']"", ""SELECT['cafe']"", ""FILTER['#2', 'above #3']"", ""FILTER['#1', 'on #4']"", ""PROJECT['images of #REF', '#5']"", ""GROUP['count', '#5', '#6']"", ""COMPARATIVE['#6', '#7', 'is at least three']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is at least one']""]","[""SELECT['rows of writing']"", ""SELECT['chalkboard']"", ""SELECT['cafe']"", ""FILTER['#2', 'above #3']"", ""FILTER['#1', 'that are on #4']"", ""SELECT['images']"", ""GROUP['count', '#5', '#6']"", ""COMPARATIVE['#6', '#7', 'is at least three']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is at least one']""]"
NLVR2_dev_dev-659-0-1,If there is a red jeep plowing the snow in one image and a a vehicle with a plow not in the snow in the other image.,"[""SELECT['one image']"", ""PROJECT['jeep in #REF', '#1']"", ""FILTER['#2', 'that is red']"", ""PROJECT['snow in #REF', '#1']"", ""BOOLEAN['#3', 'is plowing #4']"", ""SELECT['other image']"", ""PROJECT['vehicle in #REF', '#6']"", ""PROJECT['plow in #REF', '#6']"", ""COMPARATIVE['#6', '#7', 'is not in #8']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is at least one']""]","[""SELECT['one image']"", ""PROJECT['jeep in #REF', '#1']"", ""FILTER['#2', 'that is red']"", ""PROJECT['snow in #REF', '#1']"", ""BOOLEAN['#3', 'is plowing #4']"", ""SELECT['other image']"", ""PROJECT['vehicle in #REF', '#6']"", ""PROJECT['plow in #REF', '#6']"", ""COMPARATIVE['#6', '#7', 'is in #8']"", ""DISCARD['#6', '#9']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is at least one']""]"
NLVR2_dev_dev-659-2-0,If the left and right image contains the same number of jeep snow trucks that face opposite directions.,"[""SELECT['jeep snow trucks']"", ""PROJECT['direction that #REF face', '#1']"", ""COMPARATIVE['#1', '#2', 'is opposite']"", ""SELECT['left image']"", ""SELECT['right image']"", ""FILTER['#3', 'in #4']"", ""FILTER['#3', 'in #5']"", ""AGGREGATE['count', '#6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to #9']""]","[""SELECT['jeep snow trucks']"", ""PROJECT['directions that #REF face', '#1']"", ""COMPARATIVE['#1', '#2', 'are opposite']"", ""SELECT['left image']"", ""SELECT['right image']"", ""FILTER['#3', 'in #4']"", ""FILTER['#3', 'in #5']"", ""AGGREGATE['count', '#6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to #9']""]"
NLVR2_dev_dev-660-2-1,If there is a minimum of 8 sports bottles present.,"[""SELECT['sports bottles']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is at least 8']""]","[""SELECT['sports bottles']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to 8']""]"
NLVR2_dev_dev-660-3-0,If there are no more than eight bottles in total.,"[""SELECT['bottles']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is at most eight']""]","[""SELECT['bottle']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is at most eight']""]"
NLVR2_dev_dev-661-0-0,"If one image shows crab served on a round white plate, and the other image shows the gooey-looking interior of a crab.","[""SELECT['one image']"", ""PROJECT['crab in #REF', '#1']"", ""PROJECT['plate in #REF', '#1']"", ""FILTER['#3', 'that is round']"", ""FILTER['#4', 'that is white']"", ""BOOLEAN['#2', 'is served on #5']"", ""SELECT['other image']"", ""PROJECT['crab in #REF', '#7']"", ""PROJECT['interior of #REF', '#8']"", ""COMPARATIVE['#8', '#9', 'is gooey-looking']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#6', '#12']""]","[""SELECT['one image']"", ""PROJECT['crab in #REF', '#1']"", ""PROJECT['plate in #REF', '#1']"", ""FILTER['#3', 'that is round']"", ""FILTER['#4', 'that is white']"", ""BOOLEAN['#2', 'is served on #5']"", ""SELECT['the other image']"", ""PROJECT['crab in #REF', '#7']"", ""PROJECT['interior of #REF', '#8']"", ""BOOLEAN['#9', 'is gooey-looking']"", ""BOOLEAN['logical_and', 'true', '#6', '#10']""]"
NLVR2_dev_dev-661-1-1,If a person is holding the crab in the image on the left.,"[""SELECT['person']"", ""SELECT['crab']"", ""FILTER['#1', 'holding #2']"", ""BOOLEAN['#3', 'is in the left image']""]","[""SELECT['person']"", ""SELECT['crab']"", ""FILTER['#1', 'that is holding #2']"", ""BOOLEAN['#3', 'is in the left image']""]"
NLVR2_dev_dev-66-2-0,"If one sneaker has a blue upper front and blue laces, and the other sneaker has a black upper front teamed with green and yellow accents.","[""SELECT['one sneaker']"", ""PROJECT['upper front of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is blue']"", ""PROJECT['laces of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'are blue']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']"", ""SELECT['other sneaker']"", ""PROJECT['upper front of #REF', '#8']"", ""COMPARATIVE['#8', '#9', 'is black']"", ""PROJECT['accents of #REF', '#10']"", ""COMPARATIVE['#10', '#11', 'are green']"", ""COMPARATIVE['#10', '#12', 'are yellow']"", ""INTERSECTION['#10', '#13', '#14']"", ""AGGREGATE['count', '#15']"", ""BOOLEAN['#16', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#7', '#17']""]","[""SELECT['one sneaker']"", ""PROJECT['upper front of #REF', '#1']"", ""BOOLEAN['#2', 'is blue']"", ""PROJECT['laces of #REF', '#1']"", ""BOOLEAN['#4', 'are blue']"", ""BOOLEAN['logical_and', 'true', '#3', '#5']"", ""SELECT['other sneaker']"", ""PROJECT['upper front of #REF', '#7']"", ""COMPARATIVE['#7', '#8', 'is black']"", ""PROJECT['accents of #REF', '#9']"", ""COMPARATIVE['#9', '#10', 'are green']"", ""COMPARATIVE['#9', '#11', 'are yellow']"", ""INTERSECTION['#9', '#12', '#13']"", ""AGGREGATE['count', '#14']"", ""BOOLEAN['#15', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#6', '#16']""]"
NLVR2_dev_dev-662-1-0,"If in the image to the right, at least one syringe is placed horizontally; the actual syringe, and not the needle tips.","[""SELECT['the image to the right']"", ""PROJECT['syringes in #REF', '#1']"", ""FILTER['#2', 'that are placed horizontally']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']"", ""PROJECT['the needle tips of #REF', '#1']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#5', '#8']""]","[""SELECT['the image to the right']"", ""PROJECT['syringes in #REF', '#1']"", ""FILTER['#2', 'that are placed horizontally']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']"", ""PROJECT['the actual #REF', '#5']"", ""PROJECT['the needle tips of #REF', '#5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to zero']"", ""BOOLEAN['logical_and', 'true', '#7', '#8']""]"
NLVR2_dev_dev-662-1-1,If there are fewer than three plastic syringes in total.,"[""SELECT['syringes']"", ""FILTER['#1', 'that are plastic']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is lower than three']""]","[""SELECT['plastic syringes']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is lower than three']""]"
NLVR2_dev_dev-66-3-1,"If at least one of the shoes is red, black, blue, and white.","[""SELECT['shoes']"", ""FILTER['#1', 'that are red']"", ""FILTER['#1', 'that are black']"", ""FILTER['#1', 'that are blue']"", ""FILTER['#1', 'that are white']"", ""UNION['#2', '#3', '#4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least one']""]","[""SELECT['shoes']"", ""FILTER['#1', 'that is red']"", ""FILTER['#1', 'that is black']"", ""FILTER['#1', 'that is blue']"", ""FILTER['#1', 'that is white']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']"", ""BOOLEAN['#5', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#6', '#7']""]"
NLVR2_dev_dev-663-1-0,If the crab in the left image is cooked and served on a platter.,"[""SELECT['left image']"", ""PROJECT['crab in #REF', '#1']"", ""BOOLEAN['#2', 'is cooked']"", ""PROJECT['platter in #REF', '#1']"", ""BOOLEAN['#3', 'is served on #4']"", ""BOOLEAN['logical_and', 'true', '#5', '#6']""]","[""SELECT['the left image']"", ""PROJECT['crab in #REF', '#1']"", ""BOOLEAN['#2', 'is cooked']"", ""PROJECT['platter in #REF', '#1']"", ""BOOLEAN['#4', 'is served on #3']"", ""BOOLEAN['logical_and', 'true', '#5', '#6']""]"
NLVR2_dev_dev-663-2-1,If there are at least 6 crab legs cooked and sitting in a round bowl.,"[""SELECT['crab legs']"", ""FILTER['#1', 'that are cooked']"", ""SELECT['bowl']"", ""FILTER['#3', 'that is round']"", ""FILTER['#2','sitting in #4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least 6']""]","[""SELECT['crab legs']"", ""FILTER['#1', 'that are cooked']"", ""SELECT['bowl']"", ""FILTER['#3', 'that is round']"", ""FILTER['#2', 'in #4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least 6']""]"
NLVR2_dev_dev-664-0-0,"If an image shows a pale camel-colored standing dog, with a leash extending from its neck upward.","[""SELECT['dog']"", ""FILTER['#1', 'that is standing']"", ""FILTER['#2', 'that is pale camel-colored']"", ""PROJECT['neck of #REF', '#3']"", ""SELECT['leash']"", ""COMPARATIVE['#3', '#5', 'is extending from #4 upward']"", ""BOOLEAN['#6', 'is in an image']""]","[""SELECT['dog']"", ""FILTER['#1', 'that is standing']"", ""FILTER['#2', 'that is pale']"", ""FILTER['#3', 'that is camel-colored']"", ""SELECT['leash']"", ""PROJECT['neck of #REF', '#5']"", ""COMPARATIVE['#5', '#6', 'is extending from #7 upward']"", ""BOOLEAN['#8', 'is in an image']""]"
NLVR2_dev_dev-664-1-1,If an image contains a slim dog being held on a leash.,"[""SELECT['dog']"", ""FILTER['#1', 'that is slim']"", ""SELECT['leash']"", ""FILTER['#2', 'being held on #3']"", ""BOOLEAN['#4', 'is in an image']""]","[""SELECT['dog']"", ""FILTER['#1', 'that is slim']"", ""SELECT['a leash']"", ""FILTER['#2', 'being held on #3']"", ""BOOLEAN['#4', 'is in an image']""]"
NLVR2_dev_dev-665-1-0,If atleast 4 gorillas total,"[""SELECT['gorillas']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is at least 4']""]","[""SELECT['gorillas']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is at least four']""]"
NLVR2_dev_dev-665-2-1,If there is exactly one gorilla in the right image.,"[""SELECT['right image']"", ""PROJECT['gorilla in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']""]","[""SELECT['right image']"", ""PROJECT['gorillas in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']""]"
NLVR2_dev_dev-666-0-0,If a lock has a circle with in a circle on the front,"[""SELECT['lock']"", ""SELECT['circle']"", ""PROJECT['front of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'has #4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least one']""]","[""SELECT['lock']"", ""SELECT['circle']"", ""PROJECT['front of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is on #1']"", ""BOOLEAN['#1', 'has #4']""]"
NLVR2_dev_dev-666-2-1,If all of the locks have a silver locking handle.,"[""SELECT['locks']"", ""PROJECT['locking handle of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is silver']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to #5']""]","[""SELECT['locks']"", ""PROJECT['locking handles of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is silver']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to #5']""]"
NLVR2_dev_dev-667-1-0,If a convertible is parked on the side of the road with mountains in the background,"[""SELECT['convertible']"", ""SELECT['road']"", ""PROJECT['side of #REF', '#2']"", ""SELECT['mountains']"", ""BOOLEAN['#3', 'is parked on #4']""]","[""SELECT['convertible']"", ""SELECT['road']"", ""PROJECT['side of #REF', '#2']"", ""SELECT['mountains']"", ""BOOLEAN['#3', 'are in the background of #4']""]"
NLVR2_dev_dev-667-2-1,If the front end of both convertibles are facing the right side of the image.,"[""SELECT['convertibles']"", ""PROJECT['front end of #REF', '#1']"", ""FILTER['#2', 'that are facing the right side of the image']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']""]","[""SELECT['convertibles']"", ""PROJECT['front end of #REF', '#1']"", ""BOOLEAN['#2', 'is facing the right side of the image']""]"
NLVR2_dev_dev-668-0-0,"If each image includes at least one whole lemon and whole lime, and only the left image includes wedge-shaped fruits.","[""SELECT['images']"", ""PROJECT['lemons in #REF', '#1']"", ""FILTER['#2', 'that are whole']"", ""PROJECT['lemons in #REF', '#1']"", ""FILTER['#4', 'that are whole']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least one']"", ""SELECT['the left image']"", ""PROJECT['fruits in #REF', '#8']"", ""FILTER['#9', 'that are wedge-shaped']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is equal to #12']"", ""BOOLEAN['logical_and', 'true', '#7', '#13']""]","[""SELECT['images']"", ""PROJECT['lemons in #REF', '#1']"", ""FILTER['#2', 'that are whole']"", ""PROJECT['limes in #REF', '#1']"", ""FILTER['#4', 'that are whole']"", ""GROUP['count', '#5', '#1']"", ""COMPARATIVE['#1', '#6', 'is at least one']"", ""GROUP['count', '#7', '#1']"", ""COMPARATIVE['#1', '#8', 'is at least one']"", ""COMPARATIVE['#1', '#9', 'is equal to one']"", ""INTERSECTION['#1', '#10', '#11']"", ""AGGREGATE['count', '#12']"", ""AGGREGATE['count', '#13']"", ""BOOLEAN['#14', 'is equal to #15']"", ""SELECT['the left image']"", ""PROJECT['fruits in #REF', '#16']"", ""FILTER['#17', 'that are wedge-shaped']"", ""AGGREGATE['count', '#18']"", ""BOOLEAN['#19', 'is equal to #20']"", ""BOOLEAN['logical_and', 'true', '#9', '#17']""]"
NLVR2_dev_dev-668-0-1,If in at least one image there is a single full lemon and lime.,"[""SELECT['lemon and lime']"", ""FILTER['#1', 'that are full']"", ""SELECT['images']"", ""GROUP['count', '#2', '#3']"", ""COMPARATIVE['#3', '#4', 'is equal to one']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least one']""]","[""SELECT['images']"", ""PROJECT['lemon in #REF', '#1']"", ""PROJECT['lime in #REF', '#1']"", ""FILTER['#3', 'that are full']"", ""FILTER['#4', 'that are full']"", ""GROUP['count', '#5', '#1']"", ""COMPARATIVE['#1', '#6', 'is equal to one']"", ""GROUP['count', '#7', '#1']"", ""COMPARATIVE['#1', '#8', 'is equal to one']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is at least one']""]"
NLVR2_dev_dev-669-3-0,"If each image shows a single colorful parrot-type bird, and the bird in the left image perches on a branch that extends from the right.","[""SELECT['images']"", ""PROJECT['birds in #REF', '#1']"", ""FILTER['#2', 'that are colorful']"", ""FILTER['#3', 'that are parrot-type']"", ""GROUP['count', '#4', '#1']"", ""COMPARATIVE['#1', '#5', 'is equal to one']"", ""AGGREGATE['count', '#6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to #9']"", ""SELECT['the left image']"", ""PROJECT['bird in #REF', '#10']"", ""PROJECT['branch in #REF', '#10']"", ""FILTER['#11', 'that extends from the right']"", ""BOOLEAN['#12', 'perches on #13']"", ""BOOLEAN['logical_and', 'true', '#7', '#14']""]","[""SELECT['images']"", ""PROJECT['birds in #REF', '#1']"", ""FILTER['#2', 'that are colorful']"", ""FILTER['#3', 'that are parrot-type']"", ""GROUP['count', '#4', '#1']"", ""COMPARATIVE['#1', '#5', 'is equal to one']"", ""AGGREGATE['count', '#6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to #9']"", ""SELECT['left image']"", ""PROJECT['bird in #REF', '#10']"", ""PROJECT['branch in #REF', '#10']"", ""FILTER['#11', 'that extends from the right']"", ""BOOLEAN['#12', 'perches on #13']"", ""BOOLEAN['logical_and', 'true', '#7', '#14']""]"
NLVR2_dev_dev-67-0-0,If the train in the left image is facing left.,"[""SELECT['left image']"", ""PROJECT['train in #REF', '#1']"", ""BOOLEAN['#2', 'is facing left']""]","[""SELECT['the left image']"", ""PROJECT['trains in #REF', '#1']"", ""BOOLEAN['#2', 'is facing left']""]"
NLVR2_dev_dev-670-1-0,If there are at least four keys.,"[""SELECT['keys']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is at least four']""]","[""SELECT['keys']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to four']""]"
NLVR2_dev_dev-671-0-0,If there is exactly one curved staircase.,"[""SELECT['staircases']"", ""FILTER['#1', 'that are curved']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']""]","[""SELECT['staircase']"", ""FILTER['#1', 'that are curved']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']""]"
NLVR2_dev_dev-671-0-1,If one of the images has no potted plants in it while the other has two.,"[""SELECT['one image']"", ""PROJECT['potted plants in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to zero']"", ""SELECT['other image']"", ""PROJECT['potted plants in #REF', '#5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to two']"", ""BOOLEAN['logical_and', 'true', '#4', '#8']""]","[""SELECT['one of the images']"", ""PROJECT['potted plants in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to zero']"", ""SELECT['the other image']"", ""PROJECT['potted plants in #REF', '#5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to two']"", ""BOOLEAN['logical_and', 'true', '#4', '#8']""]"
NLVR2_dev_dev-672-1-1,If all the roofs are thatched.,"[""SELECT['roofs']"", ""FILTER['#1', 'that are thatched']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to #4']""]","[""SELECT['roofs']"", ""FILTER['#1', 'that are thatched']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to #3']""]"
NLVR2_dev_dev-672-2-0,If the right image shows straw-like thatch on a roof that slopes upward to the right.,"[""SELECT['thatch']"", ""FILTER['#1', 'that is straw-like']"", ""SELECT['roof']"", ""FILTER['#3', 'that slopes upward to the right']"", ""FILTER['#2', 'on #4']"", ""BOOLEAN['#5', 'is in the right image']""]","[""SELECT['thatch']"", ""FILTER['#1', 'that is straw-like']"", ""SELECT['roof']"", ""FILTER['#3', 'that slopes upward to the right']"", ""FILTER['#2', 'that is on #4']"", ""BOOLEAN['#5', 'is in the right image']""]"
NLVR2_dev_dev-673-2-0,If there are stems showing in the two glass vases,"[""SELECT['vases']"", ""FILTER['#1', 'that are glass']"", ""PROJECT['stems in #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']""]","[""SELECT['vases']"", ""FILTER['#1', 'that are glass']"", ""SELECT['stems']"", ""FILTER['#3', 'that are showing']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#4', 'is equal to two']""]"
NLVR2_dev_dev-673-2-1,If in at least one image there is a large mason jar vase holding greenery.,"[""SELECT['mason jar vase']"", ""FILTER['#1', 'that is large']"", ""SELECT['greenery']"", ""FILTER['#2', 'holding #3']"", ""BOOLEAN['#4', 'is in at least one image']""]","[""SELECT['large mason jar vase']"", ""SELECT['greenery']"", ""FILTER['#1', 'holding #2']"", ""BOOLEAN['#3', 'is in at least one image']""]"
NLVR2_dev_dev-674-0-0,If one man is sitting down on a chair-like piece of equipment and holding a dumbbell in each hand.,"[""SELECT['man']"", ""SELECT['piece of equipment']"", ""FILTER['#2', 'that is chair-like']"", ""FILTER['#1','sitting down on #3']"", ""PROJECT['hands of #REF', '#4']"", ""SELECT['dumbbell']"", ""COMPARATIVE['#4', '#5', 'is holding #6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to one']""]","[""SELECT['man']"", ""SELECT['piece of equipment']"", ""FILTER['#2', 'that is chair-like']"", ""FILTER['#1','sitting down on #3']"", ""PROJECT['hands of #REF', '#4']"", ""SELECT['dumbbell']"", ""COMPARATIVE['#4', '#5', 'are holding #6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to one']""]"
NLVR2_dev_dev-674-3-1,If the man lifting weights in the image on the left is sitting down.,"[""SELECT['man']"", ""SELECT['weights']"", ""FILTER['#1', 'lifting #2']"", ""BOOLEAN['#3', 'is sitting down']""]","[""SELECT['left image']"", ""PROJECT['man in #REF', '#1']"", ""PROJECT['weights in #REF', '#1']"", ""BOOLEAN['#2', 'is lifting #3']"", ""BOOLEAN['#2', 'is sitting down']"", ""BOOLEAN['logical_and', 'true', '#4', '#5']""]"
NLVR2_dev_dev-675-2-0,"If each image contains exactly one cup, and one image features a white cup with a brown band around its middle and a lid on top.","[""SELECT['images']"", ""PROJECT['cups in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is equal to one']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#5', 'is equal to #6']"", ""SELECT['cup']"", ""FILTER['#8', 'that is white']"", ""PROJECT['middle of #REF', '#9']"", ""COMPARATIVE['#9', '#10', 'is brown']"", ""PROJECT['top of #REF', '#11']"", ""SELECT['lid']"", ""BOOLEAN['#12', 'is in one image']"", ""BOOLEAN['logical_and', 'true', '#7', '#13']""]","[""SELECT['images']"", ""PROJECT['cups in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is equal to one']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#5', 'is equal to #6']"", ""SELECT['cup']"", ""FILTER['#8', 'that is white']"", ""PROJECT['middle of #REF', '#9']"", ""COMPARATIVE['#9', '#10', 'is brown']"", ""PROJECT['top of #REF', '#11']"", ""SELECT['lid']"", ""BOOLEAN['#12', 'is on #13']"", ""BOOLEAN['logical_and', 'true', '#7', '#14']""]"
NLVR2_dev_dev-675-2-1,If there is exactly one lid.,"[""SELECT['lids']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to one']""]","[""SELECT['lids']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is exactly one']""]"
NLVR2_dev_dev-676-3-0,"If the righthand image shows a pug that is upright inside some type of container, with at least one arm propped on its edge.","[""SELECT['righthand image']"", ""PROJECT['pug in #REF', '#1']"", ""FILTER['#2', 'that is upright']"", ""PROJECT['container in #REF', '#1']"", ""PROJECT['edge of #REF', '#4']"", ""COMPARATIVE['#4', '#5', 'is propped on #6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is at least one']""]","[""SELECT['righthand image']"", ""PROJECT['pug in #REF', '#1']"", ""FILTER['#2', 'that is upright']"", ""PROJECT['container in #REF', '#1']"", ""PROJECT['edge of #REF', '#4']"", ""FILTER['#3', 'that is propped on #5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least one']""]"
NLVR2_dev_dev-677-1-0,If a chimp is eating another animal,"[""SELECT['chimp']"", ""SELECT['another animal']"", ""BOOLEAN['#1', 'is eating #2']""]","[""SELECT['chimp']"", ""SELECT['animals']"", ""DISCARD['#2', '#1']"", ""FILTER['#1', 'eating #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']""]"
NLVR2_dev_dev-678-1-0,"If there is an all in one fridge, stove and sink, with two burner eyes on the left.","[""SELECT['fridge']"", ""SELECT['stove']"", ""SELECT['sink']"", ""FILTER['#1', 'that is all in one']"", ""FILTER['#3', 'that is all in one']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']"", ""BOOLEAN['#7', 'is equal to two']"", ""BOOLEAN['logical_and', 'true', '#8', '#9']""]","[""SELECT['fridge']"", ""SELECT['stove']"", ""SELECT['sink']"", ""FILTER['#1', 'that is all in one']"", ""FILTER['#3', 'that is all in one']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']"", ""BOOLEAN['#7', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#8', '#9']"", ""BOOLEAN['logical_and', 'true', '#10', '#11']""]"
NLVR2_dev_dev-678-3-1,If one set of burners is gas.,"[""SELECT['sets of burners']"", ""FILTER['#1', 'that are gas']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']""]","[""SELECT['set of burners']"", ""FILTER['#1', 'that are gas']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']""]"
NLVR2_dev_dev-679-1-1,If a single jellyfish is traveling directly to the left in one of the images.,"[""SELECT['jellyfish']"", ""FILTER['#1', 'traveling directly to the left']"", ""SELECT['images']"", ""GROUP['count', '#2', '#3']"", ""COMPARATIVE['#3', '#4', 'is equal to one']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']""]","[""SELECT['jellyfish']"", ""FILTER['#1', 'that is traveling directly to the left']"", ""SELECT['images']"", ""GROUP['count', '#2', '#3']"", ""COMPARATIVE['#3', '#4', 'is equal to one']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']""]"
NLVR2_dev_dev-679-3-0,If there are at least four jelly fish.,"[""SELECT['jelly fish']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is at least four']""]","[""SELECT['jelly fish']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is higher than four']""]"
NLVR2_dev_dev-680-2-0,If a dung beetle is climbing down and off the right side of a mud ball.,"[""SELECT['dung beetle']"", ""SELECT['mud ball']"", ""PROJECT['right side of #REF', '#2']"", ""BOOLEAN['#1', 'is climbing down and off #3']""]","[""SELECT['dung beetle']"", ""SELECT['mud ball']"", ""BOOLEAN['#1', 'is climbing down and off the right side of #2']""]"
NLVR2_dev_dev-680-3-1,"If a black dug beetle is pushing a ball of dung in one image, and is without one in the other.","[""SELECT['one image']"", ""PROJECT['beetle in #REF', '#1']"", ""FILTER['#2', 'that is dug']"", ""FILTER['#3', 'that is black']"", ""PROJECT['ball of dung in #REF', '#1']"", ""BOOLEAN['#4', 'is pushing #5']"", ""SELECT['the other image']"", ""PROJECT['beetle in #REF', '#7']"", ""FILTER['#8', 'that is pushing #9']"", ""DISCARD['#8', '#10']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#6', '#13']""]","[""SELECT['one image']"", ""PROJECT['beetle in #REF', '#1']"", ""FILTER['#2', 'that is black']"", ""FILTER['#3', 'that is dug']"", ""PROJECT['ball of dung in #REF', '#1']"", ""BOOLEAN['#4', 'is pushing #5']"", ""SELECT['other image']"", ""PROJECT['beetle in #REF', '#7']"", ""FILTER['#8', 'that is black']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#6', '#11']""]"
NLVR2_dev_dev-68-1-0,If there are two rolled towels one blue and one pink.,"[""SELECT['towels']"", ""FILTER['#1', 'that are rolled']"", ""FILTER['#2', 'that are blue']"", ""FILTER['#2', 'that are pink']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to two']"", ""BOOLEAN['#6', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#7', '#8']""]","[""SELECT['towels']"", ""FILTER['#1', 'that are rolled']"", ""FILTER['#2', 'that are blue']"", ""FILTER['#2', 'that are pink']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']"", ""BOOLEAN['#6', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#7', '#8']""]"
NLVR2_dev_dev-681-0-0,If animal antlers are mounted on a wall in a barber shop with multiple barber chairs in the foreground.,"[""SELECT['animal antlers']"", ""SELECT['barber shop']"", ""PROJECT['wall in #REF', '#2']"", ""FILTER['#1','mounted on #3']"", ""SELECT['barber chairs']"", ""FILTER['#5', 'in the foreground']"", ""GROUP['count', '#6', '#4']"", ""COMPARATIVE['#4', '#7', 'is at least two']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is at least one']""]","[""SELECT['animal antlers']"", ""SELECT['barber shop']"", ""PROJECT['wall in #REF', '#2']"", ""FILTER['#1','mounted on #3']"", ""SELECT['barber chairs']"", ""FILTER['#5', 'in the foreground']"", ""GROUP['count', '#6', '#3']"", ""COMPARATIVE['#3', '#7', 'is at least two']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is at least one']""]"
NLVR2_dev_dev-681-2-1,If the right image contains at least two empty chairs.,"[""SELECT['the right image']"", ""PROJECT['chairs in #REF', '#1']"", ""FILTER['#2', 'that are empty']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least two']""]","[""SELECT['chairs']"", ""FILTER['#1', 'that are empty']"", ""FILTER['#2', 'in the right image']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least two']""]"
NLVR2_dev_dev-68-2-1,If there are two towels rolled up.,"[""SELECT['towels']"", ""FILTER['#1', 'rolled up']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']""]","[""SELECT['towels']"", ""FILTER['#1', 'that are rolled up']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is two']""]"
NLVR2_dev_dev-682-1-1,If the dog in the image on the left is sitting in a grassy area.,"[""SELECT['left image']"", ""PROJECT['dog in #REF', '#1']"", ""PROJECT['area in #REF', '#1']"", ""FILTER['#3', 'that is grassy']"", ""BOOLEAN['#2', 'is sitting in #4']""]","[""SELECT['left image']"", ""PROJECT['dog in #REF', '#1']"", ""PROJECT['grassy area in #REF', '#1']"", ""BOOLEAN['#2', 'is sitting in #3']""]"
NLVR2_dev_dev-682-3-0,"If a person's hand is near the fur of one afghan hound, and the hound in the other image has blond hair parted in the middle.","[""SELECT['one afghan hound']"", ""PROJECT['fur of #REF', '#1']"", ""PROJECT['person in #REF', '#1']"", ""PROJECT['hand of #REF', '#2']"", ""BOOLEAN['#3', 'is near #4']"", ""SELECT['other image']"", ""PROJECT['hound in #REF', '#6']"", ""PROJECT['hair of #REF', '#7']"", ""COMPARATIVE['#7', '#8', 'is blond']"", ""COMPARATIVE['#7', '#9', 'is parted in the middle']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is equal to one']""]","[""SELECT['one afghan hound']"", ""PROJECT['the fur of #REF', '#1']"", ""PROJECT['person in #REF', '#1']"", ""PROJECT['hand of #REF', '#2']"", ""BOOLEAN['#3', 'is near #4']"", ""SELECT['the other image']"", ""PROJECT['hound in #REF', '#6']"", ""PROJECT['hair of #REF', '#7']"", ""COMPARATIVE['#7', '#8', 'is blond']"", ""COMPARATIVE['#7', '#9', 'is parted in the middle']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is equal to one']""."
NLVR2_dev_dev-683-0-0,"If one convertible is displayed completely horizontally, and the other convertible is angled facing rightward.","[""SELECT['convertible']"", ""FILTER['#1', 'that is displayed completely horizontally']"", ""FILTER['#1', 'that is angled facing rightward']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']"", ""BOOLEAN['#5', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#6', '#7']""]","[""SELECT['convertible']"", ""FILTER['#1', 'that is displayed completely horizontally']"", ""FILTER['#1', 'that is angled facing rightward']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#5', 'is equal to one']"", ""BOOLEAN['#6', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#7', '#8']""]"
NLVR2_dev_dev-683-1-1,If the convertibles are facing in the same position in the image pair,"[""SELECT['convertibles']"", ""PROJECT['position that #REF are facing', '#1']"", ""BOOLEAN['#2', 'are the same']""]","[""SELECT['images']"", ""PROJECT['convertibles in #REF', '#1']"", ""PROJECT['positions facing of #REF', '#2']"", ""BOOLEAN['#3', 'are the same']""]"
NLVR2_dev_dev-684-0-1,"If each image contains one pencil case, and all pencil cases are displayed head-on and feature some blue component.","[""SELECT['pencil cases']"", ""SELECT['images']"", ""GROUP['count', '#1', '#2']"", ""COMPARATIVE['#2', '#3', 'is equal to one']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to #6']"", ""FILTER['#1', 'that are displayed head-on']"", ""PROJECT['component of #REF', '#8']"", ""COMPARATIVE['#8', '#9', 'is blue']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is equal to #12']"", ""BOOLEAN['logical_and', 'true', '#7', '#13']""]","[""SELECT['pencil cases']"", ""SELECT['images']"", ""GROUP['count', '#1', '#2']"", ""COMPARATIVE['#2', '#3', 'is equal to one']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to #6']"", ""FILTER['#1', 'that are displayed head-on']"", ""PROJECT['components of #REF', '#8']"", ""COMPARATIVE['#8', '#9', 'is blue']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is equal to #12']"", ""BOOLEAN['logical_and', 'true', '#7', '#13']""]"
NLVR2_dev_dev-684-1-0,If at least two colored pencils are near a pencil case.,"[""SELECT['pencils']"", ""FILTER['#1', 'that are colored']"", ""SELECT['pencil case']"", ""FILTER['#2', 'that are near #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least two']""]","[""SELECT['pencil']"", ""FILTER['#1', 'that are colored']"", ""SELECT['pencil case']"", ""FILTER['#2', 'near #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least two']""]"
NLVR2_dev_dev-685-1-0,If there are exactly two ferrets with mask fur patterns.,"[""SELECT['ferrets']"", ""PROJECT['fur patterns of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is mask']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']""]","[""SELECT['ferrets']"", ""PROJECT['fur patterns of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are mask']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']""]"
NLVR2_dev_dev-685-3-1,If in at least one image the is one black fur masked ferret staring forward.,"[""SELECT['images']"", ""PROJECT['ferrets in #REF', '#1']"", ""FILTER['#2', 'that are black fur masked']"", ""FILTER['#3', 'that are staring forward']"", ""GROUP['count', '#4', '#1']"", ""COMPARATIVE['#1', '#5', 'is equal to one']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least one']""]","[""SELECT['ferret']"", ""FILTER['#1', 'that is black fur masked']"", ""FILTER['#2', 'that is staring forward']"", ""SELECT['images']"", ""GROUP['count', '#3', '#4']"", ""COMPARATIVE['#4', '#5', 'is equal to one']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least one']""]"
NLVR2_dev_dev-686-0-1,If there are at most 4 pillows in the image pair.,"[""SELECT['pillows']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is at most 4']""]","[""SELECT['images']"", ""PROJECT['pillows in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at most 4']""]"
NLVR2_dev_dev-686-2-0,If the pillow count in the left image outnumbers that in the right image by at least three to one.,"[""SELECT['left image']"", ""PROJECT['pillow count in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""SELECT['right image']"", ""PROJECT['pillow count in #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#3', 'is at least three to one']"", ""BOOLEAN['#6', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#7', '#8']""]","[""SELECT['left image']"", ""PROJECT['pillow in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""SELECT['right image']"", ""PROJECT['pillow in #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#3', 'is at least three to one']"", ""BOOLEAN['#6', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#7', '#8']""]"
NLVR2_dev_dev-687-0-0,"If each image contains exactly two dogs, and one image features matching black-and-white dogs reclining on grass.","[""SELECT['dogs']"", ""SELECT['images']"", ""GROUP['count', '#1', '#2']"", ""COMPARATIVE['#2', '#3', 'is equal to two']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to #6']"", ""FILTER['#1', 'that are black-and-white']"", ""SELECT['grass']"", ""FILTER['#8','reclining on #9']"", ""BOOLEAN['#10', 'are in one image']"", ""BOOLEAN['logical_and', 'true', '#7', '#11']""]","[""SELECT['dogs']"", ""SELECT['images']"", ""GROUP['count', '#1', '#2']"", ""COMPARATIVE['#2', '#3', 'is equal to two']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to #6']"", ""FILTER['#1', 'that are black-and-white']"", ""SELECT['grass']"", ""FILTER['#9','reclining on #10']"", ""BOOLEAN['#11', 'is in one image']"", ""BOOLEAN['logical_and', 'true', '#7', '#12']""]"
NLVR2_dev_dev-687-1-1,If there is a pair of dogs that are sitting in the grass together and another pair that is not.,"[""SELECT['dogs']"", ""SELECT['grass']"", ""FILTER['#1', 'that are sitting in #2 together']"", ""DISCARD['#1', '#3']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to two']"", ""BOOLEAN['#6', 'is equal to two']"", ""BOOLEAN['logical_and', 'true', '#7', '#8']""]","[""SELECT['dogs']"", ""SELECT['the grass']"", ""FILTER['#1', 'that are sitting in #2 together']"", ""DISCARD['#1', '#3']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to two']"", ""BOOLEAN['#6', 'is equal to two']"", ""BOOLEAN['logical_and', 'true', '#7', '#8']""]"
NLVR2_dev_dev-688-2-1,If the image on the left has a dog wearing a collar,"[""SELECT['dog']"", ""SELECT['collar']"", ""FILTER['#1', 'wearing #2']"", ""BOOLEAN['#3', 'is in the left image']""]","[""SELECT['dog']"", ""SELECT['collar']"", ""FILTER['#1', 'wearing #2']"", ""BOOLEAN['#3', 'is in left image']""]"
NLVR2_dev_dev-688-3-0,If the dog in the image on the left is wearing a black  collar.,"[""SELECT['left image']"", ""PROJECT['dog in #REF', '#1']"", ""PROJECT['collar of #REF', '#2']"", ""BOOLEAN['#3', 'is black']""]","[""SELECT['the left image']"", ""PROJECT['dog in #REF', '#1']"", ""PROJECT['collar of #REF', '#2']"", ""BOOLEAN['#3', 'is black']""]"
NLVR2_dev_dev-689-1-0,If no more than two animals are pictured.,"[""SELECT['animals']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is at most two']""]","[""SELECT['animals']"", ""BOOLEAN['#1', 'are pictured']""]"
NLVR2_dev_dev-689-3-1,"If each image shows a single young hyena pup, and the pups on the left and right share similar type body poses.","[""SELECT['images']"", ""PROJECT['hyena pups in #REF', '#1']"", ""FILTER['#2', 'that are young']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is equal to one']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#6', 'is equal to #7']"", ""SELECT['left image']"", ""SELECT['right image']"", ""PROJECT['pups in #REF', '#9']"", ""PROJECT['pups in #REF', '#10']"", ""PROJECT['type body poses of #REF', '#11']"", ""PROJECT['type body poses of #REF', '#12']"", ""BOOLEAN['#13', 'are similar to #4']"", ""BOOLEAN['logical_and', 'true', '#7', '#14']""]","[""SELECT['images']"", ""PROJECT['hyena pups in #REF', '#1']"", ""FILTER['#2', 'that are young']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is equal to one']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#6', 'is equal to #7']"", ""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['pups in #REF', '#9']"", ""PROJECT['pups in #REF', '#10']"", ""PROJECT['type body poses of #REF', '#11']"", ""PROJECT['type body poses of #REF', '#12']"", ""BOOLEAN['#13', 'are similar to #4']"", ""BOOLEAN['logical_and', 'true', '#7', '#14']""."
NLVR2_dev_dev-690-2-0,If in at least one image there are at least two green leaves and two full lemons.,"[""SELECT['leaves']"", ""FILTER['#1', 'that are green']"", ""SELECT['lemons']"", ""FILTER['#3', 'that are full']"", ""SELECT['images']"", ""GROUP['count', '#2', '#5']"", ""COMPARATIVE['#5', '#6', 'is at least two']"", ""GROUP['count', '#4', '#7']"", ""COMPARATIVE['#7', '#8', 'is equal to two']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is at least one']""]","[""SELECT['leaves']"", ""FILTER['#1', 'that are green']"", ""SELECT['lemons']"", ""FILTER['#3', 'that are full']"", ""SELECT['images']"", ""GROUP['count', '#2', '#5']"", ""COMPARATIVE['#5', '#6', 'is at least two']"", ""GROUP['count', '#4', '#7']"", ""COMPARATIVE['#7', '#8', 'is at least two']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is at least one']""]"
NLVR2_dev_dev-690-3-1,"If in one image, half a lemon with cut side to the front is placed in front of two whole lemons and leaves.","[""SELECT['half a lemon']"", ""PROJECT['side of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is cut to the front']"", ""SELECT['lemons']"", ""FILTER['#4', 'that are whole']"", ""SELECT['leaves']"", ""FILTER['#5', 'that are placed in front of #6']"", ""FILTER['#7', 'that are placed in front of #6']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to one']""]","[""SELECT['half a lemon']"", ""PROJECT['side of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is cut to the front']"", ""SELECT['lemons']"", ""FILTER['#4', 'that are whole']"", ""SELECT['leaves']"", ""FILTER['#6', 'that are placed in front of #5']"", ""FILTER['#7', 'that are placed in front of #8']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to two']""]"
NLVR2_dev_dev-691-2-0,"If each image contains a single furry black dog, and all dogs have their mouths open with tongues showing.","[""SELECT['images']"", ""PROJECT['dogs in #REF', '#1']"", ""FILTER['#2', 'that are furry']"", ""FILTER['#3', 'that are black']"", ""GROUP['count', '#4', '#1']"", ""COMPARATIVE['#1', '#5', 'is equal to one']"", ""AGGREGATE['count', '#6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to #9']"", ""PROJECT['mouth of #REF', '#1']"", ""COMPARATIVE['#1', '#10', 'is open']"", ""PROJECT['tongues of #REF', '#11']"", ""COMPARATIVE['#11', '#12', 'are showing']"", ""AGGREGATE['count', '#13']"", ""AGGREGATE['count', '#14']"", ""BOOLEAN['#15', 'is equal to #16']"", ""BOOLEAN['logical_and', 'true', '#7', '#17']""]","[""SELECT['images']"", ""PROJECT['dogs in #REF', '#1']"", ""FILTER['#2', 'that are furry']"", ""FILTER['#3', 'that are black']"", ""GROUP['count', '#4', '#1']"", ""COMPARATIVE['#1', '#5', 'is equal to one']"", ""AGGREGATE['count', '#6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to #9']"", ""PROJECT['mouth of #REF', '#1']"", ""COMPARATIVE['#1', '#10', 'are open']"", ""PROJECT['tongues of #REF', '#11']"", ""COMPARATIVE['#11', '#12', 'are showing']"", ""AGGREGATE['count', '#13']"", ""AGGREGATE['count', '#14']"", ""BOOLEAN['#15', 'is equal to #16']"", ""BOOLEAN['logical_and', 'true', '#7', '#17']""]"
NLVR2_dev_dev-692-2-0,If there are exactly nine water bottles in total.,"[""SELECT['water bottles']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to nine']""]","[""SELECT['water bottle']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to nine']""]"
NLVR2_dev_dev-69-3-0,If there is at least one dog in the image pair wearing a leash,"[""SELECT['dogs']"", ""SELECT['leash']"", ""FILTER['#1', 'wearing #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']""]","[""SELECT['images']"", ""PROJECT['dogs in #REF', '#1']"", ""SELECT['leash']"", ""FILTER['#2', 'wearing #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']""]"
NLVR2_dev_dev-693-0-0,If the broccoli is sitting on plates with some sort of blue design in the images.,"[""SELECT['broccoli']"", ""SELECT['plates']"", ""PROJECT['design of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is blue']"", ""BOOLEAN['#1', 'is sitting on #4']""]","[""SELECT['broccoli']"", ""SELECT['plates']"", ""SELECT['design']"", ""FILTER['#3', 'that is blue']"", ""FILTER['#1', 'with #4']"", ""BOOLEAN['#2', 'is sitting on #5']""]"
NLVR2_dev_dev-694-2-1,If the black dog on the left is wearing a leash and collar.,"[""SELECT['dog']"", ""FILTER['#1', 'that is black']"", ""FILTER['#2', 'that is on the left']"", ""SELECT['leash']"", ""SELECT['collar']"", ""BOOLEAN['#3', 'is wearing #4']"", ""BOOLEAN['#5', 'is wearing #6']"", ""BOOLEAN['logical_and', 'true', '#7', '#8']""]","[""SELECT['dog']"", ""FILTER['#1', 'that is black']"", ""FILTER['#2', 'on the left']"", ""SELECT['leash']"", ""SELECT['collar']"", ""BOOLEAN['#3', 'is wearing #4']"", ""BOOLEAN['#5', 'is wearing #6']"", ""BOOLEAN['logical_and', 'true', '#4', '#7']""]"
NLVR2_dev_dev-694-3-0,"If each image features a solid black dog, and the dog on the left wears a leash.","[""SELECT['dog']"", ""FILTER['#1', 'that is solid black']"", ""SELECT['images']"", ""GROUP['count', '#2', '#3']"", ""COMPARATIVE['#3', '#4', 'is at least one']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to #7']"", ""FILTER['#1', 'that is on the left']"", ""SELECT['leash']"", ""BOOLEAN['#9', 'wears #10']"", ""BOOLEAN['logical_and', 'true', '#8', '#11']""]","[""SELECT['dog']"", ""FILTER['#1', 'that is solid black']"", ""SELECT['images']"", ""GROUP['count', '#2', '#3']"", ""COMPARATIVE['#3', '#4', 'is at least one']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to #7']"", ""FILTER['#1', 'that is on the left']"", ""SELECT['leash']"", ""BOOLEAN['#8', 'wears #9']"", ""BOOLEAN['logical_and', 'true', '#8', '#10']""]"
NLVR2_dev_dev-695-0-1,If there are three or more saxophones in total.,"[""SELECT['saxophones']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is at least three']""]","[""SELECT['saxophones']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to three']""]"
NLVR2_dev_dev-695-2-0,If there are at least two saxophones in the left image.,"[""SELECT['left image']"", ""PROJECT['saxophones in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least two']""]","[""SELECT['saxophones']"", ""FILTER['#1', 'in the left image']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least two']""]"
NLVR2_dev_dev-696-1-0,If in at least one inage their is a man with a grey suit with a paper sitting in a barber chair.,"[""SELECT['man']"", ""SELECT['suit']"", ""FILTER['#2', 'that is grey']"", ""FILTER['#1', 'with #3']"", ""SELECT['paper']"", ""FILTER['#5', 'with #4']"", ""SELECT['barber chair']"", ""FILTER['#6','sitting in #7']"", ""BOOLEAN['#8', 'is in at least one inage']""]","[""SELECT['man']"", ""SELECT['suit']"", ""FILTER['#2', 'that is grey']"", ""SELECT['paper']"", ""FILTER['#1', 'with #3']"", ""SELECT['barber chair']"", ""FILTER['#5','sitting in #6']"", ""BOOLEAN['#7', 'is in at least one inage']""]"
NLVR2_dev_dev-696-3-1,"If in one image, a bearded man in a gray suit is sitting in a barber chair with one hand on a chair arm.","[""SELECT['man']"", ""FILTER['#1', 'that is bearded']"", ""SELECT['suit']"", ""FILTER['#3', 'that is gray']"", ""FILTER['#2', 'in #4']"", ""SELECT['barber chair']"", ""PROJECT['hand of #REF', '#5']"", ""SELECT['chair arm']"", ""COMPARATIVE['#5', '#6', 'is on #7']"", ""BOOLEAN['#8', 'is in one image']""]","[""SELECT['man']"", ""FILTER['#1', 'that is bearded']"", ""SELECT['suit']"", ""FILTER['#3', 'that is gray']"", ""FILTER['#2', 'in #4']"", ""SELECT['barber chair']"", ""PROJECT['hand of #REF', '#5']"", ""PROJECT['chair arm of #REF', '#5']"", ""COMPARATIVE['#5', '#6', 'is on #7']"", ""BOOLEAN['#8', 'is in one image']""]"
NLVR2_dev_dev-697-2-0,If a baby elephant is standing in the grass next to an adult elephant without tusks.,"[""SELECT['elephant']"", ""FILTER['#1', 'that is baby']"", ""SELECT['grass']"", ""FILTER['#1', 'that is adult']"", ""PROJECT['tusks of #REF', '#4']"", ""COMPARATIVE['#4', '#5', 'are not there']"", ""BOOLEAN['#2', 'is standing in #6']""]","[""SELECT['elephant']"", ""FILTER['#1', 'that is baby']"", ""SELECT['grass']"", ""FILTER['#1', 'that is adult']"", ""PROJECT['tusks of #REF', '#4']"", ""COMPARATIVE['#4', '#5', 'are not there']"", ""BOOLEAN['#2', 'is standing in #3']""]"
NLVR2_dev_dev-697-2-1,If a baby elephant is walking on grass in at least one of the images.,"[""SELECT['elephant']"", ""FILTER['#1', 'that is baby']"", ""SELECT['grass']"", ""FILTER['#2', 'walking on #3']"", ""BOOLEAN['#4', 'is in at least one of the images']""]","[""SELECT['elephant']"", ""FILTER['#1', 'that is baby']"", ""SELECT['grass']"", ""FILTER['#2', 'walking on #3']"", ""BOOLEAN['#4', 'is in at least one image']""]"
NLVR2_dev_dev-698-2-1,If there is a guinea pig that is not swimming.,"[""SELECT['guinea pig']"", ""FILTER['#1', 'that is swimming']"", ""DISCARD['#1', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']""]","[""SELECT['guinea pigs']"", ""FILTER['#1', 'that are swimming']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']""]"
NLVR2_dev_dev-698-3-0,"If one person in a bathing suit is in a pool with a guinea pig in the right image, and the person is behind the guinea pig.","[""SELECT['right image']"", ""PROJECT['person in #REF', '#1']"", ""PROJECT['bathing suit in #REF', '#1']"", ""PROJECT['pool in #REF', '#1']"", ""PROJECT['guinea pig in #REF', '#1']"", ""FILTER['#3', 'that is with #4']"", ""FILTER['#5', 'that is behind #6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to one']""]","[""SELECT['right image']"", ""PROJECT['person in #REF', '#1']"", ""PROJECT['bathing suit in #REF', '#1']"", ""PROJECT['pool in #REF', '#1']"", ""PROJECT['guinea pig in #REF', '#1']"", ""FILTER['#4', 'that is with #5']"", ""FILTER['#2', 'that is behind #6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to one']""]"
NLVR2_dev_dev-699-1-0,If the right image shows a forward-facing small animal elevated with all four paws off the ground.,"[""SELECT['animal']"", ""FILTER['#1', 'that is forward-facing']"", ""FILTER['#2', 'that is small']"", ""PROJECT['paws of #REF', '#3']"", ""SELECT['ground']"", ""COMPARATIVE['#3', '#4', 'are off #5']"", ""BOOLEAN['#6', 'is in the right image']""]","[""SELECT['animal']"", ""FILTER['#1', 'that is forward-facing']"", ""FILTER['#2', 'that is small']"", ""PROJECT['paws of #REF', '#3']"", ""SELECT['ground']"", ""COMPARATIVE['#3', '#5', 'are off #6']"", ""BOOLEAN['#7', 'is in the right image']""]"
NLVR2_dev_dev-70-0-0,If the skunk is inside of a coke can,"[""SELECT['skunk']"", ""SELECT['coke can']"", ""BOOLEAN['#1', 'is inside of #2']""]","[""SELECT['the skunk']"", ""SELECT['a coke can']"", ""BOOLEAN['#1', 'is inside of #2']""]."
NLVR2_dev_dev-700-0-1,If a dog is on a sofa.,"[""SELECT['dog']"", ""SELECT['sofa']"", ""BOOLEAN['#1', 'is on #2']""]","[""SELECT['dog']"", ""SELECT['sofa']"", ""FILTER['#1', 'on #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']""]"
NLVR2_dev_dev-70-0-1,If the skunk in the image on the right has its head stuck in a soda can.,"[""SELECT['right image']"", ""PROJECT['skunk in #REF', '#1']"", ""PROJECT['head of #REF', '#2']"", ""PROJECT['soda can in #REF', '#1']"", ""BOOLEAN['#3', 'is stuck in #4']""]","[""SELECT['the image on the right']"", ""PROJECT['skunk in #REF', '#1']"", ""PROJECT['head of #REF', '#2']"", ""PROJECT['soda can in #REF', '#1']"", ""BOOLEAN['#4', 'is stuck in #3']""]"
NLVR2_dev_dev-700-2-0,If there is only one dog in each picture and they are basset hounds.,"[""SELECT['pictures']"", ""PROJECT['dogs in #REF', '#1']"", ""FILTER['#2', 'that are basset hounds']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is equal to one']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#6', 'is equal to #7']""]","[""SELECT['pictures']"", ""PROJECT['dogs in #REF', '#1']"", ""FILTER['#2', 'that are basset hounds']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is equal to one']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#7', 'is equal to #6']""]"
NLVR2_dev_dev-701-0-1,If there is exactly one horse in the right image.,"[""SELECT['right image']"", ""PROJECT['horse in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']""]","[""SELECT['the right image']"", ""PROJECT['horses in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']""]"
NLVR2_dev_dev-701-1-0,If an image shows a brown horse with a black mane in a trotting pose pulling a four wheeled cart leftward with a person in a hat holding the reins.,"[""SELECT['horse']"", ""FILTER['#1', 'that is brown']"", ""PROJECT['mane of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is black']"", ""FILTER['#4', 'in a trotting pose']"", ""SELECT['cart']"", ""FILTER['#6', 'that is four wheeled']"", ""FILTER['#5', 'pulling #7 leftward']"", ""SELECT['person']"", ""SELECT['hat']"", ""FILTER['#8', 'in #9']"", ""FILTER['#10', 'holding the reins']"", ""BOOLEAN['#11', 'is in an image']""]","[""SELECT['horse']"", ""FILTER['#1', 'that is brown']"", ""PROJECT['mane of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is black']"", ""FILTER['#4', 'in a trotting pose']"", ""SELECT['cart']"", ""FILTER['#6', 'that is four wheeled']"", ""FILTER['#5', 'pulling #7 leftward']"", ""SELECT['person']"", ""SELECT['hat']"", ""FILTER['#8', 'in #9']"", ""BOOLEAN['#10', 'is holding the reins']""]"
NLVR2_dev_dev-702-0-0,If there is a kindle on a shelf with a book with mountains to the left and a book with the sea to the right,"[""SELECT['kindle']"", ""SELECT['shelf']"", ""SELECT['book']"", ""FILTER['#3', 'with mountains to the left']"", ""FILTER['#3', 'with the sea to the right']"", ""BOOLEAN['#1', 'is on #4']"", ""BOOLEAN['#5', 'is on #6']"", ""BOOLEAN['logical_and', 'true', '#7', '#8']""]","[""SELECT['kindle']"", ""SELECT['shelf']"", ""SELECT['book']"", ""FILTER['#3', 'with mountains to the left']"", ""FILTER['#3', 'with the sea to the right']"", ""BOOLEAN['#1', 'is on #4']"", ""BOOLEAN['#5', 'is on #6']"", ""BOOLEAN['logical_and', 'true', '#4', '#7']""]"
NLVR2_dev_dev-703-1-0,If the image on the right features only a three story building made out of legos.,"[""SELECT['right image']"", ""PROJECT['building in #REF', '#1']"", ""FILTER['#2', 'that is made out of legos']"", ""PROJECT['story of #REF', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to three']""]","[""SELECT['right image']"", ""PROJECT['building in #REF', '#1']"", ""FILTER['#2', 'that is made out of legos']"", ""PROJECT['story of #REF', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']""]"
NLVR2_dev_dev-704-1-0,If the left and right image contains at least two blue snow truck.,"[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['snow trucks in #REF', '#1']"", ""PROJECT['snow trucks in #REF', '#2']"", ""FILTER['#3', 'that are blue']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least two']"", ""BOOLEAN['#7', 'is at least two']"", ""BOOLEAN['logical_and', 'true', '#8', '#9']""]","[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['snow truck in #REF', '#1']"", ""PROJECT['snow truck in #REF', '#2']"", ""FILTER['#3', 'that are blue']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least two']"", ""BOOLEAN['#7', 'is at least two']"", ""BOOLEAN['logical_and', 'true', '#8', '#9']""]"
NLVR2_dev_dev-705-2-0,If in one image there are adult elephants with at least one young elephant.,"[""SELECT['elephants']"", ""FILTER['#1', 'that are adult']"", ""FILTER['#1', 'that are young']"", ""SELECT['images']"", ""GROUP['count', '#2', '#4']"", ""COMPARATIVE['#4', '#5', 'is at least one']"", ""GROUP['count', '#3', '#6']"", ""COMPARATIVE['#6', '#7', 'is at least one']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to one']""]","[""SELECT['elephants']"", ""FILTER['#1', 'that are adults']"", ""FILTER['#1', 'that are young']"", ""SELECT['images']"", ""GROUP['count', '#3', '#4']"", ""COMPARATIVE['#4', '#5', 'is at least one']"", ""GROUP['count', '#6', '#4']"", ""COMPARATIVE['#4', '#7', 'is at least one']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to one']""]"
NLVR2_dev_dev-706-1-0,If more people can sit at the table in the image on the right.,"[""SELECT['right image']"", ""PROJECT['people in #REF', '#1']"", ""PROJECT['table in #REF', '#1']"", ""FILTER['#2', 'that can sit at #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is higher than #6']""]","[""SELECT['the image on the right']"", ""PROJECT['people in #REF', '#1']"", ""PROJECT['table in #REF', '#1']"", ""FILTER['#2', 'that can sit at #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is higher than #6']."
NLVR2_dev_dev-706-2-1,"If in one image, a dining table is shown with four chairs, while a dining table in the second image contains a storage unit.","[""SELECT['one image']"", ""PROJECT['dining table in #REF', '#1']"", ""PROJECT['chairs in #REF', '#1']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to four']"", ""SELECT['second image']"", ""PROJECT['dining table in #REF', '#6']"", ""PROJECT['storage unit in #REF', '#6']"", ""BOOLEAN['#7', 'contains #8']"", ""BOOLEAN['logical_and', 'true', '#5', '#9']""]","[""SELECT['one image']"", ""PROJECT['dining table in #REF', '#1']"", ""PROJECT['chairs in #REF', '#1']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to four']"", ""SELECT['second image']"", ""PROJECT['dining table in #REF', '#6']"", ""PROJECT['storage unit in #REF', '#6']"", ""BOOLEAN['#7', 'is in #8']"", ""BOOLEAN['logical_and', 'true', '#5', '#9']""]"
NLVR2_dev_dev-707-2-0,"If an image contains exactly two baboons in profile, who are face-to-face in a confrontational pose with at least one open-mouthed.","[""SELECT['baboons']"", ""FILTER['#1', 'that are in profile']"", ""FILTER['#2', 'that are face-to-face']"", ""FILTER['#3', 'that are in a confrontational pose']"", ""FILTER['#4', 'that are open-mouthed']"", ""SELECT['images']"", ""GROUP['count', '#5', '#6']"", ""COMPARATIVE['#6', '#7', 'is equal to two']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is at least one']""]","[""SELECT['baboons']"", ""FILTER['#1', 'that are in profile']"", ""FILTER['#2', 'that are face-to-face']"", ""FILTER['#3', 'in a confrontational pose']"", ""FILTER['#4', 'that are open-mouthed']"", ""SELECT['images']"", ""GROUP['count', '#5', '#6']"", ""COMPARATIVE['#6', '#7', 'is equal to two']"", ""GROUP['count', '#8', '#6']"", ""COMPARATIVE['#6', '#9', 'is at least one']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is equal to one']""]"
NLVR2_dev_dev-707-3-1,If there are exactly three baboons with visible faces.,"[""SELECT['baboons']"", ""PROJECT['faces of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are visible']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to three']""]","[""SELECT['baboons']"", ""PROJECT['faces of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is visible']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to three']""]"
NLVR2_dev_dev-708-2-0,If there is a total of two dark green bottles.,"[""SELECT['bottles']"", ""FILTER['#1', 'that are dark green']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']""]","[""SELECT['bottle']"", ""FILTER['#1', 'that are dark green']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']""]"
NLVR2_dev_dev-708-3-1,"If there are no more than thee bottles, and the bottles in one of the images are thinner than those in the other image, which are rounder.","[""SELECT['one image']"", ""PROJECT['bottles in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at most one']"", ""SELECT['the other image']"", ""PROJECT['bottles in #REF', '#5']"", ""BOOLEAN['#6', 'are thinner than #7']"", ""FILTER['#8', 'that are rounder than #4']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to #11']"", ""BOOLEAN['logical_and', 'true', '#4', '#12']""]","[""SELECT['one image']"", ""PROJECT['bottles in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at most one']"", ""SELECT['the other image']"", ""PROJECT['bottles in #REF', '#5']"", ""BOOLEAN['#6', 'are thinner than #7']"", ""FILTER['#8', 'that are rounder than #4']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to zero']"", ""BOOLEAN['logical_and', 'true', '#4', '#11']""]"
NLVR2_dev_dev-709-0-0,"If each image contains just one dispenser, and one image features a dispenser with a black push-button on the bottom.","[""SELECT['dispensers']"", ""SELECT['images']"", ""GROUP['count', '#1', '#2']"", ""COMPARATIVE['#2', '#3', 'is equal to one']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to #6']"", ""SELECT['push-button']"", ""FILTER['#8', 'that is black']"", ""PROJECT['bottom of #REF', '#9']"", ""COMPARATIVE['#9', '#10', 'is on #11']"", ""AGGREGATE['count', '#12']"", ""BOOLEAN['#13', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#7', '#14']""]","[""SELECT['dispensers']"", ""SELECT['images']"", ""GROUP['count', '#1', '#2']"", ""COMPARATIVE['#2', '#3', 'is equal to one']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to #6']"", ""SELECT['push-button']"", ""FILTER['#8', 'that is black']"", ""PROJECT['bottom of #REF', '#9']"", ""COMPARATIVE['#9', '#10', 'has #11 on']"", ""BOOLEAN['#11', 'is in one image']"", ""BOOLEAN['logical_and', 'true', '#6', '#12']""]"
NLVR2_dev_dev-709-2-1,If the left and right image contains the same number of wall soap dispenser with at least one solid plastic soap holder.,"[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['wall soap dispensers in #REF', '#1']"", ""PROJECT['wall soap holders in #REF', '#2']"", ""FILTER['#3', 'that are solid plastic']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to #7']"", ""BOOLEAN['#8', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#9', '#10']""]","[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['wall soap dispensers in #REF', '#1']"", ""PROJECT['wall soap holders in #REF', '#2']"", ""FILTER['#3', 'that are solid plastic']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to #7']"", ""BOOLEAN['#8', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#8', '#9']""]"
NLVR2_dev_dev-710-0-0,If there at least two beds and two windows.,"[""SELECT['beds']"", ""SELECT['windows']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least two']"", ""BOOLEAN['#4', 'is at least two']"", ""BOOLEAN['logical_and', 'true', '#5', '#6']""]","[""SELECT['beds']"", ""SELECT['windows']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least two']"", ""BOOLEAN['#4', 'is equal to two']"", ""BOOLEAN['logical_and', 'true', '#5', '#6']""]"
NLVR2_dev_dev-710-0-1,If all the windows are covered.,"[""SELECT['windows']"", ""FILTER['#1', 'that are covered']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to #4']""]","[""SELECT['windows']"", ""FILTER['#1', 'that are covered']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#4', 'is equal to #3']""]"
NLVR2_dev_dev-71-1-0,"If the pig in the left image is heading left, and the pig in the right image is heading right.","[""SELECT['left image']"", ""PROJECT['pig in #REF', '#1']"", ""BOOLEAN['#2', 'is heading left']"", ""SELECT['right image']"", ""PROJECT['pig in #REF', '#4']"", ""BOOLEAN['#5', 'is heading right']"", ""BOOLEAN['logical_and', 'true', '#3', '#6']""]","[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['pig in #REF', '#1']"", ""PROJECT['pig in #REF', '#2']"", ""BOOLEAN['#3', 'is heading left']"", ""BOOLEAN['#4', 'is heading right']"", ""BOOLEAN['logical_and', 'true', '#5', '#6']""]"
NLVR2_dev_dev-711-1-1,If both images are outside.,"[""SELECT['images']"", ""FILTER['#1', 'that are outside']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']""]","[""SELECT['images']"", ""FILTER['#1', 'that are outside']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least two']""]"
NLVR2_dev_dev-711-3-0,If in at least one image there is open floor of dining tables and square chairs.,"[""SELECT['dining tables']"", ""SELECT['chairs']"", ""FILTER['#2', 'that are square']"", ""PROJECT['floor of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is open']"", ""BOOLEAN['#5', 'is in at least one image']""]","[""SELECT['dining tables']"", ""SELECT['chairs']"", ""FILTER['#2', 'that are square']"", ""PROJECT['floor of #REF', '#1']"", ""PROJECT['floor of #REF', '#3']"", ""COMPARATIVE['#1', '#4', 'is open']"", ""BOOLEAN['#5', 'is in at least one image']""]"
NLVR2_dev_dev-71-2-1,If the hog in the left image is facing left while the hog in the right image is facing right.,"[""SELECT['left image']"", ""PROJECT['hog in #REF', '#1']"", ""BOOLEAN['#2', 'is facing left']"", ""SELECT['right image']"", ""PROJECT['hog in #REF', '#4']"", ""BOOLEAN['#5', 'is facing right']"", ""BOOLEAN['logical_and', 'true', '#3', '#6']""]","[""SELECT['the left image']"", ""PROJECT['hog in #REF', '#1']"", ""BOOLEAN['#2', 'is facing left']"", ""SELECT['the right image']"", ""PROJECT['hog in #REF', '#4']"", ""BOOLEAN['#5', 'is facing right']"", ""BOOLEAN['logical_and', 'true', '#3', '#6']”]"
NLVR2_dev_dev-712-2-1,If one of the images features a dog wearing a jacket.,"[""SELECT['dog']"", ""SELECT['jacket']"", ""FILTER['#1', 'wearing #2']"", ""BOOLEAN['#3', 'is in one of the images']""]","[""SELECT['dog']"", ""SELECT['jacket']"", ""FILTER['#1', 'that is wearing #2']"", ""BOOLEAN['#3', 'is in one of the images']""]"
NLVR2_dev_dev-712-3-0,"If one image features a dog facing forward and wearing a type of coat, and the other image features one real dog and at least one non-real dog face.","[""SELECT['one image']"", ""PROJECT['dog in #REF', '#1']"", ""FILTER['#2', 'that is facing forward']"", ""PROJECT['coat in #REF', '#1']"", ""BOOLEAN['#3', 'is wearing #4']"", ""SELECT['other image']"", ""PROJECT['dog in #REF', '#6']"", ""FILTER['#7', 'that is real']"", ""PROJECT['face of #REF', '#8']"", ""FILTER['#9', 'that is non-real']"", ""AGGREGATE['count', '#10']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is equal to one']"", ""BOOLEAN['#13', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#8', '#14']""]","[""SELECT['one image']"", ""PROJECT['dog in #REF', '#1']"", ""FILTER['#2', 'that is facing forward']"", ""PROJECT['type of coat in #REF', '#1']"", ""BOOLEAN['#3', 'is wearing #4']"", ""SELECT['other image']"", ""PROJECT['dog in #REF', '#6']"", ""FILTER['#7', 'that is real']"", ""PROJECT['face of #REF', '#8']"", ""FILTER['#9', 'that is non-real']"", ""AGGREGATE['count', '#10']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is equal to one']"", ""BOOLEAN['#13', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#8', '#14']""]"
NLVR2_dev_dev-713-1-0,If both dogs are facing towards the right.,"[""SELECT['dogs']"", ""FILTER['#1', 'that are facing towards the right']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']""]","[""SELECT['dogs']"", ""FILTER['#1', 'facing towards the right']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']""]"
NLVR2_dev_dev-713-2-1,"If one dog is standing with tail extended, and facing rightward with its head and body.","[""SELECT['dogs']"", ""FILTER['#1', 'that is standing']"", ""PROJECT['tail of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is extended']"", ""FILTER['#4', 'that is facing rightward']"", ""PROJECT['head of #REF', '#5']"", ""PROJECT['body of #REF', '#5']"", ""COMPARATIVE['#5', '#6', 'is facing rightward']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to one']""]","[""SELECT['dogs']"", ""FILTER['#1', 'that is standing']"", ""PROJECT['tail of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is extended']"", ""FILTER['#4', 'that is facing rightward']"", ""PROJECT['head of #REF', '#5']"", ""PROJECT['body of #REF', '#5']"", ""COMPARATIVE['#5', '#6', 'is facing rightward']"", ""INTERSECTION['#5', '#7', '#8']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to one']""."
NLVR2_dev_dev-714-0-0,If there are more machines in the image on the right.,"[""SELECT['machines']"", ""SELECT['right image']"", ""FILTER['#1', 'that are in #2']"", ""DISCARD['#1', '#3']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is higher than #6']""]","[""SELECT['machines']"", ""SELECT['right image']"", ""FILTER['#1', 'that are in #2']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is higher than #5']""]"
NLVR2_dev_dev-714-0-1,"If an image shows a side-by-side trio of same-style vending machines, each featuring red and yellow in their color schemes.","[""SELECT['vending machines']"", ""FILTER['#1', 'that are side-by-side']"", ""FILTER['#2', 'that are same-style']"", ""PROJECT['color schemes of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is red']"", ""COMPARATIVE['#3', '#4', 'is yellow']"", ""INTERSECTION['#3', '#5', '#6']"", ""BOOLEAN['#7', 'is in an image']""]","[""SELECT['vending machines']"", ""FILTER['#1', 'that are side-by-side']"", ""PROJECT['color schemes of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is the same-style']"", ""COMPARATIVE['#2', '#3', 'is red and yellow']"", ""INTERSECTION['#2', '#4', '#5']"", ""BOOLEAN['#6', 'are in an image']""]"
NLVR2_dev_dev-715-2-0,If the left image has 4 balloons of all different colors,"[""SELECT['the left image']"", ""PROJECT['balloons in #REF', '#1']"", ""PROJECT['colors of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'are different']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to 4']""]","[""SELECT['the left image']"", ""PROJECT['balloons in #REF', '#1']"", ""PROJECT['colors of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is different']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to 4']""]"
NLVR2_dev_dev-715-3-1,If the right image shows round balloons in various colors with strings descending from them.,"[""SELECT['balloons']"", ""FILTER['#1', 'that are round']"", ""PROJECT['colors of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'are various']"", ""SELECT['strings']"", ""FILTER['#5', 'descending from #4']"", ""BOOLEAN['#6', 'are in the right image']""]","[""SELECT['the right image']"", ""PROJECT['balloons in #REF', '#1']"", ""FILTER['#2', 'that are round']"", ""PROJECT['colors of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'are various']"", ""PROJECT['strings in #REF', '#5']"", ""BOOLEAN['#6', 'are descending from #7']""]"
NLVR2_dev_dev-716-0-0,"If the left image shows one camera-gazing bulldog in a sitting pose, and the right image shows one pale bulldog standing on all fours.","[""SELECT['the left image']"", ""PROJECT['bulldogs in #REF', '#1']"", ""FILTER['#2', 'that are camera-gazing']"", ""FILTER['#3', 'that are sitting']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']"", ""SELECT['the right image']"", ""PROJECT['bulldogs in #REF', '#7']"", ""FILTER['#8', 'that are pale']"", ""FILTER['#9', 'that are standing on all fours']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#6', '#12']""]","[""SELECT['the left image']"", ""PROJECT['bulldogs in #REF', '#1']"", ""FILTER['#2', 'that are camera-gazing']"", ""FILTER['#3', 'that are sitting']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']"", ""SELECT['the right image']"", ""PROJECT['bulldogs in #REF', '#7']"", ""FILTER['#8', 'that are pale']"", ""PROJECT['all fours of #REF', '#9']"", ""FILTER['#10', 'that are standing on #11']"", ""AGGREGATE['count', '#12']"", ""BOOLEAN['#13', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#7', '#14']""]"
NLVR2_dev_dev-716-2-1,If in at least one image there is one small black eyed puppy wearing a costume.,"[""SELECT['puppy']"", ""FILTER['#1', 'that is small']"", ""FILTER['#2', 'that is black eyed']"", ""SELECT['costume']"", ""FILTER['#3', 'wearing #4']"", ""BOOLEAN['#5', 'is in at least one image']""]","[""SELECT['puppy']"", ""FILTER['#1', 'that is small']"", ""FILTER['#2', 'that is black eyed']"", ""SELECT['costume']"", ""FILTER['#3', 'wearing #4']"", ""PROJECT['images of #REF', '#5']"", ""GROUP['count', '#5', '#6']"", ""COMPARATIVE['#6', '#7', 'is one']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is at least one']""]"
NLVR2_dev_dev-717-1-0,If the left and right image contains the same number of stingrays swimming facing different directions.,"[""SELECT['stingrays']"", ""FILTER['#1', 'that are swimming']"", ""PROJECT['direction that #REF are facing', '#2']"", ""COMPARATIVE['#2', '#3', 'is different']"", ""SELECT['left image']"", ""SELECT['right image']"", ""FILTER['#4', 'in #5']"", ""FILTER['#4', 'in #6']"", ""AGGREGATE['count', '#7']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to #10']""]","[""SELECT['stingrays']"", ""PROJECT['direction swimming in of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is different']"", ""SELECT['left image']"", ""SELECT['right image']"", ""FILTER['#3', 'that are in #4']"", ""FILTER['#3', 'that are in #5']"", ""AGGREGATE['count', '#6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to #9']""]"
NLVR2_dev_dev-717-1-1,"If the stingrays in the left and right images face opposite directions, and one image contains a stingray with vivid spots.","[""SELECT['stingrays']"", ""PROJECT['direction that #REF face', '#1']"", ""COMPARATIVE['#1', '#2', 'is opposite']"", ""SELECT['left image']"", ""SELECT['right image']"", ""BOOLEAN['#3', 'are in #4']"", ""BOOLEAN['#3', 'are in #5']"", ""PROJECT['potential of #REF', '#6']"", ""COMPARATIVE['#6', '#7', 'are vivid']"", ""BOOLEAN['logical_and', 'true', '#8', '#9']""]","[""SELECT['stingrays']"", ""PROJECT['direction that #REF face', '#1']"", ""COMPARATIVE['#1', '#2', 'is opposite']"", ""BOOLEAN['#3', 'are in the left image']"", ""BOOLEAN['#3', 'are in the right image']"", ""BOOLEAN['logical_and', 'true', '#4', '#5']"", ""BOOLEAN['logical_and', 'true', '#6', '#7']""]"
NLVR2_dev_dev-718-2-0,If multiple people are in a silver canoe heading righward in one image.,"[""SELECT['people']"", ""SELECT['canoe']"", ""FILTER['#2', 'that is silver']"", ""FILTER['#1', 'in #3']"", ""FILTER['#4', 'heading righward']"", ""SELECT['images']"", ""GROUP['count', '#5', '#6']"", ""COMPARATIVE['#6', '#7', 'is at least two']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to one']""]","[""SELECT['people']"", ""SELECT['canoe']"", ""FILTER['#2', 'that is silver']"", ""FILTER['#1', 'that are in #3']"", ""FILTER['#4', 'that are heading righward']"", ""SELECT['images']"", ""GROUP['count', '#5', '#6']"", ""COMPARATIVE['#6', '#7', 'is at least two']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to one']""]"
NLVR2_dev_dev-718-2-1,If the left and right image contains the same number of canoes facing right.,"[""SELECT['left image']"", ""PROJECT['canoes in #REF', '#1']"", ""FILTER['#2', 'that are facing right']"", ""AGGREGATE['count', '#3']"", ""SELECT['right image']"", ""PROJECT['canoes in #REF', '#5']"", ""FILTER['#6', 'that are facing right']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#4', 'is equal to #8']""]","[""SELECT['canoes']"", ""FILTER['#1', 'that are facing right']"", ""SELECT['left image']"", ""SELECT['right image']"", ""FILTER['#2', 'in #3']"", ""FILTER['#2', 'in #4']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to #8']""]"
NLVR2_dev_dev-719-1-0,If the left image shows one or more beakers containing only water and no ice.,"[""SELECT['beakers']"", ""SELECT['water']"", ""SELECT['ice']"", ""FILTER['#1', 'containing only #2']"", ""FILTER['#1', 'containing no #3']"", ""INTERSECTION['#1', '#4', '#5']"", ""BOOLEAN['#6', 'is in the left image']""]","[""SELECT['the left image']"", ""PROJECT['beakers in #REF', '#1']"", ""PROJECT['water in #REF', '#1']"", ""PROJECT['ice in #REF', '#1']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#2', '#4', 'is equal to zero']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least one']""]"
NLVR2_dev_dev-719-2-1,If an image shows one clear glass with a diagonal line created across its front.,"[""SELECT['glass']"", ""FILTER['#1', 'that is clear']"", ""PROJECT['front of #REF', '#2']"", ""SELECT['diagonal line']"", ""COMPARATIVE['#2', '#4', 'is created across #3']"", ""BOOLEAN['#5', 'is in an image']""]","[""SELECT['glasses']"", ""FILTER['#1', 'that are clear']"", ""PROJECT['front of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'has a diagonal line created across']"", ""BOOLEAN['#4', 'is in an image']""]"
NLVR2_dev_dev-720-1-1,If there are exactly two goats on mountains.,"[""SELECT['goats']"", ""SELECT['mountains']"", ""FILTER['#1', 'on #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']""]","[""SELECT['goats']"", ""SELECT['mountains']"", ""FILTER['#1', 'that are in #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']""]"
NLVR2_dev_dev-7-2-1,If all the containers are black.,"[""SELECT['containers']"", ""FILTER['#1', 'that are black']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to #4']""]","[""SELECT['containers']"", ""FILTER['#1', 'that are black']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#4', 'is equal to #3']""]"
NLVR2_dev_dev-721-1-0,If at least one person is standing in front of a row of identical-looking red vending machines.,"[""SELECT['person']"", ""SELECT['vending machines']"", ""FILTER['#2', 'that are red']"", ""FILTER['#3', 'that are identical-looking']"", ""FILTER['#1','standing in front of #4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least one']""]","[""SELECT['person']"", ""SELECT['vending machines']"", ""FILTER['#2', 'that are red']"", ""FILTER['#3', 'that are identical-looking']"", ""PROJECT['row of #REF', '#4']"", ""FILTER['#1','standing in front of #5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is higher than one']""]"
NLVR2_dev_dev-722-2-0,If one or more hunters pose in front of a dead animal.,"[""SELECT['hunters']"", ""SELECT['animal']"", ""FILTER['#2', 'that is dead']"", ""FILTER['#1', 'that pose in front of #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']""]","[""SELECT['hunters']"", ""SELECT['animals']"", ""FILTER['#2', 'that is dead']"", ""FILTER['#1', 'that pose in front of #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']""]"
NLVR2_dev_dev-722-3-1,If there are at least one warthog facing to the right.,"[""SELECT['warthogs']"", ""FILTER['#1', 'that are facing to the right']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least one']""]","[""SELECT['warthogs']"", ""FILTER['#1', 'that is facing to the right']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least one']""]"
NLVR2_dev_dev-72-3-0,If there are exactly three zebras in total.,"[""SELECT['zebras']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to three']""]","[""SELECT['zebras']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to two']""]"
NLVR2_dev_dev-723-0-0,If there are 7 or more penguins present.,"[""SELECT['penguins']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is at least 7']""]","[""SELECT['penguins']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is at least seven']""]"
NLVR2_dev_dev-723-1-1,If there are two birds touching beaks in both of the images.,"[""SELECT['birds']"", ""PROJECT['beaks of #REF', '#1']"", ""FILTER['#1', 'that are touching #2']"", ""SELECT['images']"", ""GROUP['count', '#3', '#4']"", ""COMPARATIVE['#4', '#5', 'is equal to two']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to two']""]","[""SELECT['images']"", ""PROJECT['birds in #REF', '#1']"", ""PROJECT['beaks of #REF', '#2']"", ""FILTER['#2', 'that are touching #3']"", ""GROUP['count', '#4', '#1']"", ""COMPARATIVE['#1', '#5', 'is equal to two']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to two']""]"
NLVR2_dev_dev-724-2-1,"If right image shows one marmot, which is lying with its belly flat on a rock.","[""SELECT['right image']"", ""PROJECT['marmot in #REF', '#1']"", ""FILTER['#2', 'that is lying']"", ""PROJECT['belly of #REF', '#3']"", ""PROJECT['rock in #REF', '#1']"", ""COMPARATIVE['#3', '#5', 'is flat on #6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to one']""]","[""SELECT['right image']"", ""PROJECT['marmot in #REF', '#1']"", ""FILTER['#2', 'that is lying']"", ""PROJECT['belly of #REF', '#3']"", ""SELECT['rock']"", ""COMPARATIVE['#3', '#5', 'is flat on #6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to one']""]"
NLVR2_dev_dev-724-3-0,If an animal is lying down on a stone in only one of the images.,"[""SELECT['animal']"", ""SELECT['stone']"", ""FILTER['#1', 'lying down on #2']"", ""BOOLEAN['#3', 'is in only one of the images']""]","[""SELECT['animal']"", ""SELECT['a stone']"", ""FILTER['#1', 'lying down on #2']"", ""BOOLEAN['#3', 'is in only one image']""]"
NLVR2_dev_dev-725-0-1,If there is three females in bikinis in the left image.,"[""SELECT['left image']"", ""PROJECT['females in #REF', '#1']"", ""PROJECT['bikinis in #REF', '#1']"", ""FILTER['#2', 'that are in #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to three']""]","[""SELECT['left image']"", ""PROJECT['females in #REF', '#1']"", ""PROJECT['bikinis in #REF', '#1']"", ""FILTER['#2', 'in #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to three']""]"
NLVR2_dev_dev-725-1-0,"If three bikini models pose standing with rears to the camera, in front of water.","[""SELECT['bikini models']"", ""FILTER['#1', 'that pose standing with rears to the camera']"", ""SELECT['water']"", ""FILTER['#2', 'in front of #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to three']""]","[""SELECT['bikini models']"", ""SELECT['water']"", ""FILTER['#1', 'in front of #2']"", ""FILTER['#3', 'that pose standing with rears to the camera']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to three']""]"
NLVR2_dev_dev-726-2-1,If at least two wolves are standing in snow.,"[""SELECT['wolves']"", ""SELECT['snow']"", ""FILTER['#1','standing in #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least two']""]","[""SELECT['wolves']"", ""SELECT['snow']"", ""FILTER['#1','standing on #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least two']""]"
NLVR2_dev_dev-726-3-0,"If the left image shows one wolf standing on a non-snowy ground, and the right image shows one wolf standing on snowy ground.","[""SELECT['left image']"", ""PROJECT['wolf in #REF', '#1']"", ""PROJECT['ground in #REF', '#1']"", ""FILTER['#3', 'that is non-snowy']"", ""FILTER['#2','standing on #4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']"", ""SELECT['right image']"", ""PROJECT['wolf in #REF', '#8']"", ""PROJECT['ground in #REF', '#8']"", ""FILTER['#9', 'that is snowy']"", ""FILTER['#10','standing on #11']"", ""AGGREGATE['count', '#12']"", ""BOOLEAN['#13', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#7', '#14']""]","[""SELECT['left image']"", ""PROJECT['wolf in #REF', '#1']"", ""PROJECT['ground in #REF', '#1']"", ""FILTER['#3', 'that is non-snowy']"", ""FILTER['#2','standing on #4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']"", ""SELECT['right image']"", ""PROJECT['wolf in #REF', '#8']"", ""PROJECT['ground in #REF', '#8']"", ""FILTER['#10', 'that is snowy']"", ""FILTER['#9','standing on #11']"", ""AGGREGATE['count', '#12']"", ""BOOLEAN['#13', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#7', '#14']""]"
NLVR2_dev_dev-727-3-0,If a large brown dog is next to a woman in a light shirt.,"[""SELECT['dog']"", ""FILTER['#1', 'that is large']"", ""FILTER['#2', 'that is brown']"", ""SELECT['woman']"", ""SELECT['shirt']"", ""FILTER['#5', 'that is light']"", ""FILTER['#4', 'in #6']"", ""BOOLEAN['#3', 'is next to #7']""]","[""SELECT['dog']"", ""FILTER['#1', 'that is large']"", ""FILTER['#2', 'that is brown']"", ""SELECT['woman']"", ""SELECT['shirt']"", ""FILTER['#4', 'that is light']"", ""FILTER['#3', 'in #5']"", ""BOOLEAN['#6', 'is next to #7']""]"
NLVR2_dev_dev-728-0-1,If the drums in the image on the right are placed on a mat.,"[""SELECT['right image']"", ""PROJECT['drums in #REF', '#1']"", ""PROJECT['mat in #REF', '#1']"", ""BOOLEAN['#2', 'are placed on #3']""]","[""SELECT['right image']"", ""PROJECT['drums of #REF', '#1']"", ""PROJECT['mat of #REF', '#1']"", ""BOOLEAN['#2', 'are placed on #3']""]"
NLVR2_dev_dev-729-1-1,"If one image contains exactly three balloons, the other five or more.","[""SELECT['one image']"", ""PROJECT['balloons in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to three']"", ""SELECT['the other image']"", ""PROJECT['balloons in #REF', '#5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least five']"", ""BOOLEAN['logical_and', 'true', '#4', '#8']""]","[""SELECT['one image']"", ""SELECT['the other image']"", ""PROJECT['balloons in #REF', '#1']"", ""PROJECT['balloons in #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to three']"", ""BOOLEAN['#6', 'is at least five']"", ""BOOLEAN['logical_and', 'true', '#7', '#8']""]"
NLVR2_dev_dev-729-2-0,"If one image shows balloons with dangling, curving 'strings' that are not gathered together.","[""SELECT['balloons']"", ""PROJECT['strings of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are dangling']"", ""COMPARATIVE['#1', '#2', 'are curving']"", ""INTERSECTION['#1', '#3', '#4']"", ""FILTER['#5', 'that are not gathered together']"", ""BOOLEAN['#6', 'are in one image']""]","[""SELECT['balloons']"", ""PROJECT['strings of #REF', '#1']"", ""FILTER['#2', 'that are dangling']"", ""COMPARATIVE['#1', '#3', 'are curving']"", ""FILTER['#4', 'that are gathered together']"", ""DISCARD['#4', '#5']"", ""BOOLEAN['#6', 'are in one image']""]"
NLVR2_dev_dev-7-3-0,"If the left image shows at least one blue barrel with its top open, and the right image includes a black barrel with a silver lid that has two round openings on it.","[""SELECT['left image']"", ""PROJECT['barrel in #REF', '#1']"", ""FILTER['#2', 'that is blue']"", ""PROJECT['top of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is open']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least one']"", ""SELECT['right image']"", ""PROJECT['barrel in #REF', '#8']"", ""FILTER['#9', 'that is black']"", ""PROJECT['lid of #REF', '#10']"", ""FILTER['#11', 'that is silver']"", ""PROJECT['openings of #REF', '#12']"", ""FILTER['#13', 'that are round']"", ""GROUP['count', '#14', '#15']"", ""COMPARATIVE['#15', '#16', 'is equal to two']"", ""AGGREGATE['count', '#17']"", ""BOOLEAN['#18', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#9', '#19']""]","[""SELECT['left image']"", ""PROJECT['barrel in #REF', '#1']"", ""FILTER['#2', 'that is blue']"", ""PROJECT['top of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is open']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least one']"", ""SELECT['right image']"", ""PROJECT['barrel in #REF', '#8']"", ""FILTER['#9', 'that is black']"", ""PROJECT['lid of #REF', '#10']"", ""FILTER['#11', 'that is silver']"", ""PROJECT['openings of #REF', '#12']"", ""FILTER['#13', 'that are round']"", ""GROUP['count', '#14', '#15']"", ""COMPARATIVE['#15', '#16', 'is equal to two']"", ""AGGREGATE['count', '#17']"", ""BOOLEAN['#18', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#9', '#20']""]"
NLVR2_dev_dev-730-1-0,"If a single adult gorilla is depicted in each image, and the left image shows a gorilla with its hands crossed over its chest.","[""SELECT['images']"", ""PROJECT['gorillas in #REF', '#1']"", ""FILTER['#2', 'that are adults']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is equal to one']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#6', 'is equal to #7']"", ""SELECT['the left image']"", ""PROJECT['gorilla in #REF', '#8']"", ""PROJECT['hands of #REF', '#9']"", ""PROJECT['chest of #REF', '#9']"", ""COMPARATIVE['#9', '#10', 'are crossed over #11']"", ""AGGREGATE['count', '#12']"", ""BOOLEAN['#13', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#7', '#14']""]","[""SELECT['images']"", ""PROJECT['gorillas in #REF', '#1']"", ""FILTER['#2', 'that are adult']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is equal to one']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#6', 'is equal to #7']"", ""SELECT['the left image']"", ""PROJECT['gorilla in #REF', '#8']"", ""PROJECT['hands of #REF', '#9']"", ""PROJECT['chest of #REF', '#9']"", ""COMPARATIVE['#9', '#10', 'are crossed over #11']"", ""AGGREGATE['count', '#12']"", ""BOOLEAN['#13', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#7', '#14']""]"
NLVR2_dev_dev-731-0-0,If there is a dog on a green rug.,"[""SELECT['dog']"", ""SELECT['rug']"", ""FILTER['#2', 'that is green']"", ""BOOLEAN['#1', 'is on #3']""]","[""SELECT['dog']"", ""PROJECT['rug of #REF', '#1']"", ""FILTER['#2', 'that is green']"", ""BOOLEAN['#1', 'is in #3']""]"
NLVR2_dev_dev-731-0-1,"If an image shows a basset hound next to a tube shape, and the dog has at least one front paw propped over something.","[""SELECT['basset hound']"", ""SELECT['tube shape']"", ""FILTER['#1', 'next to #2']"", ""PROJECT['front paws of #REF', '#3']"", ""FILTER['#4', 'that are propped over something']"", ""GROUP['count', '#5', '#3']"", ""COMPARATIVE['#3', '#6', 'is at least one']"", ""BOOLEAN['#7', 'is in an image']""]","[""SELECT['basset hound']"", ""SELECT['tube shape']"", ""FILTER['#1', 'next to #2']"", ""PROJECT['front paws of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'are propped over something']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least one']""]"
NLVR2_dev_dev-73-2-0,If one of the hutches does not contain any glass.,"[""SELECT['hutches']"", ""FILTER['#1', 'that contain glass']"", ""DISCARD['#1', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]","[""SELECT['hutches']"", ""SELECT['glass']"", ""DISCARD['#1', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]"
NLVR2_dev_dev-732-1-0,If the left and right image contains the same number of sailboats with at least one with no sails out.,"[""SELECT['sailboats']"", ""SELECT['left image']"", ""SELECT['right image']"", ""FILTER['#1', 'that are in #2']"", ""FILTER['#1', 'that are in #3']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to #7']"", ""PROJECT['sails of #REF', '#8']"", ""COMPARATIVE['#8', '#9', 'are out']"", ""DISCARD['#8', '#10']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#7', '#13']""]","[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['sailboats in #REF', '#1']"", ""PROJECT['sails of #REF', '#2']"", ""FILTER['#3', 'that are out']"", ""FILTER['#4', 'that are out']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to #8']"", ""SELECT['images']"", ""PROJECT['sailboats in #REF', '#9']"", ""DISCARD['#9', '#10']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#13', '#14']""]"
NLVR2_dev_dev-732-3-1,"If one image has multiple unfurled sails, but the other does not.","[""SELECT['one image']"", ""PROJECT['sails in #REF', '#1']"", ""FILTER['#2', 'that are unfurled']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least two']"", ""SELECT['the other image']"", ""PROJECT['sails in #REF', '#6']"", ""FILTER['#7', 'that are unfurled']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to zero']"", ""BOOLEAN['logical_and', 'true', '#5', '#10']""]","[""SELECT['one image']"", ""PROJECT['sails in #REF', '#1']"", ""FILTER['#2', 'that are unfurled']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is higher than one']"", ""SELECT['the other image']"", ""PROJECT['sails in #REF', '#6']"", ""FILTER['#7', 'that are unfurled']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to zero']"", ""BOOLEAN['logical_and', 'true', '#5', '#10']""]"
NLVR2_dev_dev-73-3-1,If an image shows a flat-topped wooden cabinet with arched windows on glass-fronted doors.,"[""SELECT['cabinet']"", ""FILTER['#1', 'that is flat-topped']"", ""FILTER['#2', 'that is wooden']"", ""PROJECT['windows of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'are arched']"", ""PROJECT['doors of #REF', '#5']"", ""COMPARATIVE['#5', '#6', 'are glass-fronted']"", ""BOOLEAN['#7', 'is in an image']""]","[""SELECT['cabinet']"", ""FILTER['#1', 'that is flat-topped']"", ""FILTER['#2', 'that is wooden']"", ""PROJECT['windows of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'are arched']"", ""PROJECT['doors of #REF', '#5']"", ""COMPARATIVE['#5', '#6', 'are glass-fronted']"", ""FILTER['#7', 'on #8']"", ""BOOLEAN['#9', 'is in an image']""]"
NLVR2_dev_dev-733-2-0,If a primate in the image on the left is baring its sharp teeth.,"[""SELECT['left image']"", ""PROJECT['primate in #REF', '#1']"", ""PROJECT['teeth of #REF', '#2']"", ""FILTER['#3', 'that are sharp']"", ""BOOLEAN['#2', 'is baring #4']""]","[""SELECT['left image']"", ""PROJECT['primate in #REF', '#1']"", ""PROJECT['teeth of #REF', '#2']"", ""FILTER['#3', 'that are sharp']"", ""BOOLEAN['#2', 'are baring #4']""]"
NLVR2_dev_dev-733-2-1,"If an image includes a brown monkey sitting with its head turned and its mouth open wide, baring its fangs.","[""SELECT['monkey']"", ""FILTER['#1', 'that is brown']"", ""FILTER['#2', 'that is sitting']"", ""PROJECT['head of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is turned']"", ""PROJECT['mouth of #REF', '#5']"", ""COMPARATIVE['#5', '#6', 'is open wide']"", ""PROJECT['fangs of #REF', '#7']"", ""COMPARATIVE['#7', '#8', 'are baring #9']"", ""BOOLEAN['#10', 'is in an image']""]","[""SELECT['monkey']"", ""FILTER['#1', 'that is brown']"", ""FILTER['#2', 'that is sitting']"", ""PROJECT['head of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is turned']"", ""PROJECT['mouth of #REF', '#5']"", ""COMPARATIVE['#5', '#6', 'is open wide']"", ""PROJECT['fangs of #REF', '#7']"", ""COMPARATIVE['#7', '#8', 'are baring #9']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is at least one']""]"
NLVR2_dev_dev-734-0-1,If the right image contains at least five binders.,"[""SELECT['right image']"", ""PROJECT['binders in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least five']""]","[""SELECT['right image']"", ""PROJECT['binders of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least five']""]"
NLVR2_dev_dev-734-1-0,"If one image shows the front of a single upright binder, and the other image shows the flat ends of a row of varied solid-colored binders.","[""SELECT['one image']"", ""PROJECT['binder in #REF', '#1']"", ""FILTER['#2', 'that is upright']"", ""PROJECT['front of #REF', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']"", ""SELECT['other image']"", ""PROJECT['binders in #REF', '#7']"", ""FILTER['#8', 'that are varied']"", ""FILTER['#9', 'that are solid-colored']"", ""FILTER['#10', 'that are in a row']"", ""PROJECT['the flat ends of #REF', '#11']"", ""AGGREGATE['count', '#12']"", ""BOOLEAN['#13', 'is at least two']"", ""BOOLEAN['logical_and', 'true', '#6', '#14']""]","[""SELECT['one image']"", ""PROJECT['binders in #REF', '#1']"", ""FILTER['#2', 'that are upright']"", ""PROJECT['front of #REF', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']"", ""SELECT['other image']"", ""PROJECT['binders in #REF', '#7']"", ""FILTER['#8', 'that are varied']"", ""FILTER['#9', 'that are solid-colored']"", ""FILTER['#10', 'that are in a row']"", ""PROJECT['the flat ends of #REF', '#11']"", ""AGGREGATE['count', '#12']"", ""BOOLEAN['#13', 'is at least two']"", ""BOOLEAN['logical_and', 'true', '#6', '#14']""]"
NLVR2_dev_dev-735-2-1,If at least one beaker is closed on top.,"[""SELECT['beakers']"", ""PROJECT['top of #REF', '#1']"", ""FILTER['#1', 'that is closed on #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']""]","[""SELECT['beakers']"", ""FILTER['#1', 'that are closed on top']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least one']""]"
NLVR2_dev_dev-736-1-1,If in at least one image there are at least three circle windows  with at least one triangle roof.,"[""SELECT['images']"", ""PROJECT['windows in #REF', '#1']"", ""FILTER['#2', 'that are circle']"", ""PROJECT['roofs in #REF', '#1']"", ""FILTER['#4', 'that are triangle']"", ""GROUP['count', '#5', '#1']"", ""COMPARATIVE['#1', '#6', 'is at least three']"", ""GROUP['count', '#7', '#1']"", ""COMPARATIVE['#1', '#8', 'is at least one']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is at least one']""]","[""SELECT['images']"", ""PROJECT['windows in #REF', '#1']"", ""FILTER['#2', 'that are circle']"", ""PROJECT['roofs in #REF', '#1']"", ""FILTER['#4', 'that are triangle']"", ""GROUP['count', '#5', '#1']"", ""COMPARATIVE['#1', '#6', 'is at least three']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is at least one']""]"
NLVR2_dev_dev-736-3-0,If buildings are built up on the side of steep cliffs.,"[""SELECT['buildings']"", ""SELECT['cliffs']"", ""FILTER['#2', 'that are steep']"", ""PROJECT['the side of #REF', '#3']"", ""BOOLEAN['#1', 'are built up on #4']""]","[""SELECT['buildings']"", ""SELECT['cliffs']"", ""FILTER['#2', 'that are steep']"", ""PROJECT['side of #REF', '#3']"", ""BOOLEAN['#1', 'are built up on #4']""]"
NLVR2_dev_dev-737-2-0,If there is a blue/green tint to all objects in the left image.,"[""SELECT['the left image']"", ""PROJECT['objects in #REF', '#1']"", ""PROJECT['tint of #REF', '#2']"", ""BOOLEAN['#3', 'is blue/green']""]","[""SELECT['left image']"", ""PROJECT['objects of #REF', '#1']"", ""PROJECT['tint of #REF', '#2']"", ""BOOLEAN['#3', 'is blue/green']""]"
NLVR2_dev_dev-737-2-1,"If each image contains one free-standing pump dispenser, and each dispenser has a nozzle facing leftward.","[""SELECT['images']"", ""PROJECT['pump dispensers in #REF', '#1']"", ""FILTER['#2', 'that are free-standing']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is equal to one']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#6', 'is equal to #7']"", ""PROJECT['nozzle of #REF', '#1']"", ""COMPARATIVE['#1', '#9', 'is facing leftward']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is equal to #12']"", ""BOOLEAN['logical_and', 'true', '#8', '#13']""]","[""SELECT['images']"", ""PROJECT['pump dispensers in #REF', '#1']"", ""FILTER['#2', 'that are free-standing']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is equal to one']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#6', 'is equal to #7']"", ""PROJECT['nozzle of #REF', '#1']"", ""COMPARATIVE['#1', '#8', 'is facing leftward']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to #11']"", ""BOOLEAN['logical_and', 'true', '#8', '#12']""]"
NLVR2_dev_dev-738-0-0,If exactly one of the binders has two diagonal lines across its front.,"[""SELECT['binders']"", ""PROJECT['front of #REF', '#1']"", ""SELECT['diagonal lines']"", ""FILTER['#3', 'that are across #2']"", ""GROUP['count', '#4', '#1']"", ""COMPARATIVE['#1', '#5', 'is equal to two']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']""]","[""SELECT['binders']"", ""PROJECT['front of #REF', '#1']"", ""SELECT['diagonal lines']"", ""FILTER['#3', 'that are across #2']"", ""GROUP['count', '#4', '#2']"", ""COMPARATIVE['#2', '#5', 'is equal to two']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']""]"
NLVR2_dev_dev-738-2-1,"If there are two stripe on exactly one of the binders, and none on the other.","[""SELECT['binders']"", ""PROJECT['one #REF', '#1']"", ""PROJECT['stripe on #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']"", ""SELECT['the other #REF']"", ""PROJECT['stripe on #REF', '#6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to zero']"", ""BOOLEAN['logical_and', 'true', '#5', '#9']""]","[""SELECT['binders']"", ""PROJECT['one of #REF', '#1']"", ""PROJECT['stripe on #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']"", ""SELECT['the other binder']"", ""PROJECT['stripe on #REF', '#6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is zero']"", ""BOOLEAN['logical_and', 'true', '#5', '#9']""]"
NLVR2_dev_dev-739-2-1,"If the left image shows an arch ceiling that starts above bookshelves, and the right image shows the view down one narrow aisle in a bookstore.","[""SELECT['left image']"", ""PROJECT['arch ceiling in #REF', '#1']"", ""PROJECT['bookshelves in #REF', '#1']"", ""BOOLEAN['#2','starts above #3']"", ""SELECT['right image']"", ""PROJECT['view down one narrow aisle in #REF', '#5']"", ""PROJECT['view down #REF', '#6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#4', '#9']""]","[""SELECT['left image']"", ""PROJECT['arch ceiling in #REF', '#1']"", ""PROJECT['bookshelves in #REF', '#1']"", ""FILTER['#2', 'that starts above #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']"", ""SELECT['right image']"", ""PROJECT['bookstore in #REF', '#7']"", ""PROJECT['avenue in #REF', '#7']"", ""FILTER['#8', 'that is narrow']"", ""FILTER['#9', 'that has #10']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#6', '#13']""]"
NLVR2_dev_dev-739-3-0,If there are reading seats close to the bookshelves.,"[""SELECT['reading seats']"", ""SELECT['bookshelves']"", ""BOOLEAN['#1', 'are close to #2']""]","[""SELECT['reading seats']"", ""SELECT['bookshelves']"", ""FILTER['#1', 'that are close to #2']"", ""BOOLEAN['#3', 'are there any #REF']""]"
NLVR2_dev_dev-740-2-1,"If coral with aqua blue tint is in the left image, and the right image contains tendrils of at least one anemone with a white center.","[""SELECT['the left image']"", ""PROJECT['corals in #REF', '#1']"", ""PROJECT['tint of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is aqua blue']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']"", ""SELECT['the right image']"", ""PROJECT['anemones in #REF', '#7']"", ""PROJECT['center of #REF', '#8']"", ""COMPARATIVE['#8', '#9', 'is white']"", ""PROJECT['tendrils of #REF', '#10']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#6', '#13']""]","[""SELECT['the left image']"", ""PROJECT['corals in #REF', '#1']"", ""PROJECT['tint of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is aqua blue']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']"", ""SELECT['the right image']"", ""PROJECT['anemones in #REF', '#7']"", ""PROJECT['center of #REF', '#8']"", ""COMPARATIVE['#8', '#9', 'is white']"", ""PROJECT['tendrils of #REF', '#10']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#7', '#13']""]"
NLVR2_dev_dev-740-3-0,If there is at least 1 fish swimming in the anemone,"[""SELECT['fish']"", ""SELECT['anemone']"", ""FILTER['#1','swimming in #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']""]","[""SELECT['fish']"", ""SELECT['anemone']"", ""FILTER['#1','swimming in #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']""]."
NLVR2_dev_dev-74-1-0,If all foreground buses are angled heading right and are forward-turned.,"[""SELECT['buses']"", ""FILTER['#1', 'that are foreground']"", ""FILTER['#2', 'that are angled heading right']"", ""FILTER['#3', 'that are forward-turned']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to #6']""]","[""SELECT['buses']"", ""FILTER['#1', 'that are in the foreground']"", ""FILTER['#2', 'that are angled heading right']"", ""FILTER['#3', 'that are forward-turned']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to #6']""]"
NLVR2_dev_dev-74-1-1,If buses are parked next to each other in the image on the left.,"[""SELECT['left image']"", ""PROJECT['buses in #REF', '#1']"", ""BOOLEAN['#2', 'are parked next to each other']""]","[""SELECT['the left image']"", ""PROJECT['buses in #REF', '#1']"", ""BOOLEAN['#2', 'are parked next to each other']""]"
NLVR2_dev_dev-741-1-0,If a chick with yellowish fluffy fur is standing in the green grass in the image on the left.,"[""SELECT['left image']"", ""PROJECT['chicken in #REF', '#1']"", ""PROJECT['fur of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is fluffy']"", ""COMPARATIVE['#2', '#3', 'is yellowish']"", ""INTERSECTION['#2', '#4', '#5']"", ""PROJECT['grass in #REF', '#1']"", ""FILTER['#7', 'that is green']"", ""BOOLEAN['#8', 'is standing in #9']""]","[""SELECT['left image']"", ""PROJECT['chicken in #REF', '#1']"", ""PROJECT['fur of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is fluffy']"", ""COMPARATIVE['#2', '#3', 'is yellowish']"", ""INTERSECTION['#2', '#4', '#5']"", ""PROJECT['grass in #REF', '#1']"", ""FILTER['#6', 'that is green']"", ""BOOLEAN['#7', 'is standing in #8']""]"
NLVR2_dev_dev-741-1-1,If there are exactly two ducks in the right image.,"[""SELECT['right image']"", ""PROJECT['ducks in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']""]","[""SELECT['right image']"", ""PROJECT['ducks of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']""]"
NLVR2_dev_dev-742-1-1,If an image includes an upright white pump-top bottle with its nozzle facing right and a lavender-colored upright bottle with an asymmetrical hourglass shape.,"[""SELECT['bottle']"", ""FILTER['#1', 'that is pump-top']"", ""FILTER['#2', 'that is upright']"", ""FILTER['#3', 'that is white']"", ""PROJECT['nozzle of #REF', '#4']"", ""COMPARATIVE['#4', '#5', 'is facing right']"", ""FILTER['#1', 'that is upright']"", ""FILTER['#7', 'that is lavender-colored']"", ""PROJECT['shape of #REF', '#8']"", ""COMPARATIVE['#8', '#9', 'is asymmetrical']"", ""BOOLEAN['#10', 'is in an image']""]","[""SELECT['bottle']"", ""FILTER['#1', 'that is upright']"", ""FILTER['#2', 'that is white']"", ""FILTER['#3', 'that is pump-top']"", ""PROJECT['nozzle of #REF', '#4']"", ""COMPARATIVE['#4', '#5', 'is facing right']"", ""FILTER['#1', 'that is upright']"", ""FILTER['#7', 'that is lavender-colored']"", ""PROJECT['shape of #REF', '#8']"", ""COMPARATIVE['#8', '#9', 'is asymmetrical']"", ""BOOLEAN['#10', 'is in an image']""]"
NLVR2_dev_dev-742-3-0,If in at least one image there is a single closed bottle of body wash standing straight up.,"[""SELECT['bottle of body wash']"", ""FILTER['#1', 'that is closed']"", ""FILTER['#2', 'that is standing straight up']"", ""SELECT['images']"", ""GROUP['count', '#3', '#4']"", ""COMPARATIVE['#4', '#5', 'is equal to one']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least one']""]","[""SELECT['bottle of body wash']"", ""FILTER['#1', 'that is closed']"", ""FILTER['#2', 'that is standing straight up']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]"
NLVR2_dev_dev-743-1-0,"If in one image, a corgi is floating on a blue mat in a swimming pool that has advertising in the background on a wall beside the pool.","[""SELECT['corgi']"", ""SELECT['mat']"", ""FILTER['#2', 'that is blue']"", ""FILTER['#1', 'floating on #3']"", ""SELECT['swimming pool']"", ""SELECT['advertising']"", ""FILTER['#5', 'in #4']"", ""SELECT['wall']"", ""FILTER['#7', 'beside #6']"", ""FILTER['#8', 'on #9']"", ""BOOLEAN['#10', 'is in one image']""]","[""SELECT['corgi']"", ""SELECT['mat']"", ""FILTER['#2', 'that is blue']"", ""FILTER['#1', 'floating on #3']"", ""SELECT['swimming pool']"", ""SELECT['advertising']"", ""FILTER['#5', 'in #4']"", ""SELECT['wall']"", ""FILTER['#6', 'beside #7']"", ""FILTER['#8', 'on #9']"", ""BOOLEAN['#10', 'is in one image']""]"
NLVR2_dev_dev-743-3-1,If one corgi is on a blue mat in a pool.,"[""SELECT['corgi']"", ""SELECT['mat']"", ""FILTER['#2', 'that is blue']"", ""SELECT['pool']"", ""FILTER['#3', 'in #4']"", ""FILTER['#1', 'on #5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']""]","[""SELECT['corgi']"", ""SELECT['mat']"", ""FILTER['#2', 'that is blue']"", ""SELECT['pool']"", ""FILTER['#1', 'on #3']"", ""FILTER['#5', 'in #4']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']""]"
NLVR2_dev_dev-744-2-0,If the right image contains exactly one large bird flying in a blue sky with no clouds.,"[""SELECT['the right image']"", ""PROJECT['birds in #REF', '#1']"", ""FILTER['#2', 'that are large']"", ""PROJECT['sky in #REF', '#1']"", ""FILTER['#4', 'that is blue']"", ""PROJECT['clouds in #REF', '#1']"", ""FILTER['#5', 'that are blue']"", ""FILTER['#3', 'flying in #6']"", ""GROUP['count', '#7', '#1']"", ""COMPARATIVE['#1', '#8', 'is equal to one']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to one']""]","[""SELECT['the right image']"", ""PROJECT['birds in #REF', '#1']"", ""FILTER['#2', 'that are large']"", ""PROJECT['sky in #REF', '#1']"", ""FILTER['#4', 'that is blue']"", ""PROJECT['clouds in #REF', '#1']"", ""FILTER['#5', 'that are blue']"", ""FILTER['#3', 'that are flying in #6']"", ""GROUP['count', '#7', '#1']"", ""COMPARATIVE['#1', '#8', 'is equal to one']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to zero']""]"
NLVR2_dev_dev-744-3-1,If there are at most two vultures.,"[""SELECT['vultures']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is at most two']""]","[""SELECT['vultures']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to two']""]"
NLVR2_dev_dev-745-1-1,If there is at least 1 dog lying on top of another dog in the left image.,"[""SELECT['the left image']"", ""PROJECT['dogs in #REF', '#1']"", ""FILTER['#2', 'that are lying on top of one another']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']""]","[""SELECT['the left image']"", ""PROJECT['dogs in #REF', '#1']"", ""FILTER['#2', 'that are lying on top of #1']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']""]"
NLVR2_dev_dev-745-3-0,If there are two white dogs and at least one of them is with a friend of a different species.,"[""SELECT['dogs']"", ""FILTER['#1', 'that are white']"", ""SELECT['friend']"", ""PROJECT['species of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is different']"", ""FILTER['#2', 'with #5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to two']"", ""BOOLEAN['#8', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#9', '#10']""]","[""SELECT['dogs']"", ""FILTER['#1', 'that are white']"", ""SELECT['friend']"", ""PROJECT['species of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is different']"", ""FILTER['#2', 'with #5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to two']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#8', '#10']""]"
NLVR2_dev_dev-746-2-1,If in at least one image there is a white alpaca face pointing directly forward.,"[""SELECT['alpaca face']"", ""FILTER['#1', 'that is white']"", ""FILTER['#2', 'that is pointing directly forward']"", ""BOOLEAN['#3', 'is in at least one image']""]","[""SELECT['a alpaca']"", ""PROJECT['face of #REF', '#1']"", ""FILTER['#2', 'that is white']"", ""FILTER['#3', 'that is pointing directly forward']"", ""BOOLEAN['#4', 'is in at least one image."
NLVR2_dev_dev-746-3-0,"If the left image contains a single llama, which faces forward and is showing multiple lower teeth.","[""SELECT['left image']"", ""PROJECT['llama in #REF', '#1']"", ""FILTER['#2', 'that faces forward']"", ""PROJECT['lower teeth of #REF', '#3']"", ""GROUP['count', '#4', '#3']"", ""COMPARATIVE['#3', '#5', 'is at least two']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']""]","[""SELECT['left image']"", ""PROJECT['llama in #REF', '#1']"", ""FILTER['#2', 'that faces forward']"", ""PROJECT['lower teeth of #REF', '#3']"", ""GROUP['count', '#4', '#3']"", ""COMPARATIVE['#3', '#5', 'is higher than one']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']""]"
NLVR2_dev_dev-747-0-0,If a chimp is in the water surrounded by greenery,"[""SELECT['chimp']"", ""SELECT['the water']"", ""FILTER['#1', 'in #2']"", ""SELECT['greenery']"", ""BOOLEAN['#3', 'is surrounded by #4']""]","[""SELECT['chimp']"", ""SELECT['water']"", ""FILTER['#1', 'that is in #2']"", ""SELECT['greenery']"", ""BOOLEAN['#3', 'is surrounded by #4']""]"
NLVR2_dev_dev-747-2-1,If one of the images in the pair shows a chimpanzee in the water.,"[""SELECT['chimpanzee']"", ""SELECT['water']"", ""FILTER['#1', 'in #2']"", ""BOOLEAN['#3', 'is in one of the images']""]","[""SELECT['chimpanzee']"", ""SELECT['water']"", ""FILTER['#1', 'that is in #2']"", ""BOOLEAN['#3', 'is in one of the images."
NLVR2_dev_dev-748-0-1,If there are at least three animals.,"[""SELECT['animals']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is at least three']""]","[""SELECT['animals']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is lower than three']""]"
NLVR2_dev_dev-748-1-0,If the left and right image contains the same number of deer.,"[""SELECT['left image']"", ""PROJECT['deer in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""SELECT['right image']"", ""PROJECT['deer in #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#3', 'is equal to #6']""]","[""SELECT['left image']"", ""PROJECT['deer of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""SELECT['right image']"", ""PROJECT['deer of #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#3', 'is equal to #6']""]"
NLVR2_dev_dev-749-0-0,"If an image includes no more than ten penguins, and none of them are facing the camera.","[""SELECT['images']"", ""PROJECT['penguins in #REF', '#1']"", ""FILTER['#2', 'that are facing the camera']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is at most ten']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to zero']""]","[""SELECT['penguins']"", ""FILTER['#1', 'that are facing the camera']"", ""SELECT['images']"", ""GROUP['count', '#2', '#3']"", ""COMPARATIVE['#3', '#4', 'is at most ten']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to zero']""]"
NLVR2_dev_dev-75-0-0,"If each image shows one non-standing schnauzer in an indoor setting, and at least one of the dogs pictured looks up at the camera from a sitting pose.","[""SELECT['schnauzers']"", ""FILTER['#1', 'that are non-standing']"", ""SELECT['setting']"", ""FILTER['#3', 'that is indoor']"", ""FILTER['#2', 'in #4']"", ""SELECT['images']"", ""GROUP['count', '#5', '#6']"", ""COMPARATIVE['#6', '#7', 'is equal to one']"", ""AGGREGATE['count', '#6']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to #10']"", ""FILTER['#1', 'that looks up at the camera from a sitting pose']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#7', '#13']""]","[""SELECT['images']"", ""PROJECT['schnauzers in #REF', '#1']"", ""FILTER['#2', 'that are non-standing']"", ""PROJECT['setting of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is indoor']"", ""GROUP['count', '#5', '#1']"", ""COMPARATIVE['#1', '#6', 'is equal to one']"", ""AGGREGATE['count', '#7']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#8', 'is equal to #9']"", ""SELECT['dogs']"", ""FILTER['#11', 'that looks up at the camera from a sitting pose']"", ""BOOLEAN['#12', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#10', '#13']""."
NLVR2_dev_dev-750-3-0,"If each image contains a single chow dog, and one image features a chow dog standing in profile with its body turned leftward and its head turned more forward.","[""SELECT['images']"", ""PROJECT['chow dogs in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is equal to one']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#5', 'is equal to #6']"", ""FILTER['#1','standing in profile']"", ""PROJECT['body of #REF', '#8']"", ""COMPARATIVE['#8', '#9', 'is turned leftward']"", ""PROJECT['head of #REF', '#10']"", ""COMPARATIVE['#10', '#11', 'is turned more forward']"", ""AGGREGATE['count', '#12']"", ""BOOLEAN['#13', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#7', '#14']""]","[""SELECT['images']"", ""PROJECT['chow dogs in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is equal to one']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#5', 'is equal to #6']"", ""FILTER['#1', 'that is standing in profile']"", ""PROJECT['body of #REF', '#8']"", ""COMPARATIVE['#8', '#9', 'is turned leftward']"", ""PROJECT['head of #REF', '#10']"", ""COMPARATIVE['#10', '#11', 'is turned more forward']"", ""INTERSECTION['#10', '#12', '#13']"", ""BOOLEAN['#14', 'is in one image']""]"
NLVR2_dev_dev-751-1-0,If one of the saxophones is outdoors.,"[""SELECT['saxophones']"", ""FILTER['#1', 'that are outdoors']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']""]","[""SELECT['saxophones']"", ""FILTER['#1', 'that are outdoor']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']""]"
NLVR2_dev_dev-751-3-1,If right image shows one opened black case containing a saxophone.,"[""SELECT['right image']"", ""PROJECT['case in #REF', '#1']"", ""FILTER['#2', 'that is opened']"", ""FILTER['#3', 'that is black']"", ""PROJECT['saxophone in #REF', '#1']"", ""FILTER['#5', 'containing #4']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']""]","[""SELECT['the right image']"", ""PROJECT['cases in #REF', '#1']"", ""FILTER['#2', 'that are opened']"", ""FILTER['#3', 'that are black']"", ""PROJECT['saxophones in #REF', '#1']"", ""FILTER['#5', 'containing #4']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']""."
NLVR2_dev_dev-752-0-0,If there are at least two dogs in the right image.,"[""SELECT['right image']"", ""PROJECT['dogs in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least two']""]","[""SELECT['the right image']"", ""PROJECT['dogs of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least two']""]"
NLVR2_dev_dev-752-1-1,"If each image contains one spaniel outdoors in the grass, and the lefthand dog stands in profile turned leftward.","[""SELECT['images']"", ""PROJECT['spaniels in #REF', '#1']"", ""FILTER['#2', 'that are outdoors']"", ""PROJECT['the grass in #REF', '#1']"", ""FILTER['#3', 'in #4']"", ""GROUP['count', '#5', '#1']"", ""COMPARATIVE['#1', '#6', 'is equal to one']"", ""AGGREGATE['count', '#7']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#8', 'is equal to #9']"", ""SELECT['dog']"", ""FILTER['#11', 'that is lefthand']"", ""FILTER['#12', 'that stands in profile']"", ""BOOLEAN['#13', 'is turned leftward']"", ""BOOLEAN['logical_and', 'true', '#10', '#14']""]","[""SELECT['images']"", ""PROJECT['spaniels in #REF', '#1']"", ""FILTER['#2', 'that are outdoors']"", ""PROJECT['grass in #REF', '#1']"", ""FILTER['#3', 'that are in #4']"", ""GROUP['count', '#5', '#1']"", ""COMPARATIVE['#1', '#6', 'is equal to one']"", ""AGGREGATE['count', '#7']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#8', 'is equal to #9']"", ""SELECT['dog']"", ""FILTER['#10', 'that is lefthand']"", ""FILTER['#11', 'that stands in profile']"", ""BOOLEAN['#12', 'is turned leftward']"", ""BOOLEAN['logical_and', 'true', '#13', '#14']""]"
NLVR2_dev_dev-75-3-1,If at least one dog is laying on his stomach.,"[""SELECT['dogs']"", ""PROJECT['stomach of #REF', '#1']"", ""FILTER['#1', 'laying on #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']""]","[""SELECT['dog']"", ""PROJECT['stomach of #REF', '#1']"", ""FILTER['#1', 'that is laying on #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']""]"
NLVR2_dev_dev-753-1-0,If both tents have front doors.,"[""SELECT['tents']"", ""SELECT['front doors']"", ""FILTER['#1', 'that have #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']""]","[""SELECT['tents']"", ""PROJECT['front doors of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']""]"
NLVR2_dev_dev-753-2-1,If both yurts have decks and one of them has an open door.,"[""SELECT['yurts']"", ""PROJECT['decks of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are open']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']"", ""BOOLEAN['#5', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#6', '#7']""]","[""SELECT['yurts']"", ""PROJECT['decks of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are open']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#5', 'is equal to two']"", ""BOOLEAN['#6', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#7', '#8']""]"
NLVR2_dev_dev-754-1-0,If the left image shows one white golf ball just to the right of a hole without a pole in it.,"[""SELECT['left image']"", ""PROJECT['golf ball in #REF', '#1']"", ""FILTER['#2', 'that is white']"", ""PROJECT['hole in #REF', '#1']"", ""PROJECT['pole in #REF', '#1']"", ""FILTER['#4', 'without #5']"", ""FILTER['#3', 'to the right of #6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to one']""]","[""SELECT['left image']"", ""PROJECT['golf ball in #REF', '#1']"", ""FILTER['#2', 'that is white']"", ""PROJECT['hole in #REF', '#1']"", ""PROJECT['pole in #REF', '#1']"", ""FILTER['#4', 'without #5']"", ""FILTER['#3', 'that is just to the right of #6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to one']""."
NLVR2_dev_dev-754-1-1,If one golf ball with a brand on the side is sitting on the green just to the right of the hole.,"[""SELECT['golf ball']"", ""PROJECT['side of #REF', '#1']"", ""SELECT['brand']"", ""COMPARATIVE['#1', '#2', 'has #3 on']"", ""SELECT['green']"", ""SELECT['hole']"", ""FILTER['#5', 'to the right of #6']"", ""FILTER['#4','sitting on #7']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to one']""]","[""SELECT['golf ball']"", ""SELECT['brand']"", ""PROJECT['side of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'has #3 on']"", ""SELECT['green']"", ""SELECT['hole']"", ""FILTER['#5', 'to the right of #6']"", ""FILTER['#4','sitting on #7']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to one']""]"
NLVR2_dev_dev-755-2-0,"If exactly one image shows a ferret eating pet food from a bowl, and the bowl is at least a couple inches tall.","[""SELECT['ferret']"", ""SELECT['pet food']"", ""SELECT['bowl']"", ""FILTER['#2', 'that is at least two inches tall']"", ""FILTER['#3', 'that is eating #4']"", ""BOOLEAN['#5', 'is in one image']""]","[""SELECT['ferret']"", ""SELECT['pet food']"", ""SELECT['bowl']"", ""FILTER['#3', 'that is at least two inches tall']"", ""FILTER['#2', 'that is eating #4']"", ""BOOLEAN['#5', 'is in one image']""]"
NLVR2_dev_dev-755-3-1,If the right image contains exactly one ferret eating food out of a small dish.,"[""SELECT['right image']"", ""PROJECT['ferret in #REF', '#1']"", ""PROJECT['food in #REF', '#1']"", ""PROJECT['dish in #REF', '#1']"", ""FILTER['#4', 'that is small']"", ""FILTER['#2', 'that is eating #5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']""]","[""SELECT['the right image']"", ""PROJECT['ferrets in #REF', '#1']"", ""PROJECT['food in #REF', '#1']"", ""PROJECT['dish in #REF', '#1']"", ""FILTER['#4', 'that is small']"", ""FILTER['#3', 'out of #5']"", ""FILTER['#2', 'eating #6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to two']""]"
NLVR2_dev_dev-756-0-1,If both pictures show an identical amout of lipstick swatches on an arm.,"[""SELECT['amout of lipstick swatches']"", ""SELECT['arm']"", ""FILTER['#1', 'on #2']"", ""BOOLEAN['#3', 'are identical']""]","[""SELECT['aout of lipstick swatches']"", ""SELECT['arm']"", ""FILTER['#1', 'that is on #2']"", ""FILTER['#3', 'that is identical']"", ""BOOLEAN['#4', 'is in both pictures']""]"
NLVR2_dev_dev-757-0-0,"If in one image, the tv is to the right of two paintings hung vertically.","[""SELECT['tv']"", ""SELECT['paintings']"", ""FILTER['#2', 'that are hung vertically']"", ""FILTER['#1', 'to the right of #3']"", ""PROJECT['images of #REF', '#4']"", ""GROUP['count', '#4', '#5']"", ""COMPARATIVE['#5', '#6', 'is equal to two']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to one']""]","[""SELECT['tv']"", ""SELECT['paintings']"", ""FILTER['#2', 'that are hung vertically']"", ""FILTER['#1', 'that are to the right of #3']"", ""SELECT['images']"", ""GROUP['count', '#4', '#5']"", ""COMPARATIVE['#5', '#6', 'is equal to two']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to one']""]"
NLVR2_dev_dev-757-2-1,If there are shelves attached to the wall.,"[""SELECT['shelves']"", ""SELECT['the wall']"", ""BOOLEAN['#1', 'are attached to #2']""]","[""SELECT['shelves']"", ""SELECT['wall']"", ""FILTER['#1', 'attached to #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']""]"
NLVR2_dev_dev-758-1-1,If at least one cup sits among several spread out coffee beans.,"[""SELECT['cups']"", ""SELECT['coffee beans']"", ""FILTER['#2', 'that are spread out']"", ""FILTER['#1', 'that sit among #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']""]","[""SELECT['cups']"", ""SELECT['coffee beans']"", ""FILTER['#2', 'that are spread out']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is at least one']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least two']""]"
NLVR2_dev_dev-758-3-0,"If one cup has the lid on, and at least one cup does not have a lid on.","[""SELECT['cups']"", ""PROJECT['lid of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is on']"", ""DISCARD['#1', '#3']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']"", ""BOOLEAN['#6', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#7', '#8']""]","[""SELECT['cups']"", ""PROJECT['lid of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is on']"", ""DISCARD['#1', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#8', '#9']""]"
NLVR2_dev_dev-759-2-1,If there are two otters floating in the water next to each other on their backs,"[""SELECT['otters']"", ""SELECT['the water']"", ""FILTER['#1', 'floating in #2']"", ""PROJECT['backs of #REF', '#3']"", ""FILTER['#3', 'on #4']"", ""FILTER['#5', 'that are next to each other']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to two']""]","[""SELECT['otters']"", ""SELECT['water']"", ""FILTER['#1', 'floating in #2']"", ""PROJECT['backs of #REF', '#3']"", ""FILTER['#3', 'on #4']"", ""FILTER['#5', 'that are next to each other']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to two']""]"
NLVR2_dev_dev-759-3-0,"If in one image, we have two otters, and in the other image, there is a seal.","[""SELECT['one image']"", ""PROJECT['otters in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']"", ""SELECT['other image']"", ""PROJECT['seal in #REF', '#5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#4', '#8']""]","[""SELECT['one image']"", ""PROJECT['otters in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']"", ""SELECT['other image']"", ""PROJECT['seal in #REF', '#5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#4', '#8']""]"
NLVR2_dev_dev-76-0-0,If a pair of lips showing the color of the lipstick.,"[""SELECT['pair of lips']"", ""SELECT['lipstick']"", ""PROJECT['color of #REF', '#2']"", ""COMPARATIVE['#1', '#3', 'is showing']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']""]","[""SELECT['pair of lips']"", ""SELECT['lipstick']"", ""PROJECT['color of #REF', '#2']"", ""BOOLEAN['#1', 'is showing #3']""]"
NLVR2_dev_dev-760-0-1,If the birds in the image on the left are in the water.,"[""SELECT['left image']"", ""PROJECT['birds in #REF', '#1']"", ""PROJECT['water in #REF', '#1']"", ""BOOLEAN['#2', 'are in #3']""]","[""SELECT['the left image']"", ""PROJECT['birds in #REF', '#1']"", ""PROJECT['the water in #REF', '#1']"", ""BOOLEAN['#2', 'are in #3']""]"
NLVR2_dev_dev-760-3-0,If exactly three white ducks are standing in a row on dry ground.,"[""SELECT['ducks']"", ""FILTER['#1', 'that are white']"", ""FILTER['#2','standing in a row']"", ""SELECT['ground']"", ""FILTER['#4', 'that is dry']"", ""FILTER['#3', 'on #5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to three']""]","[""SELECT['ducks']"", ""FILTER['#1', 'that are white']"", ""FILTER['#2','standing in a row']"", ""SELECT['ground']"", ""FILTER['#4', 'that is dry']"", ""FILTER['#3', 'that are on #5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to three']""]"
NLVR2_dev_dev-761-2-0,If one of the images has 4 women wearing white bikinis standing next to the water.,"[""SELECT['women']"", ""SELECT['bikinis']"", ""FILTER['#2', 'that are white']"", ""FILTER['#1', 'wearing #3']"", ""SELECT['water']"", ""FILTER['#4','standing next to #5']"", ""PROJECT['images of #REF', '#6']"", ""GROUP['count', '#6', '#7']"", ""COMPARATIVE['#7', '#8', 'is equal to 4']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to one']""]","[""SELECT['women']"", ""SELECT['bikinis']"", ""FILTER['#2', 'that are white']"", ""FILTER['#1', 'wearing #3']"", ""SELECT['water']"", ""FILTER['#4','standing next to #5']"", ""SELECT['images']"", ""GROUP['count', '#6', '#7']"", ""COMPARATIVE['#7', '#8', 'is equal to 4']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to one']""]"
NLVR2_dev_dev-761-2-1,If four girls are posing side-by-side in white bikinis in the right image.,"[""SELECT['the right image']"", ""PROJECT['girls in #REF', '#1']"", ""FILTER['#2', 'that are posing side-by-side']"", ""PROJECT['bikinis in #REF', '#1']"", ""FILTER['#4', 'that are white']"", ""FILTER['#3', 'in #5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to four']""]","[""SELECT['girls']"", ""FILTER['#1', 'that are posing side-by-side']"", ""SELECT['bikinis']"", ""FILTER['#3', 'that are white']"", ""FILTER['#2', 'in #4']"", ""BOOLEAN['#5', 'are in the right image']""]"
NLVR2_dev_dev-762-0-0,If the image on the right has a single ferret with a dark furred chest and paler hind-quarters.,"[""SELECT['right image']"", ""PROJECT['ferret in #REF', '#1']"", ""PROJECT['chest of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is dark furred']"", ""PROJECT['hind-quarters of #REF', '#4']"", ""COMPARATIVE['#4', '#5', 'are paler']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']""]","[""SELECT['the image on the right']"", ""PROJECT['ferrets in #REF', '#1']"", ""PROJECT['chest of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is dark furred']"", ""PROJECT['hind-quarters of #REF', '#4']"", ""COMPARATIVE['#4', '#5', 'are paler']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']""."
NLVR2_dev_dev-762-2-1,If there are at least five ferrets.,"[""SELECT['ferrets']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is at least five']""]","[""SELECT['ferrets']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to five']""]"
NLVR2_dev_dev-76-3-1,If there is at least one set of lightly shaded lips.,"[""SELECT['sets of lips']"", ""FILTER['#1', 'that are lightly shaded']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least one']""]","[""SELECT['lips']"", ""FILTER['#1', 'that are lightly shaded']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least one']""]"
NLVR2_dev_dev-763-3-0,If at least one of the houses has exactly two chimney stacks.,"[""SELECT['houses']"", ""PROJECT['chimney stacks of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is equal to two']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']""]","[""SELECT['houses']"", ""SELECT['chimney stacks']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is equal to two']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']""]"
NLVR2_dev_dev-764-0-1,If one of the images features three puppies sitting inside of a bin.,"[""SELECT['puppies']"", ""SELECT['bin']"", ""FILTER['#1','sitting inside of #2']"", ""SELECT['images']"", ""GROUP['count', '#3', '#4']"", ""COMPARATIVE['#4', '#5', 'is equal to three']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']""]","[""SELECT['puppies']"", ""SELECT['bin']"", ""FILTER['#1', 'that are sitting inside of #2']"", ""SELECT['images']"", ""GROUP['count', '#3', '#4']"", ""COMPARATIVE['#4', '#5', 'is equal to three']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']""]"
NLVR2_dev_dev-765-1-0,"If all images show red-orange dogs with non-blue eyes, upright heads and empty mouths, and one of the dogs pictured wears a collar.","[""SELECT['dogs']"", ""FILTER['#1', 'that are red-orange']"", ""PROJECT['eyes of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'are non-blue']"", ""PROJECT['heads of #REF', '#4']"", ""COMPARATIVE['#4', '#5', 'are upright']"", ""PROJECT['mouths of #REF', '#6']"", ""COMPARATIVE['#6', '#7', 'are empty']"", ""SELECT['images']"", ""GROUP['count', '#8', '#9']"", ""COMPARATIVE['#9', '#10', 'is equal to one']"", ""AGGREGATE['count', '#11']"", ""AGGREGATE['count', '#12']"", ""BOOLEAN['#13', 'is equal to #14']"", ""BOOLEAN['logical_and', 'true', '#7', '#15']""]","[""SELECT['dogs']"", ""FILTER['#1', 'that are red-orange']"", ""PROJECT['eyes of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'are non-blue']"", ""PROJECT['heads of #REF', '#4']"", ""COMPARATIVE['#4', '#5', 'are upright']"", ""PROJECT['mouths of #REF', '#6']"", ""COMPARATIVE['#6', '#7', 'are empty']"", ""SELECT['images']"", ""GROUP['count', '#8', '#9']"", ""COMPARATIVE['#9', '#10', 'is equal to one']"", ""AGGREGATE['count', '#11']"", ""AGGREGATE['count', '#12']"", ""BOOLEAN['#13', 'is equal to #14']"", ""BOOLEAN['logical_and', 'true', '#7', '#14']""]"
NLVR2_dev_dev-766-0-0,If each image contains only one colorful keyboard.,"[""SELECT['keyboard']"", ""FILTER['#1', 'that is colorful']"", ""SELECT['images']"", ""GROUP['count', '#2', '#3']"", ""COMPARATIVE['#3', '#4', 'is equal to one']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to #7']""]","[""SELECT['keyboard']"", ""FILTER['#1', 'that is colorful']"", ""PROJECT['images of #REF', '#2']"", ""GROUP['count', '#2', '#3']"", ""COMPARATIVE['#3', '#4', 'is equal to one']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to #7']""]"
NLVR2_dev_dev-766-2-1,If there is a red and black keyboard sitting on a table.,"[""SELECT['keyboard']"", ""FILTER['#1', 'that is red and black']"", ""SELECT['table']"", ""BOOLEAN['#2', 'is sitting on #3']""]","[""SELECT['keyboard']"", ""FILTER['#1', 'that is red and black']"", ""SELECT['table']"", ""BOOLEAN['#2', 'is sitting on #4']""]"
NLVR2_dev_dev-767-3-1,If there is one bottle with a lid and one bottle without a lid.,"[""SELECT['bottles']"", ""SELECT['lid']"", ""FILTER['#1', 'with #2']"", ""DISCARD['#1', '#3']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']"", ""BOOLEAN['#6', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#7', '#8']""]","[""SELECT['bottles']"", ""FILTER['#1', 'with a lid']"", ""DISCARD['#1', '#2']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']"", ""BOOLEAN['#5', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#6', '#7']""]"
NLVR2_dev_dev-768-1-0,"If each image shows a single crab shell-side-up on the beach, and the right image features a crab mostly covered in sand.","[""SELECT['crab']"", ""FILTER['#1', 'that is shell-side-up']"", ""SELECT['the beach']"", ""FILTER['#2', 'on #3']"", ""PROJECT['images of #REF', '#4']"", ""GROUP['count', '#4', '#5']"", ""COMPARATIVE['#5', '#6', 'is equal to one']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to #9']"", ""SELECT['the right image']"", ""PROJECT['crab in #REF', '#10']"", ""PROJECT['sand in #REF', '#10']"", ""FILTER['#11', 'that is mostly covered in #12']"", ""AGGREGATE['count', '#13']"", ""BOOLEAN['#14', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#7', '#15']""]","[""SELECT['crab']"", ""FILTER['#1', 'that is shell-side-up']"", ""SELECT['the beach']"", ""FILTER['#2', 'on #3']"", ""PROJECT['images of #REF', '#4']"", ""GROUP['count', '#4', '#5']"", ""COMPARATIVE['#5', '#6', 'is equal to one']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to #9']"", ""SELECT['the right image']"", ""PROJECT['crab in #REF', '#11']"", ""PROJECT['sand in #REF', '#11']"", ""FILTER['#12', 'that is mostly covered in #13']"", ""AGGREGATE['count', '#14']"", ""BOOLEAN['#15', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#7', '#16']""]"
NLVR2_dev_dev-768-3-1,"If in the image to the right, the crab is at least half buried under sand.","[""SELECT['right image']"", ""PROJECT['crab in #REF', '#1']"", ""PROJECT['sand in #REF', '#1']"", ""FILTER['#2', 'that is half buried under #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']""]","[""SELECT['crab']"", ""SELECT['sand']"", ""FILTER['#1', 'that is half buried under #2']"", ""BOOLEAN['#3', 'is in the image to the right']""]"
NLVR2_dev_dev-769-1-0,If blue is a prominent color in at least one of the images.,"[""SELECT['blue']"", ""FILTER['#1', 'that is prominent color']"", ""BOOLEAN['#2', 'is in at least one of the images']""]","[""SELECT['blue']"", ""FILTER['#1', 'that is a prominent color']"", ""BOOLEAN['#2', 'is in at least one of the images']."
NLVR2_dev_dev-769-3-1,"If the right image shows one young male graduate in a black robe in the foreground, and he wears a black cap with black tassel on the left.","[""SELECT['graduate']"", ""FILTER['#1', 'that is young']"", ""FILTER['#2', 'that is male']"", ""SELECT['robe']"", ""FILTER['#4', 'that is black']"", ""FILTER['#3', 'in #5']"", ""FILTER['#6', 'in the foreground']"", ""BOOLEAN['#7', 'is in the right image']"", ""SELECT['cap']"", ""FILTER['#8', 'that is black']"", ""SELECT['tassel']"", ""FILTER['#9', 'that is black']"", ""FILTER['#10', 'with #11 on the left']"", ""BOOLEAN['#12', 'wears #13']"", ""BOOLEAN['logical_and', 'true', '#7', '#14']""]","[""SELECT['graduate']"", ""FILTER['#1', 'that is young']"", ""FILTER['#2', 'that is male']"", ""SELECT['robe']"", ""FILTER['#4', 'that is black']"", ""FILTER['#3', 'in #5']"", ""FILTER['#6', 'in the foreground']"", ""BOOLEAN['#7', 'is in the right image']"", ""SELECT['cap']"", ""FILTER['#8', 'that is black']"", ""SELECT['tassel']"", ""FILTER['#9', 'that is black']"", ""FILTER['#10', 'with #11']"", ""BOOLEAN['#12', 'wears #13']"", ""BOOLEAN['logical_and', 'true', '#7', '#13']""]"
NLVR2_dev_dev-770-2-1,If in at least one image there are three chimney on top of the house.,"[""SELECT['chimneys']"", ""SELECT['house']"", ""FILTER['#1', 'on top of #2']"", ""PROJECT['images of #REF', '#3']"", ""GROUP['count', '#3', '#4']"", ""COMPARATIVE['#4', '#5', 'is equal to three']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least one']""]","[""SELECT['chimneys']"", ""SELECT['house']"", ""FILTER['#1', 'that are on top of #2']"", ""PROJECT['images of #REF', '#3']"", ""GROUP['count', '#3', '#4']"", ""COMPARATIVE['#4', '#5', 'is equal to three']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least one']“]"
NLVR2_dev_dev-77-1-0,If each image shows one forward-facing panda holding foliage to its mouth and munching it.,"[""SELECT['panda']"", ""FILTER['#1', 'that is forward-facing']"", ""PROJECT['mouth of #REF', '#2']"", ""SELECT['foliage']"", ""COMPARATIVE['#2', '#3', 'is holding #4 to']"", ""FILTER['#5', 'that is munching #6']"", ""SELECT['images']"", ""GROUP['count', '#7', '#8']"", ""COMPARATIVE['#8', '#9', 'is equal to one']"", ""AGGREGATE['count', '#8']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is equal to #12']""]","[""SELECT['panda']"", ""FILTER['#1', 'that is forward-facing']"", ""PROJECT['mouth of #REF', '#2']"", ""SELECT['foliage']"", ""COMPARATIVE['#2', '#3', 'is holding #4 to #3']"", ""FILTER['#5', 'that is munching #6']"", ""SELECT['images']"", ""GROUP['count', '#7', '#8']"", ""COMPARATIVE['#8', '#9', 'is equal to one']"", ""AGGREGATE['count', '#8']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is equal to #12']""]"
NLVR2_dev_dev-771-0-0,If two laptops are facing the same direction.,"[""SELECT['laptops']"", ""PROJECT['direction facing of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is the same']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']""]","[""SELECT['laptops']"", ""PROJECT['direction that #REF are facing', '#1']"", ""COMPARATIVE['#1', '#2', 'are the same']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']""]"
NLVR2_dev_dev-771-0-1,If the laptop in the left image is angled to the right,"[""SELECT['left image']"", ""PROJECT['laptop in #REF', '#1']"", ""BOOLEAN['#2', 'is angled to the right']""]","[""SELECT['the left image']"", ""PROJECT['laptops in #REF', '#1']"", ""BOOLEAN['#2', 'is angled to the right']""]"
NLVR2_dev_dev-77-1-1,If a panda shown with something besides bamboo to eat.,"[""SELECT['panda']"", ""SELECT['bamboo']"", ""DISCARD['#1', '#2']"", ""BOOLEAN['#3', 'is shown with something to eat']""]","[""SELECT['panda']"", ""SELECT['bamboo']"", ""SELECT['something']"", ""DISCARD['#3', '#1']"", ""FILTER['#2', 'to eat #4']"", ""BOOLEAN['#1', 'is with #5']""]"
NLVR2_dev_dev-772-2-0,"If in one image, mashed potatoes with brown gravy are in a white bowl with a visible spoon.","[""SELECT['mashed potatoes']"", ""SELECT['gravy']"", ""FILTER['#2', 'that is brown']"", ""FILTER['#1', 'with #3']"", ""SELECT['bowl']"", ""FILTER['#5', 'that is white']"", ""SELECT['spoon']"", ""FILTER['#6', 'with #7']"", ""FILTER['#4', 'in #8']"", ""BOOLEAN['#9', 'is in one image']""]","[""SELECT['mashed potatoes']"", ""SELECT['gravy']"", ""FILTER['#2', 'that is brown']"", ""FILTER['#1', 'with #3']"", ""SELECT['bowl']"", ""FILTER['#5', 'that is white']"", ""SELECT['spoon']"", ""FILTER['#7', 'with #6']"", ""FILTER['#4', 'in #8']"", ""BOOLEAN['#9', 'is in one image']""]"
NLVR2_dev_dev-772-2-1,If one of the images shows mashed potatoes with brown gravy.,"[""SELECT['mashed potatoes']"", ""SELECT['gravy']"", ""FILTER['#2', 'that is brown']"", ""FILTER['#1', 'with #3']"", ""BOOLEAN['#4', 'is in one of the images']""]","[""SELECT['mashed potatoes']"", ""SELECT['gravy']"", ""FILTER['#2', 'that is brown']"", ""BOOLEAN['#1', 'are in one of the images']""]"
NLVR2_dev_dev-773-2-0,If three towels are hanging on the wall above a white tub.,"[""SELECT['towels']"", ""SELECT['wall']"", ""SELECT['tub']"", ""FILTER['#3', 'that is white']"", ""FILTER['#2', 'above #4']"", ""FILTER['#1', 'hanging on #5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to three']""]","[""SELECT['towels']"", ""SELECT['wall']"", ""SELECT['tub']"", ""FILTER['#3', 'that is white']"", ""FILTER['#2', 'that is above #4']"", ""FILTER['#1', 'hanging on #5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to three']""]"
NLVR2_dev_dev-773-2-1,If there are towels with stars on them.,"[""SELECT['towels']"", ""SELECT['stars']"", ""BOOLEAN['#1', 'are with #2 on them']""]","[""SELECT['towels']"", ""SELECT['stars']"", ""FILTER['#1', 'that have #2 on']"", ""BOOLEAN['#3', 'are there any #REF']""]"
NLVR2_dev_dev-774-2-0,If one of the images contains one or more sheep.,"[""SELECT['sheep']"", ""SELECT['images']"", ""GROUP['count', '#1', '#2']"", ""COMPARATIVE['#2', '#3', 'is at least one']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']""]","[""SELECT['sheep']"", ""SELECT['images']"", ""GROUP['count', '#1', '#2']"", ""COMPARATIVE['#2', '#3', 'is at least two']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']""]"
NLVR2_dev_dev-774-2-1,If one image features a black-and-white dog in a green field near at least one black-faced sheep that is in motion.,"[""SELECT['dog']"", ""FILTER['#1', 'that is black-and-white']"", ""SELECT['field']"", ""FILTER['#3', 'that is green']"", ""FILTER['#2', 'in #4']"", ""SELECT['sheep']"", ""FILTER['#6', 'that are black-faced']"", ""FILTER['#7', 'that are in motion']"", ""FILTER['#8', 'near #5']"", ""BOOLEAN['#9', 'is in one image']""]","[""SELECT['dog']"", ""FILTER['#1', 'that is black-and-white']"", ""SELECT['field']"", ""FILTER['#3', 'that is green']"", ""FILTER['#2', 'in #4']"", ""SELECT['sheep']"", ""FILTER['#6', 'that are black-faced']"", ""FILTER['#7', 'that are in motion']"", ""FILTER['#8', 'near #5']"", ""PROJECT['images of #REF', '#9']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is at least one']""]"
NLVR2_dev_dev-775-2-0,"If at least one white dog is present with sheep in one image, and the other image features multiple white puppies near a wire fence.","[""SELECT['one image']"", ""PROJECT['dogs in #REF', '#1']"", ""FILTER['#2', 'that are white']"", ""PROJECT['sheep in #REF', '#1']"", ""FILTER['#3', 'present with #4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least one']"", ""SELECT['the other image']"", ""PROJECT['puppies in #REF', '#8']"", ""FILTER['#9', 'that are white']"", ""PROJECT['fence in #REF', '#8']"", ""FILTER['#10', 'that is wire']"", ""FILTER['#11', 'that are near #12']"", ""AGGREGATE['count', '#13']"", ""BOOLEAN['#14', 'is at least two']"", ""BOOLEAN['logical_and', 'true', '#7', '#15']""]","[""SELECT['one image']"", ""PROJECT['dogs in #REF', '#1']"", ""FILTER['#2', 'that are white']"", ""PROJECT['sheep in #REF', '#1']"", ""FILTER['#3', 'present with #4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least one']"", ""SELECT['other image']"", ""PROJECT['puppies in #REF', '#8']"", ""FILTER['#9', 'that are white']"", ""PROJECT['fence in #REF', '#8']"", ""FILTER['#10', 'that is wire']"", ""FILTER['#11', 'that are near #12']"", ""AGGREGATE['count', '#13']"", ""BOOLEAN['#14', 'is higher than two']"", ""BOOLEAN['logical_and', 'true', '#7', '#15']""]"
NLVR2_dev_dev-775-3-1,"If in one of the images, there are both dogs and sheep.","[""SELECT['dogs']"", ""SELECT['sheep']"", ""SELECT['images']"", ""GROUP['count', '#1', '#3']"", ""COMPARATIVE['#3', '#4', 'is at least two']"", ""GROUP['count', '#2', '#5']"", ""COMPARATIVE['#5', '#6', 'is at least two']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to one']""]","[""SELECT['dogs']"", ""SELECT['sheep']"", ""SELECT['images']"", ""GROUP['count', '#1', '#3']"", ""COMPARATIVE['#3', '#4', 'is at least two']"", ""GROUP['count', '#2', '#5']"", ""COMPARATIVE['#5', '#6', 'is at least one']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to one']""]"
NLVR2_dev_dev-776-1-0,If an image shows a single golf ball with a green number on it.,"[""SELECT['golf ball']"", ""SELECT['number']"", ""FILTER['#2', 'that is green']"", ""FILTER['#1', 'with #3 on it']"", ""PROJECT['images of #REF', '#4']"", ""GROUP['count', '#4', '#5']"", ""COMPARATIVE['#5', '#6', 'is equal to one']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to one']""]","[""SELECT['golf balls']"", ""SELECT['number']"", ""FILTER['#2', 'that is green']"", ""FILTER['#1', 'with #3 on it']"", ""PROJECT['images of #REF', '#4']"", ""GROUP['count', '#4', '#5']"", ""COMPARATIVE['#5', '#6', 'is equal to one']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to one']""]"
NLVR2_dev_dev-776-2-1,If the left and right image contains no more than five white golf balls.,"[""SELECT['left image']"", ""PROJECT['golf balls in #REF', '#1']"", ""FILTER['#2', 'that are white']"", ""AGGREGATE['count', '#3']"", ""SELECT['right image']"", ""PROJECT['golf balls in #REF', '#5']"", ""FILTER['#6', 'that are white']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#4', 'is at most five']"", ""BOOLEAN['#8', 'is at most five']"", ""BOOLEAN['logical_and', 'true', '#9', '#10']""]","[""SELECT['left image']"", ""PROJECT['golf balls in #REF', '#1']"", ""FILTER['#2', 'that are white']"", ""AGGREGATE['count', '#3']"", ""SELECT['right image']"", ""PROJECT['golf balls in #REF', '#5']"", ""FILTER['#6', 'that are white']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is at most five']"", ""BOOLEAN['#9', 'is at most five']"", ""BOOLEAN['logical_and', 'true', '#4', '#10']""]"
NLVR2_dev_dev-777-0-0,If the bus in the left image and the bus in the right image are facing in different directions.,"[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['bus in #REF', '#1']"", ""PROJECT['bus in #REF', '#2']"", ""PROJECT['direction facing of #REF', '#3']"", ""PROJECT['direction facing of #REF', '#4']"", ""BOOLEAN['#5', 'is different than #6']""]","[""SELECT['left image']"", ""SELECT['right image']"", ""PROJECT['bus in #REF', '#1']"", ""PROJECT['bus in #REF', '#2']"", ""PROJECT['direction facing of #REF', '#3']"", ""PROJECT['direction facing of #REF', '#4']"", ""BOOLEAN['#5', 'is different than #6']""]"
NLVR2_dev_dev-778-0-0,"If each set shows two dogs that are similar in age, coloring, style, and look.","[""SELECT['sets']"", ""PROJECT['dogs in #REF', '#1']"", ""PROJECT['ages of #REF', '#2']"", ""PROJECT['colorings of #REF', '#2']"", ""PROJECT['styles of #REF', '#2']"", ""PROJECT['looks of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'are similar']"", ""COMPARATIVE['#2', '#4', 'are similar']"", ""INTERSECTION['#2', '#5', '#6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to two']""]","[""SELECT['sets']"", ""PROJECT['dogs in #REF', '#1']"", ""PROJECT['ages of #REF', '#2']"", ""PROJECT['coloring of #REF', '#2']"", ""PROJECT['styles of #REF', '#2']"", ""PROJECT['looks of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'are similar']"", ""COMPARATIVE['#2', '#5', 'are similar']"", ""INTERSECTION['#2', '#6', '#7']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to two']""]"
NLVR2_dev_dev-778-3-1,"If one dog is facing forward, and the other looks to the side, and both dogs are tan with darker facial markings.","[""SELECT['dogs']"", ""FILTER['#1', 'that is facing forward']"", ""FILTER['#1', 'that looks to the side']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']"", ""BOOLEAN['#5', 'is equal to one']"", ""PROJECT['face markings of #REF', '#6']"", ""COMPARATIVE['#6', '#7', 'are darker than #8']"", ""BOOLEAN['logical_and', 'true', '#7', '#9']""]","[""SELECT['dogs']"", ""FILTER['#1', 'that is facing forward']"", ""FILTER['#1', 'that looks to the side']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']"", ""BOOLEAN['#5', 'is equal to one']"", ""PROJECT['facial markings of #REF', '#6']"", ""COMPARATIVE['#6', '#7', 'are darker than #8']"", ""BOOLEAN['logical_and', 'true', '#7', '#9']""]"
NLVR2_dev_dev-779-0-0,If one of the images shows a chimpanzee in a tree.,"[""SELECT['chimpanzee']"", ""SELECT['tree']"", ""FILTER['#1', 'in #2']"", ""BOOLEAN['#3', 'is in one of the images']""]","[""SELECT['chimpanzee']"", ""SELECT['tree']"", ""FILTER['#1', 'in #2']"", ""BOOLEAN['#3', 'is in one image']""]"
NLVR2_dev_dev-78-0-1,If the right image contains two ferrets.,"[""SELECT['right image']"", ""PROJECT['ferrets in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']""]","[""SELECT['right image']"", ""PROJECT['ferrets of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']""]"
NLVR2_dev_dev-780-2-0,If people are getting their hair cut.,"[""SELECT['people']"", ""PROJECT['hair of #REF', '#1']"", ""BOOLEAN['#2', 'are getting cut']""]","[""SELECT['people']"", ""PROJECT['hair of #REF', '#1']"", ""BOOLEAN['#1', 'is getting cut']""]"
NLVR2_dev_dev-781-3-0,If acorns are with something orange.,"[""SELECT['acorns']"", ""SELECT['something orange']"", ""BOOLEAN['#1', 'are with #2']""]","[""SELECT['corns']"", ""SELECT['something orange']"", ""BOOLEAN['#1', 'are with #2']""]"
NLVR2_dev_dev-78-2-0,If in one image a pair of ferrets can be seen eating out of a food bowl.,"[""SELECT['ferrets']"", ""SELECT['food bowl']"", ""FILTER['#1', 'eating out of #2']"", ""PROJECT['images of #REF', '#3']"", ""GROUP['count', '#3', '#4']"", ""COMPARATIVE['#4', '#5', 'is equal to two']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']""]","[""SELECT['ferrets']"", ""SELECT['food bowl']"", ""FILTER['#1', 'eating out of #2']"", ""PROJECT['images of #REF', '#3']"", ""GROUP['count', '#3', '#4']"", ""COMPARATIVE['#4', '#5', 'is equal to two']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least one']""]"
NLVR2_dev_dev-782-1-1,If the left image contains a barbell on its side to the left of a barbell standing upright on one end.,"[""SELECT['barbell']"", ""PROJECT['side of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is on #3']"", ""PROJECT['end of #REF', '#1']"", ""FILTER['#4', 'that is standing upright']"", ""FILTER['#5', 'on #6']"", ""BOOLEAN['#3', 'is to the left of #7']""]","[""SELECT['barbell']"", ""PROJECT['side of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is on #3']"", ""PROJECT['end of #REF', '#1']"", ""FILTER['#4', 'that is standing upright']"", ""FILTER['#5', 'on #6']"", ""BOOLEAN['#3', 'is in the left image']""]"
NLVR2_dev_dev-782-2-0,"If in one of the images, one of the dumbbells is sitting upright, while another one is laying on its side next to it.","[""SELECT['dumbbells']"", ""FILTER['#1', 'that is sitting upright']"", ""PROJECT['side of #REF', '#2']"", ""FILTER['#1', 'laying on #3']"", ""FILTER['#4', 'next to #2']"", ""BOOLEAN['#5', 'is in one image']""]","[""SELECT['dumbbells']"", ""FILTER['#1', 'that is sitting upright']"", ""PROJECT['side of #REF', '#2']"", ""FILTER['#1', 'laying on #3']"", ""FILTER['#4', 'next to #2']"", ""BOOLEAN['#5', 'is in one of the images']""]"
NLVR2_dev_dev-783-0-1,If the screen in the image on the right is turned at an angle.,"[""SELECT['right image']"", ""PROJECT['screen in #REF', '#1']"", ""BOOLEAN['#2', 'is turned at an angle']""]","[""SELECT['right image']"", ""PROJECT['screen of #REF', '#1']"", ""BOOLEAN['#2', 'is turned at an angle']""]"
NLVR2_dev_dev-783-3-0,If an image features one camera-facing flat monitor depicting a hot-air balloon scene on the screen.,"[""SELECT['monitor']"", ""FILTER['#1', 'that is flat']"", ""FILTER['#2', 'that is camera-facing']"", ""SELECT['hot-air balloon scene']"", ""PROJECT['screen of #REF', '#3']"", ""FILTER['#4', 'on #5']"", ""FILTER['#3', 'depicting #6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to one']""]","[""SELECT['monitor']"", ""FILTER['#1', 'that is flat']"", ""FILTER['#2', 'that is camera-facing']"", ""SELECT['hot-air balloon scene']"", ""PROJECT['screen of #REF', '#4']"", ""FILTER['#3', 'on #5']"", ""FILTER['#6', 'depicting #7']"", ""BOOLEAN['#8', 'is in an image']""]"
NLVR2_dev_dev-784-1-0,If in one of the images there is one person in a book store holding  a book.,"[""SELECT['person']"", ""SELECT['book store']"", ""FILTER['#1', 'in #2']"", ""SELECT['book']"", ""FILTER['#3', 'holding #4']"", ""PROJECT['images of #REF', '#5']"", ""GROUP['count', '#5', '#6']"", ""COMPARATIVE['#6', '#7', 'is equal to one']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to one']""]","[""SELECT['person']"", ""SELECT['book store']"", ""FILTER['#1', 'in #2']"", ""SELECT['book']"", ""FILTER['#3', 'holding #4']"", ""PROJECT['images of #REF', '#5']"", ""GROUP['count', '#2', '#6']"", ""COMPARATIVE['#6', '#7', 'is equal to one']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to one']""]"
NLVR2_dev_dev-785-1-0,"If in each image, there is a reflection of the instrument.","[""SELECT['instrument']"", ""PROJECT['reflection of #REF', '#1']"", ""PROJECT['images of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""SELECT['images']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to #4']""]","[""SELECT['instrument']"", ""PROJECT['reflection of #REF', '#1']"", ""PROJECT['images of #REF', '#2']"", ""SELECT['images']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to #6']""]"
NLVR2_dev_dev-786-1-0,If the left image has a dog laying in the grass,"[""SELECT['dog']"", ""SELECT['grass']"", ""FILTER['#1', 'laying in #2']"", ""BOOLEAN['#3', 'is in the left image']""]","[""SELECT['left image']"", ""PROJECT['dog in #REF', '#1']"", ""PROJECT['grass in #REF', '#1']"", ""FILTER['#2', 'laying in #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']""]"
NLVR2_dev_dev-786-2-1,If there is only 1 dog standing on all fours and looking left.,"[""SELECT['dogs']"", ""FILTER['#1','standing on all fours']"", ""FILTER['#2', 'looking left']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]","[""SELECT['dogs']"", ""FILTER['#1', 'that are standing on all fours']"", ""FILTER['#2', 'looking left']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]"
NLVR2_dev_dev-787-1-0,If the left and right image contains the same number of stingrays hovering over the sand facing different directions.,"[""SELECT['stingrays']"", ""SELECT['sand']"", ""FILTER['#1', 'that are hovering over #2']"", ""PROJECT['direction that #REF are facing', '#3']"", ""COMPARATIVE['#3', '#4', 'is different']"", ""SELECT['left image']"", ""SELECT['right image']"", ""FILTER['#1', 'that are in #5']"", ""FILTER['#1', 'that are in #6']"", ""AGGREGATE['count', '#7']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to #10']""]","[""SELECT['stingrays']"", ""SELECT['the sand']"", ""FILTER['#1', 'that are hovering over #2']"", ""PROJECT['direction that #REF are facing', '#3']"", ""COMPARATIVE['#3', '#4', 'is different']"", ""SELECT['left image']"", ""SELECT['right image']"", ""FILTER['#1', 'that are in #5']"", ""FILTER['#1', 'that are in #6']"", ""AGGREGATE['count', '#7']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to #10']""."
NLVR2_dev_dev-787-2-1,If each image shows a stingray close to the bottom of the ocean but not with sand on top of it.,"[""SELECT['stingray']"", ""SELECT['ocean']"", ""PROJECT['bottom of #REF', '#2']"", ""FILTER['#1', 'close to #3']"", ""SELECT['sand']"", ""FILTER['#4', 'on top of #3']"", ""DISCARD['#4', '#5']"", ""PROJECT['images of #REF', '#6']"", ""SELECT['images']"", ""AGGREGATE['count', '#7']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to #10']""]","[""SELECT['stingrays']"", ""SELECT['ocean']"", ""PROJECT['bottom of #REF', '#2']"", ""FILTER['#1', 'close to #3']"", ""SELECT['sand']"", ""FILTER['#5', 'on top of #3']"", ""DISCARD['#5', '#6']"", ""PROJECT['images of #REF', '#7']"", ""SELECT['images']"", ""AGGREGATE['count', '#8']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to #11']""]"
NLVR2_dev_dev-788-2-0,If there are two pizza with all of it's slices and one is on a metal tray.,"[""SELECT['pizzas']"", ""PROJECT['slices of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is equal to one']"", ""SELECT['tray']"", ""FILTER['#5', 'that is metal']"", ""FILTER['#4', 'on #6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to two']"", ""BOOLEAN['#9', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#10', '#11']""]","[""SELECT['pizzas']"", ""PROJECT['slices of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is equal to one']"", ""SELECT['tray']"", ""FILTER['#5', 'that is metal']"", ""FILTER['#4', 'on #6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to two']"", ""BOOLEAN['#9', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#10', '#11']""]"
NLVR2_dev_dev-788-3-1,If the pizza in the image on the right sits on a red and white colored material.,"[""SELECT['right image']"", ""PROJECT['pizza in #REF', '#1']"", ""PROJECT['material in #REF', '#1']"", ""FILTER['#3', 'that is red and white colored']"", ""BOOLEAN['#2','sits on #4']""]","[""SELECT['right image']"", ""PROJECT['pizza in #REF', '#1']"", ""PROJECT['material of #REF', '#2']"", ""BOOLEAN['#3', 'is red and white colored']""]"
NLVR2_dev_dev-789-1-1,If a llama in the right image is carrying a pack.,"[""SELECT['right image']"", ""PROJECT['llama in #REF', '#1']"", ""PROJECT['pack in #REF', '#1']"", ""BOOLEAN['#2', 'is carrying #3']""]","[""SELECT['right image']"", ""PROJECT['llama of #REF', '#1']"", ""SELECT['pack']"", ""BOOLEAN['#2', 'is carrying #3']""]"
NLVR2_dev_dev-79-0-1,If there are two dogs who are two different colors standing next to each other.,"[""SELECT['dogs']"", ""PROJECT['colors of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are different']"", ""FILTER['#3', 'that are standing next to each other']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to two']""]","[""SELECT['dogs']"", ""PROJECT['color of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are different']"", ""FILTER['#3', 'that are standing next to each other']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to two']""]"
NLVR2_dev_dev-790-1-0,If in at least one image there is a single piece of a flute on top of music paper.,"[""SELECT['piece of flute']"", ""SELECT['music paper']"", ""FILTER['#1', 'on top of #2']"", ""PROJECT['images of #REF', '#3']"", ""GROUP['count', '#3', '#4']"", ""COMPARATIVE['#4', '#5', 'is equal to one']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least one']""]","[""SELECT['piece of flute']"", ""SELECT['music paper']"", ""FILTER['#1', 'on top of #2']"", ""BOOLEAN['#3', 'is in at least one image']""]"
NLVR2_dev_dev-790-3-1,"If the right image contains a single gold-colored flute displayed on sheet music, and the left image features at least two parallel metal flutes displayed on a flat surface.","[""SELECT['the right image']"", ""PROJECT['flutes in #REF', '#1']"", ""FILTER['#2', 'that are gold-colored']"", ""PROJECT['sheet music in #REF', '#1']"", ""FILTER['#3', 'displayed on #4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']"", ""SELECT['the left image']"", ""PROJECT['flutes in #REF', '#8']"", ""FILTER['#9', 'that are parallel']"", ""FILTER['#10', 'that are metal']"", ""PROJECT['surface in #REF', '#8']"", ""FILTER['#11', 'that is flat']"", ""FILTER['#12', 'displayed on #13']"", ""AGGREGATE['count', '#14']"", ""BOOLEAN['#15', 'is at least two']"", ""BOOLEAN['logical_and', 'true', '#7', '#16']""]","[""SELECT['the right image']"", ""PROJECT['flutes in #REF', '#1']"", ""FILTER['#2', 'that are gold-colored']"", ""PROJECT['sheet music in #REF', '#1']"", ""FILTER['#3', 'displayed on #4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']"", ""SELECT['the left image']"", ""PROJECT['flutes in #REF', '#8']"", ""FILTER['#9', 'that are parallel']"", ""FILTER['#10', 'that are metal']"", ""PROJECT['surface in #REF', '#8']"", ""FILTER['#11', 'that is flat']"", ""FILTER['#12', 'displayed on #13']"", ""AGGREGATE['count', '#14']"", ""BOOLEAN['#16', 'is at least two']"", ""BOOLEAN['logical_and', 'true', '#7', '#17']""]"
NLVR2_dev_dev-79-1-0,If all the dogs are wearing collars.,"[""SELECT['dogs']"", ""SELECT['collars']"", ""FILTER['#1', 'wearing #2']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to #5']""]","[""SELECT['dogs']"", ""SELECT['collars']"", ""FILTER['#1', 'that are wearing #2']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#5', 'is equal to #4']""]"
NLVR2_dev_dev-791-2-0,If there is at least one jellyfish heading in a downward direction.,"[""SELECT['jellyfish']"", ""FILTER['#1', 'that are heading in a downward direction']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least one']""]","[""SELECT['jellyfish']"", ""FILTER['#1', 'that are headed in a downward direction']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least one']""]"
NLVR2_dev_dev-791-3-1,If at least one of the jellyfish is upside down in at least one of the images.,"[""SELECT['images']"", ""PROJECT['jellyfish in #REF', '#1']"", ""FILTER['#2', 'that are upside down']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is at least one']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least one']""]","[""SELECT['jellyfish']"", ""FILTER['#1', 'that is upside down']"", ""SELECT['images']"", ""GROUP['count', '#2', '#3']"", ""COMPARATIVE['#3', '#4', 'is at least one']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least one']""]"
NLVR2_dev_dev-792-0-1,If both beakers are the same size.,"[""SELECT['beakers']"", ""PROJECT['sizes of #REF', '#1']"", ""BOOLEAN['#2', 'are the same']""]","[""SELECT['beakers']"", ""PROJECT['size of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are the same']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']""]"
NLVR2_dev_dev-792-2-0,If each image shows an empty beaker with a four-sided shape printed on its front side.,"[""SELECT['beaker']"", ""FILTER['#1', 'that is empty']"", ""PROJECT['front side of #REF', '#2']"", ""SELECT['shape']"", ""FILTER['#4', 'that is four-sided']"", ""COMPARATIVE['#2', '#3', 'has #5 printed']"", ""PROJECT['images of #REF', '#6']"", ""SELECT['images']"", ""AGGREGATE['count', '#7']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to #10']""]","[""SELECT['beaker']"", ""FILTER['#1', 'that is empty']"", ""PROJECT['front side of #REF', '#2']"", ""SELECT['shape']"", ""FILTER['#4', 'that is four-sided']"", ""COMPARATIVE['#2', '#3', 'has #5 printed']"", ""PROJECT['images of #REF', '#6']"", ""AGGREGATE['count', '#7']"", ""SELECT['images']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to #10']""]"
NLVR2_dev_dev-793-0-0,"If there are 2, thinly feathered, brown headed birds facing right.","[""SELECT['birds']"", ""FILTER['#1', 'that are thinly feathered']"", ""FILTER['#2', 'that are brown headed']"", ""FILTER['#3', 'that are facing right']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to two']""]","[""SELECT['birds']"", ""FILTER['#1', 'that are thinly feathered']"", ""FILTER['#2', 'that are brown headed']"", ""FILTER['#3', 'that are facing right']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to 2']""]"
NLVR2_dev_dev-794-1-1,If there is one dog standing in each image.,"[""SELECT['dogs']"", ""FILTER['#1', 'that are standing']"", ""SELECT['images']"", ""GROUP['count', '#2', '#3']"", ""COMPARATIVE['#3', '#4', 'is equal to one']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to #7']""]","[""SELECT['dog']"", ""FILTER['#1', 'that is standing']"", ""SELECT['images']"", ""GROUP['count', '#2', '#3']"", ""COMPARATIVE['#3', '#4', 'is equal to one']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to #7']""]"
NLVR2_dev_dev-794-3-0,"If all dogs have tall upright ears and brindle fur coloring, and no dogs wear harnesses or leashes.","[""SELECT['dogs']"", ""PROJECT['ears of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are upright']"", ""COMPARATIVE['#1', '#3', 'are tall']"", ""INTERSECTION['#1', '#4', '#5']"", ""AGGREGATE['count', '#1']"", ""PROJECT['coloring of #REF', '#6']"", ""COMPARATIVE['#6', '#7', 'is brindle fur']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#8', 'is equal to #9']"", ""SELECT['harnesses']"", ""SELECT['leashes']"", ""FILTER['#11', 'that wear']"", ""AGGREGATE['count', '#12']"", ""BOOLEAN['#13', 'is equal to zero']"", ""BOOLEAN['logical_and', 'true', '#10', '#14']""]","[""SELECT['dogs']"", ""PROJECT['ears of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are upright']"", ""COMPARATIVE['#1', '#3', 'are tall']"", ""INTERSECTION['#1', '#4', '#5']"", ""AGGREGATE['count', '#1']"", ""PROJECT['coloring of #REF', '#6']"", ""COMPARATIVE['#6', '#7', 'is brindle fur']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#8', 'is equal to #9']"", ""SELECT['harnesses']"", ""SELECT['leashes']"", ""FILTER['#10', 'that wear']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is equal to zero']"", ""BOOLEAN['logical_and', 'true', '#13', '#14']""]"
NLVR2_dev_dev-795-0-1,If a gazebo with a thatch roof is surrounded by a water feature,"[""SELECT['gazebo']"", ""PROJECT['roof of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is thatch']"", ""SELECT['water feature']"", ""BOOLEAN['#3', 'is surrounded by #4']""]","[""SELECT['gazebo']"", ""PROJECT['roof of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is thatch']"", ""SELECT['water feature']"", ""BOOLEAN['#4', 'is surrounded by #5']""]"
NLVR2_dev_dev-795-2-0,If the right image shows an open structure with a roof made of plant material on a platform within a manmade pool.,"[""SELECT['structure']"", ""FILTER['#1', 'that is open']"", ""PROJECT['roof of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is made of plant material']"", ""SELECT['platform']"", ""SELECT['pool']"", ""FILTER['#6', 'that is manmade']"", ""FILTER['#4', 'with #5']"", ""FILTER['#7', 'with #8']"", ""BOOLEAN['#9', 'is in the right image']""]","[""SELECT['structure']"", ""FILTER['#1', 'that is open']"", ""PROJECT['roof of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is made of plant material']"", ""SELECT['platform']"", ""SELECT['pool']"", ""FILTER['#5', 'that is manmade']"", ""FILTER['#4', 'with #6']"", ""FILTER['#7', 'with #8']"", ""BOOLEAN['#9', 'is in the right image']""]"
NLVR2_dev_dev-796-1-1,If there are exactly three hamsters.,"[""SELECT['hamsters']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to three']""]","[""SELECT['hamsters']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'equal to three']""]"
NLVR2_dev_dev-796-2-0,If there is a bowl sitting on wood shavings,"[""SELECT['bowl']"", ""SELECT['wood shavings']"", ""BOOLEAN['#1', 'is sitting on #2']""]","[""SELECT['bowl']"", ""SELECT['wood shavings']"", ""FILTER['#1','sitting on #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']""]"
NLVR2_dev_dev-797-3-0,"If the laptop display in the left image faces left, and the laptop display in the right image faces right.","[""SELECT['left image']"", ""PROJECT['laptop display in #REF', '#1']"", ""BOOLEAN['#2', 'faces left']"", ""SELECT['right image']"", ""PROJECT['laptop display in #REF', '#4']"", ""BOOLEAN['#5', 'faces right']"", ""BOOLEAN['logical_and', 'true', '#3', '#6']""]","[""SELECT['left image']"", ""PROJECT['laptop display in #REF', '#1']"", ""BOOLEAN['#2', 'faces left']"", ""SELECT['right image']"", ""PROJECT['laptop display in #REF', '#5']"", ""BOOLEAN['#6', 'faces right']"", ""BOOLEAN['logical_and', 'true', '#3', '#4']""]"
NLVR2_dev_dev-798-0-1,If there are two babies with balloons at or on their head.,"[""SELECT['babies']"", ""PROJECT['head of #REF', '#1']"", ""SELECT['balloons']"", ""COMPARATIVE['#1', '#2', 'are at #3']"", ""COMPARATIVE['#1', '#2', 'are on #3']"", ""INTERSECTION['#1', '#4', '#5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to two']""]","[""SELECT['babies']"", ""PROJECT['head of #REF', '#1']"", ""SELECT['balloons']"", ""COMPARATIVE['#1', '#2', 'are at #3']"", ""COMPARATIVE['#1', '#2', 'are on #3']"", ""UNION['#4', '#5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to two']""]"
NLVR2_dev_dev-799-0-0,If the right image includes at least one foreground seal with its head off the ground and its mouth open wide.,"[""SELECT['right image']"", ""PROJECT['seal in #REF', '#1']"", ""FILTER['#2', 'that is foreground']"", ""PROJECT['head of #REF', '#3']"", ""PROJECT['ground in #REF', '#1']"", ""COMPARATIVE['#3', '#5', 'is off #4']"", ""PROJECT['mouth of #REF', '#6']"", ""COMPARATIVE['#6', '#7', 'is open wide']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is at least one']""]","[""SELECT['right image']"", ""PROJECT['seals in #REF', '#1']"", ""FILTER['#2', 'that are foreground']"", ""PROJECT['head of #REF', '#3']"", ""PROJECT['ground in #REF', '#1']"", ""COMPARATIVE['#3', '#5', 'is off #4']"", ""PROJECT['mouth of #REF', '#6']"", ""COMPARATIVE['#6', '#7', 'is open wide']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is at least one']""]"
NLVR2_dev_dev-799-2-1,If there are at least 5 seelions sunning on the rocks surrounded by water.,"[""SELECT['seelions']"", ""SELECT['rocks']"", ""SELECT['water']"", ""FILTER['#2','surrounded by #3']"", ""FILTER['#1','sunning on #4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least 5']""]","[""SELECT['seallions']"", ""SELECT['rocks']"", ""SELECT['water']"", ""FILTER['#2','surrounded by #3']"", ""FILTER['#1', 'that are sunning on #4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least 5']."
NLVR2_dev_dev-800-0-1,If an image shows a sled driver in a yellow race vest with a team of no more than three dogs.,"[""SELECT['sled driver']"", ""SELECT['race vest']"", ""FILTER['#2', 'that is yellow']"", ""FILTER['#1', 'in #3']"", ""SELECT['team']"", ""PROJECT['dogs of #REF', '#5']"", ""GROUP['count', '#6', '#5']"", ""COMPARATIVE['#5', '#7', 'is at most three']"", ""BOOLEAN['#8', 'is in an image']""]","[""SELECT['sled driver']"", ""SELECT['race vest']"", ""FILTER['#2', 'that is yellow']"", ""FILTER['#1', 'in #3']"", ""SELECT['team of dogs']"", ""GROUP['count', '#5', '#6']"", ""COMPARATIVE['#6', '#7', 'is at most three']"", ""BOOLEAN['#8', 'is in an image']""]"
NLVR2_dev_dev-80-0-1,If there is a hamster holding food in it's hands,"[""SELECT['hamster']"", ""PROJECT['hands of #REF', '#1']"", ""SELECT['food']"", ""COMPARATIVE['#1', '#2', 'are holding #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']""]","[""SELECT['hamster']"", ""PROJECT['hands of #REF', '#1']"", ""SELECT['food']"", ""COMPARATIVE['#1', '#2', 'are holding #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']""]"
NLVR2_dev_dev-800-1-0,If the sled driver in the image on the left is standing while the driver in the image on the right can't be seen.,"[""SELECT['left image']"", ""PROJECT['sled driver in #REF', '#1']"", ""BOOLEAN['#2', 'is standing']"", ""SELECT['right image']"", ""PROJECT['driver in #REF', '#4']"", ""BOOLEAN['#5', 'can be seen']"", ""BOOLEAN['logical_and', 'true', '#3', '#6']""]","[""SELECT['left image']"", ""PROJECT['sled driver in #REF', '#1']"", ""BOOLEAN['#2', 'is standing']"", ""SELECT['right image']"", ""PROJECT['driver in #REF', '#4']"", ""BOOLEAN['#5', 'can not be seen']"", ""BOOLEAN['logical_and', 'true', '#3', '#6']""]"
NLVR2_dev_dev-801-1-1,If there are 3 dogs at the beach in the image pair,"[""SELECT['dogs']"", ""SELECT['beach']"", ""FILTER['#1', 'at #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to 3']""]","[""SELECT['dogs']"", ""SELECT['beach']"", ""FILTER['#1', 'that are at #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to 3']""]"
NLVR2_dev_dev-801-2-0,If there are 3 dogs on the beach.,"[""SELECT['dogs']"", ""SELECT['beach']"", ""FILTER['#1', 'on #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to 3']""]","[""SELECT['dogs']"", ""SELECT['beach']"", ""FILTER['#1', 'that are on #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to 3']""]"
NLVR2_dev_dev-802-1-1,If at least one bed is a four poster bed.,"[""SELECT['beds']"", ""FILTER['#1', 'that are four poster beds']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least one']""]","[""SELECT['beds']"", ""FILTER['#1', 'that are four poster beds']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least one']""."
NLVR2_dev_dev-802-2-0,If the left and right image contains the same number of back wall canopies.,"[""SELECT['left image']"", ""PROJECT['back wall canopies in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""SELECT['right image']"", ""PROJECT['back wall canopies in #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#3', 'is equal to #6']""]","[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['back wall canopies in #REF', '#1']"", ""PROJECT['back wall canopies in #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to #6']""]"
NLVR2_dev_dev-80-3-0,If one hamster is holding a round food item in its paws.,"[""SELECT['hamsters']"", ""PROJECT['paws of #REF', '#1']"", ""SELECT['food item']"", ""FILTER['#3', 'that is round']"", ""COMPARATIVE['#1', '#2', 'are holding #4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']""]","[""SELECT['hamsters']"", ""PROJECT['paws of #REF', '#1']"", ""SELECT['food item']"", ""FILTER['#3', 'that is round']"", ""COMPARATIVE['#1', '#2', 'are holding #4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is one']""]"
NLVR2_dev_dev-803-1-0,"If there are exactly two containers on the right that are white or filled with a white liquid, and there are two or more containers on the left that are clear or filled with clear liquid.","[""SELECT['right containers']"", ""SELECT['liquid']"", ""FILTER['#2', 'that is white']"", ""FILTER['#2', 'that is filled with #3']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to two']"", ""SELECT['left container']"", ""FILTER['#8', 'that are clear']"", ""FILTER['#9', 'that are filled with #10']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is at least two']"", ""BOOLEAN['logical_and', 'true', '#7', '#13']""]","[""SELECT['right containers']"", ""SELECT['liquid']"", ""FILTER['#2', 'that is white']"", ""FILTER['#3', 'that is white']"", ""FILTER['#1', 'filled with #4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to two']"", ""SELECT['left container']"", ""FILTER['#8', 'that are clear']"", ""FILTER['#9', 'that are filled with #10']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is at least two']"", ""BOOLEAN['logical_and', 'true', '#7', '#13']""]"
NLVR2_dev_dev-803-2-1,"If one image includes one pump-top jar, which is clear and partly filled with a cream-colored substance.","[""SELECT['images']"", ""PROJECT['jars in #REF', '#1']"", ""FILTER['#2', 'that are pump-top']"", ""FILTER['#3', 'that are clear']"", ""PROJECT['substance in #REF', '#1']"", ""FILTER['#5', 'that is cream-colored']"", ""FILTER['#4', 'partly filled with #6']"", ""GROUP['count', '#7', '#1']"", ""COMPARATIVE['#1', '#8', 'is equal to one']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to one']""]","[""SELECT['images']"", ""PROJECT['jars in #REF', '#1']"", ""FILTER['#2', 'that are pump-top']"", ""FILTER['#3', 'that are clear']"", ""PROJECT['substance in #REF', '#1']"", ""FILTER['#5', 'that is cream-colored']"", ""FILTER['#4', 'partly filled with #6']"", ""GROUP['count', '#7', '#1']"", ""COMPARATIVE['#1', '#9', 'is equal to one']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is equal to one']""]"
NLVR2_dev_dev-804-0-0,If there are exactly two vending machines present.,"[""SELECT['vending machines']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to two']""]","[""SELECT['vending machines']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to two']""]-"
NLVR2_dev_dev-804-3-1,If there are two vending machines in the pair of images.,"[""SELECT['images']"", ""PROJECT['vending machines in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']""]","[""SELECT['images']"", ""PROJECT['vending machines in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""AGGREGATE['sum', '#3']"", ""BOOLEAN['#4', 'is equal to two']""]"
NLVR2_dev_dev-805-0-0,If one sax has a mouthpiece in.,"[""SELECT['saxes']"", ""SELECT['mouthpiece']"", ""FILTER['#1', 'that has #2 in']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]","[""SELECT['saxes']"", ""SELECT['mouthpiece']"", ""FILTER['#1', 'that has #2 in']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]."
NLVR2_dev_dev-805-0-1,If in at least one image there is a shiny silver saxophone with the large opening on the right side.,"[""SELECT['saxophone']"", ""FILTER['#1', 'that is shiny']"", ""FILTER['#2', 'that is silver']"", ""PROJECT['opening of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is large']"", ""FILTER['#5', 'on the right side']"", ""BOOLEAN['#6', 'is in at least one image']""]","[""SELECT['saxophone']"", ""FILTER['#1', 'that is shiny']"", ""FILTER['#2', 'that is silver']"", ""PROJECT['opening of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is large']"", ""PROJECT['right side of #REF', '#5']"", ""BOOLEAN['#6', 'is in at least one image']""]"
NLVR2_dev_dev-806-0-0,If the left image contains two parrots perched on a branch.,"[""SELECT['left image']"", ""PROJECT['parrots in #REF', '#1']"", ""PROJECT['branch in #REF', '#1']"", ""FILTER['#2', 'perched on #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to two']""]","[""SELECT['left image']"", ""PROJECT['parrots in #REF', '#1']"", ""PROJECT['branches in #REF', '#1']"", ""FILTER['#2', 'perched on #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to two']""]"
NLVR2_dev_dev-806-2-1,"If the left image shows two blue-and-yellow parrot-type birds perched side by side on a branch, and the right image shows a blue-and-yellow bird perched on green clustered seeds.","[""SELECT['left image']"", ""PROJECT['parrot-type birds in #REF', '#1']"", ""FILTER['#2', 'that are blue-and-yellow']"", ""PROJECT['branch in #REF', '#1']"", ""FILTER['#3', 'that are perched side by side on #4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to two']"", ""SELECT['right image']"", ""PROJECT['bird in #REF', '#8']"", ""FILTER['#9', 'that is blue-and-yellow']"", ""PROJECT['seeds in #REF', '#8']"", ""FILTER['#10', 'that are clustered']"", ""FILTER['#11', 'that are green']"", ""FILTER['#12', 'perched on #13']"", ""AGGREGATE['count', '#14']"", ""BOOLEAN['#15', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#7', '#16']""]","[""SELECT['left image']"", ""PROJECT['birds in #REF', '#1']"", ""FILTER['#2', 'that are blue-and-yellow']"", ""FILTER['#3', 'that are parrot-type']"", ""PROJECT['branch in #REF', '#1']"", ""FILTER['#4', 'perched side by side on #5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to two']"", ""SELECT['right image']"", ""PROJECT['bird in #REF', '#9']"", ""FILTER['#10', 'that is blue-and-yellow']"", ""PROJECT['seeds in #REF', '#9']"", ""FILTER['#11', 'that are green clustered']"", ""FILTER['#12', 'perched on #13']"", ""AGGREGATE['count', '#14']"", ""BOOLEAN['#15', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#7', '#16']""]"
NLVR2_dev_dev-807-1-0,If all the flutes are oriented vertically.,"[""SELECT['flutes']"", ""FILTER['#1', 'that are oriented vertically']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to #4']""]","[""SELECT['flutes']"", ""FILTER['#1', 'that are oriented vertically']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#4', 'is equal to #3']""]"
NLVR2_dev_dev-807-1-1,If at least one image shows a horizontal row of upright metal wind instruments.,"[""SELECT['wind instruments']"", ""FILTER['#1', 'that are metal']"", ""FILTER['#2', 'that are upright']"", ""FILTER['#3', 'in a horizontal row']"", ""BOOLEAN['#4', 'is in at least one image']""]","[""SELECT['wind instruments']"", ""FILTER['#1', 'that are metal']"", ""FILTER['#2', 'that are upright']"", ""FILTER['#3', 'that are in a horizontal row']"", ""BOOLEAN['#4', 'are in at least one image']""]"
NLVR2_dev_dev-808-3-1,If at least one bottle has a white cap.,"[""SELECT['bottles']"", ""PROJECT['cap of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is white']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']""]","[""SELECT['bottles']"", ""FILTER['#1', 'that has a white cap']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least one']""]"
NLVR2_dev_dev-809-2-0,If there are a total of 2 pelicans whose bodies are facing directly left.,"[""SELECT['pelicans']"", ""PROJECT['bodies of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are facing directly left']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']""]","[""SELECT['pelicans']"", ""PROJECT['bodies of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is facing directly left']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']""]"
NLVR2_dev_dev-809-3-1,If at least one bird is in the water.,"[""SELECT['birds']"", ""SELECT['water']"", ""FILTER['#1', 'in #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']""]","[""SELECT['birds']"", ""SELECT['water']"", ""FILTER['#1', 'that are in #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']""]"
NLVR2_dev_dev-810-0-0,"If each loungewear outfit is modeled by a real person, and no loungewear top has sleeves that reach below the elbow.","[""SELECT['loungewear outfits']"", ""SELECT['person']"", ""FILTER['#2', 'that is real']"", ""FILTER['#1','modeled by #3']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#5', 'is equal to #6']"", ""PROJECT['sleeves of #REF', '#1']"", ""PROJECT['elbow of #REF', '#8']"", ""COMPARATIVE['#8', '#9','reaches below #10']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is equal to zero']"", ""BOOLEAN['logical_and', 'true', '#7', '#13']""]","[""SELECT['loungewear outfits']"", ""SELECT['person']"", ""FILTER['#2', 'that is real']"", ""FILTER['#1','modeled by #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to #6']"", ""PROJECT['sleeves of #REF', '#1']"", ""PROJECT['elbow of #REF', '#1']"", ""COMPARATIVE['#1', '#8','reaches below #9']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is equal to zero']"", ""BOOLEAN['logical_and', 'true', '#7', '#12']""]"
NLVR2_dev_dev-811-3-0,"If there is only one lamp, and it is next to a sofa.","[""SELECT['lamp']"", ""SELECT['sofa']"", ""FILTER['#1', 'next to #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]","[""SELECT['lamp']"", ""SELECT['sofa']"", ""FILTER['#1', 'that is next to #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]"
NLVR2_dev_dev-811-3-1,If there are four window blinds.,"[""SELECT['window blinds']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to four']""]","[""SELECT['window blinds']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is four']""]"
NLVR2_dev_dev-81-2-0,"If an image contains exactly three safety pins, including two with white duck-shaped heads.","[""SELECT['safety pins']"", ""PROJECT['heads of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are white']"", ""COMPARATIVE['#1', '#2', 'are duck-shaped']"", ""INTERSECTION['#1', '#3', '#4']"", ""SELECT['images']"", ""GROUP['count', '#5', '#6']"", ""COMPARATIVE['#6', '#7', 'is equal to three']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to two']""]","[""SELECT['safety pins']"", ""PROJECT['heads of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are white']"", ""COMPARATIVE['#1', '#2', 'are duck-shaped']"", ""INTERSECTION['#1', '#3', '#4']"", ""SELECT['images']"", ""GROUP['count', '#5', '#6']"", ""COMPARATIVE['#6', '#7', 'is equal to two']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is at least one']""]"
NLVR2_dev_dev-81-2-1,If there are diaper pins in each image.,"[""SELECT['diaper pins']"", ""SELECT['images']"", ""GROUP['count', '#1', '#2']"", ""COMPARATIVE['#2', '#3', 'is at least one']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to #6']""]","[""SELECT['diaper pins']"", ""PROJECT['images of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""SELECT['images']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to #3']""]"
NLVR2_dev_dev-812-1-0,If there are two layered chocolate cakes in glass dishes.,"[""SELECT['cakes']"", ""FILTER['#1', 'that are chocolate']"", ""FILTER['#2', 'that are layered']"", ""SELECT['dishes']"", ""FILTER['#4', 'that are glass']"", ""FILTER['#3', 'in #5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to two']""]","[""SELECT['layered chocolate cakes']"", ""SELECT['glass dishes']"", ""FILTER['#1', 'in #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']""]"
NLVR2_dev_dev-812-3-1,If there is one trifle bowl that has a pedestal bottom to lift it up off the table.,"[""SELECT['trifle bowls']"", ""PROJECT['bottom of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is pedestal']"", ""SELECT['table']"", ""FILTER['#3', 'that lift #4 up off #5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']""]","[""SELECT['trifle bowls']"", ""PROJECT['base of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is pedestal']"", ""SELECT['table']"", ""FILTER['#3', 'that lift #4 up off #5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']""]"
NLVR2_dev_dev-813-0-1,If in at least one image we are inside looking at church columns of white and light brown.,"[""SELECT['church']"", ""PROJECT['columns of #REF', '#1']"", ""FILTER['#2', 'that are white']"", ""FILTER['#2', 'that are light brown']"", ""BOOLEAN['#3', 'are in at least one image']"", ""BOOLEAN['#4', 'are in at least one image']"", ""BOOLEAN['logical_and', 'true', '#5', '#6']""]","[""SELECT['church']"", ""PROJECT['columns of #REF', '#1']"", ""FILTER['#2', 'that are white']"", ""FILTER['#2', 'that are light brown']"", ""INTERSECTION['#2', '#3', '#4']"", ""FILTER['#5', 'that are inside']"", ""BOOLEAN['#6', 'is in at least one image']""]"
NLVR2_dev_dev-813-1-0,If the left image features ornate arch shapes above gray stone columns.,"[""SELECT['arch shapes']"", ""FILTER['#1', 'that are ornate']"", ""SELECT['columns']"", ""FILTER['#3', 'that are gray']"", ""FILTER['#4', 'that are stone']"", ""FILTER['#2', 'that are above #5']"", ""BOOLEAN['#6', 'are in the left image']""]","[""SELECT['arch shapes']"", ""FILTER['#1', 'that are ornate']"", ""SELECT['columns']"", ""FILTER['#3', 'that are gray']"", ""FILTER['#4', 'that are stone']"", ""FILTER['#2', 'that are above #5']"", ""BOOLEAN['#6', 'is in the left image']""]"
NLVR2_dev_dev-814-2-1,"If the interior of a yurt includes a lit stove with a vertical pipe, a burgundy entryway rug, and a fringed patterned purplish rug.","[""SELECT['yurt']"", ""PROJECT['interior of #REF', '#1']"", ""SELECT['stove']"", ""FILTER['#3', 'that is lit']"", ""SELECT['pipe']"", ""FILTER['#5', 'that is vertical']"", ""FILTER['#2', 'with #4']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least one']"", ""SELECT['entryway rug']"", ""FILTER['#9', 'that is burgundy']"", ""SELECT['purplish rug']"", ""FILTER['#10', 'that is fringed']"", ""FILTER['#11', 'that is patterned']"", ""BOOLEAN['#12', 'is in #13']"", ""BOOLEAN['logical_and', 'true', '#8', '#14']""]","[""SELECT['yurt']"", ""PROJECT['interior of #REF', '#1']"", ""SELECT['stove']"", ""FILTER['#3', 'that is lit']"", ""SELECT['pipe']"", ""FILTER['#5', 'that is vertical']"", ""FILTER['#2', 'with #4']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least one']"", ""SELECT['entranceway rug']"", ""FILTER['#9', 'that is burgundy']"", ""SELECT['purplish rug']"", ""FILTER['#10', 'that is fringed']"", ""FILTER['#11', 'that is patterned']"", ""BOOLEAN['#12', 'is in #13']"", ""BOOLEAN['logical_and', 'true', '#8', '#14']""]"
NLVR2_dev_dev-815-2-0,"If there are two doors with at least four glass panels, one is open and one is closed.","[""SELECT['doors']"", ""PROJECT['glass panels of #REF', '#1']"", ""FILTER['#2', 'that are open']"", ""FILTER['#2', 'that are closed']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to two']"", ""BOOLEAN['#6', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#7', '#8']""]","[""SELECT['doors']"", ""PROJECT['glass panels of #REF', '#1']"", ""FILTER['#2', 'that are open']"", ""FILTER['#2', 'that are closed']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']"", ""BOOLEAN['#6', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#7', '#8']""]"
NLVR2_dev_dev-815-3-1,If the doors in the right image are closes.,"[""SELECT['right image']"", ""PROJECT['doors in #REF', '#1']"", ""BOOLEAN['#2', 'are closes']""]","[""SELECT['right image']"", ""PROJECT['doors of #REF', '#1']"", ""BOOLEAN['#2', 'are closes']""]"
NLVR2_dev_dev-816-1-0,If the pizza in the image on the left sits uncut on a pan.,"[""SELECT['left image']"", ""PROJECT['pizza in #REF', '#1']"", ""SELECT['pan']"", ""BOOLEAN['#2','sits uncut on #3']""]","[""SELECT['the image on the left']"", ""PROJECT['pizza in #REF', '#1']"", ""BOOLEAN['#2','sits uncut on a pan']""]"
NLVR2_dev_dev-817-3-0,If an image shows small baboons sitting and looking on as a large baboon examines a backpack.,"[""SELECT['baboons']"", ""FILTER['#1', 'that are small']"", ""FILTER['#1', 'that is large']"", ""SELECT['backpack']"", ""FILTER['#3', 'that examines #4']"", ""FILTER['#2', 'that are sitting']"", ""FILTER['#5', 'that are looking on']"", ""INTERSECTION['#2', '#6', '#7']"", ""BOOLEAN['#8', 'is in an image']""]","[""SELECT['baboons']"", ""FILTER['#1', 'that are small']"", ""FILTER['#1', 'that is large']"", ""SELECT['backpack']"", ""FILTER['#2', 'that examines #4']"", ""FILTER['#5', 'that are sitting']"", ""FILTER['#6', 'that are looking on']"", ""BOOLEAN['#7', 'is in an image']""]"
NLVR2_dev_dev-817-3-1,If there is a baboon looking at a backpack with youngsters watching,"[""SELECT['baboon']"", ""SELECT['backpack']"", ""FILTER['#1', 'looking at #2']"", ""SELECT['youngers']"", ""BOOLEAN['#3', 'are watching #4']""]","[""SELECT['baboon']"", ""SELECT['backpack']"", ""SELECT['youngers']"", ""FILTER['#2', 'watching #3']"", ""BOOLEAN['#1', 'is looking at #4']""]"
NLVR2_dev_dev-818-0-1,If a image shows one gorilla posing with a bent elbow and hand resting on the left-side leg.,"[""SELECT['gorilla']"", ""FILTER['#1', 'that is posing']"", ""PROJECT['elbow of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is bent']"", ""PROJECT['hand of #REF', '#4']"", ""PROJECT['left-side leg of #REF', '#4']"", ""COMPARATIVE['#4', '#5', 'is resting on #6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to one']""]","[""SELECT['gorilla']"", ""FILTER['#1', 'that is posing']"", ""PROJECT['elbow of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is bent']"", ""PROJECT['hand of #REF', '#4']"", ""PROJECT['left-side leg of #REF', '#4']"", ""COMPARATIVE['#4', '#6', 'is resting on #5']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to one']""]"
NLVR2_dev_dev-818-3-0,If an image contains a gorilla laying on its back with its left hand on top of its head.,"[""SELECT['gorilla']"", ""PROJECT['back of #REF', '#1']"", ""FILTER['#1', 'laying on #2']"", ""PROJECT['left hand of #REF', '#3']"", ""PROJECT['head of #REF', '#3']"", ""COMPARATIVE['#3', '#5', 'is on top of #4']"", ""BOOLEAN['#6', 'is in an image']""]","[""SELECT['gorilla']"", ""PROJECT['back of #REF', '#1']"", ""FILTER['#1', 'that is laying on #2']"", ""PROJECT['left hand of #REF', '#3']"", ""PROJECT['head of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is on #5']"", ""BOOLEAN['#6', 'is in an image']""]"
NLVR2_dev_dev-819-1-0,If these dogs are all weaing pack equipment  to carry gear.,"[""SELECT['dogs']"", ""SELECT['pack equipment']"", ""SELECT['gear']"", ""FILTER['#1', 'that are weaing #2 to carry #3']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to #6']""]","[""SELECT['dogs']"", ""SELECT['pack equipment']"", ""SELECT['gear']"", ""FILTER['#1', 'that are weaing #2 to carry #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to #6']""]"
NLVR2_dev_dev-819-1-1,If the combined images include two adult dobermans with erect ears wearing packs that strap to their backs.,"[""SELECT['dobermans']"", ""FILTER['#1', 'that are adults']"", ""PROJECT['ears of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'are erect']"", ""SELECT['packs']"", ""PROJECT['backs of #REF', '#5']"", ""COMPARATIVE['#5', '#6','strap to #7']"", ""FILTER['#4', 'wearing #8']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to two']""]","[""SELECT['dobermans']"", ""FILTER['#1', 'that are adults']"", ""PROJECT['ears of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'are erect']"", ""SELECT['packs']"", ""PROJECT['backs of #REF', '#5']"", ""COMPARATIVE['#5', '#6','strap to #7']"", ""FILTER['#4', 'wearing #8']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to one']""]"
NLVR2_dev_dev-820-1-0,"If in each image, at least four pieces of fruit are placed side by side in a straight line.","[""SELECT['images']"", ""PROJECT['pieces of fruit in #REF', '#1']"", ""FILTER['#2', 'placed side by side in a straight line']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is at least four']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#6', 'is equal to #7']""]","[""SELECT['fruit']"", ""PROJECT['pieces of #REF', '#1']"", ""FILTER['#2', 'that are placed side by side in a straight line']"", ""SELECT['images']"", ""GROUP['count', '#3', '#4']"", ""COMPARATIVE['#4', '#5', 'is at least four']"", ""AGGREGATE['count', '#6']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#7', 'is equal to #8']""]"
NLVR2_dev_dev-820-1-1,If in one of the images the lemons still have the leaves attached.,"[""SELECT['lemons']"", ""SELECT['leaves']"", ""FILTER['#1', 'that still have #2 attached']"", ""BOOLEAN['#3', 'is in one of the images']""]","[""SELECT['lemons']"", ""SELECT['leaves']"", ""FILTER['#1', 'that still have #2 attached']"", ""BOOLEAN['#3', 'is in one image']""]"
NLVR2_dev_dev-82-1-0,If both images show multiple baboons at the edge of a paved surface.,"[""SELECT['baboons']"", ""SELECT['surface']"", ""FILTER['#2', 'that is paved']"", ""PROJECT['the edge of #REF', '#3']"", ""FILTER['#1', 'at #4']"", ""PROJECT['images of #REF', '#5']"", ""GROUP['count', '#5', '#6']"", ""COMPARATIVE['#6', '#7', 'is at least two']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to two']""]","[""SELECT['baboons']"", ""SELECT['surface']"", ""FILTER['#2', 'that is paved']"", ""PROJECT['edge of #REF', '#3']"", ""FILTER['#1', 'at #4']"", ""PROJECT['images of #REF', '#5']"", ""GROUP['count', '#5', '#6']"", ""COMPARATIVE['#6', '#7', 'is higher than two']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to two']""]"
NLVR2_dev_dev-821-0-1,If the head of a broccoli is visible in the right image.,"[""SELECT['broccoli']"", ""PROJECT['head of #REF', '#1']"", ""BOOLEAN['#2', 'is in the right image']""]","[""SELECT['right image']"", ""PROJECT['broccoli in #REF', '#1']"", ""PROJECT['head of #REF', '#2']"", ""BOOLEAN['#3', 'is visible']""]"
NLVR2_dev_dev-822-3-1,If the left and right image contains the same number of tented canopies.,"[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['canopies in #REF', '#1']"", ""PROJECT['canopies in #REF', '#2']"", ""FILTER['#3', 'that are tented']"", ""FILTER['#4', 'that are tented']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to #8']""]","[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['canopies in #REF', '#1']"", ""PROJECT['canopies in #REF', '#2']"", ""FILTER['#3', 'that are tented']"", ""FILTER['#4', 'that are tented']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to #8']”]"
NLVR2_dev_dev-823-1-0,"If each image includes one golden-haired spaniel, which has its tongue hanging out in one of the images.","[""SELECT['images']"", ""PROJECT['spaniels in #REF', '#1']"", ""FILTER['#2', 'that are golden-haired']"", ""PROJECT['tongue of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is hanging out']"", ""GROUP['count', '#5', '#1']"", ""COMPARATIVE['#1', '#6', 'is equal to one']"", ""AGGREGATE['count', '#7']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#8', 'is equal to #9']""]","[""SELECT['images']"", ""PROJECT['spaniels in #REF', '#1']"", ""FILTER['#2', 'that are golden-haired']"", ""PROJECT['tongue of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is hanging out']"", ""GROUP['count', '#5', '#1']"", ""COMPARATIVE['#1', '#6', 'is equal to one']"", ""AGGREGATE['count', '#7']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#9', 'is equal to #10']""]"
NLVR2_dev_dev-823-2-1,If the left image contains at least three dogs sitting in grass.,"[""SELECT['left image']"", ""PROJECT['dogs in #REF', '#1']"", ""PROJECT['grass in #REF', '#1']"", ""FILTER['#2','sitting in #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least three']""]","[""SELECT['left image']"", ""PROJECT['dogs in #REF', '#1']"", ""PROJECT['grass in #REF', '#1']"", ""FILTER['#2', 'that are sitting in #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least three']""]"
NLVR2_dev_dev-824-1-0,If there are no less than 3 lip glosses in the image pair,"[""SELECT['lip glosses']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is at least 3']""]","[""SELECT['images']"", ""PROJECT['lip glosses in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least 3']""]"
NLVR2_dev_dev-824-2-1,"If there is at least one image, there are at least two lip glosses one colored orange and one colored black.","[""SELECT['lip glosses']"", ""FILTER['#1', 'that are colored orange']"", ""FILTER['#1', 'that are colored black']"", ""SELECT['images']"", ""GROUP['count', '#2', '#4']"", ""COMPARATIVE['#4', '#5', 'is at least two']"", ""GROUP['count', '#3', '#6']"", ""COMPARATIVE['#6', '#7', 'is equal to one']"", ""COMPARATIVE['#6', '#8', 'is equal to one']"", ""INTERSECTION['#6', '#9', '#10']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is at least one']""]","[""SELECT['lip glosses']"", ""FILTER['#1', 'that are colored orange']"", ""FILTER['#1', 'that are colored black']"", ""SELECT['images']"", ""GROUP['count', '#2', '#3']"", ""COMPARATIVE['#3', '#4', 'is at least two']"", ""GROUP['count', '#5', '#6']"", ""COMPARATIVE['#6', '#7', 'is equal to one']"", ""COMPARATIVE['#6', '#8', 'is equal to one']"", ""INTERSECTION['#6', '#9', '#10']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is at least one']""]"
NLVR2_dev_dev-825-1-0,"If in one of the images, we see a test-tube shaped vase that has no flower.","[""SELECT['vase']"", ""FILTER['#1', 'that is test-tube shaped']"", ""SELECT['flowers']"", ""FILTER['#2', 'that has #3']"", ""DISCARD['#2', '#4']"", ""BOOLEAN['#5', 'is in one of the images']""]","[""SELECT['vase']"", ""FILTER['#1', 'that is test-tube shaped']"", ""SELECT['flowers']"", ""FILTER['#2', 'with #3']"", ""DISCARD['#2', '#4']"", ""BOOLEAN['#5', 'is in one of the images']""]"
NLVR2_dev_dev-825-2-1,If one of the images is of a single test tube that is empty.,"[""SELECT['test tube']"", ""FILTER['#1', 'that is empty']"", ""PROJECT['images of #REF', '#2']"", ""GROUP['count', '#2', '#3']"", ""COMPARATIVE['#3', '#4', 'is equal to one']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']""]","[""SELECT['images']"", ""PROJECT['test tubes in #REF', '#1']"", ""FILTER['#2', 'that are empty']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is equal to one']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']""]"
NLVR2_dev_dev-826-0-0,"If none of the phones have an antenna, and at least one of them is shown completely closed, with its keys hidden from view.","[""SELECT['phones']"", ""SELECT['antenna']"", ""FILTER['#1', 'that has #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to zero']"", ""FILTER['#1', 'that is completely closed']"", ""PROJECT['keys of #REF', '#6']"", ""COMPARATIVE['#6', '#7', 'are hidden from view']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#5', '#10']""]","[""SELECT['phones']"", ""SELECT['antenna']"", ""FILTER['#1', 'that has #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to zero']"", ""FILTER['#1', 'that is shown completely closed']"", ""PROJECT['keys of #REF', '#6']"", ""COMPARATIVE['#6', '#7', 'are hidden from view']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#5', '#10']""]"
NLVR2_dev_dev-826-2-1,If the left and right image contains the same number of open and closed phones.,"[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['phones in #REF', '#1']"", ""PROJECT['phones in #REF', '#2']"", ""FILTER['#3', 'that are open']"", ""FILTER['#4', 'that are closed']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to #8']"", ""BOOLEAN['#9', 'is equal to #6']"", ""BOOLEAN['logical_and', 'true', '#10', '#11']""]","[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['phones in #REF', '#1']"", ""PROJECT['phones in #REF', '#2']"", ""FILTER['#3', 'that are open']"", ""FILTER['#4', 'that are closed']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to #8']"", ""BOOLEAN['#8', 'is equal to #9']"", ""BOOLEAN['logical_and', 'true', '#10', '#11']""]"
NLVR2_dev_dev-827-3-0,If some of the cups are stacked on top of one another.,"[""SELECT['cups']"", ""FILTER['#1', 'that are stacked on top of one another']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least two']""]","[""SELECT['cups']"", ""FILTER['#1', 'that are stacked on top of one another']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is higher than one']""]"
NLVR2_dev_dev-828-0-1,If several people are sitting at a table in one of the images.,"[""SELECT['people']"", ""SELECT['table']"", ""FILTER['#1','sitting at #2']"", ""SELECT['images']"", ""GROUP['count', '#3', '#4']"", ""COMPARATIVE['#4', '#5', 'is higher than one']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']""]","[""SELECT['people']"", ""SELECT['table']"", ""FILTER['#1','sitting at #2']"", ""SELECT['images']"", ""GROUP['count', '#3', '#4']"", ""COMPARATIVE['#4', '#5', 'is at least two']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']""]"
NLVR2_dev_dev-828-3-0,If there are people dining at tables with white cloths and brown wooden chairs,"[""SELECT['people']"", ""SELECT['tables']"", ""SELECT['cloths']"", ""FILTER['#3', 'that are white']"", ""SELECT['chairs']"", ""FILTER['#5', 'that are brown']"", ""FILTER['#6', 'that are wooden']"", ""FILTER['#4', 'with #7']"", ""FILTER['#2', 'dining at #8']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is at least two']""]","[""SELECT['people']"", ""SELECT['tables']"", ""SELECT['cloths']"", ""FILTER['#3', 'that are white']"", ""SELECT['chairs']"", ""FILTER['#5', 'that are wooden']"", ""FILTER['#6', 'that are brown']"", ""FILTER['#4', 'that have #7']"", ""FILTER['#2', 'that are dining at #8']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is at least two']""]"
NLVR2_dev_dev-829-1-1,If one of the images has some vegetation/greenery visible.,"[""SELECT['vegetation/greenery']"", ""PROJECT['images of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least one']""]","[""SELECT['vegetation/greenery']"", ""FILTER['#1', 'that is visible']"", ""BOOLEAN['#2', 'is in one of the images']""]"
NLVR2_dev_dev-829-3-0,"If in the left image, there are two ferrets--one solid white and one mixed gray.","[""SELECT['the left image']"", ""PROJECT['ferrets in #REF', '#1']"", ""FILTER['#2', 'that are solid white']"", ""FILTER['#2', 'that are mixed gray']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to two']"", ""BOOLEAN['#6', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#7', '#8']""]","[""SELECT['the left image']"", ""PROJECT['ferrets in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']"", ""FILTER['#2', 'that is solid white']"", ""FILTER['#2', 'that is mixed gray']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#4', '#7']""]"
NLVR2_dev_dev-8-3-0,If a riderless horse carriage is sitting on the grass.,"[""SELECT['horse carriage']"", ""FILTER['#1', 'that is riderless']"", ""SELECT['grass']"", ""BOOLEAN['#2', 'is sitting on #3']""]","[""SELECT['horse carriage']"", ""PROJECT['riderless #REF', '#1']"", ""SELECT['grass']"", ""BOOLEAN['#2', 'is sitting on #3']""]"
NLVR2_dev_dev-83-0-1,If in at least one image there is a pair of antelopes.,"[""SELECT['antelopes']"", ""SELECT['images']"", ""GROUP['count', '#1', '#2']"", ""COMPARATIVE['#2', '#3', 'is equal to two']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']""]","[""SELECT['pair of antelopes']"", ""BOOLEAN['#1', 'is in at least one image']""]"
NLVR2_dev_dev-830-1-0,If exactly two open brown cases holding paper are displayed in the left image.,"[""SELECT['left image']"", ""PROJECT['cases in #REF', '#1']"", ""FILTER['#2', 'that are open']"", ""FILTER['#3', 'that are brown']"", ""PROJECT['paper in #REF', '#1']"", ""FILTER['#4', 'holding #5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to two']""]","[""SELECT['cases']"", ""FILTER['#1', 'that are open']"", ""FILTER['#2', 'that are brown']"", ""SELECT['paper']"", ""FILTER['#3', 'holding #4']"", ""FILTER['#5', 'in the left image']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to two']""]"
NLVR2_dev_dev-8-3-1,"If the left image shows the front of an empty cart facing right, and the right image shows a helmet-wearing girl in a right-facing two-wheeled cart pulled by a pony.","[""SELECT['left image']"", ""PROJECT['cart in #REF', '#1']"", ""FILTER['#2', 'that is empty']"", ""FILTER['#3', 'that is facing right']"", ""PROJECT['front of #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least one']"", ""SELECT['girl']"", ""FILTER['#8', 'that is helmet-wearing']"", ""SELECT['two-wheeled']"", ""FILTER['#9', 'that is pulled by a pony']"", ""FILTER['#10', 'that is right-facing']"", ""BOOLEAN['#11', 'is in the right image']"", ""BOOLEAN['logical_and', 'true', '#6', '#12']""]","[""SELECT['left image']"", ""PROJECT['cart in #REF', '#1']"", ""FILTER['#2', 'that is empty']"", ""FILTER['#3', 'that is facing right']"", ""PROJECT['front of #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least one']"", ""SELECT['girl']"", ""FILTER['#8', 'that is helmet-wearing']"", ""SELECT['two-wheeled']"", ""FILTER['#9', 'that is pulled by a pony']"", ""FILTER['#10', 'that is right-facing']"", ""BOOLEAN['#11', 'is in the right image']"", ""BOOLEAN['logical_and', 'true', '#6', '#12']""]"
NLVR2_dev_dev-831-0-1,If there is broccoli on a towel.,"[""SELECT['broccoli']"", ""SELECT['towel']"", ""BOOLEAN['#1', 'is on #2']""]","[""SELECT['broccoli']"", ""SELECT['towel']"", ""BOOLEAN['#1', 'are on #2']""]"
NLVR2_dev_dev-831-3-0,"If the left image shows broccoli florets in a roundish container, and the right image features broccoli florets on a wood-grain surface.","[""SELECT['left image']"", ""PROJECT['broccoli florets in #REF', '#1']"", ""PROJECT['container in #REF', '#1']"", ""FILTER['#3', 'that is roundish']"", ""BOOLEAN['#2', 'are in #4']"", ""SELECT['right image']"", ""PROJECT['broccoli florets in #REF', '#6']"", ""PROJECT['surface in #REF', '#6']"", ""FILTER['#8', 'that is wood-grain']"", ""BOOLEAN['#7', 'are on #9']"", ""BOOLEAN['logical_and', 'true', '#5', '#10']""]","[""SELECT['left image']"", ""PROJECT['broccoli florets in #REF', '#1']"", ""PROJECT['container in #REF', '#1']"", ""FILTER['#3', 'that is roundish']"", ""BOOLEAN['#2', 'are in #4']"", ""SELECT['right image']"", ""PROJECT['broccoli florets in #REF', '#6']"", ""PROJECT['surface in #REF', '#6']"", ""FILTER['#7', 'that is wood-grain']"", ""BOOLEAN['#8', 'are on #9']"", ""BOOLEAN['logical_and', 'true', '#5', '#10']""]"
NLVR2_dev_dev-832-3-0,"If one image contains at least one empty parked bus with a completely flat front, and the other image shows people standing next to a slope-front bus near glowing yellow traffic lights.","[""SELECT['one image']"", ""PROJECT['buses in #REF', '#1']"", ""FILTER['#2', 'that are empty']"", ""FILTER['#3', 'that are parked']"", ""PROJECT['front of #REF', '#4']"", ""COMPARATIVE['#4', '#5', 'is completely flat']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least one']"", ""SELECT['other image']"", ""PROJECT['people in #REF', '#9']"", ""PROJECT['bus in #REF', '#9']"", ""FILTER['#10', 'that is slope-front']"", ""PROJECT['traffic lights in #REF', '#9']"", ""FILTER['#11', 'that are glowing']"", ""FILTER['#12', 'that are near #13']"", ""BOOLEAN['#14', 'are standing next to #15']"", ""BOOLEAN['logical_and', 'true', '#8', '#16']""]","[""SELECT['one image']"", ""PROJECT['buses in #REF', '#1']"", ""FILTER['#2', 'that are empty']"", ""FILTER['#3', 'that are parked']"", ""PROJECT['front of #REF', '#4']"", ""COMPARATIVE['#4', '#5', 'is completely flat']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least one']"", ""SELECT['the other image']"", ""PROJECT['people in #REF', '#9']"", ""PROJECT['bus in #REF', '#9']"", ""FILTER['#10', 'that is slope-front']"", ""PROJECT['traffic lights in #REF', '#9']"", ""FILTER['#11', 'that are glowing yellow']"", ""FILTER['#12', 'that are near #13']"", ""BOOLEAN['#14', 'are standing next to #15']"", ""BOOLEAN['logical_and', 'true', '#8', '#16']""."
NLVR2_dev_dev-832-3-1,If there is a stopped bus with people next to it and lit stop lights behind it,"[""SELECT['bus']"", ""FILTER['#1', 'that is stopped']"", ""SELECT['people']"", ""BOOLEAN['#3', 'are next to #2']"", ""SELECT['stop lights']"", ""FILTER['#5', 'that are lit']"", ""BOOLEAN['#6', 'are behind #2']"", ""BOOLEAN['logical_and', 'true', '#4', '#7']""]","[""SELECT['bus']"", ""FILTER['#1', 'that is stopped']"", ""SELECT['people']"", ""FILTER['#3', 'that are next to #2']"", ""SELECT['stop lights']"", ""FILTER['#5', 'that are lit']"", ""BOOLEAN['#4', 'are behind #2']""]"
NLVR2_dev_dev-83-3-0,If a group of at least 7 antelope is seen in the right image.,"[""SELECT['right image']"", ""PROJECT['antelopes in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least 7']""]","[""SELECT['the right image']"", ""PROJECT['antelopes in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least 7']""]"
NLVR2_dev_dev-834-0-0,"If each image includes at least one uncapped marker-like makeup stick, along with its separate gold cap.","[""SELECT['makeup stick']"", ""FILTER['#1', 'that is marker-like']"", ""FILTER['#2', 'that is uncapped']"", ""PROJECT['cap of #REF', '#3']"", ""FILTER['#4', 'that is gold']"", ""FILTER['#5', 'that is separate']"", ""SELECT['images']"", ""GROUP['count', '#6', '#7']"", ""COMPARATIVE['#7', '#8', 'is at least one']"", ""AGGREGATE['count', '#7']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to #11']""]","[""SELECT['makeup sticks']"", ""FILTER['#1', 'that are marker-like']"", ""FILTER['#2', 'that are uncapped']"", ""PROJECT['cap of #REF', '#3']"", ""FILTER['#4', 'that is gold']"", ""FILTER['#5', 'that is separate']"", ""SELECT['images']"", ""GROUP['count', '#6', '#7']"", ""COMPARATIVE['#7', '#8', 'is at least one']"", ""AGGREGATE['count', '#9']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#10', 'is equal to #11']""]"
NLVR2_dev_dev-835-0-1,If the cabinet on the right has drawers on it.,"[""SELECT['cabinet']"", ""FILTER['#1', 'that is on the right']"", ""SELECT['drawers']"", ""BOOLEAN['#2', 'has #3 on']""]","[""SELECT['cabinet']"", ""FILTER['#1', 'that is on the right']"", ""SELECT['drawers']"", ""BOOLEAN['#2', 'has #3 on it']""."
NLVR2_dev_dev-835-1-0,If one cabinet has tall slender decorative legs and paned glass on the sides as well as the front.,"[""SELECT['cabinet']"", ""PROJECT['legs of #REF', '#1']"", ""FILTER['#2', 'that are decorative']"", ""FILTER['#3', 'that are tall']"", ""COMPARATIVE['#1', '#4', 'are slender']"", ""INTERSECTION['#1', '#5', '#6']"", ""PROJECT['sides of #REF', '#7']"", ""PROJECT['front of #REF', '#7']"", ""COMPARATIVE['#7', '#8', 'are paned']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to one']""]","[""SELECT['cabinets']"", ""PROJECT['legs of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are tall']"", ""COMPARATIVE['#1', '#2', 'are slender']"", ""INTERSECTION['#1', '#3', '#4']"", ""PROJECT['sides of #REF', '#5']"", ""PROJECT['front of #REF', '#5']"", ""COMPARATIVE['#5', '#6', 'are paned glass']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to one']""]"
NLVR2_dev_dev-836-0-0,If one of the dogs is sitting in the grass.,"[""SELECT['dogs']"", ""SELECT['grass']"", ""FILTER['#1','sitting in #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]","[""SELECT['dogs']"", ""SELECT['the grass']"", ""FILTER['#1', 'that is sitting in #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]"
NLVR2_dev_dev-836-0-1,If an image contains a dog sitting in grass.,"[""SELECT['dog']"", ""SELECT['grass']"", ""FILTER['#1','sitting in #2']"", ""BOOLEAN['#3', 'is in an image']""]","[""SELECT['dog']"", ""SELECT['grass']"", ""FILTER['#1', 'that is sitting in #2']"", ""BOOLEAN['#3', 'is in an image']""]"
NLVR2_dev_dev-837-2-1,If each of the boars has visible tusks.,"[""SELECT['boars']"", ""PROJECT['tusks of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are visible']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#5', 'is equal to #4']""]","[""SELECT['boars']"", ""PROJECT['tusks of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are visible']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#6', 'is equal to #4']""]"
NLVR2_dev_dev-837-3-0,If each image includes exactly one target mark superimposed on a warthog in the foreground.,"[""SELECT['target mark']"", ""SELECT['warthog']"", ""FILTER['#2', 'in the foreground']"", ""FILTER['#1','superimposed on #3']"", ""PROJECT['images of #REF', '#4']"", ""GROUP['count', '#4', '#5']"", ""COMPARATIVE['#5', '#6', 'is equal to one']"", ""AGGREGATE['count', '#7']"", ""SELECT['images']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to #10']""]","[""SELECT['target marks']"", ""SELECT['warthog']"", ""FILTER['#2', 'in the foreground']"", ""FILTER['#1','superimposed on #3']"", ""PROJECT['images of #REF', '#4']"", ""GROUP['count', '#4', '#5']"", ""COMPARATIVE['#5', '#6', 'is equal to one']"", ""AGGREGATE['count', '#7']"", ""SELECT['images']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to #10']""]"
NLVR2_dev_dev-838-0-1,If there are two penguins in the water.,"[""SELECT['penguins']"", ""SELECT['water']"", ""FILTER['#1', 'in #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']""]","[""SELECT['penguins']"", ""SELECT['the water']"", ""FILTER['#1', 'in #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']""]"
NLVR2_dev_dev-838-3-0,If there are two penguins in the image pair,"[""SELECT['images']"", ""PROJECT['penguins in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']""]","[""SELECT['penguins']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to two']""]"
NLVR2_dev_dev-839-0-0,If all of the birds are flying through the air.,"[""SELECT['birds']"", ""FILTER['#1', 'that are flying through the air']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to #4']""]","[""SELECT['birds']"", ""FILTER['#1', 'that are flying through the air']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#4', 'is equal to #3']""]"
NLVR2_dev_dev-839-0-1,If there are exactly two parrots in the left image.,"[""SELECT['left image']"", ""PROJECT['parrots in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']""]","[""SELECT['left image']"", ""PROJECT['parrots of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']""]"
NLVR2_dev_dev-840-3-1,If one of the images includes three or fewer balloons.,"[""SELECT['balloons']"", ""SELECT['images']"", ""GROUP['count', '#1', '#2']"", ""COMPARATIVE['#2', '#3', 'is at most three']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']""]","[""SELECT['balloons']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is at most three']""]"
NLVR2_dev_dev-841-0-1,If the dogs appear to be facing opposite directions from each other; either towards or away.,"[""SELECT['dogs']"", ""PROJECT['direction that #REF appear to be facing', '#1']"", ""BOOLEAN['#2', 'are towards each other']"", ""BOOLEAN['#2', 'are away']"", ""COMPARISON['true', '#3', '#4']""]","[""SELECT['dogs']"", ""PROJECT['direction that #REF appear to be facing', '#1']"", ""BOOLEAN['#2', 'are towards each other']"", ""BOOLEAN['#2', 'are away']"", ""UNION['#3', '#4']""]"
NLVR2_dev_dev-84-1-1,If a stylus is near a laptop in one of the images.,"[""SELECT['stylus']"", ""SELECT['laptop']"", ""FILTER['#1', 'near #2']"", ""BOOLEAN['#3', 'is in one of the images']""]","[""SELECT['stylus']"", ""SELECT['laptop']"", ""FILTER['#1', 'that is near #2']"", ""BOOLEAN['#3', 'is in one of the images']."
NLVR2_dev_dev-841-2-0,"If the dog on the left is black and white, and the dog on the right is white with various brown shades.","[""SELECT['dog']"", ""FILTER['#1', 'on the left']"", ""FILTER['#1', 'on the right']"", ""BOOLEAN['#2', 'is black and white']"", ""BOOLEAN['#3', 'is white with various brown shades']"", ""BOOLEAN['logical_and', 'true', '#4', '#5']""]","[""SELECT['dog']"", ""FILTER['#1', 'on the left']"", ""BOOLEAN['#2', 'is black and white']"", ""FILTER['#1', 'on the right']"", ""FILTER['#4', 'that is white']"", ""PROJECT['shades of #REF', '#5']"", ""COMPARATIVE['#5', '#6', 'are various']"", ""BOOLEAN['#7', 'are brown']"", ""BOOLEAN['logical_and', 'true', '#3', '#8']""]"
NLVR2_dev_dev-842-1-0,If a green wreath is hanging in the middle of the china cabinet.,"[""SELECT['wreath']"", ""FILTER['#1', 'that is green']"", ""SELECT['china cabinet']"", ""BOOLEAN['#2', 'is hanging in the middle of #3']""]","[""SELECT['wreath']"", ""FILTER['#1', 'that is green']"", ""SELECT['china cabinet']"", ""FILTER['#2', 'hanging in the middle of #3']"", ""BOOLEAN['#4', 'is green']""]"
NLVR2_dev_dev-842-2-1,If one of the cabinets has a green wreath hanging on its front.,"[""SELECT['cabinets']"", ""PROJECT['front of #REF', '#1']"", ""SELECT['wreath']"", ""FILTER['#3', 'that is green']"", ""COMPARATIVE['#1', '#2', 'has #4 hanging']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']""]","[""SELECT['cabinets']"", ""PROJECT['front of #REF', '#1']"", ""SELECT['wreath']"", ""FILTER['#3', 'that is green']"", ""COMPARATIVE['#1', '#2', 'has #4 hanging on']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']""]"
NLVR2_dev_dev-84-3-0,If one image includes a silver stylus and a device with a blue keyboard base and an open screen propped up like an easel.,"[""SELECT['stylus']"", ""FILTER['#1', 'that is silver']"", ""SELECT['device']"", ""PROJECT['keyboard base of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is blue']"", ""PROJECT['screen of #REF', '#5']"", ""FILTER['#6', 'that is open']"", ""FILTER['#7', 'propped up like an easel']"", ""BOOLEAN['#8', 'is in one image']""]","[""SELECT['stylus']"", ""FILTER['#1', 'that is silver']"", ""BOOLEAN['#2', 'is in one image']"", ""SELECT['device']"", ""PROJECT['keyboard base of #REF', '#4']"", ""COMPARATIVE['#4', '#5', 'is blue']"", ""PROJECT['screen of #REF', '#6']"", ""FILTER['#7', 'that is open']"", ""FILTER['#8', 'propped up like an easel']"", ""BOOLEAN['#9', 'is in one image']""]"
NLVR2_dev_dev-843-2-1,If a young zebra in the image on the right is nursing.,"[""SELECT['zebra']"", ""FILTER['#1', 'that is young']"", ""BOOLEAN['#2', 'is nursing']""]","[""SELECT['zebra']"", ""FILTER['#1', 'that is young']"", ""FILTER['#2', 'that is nursing']"", ""BOOLEAN['#3', 'is in the right image']""]"
NLVR2_dev_dev-843-3-0,"If in the image on the left, a person is touching a zebra.","[""SELECT['person']"", ""SELECT['zebra']"", ""FILTER['#1', 'touching #2']"", ""BOOLEAN['#3', 'is in the image on the left']""]","[""SELECT['person']"", ""SELECT['zebra']"", ""FILTER['#1', 'touching #2']"", ""BOOLEAN['#3', 'is in left image']""]"
NLVR2_dev_dev-844-2-0,If each image contains a pair of similarly-colored birds posed near to one another and alongside each other.,"[""SELECT['images']"", ""PROJECT['birds in #REF', '#1']"", ""FILTER['#2', 'that are similarly-colored']"", ""FILTER['#3', 'that are posed near to one another']"", ""FILTER['#4', 'that are alongside each other']"", ""GROUP['count', '#5', '#1']"", ""COMPARATIVE['#1', '#6', 'is equal to two']"", ""AGGREGATE['count', '#7']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#8', 'is equal to #9']""]","[""SELECT['images']"", ""PROJECT['birds in #REF', '#1']"", ""FILTER['#2', 'that are similarly-colored']"", ""FILTER['#3', 'that are posed near one another']"", ""FILTER['#4', 'that are alongside each other']"", ""GROUP['count', '#5', '#1']"", ""COMPARATIVE['#1', '#6', 'is equal to two']"", ""AGGREGATE['count', '#7']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to #10']""]"
NLVR2_dev_dev-844-2-1,If there are exactly two brightly-colored parrots in each picture and each pair is standing close together on a branch.,"[""SELECT['parrots']"", ""FILTER['#1', 'that are brightly-colored']"", ""SELECT['pictures']"", ""GROUP['count', '#2', '#3']"", ""COMPARATIVE['#3', '#4', 'is equal to two']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to #7']"", ""SELECT['branch']"", ""FILTER['#1','standing close together on #9']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is equal to #12']"", ""BOOLEAN['logical_and', 'true', '#8', '#13']""]","[""SELECT['parrots']"", ""FILTER['#1', 'that are brightly-colored']"", ""SELECT['pictures']"", ""GROUP['count', '#2', '#3']"", ""COMPARATIVE['#3', '#4', 'is equal to two']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to #7']"", ""SELECT['branch']"", ""FILTER['#1', 'that are standing close together']"", ""FILTER['#8', 'that are on #9']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is equal to #12']"", ""BOOLEAN['logical_and', 'true', '#9', '#13']""]"
NLVR2_dev_dev-845-3-0,If there is a single fish with a white strip down its back and an opaque tail swimming near an anemone,"[""SELECT['fish']"", ""PROJECT['back of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is white']"", ""PROJECT['tail of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is opaque']"", ""SELECT['anemone']"", ""FILTER['#5','swimming near #6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to one']""]","[""SELECT['fish']"", ""PROJECT['back of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'has a white strip down']"", ""PROJECT['tail of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is opaque']"", ""SELECT['anemone']"", ""BOOLEAN['#5', 'is swimming near #6']""]"
NLVR2_dev_dev-846-0-0,If in at least one image there is at least 1 circle crab cage that is holding at least five pound of stuff inside of it.,"[""SELECT['images']"", ""PROJECT['crab cages in #REF', '#1']"", ""FILTER['#2', 'that are circle']"", ""PROJECT['pound of stuff in #REF', '#1']"", ""FILTER['#4', 'that #3 is holding inside']"", ""GROUP['count', '#5', '#1']"", ""COMPARATIVE['#1', '#6', 'is at least one']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is at least one']""]","[""SELECT['images']"", ""PROJECT['crab cages in #REF', '#1']"", ""FILTER['#2', 'that are circle']"", ""PROJECT['pounds of stuff in #REF', '#1']"", ""FILTER['#4', 'that #3 is holding']"", ""GROUP['count', '#5', '#1']"", ""COMPARATIVE['#1', '#6', 'is at least five']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is at least one']""]"
NLVR2_dev_dev-847-1-0,If one of the images has two separate trains on two separate tracks.,"[""SELECT['trains']"", ""FILTER['#1', 'that are separate']"", ""SELECT['tracks']"", ""FILTER['#3', 'that are separate']"", ""FILTER['#2', 'on #4']"", ""PROJECT['images of #REF', '#5']"", ""GROUP['count', '#5', '#6']"", ""COMPARATIVE['#6', '#7', 'is equal to two']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to one']""]","[""SELECT['trains']"", ""FILTER['#1', 'that are separate']"", ""SELECT['tracks']"", ""FILTER['#3', 'that are separate']"", ""FILTER['#2', 'on #4']"", ""SELECT['images']"", ""GROUP['count', '#5', '#6']"", ""COMPARATIVE['#6', '#7', 'is equal to two']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to one']""]"
NLVR2_dev_dev-847-1-1,"If an image shows just one train, which is angled heading leftward and has a multicolored stripe along with bottom of its side.","[""SELECT['train']"", ""FILTER['#1', 'that is angled heading leftward']"", ""PROJECT['side of #REF', '#2']"", ""SELECT['stripe']"", ""FILTER['#4', 'that is multicolored']"", ""COMPARATIVE['#2', '#3', 'has #5 along with #6']"", ""SELECT['images']"", ""GROUP['count', '#7', '#8']"", ""COMPARATIVE['#8', '#9', 'is equal to one']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is at least one']""]","[""SELECT['train']"", ""FILTER['#1', 'that is angled heading leftward']"", ""PROJECT['side of #REF', '#2']"", ""SELECT['stripe']"", ""FILTER['#4', 'that is multicolored']"", ""COMPARATIVE['#2', '#3', 'has #5 along with #6']"", ""SELECT['images']"", ""GROUP['count', '#7', '#8']"", ""COMPARATIVE['#8', '#9', 'is equal to one']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is equal to one']""]"
NLVR2_dev_dev-848-1-0,If one of the wagon images is a close up of just the wagon's wheel.,"[""SELECT['wagon']"", ""PROJECT['wheel of #REF', '#1']"", ""FILTER['#1', 'that is a close up of #2']"", ""BOOLEAN['#3', 'is in one of the images']""]","[""SELECT['wagon']"", ""PROJECT['wheel of #REF', '#1']"", ""PROJECT['close up of #REF', '#2']"", ""BOOLEAN['#3', 'is in one image']""]"
NLVR2_dev_dev-849-2-1,If the right image features two side-by-side water bottles with black lids and anime-style characters decorating them.,"[""SELECT['the right image']"", ""PROJECT['water bottles in #REF', '#1']"", ""FILTER['#2', 'that are side-by-side']"", ""PROJECT['lids of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'are black']"", ""PROJECT['characters decorating #REF', '#5']"", ""COMPARATIVE['#5', '#6', 'are anime-style']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to two']""]","[""SELECT['the right image']"", ""PROJECT['water bottles in #REF', '#1']"", ""FILTER['#2', 'that are side-by-side']"", ""PROJECT['lids of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'are black']"", ""PROJECT['characters in #REF', '#5']"", ""FILTER['#6', 'that are anime-style']"", ""FILTER['#7', 'adorning them']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to two']""]"
NLVR2_dev_dev-849-3-0,If the left and right image contains a total of two water bottles.,"[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['water bottles in #REF', '#1']"", ""PROJECT['water bottles in #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['sum', '#5', '#6']"", ""BOOLEAN['#7', 'is equal to two']""]","[""SELECT['left image']"", ""PROJECT['water bottles in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""SELECT['right image']"", ""PROJECT['water bottles in #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""ARITHMETIC['sum', '#3', '#6']"", ""BOOLEAN['#7', 'is equal to two']""]"
NLVR2_dev_dev-850-2-1,If in at least one image there are at least four bottle rows that together make a walking path.,"[""SELECT['bottle rows']"", ""FILTER['#1', 'that together make a walking path']"", ""SELECT['images']"", ""GROUP['count', '#2', '#3']"", ""COMPARATIVE['#3', '#4', 'is at least four']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least one']""]","[""SELECT['images']"", ""PROJECT['bottle rows in #REF', '#1']"", ""FILTER['#2', 'that together make a walking path']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is at least four']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']""]"
NLVR2_dev_dev-85-1-0,"If the left image shows a bookstore exterior with at least one person in front of it, and the right image shows a bookstore interior full of shelves of books.","[""SELECT['left image']"", ""PROJECT['bookstore in #REF', '#1']"", ""PROJECT['exterior of #REF', '#2']"", ""PROJECT['person in #REF', '#2']"", ""FILTER['#3', 'that is in front of #4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least one']"", ""SELECT['right image']"", ""PROJECT['bookstore interior in #REF', '#8']"", ""PROJECT['shelves of books in #REF', '#8']"", ""FILTER['#9', 'that are full of #10']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#7', '#13']""]","[""SELECT['left image']"", ""PROJECT['bookstore in #REF', '#1']"", ""PROJECT['exterior of #REF', '#2']"", ""PROJECT['person in #REF', '#1']"", ""FILTER['#3', 'that is in front of #2']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']"", ""SELECT['right image']"", ""PROJECT['bookstore in #REF', '#7']"", ""PROJECT['interior of #REF', '#8']"", ""PROJECT['shelves of books in #REF', '#8']"", ""FILTER['#9', 'that are full of #10']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#6', '#13']""]"
NLVR2_dev_dev-851-3-0,If chairs surround a table in the image on the right.,"[""SELECT['chairs']"", ""SELECT['table']"", ""FILTER['#1', 'that surround #2']"", ""BOOLEAN['#3', 'are in the image on the right']""]","[""SELECT['right image']"", ""PROJECT['chairs in #REF', '#1']"", ""PROJECT['table in #REF', '#1']"", ""BOOLEAN['#2','surrounded #3']""]"
NLVR2_dev_dev-852-2-1,If one passenger automobile is driving in the snow.,"[""SELECT['passenger automobiles']"", ""SELECT['the snow']"", ""FILTER['#1', 'driving in #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]","[""SELECT['passenger automobile']"", ""SELECT['the snow']"", ""FILTER['#1', 'driving in #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]"
NLVR2_dev_dev-85-3-1,If at least one rack of books is sitting outside on the sidewalk.,"[""SELECT['rack of books']"", ""SELECT['the sidewalk']"", ""FILTER['#1','sitting outside on #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']""]","[""SELECT['rack of books']"", ""SELECT['the sidewalk']"", ""FILTER['#1', 'that is sitting outside']"", ""FILTER['#4', 'on #2']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least one']""]"
NLVR2_dev_dev-853-1-0,If all the syringes have needles attached.,"[""SELECT['syringes']"", ""SELECT['needles']"", ""FILTER['#1', 'that have #2 attached']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to #5']""]","[""SELECT['syringes']"", ""SELECT['needles']"", ""FILTER['#1', 'with #2 attached']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#5', 'is equal to #4']""]"
NLVR2_dev_dev-853-1-1,If there are 2 syringes total.,"[""SELECT['syringes']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to two']""]","[""SELECT['syringes']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to two']""]-"
NLVR2_dev_dev-854-2-0,If there are two baby cribs.,"[""SELECT['baby cribs']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to two']""]","[""SELECT['cribs']"", ""FILTER['#1', 'that are babies']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']""]"
NLVR2_dev_dev-854-3-1,If the left and right image contains the same number of canopies one circle and one tent.,"[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['canopies in #REF', '#1']"", ""PROJECT['canopies in #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to #6']"", ""PROJECT['circle in #REF', '#2']"", ""PROJECT['tent in #REF', '#2']"", ""AGGREGATE['count', '#7']"", ""AGGREGATE['count', '#8']"", ""ARITHMETIC['sum', '#9', '#10']"", ""BOOLEAN['#11', 'is equal to one']"", ""BOOLEAN['#12', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#13', '#14']""]","[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['canopies in #REF', '#1']"", ""PROJECT['canopies in #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to #6']"", ""PROJECT['circle in #REF', '#2']"", ""PROJECT['tent in #REF', '#2']"", ""AGGREGATE['count', '#7']"", ""AGGREGATE['count', '#8']"", ""ARITHMETIC['sum', '#9', '#10']"", ""BOOLEAN['#11', 'is equal to one']"", ""BOOLEAN['#12', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#13', '#14']"", ""UNION['#15', '#16']""]"
NLVR2_dev_dev-855-0-0,If the image to the left features exactly one dog.,"[""SELECT['left image']"", ""PROJECT['dog in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']""]","[""SELECT['the left image']"", ""PROJECT['dogs in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']""]"
NLVR2_dev_dev-855-0-1,If there is one dog only with no leash in the right pic,"[""SELECT['the right pic']"", ""PROJECT['dogs in #REF', '#1']"", ""PROJECT['leashes in #REF', '#1']"", ""FILTER['#2', 'with #3']"", ""DISCARD['#2', '#4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']""]","[""SELECT['right pic']"", ""PROJECT['dog in #REF', '#1']"", ""PROJECT['leash in #REF', '#1']"", ""FILTER['#2', 'with #3']"", ""DISCARD['#2', '#4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']""]"
NLVR2_dev_dev-856-1-1,If one image depicts a collie-type dog next to multiple white sheep and a standing person.,"[""SELECT['dog']"", ""FILTER['#1', 'that is collie-type']"", ""SELECT['sheep']"", ""FILTER['#3', 'that are white']"", ""SELECT['person']"", ""FILTER['#5', 'that is standing']"", ""FILTER['#2', 'next to #4']"", ""FILTER['#6', 'next to #7']"", ""PROJECT['images of #REF', '#8']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to one']""]","[""SELECT['dog']"", ""FILTER['#1', 'that is collie-type']"", ""SELECT['sheep']"", ""FILTER['#3', 'that are white']"", ""SELECT['person']"", ""FILTER['#5', 'that is standing']"", ""FILTER['#4', 'next to #6']"", ""FILTER['#2', 'next to #7']"", ""PROJECT['images of #REF', '#8']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to one']""]"
NLVR2_dev_dev-856-3-0,If there are more animals in the image on the right.,"[""SELECT['animals']"", ""SELECT['right image']"", ""FILTER['#1', 'that are in #2']"", ""DISCARD['#1', '#3']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is higher than #6']""]","[""SELECT['animals']"", ""SELECT['right image']"", ""FILTER['#1', 'that are in #2']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is higher than #5']""]"
NLVR2_dev_dev-857-3-0,If an image shows a white vanity with shaped feet and a row of shelves between double cabinets under two separate inset sinks.,"[""SELECT['vanity']"", ""FILTER['#1', 'that is white']"", ""PROJECT['feet of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'are shaped']"", ""SELECT['double cabinets']"", ""SELECT['inset sinks']"", ""FILTER['#5', 'that are separate']"", ""FILTER['#6', 'that are under #7']"", ""FILTER['#4', 'between #8']"", ""BOOLEAN['#9', 'is in an image']""]","[""SELECT['vanity']"", ""FILTER['#1', 'that is white']"", ""PROJECT['feet of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'are shaped']"", ""SELECT['double cabinets']"", ""SELECT['sinks']"", ""FILTER['#6', 'that are separate']"", ""FILTER['#7', 'that are inset']"", ""FILTER['#5', 'that are under #8']"", ""FILTER['#4', 'that has #9']"", ""BOOLEAN['#10', 'is in an image']""]-"
NLVR2_dev_dev-857-3-1,"If in one of the images, the counter space between the two wash basins is empty.","[""SELECT['wash basins']"", ""PROJECT['counter space between #REF', '#1']"", ""FILTER['#2', 'that is empty']"", ""BOOLEAN['#3', 'is in one of the images']""]","[""SELECT['wash basins']"", ""PROJECT['counter space between #REF', '#1']"", ""BOOLEAN['#2', 'is empty']""]"
NLVR2_dev_dev-858-0-1,If a girl in long one piece pajamas is wearing mouse ears on her head in one of the images.,"[""SELECT['girl']"", ""SELECT['pajamas']"", ""FILTER['#2', 'that are long']"", ""FILTER['#3', 'that are one piece']"", ""FILTER['#1', 'in #4']"", ""PROJECT['head of #REF', '#5']"", ""SELECT['mouse ears']"", ""COMPARATIVE['#5', '#6', 'are wearing #7 on']"", ""BOOLEAN['#8', 'is in one of the images']""]","[""SELECT['girl']"", ""SELECT['pajamas']"", ""FILTER['#2', 'that are long']"", ""FILTER['#3', 'that are one piece']"", ""FILTER['#1', 'in #4']"", ""PROJECT['head of #REF', '#5']"", ""SELECT['mice ears']"", ""COMPARATIVE['#5', '#6', 'are wearing #7 on #8']"", ""BOOLEAN['#9', 'is in one image']""]"
NLVR2_dev_dev-858-3-0,If the girl in one image is wearing pink polka-dotted pants.,"[""SELECT['girl']"", ""SELECT['pants']"", ""FILTER['#2', 'that are pink']"", ""FILTER['#3', 'that are polka-dotted']"", ""FILTER['#1', 'wearing #4']"", ""BOOLEAN['#5', 'is in one image']""]","[""SELECT['girl']"", ""PROJECT['pants of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are pink']"", ""COMPARATIVE['#1', '#2', 'are polka-dotted']"", ""INTERSECTION['#1', '#3', '#4']"", ""BOOLEAN['#5', 'is wearing #6']""]"
NLVR2_dev_dev-859-1-0,"If one image contains no more than 10 zebra, and the other image includes a mass of zebra too numerous to count, but no other large animals that are clearly visible.","[""SELECT['one image']"", ""PROJECT['zebras in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at most 10']"", ""SELECT['other image']"", ""PROJECT['zebras in #REF', '#5']"", ""FILTER['#6', 'that are large']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is at least one']"", ""PROJECT['animals in #REF', '#5']"", ""FILTER['#9', 'that are large']"", ""FILTER['#10', 'that are clearly visible']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is equal to zero']"", ""BOOLEAN['logical_and', 'true', '#7', '#13']""]","[""SELECT['one image']"", ""PROJECT['zebras in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at most 10']"", ""SELECT['other image']"", ""PROJECT['zebras in #REF', '#5']"", ""FILTER['#6', 'that are large']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is at least one']"", ""PROJECT['large animals in #REF', '#5']"", ""FILTER['#9', 'that are clearly visible']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is equal to zero']"", ""BOOLEAN['logical_and', 'true', '#6', '#12']""]"
NLVR2_dev_dev-859-1-1,If at least one zebra is looking straight at the camera.,"[""SELECT['zebras']"", ""FILTER['#1', 'that are looking straight at the camera']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least one']""]","[""SELECT['zebras']"", ""FILTER['#1', 'that is looking straight at the camera']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least one']""]"
NLVR2_dev_dev-860-0-0,If there's a total of 2 animals in both images.,"[""SELECT['animals']"", ""SELECT['images']"", ""GROUP['count', '#1', '#2']"", ""COMPARATIVE['#2', '#3', 'is equal to 2']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to two']""]","[""SELECT['animals']"", ""SELECT['images']"", ""GROUP['count', '#1', '#2']"", ""AGGREGATE['sum', '#3']"", ""BOOLEAN['#4', 'is equal to two']""]"
NLVR2_dev_dev-861-0-0,If the combined images include at least four upright saxophones with bells angled rightward and mouthpieces attached.,"[""SELECT['images']"", ""PROJECT['saxophones in #REF', '#1']"", ""FILTER['#2', 'that are upright']"", ""PROJECT['bells of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'are angled rightward']"", ""PROJECT['mouthpieces of #REF', '#5']"", ""COMPARATIVE['#5', '#6', 'are attached']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is at least four']""]","[""SELECT['images']"", ""PROJECT['saxophones in #REF', '#1']"", ""FILTER['#2', 'that are upright']"", ""PROJECT['bells of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'are angled rightward']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least four']""]"
NLVR2_dev_dev-861-2-1,If a single instrument lies alone in each of the images.,"[""SELECT['images']"", ""PROJECT['instruments in #REF', '#1']"", ""FILTER['#2', 'that lie alone']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is equal to one']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to #7']""]","[""SELECT['instruments']"", ""FILTER['#1', 'that lie alone']"", ""PROJECT['images of #REF', '#2']"", ""GROUP['count', '#2', '#3']"", ""COMPARATIVE['#3', '#4', 'is equal to one']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to #7']""]"
NLVR2_dev_dev-862-2-0,If an image shows a boat with unfurled sails and a blue-and-white body moving through the water.,"[""SELECT['boat']"", ""PROJECT['sails of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are unfurled']"", ""PROJECT['body of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is blue-and-white']"", ""SELECT['water']"", ""FILTER['#6','moving through #5']"", ""BOOLEAN['#7', 'is in an image']""]","[""SELECT['boat']"", ""PROJECT['sails of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are unfurled']"", ""PROJECT['body of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is blue-and-white']"", ""SELECT['water']"", ""BOOLEAN['#5', 'is moving through #6']""]"
NLVR2_dev_dev-862-3-1,If the left and right image contains the same number of sailboats sailing opposite directions.,"[""SELECT['sailboats']"", ""PROJECT['direction sailing of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is opposite']"", ""SELECT['left image']"", ""SELECT['right image']"", ""FILTER['#3', 'that are in #4']"", ""FILTER['#3', 'that are in #5']"", ""AGGREGATE['count', '#6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to #9']""]","[""SELECT['sailboats']"", ""PROJECT['direction that #REF are sailing', '#1']"", ""COMPARATIVE['#1', '#2', 'is opposite']"", ""SELECT['left image']"", ""SELECT['right image']"", ""FILTER['#3', 'that are in #4']"", ""FILTER['#3', 'that are in #5']"", ""AGGREGATE['count', '#6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to #9']""]"
NLVR2_dev_dev-863-2-1,"If each image contains one beetle and one ball, and no beetle has all its legs on the surface of the ball.","[""SELECT['images']"", ""PROJECT['beetles in #REF', '#1']"", ""PROJECT['balls in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is equal to one']"", ""COMPARATIVE['#1', '#5', 'is equal to one']"", ""INTERSECTION['#1', '#6', '#7']"", ""AGGREGATE['count', '#8']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#9', 'is equal to #10']"", ""PROJECT['legs of #REF', '#11']"", ""PROJECT['surface of #REF', '#11']"", ""FILTER['#12', 'on #13']"", ""AGGREGATE['count', '#14']"", ""BOOLEAN['#15', 'is equal to #16']"", ""BOOLEAN['logical_and', 'true', '#7', '#17']""]","[""SELECT['images']"", ""PROJECT['beetles in #REF', '#1']"", ""PROJECT['balls in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is equal to one']"", ""COMPARATIVE['#1', '#5', 'is equal to one']"", ""INTERSECTION['#1', '#6', '#7']"", ""AGGREGATE['count', '#8']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#9', 'is equal to #10']"", ""PROJECT['legs of #REF', '#11']"", ""PROJECT['surface of #REF', '#11']"", ""FILTER['#12', 'on #13']"", ""AGGREGATE['count', '#14']"", ""BOOLEAN['#15', 'is equal to zero']"", ""BOOLEAN['logical_and', 'true', '#7', '#16']""]"
NLVR2_dev_dev-863-3-0,If there are barely any shadows in any images of the dung beetle.,"[""SELECT['dung beetle']"", ""PROJECT['images of #REF', '#1']"", ""PROJECT['shadows in #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at most zero']""]","[""SELECT['dung beetle']"", ""PROJECT['images of #REF', '#1']"", ""PROJECT['shadows in #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is lower than zero']""]"
NLVR2_dev_dev-864-3-1,If one image shows a closed white pencil case with an illustrated front overlapping an open spiral sketchbook.,"[""SELECT['pencil case']"", ""FILTER['#1', 'that is closed']"", ""FILTER['#2', 'that is white']"", ""PROJECT['front of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is illustrated']"", ""SELECT['spiral sketchbook']"", ""FILTER['#6', 'that is open']"", ""FILTER['#5', 'overlapping #7']"", ""BOOLEAN['#8', 'is in one image']""]","[""SELECT['pencil case']"", ""FILTER['#1', 'that is closed']"", ""FILTER['#2', 'that is white']"", ""PROJECT['front of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is illustrated']"", ""SELECT['spiral sketchbook']"", ""FILTER['#6', 'that is open']"", ""FILTER['#7', 'overlapping #5']"", ""BOOLEAN['#8', 'is in one image']""]"
NLVR2_dev_dev-865-0-0,If the left image features an empty wooden four-wheeled cart with bigger wheels on the right and smaller wheels on the left.,"[""SELECT['cart']"", ""FILTER['#1', 'that is empty']"", ""FILTER['#2', 'that is wooden']"", ""FILTER['#3', 'that is four-wheeled']"", ""PROJECT['wheels of #REF', '#4']"", ""COMPARATIVE['#4', '#5', 'are bigger on the right']"", ""COMPARATIVE['#4', '#6', 'are smaller on the left']"", ""INTERSECTION['#4', '#7', '#8']"", ""BOOLEAN['#9', 'is in the left image']""]","[""SELECT['left image']"", ""PROJECT['cart in #REF', '#1']"", ""FILTER['#2', 'that is empty']"", ""FILTER['#3', 'that is wooden']"", ""FILTER['#4', 'that is four-wheeled']"", ""PROJECT['wheels of #REF', '#5']"", ""FILTER['#6', 'that are bigger']"", ""FILTER['#7', 'on the right']"", ""FILTER['#8', 'on the left']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is at least one']""]"
NLVR2_dev_dev-865-3-1,If both carts have four wheels.,"[""SELECT['carts']"", ""PROJECT['wheels of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is equal to four']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to two']""]","[""SELECT['carts']"", ""PROJECT['wheels of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to four']""]"
NLVR2_dev_dev-866-3-0,If there are more containers of lipstick in the image on the left.,"[""SELECT['left image']"", ""PROJECT['containers of lipstick in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is higher than one']""]","[""SELECT['images']"", ""FILTER['#1', 'on the left']"", ""PROJECT['containers of lipstick in #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is higher than #3']""]"
NLVR2_dev_dev-866-3-1,If there is one uncovered lipstick in the right image.,"[""SELECT['right image']"", ""PROJECT['lipstick in #REF', '#1']"", ""FILTER['#2', 'that is uncovered']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]","[""SELECT['right image']"", ""PROJECT['lipstick of #REF', '#1']"", ""FILTER['#2', 'that is uncovered']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]"
NLVR2_dev_dev-867-3-1,If the single dessert in the image on the right is being served in a glass container with a pedestal foot.,"[""SELECT['right image']"", ""PROJECT['dessert in #REF', '#1']"", ""PROJECT['container in #REF', '#1']"", ""FILTER['#3', 'that is glass']"", ""PROJECT['pedestal foot of #REF', '#4']"", ""FILTER['#2', 'with #5']"", ""BOOLEAN['#6', 'is being served in #7']""]","[""SELECT['the image on the right']"", ""PROJECT['desserts in #REF', '#1']"", ""PROJECT['container in #REF', '#1']"", ""FILTER['#3', 'that is glass']"", ""PROJECT['pedestal foot of #REF', '#4']"", ""FILTER['#2', 'with #5']"", ""BOOLEAN['#6', 'is being served in #7']""]"
NLVR2_dev_dev-868-0-1,If there are exactly two vases in the image pair.,"[""SELECT['vases']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to two']""]","[""SELECT['image pair']"", ""PROJECT['vases in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']""]"
NLVR2_dev_dev-869-2-0,"If one image shows one reclining hound, and a striped bird is standing face-to-face with it.","[""SELECT['hound']"", ""FILTER['#1', 'that is reclining']"", ""SELECT['bird']"", ""FILTER['#3', 'that is striped']"", ""FILTER['#4', 'that is standing face-to-face with #2']"", ""BOOLEAN['#5', 'is in one image']""]","[""SELECT['hound']"", ""FILTER['#1', 'that is reclining']"", ""BOOLEAN['#2', 'is in one image']"", ""SELECT['bird']"", ""FILTER['#4', 'that is striped']"", ""FILTER['#5','standing face-to-face with #3']"", ""BOOLEAN['#6', 'is in one image']"", ""BOOLEAN['logical_and', 'true', '#3', '#7']""]"
NLVR2_dev_dev-869-3-1,If a bird is standing by a dog in the image on the right.,"[""SELECT['right image']"", ""PROJECT['bird in #REF', '#1']"", ""PROJECT['dog in #REF', '#1']"", ""BOOLEAN['#2', 'is standing by #3']""]","[""SELECT['bird']"", ""SELECT['dog']"", ""FILTER['#1','standing by #2']"", ""BOOLEAN['#3', 'is in the image on the right']""]"
NLVR2_dev_dev-87-0-1,If there are 3 seals in the image pair,"[""SELECT['images']"", ""PROJECT['seals in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to 3']""]","[""SELECT['image pair']"", ""PROJECT['seals in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to 3']""]"
NLVR2_dev_dev-870-3-0,If at german shepherd dog is on a couch with a woman who is holding a box.,"[""SELECT['dog']"", ""FILTER['#1', 'that is german shepherd']"", ""SELECT['couch']"", ""SELECT['woman']"", ""SELECT['box']"", ""FILTER['#3', 'holding #4']"", ""FILTER['#2', 'on #5']"", ""BOOLEAN['#6', 'is with #7']""]","[""SELECT['dog']"", ""FILTER['#1', 'that is german shepherd']"", ""SELECT['couch']"", ""SELECT['woman']"", ""SELECT['box']"", ""FILTER['#3', 'holding #4']"", ""BOOLEAN['#2', 'is on #5']""]"
NLVR2_dev_dev-870-3-1,If a large brown dog is on the couch next to a blonde haired woman wearing pajamas.,"[""SELECT['dog']"", ""FILTER['#1', 'that is large']"", ""FILTER['#2', 'that is brown']"", ""SELECT['the couch']"", ""SELECT['woman']"", ""FILTER['#5', 'that is blonde haired']"", ""SELECT['pajamas']"", ""FILTER['#6', 'wearing #7']"", ""BOOLEAN['#4', 'is next to #8']""]","[""SELECT['dog']"", ""FILTER['#1', 'that is large']"", ""FILTER['#2', 'that is brown']"", ""SELECT['the couch']"", ""SELECT['woman']"", ""FILTER['#5', 'that is blonde haired']"", ""SELECT['pajamas']"", ""FILTER['#6', 'wearing #7']"", ""BOOLEAN['#3', 'is on #4']"", ""BOOLEAN['#8', 'is next to #9']"", ""BOOLEAN['logical_and', 'true', '#4', '#10']""]"
NLVR2_dev_dev-871-0-0,If one sliding door is closed.,"[""SELECT['sliding doors']"", ""FILTER['#1', 'that are closed']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']""]","[""SELECT['sliding doors']"", ""FILTER['#1', 'that is closed']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']""]"
NLVR2_dev_dev-871-2-1,"If an image shows an open 'barn door' that slides on a black bar held by a u shape, and the door is weathered wood with at least one diagonal board.","[""SELECT['barn door']"", ""FILTER['#1', 'that is open']"", ""SELECT['bar']"", ""FILTER['#3', 'that is black']"", ""SELECT['u shape']"", ""FILTER['#4', 'held by #5']"", ""FILTER['#2', 'that slides on #6']"", ""SELECT['wood']"", ""FILTER['#7', 'that is weathered']"", ""SELECT['diagonal board']"", ""FILTER['#9', 'with #10']"", ""BOOLEAN['#11', 'is in an image']""]","[""SELECT['barn door']"", ""FILTER['#1', 'that is open']"", ""SELECT['bar']"", ""FILTER['#3', 'that is black']"", ""SELECT['u shape']"", ""FILTER['#4', 'held by #5']"", ""FILTER['#2', 'that slides on #6']"", ""SELECT['wood']"", ""FILTER['#7', 'that is weathered']"", ""SELECT['boards']"", ""FILTER['#9', 'that are diagonal']"", ""FILTER['#10', 'with #11']"", ""BOOLEAN['#13', 'is in an image']""]"
NLVR2_dev_dev-87-2-0,"If we have here, two seals.","[""SELECT['seals']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to two']""]","[""SELECT['seals']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'are equal to two']""]"
NLVR2_dev_dev-872-0-0,If there are two goats standing on all fours.,"[""SELECT['goats']"", ""PROJECT['all fours of #REF', '#1']"", ""FILTER['#1','standing on #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']""]","[""SELECT['goats']"", ""PROJECT['all fours of #REF', '#1']"", ""FILTER['#1','standing on #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]"
NLVR2_dev_dev-872-1-1,"If the right image features a long horned animal with its hind legs on the ground, one front paw extended forward, and its head and horns lowered.","[""SELECT['animal']"", ""FILTER['#1', 'that is long horned']"", ""PROJECT['hind legs of #REF', '#2']"", ""SELECT['the ground']"", ""COMPARATIVE['#2', '#3', 'are on #4']"", ""PROJECT['front paws of #REF', '#5']"", ""COMPARATIVE['#5', '#6', 'are extended forward']"", ""PROJECT['head of #REF', '#7']"", ""PROJECT['horns of #REF', '#7']"", ""COMPARATIVE['#7', '#8', 'are lowered']"", ""BOOLEAN['#9', 'is in the right image']""]","[""SELECT['animal']"", ""FILTER['#1', 'that is long horned']"", ""PROJECT['hind legs of #REF', '#2']"", ""SELECT['ground']"", ""COMPARATIVE['#2', '#3', 'are on #4']"", ""PROJECT['front paws of #REF', '#5']"", ""COMPARATIVE['#5', '#6', 'are extended forward']"", ""PROJECT['head of #REF', '#7']"", ""PROJECT['horns of #REF', '#7']"", ""COMPARATIVE['#7', '#8', 'are lowered']"", ""INTERSECTION['#7', '#9', '#10']"", ""BOOLEAN['#11', 'is in the right image']""]"
NLVR2_dev_dev-873-1-1,If one image includes a dark-colored bird on a water buffalo's back.,"[""SELECT['bird']"", ""FILTER['#1', 'that is dark-colored']"", ""SELECT['water buffalo']"", ""PROJECT['back of #REF', '#3']"", ""FILTER['#2', 'on #4']"", ""BOOLEAN['#5', 'is in one image']""]","[""SELECT['bird']"", ""FILTER['#1', 'that is dark-colored']"", ""SELECT['water buffalo']"", ""PROJECT['back of #REF', '#2']"", ""FILTER['#2', 'on #3']"", ""BOOLEAN['#4', 'is in one image']""]"
NLVR2_dev_dev-873-3-0,If an image features one water buffalo with at least one rightward-facing waterbird standing atop it.,"[""SELECT['images']"", ""PROJECT['water buffaloes in #REF', '#1']"", ""PROJECT['waterbirds in #REF', '#1']"", ""FILTER['#3', 'that are rightward-facing']"", ""FILTER['#4','standing atop #2']"", ""GROUP['count', '#5', '#1']"", ""COMPARATIVE['#1', '#6', 'is equal to one']"", ""GROUP['count', '#7', '#1']"", ""COMPARATIVE['#1', '#8', 'is at least one']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to one']""]","[""SELECT['images']"", ""PROJECT['water buffaloes in #REF', '#1']"", ""PROJECT['waterbirds in #REF', '#1']"", ""FILTER['#3', 'that are rightward-facing']"", ""FILTER['#4','standing atop #2']"", ""GROUP['count', '#5', '#1']"", ""COMPARATIVE['#1', '#6', 'is equal to one']"", ""GROUP['count', '#7', '#1']"", ""COMPARATIVE['#1', '#8', 'is at least one']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to one']""]"
NLVR2_dev_dev-874-0-1,If the boat in the left image contains exactly three females.,"[""SELECT['left image']"", ""PROJECT['boat in #REF', '#1']"", ""PROJECT['females of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to three']""]","[""SELECT['left image']"", ""PROJECT['boat of #REF', '#1']"", ""PROJECT['females of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to three']""]"
NLVR2_dev_dev-874-2-0,If the left and right image contains a total of six people and two boats.,"[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['people in #REF', '#1']"", ""PROJECT['people in #REF', '#2']"", ""PROJECT['boats in #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""ARITHMETIC['sum', '#6', '#7']"", ""BOOLEAN['#8', 'is equal to six']"", ""BOOLEAN['#9', 'is equal to two']"", ""BOOLEAN['logical_and', 'true', '#10', '#11']""]","[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['people in #REF', '#1']"", ""PROJECT['boats in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['sum', '#4', '#5']"", ""BOOLEAN['#6', 'is equal to six']"", ""BOOLEAN['#7', 'is equal to two']"", ""BOOLEAN['logical_and', 'true', '#8', '#9']""]"
NLVR2_dev_dev-875-1-0,If the left image contains no more than one sea lion.,"[""SELECT['left image']"", ""PROJECT['sea lion in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at most one']""]","[""SELECT['left image']"", ""PROJECT['sea lions of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at most one']""]"
NLVR2_dev_dev-875-3-1,"If the left image contains no more than two seals, and the right image shows at least seven seals in various poses on a gray rock slope.","[""SELECT['left image']"", ""PROJECT['seals in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at most two']"", ""SELECT['right image']"", ""PROJECT['seals in #REF', '#5']"", ""FILTER['#6', 'that are in various poses']"", ""PROJECT['rock slope in #REF', '#5']"", ""FILTER['#7', 'that is gray']"", ""FILTER['#8', 'on #9']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is at least seven']"", ""BOOLEAN['logical_and', 'true', '#6', '#12']""]","[""SELECT['the left image']"", ""PROJECT['seals in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at most two']"", ""SELECT['the right image']"", ""PROJECT['seals in #REF', '#5']"", ""PROJECT['rock slope in #REF', '#5']"", ""FILTER['#6', 'that is gray']"", ""FILTER['#7', 'on #8']"", ""FILTER['#9', 'in various poses']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is at least seven']"", ""BOOLEAN['logical_and', 'true', '#4', '#12']""]"
NLVR2_dev_dev-876-1-0,If the left and right image contains the same number of mittens with at least one set purple.,"[""SELECT['mittens']"", ""FILTER['#1', 'in the left image']"", ""FILTER['#1', 'in the right image']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to #5']"", ""BOOLEAN['#6', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#7', '#8']""]","[""SELECT['mittens']"", ""SELECT['left image']"", ""SELECT['right image']"", ""FILTER['#1', 'that are in #2']"", ""FILTER['#1', 'that are in #3']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to #7']"", ""FILTER['#1', 'that is purple']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#10', '#11']""]"
NLVR2_dev_dev-876-3-1,"If in one image a pair of mitten thumbs are pointed the same way, but are in opposing directions in the second image.","[""SELECT['one image']"", ""PROJECT['mitten thumbs in #REF', '#1']"", ""PROJECT['way that #REF are pointed', '#2']"", ""BOOLEAN['#3', 'are the same']"", ""SELECT['the second image']"", ""PROJECT['mitten thumbs in #REF', '#5']"", ""PROJECT['direction that #REF are in', '#6']"", ""BOOLEAN['#7', 'are opposite']"", ""BOOLEAN['logical_and', 'true', '#4', '#8']""]","[""SELECT['one image']"", ""PROJECT['mitten thumbs in #REF', '#1']"", ""PROJECT['way that #REF are pointed', '#2']"", ""BOOLEAN['#3', 'are the same']"", ""SELECT['the second image']"", ""PROJECT['mitten thumbs in #REF', '#5']"", ""PROJECT['direction that #REF are in', '#6']"", ""BOOLEAN['#7', 'are opposite']"", ""BOOLEAN['logical_and', 'true', '#8', '#9']""]"
NLVR2_dev_dev-877-3-0,If in one image the car's top is up,"[""SELECT['car']"", ""PROJECT['top of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is up']"", ""BOOLEAN['#3', 'is in one image']""]","[""SELECT['car']"", ""PROJECT['top of #REF', '#1']"", ""BOOLEAN['#2', 'is up']""]"
NLVR2_dev_dev-877-3-1,If convertible mustangs are parked in a lot with out lines in the image pair,"[""SELECT['convertible mustangs']"", ""SELECT['lot']"", ""PROJECT['lines of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'are out']"", ""FILTER['#1', 'parked in #4']"", ""BOOLEAN['#5', 'are in the image pair']""]","[""SELECT['convertible mustangs']"", ""SELECT['lot']"", ""SELECT['out lines']"", ""FILTER['#2', 'parked in #3']"", ""FILTER['#4', 'with out lines']"", ""BOOLEAN['#5', 'are in the image pair']""]"
NLVR2_dev_dev-878-1-1,If the left and right image contains a total of two rams.,"[""SELECT['rams']"", ""SELECT['left image']"", ""SELECT['right image']"", ""FILTER['#1', 'in #2']"", ""FILTER['#1', 'in #3']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""ARITHMETIC['sum', '#6', '#7']"", ""BOOLEAN['#8', 'is equal to two']""]","[""SELECT['left image']"", ""PROJECT['rams in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""SELECT['right image']"", ""PROJECT['rams in #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""ARITHMETIC['sum', '#3', '#6']"", ""BOOLEAN['#7', 'is equal to two']""]"
NLVR2_dev_dev-878-2-0,If all horned animals shown are facing the same direction.,"[""SELECT['animals']"", ""FILTER['#1', 'that are horned']"", ""PROJECT['direction facing of #REF', '#2']"", ""BOOLEAN['#3', 'are the same']""]","[""SELECT['animals']"", ""FILTER['#1', 'that are horned']"", ""PROJECT['direction facing of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is the same']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']""]"
NLVR2_dev_dev-879-1-0,If a fork is next to an oval white plate containing broccoli florets and other ingredients in the left image.,"[""SELECT['fork']"", ""SELECT['plate']"", ""FILTER['#2', 'that is white']"", ""FILTER['#3', 'that is oval']"", ""SELECT['broccoli florets']"", ""SELECT['other ingredients']"", ""FILTER['#5', 'containing #6']"", ""FILTER['#1', 'next to #4']"", ""BOOLEAN['#7', 'is in the left image']""]","[""SELECT['fork']"", ""SELECT['plate']"", ""FILTER['#2', 'that is white']"", ""FILTER['#3', 'that is oval']"", ""SELECT['broccoli florets']"", ""SELECT['other ingredients']"", ""FILTER['#4', 'containing #5']"", ""FILTER['#6', 'next to #7']"", ""BOOLEAN['#8', 'is in the left image']""]"
NLVR2_dev_dev-879-1-1,If the food in each of the images is sitting in a dish.,"[""SELECT['food']"", ""SELECT['dish']"", ""FILTER['#1','sitting in #2']"", ""PROJECT['images of #REF', '#3']"", ""AGGREGATE['count', '#4']"", ""SELECT['images']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#5', 'is equal to #7']""]","[""SELECT['food']"", ""SELECT['dish']"", ""FILTER['#1','sitting in #2']"", ""PROJECT['images of #REF', '#3']"", ""SELECT['images']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to #7']""]"
NLVR2_dev_dev-880-0-0,If a person is interacting with a guinea pig.,"[""SELECT['person']"", ""SELECT['guinea pig']"", ""BOOLEAN['#1', 'is interacting with #2']""]","[""SELECT['people']"", ""SELECT['guinea pig']"", ""BOOLEAN['#1', 'is interacting with #2']""]"
NLVR2_dev_dev-880-2-1,If there is a guinea pig receiving attention from a human.,"[""SELECT['guinea pig']"", ""SELECT['human']"", ""BOOLEAN['#1', 'is receiving attention from #2']""]","[""SELECT['guinea pig']"", ""SELECT['human']"", ""PROJECT['attention of #REF', '#1']"", ""BOOLEAN['#1', 'is receiving #2 from #3']""]"
NLVR2_dev_dev-881-2-0,If the left image contains two dogs.,"[""SELECT['left image']"", ""PROJECT['dogs of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']""]","[""SELECT['left image']"", ""PROJECT['dogs in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']""]"
NLVR2_dev_dev-881-3-1,If the left image contains twice as many dogs as the right image.,"[""SELECT['left image']"", ""PROJECT['dogs in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""SELECT['right image']"", ""PROJECT['dogs in #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""ARITHMETIC['division', '#3', '#6']"", ""BOOLEAN['#7', 'is equal to two']""]","[""SELECT['the left image']"", ""PROJECT['dogs in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""SELECT['the right image']"", ""PROJECT['dogs in #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""ARITHMETIC['division', '#3', '#6']"", ""BOOLEAN['#7', 'is equal to two']""."
NLVR2_dev_dev-88-2-0,If at least one animal is brown.,"[""SELECT['animals']"", ""FILTER['#1', 'that are brown']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least one']""]","[""SELECT['animals']"", ""FILTER['#1', 'that is brown']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least one']""]"
NLVR2_dev_dev-882-0-0,If all dogs are photographed outside with their mouths open and at least one dog is actively moving.,"[""SELECT['dogs']"", ""FILTER['#1', 'that are photographed outside']"", ""PROJECT['mouth of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is open']"", ""FILTER['#1', 'that is actively moving']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to #7']"", ""BOOLEAN['#8', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#9', '#10']""]","[""SELECT['dogs']"", ""FILTER['#1', 'that are photographed outside']"", ""PROJECT['mouths of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'are open']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#5', 'is equal to #6']"", ""FILTER['#1', 'that is actively moving']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#7', '#10']""]"
NLVR2_dev_dev-882-1-1,If the dog on the right is running forward on dirt with long orange-blond hair flying and mouth open.,"[""SELECT['dog']"", ""FILTER['#1', 'that is on the right']"", ""SELECT['dirt']"", ""FILTER['#2', 'running forward on #3']"", ""PROJECT['hair of #REF', '#4']"", ""COMPARATIVE['#4', '#5', 'is long']"", ""COMPARATIVE['#4', '#6', 'is orange-blond']"", ""PROJECT['mouth of #REF', '#7']"", ""BOOLEAN['#8', 'is open']""]","[""SELECT['dog']"", ""FILTER['#1', 'on the right']"", ""SELECT['dirt']"", ""FILTER['#2', 'running forward on #3']"", ""PROJECT['hair of #REF', '#4']"", ""COMPARATIVE['#4', '#5', 'is orange-blond']"", ""BOOLEAN['#6', 'is long']"", ""PROJECT['mouth of #REF', '#7']"", ""BOOLEAN['#8', 'is open']"", ""BOOLEAN['logical_and', 'true', '#7', '#9']""]"
NLVR2_dev_dev-883-3-0,If a framed painting can be seen hanging on the wall in one of the images.,"[""SELECT['painting']"", ""FILTER['#1', 'that is framed']"", ""SELECT['wall']"", ""FILTER['#2', 'hanging on #3']"", ""BOOLEAN['#4', 'is in one of the images']""]","[""SELECT['painting']"", ""FILTER['#1', 'that is framed']"", ""SELECT['the wall']"", ""FILTER['#2', 'hanging on #3']"", ""BOOLEAN['#4', 'is in one image']""]"
NLVR2_dev_dev-884-0-0,If there are at least six pillows in total.,"[""SELECT['pillows']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is at least six']""]","[""SELECT['pillows']"", ""FILTER['#1', 'that are in total']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least six']""]"
NLVR2_dev_dev-884-0-1,If in at least one image there is a clear blown up water pillow with one circle in the middle.,"[""SELECT['water pillow']"", ""FILTER['#1', 'that is clear']"", ""FILTER['#2', 'that is blown up']"", ""PROJECT['middle of #REF', '#3']"", ""SELECT['circle']"", ""COMPARATIVE['#3', '#5', 'is in #4']"", ""BOOLEAN['#6', 'is in at least one image']""]","[""SELECT['water pillow']"", ""FILTER['#1', 'that is clear']"", ""FILTER['#2', 'that is blown up']"", ""PROJECT['middle of #REF', '#3']"", ""SELECT['circles']"", ""COMPARATIVE['#3', '#5', 'is in #4']"", ""BOOLEAN['#6', 'is in at least one image']""]"
NLVR2_dev_dev-885-1-0,If the left image shows a human hand being stuck in front of a dog's face,"[""SELECT['human hand']"", ""SELECT['dog']"", ""PROJECT['face of #REF', '#2']"", ""FILTER['#1', 'that is stuck in front of #3']"", ""BOOLEAN['#4', 'is in the left image']""]","[""SELECT['human hand']"", ""SELECT['dog']"", ""PROJECT['face of #REF', '#2']"", ""FILTER['#1', 'being stuck in front of #3']"", ""BOOLEAN['#4', 'is in left image']""]"
NLVR2_dev_dev-885-2-1,If an image shows at least one standing human leg next to a dog in an outdoor setting.,"[""SELECT['human leg']"", ""FILTER['#1', 'that is standing']"", ""SELECT['dog']"", ""SELECT['setting']"", ""FILTER['#4', 'that is outdoor']"", ""FILTER['#2', 'in #5']"", ""FILTER['#3', 'next to #6']"", ""PROJECT['images of #REF', '#7']"", ""GROUP['count', '#7', '#8']"", ""COMPARATIVE['#8', '#9', 'is at least one']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is equal to one']""]","[""SELECT['human legs']"", ""FILTER['#1', 'that are standing']"", ""SELECT['dog']"", ""SELECT['setting']"", ""FILTER['#4', 'that is outdoor']"", ""FILTER['#2', 'in #5']"", ""FILTER['#6', 'next to #7']"", ""PROJECT['images of #REF', '#8']"", ""GROUP['count', '#8', '#9']"", ""COMPARATIVE['#9', '#10', 'is at least one']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is equal to one']""]"
NLVR2_dev_dev-886-1-0,"If in the right image, a gooseneck floor lamp curves over a round table.","[""SELECT['floor lamp']"", ""FILTER['#1', 'that is gooseneck']"", ""SELECT['table']"", ""FILTER['#3', 'that is round']"", ""FILTER['#2', 'that curves over #4']"", ""BOOLEAN['#5', 'is in the right image']""]","[""SELECT['floor lamp']"", ""FILTER['#1', 'that is gooseneck']"", ""SELECT['table']"", ""FILTER['#3', 'that is round']"", ""BOOLEAN['#2', 'curves over #4']""]"
NLVR2_dev_dev-886-2-1,If the lamp in the image on the right is hanging over the furniture.,"[""SELECT['right image']"", ""PROJECT['lamp in #REF', '#1']"", ""PROJECT['furniture in #REF', '#1']"", ""BOOLEAN['#2', 'is hanging over #3']""]","[""SELECT['the image on the right']"", ""PROJECT['the lamp in #REF', '#1']"", ""PROJECT['the furniture in #REF', '#1']"", ""BOOLEAN['#2', 'is hanging over #3']""]"
NLVR2_dev_dev-887-0-1,If the left and right image contains four bananas.,"[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['bananas in #REF', '#1']"", ""PROJECT['bananas in #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to four']"", ""BOOLEAN['#6', 'is equal to four']"", ""BOOLEAN['logical_and', 'true', '#7', '#8']""]","[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['bananas in #REF', '#1']"", ""PROJECT['bananas in #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to four']"", ""BOOLEAN['#6', 'is equal to four']"", ""BOOLEAN['logical_and', 'true', '#8', '#9']""]"
NLVR2_dev_dev-888-2-1,If a white and brown dog is standing in fallen leaves.,"[""SELECT['dog']"", ""FILTER['#1', 'that is white and brown']"", ""SELECT['leaves']"", ""FILTER['#3', 'that are fallen']"", ""BOOLEAN['#2', 'is standing in #4']""]","[""SELECT['dogs']"", ""FILTER['#1', 'that is white and brown']"", ""SELECT['leaves']"", ""FILTER['#3', 'that are fallen']"", ""BOOLEAN['#2', 'is standing in #4']""]"
NLVR2_dev_dev-888-3-0,If in one of the images in each pair a dog is standing on fallen maple leaves.,"[""SELECT['dog']"", ""SELECT['maple leaves']"", ""FILTER['#2', 'that are fallen']"", ""FILTER['#1','standing on #3']"", ""PROJECT['images of #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to two']""]","[""SELECT['dog']"", ""SELECT['maple leaves']"", ""FILTER['#2', 'that are fallen']"", ""FILTER['#1','standing on #3']"", ""BOOLEAN['#4', 'is in one of the images in each pair']""]"
NLVR2_dev_dev-889-0-1,"If one image shows a herd of at least 20 llamas led by multiple camera-facing white llamas, with mountain peaks behind them.","[""SELECT['llamas']"", ""FILTER['#1', 'that are white']"", ""FILTER['#2', 'that are camera-facing']"", ""SELECT['mountain peaks']"", ""FILTER['#3', 'that are behind #4']"", ""PROJECT['herd of #REF', '#5']"", ""GROUP['count', '#6', '#5']"", ""COMPARATIVE['#5', '#7', 'is at least 20']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to one']""]","[""SELECT['llamas']"", ""FILTER['#1', 'that are white']"", ""FILTER['#2', 'that are camera-facing']"", ""SELECT['mountain peaks']"", ""FILTER['#3', 'with #4 behind them']"", ""PROJECT['herd of #REF', '#5']"", ""GROUP['count', '#5', '#6']"", ""COMPARATIVE['#6', '#7', 'is at least 20']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to one']""]"
NLVR2_dev_dev-889-1-0,If there are people and llamas in the left image.,"[""SELECT['left image']"", ""PROJECT['people in #REF', '#1']"", ""PROJECT['llamas in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least two']"", ""BOOLEAN['#5', 'is at least two']"", ""BOOLEAN['logical_and', 'true', '#6', '#7']""]","[""SELECT['left image']"", ""PROJECT['people in #REF', '#1']"", ""PROJECT['llamas in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']"", ""BOOLEAN['#5', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#6', '#7']""]"
NLVR2_dev_dev-890-1-0,If the right image includes at least one man riding bareback on a horned animal on a dirt track flanked by spectators.,"[""SELECT['man']"", ""FILTER['#1', 'that is riding bareback']"", ""SELECT['animal']"", ""FILTER['#3', 'that is horned']"", ""SELECT['dirt track']"", ""SELECT['observers']"", ""FILTER['#5', 'flanked by #6']"", ""FILTER['#2', 'on #4']"", ""FILTER['#7', 'on #8']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is at least one']""]","[""SELECT['man']"", ""FILTER['#1', 'that is riding bareback']"", ""SELECT['animal']"", ""FILTER['#3', 'that is horned']"", ""SELECT['dirt track']"", ""SELECT['observers']"", ""FILTER['#5', 'flanked by #6']"", ""FILTER['#2', 'on #7']"", ""FILTER['#8', 'on #9']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is at least one']""]"
NLVR2_dev_dev-89-1-0,If an image shows exactly one stemmed glass of red wine with a sunset in the background.,"[""SELECT['glasses of wine']"", ""FILTER['#1', 'that is stemmed']"", ""FILTER['#2', 'that is red']"", ""SELECT['sunset']"", ""FILTER['#4', 'in the background']"", ""FILTER['#3', 'with #5']"", ""PROJECT['images of #REF', '#6']"", ""GROUP['count', '#6', '#7']"", ""COMPARATIVE['#7', '#8', 'is equal to one']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to one']""]","[""SELECT['glasses of wine']"", ""FILTER['#1', 'that are stemmed']"", ""FILTER['#2', 'that are red']"", ""SELECT['sunset']"", ""FILTER['#3', 'in the background']"", ""FILTER['#4', 'with #5']"", ""PROJECT['images of #REF', '#6']"", ""GROUP['count', '#6', '#7']"", ""COMPARATIVE['#7', '#8', 'is equal to one']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to one']""]"
NLVR2_dev_dev-891-2-0,"If in one image, a mountain dog is standing with its body pointed towards the right.","[""SELECT['mountain dog']"", ""FILTER['#1', 'that is standing']"", ""PROJECT['body of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is pointed towards the right']"", ""BOOLEAN['#4', 'is in one image']""]","[""SELECT['mountain dog']"", ""FILTER['#1','standing']"", ""PROJECT['body of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is pointed towards the right']"", ""BOOLEAN['#4', 'is in one image']""]"
NLVR2_dev_dev-891-3-1,If there is at most 1 adult dog facing left.,"[""SELECT['dogs']"", ""FILTER['#1', 'that are adults']"", ""FILTER['#2', 'that are facing left']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at most one']""]","[""SELECT['dogs']"", ""FILTER['#1', 'that are adults']"", ""FILTER['#2', 'that are facing left']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at most 1']""]"
NLVR2_dev_dev-89-2-1,If a bottle of wine is near at least one glass of red wine in one of the images.,"[""SELECT['bottle of wine']"", ""SELECT['glasses of wine']"", ""FILTER['#2', 'that are red']"", ""FILTER['#1', 'that is near #3']"", ""SELECT['images']"", ""GROUP['count', '#4', '#5']"", ""COMPARATIVE['#5', '#6', 'is at least one']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to one']""]","[""SELECT['bottle of wine']"", ""SELECT['glasses of wine']"", ""FILTER['#2', 'that are red']"", ""FILTER['#1', 'that #3 is near']"", ""SELECT['images']"", ""GROUP['count', '#4', '#5']"", ""COMPARATIVE['#5', '#6', 'is at least one']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to one']""]"
NLVR2_dev_dev-892-1-0,"If the left and right images show similar canoe designs, and at least one image shows multiple canoes side-by-side.","[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['canoe designs in #REF', '#1']"", ""PROJECT['canoe designs in #REF', '#2']"", ""BOOLEAN['#3', 'are similar']"", ""BOOLEAN['#4', 'are similar']"", ""BOOLEAN['logical_and', 'true', '#5', '#6']"", ""SELECT['images']"", ""PROJECT['canoes in #REF', '#8']"", ""FILTER['#9', 'that are side-by-side']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is at least two']"", ""BOOLEAN['logical_and', 'true', '#7', '#12']""]","[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['canoe designs of #REF', '#1']"", ""PROJECT['canoe designs of #REF', '#2']"", ""BOOLEAN['#3', 'are similar']"", ""BOOLEAN['#4', 'are similar']"", ""BOOLEAN['logical_and', 'true', '#5', '#6']"", ""SELECT['images']"", ""PROJECT['canoes in #REF', '#7']"", ""FILTER['#8', 'that are side-by-side']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is at least two']"", ""BOOLEAN['logical_and', 'true', '#6', '#11']""]"
NLVR2_dev_dev-892-1-1,If the left and right image contains a total of two wooden boats.,"[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['boats in #REF', '#1']"", ""PROJECT['boats in #REF', '#2']"", ""FILTER['#3', 'that are wooden']"", ""FILTER['#4', 'that are wooden']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#6']"", ""ARITHMETIC['sum', '#7', '#8']"", ""BOOLEAN['#9', 'is equal to two']""]","[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['boats in #REF', '#1']"", ""PROJECT['boats in #REF', '#2']"", ""FILTER['#3', 'that are wooden']"", ""FILTER['#4', 'that are wooden']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#6']"", ""ARITHMETIC['sum', '#7', '#8']"", ""BOOLEAN['#9', 'is equal to one']""]"
NLVR2_dev_dev-893-1-1,If an image shows a forward facing model in a pastel wrap with at least one hand gripping a matching towel around her neck.,"[""SELECT['model']"", ""FILTER['#1', 'that is forward facing']"", ""SELECT['painter wrap']"", ""FILTER['#2', 'in #3']"", ""PROJECT['hands of #REF', '#4']"", ""PROJECT['neck of #REF', '#4']"", ""SELECT['towel']"", ""FILTER['#7', 'that is matching #6 around #8']"", ""FILTER['#5', 'grasping #9']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is at least one']""]","[""SELECT['model']"", ""FILTER['#1', 'that is forward facing']"", ""SELECT['wrap']"", ""FILTER['#3', 'that is pastel']"", ""FILTER['#2', 'in #4']"", ""PROJECT['hands of #REF', '#5']"", ""PROJECT['neck of #REF', '#5']"", ""SELECT['towel']"", ""FILTER['#7', 'that is matching #8']"", ""FILTER['#6', 'grasping #9']"", ""FILTER['#10', 'around #11']"", ""BOOLEAN['#12', 'is in an image']""]"
NLVR2_dev_dev-893-2-0,"If in each image, a woman is drying her face with a towel.","[""SELECT['woman']"", ""PROJECT['face of #REF', '#1']"", ""SELECT['towel']"", ""FILTER['#1', 'drying #2 with #3']"", ""PROJECT['images of #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""SELECT['images']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to #8']""]","[""SELECT['woman']"", ""PROJECT['face of #REF', '#1']"", ""SELECT['towel']"", ""FILTER['#1', 'drying #2 with #3']"", ""PROJECT['images of #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""SELECT['images']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#6', 'is equal to #8']""]"
NLVR2_dev_dev-894-2-0,If the left and right image contains a total of three legs and two knee braces.,"[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['legs in #REF', '#1']"", ""PROJECT['knee braces in #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to three']"", ""BOOLEAN['#6', 'is equal to two']"", ""BOOLEAN['logical_and', 'true', '#7', '#8']""]","[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['legs in #REF', '#1']"", ""PROJECT['knee braces in #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['sum', '#5', '#6']"", ""BOOLEAN['#7', 'is equal to three']"", ""BOOLEAN['#8', 'is equal to two']"", ""BOOLEAN['logical_and', 'true', '#9', '#10."
NLVR2_dev_dev-894-3-1,"If one image shows one leg, which wears a black knee brace, and the other image shows a pair of legs, but only one wears a black knee brace.","[""SELECT['one image']"", ""PROJECT['leg in #REF', '#1']"", ""PROJECT['knee brace in #REF', '#1']"", ""FILTER['#3', 'that is black']"", ""BOOLEAN['#2', 'wears #4']"", ""SELECT['other image']"", ""PROJECT['pair of legs in #REF', '#6']"", ""PROJECT['knee brace in #REF', '#6']"", ""FILTER['#7', 'that is black']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#5', '#10']""]","[""SELECT['one image']"", ""PROJECT['leg in #REF', '#1']"", ""PROJECT['knee brace in #REF', '#1']"", ""FILTER['#3', 'that is black']"", ""BOOLEAN['#2', 'wears #4']"", ""SELECT['other image']"", ""PROJECT['pair of legs in #REF', '#6']"", ""PROJECT['knee brace in #REF', '#6']"", ""FILTER['#8', 'that is black']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#5', '#11']""]"
NLVR2_dev_dev-895-0-0,If the left image contains exactly two pandas.,"[""SELECT['the left image']"", ""PROJECT['pandas in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']""]","[""SELECT['left image']"", ""PROJECT['pandas in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is exactly two']""]"
NLVR2_dev_dev-895-0-1,If an image shows multiple people in protective sky-blue garments holding pandas on their laps,"[""SELECT['people']"", ""SELECT['garments']"", ""FILTER['#2', 'that are protective']"", ""FILTER['#3', 'that are sky-blue']"", ""FILTER['#1', 'in #4']"", ""PROJECT['laps of #REF', '#5']"", ""SELECT['pandas']"", ""COMPARATIVE['#5', '#6', 'are holding #7 on']"", ""PROJECT['images of #REF', '#8']"", ""GROUP['count', '#8', '#9']"", ""COMPARATIVE['#9', '#10', 'is at least two']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is equal to one']""]","[""SELECT['people']"", ""SELECT['garments']"", ""FILTER['#2', 'that are protective']"", ""FILTER['#3', 'that are sky-blue']"", ""FILTER['#1', 'in #4']"", ""PROJECT['laps of #REF', '#5']"", ""SELECT['pandas']"", ""COMPARATIVE['#5', '#6', 'are holding #7']"", ""PROJECT['images of #REF', '#8']"", ""GROUP['count', '#8', '#9']"", ""COMPARATIVE['#9', '#10', 'is at least two']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is equal to one']""]"
NLVR2_dev_dev-896-3-0,If in at least one image there are five bottles of beer.,"[""SELECT['bottles of beer']"", ""SELECT['images']"", ""GROUP['count', '#1', '#2']"", ""COMPARATIVE['#2', '#3', 'is equal to five']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']""]","[""SELECT['images']"", ""PROJECT['bottles of beer in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is equal to five']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']""]"
NLVR2_dev_dev-897-3-0,"If one image shows a bottle next to a white cylinder but not overlapping it, and the other image shows a single upright bottle.","[""SELECT['one image']"", ""PROJECT['bottle in #REF', '#1']"", ""PROJECT['cylinder in #REF', '#1']"", ""FILTER['#3', 'that is white']"", ""FILTER['#2', 'that is next to #4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least one']"", ""SELECT['the other image']"", ""PROJECT['bottles in #REF', '#8']"", ""FILTER['#9', 'that are upright']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#7', '#12']""]","[""SELECT['one image']"", ""PROJECT['bottle in #REF', '#1']"", ""PROJECT['cylinder in #REF', '#1']"", ""FILTER['#3', 'that is white']"", ""FILTER['#2', 'that is next to #4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']"", ""SELECT['other image']"", ""PROJECT['bottle in #REF', '#8']"", ""FILTER['#9', 'that is upright']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#7', '#12']""]"
NLVR2_dev_dev-897-3-1,If the perfume on the right is next to its box.,"[""SELECT['perfume']"", ""FILTER['#1', 'that is on the right']"", ""PROJECT['box of #REF', '#2']"", ""BOOLEAN['#2', 'is next to #3']""]","[""SELECT['perfumes']"", ""FILTER['#1', 'on the right']"", ""PROJECT['box of #REF', '#2']"", ""BOOLEAN['#2', 'is next to #3']""]"
NLVR2_dev_dev-898-0-0,"If an image features a bluish vase with orange flowers in it, standing in front of an open window.","[""SELECT['vase']"", ""FILTER['#1', 'that is bluish']"", ""SELECT['flowers']"", ""FILTER['#3', 'that are orange']"", ""FILTER['#2', 'with #4 in it']"", ""SELECT['window']"", ""FILTER['#6', 'that is open']"", ""FILTER['#5','standing in front of #7']"", ""BOOLEAN['#8', 'is in an image']""]","[""SELECT['vase']"", ""FILTER['#1', 'that is bluish']"", ""SELECT['flowers']"", ""FILTER['#3', 'that are orange']"", ""FILTER['#2', 'with #4 in it']"", ""SELECT['window']"", ""FILTER['#5', 'that is open']"", ""FILTER['#6','standing in front of #7']"", ""BOOLEAN['#8', 'is in an image']""]"
NLVR2_dev_dev-899-1-1,"If the left image contains a dog that is standing up and turned forward, and the right image features a dog wearing a blue collar with its head and gaze raised.","[""SELECT['dog']"", ""FILTER['#1', 'that is standing up']"", ""FILTER['#2', 'that is turned forward']"", ""BOOLEAN['#3', 'is in the left image']"", ""SELECT['collar']"", ""FILTER['#5', 'that is blue']"", ""PROJECT['head of #REF', '#6']"", ""COMPARATIVE['#6', '#7', 'is raised']"", ""PROJECT['gaze of #REF', '#8']"", ""COMPARATIVE['#8', '#9', 'is raised']"", ""INTERSECTION['#8', '#10', '#11']"", ""BOOLEAN['#12', 'is in the right image']""]","[""SELECT['dog']"", ""FILTER['#1', 'that is standing up']"", ""FILTER['#2', 'that is turned forward']"", ""BOOLEAN['#3', 'is in the left image']"", ""SELECT['collar']"", ""FILTER['#5', 'that is blue']"", ""PROJECT['head of #REF', '#6']"", ""PROJECT['gaze of #REF', '#6']"", ""COMPARATIVE['#6', '#7', 'is raised']"", ""BOOLEAN['#8', 'is in the right image']"", ""BOOLEAN['logical_and', 'true', '#4', '#9']""]"
NLVR2_dev_dev-899-3-0,If one of the dogs' collars is bright blue.,"[""SELECT['dogs']"", ""PROJECT['collars of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are bright blue']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]","[""SELECT['dogs']"", ""PROJECT['collars of #REF', '#1']"", ""FILTER['#2', 'that is bright blue']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]"
NLVR2_dev_dev-90-0-0,If there is a wooden desk with a laptop and an office chair on wheels,"[""SELECT['desk']"", ""FILTER['#1', 'that is wooden']"", ""SELECT['laptop']"", ""BOOLEAN['#2', 'is with #3']"", ""SELECT['office chair']"", ""PROJECT['wheels of #REF', '#5']"", ""BOOLEAN['#6', 'are on #7']"", ""BOOLEAN['logical_and', 'true', '#4', '#8']""]","[""SELECT['desk']"", ""FILTER['#1', 'that is wooden']"", ""SELECT['laptop']"", ""BOOLEAN['#2', 'is with #3']"", ""SELECT['office chair']"", ""PROJECT['wheels of #REF', '#5']"", ""BOOLEAN['#6', 'is on #7']"", ""BOOLEAN['logical_and', 'true', '#4', '#8']""]"
NLVR2_dev_dev-900-0-1,If there are 2 pairs of mittens shown.,"[""SELECT['pairs of mittens']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to two']""]","[""SELECT['pair of mittens']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to 2']""]"
NLVR2_dev_dev-900-1-0,If a mitten is being worn in one image and the mittens are not being worn in the other image.,"[""SELECT['one image']"", ""PROJECT['mitten in #REF', '#1']"", ""BOOLEAN['#2', 'is being worn']"", ""SELECT['other image']"", ""PROJECT['mittens in #REF', '#4']"", ""BOOLEAN['#5', 'are not being worn']"", ""BOOLEAN['logical_and', 'true', '#3', '#6']""]","[""SELECT['one image']"", ""PROJECT['mitten in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']"", ""SELECT['other image']"", ""PROJECT['mittens in #REF', '#5']"", ""BOOLEAN['#6', 'are not being worn']"", ""BOOLEAN['logical_and', 'true', '#4', '#7']""]"
NLVR2_dev_dev-90-1-1,"If an image shows a laptop on a pull-out tray of a desk surrounded by shelves, with a chair on wheels next to it.","[""SELECT['laptop']"", ""SELECT['desk']"", ""SELECT['shelves']"", ""FILTER['#2','surrounded by #3']"", ""PROJECT['pull-out tray of #REF', '#4']"", ""FILTER['#1', 'on #5']"", ""SELECT['chair']"", ""FILTER['#6', 'on wheels']"", ""FILTER['#7', 'next to #8']"", ""BOOLEAN['#9', 'is in an image']""]","[""SELECT['laptop']"", ""SELECT['desk']"", ""SELECT['shelves']"", ""FILTER['#2','surrounded by #3']"", ""SELECT['chair']"", ""FILTER['#5', 'on wheels']"", ""FILTER['#6', 'next to #4']"", ""FILTER['#1', 'on #7']"", ""BOOLEAN['#8', 'is in an image']""]"
NLVR2_dev_dev-902-1-0,If in at least one image there is a single round horned ox laying in the water facing right foward.,"[""SELECT['ox']"", ""FILTER['#1', 'that is round']"", ""FILTER['#2', 'that is horned']"", ""SELECT['the water']"", ""FILTER['#3', 'laying in #4']"", ""FILTER['#5', 'facing right foward']"", ""PROJECT['images of #REF', '#6']"", ""GROUP['count', '#6', '#7']"", ""COMPARATIVE['#7', '#8', 'is equal to one']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is at least one']""]","[""SELECT['ox']"", ""FILTER['#1', 'that is round']"", ""FILTER['#2', 'that is horned']"", ""SELECT['water']"", ""FILTER['#3', 'laying in #4']"", ""FILTER['#5', 'facing right foward']"", ""PROJECT['images of #REF', '#6']"", ""GROUP['count', '#6', '#7']"", ""COMPARATIVE['#7', '#8', 'is equal to one']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is at least one']""]"
NLVR2_dev_dev-903-2-1,If at least one of the dogs has a small toy in front of him.,"[""SELECT['dogs']"", ""SELECT['small toy']"", ""FILTER['#1', 'that has #2 in front of him']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']""]","[""SELECT['dogs']"", ""SELECT['toy']"", ""FILTER['#2', 'that is small']"", ""FILTER['#1', 'in front of #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5."
NLVR2_dev_dev-904-1-1,If the right image has a boat with 3 sails  open,"[""SELECT['right image']"", ""PROJECT['boat in #REF', '#1']"", ""PROJECT['sails of #REF', '#2']"", ""FILTER['#3', 'that are open']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to 3']""]","[""SELECT['boat']"", ""PROJECT['sails of #REF', '#1']"", ""FILTER['#2', 'that are open']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is equal to 3']"", ""BOOLEAN['#5', 'is in right image']""]"
NLVR2_dev_dev-904-2-0,If both boats are heading to the right.,"[""SELECT['boats']"", ""FILTER['#1', 'that are heading right']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']""]","[""SELECT['boats']"", ""BOOLEAN['#1', 'are heading to the right']""]"
NLVR2_dev_dev-905-3-0,If the right image has no more than one golf ball.,"[""SELECT['the right image']"", ""PROJECT['golf balls in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at most one']""]","[""SELECT['right image']"", ""PROJECT['golf ball of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at most one']""]"
NLVR2_dev_dev-905-3-1,If a putter is next to a single ball in one of the images.,"[""SELECT['putter']"", ""SELECT['ball']"", ""FILTER['#1', 'that is next to #2']"", ""BOOLEAN['#3', 'is in one of the images']""]","[""SELECT['putter']"", ""SELECT['ball']"", ""FILTER['#1', 'that is next to #2']"", ""PROJECT['images of #REF', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']""]"
NLVR2_dev_dev-906-2-0,"If one of the bowls is white, and one of the substances does not have any green seasoning.","[""SELECT['bowls']"", ""FILTER['#1', 'that are white']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']"", ""SELECT['seasoning']"", ""FILTER['#5', 'that is green']"", ""DISCARD['#5', '#6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#4', '#9']""]","[""SELECT['bowls']"", ""FILTER['#1', 'that is white']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']"", ""SELECT['seasoning']"", ""FILTER['#5', 'that is green']"", ""DISCARD['#5', '#6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#4', '#9']""]"
NLVR2_dev_dev-906-3-1,If each image shows a creamy mashed food mixed with chopped green bits and served in a round bowl.,"[""SELECT['food']"", ""FILTER['#1', 'that is mashed']"", ""FILTER['#2', 'that is creamy']"", ""SELECT['bits']"", ""FILTER['#4', 'that are chopped']"", ""FILTER['#5', 'that are green']"", ""FILTER['#3','mixed with #6']"", ""SELECT['bowl']"", ""FILTER['#8', 'that is round']"", ""FILTER['#7','served in #9']"", ""PROJECT['images of #REF', '#10']"", ""SELECT['images']"", ""AGGREGATE['count', '#11']"", ""AGGREGATE['count', '#12']"", ""BOOLEAN['#13', 'is equal to #14']""]","[""SELECT['food']"", ""FILTER['#1', 'that is mashed']"", ""FILTER['#2', 'that is creamy']"", ""SELECT['bits']"", ""FILTER['#4', 'that are chopped']"", ""FILTER['#5', 'that are green']"", ""FILTER['#3','mixed with #6']"", ""SELECT['bowl']"", ""FILTER['#7', 'that is round']"", ""FILTER['#8','served in #9']"", ""PROJECT['images of #REF', '#10']"", ""AGGREGATE['count', '#11']"", ""SELECT['images']"", ""AGGREGATE['count', '#12']"", ""BOOLEAN['#13', 'is equal to #14']""]"
NLVR2_dev_dev-907-0-1,If at least one dog is creating a splash of water and at least two dogs have a front paw lifted off the ground.,"[""SELECT['dogs']"", ""SELECT['splash of water']"", ""FILTER['#1', 'creating #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']"", ""PROJECT['front paw of #REF', '#1']"", ""SELECT['ground']"", ""COMPARATIVE['#1', '#6', 'is lifted off #7']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is at least two']"", ""BOOLEAN['logical_and', 'true', '#5', '#10']""]","[""SELECT['dogs']"", ""SELECT['splash of water']"", ""FILTER['#1', 'creating #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']"", ""PROJECT['front paw of #REF', '#2']"", ""SELECT['ground']"", ""COMPARATIVE['#2', '#6', 'is lifted off #7']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is at least two']"", ""BOOLEAN['logical_and', 'true', '#5', '#10']""]"
NLVR2_dev_dev-907-1-0,If a dog has both front paws off the ground.,"[""SELECT['dog']"", ""PROJECT['front paws of #REF', '#1']"", ""SELECT['ground']"", ""COMPARATIVE['#1', '#2', 'are off #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to two']""]","[""SELECT['dog']"", ""PROJECT['front paws of #REF', '#1']"", ""SELECT['the ground']"", ""COMPARATIVE['#1', '#2', 'are off #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to two']""]"
NLVR2_dev_dev-908-3-0,If there are two circle pizza.,"[""SELECT['pizzas']"", ""FILTER['#1', 'that are circle']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']""]","[""SELECT['pizzas']"", ""FILTER['#1', 'that are circles']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']""]"
NLVR2_dev_dev-908-3-1,If one pizza contains pepperoni.,"[""SELECT['pizzas']"", ""SELECT['pepperoni']"", ""FILTER['#1', 'that contain #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]","[""SELECT['pizzas']"", ""SELECT['pepperoni']"", ""FILTER['#1', 'with #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]"
NLVR2_dev_dev-909-0-0,"If in one image, there is a wine glass to the left of a wine bottle.","[""SELECT['wine glass']"", ""SELECT['wine bottle']"", ""FILTER['#1', 'to the left of #2']"", ""BOOLEAN['#3', 'is in one image']""]","[""SELECT['wine glass']"", ""SELECT['wine bottle']"", ""BOOLEAN['#1', 'is to the left of #2']""]"
NLVR2_dev_dev-909-2-1,If in at least one image there is a bottle of wine and a glass with red wine in it.,"[""SELECT['bottle of wine']"", ""SELECT['glass']"", ""SELECT['wine']"", ""FILTER['#3', 'that is red']"", ""FILTER['#1', 'with #4 in it']"", ""BOOLEAN['#5', 'is in at least one image']""]","[""SELECT['bottle of wine']"", ""SELECT['glass']"", ""SELECT['wine']"", ""FILTER['#3', 'that is red']"", ""FILTER['#1', 'with #4 in it']"", ""PROJECT['images of #REF', '#5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least one']""]"
NLVR2_dev_dev-9-1-0,"If one image shows a single open-mouthed pup, and the other shows at least one blue-eyed dog with upright ears.","[""SELECT['one image']"", ""PROJECT['pups in #REF', '#1']"", ""FILTER['#2', 'that are open-mouthed']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']"", ""SELECT['the other image']"", ""PROJECT['dogs in #REF', '#6']"", ""FILTER['#7', 'that are blue-eyed']"", ""PROJECT['ears of #REF', '#8']"", ""COMPARATIVE['#8', '#9', 'are upright']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#6', '#12']""]","[""SELECT['one image']"", ""PROJECT['pups in #REF', '#1']"", ""FILTER['#2', 'that are open-mouthed']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']"", ""SELECT['other image']"", ""PROJECT['dogs in #REF', '#6']"", ""FILTER['#7', 'that are blue-eyed']"", ""PROJECT['ears of #REF', '#8']"", ""COMPARATIVE['#8', '#9', 'are upright']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#6', '#12']""]"
NLVR2_dev_dev-910-1-0,If there is a little boy touching a marmot head to head,"[""SELECT['boy']"", ""FILTER['#1', 'that is little']"", ""SELECT['marmot']"", ""BOOLEAN['#2', 'is touching #3 head to head']""]","[""SELECT['boy']"", ""FILTER['#1', 'that is little']"", ""SELECT['marmot']"", ""FILTER['#2', 'touching #3 head to head']"", ""BOOLEAN['#4', 'is in #3']""]"
NLVR2_dev_dev-910-2-1,If there is exactly one boy and one marmot in the right image.,"[""SELECT['right image']"", ""PROJECT['boy in #REF', '#1']"", ""PROJECT['marmot in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']"", ""BOOLEAN['#5', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#6', '#7']""]","[""SELECT['right image']"", ""PROJECT['boys in #REF', '#1']"", ""PROJECT['marmots in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']"", ""BOOLEAN['#5', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#6', '#7']”]"
NLVR2_dev_dev-91-1-0,If there is one dog standing in the grass and one dog sitting on carpet.,"[""SELECT['dogs']"", ""SELECT['grass']"", ""FILTER['#1','standing in #2']"", ""SELECT['carpet']"", ""FILTER['#1','sitting on #4']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']"", ""BOOLEAN['#8', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#9', '#10']""]","[""SELECT['dogs']"", ""SELECT['grass']"", ""FILTER['#1','standing in #2']"", ""SELECT['carpet']"", ""FILTER['#1','sitting on #4']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']"", ""BOOLEAN['#7', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#8', '#9']""]"
NLVR2_dev_dev-91-1-1,"If there are two dogs, and one of them is indoors while the other one is outdoors.","[""SELECT['dogs']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to two']"", ""FILTER['#1', 'that is indoors']"", ""FILTER['#1', 'that is outdoors']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#3', '#6']""]","[""SELECT['dogs']"", ""FILTER['#1', 'that are indoors']"", ""FILTER['#1', 'that are outdoors']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']"", ""BOOLEAN['#5', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#6', '#7']""]"
NLVR2_dev_dev-911-1-0,If the right image contains customers standing in front of a glass display case.,"[""SELECT['customers']"", ""SELECT['display case']"", ""FILTER['#2', 'that is glass']"", ""FILTER['#1','standing in front of #3']"", ""BOOLEAN['#4', 'are in the right image']""]","[""SELECT['customers']"", ""SELECT['display case']"", ""FILTER['#2', 'that is glass']"", ""FILTER['#1','standing in front of #3']"", ""BOOLEAN['#4', 'is in right image']""]"
NLVR2_dev_dev-912-3-0,If two burds are pirched together on a tree branch,"[""SELECT['burds']"", ""SELECT['tree branch']"", ""FILTER['#1', 'that are pirched together']"", ""FILTER['#3', 'on #2']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to two']""]","[""SELECT['burds']"", ""SELECT['tree branch']"", ""FILTER['#1', 'that are pirched together']"", ""FILTER['#2', 'on #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to two']""]"
NLVR2_dev_dev-912-3-1,If two birds are touching heads.,"[""SELECT['birds']"", ""PROJECT['heads of #REF', '#1']"", ""FILTER['#1', 'that are touching #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']""]","[""SELECT['birds']"", ""PROJECT['heads of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are touching']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is two']""]"
NLVR2_dev_dev-913-1-1,If one bottle is at least partly green.,"[""SELECT['bottles']"", ""FILTER['#1', 'that are at least partly green']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']""]","[""SELECT['bottles']"", ""FILTER['#1', 'that are at least partially green']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to one']""]"
NLVR2_dev_dev-913-3-0,If the left image contains at least two bottles.,"[""SELECT['left image']"", ""PROJECT['bottles in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least two']""]","[""SELECT['left image']"", ""PROJECT['bottle in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least two']""]"
NLVR2_dev_dev-914-2-0,If the skunk in the right image is looking straight ahead.,"[""SELECT['right image']"", ""PROJECT['skunk in #REF', '#1']"", ""BOOLEAN['#2', 'is looking straight ahead']""]","[""SELECT['the right image']"", ""PROJECT['the skunk in #REF', '#1']"", ""BOOLEAN['#2', 'is looking straight ahead']""]"
NLVR2_dev_dev-914-2-1,"If left and right images show a skunk in partial profile with its tail raised, and at least one image shows a real skunk with white striped back.","[""SELECT['left image']"", ""PROJECT['skunk in #REF', '#1']"", ""FILTER['#2', 'that is in partial profile']"", ""PROJECT['tail of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is raised']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least one']"", ""SELECT['right image']"", ""PROJECT['skunk in #REF', '#8']"", ""FILTER['#9', 'that is real']"", ""PROJECT['back of #REF', '#10']"", ""COMPARATIVE['#10', '#11', 'is white striped']"", ""AGGREGATE['count', '#12']"", ""BOOLEAN['#13', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#7', '#14']""]","[""SELECT['skunk']"", ""FILTER['#1', 'in partial profile']"", ""PROJECT['tail of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is raised']"", ""BOOLEAN['#4', 'is in the left image']"", ""BOOLEAN['#4', 'is in the right image']"", ""BOOLEAN['logical_and', 'true', '#5', '#6']"", ""SELECT['real']"", ""PROJECT['back of #REF', '#8']"", ""COMPARATIVE['#8', '#9', 'is white striped']"", ""BOOLEAN['logical_and', 'true', '#7', '#10']""]"
NLVR2_dev_dev-915-1-0,If a beetle is facing left in one of the images.,"[""SELECT['beetle']"", ""FILTER['#1', 'that is facing left']"", ""BOOLEAN['#2', 'is in one of the images']""]","[""SELECT['beetles']"", ""FILTER['#1', 'that is facing left']"", ""BOOLEAN['#2', 'is in one image']""]"
NLVR2_dev_dev-915-1-1,If there are two beetles facing in opposite directions.,"[""SELECT['beetles']"", ""PROJECT['directions facing of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are opposite']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']""]","[""SELECT['beetles']"", ""PROJECT['direction facing of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are opposite']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']""]"
NLVR2_dev_dev-916-1-0,If one image shows anemone tendrils with peach coloring sprouting from black-and-white zebra striped stalks.,"[""SELECT['anemone tendrils']"", ""PROJECT['coloring of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is peach']"", ""SELECT['stalks']"", ""FILTER['#4', 'that are black-and-white']"", ""FILTER['#5', 'that are zebra striped']"", ""FILTER['#3','spraying from #6']"", ""BOOLEAN['#7', 'are in one image']""]","[""SELECT['anemone tendrils']"", ""PROJECT['coloring of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is peach']"", ""SELECT['stalks']"", ""FILTER['#4', 'that are black-and-white']"", ""FILTER['#5', 'that are zebra striped']"", ""FILTER['#3','spraying from #6']"", ""BOOLEAN['#7', 'is in one image']""]"
NLVR2_dev_dev-916-2-1,If at least one of anemones is white with dark stripes.,"[""SELECT['anemones']"", ""FILTER['#1', 'that are white']"", ""PROJECT['stripes of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'are dark']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']""]","[""SELECT['anemones']"", ""FILTER['#1', 'that are white']"", ""SELECT['stripes']"", ""FILTER['#3', 'that are dark']"", ""FILTER['#2', 'with #4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least one']""]"
NLVR2_dev_dev-917-2-0,If the head scarf of one of the dogs has a plaid pattern on it.,"[""SELECT['dogs']"", ""PROJECT['head scarf of #REF', '#1']"", ""SELECT['pattern']"", ""FILTER['#3', 'that is plaid']"", ""COMPARATIVE['#1', '#2', 'has #4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']""]","[""SELECT['dogs']"", ""PROJECT['head scarf of #REF', '#1']"", ""SELECT['pattern']"", ""FILTER['#3', 'that is plaid']"", ""BOOLEAN['#2', 'has #4 on']""]"
NLVR2_dev_dev-917-3-1,If in at least one image there is a brown dog with a brown leash and checkered scarf.,"[""SELECT['dog']"", ""FILTER['#1', 'that is brown']"", ""SELECT['leash']"", ""FILTER['#3', 'that is brown']"", ""SELECT['scarf']"", ""FILTER['#5', 'that is checkered']"", ""FILTER['#2', 'with #4']"", ""BOOLEAN['#6', 'is in at least one image']""]","[""SELECT['dog']"", ""FILTER['#1', 'that is brown']"", ""PROJECT['leash of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is brown']"", ""SELECT['scarf']"", ""FILTER['#5', 'that is checkered']"", ""FILTER['#4', 'with #6']"", ""BOOLEAN['#7', 'is in at least one image']""]"
NLVR2_dev_dev-918-1-0,If a roll of paper towels is hanging on a paper towel holder.,"[""SELECT['roll of paper towels']"", ""SELECT['paper towel holder']"", ""BOOLEAN['#1', 'is hanging on #2']""]","[""SELECT['roll of paper towel']"", ""SELECT['paper towel holder']"", ""BOOLEAN['#1', 'is hanging on #2']""]"
NLVR2_dev_dev-918-2-1,If a roll of paper towels is in a holder,"[""SELECT['roll of paper towels']"", ""SELECT['holder']"", ""BOOLEAN['#1', 'is in #2']""]","[""SELECT['roll of paper towels']"", ""PROJECT['holder of #REF', '#1']"", ""BOOLEAN['#1', 'is in #2']""]"
NLVR2_dev_dev-919-3-0,If there are at least two long cylindrical vases containing white flowers in the left image.,"[""SELECT['left image']"", ""PROJECT['vases in #REF', '#1']"", ""FILTER['#2', 'that are cylindrical']"", ""FILTER['#3', 'that are long']"", ""PROJECT['flowers in #REF', '#1']"", ""FILTER['#5', 'that are white']"", ""FILTER['#4', 'containing #6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is at least two']""]","[""SELECT['left image']"", ""PROJECT['vases in #REF', '#1']"", ""FILTER['#2', 'that are long']"", ""FILTER['#3', 'that are cylindrical']"", ""PROJECT['flowers in #REF', '#1']"", ""FILTER['#5', 'that are white']"", ""FILTER['#4', 'containing #6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is at least two']""]"
NLVR2_dev_dev-920-0-1,"If a single pencil case is open to display color pencils, the pencils are painted in the color they are","[""SELECT['pencil cases']"", ""FILTER['#1', 'that are open']"", ""SELECT['pencils']"", ""PROJECT['color of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is the same as #2']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']""]","[""SELECT['pencil cases']"", ""FILTER['#1', 'that are open']"", ""SELECT['pencils']"", ""PROJECT['color of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is the same as #2']"", ""BOOLEAN['#5', 'are painted in']""]"
NLVR2_dev_dev-92-0-1,If both images have a window visible in the background.,"[""SELECT['window']"", ""FILTER['#1', 'that is visible in the background']"", ""PROJECT['images of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']""]","[""SELECT['window']"", ""FILTER['#1', 'that is in the background']"", ""BOOLEAN['#2', 'is in both images']""]"
NLVR2_dev_dev-920-2-0,"If in the right image, there's a single pink pencil case with several colored pencils inside.","[""SELECT['the right image']"", ""PROJECT['pencil cases in #REF', '#1']"", ""FILTER['#2', 'that are pink']"", ""PROJECT['pencils in #REF', '#1']"", ""FILTER['#4', 'that are colored']"", ""FILTER['#3', 'with #5 inside']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']""]","[""SELECT['the right image']"", ""PROJECT['pencil cases in #REF', '#1']"", ""FILTER['#2', 'that are pink']"", ""PROJECT['pencils in #REF', '#1']"", ""FILTER['#4', 'that are colored']"", ""FILTER['#5', 'inside']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']""]"
NLVR2_dev_dev-921-2-1,"If all storage units pictured are footed, and one has two sliding wooden doors in the base and an open-backed hutch on top.","[""SELECT['storage units']"", ""FILTER['#1', 'that are footed']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to #4']"", ""PROJECT['base of #REF', '#5']"", ""SELECT['doors']"", ""FILTER['#7', 'that are sliding']"", ""FILTER['#8', 'that are wooden']"", ""FILTER['#9', 'on #6']"", ""SELECT['hutch']"", ""FILTER['#10', 'that is open-backed']"", ""FILTER['#11', 'on top']"", ""AGGREGATE['count', '#12']"", ""BOOLEAN['#13', 'is equal to two']"", ""BOOLEAN['logical_and', 'true', '#7', '#14']""]","[""SELECT['storage units']"", ""FILTER['#1', 'that are footed']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to #4']"", ""PROJECT['base of #REF', '#5']"", ""SELECT['doors']"", ""FILTER['#7', 'that are sliding']"", ""FILTER['#8', 'that are wooden']"", ""FILTER['#9', 'in #6']"", ""SELECT['hutch']"", ""FILTER['#10', 'that is open-backed']"", ""FILTER['#11', 'on top of #12']"", ""AGGREGATE['count', '#13']"", ""BOOLEAN['#14', 'is equal to two']"", ""BOOLEAN['logical_and', 'true', '#7', '#15']""]"
NLVR2_dev_dev-921-3-0,"If there are wooden shelves, but there is nothing in the shelves.","[""SELECT['shelves']"", ""FILTER['#1', 'that are wooden']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least two']"", ""BOOLEAN['#2', 'is equal to zero']"", ""BOOLEAN['logical_and', 'true', '#4', '#5']""]","[""SELECT['shelves']"", ""FILTER['#1', 'that are wooden']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least two']"", ""SELECT['shelves']"", ""BOOLEAN['#5', 'is nothing']"", ""BOOLEAN['logical_and', 'true', '#4', '#6']""]"
NLVR2_dev_dev-92-2-0,If one woman is wearing a night gown.,"[""SELECT['woman']"", ""SELECT['night gown']"", ""FILTER['#1', 'wearing #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]","[""SELECT['woman']"", ""SELECT['night gowns']"", ""FILTER['#1', 'wearing #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]"
NLVR2_dev_dev-922-0-0,If the left image contains no more than three ducks.,"[""SELECT['left image']"", ""PROJECT['ducks in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at most three']""]","[""SELECT['left image']"", ""PROJECT['ducks in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is no more than three']""]"
NLVR2_dev_dev-922-2-1,If there are four or more animals very close to each other on the grass in the image to the left.,"[""SELECT['left image']"", ""PROJECT['animals in #REF', '#1']"", ""FILTER['#2', 'that are very close to each other']"", ""PROJECT['grass in #REF', '#1']"", ""FILTER['#3', 'on #4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least four']""]","[""SELECT['the image to the left']"", ""PROJECT['animals in #REF', '#1']"", ""FILTER['#2', 'that are very close to each other']"", ""PROJECT['the grass in #REF', '#1']"", ""FILTER['#3', 'on #4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least four."
NLVR2_dev_dev-923-1-0,If only one gerbil per picture.,"[""SELECT['gerbils']"", ""SELECT['pictures']"", ""GROUP['count', '#1', '#2']"", ""COMPARATIVE['#2', '#3', 'is equal to one']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']""]","[""SELECT['gerbils']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to one']""]"
NLVR2_dev_dev-924-3-0,If at least one piece of dough is sitting on a surface that has been dusted with flour.,"[""SELECT['piece of dough']"", ""SELECT['surface']"", ""FILTER['#2', 'that has been dusted with flour']"", ""FILTER['#1','sitting on #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']""]","[""SELECT['piece of dough']"", ""SELECT['surface']"", ""SELECT['flour']"", ""FILTER['#2', 'dusted with #3']"", ""FILTER['#1','sitting on #4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least one']""]"
NLVR2_dev_dev-924-3-1,If three or more fingers are visible.,"[""SELECT['fingers']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is at least three']""]","[""SELECT['fingers']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is at least three']""]-"
NLVR2_dev_dev-925-0-0,If there are 10 cups in one image,"[""SELECT['cups']"", ""SELECT['images']"", ""GROUP['count', '#1', '#2']"", ""COMPARATIVE['#2', '#3', 'is equal to 10']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']""]","[""SELECT['cups']"", ""SELECT['images']"", ""GROUP['count', '#1', '#2']"", ""COMPARATIVE['#2', '#3', 'is equal to 10']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']""]"
NLVR2_dev_dev-925-3-1,If there are more teacups in the image on the right.,"[""SELECT['teacups']"", ""SELECT['right image']"", ""FILTER['#1', 'in #2']"", ""DISCARD['#1', '#3']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is higher than #6']""]","[""SELECT['teacups']"", ""SELECT['right image']"", ""FILTER['#1', 'that are in #2']"", ""DISCARD['#1', '#3']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is higher than #6']""]"
NLVR2_dev_dev-926-0-0,If there are yellow flowers on one of the centered coffee tables.,"[""SELECT['flowers']"", ""FILTER['#1', 'that are yellow']"", ""SELECT['coffee tables']"", ""FILTER['#3', 'that are centered']"", ""FILTER['#2', 'on #4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']""]","[""SELECT['flowers']"", ""FILTER['#1', 'that are yellow']"", ""SELECT['coffee tables']"", ""FILTER['#3', 'that are centered']"", ""BOOLEAN['#2', 'are on #4']""]"
NLVR2_dev_dev-926-1-1,If the left and right image contains a total of six blinds.,"[""SELECT['left image']"", ""SELECT['right image']"", ""PROJECT['blinds in #REF', '#1']"", ""PROJECT['blinds in #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['sum', '#5', '#6']"", ""BOOLEAN['#7', 'is equal to six']""]","[""SELECT['blinds']"", ""SELECT['left image']"", ""SELECT['right image']"", ""FILTER['#1', 'in #2']"", ""FILTER['#1', 'in #3']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""ARITHMETIC['sum', '#6', '#7']"", ""BOOLEAN['#8', 'is equal to six']""]"
NLVR2_dev_dev-927-0-0,"If at least five orange dogs without collars sit upright in a row, gazing intently, in one image, and the other image includes dogs in collars arranged more or less in a row.","[""SELECT['one image']"", ""PROJECT['dogs in #REF', '#1']"", ""FILTER['#2', 'without collars']"", ""FILTER['#3', 'that sit upright']"", ""FILTER['#4', 'that are gazing intently']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least five']"", ""SELECT['other image']"", ""PROJECT['dogs in #REF', '#8']"", ""PROJECT['collars in #REF', '#8']"", ""FILTER['#9', 'that are arranged more or less in a row']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is at least two']"", ""BOOLEAN['logical_and', 'true', '#6', '#12']""]","[""SELECT['one image']"", ""PROJECT['dogs in #REF', '#1']"", ""FILTER['#2', 'without collars']"", ""FILTER['#3', 'that sit upright']"", ""FILTER['#4', 'that are gazing intently']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least five']"", ""SELECT['other image']"", ""PROJECT['dogs in #REF', '#8']"", ""PROJECT['collars in #REF', '#8']"", ""FILTER['#9', 'that are arranged more or less in a row']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is at least two']"", ""BOOLEAN['logical_and', 'true', '#7', '#12']""]"
NLVR2_dev_dev-927-1-1,If the left image contains no more than four dogs.,"[""SELECT['left image']"", ""PROJECT['dogs of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at most four']""]","[""SELECT['left image']"", ""PROJECT['dogs of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to four']""]"
NLVR2_dev_dev-928-0-0,If in at least one image there is  one yellow boat facing left and forward.,"[""SELECT['images']"", ""PROJECT['boats in #REF', '#1']"", ""FILTER['#2', 'that are yellow']"", ""FILTER['#3', 'that are facing left']"", ""FILTER['#4', 'that are facing forward']"", ""GROUP['count', '#5', '#1']"", ""COMPARATIVE['#1', '#6', 'is equal to one']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is at least one']""]","[""SELECT['boat']"", ""FILTER['#1', 'that is yellow']"", ""FILTER['#2', 'that is facing left']"", ""FILTER['#3', 'that is facing forward']"", ""PROJECT['images of #REF', '#4']"", ""GROUP['count', '#4', '#5']"", ""COMPARATIVE['#5', '#6', 'is equal to one']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is at least one']""]"
NLVR2_dev_dev-928-2-1,If there is at least canoe in the grass in one picture and one canoe in the water in the other image.,"[""SELECT['one picture']"", ""PROJECT['canoes in #REF', '#1']"", ""PROJECT['grass in #REF', '#1']"", ""FILTER['#2', 'in #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']"", ""SELECT['other image']"", ""PROJECT['canoes in #REF', '#7']"", ""PROJECT['water in #REF', '#7']"", ""FILTER['#8', 'in #9']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#6', '#12']""]","[""SELECT['one picture']"", ""PROJECT['canoes in #REF', '#1']"", ""PROJECT['grass in #REF', '#1']"", ""FILTER['#2', 'that are in #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']"", ""SELECT['other image']"", ""PROJECT['canoes in #REF', '#7']"", ""PROJECT['water in #REF', '#7']"", ""FILTER['#9', 'that are in #10']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#6', '#13']""]"
NLVR2_dev_dev-929-0-0,If the image on the left depicts just 4 balloons.,"[""SELECT['left image']"", ""PROJECT['balloons in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to 4']""]","[""SELECT['left image']"", ""PROJECT['balloons of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to 4']""]"
NLVR2_dev_dev-929-1-1,"If each image shows upright balloons on strings, but the right image contains more balloons than the left image.","[""SELECT['balloons']"", ""FILTER['#1', 'that are upright']"", ""SELECT['strings']"", ""FILTER['#2', 'on #3']"", ""SELECT['images']"", ""GROUP['count', '#4', '#5']"", ""COMPARATIVE['#5', '#6', 'is at least one']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to #9']"", ""SELECT['the right image']"", ""PROJECT['balloons in #REF', '#11']"", ""FILTER['#12', 'in the left image']"", ""AGGREGATE['count', '#13']"", ""BOOLEAN['#14', 'is higher than #15']"", ""BOOLEAN['logical_and', 'true', '#8', '#16']""]","[""SELECT['balloons']"", ""FILTER['#1', 'that are upright']"", ""SELECT['strings']"", ""FILTER['#2', 'on #3']"", ""SELECT['images']"", ""GROUP['count', '#4', '#5']"", ""COMPARATIVE['#5', '#6', 'is at least one']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to #9']"", ""SELECT['the right image']"", ""PROJECT['balloons in #REF', '#11']"", ""FILTER['#12', 'in the left image']"", ""AGGREGATE['count', '#13']"", ""BOOLEAN['#14', 'is higher than #15']"", ""BOOLEAN['logical_and', 'true', '#10', '#16']""]"
NLVR2_dev_dev-93-0-1,If the hyena in the image on the left is lying with its head directly on the ground.,"[""SELECT['left image']"", ""PROJECT['hyena in #REF', '#1']"", ""BOOLEAN['#2', 'is lying']"", ""PROJECT['head of #REF', '#2']"", ""PROJECT['ground in #REF', '#1']"", ""BOOLEAN['#4', 'is directly on #5']"", ""BOOLEAN['logical_and', 'true', '#3', '#6']""]","[""SELECT['left image']"", ""PROJECT['hyena in #REF', '#1']"", ""BOOLEAN['#2', 'is lying']"", ""PROJECT['head of #REF', '#2']"", ""PROJECT['ground in #REF', '#1']"", ""BOOLEAN['#3', 'is directly on #4']"", ""BOOLEAN['logical_and', 'true', '#5', '#6']""]"
NLVR2_dev_dev-930-1-0,"If in the image to the left, we see a younger goat.","[""SELECT['left image']"", ""PROJECT['goat in #REF', '#1']"", ""FILTER['#2', 'that is younger']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']""]","[""SELECT['goat']"", ""FILTER['#1', 'that is younger']"", ""BOOLEAN['#2', 'is in the image to the left']""]"
NLVR2_dev_dev-9-3-1,If there is exactly two white dogs in the left image.,"[""SELECT['left image']"", ""PROJECT['dogs in #REF', '#1']"", ""FILTER['#2', 'that are white']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']""]","[""SELECT['left image']"", ""PROJECT['dogs in #REF', '#1']"", ""FILTER['#2', 'that are white']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is exactly two']""]"
NLVR2_dev_dev-93-1-0,If the left and right image contains the same number of hy,"[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['hyes in #REF', '#1']"", ""PROJECT['hyes in #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to #6']""]","[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['hygienists in #REF', '#1']"", ""PROJECT['hygienists in #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to #6']""]"
NLVR2_dev_dev-931-1-1,"If an image shows a single hyena, which holds part of a carcass completely off the ground in its mouth.","[""SELECT['hyenas']"", ""SELECT['carcass']"", ""PROJECT['part of #REF', '#2']"", ""SELECT['ground']"", ""COMPARATIVE['#2', '#4', 'is completely off #5']"", ""PROJECT['mouth of #REF', '#3']"", ""FILTER['#1', 'that holds #6 in #7']"", ""SELECT['images']"", ""GROUP['count', '#8', '#9']"", ""COMPARATIVE['#9', '#10', 'is equal to one']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is at least one']""]","[""SELECT['hyenas']"", ""SELECT['carcass']"", ""PROJECT['part of #REF', '#2']"", ""SELECT['ground']"", ""COMPARATIVE['#2', '#4', 'is completely off #5']"", ""PROJECT['mouth of #REF', '#3']"", ""FILTER['#1', 'that holds #6 in #7']"", ""SELECT['images']"", ""GROUP['count', '#9', '#10']"", ""COMPARATIVE['#10', '#11', 'is equal to one']"", ""AGGREGATE['count', '#12']"", ""BOOLEAN['#13', 'is at least one']""]"
NLVR2_dev_dev-932-0-1,If two birds are perched together in the image on the left.,"[""SELECT['left image']"", ""PROJECT['birds in #REF', '#1']"", ""FILTER['#2', 'that are perched together']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']""]","[""SELECT['left image']"", ""PROJECT['birds of #REF', '#1']"", ""FILTER['#2', 'that are perched together']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']""]"
NLVR2_dev_dev-932-3-0,If the left image contains exactly two parrots with green wings.,"[""SELECT['left image']"", ""PROJECT['parrots in #REF', '#1']"", ""PROJECT['wings of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'are green']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to two']""]","[""SELECT['parrots']"", ""PROJECT['wings of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are green']"", ""SELECT['left image']"", ""FILTER['#3', 'in #4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to two']""]"
NLVR2_dev_dev-933-3-0,"If in at least one of the images, two cheetahs are pulling on opposite ends of a piece of an animal.","[""SELECT['cheetahs']"", ""SELECT['animals']"", ""PROJECT['piece of #REF', '#2']"", ""PROJECT['ends of #REF', '#3']"", ""COMPARATIVE['#1', '#4', 'are opposite']"", ""SELECT['images']"", ""GROUP['count', '#5', '#6']"", ""COMPARATIVE['#6', '#7', 'is equal to two']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is at least one']""]","[""SELECT['cheetahs']"", ""SELECT['animal']"", ""PROJECT['piece of #REF', '#2']"", ""PROJECT['ends of #REF', '#3']"", ""COMPARATIVE['#1', '#4', 'are opposite']"", ""SELECT['images']"", ""GROUP['count', '#5', '#6']"", ""COMPARATIVE['#6', '#7', 'is equal to two']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is at least one']""]"
NLVR2_dev_dev-934-0-0,If the left and right image contains the same number of dogs with at least one sitting and wearing a collar.,"[""SELECT['dogs']"", ""SELECT['left image']"", ""SELECT['right image']"", ""FILTER['#1', 'that are in #2']"", ""FILTER['#1', 'that are in #3']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to #7']"", ""FILTER['#1', 'that is sitting']"", ""FILTER['#1', 'that is wearing a collar']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#8', '#11']""]","[""SELECT['dogs']"", ""SELECT['left image']"", ""SELECT['right image']"", ""FILTER['#1', 'that are in #2']"", ""FILTER['#1', 'that are in #3']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to #7']"", ""FILTER['#1', 'that is sitting']"", ""FILTER['#1', 'that is wearing a collar']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#10', '#11']""]"
NLVR2_dev_dev-934-2-1,If the left image shows a small brown dog with its mouth open.\,"[""SELECT['dog']"", ""FILTER['#1', 'that is small']"", ""FILTER['#2', 'that is brown']"", ""PROJECT['mouth of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is open']"", ""BOOLEAN['#5', 'is in the left image']""]","[""SELECT['left image']"", ""PROJECT['dog in #REF', '#1']"", ""FILTER['#2', 'that is small']"", ""FILTER['#3', 'that is brown']"", ""PROJECT['mouth of #REF', '#4']"", ""COMPARATIVE['#4', '#5', 'is open']"", ""BOOLEAN['#6', 'is in #3']""]"
NLVR2_dev_dev-935-0-0,"If each image shows two sneakers, and only one image features a matched pair of black sneakers trimmed with purple and aqua.","[""SELECT['images']"", ""PROJECT['pairs of sneakers in #REF', '#1']"", ""FILTER['#2', 'that are black']"", ""FILTER['#3', 'trimmed with purple and aqua']"", ""GROUP['count', '#4', '#1']"", ""COMPARATIVE['#1', '#5', 'is equal to two']"", ""AGGREGATE['count', '#6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to #9']"", ""BOOLEAN['#10', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#8', '#11']""]","[""SELECT['images']"", ""PROJECT['pairs of sneakers in #REF', '#1']"", ""FILTER['#2', 'that are black']"", ""FILTER['#3', 'trimmed with purple and aqua']"", ""GROUP['count', '#4', '#1']"", ""COMPARATIVE['#1', '#5', 'is equal to two']"", ""AGGREGATE['count', '#6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to #9']"", ""BOOLEAN['#10', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#8', '#11']""]"
NLVR2_dev_dev-935-2-1,"If in the image to the right, all shoelaces are the same color.","[""SELECT['the image to the right']"", ""PROJECT['shoelaces in #REF', '#1']"", ""PROJECT['colors of #REF', '#2']"", ""BOOLEAN['#3', 'are the same']""]","[""SELECT['the image to the right']"", ""PROJECT['shoelaces in #REF', '#1']"", ""PROJECT['color of #REF', '#2']"", ""BOOLEAN['#3', 'if all #REF are the same']""]"
NLVR2_dev_dev-936-2-1,If the combined images contain exactly two yellow balls and no more than three white balls.,"[""SELECT['balls']"", ""FILTER['#1', 'that are yellow']"", ""FILTER['#1', 'that are white']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']"", ""BOOLEAN['#5', 'is at most three']"", ""BOOLEAN['logical_and', 'true', '#6', '#7']""]","[""SELECT['images']"", ""PROJECT['balls in #REF', '#1']"", ""FILTER['#2', 'that are yellow']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']"", ""FILTER['#2', 'that are white']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at most three']"", ""BOOLEAN['logical_and', 'true', '#5', '#8']""]"
NLVR2_dev_dev-936-3-0,If in at least one image there is a pair of golf balls one behind the other.,"[""SELECT['images']"", ""PROJECT['golf balls in #REF', '#1']"", ""FILTER['#2', 'that are behind one another']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is equal to two']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least one']""]","[""SELECT['one image']"", ""SELECT['the other image']"", ""PROJECT['golf balls in #REF', '#1']"", ""PROJECT['golf balls in #REF', '#2']"", ""FILTER['#3', 'that are behind #4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least one']""]"
NLVR2_dev_dev-937-0-1,If there are 2 boats woth a total of 3 sails in the image pair,"[""SELECT['boats']"", ""PROJECT['sails of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""AGGREGATE['sum', '#3']"", ""BOOLEAN['#4', 'is equal to 3']""]","[""SELECT['images']"", ""PROJECT['boats in #REF', '#1']"", ""PROJECT['sails of #REF', '#2']"", ""GROUP['count', '#3', '#2']"", ""AGGREGATE['sum', '#4']"", ""BOOLEAN['#5', 'is equal to 3']""]"
NLVR2_dev_dev-937-3-0,If one boat is sailing to the right and the other is sailing to the left.,"[""SELECT['boats']"", ""FILTER['#1', 'that is sailing to the right']"", ""FILTER['#1', 'that is sailing to the left']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']"", ""BOOLEAN['#5', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#6', '#7']""]","[""SELECT['boats']"", ""FILTER['#1', 'that is sailing to the right']"", ""FILTER['#1', 'that is sailing to the left']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#5', 'is equal to one']"", ""BOOLEAN['#6', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#7', '#8']""]"
NLVR2_dev_dev-938-3-1,If the left and right image contains the same number of mini horses facing the same direction pulling a cart.,"[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['mini horses in #REF', '#1']"", ""PROJECT['mini horses in #REF', '#2']"", ""PROJECT['direction facing of #REF', '#3']"", ""PROJECT['direction pulling of #REF', '#4']"", ""COMPARATIVE['#4', '#5', 'is the same']"", ""AGGREGATE['count', '#6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to #9']""]","[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['mini horses in #REF', '#1']"", ""PROJECT['mini horses in #REF', '#2']"", ""PROJECT['direction facing of #REF', '#3']"", ""PROJECT['direction pulling of #REF', '#4']"", ""COMPARATIVE['#4', '#5', 'is the same as #6']"", ""AGGREGATE['count', '#7']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to #10']""."
NLVR2_dev_dev-939-0-1,"If one of the instruments shown has metal keyhole covers, and is standing straight up on its end; the other instrument is made of glass that has been painted.","[""SELECT['instruments']"", ""PROJECT['keyhole covers of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are metal']"", ""PROJECT['end of #REF', '#3']"", ""BOOLEAN['#4', 'is standing straight up on #3']"", ""SELECT['glass']"", ""FILTER['#6', 'that has been painted']"", ""BOOLEAN['#7', 'is made of #8']"", ""BOOLEAN['logical_and', 'true', '#5', '#9']""]","[""SELECT['one instrument']"", ""SELECT['keyhole covers']"", ""FILTER['#2', 'that are metal']"", ""PROJECT['end of #REF', '#1']"", ""BOOLEAN['#3', 'is standing straight up on #4']"", ""SELECT['glass']"", ""FILTER['#6', 'that has been painted']"", ""BOOLEAN['#7', 'is made of #5']"", ""BOOLEAN['logical_and', 'true', '#5', '#8']""]"
NLVR2_dev_dev-939-2-0,If one flute is resting on a holder.,"[""SELECT['flutes']"", ""SELECT['holder']"", ""FILTER['#1','resting on #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]","[""SELECT['flutes']"", ""SELECT['a holder']"", ""FILTER['#1','resting on #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]"
NLVR2_dev_dev-94-0-0,If one of the images shows a woman running with her dog next to her.,"[""SELECT['woman']"", ""SELECT['dog']"", ""FILTER['#1', 'running with #2 next to her']"", ""BOOLEAN['#3', 'is in one of the images']""]","[""SELECT['woman']"", ""PROJECT['dog of #REF', '#1']"", ""FILTER['#1', 'running with #2 next to her']"", ""BOOLEAN['#3', 'is in one image']""]"
NLVR2_dev_dev-940-0-0,If one of the images shows no more than two stingrays swimming exposing their belly.,"[""SELECT['stingrays']"", ""PROJECT['belly of #REF', '#1']"", ""FILTER['#1', 'that are swimming']"", ""FILTER['#3', 'exposing #2']"", ""SELECT['images']"", ""GROUP['count', '#4', '#5']"", ""COMPARATIVE['#5', '#6', 'is at most two']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to one']""]","[""SELECT['stingrays']"", ""PROJECT['belly of #REF', '#1']"", ""FILTER['#1','swimming exposing #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at most two']""]"
NLVR2_dev_dev-940-3-1,If one image contains more than ten times as many stingray as the other image.,"[""SELECT['one image']"", ""PROJECT['stingrays in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""SELECT['the other image']"", ""PROJECT['stingrays in #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""ARITHMETIC['division', '#3', '#6']"", ""BOOLEAN['#7', 'is higher than ten']""]","[""SELECT['one image']"", ""PROJECT['stingrays in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""SELECT['other image']"", ""PROJECT['stingrays in #REF', '#4']"", ""AGGREGATE['count', '#5']"", ""ARITHMETIC['division', '#3', '#6']"", ""BOOLEAN['#7', 'is higher than ten']""]"
NLVR2_dev_dev-94-1-1,If the right image contains one human interacting with one dog.,"[""SELECT['right image']"", ""PROJECT['human in #REF', '#1']"", ""PROJECT['dog in #REF', '#1']"", ""FILTER['#2', 'interacting with #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']""]","[""SELECT['right image']"", ""PROJECT['human in #REF', '#1']"", ""PROJECT['dog in #REF', '#1']"", ""FILTER['#2', 'that is interacting with #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']""]"
NLVR2_dev_dev-941-1-1,"If in the left image, there are two pugs--one sitting and the other laying down.","[""SELECT['left image']"", ""PROJECT['pugs in #REF', '#1']"", ""FILTER['#2', 'that are sitting']"", ""FILTER['#2', 'that are laying down']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']"", ""BOOLEAN['#6', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#7', '#8']""]","[""SELECT['left image']"", ""PROJECT['pugs in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']"", ""FILTER['#2', 'that is sitting']"", ""FILTER['#2', 'that is laying down']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#4', '#7']""]"
NLVR2_dev_dev-941-3-0,"If each image contains 2 pugs, and the image on the left shows both dogs with tongues sticking out.","[""SELECT['images']"", ""PROJECT['pugs in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is equal to 2']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#5', 'is equal to #6']"", ""SELECT['the image on the left']"", ""PROJECT['dogs in #REF', '#8']"", ""PROJECT['tongue of #REF', '#9']"", ""COMPARATIVE['#9', '#10', 'are sticking out']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is equal to two']"", ""BOOLEAN['logical_and', 'true', '#7', '#13']""]","[""SELECT['images']"", ""PROJECT['pugs in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is equal to 2']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#5', 'is equal to #6']"", ""SELECT['the image on the left']"", ""PROJECT['dogs in #REF', '#8']"", ""PROJECT['tongue of #REF', '#9']"", ""COMPARATIVE['#9', '#10', 'is sticking out']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is equal to two']"", ""BOOLEAN['logical_and', 'true', '#7', '#13']""]"
NLVR2_dev_dev-942-1-1,"If in the image to the right, there are green shirts for sale.","[""SELECT['right image']"", ""PROJECT['shirts in #REF', '#1']"", ""FILTER['#2', 'that are green']"", ""BOOLEAN['#3', 'are for sale']""]","[""SELECT['right image']"", ""PROJECT['shirts in #REF', '#1']"", ""FILTER['#2', 'that are green']"", ""FILTER['#3', 'that are for sale']"", ""BOOLEAN['#4', 'are in #1']""]"
NLVR2_dev_dev-943-1-1,"If every time a black binder is featured in an image, it is completely segregated from any binders of color.","[""SELECT['binders']"", ""FILTER['#1', 'that are black']"", ""PROJECT['colors of #REF', '#2']"", ""GROUP['count', '#2', '#3']"", ""COMPARATIVE['#3', '#4', 'is at least one']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to #7']""]","[""SELECT['binders']"", ""FILTER['#1', 'that are black']"", ""PROJECT['colors of #REF', '#2']"", ""GROUP['count', '#2', '#3']"", ""COMPARATIVE['#3', '#4', 'is equal to one']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to one']""]"
NLVR2_dev_dev-943-2-0,If the inside clasps are visible on two binders.,"[""SELECT['binders']"", ""PROJECT['inside clasps of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are visible']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']""]","[""SELECT['binders']"", ""PROJECT['claws of #REF', '#1']"", ""FILTER['#2', 'that are inside']"", ""FILTER['#1', 'that have #3 visible']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to two']""]"
NLVR2_dev_dev-944-3-0,If there is at least one puppy with predominantly black fur.,"[""SELECT['puppy']"", ""PROJECT['fur of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is predominantly black']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']""]","[""SELECT['puppy']"", ""PROJECT['fur of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is predominantly black']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]"
NLVR2_dev_dev-945-0-0,If an image shows a marmot's tilted head with vivid yellow teeth showing.,"[""SELECT['marmot']"", ""PROJECT['head of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is tilted']"", ""PROJECT['teeth of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'are vivid yellow']"", ""BOOLEAN['#5', 'is in an image']""]","[""SELECT['marmot']"", ""PROJECT['head of #REF', '#1']"", ""FILTER['#2', 'that is tilted']"", ""SELECT['teeth']"", ""FILTER['#4', 'that are vivid yellow']"", ""COMPARATIVE['#1', '#3', 'has #5 showing']"", ""BOOLEAN['#6', 'is in an image']""]"
NLVR2_dev_dev-945-0-1,If the left and right image contains the same number of groundhogs with at least one with yellow teeth.,"[""SELECT['left image']"", ""PROJECT['groundhogs in #REF', '#1']"", ""PROJECT['teeth of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'are yellow']"", ""AGGREGATE['count', '#4']"", ""SELECT['right image']"", ""PROJECT['groundhogs in #REF', '#6']"", ""PROJECT['teeth of #REF', '#7']"", ""COMPARATIVE['#7', '#8', 'are yellow']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#5', 'is equal to #10']"", ""BOOLEAN['#11', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#6', '#12']""]","[""SELECT['left image']"", ""PROJECT['groundhogs in #REF', '#1']"", ""PROJECT['teeth of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'are yellow']"", ""AGGREGATE['count', '#4']"", ""SELECT['right image']"", ""PROJECT['groundhogs in #REF', '#6']"", ""PROJECT['teeth of #REF', '#7']"", ""COMPARATIVE['#7', '#8', 'are yellow']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#5', 'is at least one']"", ""BOOLEAN['#10', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#6', '#11']""]"
NLVR2_dev_dev-946-0-0,If the left and right image contains the same number of  babies in animal towels.,"[""SELECT['babies']"", ""SELECT['towels']"", ""FILTER['#2', 'that are animal']"", ""FILTER['#1', 'in #3']"", ""SELECT['left image']"", ""SELECT['right image']"", ""FILTER['#4', 'in #5']"", ""FILTER['#4', 'in #6']"", ""AGGREGATE['count', '#7']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to #10']""]","[""SELECT['babies']"", ""SELECT['animal towels']"", ""FILTER['#1', 'in #2']"", ""SELECT['left image']"", ""SELECT['right image']"", ""FILTER['#3', 'in #4']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to #8']""]"
NLVR2_dev_dev-947-0-1,If one image shows the head of a small brown animal peering up out of a hole in the ground.,"[""SELECT['animal']"", ""FILTER['#1', 'that is small']"", ""FILTER['#2', 'that is brown']"", ""PROJECT['head of #REF', '#3']"", ""SELECT['ground']"", ""PROJECT['hole in #REF', '#5']"", ""FILTER['#4', 'peeking up out of #6']"", ""BOOLEAN['#7', 'is in one image']""]","[""SELECT['animal']"", ""FILTER['#1', 'that is small']"", ""FILTER['#2', 'that is brown']"", ""PROJECT['head of #REF', '#3']"", ""SELECT['ground']"", ""PROJECT['hole in #REF', '#5']"", ""BOOLEAN['#4', 'is peering up out of #6']""]"
NLVR2_dev_dev-947-3-0,If the left and right image contains the same number of groundhogs with at least one sitting on there butts,"[""SELECT['groundhogs']"", ""SELECT['left image']"", ""SELECT['right image']"", ""FILTER['#1', 'that are in #2']"", ""FILTER['#1', 'that are in #3']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to #7']"", ""FILTER['#1', 'that is sitting on butts']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#8', '#11']""]","[""SELECT['groundhogs']"", ""SELECT['left image']"", ""SELECT['right image']"", ""FILTER['#1', 'that are in #2']"", ""FILTER['#1', 'that are in #3']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to #7']"", ""FILTER['#1', 'that is sitting on butts']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#8', '#10']""]"
NLVR2_dev_dev-948-0-1,If banners hang from the ceiling in the room in the image on the left.,"[""SELECT['left image']"", ""PROJECT['banners in #REF', '#1']"", ""PROJECT['room in #REF', '#1']"", ""PROJECT['ceiling in #REF', '#1']"", ""BOOLEAN['#2', 'hang from #3']""]","[""SELECT['left image']"", ""PROJECT['room in #REF', '#1']"", ""PROJECT['ceiling in #REF', '#1']"", ""SELECT['banners']"", ""BOOLEAN['#4', 'hang from #2']""]"
NLVR2_dev_dev-948-2-0,If an image shows a shop interior with a row of chalkboards on the wall and spindle-back chairs around tables.,"[""SELECT['shop']"", ""PROJECT['interior of #REF', '#1']"", ""SELECT['row of chalkboards']"", ""SELECT['wall']"", ""COMPARATIVE['#3', '#4', 'is on #5']"", ""SELECT['spindle-back chairs']"", ""SELECT['tables']"", ""FILTER['#6', 'around #7']"", ""FILTER['#2', 'with #8']"", ""BOOLEAN['#9', 'is in an image']""]","[""SELECT['shop']"", ""PROJECT['interior of #REF', '#1']"", ""SELECT['row of chalkboards']"", ""SELECT['wall']"", ""COMPARATIVE['#2', '#3', 'is on #4']"", ""SELECT['spindle-back chairs']"", ""SELECT['tables']"", ""FILTER['#5', 'around #6']"", ""FILTER['#7', 'with #8']"", ""BOOLEAN['#9', 'is in an image']""]"
NLVR2_dev_dev-949-3-0,If there is a dome in the left image.,"[""SELECT['dome']"", ""BOOLEAN['#1', 'is in the left image']""]","[""SELECT['dome']"", ""BOOLEAN['#1', 'is in the left image']""]"
NLVR2_dev_dev-95-0-1,"If in one of the images, there are a pair of shoes.","[""SELECT['pair of shoes']"", ""BOOLEAN['#1', 'is in one image']""]","[""SELECT['pair of shoes']"", ""BOOLEAN['#1', 'is in one of the images']""]"
NLVR2_dev_dev-950-1-0,"If an image shows a hamster with greens to eat, next to a wooden structure with one hole and one arch doorway.","[""SELECT['hamster']"", ""SELECT['greens']"", ""FILTER['#1', 'with #2 to eat']"", ""SELECT['structure']"", ""FILTER['#4', 'that is wooden']"", ""PROJECT['hole of #REF', '#5']"", ""PROJECT['arch doorway of #REF', '#5']"", ""COMPARATIVE['#5', '#6', 'is equal to one']"", ""FILTER['#3', 'next to #7']"", ""BOOLEAN['#8', 'is in an image']""]","[""SELECT['hamster']"", ""SELECT['greens']"", ""FILTER['#1', 'that has #2 to eat']"", ""SELECT['structure']"", ""FILTER['#4', 'that is wooden']"", ""PROJECT['hole of #REF', '#5']"", ""PROJECT['arch doorway of #REF', '#5']"", ""GROUP['count', '#6', '#5']"", ""COMPARATIVE['#5', '#7', 'is equal to one']"", ""FILTER['#2', 'next to #8']"", ""BOOLEAN['#9', 'is in an image']""]"
NLVR2_dev_dev-950-2-1,If a hamster is standing on its hind legs in the right image.,"[""SELECT['hamster']"", ""PROJECT['hind legs of #REF', '#1']"", ""FILTER['#1','standing on #2']"", ""BOOLEAN['#3', 'is in the right image']""]","[""SELECT['hamster']"", ""PROJECT['hind legs of #REF', '#1']"", ""FILTER['#1', 'that is standing on #2']"", ""BOOLEAN['#3', 'is in the right image']""]"
NLVR2_dev_dev-951-1-0,"If in the image on the right, the dog's body is facing to the right.","[""SELECT['right image']"", ""PROJECT['dog in #REF', '#1']"", ""PROJECT['body of #REF', '#2']"", ""BOOLEAN['#3', 'is facing to the right']""]","[""SELECT['the right image']"", ""PROJECT['dog in #REF', '#1']"", ""PROJECT['body of #REF', '#2']"", ""BOOLEAN['#3', 'is facing to the right']""]"
NLVR2_dev_dev-951-1-1,If the dog in one of the images is sitting down.,"[""SELECT['dog']"", ""FILTER['#1', 'that is sitting down']"", ""BOOLEAN['#2', 'is in one of the images']""]","[""SELECT['dogs']"", ""FILTER['#1', 'that is sitting down']"", ""BOOLEAN['#2', 'is in one image']""]"
NLVR2_dev_dev-952-3-1,If two buildings sit next to each other in the image on the left.,"[""SELECT['left image']"", ""PROJECT['buildings in #REF', '#1']"", ""FILTER['#2', 'that sit next to each other']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']""]","[""SELECT['the left image']"", ""PROJECT['buildings in #REF', '#1']"", ""FILTER['#2', 'that sit next to each other']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']""]"
NLVR2_dev_dev-953-2-0,"If each image contains one hound puppy, no puppy is on grass, and one image shows a puppy standing on all fours.","[""SELECT['images']"", ""PROJECT['puppy in #REF', '#1']"", ""FILTER['#2', 'that is hound']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is equal to one']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#6', 'is equal to #7']"", ""SELECT['grass']"", ""FILTER['#1', 'that is standing on all fours']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to #11']"", ""BOOLEAN['logical_and', 'true', '#8', '#12']"", ""BOOLEAN['logical_and', 'true', '#7', '#13']""]","[""SELECT['images']"", ""PROJECT['puppy in #REF', '#1']"", ""FILTER['#2', 'that is hound']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is equal to one']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#6', 'is equal to #7']"", ""SELECT['grass']"", ""FILTER['#1', 'that is standing on all fours']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to #11']"", ""BOOLEAN['logical_and', 'true', '#8', '#12']""]"
NLVR2_dev_dev-953-3-1,If a dog in the image on the left is sitting down.,"[""SELECT['left image']"", ""PROJECT['dog in #REF', '#1']"", ""BOOLEAN['#2', 'is sitting down']""]","[""SELECT['dog']"", ""FILTER['#1', 'that is sitting down']"", ""BOOLEAN['#2', 'is in the image on the left']""."
NLVR2_dev_dev-954-0-0,"If one image shows multiple dogs posed sitting upright, and the other image shows a single large-breed dog.","[""SELECT['one image']"", ""PROJECT['dogs in #REF', '#1']"", ""FILTER['#2', 'that are posed sitting upright']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least two']"", ""SELECT['the other image']"", ""PROJECT['dogs in #REF', '#6']"", ""FILTER['#7', 'that are large-breed']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#5', '#10']""]","[""SELECT['one image']"", ""PROJECT['dogs in #REF', '#1']"", ""FILTER['#2', 'that are posed sitting upright']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is higher than two']"", ""SELECT['other image']"", ""PROJECT['dogs in #REF', '#6']"", ""FILTER['#7', 'that are large-breed']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#5', '#10']""]"
NLVR2_dev_dev-955-0-0,"If these images show sea creatures, but none of these creatures are fish.","[""SELECT['images']"", ""PROJECT['sea creatures in #REF', '#1']"", ""PROJECT['fish in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to #5']"", ""BOOLEAN['#6', 'is equal to zero']"", ""BOOLEAN['logical_and', 'true', '#7', '#8']""]","[""SELECT['images']"", ""PROJECT['sea creatures in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least two']"", ""PROJECT['fish in #REF', '#1']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to zero']"", ""BOOLEAN['logical_and', 'true', '#4', '#7']""]"
NLVR2_dev_dev-955-0-1,"If one image shows an orange colored anemone that is spiky, while the other image shows an anemone that is more finger or tentacle-like and has purple in the image.","[""SELECT['one image']"", ""PROJECT['anemone in #REF', '#1']"", ""FILTER['#2', 'that is orange colored']"", ""FILTER['#3', 'that is spiky']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']"", ""SELECT['other image']"", ""PROJECT['anemone in #REF', '#7']"", ""FILTER['#8', 'that is more finger-like']"", ""FILTER['#9', 'that is tentacle-like']"", ""FILTER['#10', 'that has purple']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#6', '#13']""]","[""SELECT['one image']"", ""PROJECT['anemone in #REF', '#1']"", ""FILTER['#2', 'that is orange colored']"", ""FILTER['#3', 'that is spiky']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']"", ""SELECT['other image']"", ""PROJECT['anemone in #REF', '#7']"", ""FILTER['#8', 'that is more finger-like']"", ""FILTER['#9', 'that is tentacle-like']"", ""FILTER['#10', 'that is purple']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#6', '#13']""]"
NLVR2_dev_dev-956-1-0,If in at least one of the images in each pair there are at least three wine bottle together in a line.,"[""SELECT['images']"", ""PROJECT['wine bottles in #REF', '#1']"", ""FILTER['#2', 'that are together in a line']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is at least three']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to two']""]","[""SELECT['images']"", ""PROJECT['wine bottles in #REF', '#1']"", ""FILTER['#2', 'that are together in a line']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is at least three']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least one']""]"
NLVR2_dev_dev-956-3-1,"If there is at least 1 wine glass with some red wine it, sitting by a wine bottle.","[""SELECT['wine glass']"", ""SELECT['wine bottle']"", ""FILTER['#2', 'that is red']"", ""FILTER['#1','sitting by #3']"", ""FILTER['#4', 'with #5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least one']""]","[""SELECT['wine glass']"", ""SELECT['wine bottle']"", ""FILTER['#2', 'that is red']"", ""FILTER['#1', 'that is with #3']"", ""FILTER['#4', 'that is sitting by #3']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least one']""]"
NLVR2_dev_dev-957-1-1,If at least one leftward-facing buffalo is in an action pose stirring up a cloud of dirt in the right image.,"[""SELECT['right image']"", ""PROJECT['buffalo in #REF', '#1']"", ""FILTER['#2', 'that is leftward-facing']"", ""FILTER['#3', 'that is in an action pose']"", ""PROJECT['cloud of dirt in #REF', '#1']"", ""FILTER['#4', 'that is stirring up #5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least one']""]","[""SELECT['the right image']"", ""PROJECT['buffaloes in #REF', '#1']"", ""FILTER['#2', 'that are leftward-facing']"", ""FILTER['#3', 'that are in an action pose']"", ""PROJECT['cloud of dirt in #REF', '#1']"", ""FILTER['#4', 'that are stirring up #5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least one."
NLVR2_dev_dev-957-3-0,If there are at most 3 water buffalos in the image pair.,"[""SELECT['images']"", ""PROJECT['water buffaloes in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at most 3']""]","[""SELECT['image pair']"", ""PROJECT['water buffaloes in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at most 3']""]"
NLVR2_dev_dev-958-0-1,If there is an l sharped bar with no more than two l turns in the bar table.,"[""SELECT['bar']"", ""FILTER['#1', 'that is l sharped']"", ""SELECT['bar table']"", ""PROJECT['l turns in #REF', '#3']"", ""GROUP['count', '#4', '#3']"", ""COMPARATIVE['#3', '#5', 'is at most two']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']""]","[""SELECT['bar']"", ""FILTER['#1', 'that is l sharped']"", ""SELECT['bar table']"", ""PROJECT['l turns in #REF', '#3']"", ""GROUP['count', '#4', '#3']"", ""COMPARATIVE['#3', '#5', 'is at most two']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least one']""]"
NLVR2_dev_dev-958-2-0,If all the chairs have backs.,"[""SELECT['chairs']"", ""FILTER['#1', 'that have backs']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to #4']""]","[""SELECT['chairs']"", ""PROJECT['backs of #REF', '#1']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to #4']""."
NLVR2_dev_dev-959-1-1,If there are exactly three containers.,"[""SELECT['containers']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to three']""]","[""SELECT['containers']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is exactly three']""]"
NLVR2_dev_dev-959-2-0,If the left and right image contains a total of three containers.,"[""SELECT['the left image']"", ""SELECT['the right image']"", ""PROJECT['containers in #REF', '#1']"", ""PROJECT['containers in #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""ARITHMETIC['sum', '#5', '#6']"", ""BOOLEAN['#7', 'is equal to three']""]","[""SELECT['containers']"", ""FILTER['#1', 'in the left image']"", ""FILTER['#1', 'in the right image']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['sum', '#4', '#5']"", ""BOOLEAN['#6', 'is equal to three']""]"
NLVR2_dev_dev-960-2-0,"If no image contains real adult wild cats, and one image contains twice as many juvenile cheetahs as the other image.","[""SELECT['one image']"", ""PROJECT['cheetahs in #REF', '#1']"", ""FILTER['#2', 'that are juvenile']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']"", ""SELECT['the other image']"", ""PROJECT['wild cats in #REF', '#6']"", ""FILTER['#7', 'that are real']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to zero']"", ""BOOLEAN['logical_and', 'true', '#5', '#10']""]","[""SELECT['one image']"", ""PROJECT['wild cats in #REF', '#1']"", ""FILTER['#2', 'that are adults']"", ""FILTER['#3', 'that are real']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to zero']"", ""SELECT['the other image']"", ""PROJECT['cheetahs in #REF', '#7']"", ""FILTER['#8', 'that are juvenile']"", ""AGGREGATE['count', '#9']"", ""ARITHMETIC['division', '#6', '#10']"", ""BOOLEAN['#11', 'is equal to two']"", ""BOOLEAN['logical_and', 'true', '#6', '#12']""]"
NLVR2_dev_dev-960-3-1,If there is at least two cheetahs in the right image.,"[""SELECT['the right image']"", ""PROJECT['cheetahs in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least two']""]","[""SELECT['cheetahs']"", ""SELECT['right image']"", ""FILTER['#1', 'in #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least two']""]"
NLVR2_dev_dev-96-1-0,If the panda in one of the images is opening its mouth to eat.,"[""SELECT['panda']"", ""PROJECT['mouth of #REF', '#1']"", ""FILTER['#1', 'opening #2 to eat']"", ""BOOLEAN['#3', 'is in one image']""]","[""SELECT['panda']"", ""PROJECT['mouth of #REF', '#1']"", ""FILTER['#1', 'opening #2 to eat']"", ""BOOLEAN['#3', 'is in one of the images']""]"
NLVR2_dev_dev-961-0-0,If each image shows at least five different shades of lipstick.,"[""SELECT['images']"", ""PROJECT['different shades of lipstick in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is at least five']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#6', 'is equal to #5']""]","[""SELECT['images']"", ""PROJECT['different shades of lipstick in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is at least five']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#6', 'is equal to #5']""]"
NLVR2_dev_dev-96-1-1,If there is a lone panda bear sitting in the forest in the center of both images.,"[""SELECT['panda bear']"", ""SELECT['the forest']"", ""FILTER['#1','sitting in #2']"", ""PROJECT['center of #REF', '#3']"", ""SELECT['images']"", ""GROUP['count', '#3', '#5']"", ""COMPARATIVE['#5', '#6', 'is equal to one']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to two']""]","[""SELECT['panda bear']"", ""SELECT['the forest']"", ""FILTER['#1','sitting in #2']"", ""PROJECT['center of #REF', '#3']"", ""SELECT['images']"", ""GROUP['count', '#3', '#5']"", ""COMPARATIVE['#5', '#6', 'is equal to one']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to both']""]"
NLVR2_dev_dev-962-0-0,If at least one of the dogs is sitting on a wooden floor.,"[""SELECT['dogs']"", ""SELECT['floor']"", ""FILTER['#2', 'that is wooden']"", ""FILTER['#1','sitting on #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']""]","[""SELECT['dogs']"", ""SELECT['floor']"", ""FILTER['#2', 'that is wooden']"", ""FILTER['#1', 'that is sitting on #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']""]"
NLVR2_dev_dev-962-3-1,If am image contains two dogs.,"[""SELECT['dogs']"", ""SELECT['images']"", ""GROUP['count', '#1', '#2']"", ""COMPARATIVE['#2', '#3', 'is equal to two']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']""]","[""SELECT['dogs']"", ""SELECT['images']"", ""GROUP['count', '#1', '#2']"", ""COMPARATIVE['#2', '#3', 'is equal to two']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']""]"
NLVR2_dev_dev-963-1-0,If the left and right image contains the same number women in bikinis.,"[""SELECT['left image']"", ""PROJECT['women in #REF', '#1']"", ""SELECT['bikinis']"", ""FILTER['#2', 'in #3']"", ""AGGREGATE['count', '#4']"", ""SELECT['right image']"", ""PROJECT['women in #REF', '#5']"", ""FILTER['#6', 'in #7']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to #10']""]","[""SELECT['left image']"", ""PROJECT['women in #REF', '#1']"", ""SELECT['bikinis']"", ""FILTER['#2', 'in #3']"", ""AGGREGATE['count', '#4']"", ""SELECT['right image']"", ""PROJECT['women in #REF', '#6']"", ""FILTER['#7', 'in #5']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to #10']""]"
NLVR2_dev_dev-963-1-1,"If one image contains several bikini models, and the other image features just one model, whose bikini bottom has aqua coloring.","[""SELECT['one image']"", ""PROJECT['bikini models in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least two']"", ""SELECT['other image']"", ""PROJECT['models in #REF', '#5']"", ""PROJECT['bikini bottom of #REF', '#6']"", ""COMPARATIVE['#6', '#7', 'has aqua coloring']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#4', '#10']""]","[""SELECT['one image']"", ""PROJECT['bikini models in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least two']"", ""SELECT['the other image']"", ""PROJECT['models in #REF', '#5']"", ""PROJECT['bikini bottom of #REF', '#6']"", ""COMPARATIVE['#6', '#7', 'has aqua coloring']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#4', '#10']""]"
NLVR2_dev_dev-964-2-1,If two birds are flying in the air.,"[""SELECT['birds']"", ""FILTER['#1', 'that are flying in the air']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']""]","[""SELECT['birds']"", ""SELECT['air']"", ""FILTER['#1', 'that are flying in #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is two']""]"
NLVR2_dev_dev-964-3-0,"If all of the geese share the same coloring, and the left image contains exactly two geese.","[""SELECT['left image']"", ""PROJECT['geese in #REF', '#1']"", ""PROJECT['coloring of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is the same']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to #6']"", ""BOOLEAN['#7', 'is equal to two']"", ""BOOLEAN['logical_and', 'true', '#8', '#9']""]","[""SELECT['the left image']"", ""PROJECT['geese in #REF', '#1']"", ""PROJECT['coloring of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is the same']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to #6']"", ""BOOLEAN['#7', 'is equal to two']"", ""BOOLEAN['logical_and', 'true', '#8', '#9']""]"
NLVR2_dev_dev-965-0-0,If one of the pictures shows high heeled shoes on a white shelf.,"[""SELECT['shoes']"", ""FILTER['#1', 'that are high heeled']"", ""SELECT['shelf']"", ""FILTER['#3', 'that is white']"", ""FILTER['#2', 'on #4']"", ""BOOLEAN['#5', 'is in one of the pictures']""]","[""SELECT['shoes']"", ""FILTER['#1', 'that are high heeled']"", ""SELECT['shelf']"", ""FILTER['#3', 'that is white']"", ""FILTER['#2', 'on #4']"", ""BOOLEAN['#5', 'is in one picture']""]"
NLVR2_dev_dev-966-1-0,If there are 3 cheetahs pictured.,"[""SELECT['cheetahs']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to 3']""]","[""SELECT['cheetahs']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to three']""]"
NLVR2_dev_dev-966-1-1,If the right image contains at least two cheetahs.,"[""SELECT['the right image']"", ""PROJECT['cheetahs in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least two']""]","[""SELECT['cheetahs']"", ""FILTER['#1', 'in the right image']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least two']""]"
NLVR2_dev_dev-967-0-0,If one cabinet is royal blue with decorative legs and scrollwork along the botttom edge.,"[""SELECT['cabinets']"", ""FILTER['#1', 'that are royal blue']"", ""PROJECT['legs of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'are decorative']"", ""PROJECT['botttom edge of #REF', '#4']"", ""SELECT['scrollwork']"", ""COMPARATIVE['#4', '#5', 'are along #6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to one']""]","[""SELECT['cabinets']"", ""FILTER['#1', 'that are royal blue']"", ""PROJECT['legs of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'are decorative']"", ""PROJECT['botttom edge of #REF', '#4']"", ""SELECT['scrollwork']"", ""COMPARATIVE['#4', '#6', 'are along #5']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to one']""]"
NLVR2_dev_dev-967-0-1,If a chair is located near the cabinet in the image on the right.,"[""SELECT['chair']"", ""SELECT['cabinet']"", ""FILTER['#1', 'that is located near #2']"", ""BOOLEAN['#3', 'is in the image on the right']""]","[""SELECT['right image']"", ""PROJECT['chair in #REF', '#1']"", ""PROJECT['cabinet in #REF', '#1']"", ""FILTER['#2', 'located near #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']""]"
NLVR2_dev_dev-968-2-1,If a bird is standing.,"[""SELECT['bird']"", ""FILTER['#1', 'that is standing']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least one']""]","[""SELECT['bird']"", ""FILTER['#1', 'that is standing']"", ""BOOLEAN['#2', 'is in #3']""]"
NLVR2_dev_dev-968-3-0,If each image contains exactly one eagle with outspread wings flying in a clear blue sky.,"[""SELECT['images']"", ""PROJECT['eagles in #REF', '#1']"", ""PROJECT['wings of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'are outspread']"", ""PROJECT['sky in #REF', '#1']"", ""FILTER['#5', 'that is clear blue']"", ""FILTER['#4', 'flying in #6']"", ""GROUP['count', '#7', '#2']"", ""COMPARATIVE['#2', '#8', 'is equal to one']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to #11']""]","[""SELECT['eagles']"", ""PROJECT['wings of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are outspread']"", ""SELECT['sky']"", ""FILTER['#4', 'that is clear blue']"", ""FILTER['#3', 'flying in #5']"", ""SELECT['images']"", ""GROUP['count', '#6', '#7']"", ""COMPARATIVE['#7', '#8', 'is equal to one']"", ""AGGREGATE['count', '#7']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to #11']""]"
NLVR2_dev_dev-969-0-0,If in at least one image there is a church with a cross at the top facing right and forward.,"[""SELECT['church']"", ""PROJECT['top of #REF', '#1']"", ""SELECT['cross']"", ""COMPARATIVE['#1', '#2', 'has #3 at']"", ""FILTER['#4', 'that is facing right']"", ""FILTER['#5', 'that is facing forward']"", ""BOOLEAN['#6', 'is in at least one image']""]","[""SELECT['church']"", ""SELECT['cross']"", ""FILTER['#1', 'with #2 at the top']"", ""FILTER['#3', 'that is facing right']"", ""FILTER['#4', 'that is facing forward']"", ""BOOLEAN['#5', 'is in at least one image']""]"
NLVR2_dev_dev-969-0-1,If at least one image is taken from up above.,"[""SELECT['images']"", ""FILTER['#1', 'that are taken from up above']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least one']""]","[""SELECT['images']"", ""FILTER['#1', 'taken from up above']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least one']""]"
NLVR2_dev_dev-970-1-0,If one of the images shows at least one boar standing in liquid water.,"[""SELECT['boars']"", ""SELECT['liquid water']"", ""FILTER['#1','standing in #2']"", ""PROJECT['images of #REF', '#3']"", ""GROUP['count', '#3', '#4']"", ""COMPARATIVE['#4', '#5', 'is at least one']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']""]","[""SELECT['images']"", ""PROJECT['boars in #REF', '#1']"", ""PROJECT['liquid water in #REF', '#1']"", ""FILTER['#2','standing in #3']"", ""GROUP['count', '#4', '#1']"", ""COMPARATIVE['#1', '#5', 'is at least one']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']""]"
NLVR2_dev_dev-97-1-0,"If an image shows an arch shape on a yellow wall on one side, and a black beam with inset lights spanning the ceiling over seating furniture.","[""SELECT['arch shape']"", ""SELECT['wall']"", ""FILTER['#2', 'that is yellow']"", ""FILTER['#1', 'on one side']"", ""FILTER['#4', 'on #3']"", ""SELECT['beam']"", ""FILTER['#6', 'that is black']"", ""SELECT['lights']"", ""FILTER['#7', 'with #8']"", ""SELECT['ceiling furniture']"", ""FILTER['#9', 'over #10']"", ""FILTER['#5','spanning #10']"", ""BOOLEAN['#11', 'is in an image']""]","[""SELECT['arch shape']"", ""SELECT['wall']"", ""FILTER['#2', 'that is yellow']"", ""PROJECT['side of #REF', '#1']"", ""FILTER['#3', 'on #4']"", ""BOOLEAN['#5', 'is on #6']"", ""SELECT['beam']"", ""FILTER['#7', 'that is black']"", ""SELECT['lights']"", ""FILTER['#8', 'with #9']"", ""SELECT['ceiling']"", ""FILTER['#10','spanning #11']"", ""SELECT['furniture']"", ""FILTER['#11', 'over #12']"", ""FILTER['#12', 'over #13']"", ""FILTER['#13', 'over #14']"", ""BOOLEAN['#15', 'is in an image']""]"
NLVR2_dev_dev-971-3-1,If there are more rolls in the image on the right.,"[""SELECT['rolls']"", ""SELECT['right image']"", ""FILTER['#1', 'in #2']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['difference', '#4', '#5']"", ""BOOLEAN['#5', 'is higher than #6']""]","[""SELECT['rolls']"", ""SELECT['right image']"", ""FILTER['#1', 'in #2']"", ""DISCARD['#1', '#3']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is higher than #6']""]"
NLVR2_dev_dev-972-0-0,If the dog in the image on the right has its tongue hanging out.,"[""SELECT['right image']"", ""PROJECT['dog of #REF', '#1']"", ""PROJECT['tongue of #REF', '#2']"", ""BOOLEAN['#3', 'is hanging out']""]","[""SELECT['right image']"", ""PROJECT['dog in #REF', '#1']"", ""PROJECT['tongue of #REF', '#2']"", ""BOOLEAN['#3', 'has #4 hanging out']""]"
NLVR2_dev_dev-972-0-1,"If one doberman faces forward and wears a collar, and the other doberman has its head turned and wears no collar.","[""SELECT['one doberman']"", ""FILTER['#1', 'that faces forward']"", ""SELECT['collar']"", ""BOOLEAN['#2', 'wears #3']"", ""SELECT['the other doberman']"", ""PROJECT['head of #REF', '#5']"", ""COMPARATIVE['#5', '#6', 'is turned']"", ""SELECT['collar']"", ""BOOLEAN['#7', 'wears #8']"", ""BOOLEAN['logical_and', 'true', '#4', '#9']""]","[""SELECT['one doberman']"", ""FILTER['#1', 'that faces forward']"", ""SELECT['collar']"", ""BOOLEAN['#2', 'wears #3']"", ""SELECT['the other doberman']"", ""PROJECT['head of #REF', '#5']"", ""COMPARATIVE['#5', '#6', 'is turned']"", ""SELECT['collar']"", ""FILTER['#7', 'that wears #8']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#3', '#11']""]"
NLVR2_dev_dev-97-3-1,If there are people sitting in the left image.,"[""SELECT['people']"", ""FILTER['#1', 'that are sitting']"", ""BOOLEAN['#2', 'are in the left image']""]","[""SELECT['people']"", ""FILTER['#1', 'that are sitting']"", ""BOOLEAN['#2', 'are in the left image']""]."
NLVR2_dev_dev-973-3-0,If there are four blonde women.,"[""SELECT['women']"", ""FILTER['#1', 'that are blonde']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to four']""]","[""SELECT['women']"", ""FILTER['#1', 'who are blonde']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to four']""]"
NLVR2_dev_dev-974-2-1,If there are exactly three juvenile cheetahs.,"[""SELECT['cheetahs']"", ""FILTER['#1', 'that are juvenile']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to three']""]","[""SELECT['cheetahs']"", ""FILTER['#1', 'that are juvenile']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is exactly three']""]"
NLVR2_dev_dev-974-3-0,If only one cheetah is eating a carcass in one of the images.,"[""SELECT['cheetahs']"", ""SELECT['carcass']"", ""FILTER['#1', 'eating #2']"", ""PROJECT['images of #REF', '#3']"", ""GROUP['count', '#3', '#4']"", ""COMPARATIVE['#4', '#5', 'is equal to one']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to one']""]","[""SELECT['cheetahs']"", ""SELECT['carcass']"", ""FILTER['#1', 'eating #2']"", ""PROJECT['images of #REF', '#3']"", ""GROUP['count', '#3', '#4']"", ""COMPARATIVE['#4', '#5', 'is equal to one']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least one']""]"
NLVR2_dev_dev-975-0-1,If in at least one image there is a single needle pointing left.,"[""SELECT['images']"", ""PROJECT['needles in #REF', '#1']"", ""FILTER['#2', 'that are pointing left']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is equal to one']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least one']""]","[""SELECT['needle']"", ""FILTER['#1', 'that is pointing left']"", ""PROJECT['images of #REF', '#2']"", ""GROUP['count', '#2', '#3']"", ""COMPARATIVE['#3', '#4', 'is equal to one']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least one']""]"
NLVR2_dev_dev-975-2-0,"If an image shows at least seven syringes arrayed fanning out, with their points together.","[""SELECT['images']"", ""PROJECT['syringes in #REF', '#1']"", ""FILTER['#2', 'that are arrayed fanning out']"", ""PROJECT['points of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'are together']"", ""GROUP['count', '#5', '#1']"", ""COMPARATIVE['#1', '#6', 'is at least seven']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to one']""]","[""SELECT['syringes']"", ""FILTER['#1', 'that are arrayed']"", ""FILTER['#2', 'that are fanning out']"", ""PROJECT['points of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'are together']"", ""SELECT['images']"", ""GROUP['count', '#5', '#6']"", ""COMPARATIVE['#6', '#7', 'is at least seven']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is equal to one']""]"
NLVR2_dev_dev-976-0-1,If the left image shows a small brown pony hitched to a cart without a rider in it.,"[""SELECT['powder']"", ""FILTER['#1', 'that is small']"", ""FILTER['#2', 'that is brown']"", ""SELECT['cart']"", ""SELECT['rider']"", ""FILTER['#4', 'in #5']"", ""FILTER['#6', 'without #7']"", ""FILTER['#3', 'hitched to #8']"", ""BOOLEAN['#9', 'is in the left image']""]","[""SELECT['powder']"", ""FILTER['#1', 'that is small']"", ""FILTER['#2', 'that is brown']"", ""SELECT['cart']"", ""SELECT['rider']"", ""FILTER['#4', 'in #5']"", ""FILTER['#6', 'without #7']"", ""FILTER['#3', 'hitched to #7']"", ""BOOLEAN['#8', 'is in the left image']""]"
NLVR2_dev_dev-976-2-0,If the cart in the left image has two wheels.,"[""SELECT['left image']"", ""PROJECT['cart in #REF', '#1']"", ""PROJECT['wheels of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']""]","[""SELECT['the left image']"", ""PROJECT['the cart in #REF', '#1']"", ""PROJECT['wheels of #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to two']""]"
NLVR2_dev_dev-977-2-0,If a glass of juice has an orange slice on it's rim,"[""SELECT['glass of juice']"", ""PROJECT['rim of #REF', '#1']"", ""SELECT['orange slice']"", ""BOOLEAN['#3', 'is on #2']""]","[""SELECT['glass of juice']"", ""PROJECT['rim of #REF', '#1']"", ""SELECT['orange slice']"", ""BOOLEAN['#3', 'has #4 on']""]"
NLVR2_dev_dev-977-3-1,"If in the left image, there are at least 14 fruit slices.","[""SELECT['left image']"", ""PROJECT['fruit slices in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least 14']""]","[""SELECT['the left image']"", ""PROJECT['fruit slices in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at least 14']""]"
NLVR2_dev_dev-978-1-0,If none of the dogs appear to have leashes.,"[""SELECT['dogs']"", ""FILTER['#1', 'that appear to have leashes']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to zero']""]","[""SELECT['dogs']"", ""SELECT['leashes']"", ""FILTER['#1', 'that appear to have #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to zero']."
NLVR2_dev_dev-978-2-1,"If in both images, the dog's body is facing left.","[""SELECT['dog']"", ""PROJECT['body of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is facing left']"", ""PROJECT['images of #REF', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to two']""]","[""SELECT['dog']"", ""PROJECT['body of #REF', '#1']"", ""FILTER['#2', 'that is facing left']"", ""PROJECT['images of #REF', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to two']""]"
NLVR2_dev_dev-979-1-0,If one of the bracelets has blue seed beads.,"[""SELECT['bracelets']"", ""SELECT['seed beads']"", ""FILTER['#2', 'that are blue']"", ""FILTER['#1', 'that has #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']""]","[""SELECT['bracelets']"", ""SELECT['seed beads']"", ""FILTER['#2', 'that are blue']"", ""FILTER['#1', 'which has #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']""]"
NLVR2_dev_dev-980-1-0,If there is a light pink lipstick on the left image and a dark pink one on the right.,"[""SELECT['left image']"", ""PROJECT['lipstick in #REF', '#1']"", ""FILTER['#2', 'that is light pink']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']"", ""SELECT['right image']"", ""PROJECT['lipstick in #REF', '#6']"", ""FILTER['#7', 'that is dark pink']"", ""AGGREGATE['count', '#8']"", ""BOOLEAN['#9', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#5', '#10']""]","[""SELECT['lipstick']"", ""FILTER['#1', 'that is light pink']"", ""BOOLEAN['#2', 'is in the left image']"", ""FILTER['#1', 'that is dark pink']"", ""BOOLEAN['#4', 'is in the right image']"", ""BOOLEAN['logical_and', 'true', '#3', '#5']""]"
NLVR2_dev_dev-980-1-1,If all makeup elements are not touching any other element,"[""SELECT['makeup elements']"", ""SELECT['any element']"", ""FILTER['#2', 'touching #1']"", ""DISCARD['#2', '#3']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to #6']""]","[""SELECT['makeup elements']"", ""SELECT['any element']"", ""DISCARD['#2', '#1']"", ""FILTER['#1', 'touching #3']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to #6']""]"
NLVR2_dev_dev-981-1-1,"If in one of the images, a person's hand is reaching into the pile of phones.","[""SELECT['person']"", ""PROJECT['hand of #REF', '#1']"", ""SELECT['pile of phones']"", ""BOOLEAN['#2', 'is reaching into #3']""]","[""SELECT['person']"", ""PROJECT['hand of #REF', '#1']"", ""SELECT['phones']"", ""PROJECT['pile of #REF', '#3']"", ""BOOLEAN['#2', 'is reaching into #4']""]"
NLVR2_dev_dev-982-2-0,If there is a person holding one of the dogs.,"[""SELECT['person']"", ""SELECT['dogs']"", ""FILTER['#2', 'that #1 is holding']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]","[""SELECT['person']"", ""SELECT['dogs']"", ""FILTER['#1', 'holding #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']""]"
NLVR2_dev_dev-982-2-1,If the dog in the image on the right is outdoors.,"[""SELECT['right image']"", ""PROJECT['dog in #REF', '#1']"", ""BOOLEAN['#2', 'is outdoors']""]","[""SELECT['the image on the right']"", ""PROJECT['dog in #REF', '#1']"", ""BOOLEAN['#2', 'is outdoors']""]"
NLVR2_dev_dev-98-3-0,If the right image contains one large bird that is flying above the ocean.,"[""SELECT['right image']"", ""PROJECT['large bird in #REF', '#1']"", ""PROJECT['ocean in #REF', '#1']"", ""FILTER['#2', 'that is flying above #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']""]","[""SELECT['right image']"", ""PROJECT['bird in #REF', '#1']"", ""FILTER['#2', 'that is large']"", ""PROJECT['ocean in #REF', '#1']"", ""FILTER['#3', 'that is flying above #4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is one']""]"
NLVR2_dev_dev-983-2-0,If the left and right image contains the same number of flutes facing the same directions.,"[""SELECT['flutes']"", ""PROJECT['direction facing of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is the same']"", ""SELECT['left image']"", ""SELECT['right image']"", ""FILTER['#3', 'that are in #4']"", ""FILTER['#3', 'that are in #5']"", ""AGGREGATE['count', '#6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to #9']""]","[""SELECT['flutes']"", ""PROJECT['direction facing of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is the same']"", ""SELECT['left image']"", ""SELECT['right image']"", ""FILTER['#3', 'in #4']"", ""FILTER['#3', 'in #5']"", ""AGGREGATE['count', '#6']"", ""AGGREGATE['count', '#7']"", ""BOOLEAN['#8', 'is equal to #9']""]"
NLVR2_dev_dev-983-2-1,"If each image contains exactly one flute and nothing else, displayed diagonally.","[""SELECT['images']"", ""PROJECT['flutes in #REF', '#1']"", ""FILTER['#2', 'that are displayed diagonally']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is equal to one']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#6', 'is equal to #7']""]","[""SELECT['images']"", ""PROJECT['flutes in #REF', '#1']"", ""FILTER['#2', 'that are displayed diagonally']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is equal to one']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#6', 'is equal to #7']""]"
NLVR2_dev_dev-984-2-1,If at least one llama is carrying a pack.,"[""SELECT['llamas']"", ""SELECT['pack']"", ""FILTER['#1', 'carrying #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']""]","[""SELECT['llamas']"", ""SELECT['pack']"", ""FILTER['#1', 'that are carrying #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']""]"
NLVR2_dev_dev-984-3-0,"If treeless hills are behind a group of llamas, with at least one wearing a pack, in the left image.","[""SELECT['hills']"", ""FILTER['#1', 'that are treeless']"", ""SELECT['group of llamas']"", ""SELECT['pack']"", ""FILTER['#3', 'wearing #4']"", ""FILTER['#2', 'behind #5']"", ""BOOLEAN['#6', 'are in the left image']""]","[""SELECT['hills']"", ""FILTER['#1', 'that are treeless']"", ""SELECT['group of llamas']"", ""SELECT['pack']"", ""FILTER['#2', 'wearing #3']"", ""FILTER['#4', 'behind #5']"", ""BOOLEAN['#6', 'are in the left image']""]"
NLVR2_dev_dev-985-2-0,If the left image contains no more than one antelope.,"[""SELECT['left image']"", ""PROJECT['antelope in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at most one']""]","[""SELECT['left image']"", ""PROJECT['antelopes of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at most one']""]"
NLVR2_dev_dev-986-0-1,If one of the images shows a brown acorn and a green acorn growing from the same stem.,"[""SELECT['acorn']"", ""FILTER['#1', 'that is brown']"", ""FILTER['#1', 'that is green']"", ""PROJECT['stem of #REF', '#2']"", ""PROJECT['stem of #REF', '#3']"", ""COMPARATIVE['#2', '#5', 'is the same as #4']"", ""BOOLEAN['#6', 'is in one of the images']""]","[""SELECT['acorn']"", ""FILTER['#1', 'that is brown']"", ""FILTER['#1', 'that is green']"", ""PROJECT['stem of #REF', '#2']"", ""PROJECT['stem of #REF', '#3']"", ""COMPARATIVE['#2', '#4', 'is the same as #5']"", ""BOOLEAN['#6', 'is in one of the images']""."
NLVR2_dev_dev-986-3-0,"If there are both green and brown acorns in one image, and only green acorns in the other image.","[""SELECT['one image']"", ""PROJECT['acorns in #REF', '#1']"", ""FILTER['#2', 'that are green']"", ""FILTER['#2', 'that are brown']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to one']"", ""BOOLEAN['#6', 'is equal to zero']"", ""BOOLEAN['logical_and', 'true', '#7', '#8']""]","[""SELECT['one image']"", ""PROJECT['acorns in #REF', '#1']"", ""FILTER['#2', 'that are green']"", ""FILTER['#2', 'that are brown']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least two']"", ""BOOLEAN['#6', 'is equal to zero']"", ""BOOLEAN['logical_and', 'true', '#7', '#8']"", ""SELECT['other image']"", ""PROJECT['acorns in #REF', '#9']"", ""FILTER['#10', 'that are green']"", ""AGGREGATE['count', '#11']"", ""AGGREGATE['count', '#12']"", ""BOOLEAN['#13', 'is equal to #11']"", ""BOOLEAN['#14', 'is equal to #12']"", ""BOOLEAN['logical_and', 'true', '#7', '#15']""]"
NLVR2_dev_dev-987-0-1,"If each image contains no more than one dog, and one image shows a woman posing next to a large breed dog that is sitting upright.","[""SELECT['images']"", ""PROJECT['dogs in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is at most one']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#5', 'is equal to #6']"", ""SELECT['woman']"", ""FILTER['#8', 'that is posing next to #9']"", ""BOOLEAN['#10', 'is in one image']"", ""BOOLEAN['logical_and', 'true', '#7', '#11']""]","[""SELECT['images']"", ""PROJECT['dogs in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is at most one']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#5', 'is equal to #6']"", ""SELECT['woman']"", ""FILTER['#8', 'that is posing next to #7']"", ""BOOLEAN['#9', 'is in one image']"", ""BOOLEAN['logical_and', 'true', '#8', '#10']""]"
NLVR2_dev_dev-987-3-0,If a woman is crouched near the dog in the image on the right.,"[""SELECT['woman']"", ""SELECT['dog']"", ""FILTER['#1', 'that is crouched near #2']"", ""BOOLEAN['#3', 'is in the image on the right']""]","[""SELECT['right image']"", ""PROJECT['woman in #REF', '#1']"", ""PROJECT['dog in #REF', '#1']"", ""BOOLEAN['#2', 'is crouched near #3']""]"
NLVR2_dev_dev-988-1-0,If the vases in the image on the left are not the same height.,"[""SELECT['left image']"", ""PROJECT['vases in #REF', '#1']"", ""PROJECT['heights of #REF', '#2']"", ""BOOLEAN['#3', 'are not the same']""]","[""SELECT['the image on the left']"", ""PROJECT['vases in #REF', '#1']"", ""PROJECT['heights of #REF', '#2']"", ""BOOLEAN['#3', 'are not the same']""."
NLVR2_dev_dev-988-2-1,"If two vases in each image are the same size and shape, and have complimentary, but not identical designs.","[""SELECT['vases']"", ""PROJECT['sizes of #REF', '#1']"", ""PROJECT['shapes of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are the same']"", ""COMPARATIVE['#1', '#3', 'are the same']"", ""INTERSECTION['#1', '#4', '#5']"", ""PROJECT['designs of #REF', '#6']"", ""COMPARATIVE['#6', '#7', 'are complimentary']"", ""DISCARD['#6', '#8']"", ""AGGREGATE['count', '#9']"", ""SELECT['images']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is equal to #12']""]","[""SELECT['vases']"", ""PROJECT['sizes of #REF', '#1']"", ""PROJECT['shapes of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are the same']"", ""COMPARATIVE['#1', '#3', 'are the same']"", ""INTERSECTION['#1', '#4', '#5']"", ""PROJECT['designs of #REF', '#6']"", ""COMPARATIVE['#6', '#7', 'are complimentary']"", ""GROUP['count', '#8', '#6']"", ""COMPARATIVE['#6', '#9', 'is equal to two']"", ""AGGREGATE['count', '#10']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#12', 'is equal to #13']""]"
NLVR2_dev_dev-989-0-0,"If each image contains at least one black-and-white spotted newborn pup, and the right image contains more pups overall than the left image.","[""SELECT['images']"", ""PROJECT['pups in #REF', '#1']"", ""FILTER['#2', 'that are newborn']"", ""FILTER['#3', 'that are black-and-white']"", ""FILTER['#4', 'that are spotted']"", ""GROUP['count', '#5', '#1']"", ""COMPARATIVE['#1', '#6', 'is at least one']"", ""AGGREGATE['count', '#7']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#8', 'is equal to #9']"", ""SELECT['the right image']"", ""PROJECT['pups in #REF', '#10']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is higher than #13']"", ""BOOLEAN['logical_and', 'true', '#14', '#15']""]","[""SELECT['images']"", ""PROJECT['pups in #REF', '#1']"", ""FILTER['#2', 'that are newborn']"", ""FILTER['#3', 'that are black-and-white']"", ""FILTER['#4', 'that are spotted']"", ""GROUP['count', '#5', '#1']"", ""COMPARATIVE['#1', '#6', 'is at least one']"", ""AGGREGATE['count', '#7']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#8', 'is equal to #9']"", ""SELECT['the right image']"", ""PROJECT['pups in #REF', '#10']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is higher than #13']"", ""BOOLEAN['logical_and', 'true', '#14', '#15']""]"
NLVR2_dev_dev-989-1-1,If there is at least two new born dogs in the left image.,"[""SELECT['left image']"", ""PROJECT['dogs in #REF', '#1']"", ""FILTER['#2', 'that are new born']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least two']""]","[""SELECT['left image']"", ""PROJECT['dogs in #REF', '#1']"", ""FILTER['#2', 'that are newly born']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least two']""]"
NLVR2_dev_dev-99-0-0,"If one dog stands on all fours in green grass near some type of flowers, and the dog's body is turned leftward.","[""SELECT['dogs']"", ""FILTER['#1', 'that stands on all fours']"", ""SELECT['grass']"", ""FILTER['#3', 'that is green']"", ""SELECT['flowers']"", ""FILTER['#2', 'in #4']"", ""FILTER['#5', 'near #6']"", ""PROJECT['body of #REF', '#7']"", ""COMPARATIVE['#7', '#8', 'is turned leftward']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to one']""]","[""SELECT['dogs']"", ""FILTER['#1', 'that stands on all fours']"", ""SELECT['grass']"", ""FILTER['#3', 'that is green']"", ""SELECT['flowers']"", ""FILTER['#2', 'in #4']"", ""FILTER['#6', 'near #5']"", ""PROJECT['body of #REF', '#7']"", ""BOOLEAN['#8', 'is turned leftward']""]"
NLVR2_dev_dev-990-0-0,"If each image contains a single dark bottle of wine, and no image contains a wine glass.","[""SELECT['images']"", ""PROJECT['bottles of wine in #REF', '#1']"", ""FILTER['#2', 'that are dark']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is equal to one']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#6', 'is equal to #7']"", ""SELECT['wine glass']"", ""FILTER['#9', 'that is in #10']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is equal to zero']"", ""BOOLEAN['logical_and', 'true', '#8', '#13']""]","[""SELECT['bottle of wine']"", ""FILTER['#1', 'that is dark']"", ""SELECT['images']"", ""GROUP['count', '#2', '#3']"", ""COMPARATIVE['#3', '#4', 'is equal to one']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to #7']"", ""SELECT['wine glass']"", ""FILTER['#8', 'that contains #9']"", ""DISCARD['#8', '#10']"", ""AGGREGATE['count', '#11']"", ""BOOLEAN['#12', 'is equal to #13']"", ""BOOLEAN['logical_and', 'true', '#8', '#14']""]"
NLVR2_dev_dev-990-1-1,If there is a number on the label on the bottle in one of the images.,"[""SELECT['label']"", ""SELECT['bottle']"", ""FILTER['#1', 'on #2']"", ""PROJECT['number on #REF', '#3']"", ""BOOLEAN['#4', 'is in one of the images']""]","[""SELECT['label']"", ""SELECT['bottle']"", ""FILTER['#1', 'that is on #2']"", ""PROJECT['number in #REF', '#3']"", ""BOOLEAN['#4', 'is in one of the images']""]"
NLVR2_dev_dev-991-0-1,If at least one panda is sitting near a fallen branch on the ground.,"[""SELECT['panda']"", ""SELECT['branch']"", ""FILTER['#2', 'that is fallen']"", ""SELECT['ground']"", ""FILTER['#3', 'on #4']"", ""FILTER['#1','sitting near #5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least one']""]","[""SELECT['panda']"", ""SELECT['branch']"", ""FILTER['#2', 'that has fallen']"", ""SELECT['ground']"", ""FILTER['#3', 'on #4']"", ""FILTER['#1','sitting near #5']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least one']""]"
NLVR2_dev_dev-991-1-0,"If each image contains one panda grasping some kind of stalk, and the left image features an open-mouthed camera-facing panda chewing on a green stalk.","[""SELECT['panda']"", ""SELECT['stalk']"", ""FILTER['#1', 'grasping #2']"", ""SELECT['images']"", ""GROUP['count', '#3', '#4']"", ""COMPARATIVE['#4', '#5', 'is equal to one']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is equal to #8']"", ""SELECT['left image']"", ""PROJECT['panda in #REF', '#9']"", ""FILTER['#10', 'that is open-mouthed']"", ""FILTER['#11', 'that is camera-facing']"", ""PROJECT['stalk in #REF', '#9']"", ""FILTER['#12', 'that is green']"", ""FILTER['#13', 'chewing on #14']"", ""AGGREGATE['count', '#15']"", ""BOOLEAN['#16', 'is at least one']"", ""BOOLEAN['logical_and', 'true', '#7', '#17']""]","[""SELECT['images']"", ""PROJECT['panda in #REF', '#1']"", ""PROJECT['stalk in #REF', '#1']"", ""FILTER['#2', 'grasping #3']"", ""GROUP['count', '#4', '#1']"", ""COMPARATIVE['#1', '#5', 'is equal to one']"", ""AGGREGATE['count', '#6']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#7', 'is equal to #8']"", ""SELECT['the left image']"", ""PROJECT['panda in #REF', '#9']"", ""FILTER['#10', 'that is open-mouthed']"", ""FILTER['#11', 'that is camera-facing']"", ""PROJECT['stalk in #REF', '#9']"", ""FILTER['#12', 'that is green']"", ""BOOLEAN['#13', 'is chewing on #4']"", ""BOOLEAN['logical_and', 'true', '#7', '#14']""]"
NLVR2_dev_dev-99-2-1,If the dog in the image on the right is facing toward the right.,"[""SELECT['right image']"", ""PROJECT['dog in #REF', '#1']"", ""BOOLEAN['#2', 'is facing toward the right']""]","[""SELECT['dog']"", ""FILTER['#1', 'that is facing toward the right']"", ""BOOLEAN['#2', 'is in the image on the right']""]"
NLVR2_dev_dev-992-2-0,If at least one of the bottles is wrapped in a wet looking paper towel.,"[""SELECT['bottles']"", ""SELECT['paper towel']"", ""FILTER['#2', 'that is wet looking']"", ""FILTER['#1', 'wrapped in #3']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is at least one']""]","[""SELECT['bottles']"", ""SELECT['towel']"", ""FILTER['#2', 'that is paper']"", ""FILTER['#3', 'that looks wet']"", ""FILTER['#1', 'wrapped in #4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is at least one']""]"
NLVR2_dev_dev-992-2-1,If a bottle is wrapped in paper.,"[""SELECT['bottle']"", ""SELECT['paper']"", ""BOOLEAN['#1', 'is wrapped in #2']""]","[""SELECT['bottle']"", ""SELECT['paper']"", ""FILTER['#1', 'wrapped in #2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is at least one']""]"
NLVR2_dev_dev-993-3-0,If there is a large monitor with a blue screen.,"[""SELECT['monitor']"", ""FILTER['#1', 'that is large']"", ""PROJECT['screen of #REF', '#2']"", ""BOOLEAN['#3', 'is blue']""]","[""SELECT['monitors']"", ""FILTER['#1', 'that is large']"", ""PROJECT['screen of #REF', '#2']"", ""BOOLEAN['#3', 'is blue']""]"
NLVR2_dev_dev-994-1-0,If there are at most 3 zebras in the image on the left.,"[""SELECT['left image']"", ""PROJECT['zebras in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at most 3']""]","[""SELECT['left image']"", ""PROJECT['zebras of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is at most 3']""]"
NLVR2_dev_dev-994-2-1,If each image in the pair shows more than five zebras.,"[""SELECT['zebras']"", ""SELECT['images']"", ""GROUP['count', '#1', '#2']"", ""COMPARATIVE['#2', '#3', 'is higher than five']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to #6']""]","[""SELECT['images']"", ""PROJECT['zebras in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is higher than five']"", ""AGGREGATE['count', '#1']"", ""AGGREGATE['count', '#4']"", ""BOOLEAN['#5', 'is equal to #6']""]"
NLVR2_dev_dev-995-1-1,"If one of the boats appears to be facing forward, the other does not.","[""SELECT['boats']"", ""FILTER['#1', 'that appear to be facing forward']"", ""DISCARD['#1', '#2']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']"", ""BOOLEAN['#5', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#6', '#7']""]","[""SELECT['boats']"", ""FILTER['#1', 'that appears to be facing forward']"", ""DISCARD['#1', '#2']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to one']"", ""BOOLEAN['#5', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#6', '#7']""]"
NLVR2_dev_dev-995-3-0,If two boats are pointed right.,"[""SELECT['boats']"", ""FILTER['#1', 'that are pointed right']"", ""AGGREGATE['count', '#2']"", ""BOOLEAN['#3', 'is equal to two']""]","[""SELECT['boats']"", ""AGGREGATE['count', '#1']"", ""BOOLEAN['#2', 'is equal to two']""]"
NLVR2_dev_dev-996-0-1,If the left and right image contains a total of two green canopies.,"[""SELECT['left image']"", ""SELECT['right image']"", ""PROJECT['canopies in #REF', '#1']"", ""PROJECT['canopies in #REF', '#2']"", ""FILTER['#3', 'that are green']"", ""FILTER['#4', 'that are green']"", ""AGGREGATE['count', '#5']"", ""AGGREGATE['count', '#6']"", ""ARITHMETIC['sum', '#7', '#8']"", ""BOOLEAN['#9', 'is equal to two']""]","[""SELECT['left image']"", ""PROJECT['canopies in #REF', '#1']"", ""FILTER['#2', 'that are green']"", ""AGGREGATE['count', '#3']"", ""SELECT['right image']"", ""PROJECT['canopies in #REF', '#5']"", ""FILTER['#6', 'that are green']"", ""AGGREGATE['count', '#7']"", ""ARITHMETIC['sum', '#8', '#9']"", ""BOOLEAN['#10', 'is equal to two']""]"
NLVR2_dev_dev-996-3-0,If the canopy in both images is partially open.,"[""SELECT['canopy']"", ""FILTER['#1', 'that is partially open']"", ""BOOLEAN['#2', 'is in both images']""]","[""SELECT['canopies']"", ""FILTER['#1', 'that are partially open']"", ""BOOLEAN['#2', 'is in both images']""]"
NLVR2_dev_dev-997-0-1,"If a man is on his boat in the water in one of the images, and the man is near his boat on land in the other.","[""SELECT['one image']"", ""PROJECT['man in #REF', '#1']"", ""PROJECT['boat in #REF', '#1']"", ""PROJECT['water in #REF', '#1']"", ""FILTER['#3', 'that is in #4']"", ""BOOLEAN['#2', 'is on #5']"", ""SELECT['other image']"", ""PROJECT['man in #REF', '#7']"", ""PROJECT['boat in #REF', '#7']"", ""PROJECT['land in #REF', '#7']"", ""BOOLEAN['#8', 'is near #9']"", ""BOOLEAN['logical_and', 'true', '#6', '#10']""]","[""SELECT['one image']"", ""PROJECT['man in #REF', '#1']"", ""PROJECT['boat in #REF', '#1']"", ""PROJECT['water in #REF', '#1']"", ""FILTER['#3', 'in #4']"", ""BOOLEAN['#2', 'is on #5']"", ""SELECT['other image']"", ""PROJECT['man in #REF', '#7']"", ""PROJECT['boat in #REF', '#7']"", ""PROJECT['land in #REF', '#7']"", ""FILTER['#8', 'on #9']"", ""BOOLEAN['#10', 'is near #11']"", ""BOOLEAN['logical_and', 'true', '#6', '#11']""]"
NLVR2_dev_dev-997-1-0,If the left and right image contains the same number of boats with one sitting on the grass.,"[""SELECT['boats']"", ""SELECT['the left image']"", ""SELECT['the right image']"", ""FILTER['#1', 'that are in #2']"", ""FILTER['#1', 'that are in #3']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to #7']"", ""SELECT['grass']"", ""FILTER['#1', 'that is sitting on #9']"", ""AGGREGATE['count', '#10']"", ""BOOLEAN['#11', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#8', '#12']""]","[""SELECT['boats']"", ""SELECT['the left image']"", ""SELECT['the right image']"", ""FILTER['#1', 'that are in #2']"", ""FILTER['#1', 'that are in #3']"", ""AGGREGATE['count', '#4']"", ""AGGREGATE['count', '#5']"", ""BOOLEAN['#6', 'is equal to #7']"", ""SELECT['grass']"", ""FILTER['#1', 'that is sitting on #8']"", ""AGGREGATE['count', '#9']"", ""BOOLEAN['#10', 'is equal to one']"", ""BOOLEAN['logical_and', 'true', '#8', '#11']""]"
NLVR2_dev_dev-998-2-1,If in at least one image there is a single jellyfish with it cap  toward the top.,"[""SELECT['images']"", ""PROJECT['jellyfish in #REF', '#1']"", ""PROJECT['cap of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is toward the top']"", ""GROUP['count', '#4', '#1']"", ""COMPARATIVE['#1', '#5', 'is equal to one']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least one']""]","[""SELECT['jellyfish']"", ""PROJECT['cap of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is toward the top']"", ""SELECT['images']"", ""GROUP['count', '#3', '#4']"", ""COMPARATIVE['#4', '#5', 'is equal to one']"", ""AGGREGATE['count', '#6']"", ""BOOLEAN['#7', 'is at least one']""]"
NLVR2_dev_dev-999-2-1,If the bananas do not have a produce sticker on them.,"[""SELECT['bananas']"", ""SELECT['produce sticker']"", ""FILTER['#1', 'that have #2 on them']"", ""AGGREGATE['count', '#3']"", ""BOOLEAN['#4', 'is equal to zero']""]","[""SELECT['bananas']"", ""SELECT['produce sticker']"", ""BOOLEAN['#1', 'have #2 on them']"", ""BOOLEAN['#3', 'is false']""]"
NLVR2_dev_dev-999-3-0,If there are bananas with stickers on them,"[""SELECT['bananas']"", ""SELECT['stickers']"", ""BOOLEAN['#1', 'are with #2 on them']""]","[""SELECT['bananas']"", ""SELECT['stickers']"", ""BOOLEAN['#1', 'have #2 on them']""]"
SPIDER_dev_0,How many singers do we have?,"[""SELECT['singers']"", ""AGGREGATE['count', '#1']""]","[""SELECT['songers']"", ""AGGREGATE['count', '#1']""]"
SPIDER_dev_1,What is the total number of singers?,"[""SELECT['singers']"", ""AGGREGATE['count', '#1']""]","[""SELECT['singers']"", ""PROJECT['count of #REF', '#1']""]"
SPIDER_dev_10,Show all countries and the number of singers in each country.,"[""SELECT['countries']"", ""PROJECT['singers in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""UNION['#1', '#3']""]","[""SELECT['countries']"", ""PROJECT['singers from #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""UNION['#1', '#3']""]"
SPIDER_dev_100,What is the name of the different car makers who produced a car in 1970?,"[""SELECT['car makers']"", ""FILTER['#1', 'who produced a car in 1970']"", ""PROJECT['different #REF', '#2']"", ""PROJECT['names of #REF', '#3']""]","[""SELECT['car makers']"", ""FILTER['#1', 'who produced a car in 1970']"", ""PROJECT['different #REF', '#2']"", ""PROJECT['name of #REF', '#3']""]"
SPIDER_dev_101,Find the make and production time of the cars that were produced in the earliest year?,"[""SELECT['cars']"", ""PROJECT['years produced of #REF', '#1']"", ""SUPERLATIVE['min', '#1', '#2']"", ""PROJECT['make of #REF', '#3']"", ""PROJECT['production time of #REF', '#3']"", ""UNION['#4', '#5']""]","[""SELECT['cars']"", ""PROJECT['years #REF were produced', '#1']"", ""SUPERLATIVE['min', '#1', '#2']"", ""PROJECT['make of #REF', '#3']"", ""PROJECT['production time of #REF', '#3']"", ""UNION['#4', '#5']""]"
SPIDER_dev_102,What is the maker of the cars produced in the earliest year and what year was it?,"[""SELECT['cars']"", ""PROJECT['year produced of #REF', '#1']"", ""SUPERLATIVE['min', '#1', '#2']"", ""PROJECT['maker of #REF', '#3']"", ""PROJECT['year produced of #REF', '#4']"", ""UNION['#4', '#5']""]","[""SELECT['cars']"", ""PROJECT['makers of #REF', '#1']"", ""PROJECT['years produced of #REF', '#2']"", ""SUPERLATIVE['min', '#2', '#3']"", ""PROJECT['year of #REF', '#4']"", ""UNION['#4', '#5']""]"
SPIDER_dev_103,Which distinct car models are the produced after 1980?,"[""SELECT['car models']"", ""FILTER['#1', 'produced after 1980']"", ""PROJECT['distinct #REF', '#2']""]","[""SELECT['cars']"", ""FILTER['#1', 'produced after 1980']"", ""PROJECT['distinct models of #REF', '#2']""]"
SPIDER_dev_104,What are the different models for the cars produced after 1980?,"[""SELECT['cars']"", ""FILTER['#1', 'produced after 1980']"", ""PROJECT['different models of #REF', '#2']""]","[""SELECT['cars']"", ""FILTER['#1', 'produced after 1980']"", ""PROJECT['different models for #REF', '#2']""]"
SPIDER_dev_105,How many car makers are there in each continents? List the continent name and the count.,"[""SELECT['continents']"", ""PROJECT['car makers in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""PROJECT['names of #REF', '#1']"", ""UNION['#4', '#3']""]","[""SELECT['continents']"", ""PROJECT['car makers in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""UNION['#1', '#3']""]"
SPIDER_dev_106,What is the name of each continent and how many car makers are there in each one?,"[""SELECT['continents']"", ""PROJECT['names of #REF', '#1']"", ""PROJECT['car makers in #REF', '#1']"", ""GROUP['count', '#3', '#1']"", ""UNION['#2', '#4']""]","[""SELECT['continents']"", ""PROJECT['names of #REF', '#1']"", ""PROJECT['car makers on #REF', '#1']"", ""GROUP['count', '#3', '#1']"", ""UNION['#2', '#4']""]"
SPIDER_dev_107,Which of the countries has the most car makers? List the country name.,"[""SELECT['countries']"", ""PROJECT['car makers in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']"", ""PROJECT['name of #REF', '#4']""]","[""SELECT['countries']"", ""PROJECT['car makers of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']"", ""PROJECT['name of #REF', '#4']""]"
SPIDER_dev_108,What is the name of the country with the most car makers?,"[""SELECT['countries']"", ""PROJECT['car makers of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']"", ""PROJECT['name of #REF', '#4']""]","[""SELECT['car makers']"", ""PROJECT['countries of #REF', '#1']"", ""GROUP['count', '#1', '#2']"", ""SUPERLATIVE['max', '#2', '#3']"", ""PROJECT['name of #REF', '#4']""]"
SPIDER_dev_109,How many car models are produced by each maker? Only list the count and the maker full name.,"[""SELECT['maker']"", ""PROJECT['car models produced by #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""PROJECT['full name of #REF', '#1']"", ""UNION['#3', '#4']""]","[""SELECT['car makers']"", ""PROJECT['car models produced by #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""PROJECT['full name of #REF', '#1']"", ""UNION['#3', '#4']""]"
SPIDER_dev_11,How many singers are from each country?,"[""SELECT['countries']"", ""PROJECT['singers from #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""UNION['#1', '#3']""]","[""SELECT['countries']"", ""PROJECT['singers from each #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""UNION['#1', '#3']""]"
SPIDER_dev_110,What is the number of car models that are produced by each maker and what is the id and full name of each maker?,"[""SELECT['maker']"", ""PROJECT['car models produced by #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""PROJECT['ids of #REF', '#1']"", ""PROJECT['full names of #REF', '#1']"", ""UNION['#3', '#4']""]","[""SELECT['maker']"", ""PROJECT['car models produced by #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""PROJECT['ids of #REF', '#1']"", ""PROJECT['full names of #REF', '#1']"", ""UNION['#4', '#3']""]"
SPIDER_dev_111,What is the accelerate of the car make amc hornet sportabout (sw)?,"[""SELECT['cars']"", ""PROJECT['make of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is amc hornet sportabout sw']"", ""PROJECT['acceleration of #REF', '#3']""]","[""SELECT['cars']"", ""PROJECT['makes of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is amc hornet sportabout sw']"", ""PROJECT['accelerator of #REF', '#3']""]"
SPIDER_dev_112,How much does the car accelerate that makes amc hornet sportabout (sw)?,"[""SELECT['acme hornet sportabout']"", ""PROJECT['car that makes #REF', '#1']"", ""PROJECT['speed of #REF', '#2']"", ""ARITHMETIC['difference', '#3', '#4']""]","[""SELECT['the amc hornet sportabout sw']"", ""PROJECT['car that makes #REF', '#1']"", ""PROJECT['accelerate of #REF', '#2']"", ""AGGREGATE['count', '#3']""]"
SPIDER_dev_113,How many car makers are there in france?,"[""SELECT['france']"", ""PROJECT['car makers of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['car makers']"", ""FILTER['#1', 'in france']"", ""AGGREGATE['count', '#2']""]"
SPIDER_dev_114,What is the number of makers of cars in France?,"[""SELECT['France']"", ""PROJECT['cars of #REF', '#1']"", ""PROJECT['maker of #REF', '#2']"", ""AGGREGATE['count', '#3']""]","[""SELECT['France']"", ""PROJECT['car makers of #REF', '#1']"", ""AGGREGATE['count', '#2']""]"
SPIDER_dev_115,How many car models are produced in the usa?,"[""SELECT['car models']"", ""FILTER['#1', 'produced in the usa']"", ""AGGREGATE['count', '#2']""]","[""SELECT['car models']"", ""FILTER['#1', 'produced in the usa']"", ""AGGREGATE['count', '#2']""]."
SPIDER_dev_116,What is the count of the car models produced in the United States?,"[""SELECT['car models']"", ""FILTER['#1', 'produced in the United States']"", ""AGGREGATE['count', '#2']""]","[""SELECT['car models']"", ""FILTER['#1', 'produced in the United States']"", ""PROJECT['the count of #REF', '#2']""."
SPIDER_dev_117,What is the average miles per gallon(mpg) of the cars with 4 cylinders?,"[""SELECT['cars']"", ""FILTER['#1', 'with 4 cylinders']"", ""PROJECT['miles per gallon of #REF', '#2']"", ""AGGREGATE['avg', '#3']""]","[""SELECT['cars']"", ""PROJECT['cylinders of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is 4']"", ""PROJECT['miles per gallon('#3', 'are the average']""]"
SPIDER_dev_118,What is the average miles per gallon of all the cars with 4 cylinders?,"[""SELECT['cars']"", ""FILTER['#1', 'with 4 cylinders']"", ""PROJECT['miles per gallon of #REF', '#2']"", ""AGGREGATE['avg', '#3']""]","[""SELECT['cars']"", ""FILTER['#1', 'that have 4 cylinders']"", ""PROJECT['miles per gallon of #REF', '#2']"", ""AGGREGATE['avg', '#3']""]"
SPIDER_dev_119,What is the smallest weight of the car produced with 8 cylinders on 1974?,"[""SELECT['cars']"", ""FILTER['#1', 'produced with 8 cylinders']"", ""FILTER['#2', 'on 1974']"", ""PROJECT['weight of #REF', '#3']"", ""AGGREGATE['min', '#4']""]","[""SELECT['cars']"", ""FILTER['#1', 'produced with 8 cylinders']"", ""FILTER['#2', 'on 1974']"", ""PROJECT['weight of #REF', '#3']"", ""AGGREGATE['max', '#4']""]"
SPIDER_dev_12,List all song names by singers above the average age.,"[""SELECT['singers']"", ""PROJECT['ages of #REF', '#1']"", ""AGGREGATE['avg', '#2']"", ""COMPARATIVE['#1', '#2', 'is higher than #3']"", ""PROJECT['song names of #REF', '#4']""]","[""SELECT['singers']"", ""PROJECT['ages of #REF', '#1']"", ""GROUP['avg', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is higher than #4']"", ""PROJECT['song names of #REF', '#5."
SPIDER_dev_120,What is the minimum weight of the car with 8 cylinders produced in 1974?,"[""SELECT['cars']"", ""PROJECT['cylinders of #REF', '#1']"", ""FILTER['#2', 'produced in 1974']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is 8']"", ""PROJECT['weight of #REF', '#5']"", ""AGGREGATE['min', '#6']""]","[""SELECT['cars']"", ""FILTER['#1', 'that are produced in 1974']"", ""PROJECT['cylinders of #REF', '#2']"", ""GROUP['count', '#3', '#2']"", ""COMPARATIVE['#2', '#4', 'is 8']"", ""PROJECT['weight of #REF', '#5']"", ""AGGREGATE['min', '#6']""]"
SPIDER_dev_121,What are all the makers and models?,"[""SELECT['makers']"", ""SELECT['models']"", ""UNION['#1', '#2']""]","[""SELECT['maker']"", ""SELECT['models']"", ""UNION['#1', '#2']""]"
SPIDER_dev_122,What are the makers and models?,"[""SELECT['makers']"", ""PROJECT['models of #REF', '#1']"", ""UNION['#1', '#2']""]","[""SELECT['makers']"", ""SELECT['models']"", ""UNION['#1', '#2']""]"
SPIDER_dev_123,What are the countries having at least one car maker? List name and id.,"[""SELECT['countries']"", ""PROJECT['car makers in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is at least one']"", ""PROJECT['names of #REF', '#4']"", ""PROJECT['ids of #REF', '#4']"", ""UNION['#5', '#6']""]","[""SELECT['car makers']"", ""PROJECT['countries of #REF', '#1']"", ""GROUP['count', '#1', '#2']"", ""COMPARATIVE['#2', '#3', 'is at least one']"", ""PROJECT['names of #REF', '#4']"", ""PROJECT['ids of #REF', '#4']"", ""UNION['#5', '#6']""]"
SPIDER_dev_124,What are the names and ids of all countries with at least one car maker?,"[""SELECT['countries']"", ""PROJECT['car makers of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is at least one']"", ""PROJECT['names of #REF', '#4']"", ""PROJECT['ids of #REF', '#4']"", ""UNION['#5', '#6']""]","[""SELECT['countries']"", ""PROJECT['car makers in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is at least one']"", ""PROJECT['names of #REF', '#4']"", ""PROJECT['ids of #REF', '#4']"", ""UNION['#5', '#6']""]"
SPIDER_dev_125,What is the number of the cars with horsepower more than 150?,"[""SELECT['cars']"", ""PROJECT['horses of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is higher than 150']"", ""AGGREGATE['count', '#3']""]","[""SELECT['cars']"", ""PROJECT['horses of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is more than 150']"", ""AGGREGATE['count', '#3']""]"
SPIDER_dev_126,What is the number of cars with a horsepower greater than 150?,"[""SELECT['cars']"", ""PROJECT['horses of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is higher than 150']"", ""AGGREGATE['count', '#3']""]","[""SELECT['cars']"", ""PROJECT['horses of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is greater than 150']"", ""AGGREGATE['count', '#3']""]"
SPIDER_dev_127,What is the average weight of cars each year?,"[""SELECT['cars']"", ""PROJECT['weights of #REF', '#1']"", ""GROUP['avg', '#2', '#1']"", ""UNION['#1', '#3']""]","[""SELECT['cars']"", ""PROJECT['weights of #REF', '#1']"", ""GROUP['avg', '#2', '#1']"", ""FILTER['#3', 'in each year']""."
SPIDER_dev_128,What is the average weight and year for each year?,"[""SELECT['years']"", ""PROJECT['weights of #REF', '#1']"", ""GROUP['avg', '#2', '#1']"", ""PROJECT['years of #REF', '#1']"", ""GROUP['avg', '#4', '#1']"", ""UNION['#3', '#5']""]","[""SELECT['years']"", ""PROJECT['weights in #REF', '#1']"", ""GROUP['avg', '#2', '#1']"", ""PROJECT['years of #REF', '#1']"", ""GROUP['avg', '#4', '#1']"", ""UNION['#3', '#5']""]"
SPIDER_dev_129,Which countries in europe have at least 3 car manufacturers?,"[""SELECT['europe']"", ""PROJECT['countries of #REF', '#1']"", ""PROJECT['car manufacturers of #REF', '#2']"", ""GROUP['count', '#3', '#2']"", ""COMPARATIVE['#2', '#4', 'is at least 3']""]","[""SELECT['europe']"", ""PROJECT['car manufacturers of #REF', '#1']"", ""PROJECT['countries of #REF', '#2']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is at least 3']""]"
SPIDER_dev_13,What are all the song names by singers who are older than average?,"[""SELECT['singers']"", ""PROJECT['oldness of #REF', '#1']"", ""AGGREGATE['avg', '#2']"", ""COMPARATIVE['#1', '#2', 'is higher than #3']"", ""PROJECT['song names of #REF', '#4']""]","[""SELECT['singers']"", ""PROJECT['how old are #REF', '#1']"", ""AGGREGATE['avg', '#2']"", ""COMPARATIVE['#1', '#2', 'is higher than #3']"", ""PROJECT['song names of #REF', '#4']""]"
SPIDER_dev_130,What are the names of all European countries with at least 3 manufacturers?,"[""SELECT['European countries']"", ""PROJECT['manufacturers of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is at least 3']"", ""PROJECT['names of #REF', '#4']""]","[""SELECT['European countries']"", ""FILTER['#1', 'with at least 3 manufacturers']"", ""PROJECT['names of #REF', '#2']""]"
SPIDER_dev_131,What is the maximum horsepower and the make of the car models with 3 cylinders?,"[""SELECT['car models']"", ""PROJECT['cylinders of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is 3']"", ""PROJECT['horse horsepower of #REF', '#4']"", ""AGGREGATE['max', '#5']"", ""PROJECT['make of #REF', '#4']"", ""UNION['#6', '#7']""]","[""SELECT['car models']"", ""PROJECT['cylinders of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is 3']"", ""PROJECT['horse of #REF', '#4']"", ""AGGREGATE['max', '#5']"", ""PROJECT['make of #REF', '#4']"", ""UNION['#6', '#7']""]"
SPIDER_dev_132,What is the largest amount of horsepower for the models with 3 cylinders and what make is it?,"[""SELECT['models']"", ""PROJECT['cylinders of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is 3']"", ""PROJECT['horses of #REF', '#4']"", ""AGGREGATE['max', '#5']"", ""PROJECT['make of #REF', '#4']"", ""UNION['#6', '#7']""]","[""SELECT['models']"", ""PROJECT['cylinders of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is 3']"", ""PROJECT['horse horsepower of #REF', '#4']"", ""AGGREGATE['max', '#5']"", ""PROJECT['make of #REF', '#4']"", ""UNION['#6', '#7']""]"
SPIDER_dev_133,"Which model saves the most gasoline? That is to say, have the maximum miles per gallon.","[""SELECT['models']"", ""PROJECT['miles per gallon of #REF', '#1']"", ""GROUP['sum', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is the highest']""]","[""SELECT['models']"", ""PROJECT['miles per gallon of #REF', '#1']"", ""AGGREGATE['max', '#2']"", ""COMPARATIVE['#1', '#2', 'is equal to #3']""]"
SPIDER_dev_134,What is the car model with the highest mpg?,"[""SELECT['car models']"", ""PROJECT['mpg of #REF', '#1']"", ""SUPERLATIVE['max', '#1', '#2']""]","[""SELECT['car models']"", ""PROJECT['mpgs of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is the highest']""."
SPIDER_dev_135,What is the average horsepower of the cars before 1980?,"[""SELECT['cars']"", ""FILTER['#1', 'before 1980']"", ""PROJECT['horsepower of #REF', '#2']"", ""AGGREGATE['avg', '#3']""]","[""SELECT['cars']"", ""FILTER['#1', 'before 1980']"", ""PROJECT['horsepower of #REF', '#2']"", ""AGGREGATE['avg', '#3']""."
SPIDER_dev_136,What is the average horsepower for all cars produced before 1980?,"[""SELECT['cars']"", ""FILTER['#1', 'produced before 1980']"", ""PROJECT['horsepower of #REF', '#2']"", ""AGGREGATE['avg', '#3']""]","[""SELECT['cars']"", ""FILTER['#1', 'produced before 1980']"", ""PROJECT['horses of #REF', '#2']"", ""AGGREGATE['avg', '#3']""]"
SPIDER_dev_137,What is the average edispl of the cars of model volvo?,"[""SELECT['model volvo']"", ""PROJECT['cars of #REF', '#1']"", ""PROJECT['edispl of #REF', '#2']"", ""AGGREGATE['avg', '#3']""]","[""SELECT['model volvo']"", ""PROJECT['cars of #REF', '#1']"", ""PROJECT['edispl of #REF', '#2']"", ""AGGREGATE['avg', '#3']""."
SPIDER_dev_138,What is the average edispl for all volvos?,"[""SELECT['volvos']"", ""PROJECT['edispl of #REF', '#1']"", ""AGGREGATE['avg', '#2']""]","[""SELECT['volvos']"", ""PROJECT['the edispl of #REF', '#1']"", ""AGGREGATE['avg', '#2']""]"
SPIDER_dev_139,What is the maximum accelerate for different number of cylinders?,"[""SELECT['cylinders']"", ""PROJECT['accelerators of #REF', '#1']"", ""GROUP['max', '#2', '#1']"", ""UNION['#1', '#3']""]","[""SELECT['cylinders']"", ""AGGREGATE['count', '#1']"", ""PROJECT['accelerators of #REF', '#2']"", ""GROUP['max', '#3', '#2']"", ""UNION['#2', '#4']""]"
SPIDER_dev_14,Show location and name for all stadiums with a capacity between 5000 and 10000.,"[""SELECT['stadiums']"", ""PROJECT['capacities of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is at least 5000']"", ""COMPARATIVE['#1', '#2', 'is at most 10000']"", ""INTERSECTION['#1', '#3', '#4']"", ""PROJECT['locations of #REF', '#5']"", ""PROJECT['names of #REF', '#5']"", ""UNION['#6', '#7']""]","[""SELECT['stadiums']"", ""PROJECT['capacities of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is higher than 5000']"", ""COMPARATIVE['#1', '#2', 'is lower than 10000']"", ""INTERSECTION['#1', '#3', '#4']"", ""PROJECT['locations of #REF', '#5']"", ""PROJECT['names of #REF', '#5']"", ""UNION['#6', '#7']""]"
SPIDER_dev_140,What is the maximum accelerate for all the different cylinders?,"[""SELECT['cylinders']"", ""PROJECT['different #REF', '#1']"", ""PROJECT['accelerators of #REF', '#2']"", ""GROUP['max', '#3', '#2']"", ""UNION['#2', '#4']""]","[""SELECT['cylinders']"", ""PROJECT['different #REF', '#1']"", ""PROJECT['accelerators of #REF', '#2']"", ""GROUP['max', '#3', '#1']"", ""UNION['#1', '#4']""]"
SPIDER_dev_141,Which model has the most version(make) of cars?,"[""SELECT['models']"", ""PROJECT['cars of #REF', '#1']"", ""PROJECT['makes of #REF', '#2']"", ""PROJECT['versions of #REF', '#3']"", ""GROUP['count', '#4', '#1']"", ""SUPERLATIVE['max', '#1', '#5']""]","[""SELECT['models']"", ""PROJECT['cars of #REF', '#1']"", ""PROJECT['makes of #REF', '#2']"", ""GROUP['count', '#2', '#3']"", ""SUPERLATIVE['max', '#1', '#4']""]"
SPIDER_dev_142,What model has the most different versions?,"[""SELECT['models']"", ""PROJECT['different versions of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']""]","[""SELECT['models']"", ""PROJECT['different versions of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is the highest']""]"
SPIDER_dev_143,How many cars have more than 4 cylinders?,"[""SELECT['cars']"", ""PROJECT['cylinders of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is higher than 4']"", ""AGGREGATE['count', '#4']""]","[""SELECT['cars']"", ""PROJECT['cylinders of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is more than 4']"", ""AGGREGATE['count', '#4']""]"
SPIDER_dev_144,What is the number of cars with more than 4 cylinders?,"[""SELECT['cars']"", ""PROJECT['cylinders of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is higher than 4']"", ""AGGREGATE['count', '#4']""]","[""SELECT['cars']"", ""PROJECT['cylinders in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is higher than 4']"", ""AGGREGATE['count', '#4']""]"
SPIDER_dev_145,how many cars were produced in 1980?,"[""SELECT['cars']"", ""FILTER['#1', 'produced in 1980']"", ""AGGREGATE['count', '#2']""]","[""SELECT['cars']"", ""FILTER['#1', 'that were produced in 1980']"", ""AGGREGATE['count', '#2']""]"
SPIDER_dev_146,"In 1980, how many cars were made?","[""SELECT['cars']"", ""FILTER['#1', 'in 1980']"", ""AGGREGATE['count', '#2']""]","[""SELECT['cars']"", ""FILTER['#1', 'that were made in 1980']"", ""AGGREGATE['count', '#2']""]"
SPIDER_dev_147,How many car models were produced by the maker with full name American Motor Company?,"[""SELECT['maker']"", ""PROJECT['full name of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is American Motor Company']"", ""PROJECT['car models produced by #REF', '#3']"", ""AGGREGATE['count', '#4']""]","[""SELECT['maker']"", ""FILTER['#1', 'with full name American Motor Company']"", ""PROJECT['car models produced by #REF', '#2']"", ""AGGREGATE['count', '#3']""]"
SPIDER_dev_148,What is the number of car models created by the car maker American Motor Company?,"[""SELECT['American Motor Company']"", ""PROJECT['car models created by #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['the American Motor Company']"", ""PROJECT['car models created by #REF', '#1']"", ""AGGREGATE['count', '#2']""]"
SPIDER_dev_149,Which makers designed more than 3 car models? List full name and the id.,"[""SELECT['maker']"", ""PROJECT['car models #REF designed', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is higher than 3']"", ""PROJECT['full name of #REF', '#4']"", ""PROJECT['id of #REF', '#4']"", ""UNION['#5', '#6']""]","[""SELECT['maker']"", ""PROJECT['car models that #REF designed', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is higher than 3']"", ""PROJECT['full name of #REF', '#4']"", ""PROJECT['id of #REF', '#4']"", ""UNION['#5', '#6']""]"
SPIDER_dev_15,What are the locations and names of all stadiums with capacity between 5000 and 10000?,"[""SELECT['stadiums']"", ""PROJECT['capacities of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is at least 5000']"", ""COMPARATIVE['#1', '#2', 'is at most 10000']"", ""INTERSECTION['#1', '#3', '#4']"", ""PROJECT['locations of #REF', '#5']"", ""PROJECT['names of #REF', '#5']"", ""UNION['#6', '#7']""]","[""SELECT['stadiums']"", ""PROJECT['capacities of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is at least 5000']"", ""COMPARATIVE['#1', '#2', 'is at most 10000']"", ""INTERSECTION['#1', '#3', '#4']"", ""PROJECT['the locations of #REF', '#5']"", ""PROJECT['the names of #REF', '#5']"", ""UNION['#6', '#7']""]"
SPIDER_dev_150,What are the names and ids of all makers with more than 3 models?,"[""SELECT['maker']"", ""PROJECT['models of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is higher than 3']"", ""PROJECT['names of #REF', '#4']"", ""PROJECT['ids of #REF', '#4']"", ""UNION['#5', '#6']""]","[""SELECT['maker']"", ""PROJECT['models of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is more than 3']"", ""PROJECT['names of #REF', '#4']"", ""PROJECT['ids of #REF', '#4']"", ""UNION['#5', '#6']""]"
SPIDER_dev_151,Which distinctive models are produced by maker with the full name General Motors or weighing more than 3500?,"[""SELECT['maker']"", ""PROJECT['full name of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is General Motors']"", ""PROJECT['weight of #REF', '#1']"", ""COMPARATIVE['#1', '#4', 'is higher than 3500']"", ""UNION['#3', '#5']"", ""PROJECT['distinct models produced by #REF', '#6']""]","[""SELECT['makers']"", ""PROJECT['full names of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is General Motors']"", ""PROJECT['weights of #REF', '#1']"", ""COMPARATIVE['#1', '#4', 'is higher than 3500']"", ""UNION['#3', '#5']"", ""PROJECT['distinct models produced by #REF', '#6']""]"
SPIDER_dev_152,What are the different models created by either the car maker General Motors or weighed more than 3500?,"[""SELECT['different models']"", ""FILTER['#1', 'created by the car maker General Motors']"", ""FILTER['#1', 'that weighed more than 3500']"", ""UNION['#2', '#3']""]","[""SELECT['models']"", ""FILTER['#1', 'created by the car maker General Motors']"", ""FILTER['#1', 'that weighed more than 3500']"", ""UNION['#2', '#3']""]"
SPIDER_dev_153,In which years cars were produced weighing no less than 3000 and no more than 4000?,"[""SELECT['cars were produced']"", ""PROJECT['weight of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is at least 3000']"", ""COMPARATIVE['#1', '#2', 'is at most 4000']"", ""INTERSECTION['#1', '#3', '#4']"", ""PROJECT['years of #REF', '#5']""]","[""SELECT['cars produced']"", ""PROJECT['weights of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is at least 3000']"", ""COMPARATIVE['#1', '#2', 'is at most 4000']"", ""INTERSECTION['#1', '#3', '#4']"", ""PROJECT['years of #REF', '#5']""]"
SPIDER_dev_154,What are the different years in which there were cars produced that weighed less than 4000 and also cars that weighted more than 3000?,"[""SELECT['cars produced']"", ""PROJECT['weights of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is lower than 4000']"", ""COMPARATIVE['#1', '#2', 'is higher than 3000']"", ""INTERSECTION['#1', '#3', '#4']"", ""PROJECT['different years of #REF', '#5']""]","[""SELECT['cars produced']"", ""PROJECT['weighted of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is lower than 4000']"", ""COMPARATIVE['#1', '#2', 'is higher than 3000']"", ""INTERSECTION['#1', '#3', '#4']"", ""PROJECT['different years of #REF', '#5']""."
SPIDER_dev_155,What is the horsepower of the car with the largest accelerate?,"[""SELECT['cars']"", ""PROJECT['accelerators of #REF', '#1']"", ""SUPERLATIVE['max', '#1', '#2']"", ""PROJECT['horsepower of #REF', '#3']""]","[""SELECT['cars']"", ""PROJECT['accelerators of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is the largest']"", ""PROJECT['horsepower of #REF', '#3']""."
SPIDER_dev_156,What is the horsepower of the car with the greatest accelerate?,"[""SELECT['cars']"", ""PROJECT['accelerators of #REF', '#1']"", ""SUPERLATIVE['max', '#1', '#2']"", ""PROJECT['horsepower of #REF', '#3']""]","[""SELECT['cars']"", ""PROJECT['accelerates of #REF', '#1']"", ""SUPERLATIVE['max', '#1', '#2']"", ""PROJECT['horsepower of #REF', '#3']""]"
SPIDER_dev_157,"For model volvo, how many cylinders does the car with the least accelerate have?","[""SELECT['model volvo']"", ""PROJECT['car of #REF', '#1']"", ""PROJECT['accelerators of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is the lowest']"", ""PROJECT['cylinders of #REF', '#4']"", ""AGGREGATE['count', '#5']""]","[""SELECT['model volvo']"", ""PROJECT['car of #REF', '#1']"", ""PROJECT['accelerators of #REF', '#2']"", ""SUPERLATIVE['min', '#2', '#3']"", ""PROJECT['cylinders of #REF', '#4']"", ""AGGREGATE['count', '#5']""]"
SPIDER_dev_158,"For a volvo model, how many cylinders does the version with least accelerate have?","[""SELECT['volvo models']"", ""PROJECT['cylinders of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is the lowest']"", ""AGGREGATE['count', '#4']""]","[""SELECT['volvo models']"", ""PROJECT['cylinders of #REF', '#1']"", ""PROJECT['accelerators of #REF', '#2']"", ""GROUP['count', '#3', '#2']"", ""COMPARATIVE['#2', '#4', 'is the lowest']""]"
SPIDER_dev_159,How many cars have a larger accelerate than the car with the largest horsepower?,"[""SELECT['cars']"", ""PROJECT['horses of #REF', '#1']"", ""SUPERLATIVE['max', '#1', '#2']"", ""PROJECT['accelerator of #REF', '#3']"", ""PROJECT['accelerator of #REF', '#4']"", ""COMPARATIVE['#1', '#5', 'is higher than #6']"", ""AGGREGATE['count', '#7']""]","[""SELECT['cars']"", ""PROJECT['horses of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is the highest']"", ""PROJECT['accelerators of #REF', '#3']"", ""PROJECT['accelerators of #REF', '#4']"", ""COMPARATIVE['#1', '#5', 'is higher than #6']"", ""AGGREGATE['count', '#7']""]"
SPIDER_dev_16,What is the maximum capacity and the average of all stadiums?,"[""SELECT['stadiums']"", ""PROJECT['capacities of #REF', '#1']"", ""AGGREGATE['max', '#2']"", ""AGGREGATE['avg', '#2']"", ""UNION['#3', '#4']""]","[""SELECT['stadiums']"", ""PROJECT['capacity of all #REF', '#1']"", ""AGGREGATE['max', '#2']"", ""AGGREGATE['avg', '#2']"", ""UNION['#3', '#4']""]"
SPIDER_dev_160,What is the number of cars with a greater accelerate than the one with the most horsepower?,"[""SELECT['cars']"", ""PROJECT['accelerators of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is the highest']"", ""DISCARD['#1', '#4']"", ""PROJECT['accelerators of #REF', '#5']"", ""COMPARATIVE['#5', '#6', 'is greater than #7']"", ""AGGREGATE['count', '#8']""]","[""SELECT['cars']"", ""PROJECT['accelerators of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is greater than #3']"", ""PROJECT['horses of #REF', '#1']"", ""GROUP['count', '#4', '#1']"", ""COMPARATIVE['#1', '#5', 'is the highest']"", ""AGGREGATE['count', '#6']""]"
SPIDER_dev_161,How many countries has more than 2 car makers?,"[""SELECT['countries']"", ""PROJECT['car makers in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is higher than 2']"", ""AGGREGATE['count', '#4']""]","[""SELECT['car makers']"", ""PROJECT['countries of #REF', '#1']"", ""GROUP['count', '#1', '#2']"", ""COMPARATIVE['#2', '#3', 'is higher than 2']"", ""AGGREGATE['count', '#4']""]"
SPIDER_dev_162,What is the number of countries with more than 2 car makers?,"[""SELECT['countries']"", ""PROJECT['car makers in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is higher than 2']"", ""AGGREGATE['count', '#4']""]","[""SELECT['countries']"", ""PROJECT['car makers of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is higher than 2']"", ""AGGREGATE['count', '#4']""]"
SPIDER_dev_163,How many cars has over 6 cylinders?,"[""SELECT['cars']"", ""PROJECT['cylinders of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is higher than 6']"", ""AGGREGATE['count', '#4']""]","[""SELECT['cars']"", ""PROJECT['cylinders of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is more than 6']"", ""AGGREGATE['count', '#4']""]"
SPIDER_dev_164,What is the number of cars with over 6 cylinders?,"[""SELECT['cars']"", ""PROJECT['cylinders of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is higher than 6']"", ""AGGREGATE['count', '#3']""]","[""SELECT['cars']"", ""FILTER['#1', 'with more than 6 cylinders']"", ""AGGREGATE['count', '#2']""]"
SPIDER_dev_165,"For the cars with 4 cylinders, which model has the largest horsepower?","[""SELECT['cars']"", ""PROJECT['cylinders of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is 4']"", ""PROJECT['horsepower of #REF', '#3']"", ""SUPERLATIVE['max', '#3', '#4']"", ""PROJECT['model of #REF', '#5']""]","[""SELECT['cars']"", ""PROJECT['cylinders of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is 4']"", ""PROJECT['horsepower of #REF', '#3']"", ""SUPERLATIVE['max', '#3', '#4']"", ""PROJECT['model of #REF', '#5']""."
SPIDER_dev_166,"For all of the 4 cylinder cars, which model has the most horsepower?","[""SELECT['cars']"", ""FILTER['#1', 'that are 4 cylinder']"", ""PROJECT['horses of #REF', '#2']"", ""GROUP['count', '#3', '#2']"", ""COMPARATIVE['#2', '#4', 'is the highest']"", ""PROJECT['the model of #REF', '#5']""]","[""SELECT['cars']"", ""FILTER['#1', 'that are 4 cylinder']"", ""PROJECT['horses of #REF', '#2']"", ""GROUP['count', '#2', '#3']"", ""COMPARATIVE['#3', '#4', 'is the highest']"", ""PROJECT['the model of #REF', '#5']""]"
SPIDER_dev_167,"Among the cars with more than lowest horsepower, which ones do not have more than 3 cylinders? List the car makeid and make name.","[""SELECT['cars']"", ""PROJECT['horses of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is higher than lowest']"", ""PROJECT['cylinders of #REF', '#3']"", ""GROUP['count', '#4', '#3']"", ""COMPARATIVE['#3', '#5', 'is at most 3']"", ""DISCARD['#3', '#6']"", ""PROJECT['makeid of #REF', '#7']"", ""PROJECT['make name of #REF', '#7']"", ""UNION['#8', '#9']""]","[""SELECT['cars']"", ""PROJECT['horses of #REF', '#1']"", ""SUPERLATIVE['min', '#1', '#2']"", ""COMPARATIVE['#1', '#3', 'is higher than #4']"", ""PROJECT['cylinders of #REF', '#5']"", ""GROUP['count', '#6', '#5']"", ""COMPARATIVE['#5', '#7', 'is less than 3']"", ""PROJECT['makeid of #REF', '#8']"", ""PROJECT['make name of #REF', '#8']"", ""UNION['#9', '#10']""]"
SPIDER_dev_168,"Among the cars that do not have the minimum horsepower, what are the make ids and names of all those with less than 4 cylinders?","[""SELECT['cars']"", ""PROJECT['horses of #REF', '#1']"", ""GROUP['min', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is lower than 4']"", ""DISCARD['#1', '#4']"", ""PROJECT['make ids of #REF', '#5']"", ""PROJECT['names of #REF', '#5']"", ""UNION['#6', '#7']""]","[""SELECT['cars']"", ""PROJECT['horses of #REF', '#1']"", ""GROUP['min', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is lower than 4']"", ""DISCARD['#1', '#4']"", ""PROJECT['make ids of #REF', '#5']"", ""PROJECT['names of #REF', '#5']"", ""UNION['#7', '#6']""]"
SPIDER_dev_169,What is the maximum miles per gallon of the car with 8 cylinders or produced before 1980?,"[""SELECT['cars']"", ""FILTER['#1', 'with 8 cylinders']"", ""FILTER['#1', 'produced before 1980']"", ""UNION['#2', '#3']"", ""PROJECT['miles per gallon of #REF', '#4']"", ""AGGREGATE['max', '#5']""]","[""SELECT['cars']"", ""FILTER['#1', 'with 8 cylinders']"", ""FILTER['#1', 'produced before 1980']"", ""PROJECT['miles per gallon of #REF', '#2']"", ""PROJECT['miles per gallon of #REF', '#3']"", ""AGGREGATE['max', '#4']"", ""ARITHMETIC['sum', '#6', '#5']""]"
SPIDER_dev_17,What is the average and maximum capacities for all stadiums?,"[""SELECT['stadiums']"", ""PROJECT['capacities of #REF', '#1']"", ""AGGREGATE['avg', '#2']"", ""AGGREGATE['max', '#2']"", ""UNION['#3', '#4']""]","[""SELECT['stadiums']"", ""PROJECT['capacities of #REF', '#1']"", ""AGGREGATE['avg', '#2']"", ""AGGREGATE['max', '#2']"", ""UNION['#3', '#4']""]--"
SPIDER_dev_170,What is the maximum mpg of the cars that had 8 cylinders or that were produced before 1980?,"[""SELECT['cars']"", ""FILTER['#1', 'that had 8 cylinders']"", ""FILTER['#1', 'produced before 1980']"", ""UNION['#2', '#3']"", ""PROJECT['mpg of #REF', '#4']"", ""AGGREGATE['max', '#5']""]","[""SELECT['cars']"", ""FILTER['#1', 'that had 8 cylinders']"", ""FILTER['#1', 'that were produced before 1980']"", ""UNION['#2', '#3']"", ""PROJECT['mpg of #REF', '#4']"", ""AGGREGATE['max', '#5']""]"
SPIDER_dev_171,Which models are lighter than 3500 but not built by the 'Ford Motor Company'?,"[""SELECT['models']"", ""FILTER['#1', 'that are lighter than 3500']"", ""FILTER['#2', 'that are built by Ford Motor Company']"", ""DISCARD['#2', '#3']""]","[""SELECT['models']"", ""FILTER['#1', 'built by Ford Motor Company']"", ""DISCARD['#1', '#2']"", ""PROJECT['height of #REF', '#3']"", ""COMPARATIVE['#3', '#4', 'is lower than 3500']""]"
SPIDER_dev_172,What are the different models wthat are lighter than 3500 but were not built by the Ford Motor Company?,"[""SELECT['models']"", ""FILTER['#1', 'that are lighter than 3500']"", ""FILTER['#2', 'that were built by the Ford Motor Company']"", ""DISCARD['#2', '#3']"", ""PROJECT['different #REF', '#4']""]","[""SELECT['models']"", ""FILTER['#1', 'that are lighter than 3500']"", ""FILTER['#2', 'that were built by the Ford Motor Company']"", ""DISCARD['#2', '#3']"", ""PROJECT['the different #REF', '#4']""."
SPIDER_dev_173,What are the name of the countries where there is not a single car maker?,"[""SELECT['countries']"", ""PROJECT['car makers in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is zero']"", ""PROJECT['names of #REF', '#4']""]","[""SELECT['countries']"", ""FILTER['#1', 'where there is not a single car maker']"", ""PROJECT['names of #REF', '#2']""]"
SPIDER_dev_174,What are the names of the countries with no car makers?,"[""SELECT['countries']"", ""PROJECT['car makers in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is zero']"", ""PROJECT['names of #REF', '#4']""]","[""SELECT['countries']"", ""FILTER['#1', 'with no car makers']"", ""PROJECT['names of #REF', '#2']""]"
SPIDER_dev_175,Which are the car makers which produce at least 2 models and more than 3 car makers? List the id and the maker.,"[""SELECT['car makers']"", ""PROJECT['models #REF produce', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is at least 2']"", ""COMPARATIVE['#1', '#3', 'is higher than 3']"", ""INTERSECTION['#1', '#4', '#5']"", ""PROJECT['the ids of #REF', '#6']"", ""PROJECT['the maker of #REF', '#6']"", ""UNION['#7', '#8']""]","[""SELECT['car makers']"", ""PROJECT['models #REF produce', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is at least 2']"", ""COMPARATIVE['#1', '#3', 'is higher than 3']"", ""INTERSECTION['#1', '#4', '#5']"", ""PROJECT['ids of #REF', '#6']"", ""PROJECT['maker of #REF', '#6']"", ""PROJECT['the maker of #REF', '#6']"", ""UNION['#7', '#8']""]"
SPIDER_dev_176,What are the ids and makers of all car makers that produce at least 2 models and make more than 3 cars?,"[""SELECT['car makers']"", ""PROJECT['models #REF produce', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is at least 2']"", ""COMPARATIVE['#1', '#3', 'is higher than 3']"", ""INTERSECTION['#1', '#4', '#5']"", ""PROJECT['ids of #REF', '#6']"", ""PROJECT['makers of #REF', '#6']"", ""UNION['#7', '#8']""]","[""SELECT['car makers']"", ""PROJECT['models #REF produce', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is at least 2']"", ""COMPARATIVE['#1', '#3', 'is higher than 3']"", ""INTERSECTION['#1', '#4', '#5']"", ""PROJECT['ids of #REF', '#6']"", ""PROJECT['makers of #REF', '#6']"", ""UNION['#7', '#8']""]"
SPIDER_dev_177,What are the id and names of the countries which have more than 3 car makers or produce the 'fiat' model?,"[""SELECT['countries']"", ""PROJECT['car makers in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is higher than 3']"", ""PROJECT['models that #REF produce', '#1']"", ""COMPARATIVE['#1', '#5', 'is fiat']"", ""UNION['#4', '#6']"", ""PROJECT['ids of #REF', '#7']"", ""PROJECT['names of #REF', '#7']"", ""UNION['#8', '#9']""]","[""SELECT['countries']"", ""PROJECT['car makers in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is higher than 3']"", ""PROJECT['models produced of #REF', '#1']"", ""COMPARATIVE['#1', '#5', 'is fiat']"", ""UNION['#4', '#6']"", ""PROJECT['ids of #REF', '#7']"", ""PROJECT['names of #REF', '#7']"", ""UNION['#8', '#9']""]"
SPIDER_dev_178,What are the ids and names of all countries that either have more than 3 car makers or produce fiat model?,"[""SELECT['countries']"", ""PROJECT['car makers in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is higher than 3']"", ""PROJECT['fiat models in #REF', '#1']"", ""GROUP['count', '#5', '#1']"", ""COMPARATIVE['#1', '#6', 'is higher than 3']"", ""UNION['#4', '#7']"", ""PROJECT['ids of #REF', '#8']"", ""PROJECT['names of #REF', '#8']"", ""UNION['#9', '#10']""]","[""SELECT['countries']"", ""PROJECT['car makers of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is higher than 3']"", ""PROJECT['fiat models produced of #REF', '#1']"", ""UNION['#4', '#5']"", ""PROJECT['ids of #REF', '#6']"", ""PROJECT['names of #REF', '#6']"", ""UNION['#7', '#8']""]"
SPIDER_dev_179,"Which country does Airline ""JetBlue Airways"" belong to?","[""SELECT['Airline JetBlue Airways']"", ""PROJECT['country of #REF', '#1']""]","[""SELECT['Airline JetBlue Airways']"", ""PROJECT['country that #REF belongs to', '#1']""."
SPIDER_dev_18,What is the name and capacity for the stadium with highest average attendance?,"[""SELECT['stadiums']"", ""PROJECT['attendances of #REF', '#1']"", ""GROUP['avg', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']"", ""PROJECT['name of #REF', '#4']"", ""PROJECT['capacity of #REF', '#4']"", ""UNION['#5', '#6']""]","[""SELECT['stadiums']"", ""PROJECT['attendances of #REF', '#1']"", ""GROUP['avg', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']"", ""PROJECT['name of #REF', '#4']"", ""PROJECT['capacities of #REF', '#4']"", ""UNION['#5', '#6']""]"
SPIDER_dev_180,What country is Jetblue Airways affiliated with?,"[""SELECT['Jetblue Airways']"", ""PROJECT['country affiliated with #REF', '#1']""]","[""SELECT['Jetblue Airways']"", ""PROJECT['country #REF is affiliated with', '#1']""]"
SPIDER_dev_181,"What is the abbreviation of Airline ""JetBlue Airways""?","[""SELECT['Airline JetBlue Airways']"", ""PROJECT['abbreviation of #REF', '#1']""]","[""SELECT['JetBlue Airways']"", ""PROJECT['abbreviation of #REF', '#1']""]"
SPIDER_dev_182,Which abbreviation corresponds to Jetblue Airways?,"[""SELECT['Jetblue Airways']"", ""PROJECT['abbreviation of #REF', '#1']""]","[""SELECT['abbreviations']"", ""FILTER['#1', 'that correspond to Jetblue Airways']""]"
SPIDER_dev_183,"List all airline names and their abbreviations in ""USA"".","[""SELECT['airlines']"", ""PROJECT['names of #REF', '#1']"", ""PROJECT['abbreviations of #REF', '#1']"", ""COMPARATIVE['#1', '#3', 'is USA']"", ""UNION['#2', '#4']""]","[""SELECT['airlines']"", ""PROJECT['names of #REF', '#1']"", ""PROJECT['abbreviations of #REF', '#1']"", ""COMPARATIVE['#1', '#3', 'is USA']"", ""UNION['#2', '#4']""]"
SPIDER_dev_184,What are the airline names and abbreviations for airlines in the USA?,"[""SELECT['airlines']"", ""FILTER['#1', 'in the USA']"", ""PROJECT['names of #REF', '#2']"", ""PROJECT['abbreviations of #REF', '#2']"", ""UNION['#3', '#4']""]","[""SELECT['airlines']"", ""FILTER['#1', 'in USA']"", ""PROJECT['names of #REF', '#2']"", ""PROJECT['abbreviations of #REF', '#2']"", ""UNION['#3', '#4']""]"
SPIDER_dev_185,List the airport code and name in the city of Anthony.,"[""SELECT['airports']"", ""PROJECT['cities of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is Anthony']"", ""PROJECT['code of #REF', '#3']"", ""PROJECT['name of #REF', '#3']"", ""UNION['#4', '#5']""]","[""SELECT['the city of Anthony']"", ""PROJECT['airport code of #REF', '#1']"", ""PROJECT['airport name of #REF', '#1']"", ""UNION['#2', '#3']""]"
SPIDER_dev_186,Give the airport code and airport name corresonding to the city Anthony.,"[""SELECT['airports']"", ""PROJECT['cities of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is Anthony']"", ""PROJECT['code of #REF', '#3']"", ""PROJECT['name of #REF', '#3']"", ""UNION['#4', '#5']""]","[""SELECT['airport codes']"", ""PROJECT['cities of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is Anthony']"", ""PROJECT['airport name of #REF', '#1']"", ""UNION['#3', '#4']""]"
SPIDER_dev_187,How many airlines do we have?,"[""SELECT['airlines']"", ""AGGREGATE['count', '#1']""]","[""SELECT['airlines']"", ""FILTER['#1', 'that we have']"", ""AGGREGATE['count', '#2']""]"
SPIDER_dev_189,How many airports do we have?,"[""SELECT['airports']"", ""AGGREGATE['count', '#1']""]","[""SELECT['airports']"", ""FILTER['#1', 'that we have']"", ""AGGREGATE['count', '#2']""]"
SPIDER_dev_19,What is the name and capacity for the stadium with the highest average attendance?,"[""SELECT['stadiums']"", ""PROJECT['attendances of #REF', '#1']"", ""GROUP['avg', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']"", ""PROJECT['name of #REF', '#4']"", ""PROJECT['capacity of #REF', '#4']"", ""UNION['#5', '#6']""]","[""SELECT['stadiums']"", ""PROJECT['attendance of #REF', '#1']"", ""GROUP['avg', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']"", ""PROJECT['name of #REF', '#4']"", ""PROJECT['capacity of #REF', '#4']"", ""UNION['#5', '#6']""]"
SPIDER_dev_190,Return the number of  airports.,"[""SELECT['airports']"", ""AGGREGATE['count', '#1']""]","[""SELECT['airports']"", ""PROJECT['airports with #REF', '#1']"", ""AGGREGATE['count', '#2']""]"
SPIDER_dev_192,Return the number of flights.,"[""SELECT['flights']"", ""AGGREGATE['count', '#1']""]","[""SELECT['flights']"", ""AGGREGATE['count', '#1']""]--"
SPIDER_dev_193,Which airline has abbreviation 'UAL'?,"[""SELECT['airlines']"", ""PROJECT['abbreviations of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is UAL']""]","[""SELECT['airlines']"", ""FILTER['#1', 'that has abbreviation UAL']""]"
SPIDER_dev_194,Give the airline with abbreviation 'UAL'.,"[""SELECT['airlines']"", ""PROJECT['abbreviations of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is UAL']""]","[""SELECT['airlines']"", ""FILTER['#1', 'with abbreviation UAL']""]"
SPIDER_dev_195,How many airlines are from USA?,"[""SELECT['airlines']"", ""FILTER['#1', 'from USA']"", ""AGGREGATE['count', '#2']""]","[""SELECT['airlines']"", ""FILTER['#1', 'that are from USA']"", ""AGGREGATE['count', '#2']""]"
SPIDER_dev_196,Return the number of airlines in the USA.,"[""SELECT['airlines']"", ""FILTER['#1', 'in the USA']"", ""AGGREGATE['count', '#2']""]","[""SELECT['airlines']"", ""FILTER['#1', 'in USA']"", ""AGGREGATE['count', '#2']""]"
SPIDER_dev_197,Which city and country is the Alton airport at?,"[""SELECT['the Alton airport']"", ""PROJECT['city of #REF', '#1']"", ""PROJECT['country of #REF', '#1']"", ""UNION['#2', '#3']""]","[""SELECT['the Alton airport']"", ""PROJECT['city of #REF', '#1']"", ""PROJECT['countries of #REF', '#1']"", ""UNION['#2', '#3']""]"
SPIDER_dev_198,Give the city and country for the Alton airport.,"[""SELECT['the Alton airport']"", ""PROJECT['the city of #REF', '#1']"", ""PROJECT['the country of #REF', '#1']"", ""UNION['#2', '#3']""]","[""SELECT['the Alton airport']"", ""PROJECT['city of #REF', '#1']"", ""PROJECT['country of #REF', '#1']"", ""UNION['#2', '#3']""]"
SPIDER_dev_199,What is the airport name for airport 'AKO'?,"[""SELECT['airports']"", ""PROJECT['names of #REF', '#1']"", ""COMPARATIVE['#2', '#1', 'is AKO']""]","[""SELECT['airports']"", ""PROJECT['name of #REF', '#1']"", ""COMPARATIVE['#2', '#1', 'is AKO']""]"
SPIDER_dev_2,"Show name, country, age for all singers ordered by age from the oldest to the youngest.","[""SELECT['singers']"", ""PROJECT['names of #REF', '#1']"", ""PROJECT['countries of #REF', '#1']"", ""PROJECT['ages of #REF', '#1']"", ""SORT['#2', '#3', 'from oldest to youngest']""]","[""SELECT['singers']"", ""PROJECT['names of #REF', '#1']"", ""PROJECT['countries of #REF', '#1']"", ""PROJECT['ages of #REF', '#1']"", ""GROUP['count', '#1', '#2']"", ""SORT['#3', '#4', '#5']""]"
SPIDER_dev_20,How many concerts are there in year 2014 or 2015?,"[""SELECT['concerts']"", ""PROJECT['years of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is 2014']"", ""COMPARATIVE['#1', '#2', 'is 2015']"", ""UNION['#3', '#4']"", ""AGGREGATE['count', '#5']""]","[""SELECT['concerts']"", ""PROJECT['years of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is 2014']"", ""COMPARATIVE['#1', '#2', 'is 2015']"", ""UNION['#3', '#4']"", ""AGGREGATE['count', '#5']""]"
SPIDER_dev_200,Return the name of the airport with code 'AKO'.,"[""SELECT['airports']"", ""PROJECT['codes of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is AKO']"", ""PROJECT['name of #REF', '#3']""]","[""SELECT['airports']"", ""PROJECT['code of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is AKO']"", ""PROJECT['the name of #REF', '#3']""]"
SPIDER_dev_201,What are airport names at City 'Aberdeen'?,"[""SELECT['airports']"", ""FILTER['#1', 'at City Aberdeen']"", ""PROJECT['names of #REF', '#2']""]","[""SELECT['Airports']"", ""FILTER['#1', 'at City Aberdeen']"", ""PROJECT['names of #REF', '#2']""]"
SPIDER_dev_202,What are the names of airports in Aberdeen?,"[""SELECT['airports']"", ""FILTER['#1', 'in Aberdeen']"", ""PROJECT['names of #REF', '#2']""]","[""SELECT['airports']"", ""FILTER['#1', 'in Aberdeen']"", ""PROJECT['the names of #REF', '#2']""]"
SPIDER_dev_203,How many flights depart from 'APG'?,"[""SELECT['flights']"", ""FILTER['#1', 'that depart from APG']"", ""AGGREGATE['count', '#2']""]","[""SELECT['flights']"", ""FILTER['#1', 'which depart from APG']"", ""AGGREGATE['count', '#2']""]"
SPIDER_dev_204,Count the number of flights departing from 'APG'.,"[""SELECT['flights']"", ""FILTER['#1', 'departing from APG']"", ""AGGREGATE['count', '#2']""]","[""SELECT['flights']"", ""FILTER['#1', 'departing from APG']"", ""PROJECT['Count #REF', '#2']""."
SPIDER_dev_205,How many flights have destination ATO?,"[""SELECT['flights']"", ""PROJECT['destinations of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is ATO']"", ""AGGREGATE['count', '#3']""]","[""SELECT['flights']"", ""FILTER['#1', 'with destination ATO']"", ""AGGREGATE['count', '#2']""]"
SPIDER_dev_206,Count the number of flights into ATO.,"[""SELECT['flights']"", ""FILTER['#1', 'into ATO']"", ""AGGREGATE['count', '#2']""]","[""SELECT['flights']"", ""FILTER['#1', 'into ATO']"", ""PROJECT['Count #REF', '#2']""."
SPIDER_dev_207,How many flights depart from City Aberdeen?,"[""SELECT['flights']"", ""FILTER['#1', 'that depart from City Aberdeen']"", ""AGGREGATE['count', '#2']""]","[""SELECT['flights']"", ""FILTER['#1', 'from City Aberdeen']"", ""AGGREGATE['count', '#2']""]"
SPIDER_dev_208,Return the number of flights departing from Aberdeen.,"[""SELECT['flights']"", ""FILTER['#1', 'departing from Aberdeen']"", ""AGGREGATE['count', '#2']""]","[""SELECT['flights']"", ""FILTER['#1', 'that depart from Aberdeen']"", ""AGGREGATE['count', '#2']""]"
SPIDER_dev_209,How many flights arriving in Aberdeen city?,"[""SELECT['flights']"", ""FILTER['#1', 'arriving in Aberdeen city']"", ""AGGREGATE['count', '#2']""]","[""SELECT['flights']"", ""PROJECT['cities of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is Aberdeen city']"", ""AGGREGATE['count', '#3']""]"
SPIDER_dev_21,How many concerts occurred in 2014 or 2015?,"[""SELECT['concerts']"", ""FILTER['#1', 'in 2014']"", ""FILTER['#1', 'in 2015']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['sum', '#4', '#5']""]","[""SELECT['concerts']"", ""FILTER['#1', 'in 2014']"", ""FILTER['#1', 'in 2015']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""UNION['#4', '#5']""]"
SPIDER_dev_210,Return the number of flights arriving in Aberdeen.,"[""SELECT['flights']"", ""FILTER['#1', 'arriving in Aberdeen']"", ""AGGREGATE['count', '#2']""]","[""SELECT['flights']"", ""FILTER['#1', 'that are arriving in Aberdeen']"", ""AGGREGATE['count', '#2']""]"
SPIDER_dev_211,How many flights depart from City 'Aberdeen' and have destination City 'Ashley'?,"[""SELECT['flights']"", ""FILTER['#1', 'that depart from City Aberdeen']"", ""FILTER['#2', 'that have destination City Ashley']"", ""AGGREGATE['count', '#3']""]","[""SELECT['flights']"", ""FILTER['#1', 'that depart from City Aberdeen']"", ""FILTER['#2', 'that have destination City Ashley']"", ""AGGREGATE['count', '#3']"")""]"
SPIDER_dev_212,How many flights fly from Aberdeen to Ashley?,"[""SELECT['flights']"", ""FILTER['#1', 'from Aberdeen']"", ""FILTER['#2', 'to Ashley']"", ""AGGREGATE['count', '#3']""]","[""SELECT['flights']"", ""FILTER['#1', 'which fly from Aberdeen']"", ""FILTER['#2', 'to Ashley']"", ""AGGREGATE['count', '#3']""]"
SPIDER_dev_213,How many flights does airline 'JetBlue Airways' have?,"[""SELECT['flights']"", ""FILTER['#1', 'on airline JetBlue Airways']"", ""AGGREGATE['count', '#2']""]","[""SELECT['flights']"", ""FILTER['#1', 'that airline JetBlue Airways']"", ""AGGREGATE['count', '#2']""]"
SPIDER_dev_214,Give the number of Jetblue Airways flights.,"[""SELECT['flights']"", ""FILTER['#1', 'on Jetblue Airways']"", ""AGGREGATE['count', '#2']""]","[""SELECT['flights']"", ""FILTER['#1', 'from Jetblue Airways']"", ""AGGREGATE['count', '#2']""]"
SPIDER_dev_215,How many 'United Airlines' flights go to Airport 'ASY'?,"[""SELECT['flights']"", ""FILTER['#1', 'that go to Airport ASY']"", ""FILTER['#2', 'on United Airlines']"", ""AGGREGATE['count', '#3']""]","[""SELECT['flights']"", ""FILTER['#1', 'on United Airlines']"", ""FILTER['#2', 'that go to Airport ASY']"", ""AGGREGATE['count', '#3']""]"
SPIDER_dev_216,Count the number of United Airlines flights arriving in ASY Airport.,"[""SELECT['flights']"", ""FILTER['#1', 'on United Airlines']"", ""FILTER['#2', 'arriving in ASY Airport']"", ""AGGREGATE['count', '#3']""]","[""SELECT['flights']"", ""FILTER['#1', 'that are United Airlines']"", ""FILTER['#2', 'arriving in ASY Airport']"", ""AGGREGATE['count', '#3']""]"
SPIDER_dev_217,How many 'United Airlines' flights depart from Airport 'AHD'?,"[""SELECT['flights']"", ""FILTER['#1', 'that depart from Airport AHD']"", ""FILTER['#2', 'on United Airlines']"", ""AGGREGATE['count', '#3']""]","[""SELECT['Flights']"", ""FILTER['#1', 'that depart from Airport AHD']"", ""FILTER['#2', 'on United Airlines']"", ""AGGREGATE['count', '#3']""]"
SPIDER_dev_218,Return the number of United Airlines flights leaving from AHD Airport.,"[""SELECT['flights']"", ""FILTER['#1', 'on United Airlines']"", ""FILTER['#2', 'leaving from AHD Airport']"", ""AGGREGATE['count', '#3']""]","[""SELECT['flights']"", ""FILTER['#1', 'on United Airlines']"", ""FILTER['#2', 'leaving AHD Airport']"", ""AGGREGATE['count', '#3']""]"
SPIDER_dev_219,How many United Airlines flights go to City 'Aberdeen'?,"[""SELECT['flights']"", ""FILTER['#1', 'on United Airlines']"", ""FILTER['#2', 'to City Aberdeen']"", ""AGGREGATE['count', '#3']""]","[""SELECT['flights']"", ""FILTER['#1', 'on United Airlines']"", ""FILTER['#2', 'to Aberdeen']"", ""AGGREGATE['count', '#3']""]"
SPIDER_dev_22,Show the stadium name and the number of concerts in each stadium.,"[""SELECT['stadiums']"", ""PROJECT['names of #REF', '#1']"", ""PROJECT['concerts in #REF', '#1']"", ""GROUP['count', '#3', '#1']"", ""UNION['#2', '#4']""]","[""SELECT['stadiums']"", ""PROJECT['names of #REF', '#1']"", ""PROJECT['concerts in #REF', '#1']"", ""GROUP['count', '#3', '#2']"", ""UNION['#2', '#4']""]"
SPIDER_dev_220,Count the number of United Airlines flights that arrive in Aberdeen.,"[""SELECT['flights']"", ""FILTER['#1', 'on United Airlines']"", ""FILTER['#2', 'that arrive in Aberdeen']"", ""AGGREGATE['count', '#3']""]","[""SELECT['flights']"", ""FILTER['#1', 'from United Airlines']"", ""FILTER['#2', 'to Aberdeen']"", ""AGGREGATE['count', '#3']""]"
SPIDER_dev_221,Which city has most number of arriving flights?,"[""SELECT['cities']"", ""PROJECT['arriving flights of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']""]","[""SELECT['cities']"", ""PROJECT['flights arriving in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']""]"
SPIDER_dev_222,Which city has the most frequent destination airport?,"[""SELECT['cities']"", ""PROJECT['destination airports of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']""]","[""SELECT['cities']"", ""PROJECT['destination airports of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']""]."
SPIDER_dev_223,Which city has most number of departing flights?,"[""SELECT['cities']"", ""PROJECT['departing flights of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']""]","[""SELECT['cities']"", ""PROJECT['departing flights in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']""]"
SPIDER_dev_224,Which city is the most frequent source airport?,"[""SELECT['source airports']"", ""PROJECT['source of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']"", ""PROJECT['city of #REF', '#4']""]","[""SELECT['source airports']"", ""PROJECT['most frequent #REF', '#1']"", ""PROJECT['city of #REF', '#2']""]"
SPIDER_dev_225,What is the code of airport that has the highest number of flights?,"[""SELECT['airports']"", ""PROJECT['flights of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']"", ""PROJECT['code of #REF', '#4']""]","[""SELECT['airports']"", ""PROJECT['flights that #REF have', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']"", ""PROJECT['code of #REF', '#4']""]"
SPIDER_dev_226,What is the airport code of the airport with the most flights?,"[""SELECT['airports']"", ""PROJECT['flights of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']"", ""PROJECT['airport code of #REF', '#4']""]","[""SELECT['airports']"", ""PROJECT['flights of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is the highest']"", ""PROJECT['the airport code of #REF', '#4']""]"
SPIDER_dev_227,What is the code of airport that has fewest number of flights?,"[""SELECT['airports']"", ""PROJECT['flights of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['min', '#1', '#3']"", ""PROJECT['code of #REF', '#4']""]","[""SELECT['airports']"", ""PROJECT['flights at #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['min', '#1', '#3']"", ""PROJECT['code of #REF', '#4']""]"
SPIDER_dev_228,Give the code of the airport with the least flights.,"[""SELECT['airports']"", ""PROJECT['flights of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['min', '#1', '#3']"", ""PROJECT['code of #REF', '#4']""]","[""SELECT['airports']"", ""PROJECT['flights to #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['min', '#1', '#3']"", ""PROJECT['code of #REF', '#4']""]"
SPIDER_dev_229,Which airline has most number of flights?,"[""SELECT['airlines']"", ""PROJECT['flights of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']""]","[""SELECT['flights']"", ""PROJECT['airlines of #REF', '#1']"", ""GROUP['count', '#1', '#2']"", ""SUPERLATIVE['max', '#2', '#3']""]"
SPIDER_dev_23,"For each stadium, how many concerts play there?","[""SELECT['stadiums']"", ""PROJECT['concerts in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""UNION['#1', '#3']""]","[""SELECT['stadiums']"", ""PROJECT['concerts play in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""UNION['#1', '#3']""]"
SPIDER_dev_230,What airline serves the most flights?,"[""SELECT['airlines']"", ""PROJECT['flights #REF serves', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']""]","[""SELECT['airlines']"", ""PROJECT['flights #REF serve', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']""]"
SPIDER_dev_231,Find the abbreviation and country of the airline that has fewest number of flights?,"[""SELECT['airlines']"", ""PROJECT['flights of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['min', '#1', '#3']"", ""PROJECT['abbreviation of #REF', '#4']"", ""PROJECT['country of #REF', '#4']"", ""UNION['#5', '#6']""]","[""SELECT['airlines']"", ""PROJECT['flights of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['min', '#1', '#3']"", ""PROJECT['abbreviations of #REF', '#4']"", ""PROJECT['countries of #REF', '#4']"", ""UNION['#5', '#6']""]"
SPIDER_dev_232,What is the abbreviation of the airline has the fewest flights and what country is it in?,"[""SELECT['airlines']"", ""PROJECT['flights of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['min', '#1', '#3']"", ""PROJECT['abbreviation of #REF', '#4']"", ""PROJECT['country of #REF', '#4']"", ""UNION['#5', '#6']""]","[""SELECT['airlines']"", ""PROJECT['flights of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is the fewest']"", ""PROJECT['the abbreviation of #REF', '#4']"", ""PROJECT['the country of #REF', '#4']"", ""UNION['#5', '#6']."
SPIDER_dev_233,What are airlines that have some flight departing from airport 'AHD'?,"[""SELECT['flights']"", ""FILTER['#1', 'departing from airport AHD']"", ""PROJECT['airlines of #REF', '#2']""]","[""SELECT['flights']"", ""FILTER['#1', 'departing from AHD airport']"", ""PROJECT['airlines of #REF', '#2']""]"
SPIDER_dev_234,Which airlines have a flight with source airport AHD?,"[""SELECT['flights']"", ""PROJECT['source airports of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is AHD']"", ""PROJECT['airlines of #REF', '#3']""]","[""SELECT['flights']"", ""PROJECT['source airports of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is AHD']"", ""PROJECT['airlines with #REF', '#3']""]"
SPIDER_dev_235,What are airlines that have flights arriving at airport 'AHD'?,"[""SELECT['flights']"", ""FILTER['#1', 'arriving at airport AHD']"", ""PROJECT['airlines of #REF', '#2']""]","[""SELECT['flights']"", ""PROJECT['airports of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is AHD']"", ""PROJECT['airlines of #REF', '#3']""]"
SPIDER_dev_236,Which airlines have a flight with destination airport AHD?,"[""SELECT['flights']"", ""PROJECT['destination airports of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is AHD']"", ""PROJECT['airlines of #REF', '#3']""]","[""SELECT['flights']"", ""FILTER['#1', 'with destination airport AHD']"", ""PROJECT['airlines that have #REF', '#2']""]"
SPIDER_dev_237,Find all airlines that have flights from both airports 'APG' and 'CVO'.,"[""SELECT['flights']"", ""FILTER['#1', 'from APG']"", ""FILTER['#1', 'from CVO']"", ""INTERSECTION['#1', '#2', '#3']"", ""PROJECT['airlines of #REF', '#4']""]","[""SELECT['flights']"", ""PROJECT['airports of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is APG']"", ""COMPARATIVE['#1', '#2', 'is CVO']"", ""UNION['#3', '#4']"", ""PROJECT['airlines of #REF', '#5']""]"
SPIDER_dev_238,Which airlines have departing flights from both APG and CVO airports?,"[""SELECT['flights']"", ""FILTER['#1', 'departing from APG airport']"", ""FILTER['#1', 'departing from CVO airport']"", ""SELECT['airlines']"", ""INTERSECTION['#5', '#2', '#3']""]","[""SELECT['airlines']"", ""PROJECT['departing flights of #REF', '#1']"", ""FILTER['#2', 'from APG airport']"", ""FILTER['#2', 'from CVO airport']"", ""INTERSECTION['#1', '#3', '#5']""]"
SPIDER_dev_239,Find all airlines that have flights from airport 'CVO' but not from 'APG'.,"[""SELECT['flights']"", ""FILTER['#1', 'from CVO']"", ""FILTER['#2', 'from APG']"", ""DISCARD['#2', '#3']"", ""PROJECT['airlines of #REF', '#4']""]","[""SELECT['flights']"", ""FILTER['#1', 'from CVO']"", ""FILTER['#1', 'from APG']"", ""INTERSECTION['#1', '#2', '#3']"", ""PROJECT['airlines of #REF', '#4']""."
SPIDER_dev_24,Show the stadium name and capacity with most number of concerts in year 2014 or after.,"[""SELECT['stadiums']"", ""PROJECT['concerts in #REF', '#1']"", ""PROJECT['years of #REF', '#2']"", ""COMPARATIVE['#1', '#3', 'is 2014 or after']"", ""GROUP['count', '#4', '#1']"", ""SUPERLATIVE['max', '#1', '#5']"", ""PROJECT['name of #REF', '#6']"", ""PROJECT['capacity of #REF', '#6']"", ""UNION['#7', '#8']""]","[""SELECT['stadiums']"", ""PROJECT['concerts of #REF', '#1']"", ""PROJECT['years of #REF', '#2']"", ""COMPARATIVE['#1', '#3', 'is 2014 or after']"", ""PROJECT['names of #REF', '#4']"", ""PROJECT['capacity of #REF', '#4']"", ""UNION['#5', '#6']""]"
SPIDER_dev_240,Which airlines have departures from CVO but not from APG airports?,"[""SELECT['airlines']"", ""PROJECT['departures of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'are from CVO']"", ""COMPARATIVE['#1', '#2', 'are from APG airports']"", ""INTERSECTION['#1', '#3', '#4']""]","[""SELECT['airlines']"", ""FILTER['#1', 'that have departures from CVO']"", ""FILTER['#1', 'that have departures from APG airports']"", ""INTERSECTION['#1', '#2', '#3']""]"
SPIDER_dev_241,Find all airlines that have at least 10 flights.,"[""SELECT['airlines']"", ""PROJECT['flights of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is at least 10']""]","[""SELECT['airlines']"", ""PROJECT['flights on #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is at least 10']""]"
SPIDER_dev_242,Which airlines have at least 10 flights?,"[""SELECT['airlines']"", ""PROJECT['flights of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""COMPARATIVE['#1', '#3', 'is at least 10']""]","[""SELECT['airlines']"", ""FILTER['#1', 'that have at least 10 flights']""]"
SPIDER_dev_243,Find all airlines that have fewer than 200 flights.,"[""SELECT['airlines']"", ""PROJECT['flights of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is lower than 200']""]","[""SELECT['flights']"", ""PROJECT['airlines that have #REF', '#1']"", ""GROUP['count', '#1', '#2']"", ""COMPARATIVE['#2', '#3', 'is lower than 200']""]"
SPIDER_dev_244,Which airlines have less than 200 flights?,"[""SELECT['airlines']"", ""PROJECT['flights of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is lower than 200']""]","[""SELECT['airlines']"", ""PROJECT['flights of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'lower than 200']""]"
SPIDER_dev_245,"What are flight numbers of Airline ""United Airlines""?","[""SELECT['Airline United Airlines']"", ""PROJECT['flight numbers of #REF', '#1']""]","[""SELECT['flights']"", ""FILTER['#1', 'of Airline United Airlines']"", ""PROJECT['flight numbers of #REF', '#2']""]"
SPIDER_dev_246,Which flight numbers correspond to United Airlines flights?,"[""SELECT['flights']"", ""FILTER['#1', 'on United Airlines']"", ""PROJECT['flight numbers of #REF', '#2']""]","[""SELECT['flights']"", ""FILTER['#1', 'from United Airlines']"", ""PROJECT['flight numbers of #REF', '#2']""]"
SPIDER_dev_247,"What are flight numbers of flights departing from Airport ""APG""?","[""SELECT['flights']"", ""FILTER['#1', 'departing from Airport APG']"", ""PROJECT['flight numbers of #REF', '#2']""]","[""SELECT['flights']"", ""FILTER['#1', 'departing Airport APG']"", ""PROJECT['flight numbers of #REF', '#2']""]"
SPIDER_dev_248,Give the flight numbers of flights leaving from APG.,"[""SELECT['flights']"", ""FILTER['#1', 'leaving APG']"", ""PROJECT['flight numbers of #REF', '#2']""]","[""SELECT['flights']"", ""FILTER['#1', 'from APG']"", ""PROJECT['flight numbers of #REF', '#2']""]"
SPIDER_dev_249,"What are flight numbers of flights arriving at Airport ""APG""?","[""SELECT['flights']"", ""FILTER['#1', 'arriving at Airport APG']"", ""PROJECT['flight numbers of #REF', '#2']""]","[""SELECT['flights']"", ""FILTER['#1', 'arriving at Airport APG']"", ""PROJECT['flight number of #REF', '#2']""]"
SPIDER_dev_25,What is the name and capacity of the stadium with the most concerts after 2013?,"[""SELECT['stadiums']"", ""PROJECT['concerts of #REF', '#1']"", ""FILTER['#2', 'after 2013']"", ""GROUP['count', '#3', '#1']"", ""SUPERLATIVE['max', '#1', '#4']"", ""PROJECT['name of #REF', '#5']"", ""PROJECT['capacities of #REF', '#5']"", ""UNION['#6', '#7']""]","[""SELECT['stadiums']"", ""PROJECT['concerts of #REF', '#1']"", ""FILTER['#2', 'after 2013']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is the highest']"", ""PROJECT['the name of #REF', '#5']"", ""PROJECT['the capacity of #REF', '#5']"", ""UNION['#6', '#7']""]"
SPIDER_dev_250,Give the flight numbers of flights landing at APG.,"[""SELECT['flights']"", ""FILTER['#1', 'that land at APG']"", ""PROJECT['flight numbers of #REF', '#2']""]","[""SELECT['flights']"", ""FILTER['#1', 'that land at APG']"", ""PROJECT['flight numbers of #REF', '#3']""]"
SPIDER_dev_251,"What are flight numbers of flights departing from City ""Aberdeen ""?","[""SELECT['flights']"", ""FILTER['#1', 'departing from City Amberdeen']"", ""PROJECT['flight numbers of #REF', '#2']""]","[""SELECT['flights']"", ""FILTER['#1', 'departing from City Aberdeen']"", ""PROJECT['flight numbers of #REF', '#2']""]"
SPIDER_dev_252,Give the flight numbers of flights leaving from Aberdeen.,"[""SELECT['flights']"", ""FILTER['#1', 'leaving from Aberdeen']"", ""PROJECT['flight numbers of #REF', '#2']""]","[""SELECT['flights']"", ""FILTER['#1', 'leaving from Aberdeen']"", ""AGGREGATE['count', '#2']""]"
SPIDER_dev_253,"What are flight numbers of flights arriving at City ""Aberdeen""?","[""SELECT['flights']"", ""FILTER['#1', 'arriving at City Aberdeen']"", ""PROJECT['flight numbers of #REF', '#2']""]","[""SELECT['flights']"", ""FILTER['#1', 'arriving at City Amberdeen']"", ""AGGREGATE['count', '#2']""]"
SPIDER_dev_254,Give the flight numbers of flights arriving in Aberdeen.,"[""SELECT['flights']"", ""FILTER['#1', 'arriving in Aberdeen']"", ""PROJECT['flight numbers of #REF', '#2']""]","[""SELECT['flights']"", ""FILTER['#1', 'arriving in Aberdeen']"", ""PROJECT['flight numbers of #REF', '#2']""."
SPIDER_dev_255,Find the number of flights landing in the city of Aberdeen or Abilene.,"[""SELECT['flights']"", ""FILTER['#1', 'that land in Aberdeen']"", ""FILTER['#1', 'that land in Abilene']"", ""UNION['#2', '#3']"", ""AGGREGATE['count', '#4']""]","[""SELECT['flights']"", ""FILTER['#1', 'landing in Aberdeen']"", ""FILTER['#1', 'landing in Abilene']"", ""UNION['#2', '#3']"", ""AGGREGATE['count', '#4']""."
SPIDER_dev_256,How many flights land in Aberdeen or Abilene?,"[""SELECT['flights']"", ""FILTER['#1', 'that land in Aberdeen']"", ""FILTER['#1', 'that land in Abilene']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['sum', '#4', '#5']""]","[""SELECT['flights']"", ""FILTER['#1', 'which land in Aberdeen']"", ""FILTER['#1', 'which land in Abilene']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['sum', '#4', '#5']""]"
SPIDER_dev_257,Find the name of airports which do not have any flight in and out.,"[""SELECT['airports']"", ""PROJECT['flights in and out of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is zero']"", ""PROJECT['names of #REF', '#4']""]","[""SELECT['airports']"", ""FILTER['#1', 'with flights in']"", ""FILTER['#1', 'with flights out']"", ""UNION['#2', '#3']"", ""DISCARD['#1', '#4']"", ""PROJECT['names of #REF', '#5']""]"
SPIDER_dev_258,Which airports do not have departing or arriving flights?,"[""SELECT['airports']"", ""PROJECT['flights of #REF', '#1']"", ""FILTER['#2', 'departing']"", ""FILTER['#2', 'arriving']"", ""DISCARD['#2', '#3']"", ""DISCARD['#4', '#5']""]","[""SELECT['airports']"", ""PROJECT['flights of #REF', '#1']"", ""FILTER['#2', 'that are departing']"", ""FILTER['#2', 'that are arriving']"", ""DISCARD['#2', '#3']"", ""DISCARD['#4', '#5']""]"
SPIDER_dev_26,Which year has most number of concerts?,"[""SELECT['years']"", ""PROJECT['concerts in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']""]","[""SELECT['years']"", ""PROJECT['concerts of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']""]"
SPIDER_dev_260,Count the number of employees,"[""SELECT['employees']"", ""AGGREGATE['count', '#1']""]","[""SELECT['employees']"", ""GROUP['count', '#1', '#2']""."
SPIDER_dev_261,Sort employee names by their age in ascending order.,"[""SELECT['employees']"", ""PROJECT['names of #REF', '#1']"", ""PROJECT['ages of #REF', '#1']"", ""SORT['#2', '#3', 'in ascending order']""]","[""SELECT['employees']"", ""PROJECT['names of #REF', '#1']"", ""PROJECT['age of #REF', '#1']"", ""SORT['#2', '#3', 'in ascending order']""]"
SPIDER_dev_262,List the names of employees and sort in ascending order of age.,"[""SELECT['employees']"", ""PROJECT['names of #REF', '#1']"", ""PROJECT['ages of #REF', '#1']"", ""SORT['#2', '#3', 'in ascending order']""]","[""SELECT['employees']"", ""PROJECT['names of #REF', '#1']"", ""PROJECT['age of #REF', '#1']"", ""SORT['#2', '#3', 'in ascending order']""]"
SPIDER_dev_263,What is the number of employees from each city?,"[""SELECT['cities']"", ""PROJECT['employees from #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""UNION['#1', '#3']""]","[""SELECT['cities']"", ""PROJECT['employees of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""UNION['#1', '#3']""]"
SPIDER_dev_264,Count the number of employees for each city.,"[""SELECT['cities']"", ""PROJECT['employees of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""UNION['#1', '#3']""]","[""SELECT['cities']"", ""PROJECT['employees from #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""UNION['#1', '#3']""]"
SPIDER_dev_265,Which cities do more than one employee under age 30 come from?,"[""SELECT['employees']"", ""FILTER['#1', 'under age 30']"", ""PROJECT['cities of #REF', '#2']"", ""GROUP['count', '#2', '#3']"", ""COMPARATIVE['#3', '#4', 'is higher than one']""]","[""SELECT['employees']"", ""FILTER['#1', 'under age 30']"", ""PROJECT['cities that #REF come from', '#2']"", ""GROUP['count', '#2', '#3']"", ""COMPARATIVE['#3', '#4', 'is higher than one']”]"
SPIDER_dev_266,Find the cities that have more than one employee under age 30.,"[""SELECT['cities']"", ""PROJECT['employees of #REF', '#1']"", ""PROJECT['ages of #REF', '#2']"", ""COMPARATIVE['#1', '#3', 'is lower than 30']"", ""GROUP['count', '#4', '#1']"", ""COMPARATIVE['#1', '#5', 'is higher than one']""]","[""SELECT['cities']"", ""PROJECT['employees of #REF', '#1']"", ""PROJECT['ages of #REF', '#2']"", ""COMPARATIVE['#1', '#3', 'is higher than 30']""]"
SPIDER_dev_267,Find the number of shops in each location.,"[""SELECT['locations']"", ""PROJECT['shops in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""UNION['#1', '#3']""]","[""SELECT['locations']"", ""PROJECT['shops at #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""UNION['#1', '#3']""]"
SPIDER_dev_268,How many shops are there in each location?,"[""SELECT['locations']"", ""PROJECT['shops in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""UNION['#1', '#3']""]","[""SELECT['locations']"", ""PROJECT['shops in each #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""UNION['#1', '#3']""]"
SPIDER_dev_269,Find the manager name and district of the shop whose number of products is the largest.,"[""SELECT['shops']"", ""PROJECT['products of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']"", ""PROJECT['manager of #REF', '#4']"", ""PROJECT['name of #REF', '#5']"", ""PROJECT['district of #REF', '#5']"", ""UNION['#6', '#7']""]","[""SELECT['shops']"", ""PROJECT['products #REF have', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']"", ""PROJECT['manager of #REF', '#4']"", ""PROJECT['name of #REF', '#5']"", ""PROJECT['district of #REF', '#5']"", ""UNION['#6', '#7']""]"
SPIDER_dev_27,What is the year that had the most concerts?,"[""SELECT['years']"", ""PROJECT['concerts in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']""]","[""SELECT['years']"", ""PROJECT['concerts of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']""]"
SPIDER_dev_270,What are the manager name and district of the shop that sells the largest number of products?,"[""SELECT['shops']"", ""PROJECT['products #REF sells', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']"", ""PROJECT['manager of #REF', '#4']"", ""PROJECT['name of #REF', '#5']"", ""PROJECT['district of #REF', '#5']"", ""UNION['#6', '#7']""]","[""SELECT['shops']"", ""PROJECT['products of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']"", ""PROJECT['manager of #REF', '#4']"", ""PROJECT['name of #REF', '#5']"", ""PROJECT['district of #REF', '#5']"", ""UNION['#6', '#7']""]"
SPIDER_dev_271,find the minimum and maximum number of products of all stores.,"[""SELECT['stores']"", ""PROJECT['products of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""AGGREGATE['min', '#3']"", ""AGGREGATE['max', '#3']"", ""UNION['#4', '#5']""]","[""SELECT['stores']"", ""PROJECT['products of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""AGGREGATE['max', '#3']"", ""AGGREGATE['min', '#3']"", ""UNION['#4', '#5']""]"
SPIDER_dev_272,What are the minimum and maximum number of products across all the shops?,"[""SELECT['shops']"", ""PROJECT['products of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""AGGREGATE['min', '#3']"", ""AGGREGATE['max', '#3']"", ""UNION['#4', '#5']""]","[""SELECT['shops']"", ""PROJECT['products in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""AGGREGATE['min', '#3']"", ""AGGREGATE['max', '#3']"", ""UNION['#4', '#5']""]"
SPIDER_dev_273,"Return the name, location and district of all shops in descending order of number of products.","[""SELECT['shops']"", ""PROJECT['names of #REF', '#1']"", ""PROJECT['locations of #REF', '#1']"", ""PROJECT['districts of #REF', '#1']"", ""PROJECT['products of #REF', '#1']"", ""GROUP['count', '#4', '#1']"", ""UNION['#2', '#3', '#5']"", ""SORT['#7', '#6', 'in descending order']""]","[""SELECT['shops']"", ""PROJECT['names of #REF', '#1']"", ""PROJECT['locations of #REF', '#1']"", ""PROJECT['districts of #REF', '#1']"", ""PROJECT['products of #REF', '#1']"", ""GROUP['count', '#4', '#1']"", ""UNION['#2', '#3', '#5']"", ""SORT['#6', '#7', 'in descending order']""]"
SPIDER_dev_274,"Sort all the shops by number products in descending order, and return the name, location and district of each shop.","[""SELECT['shops']"", ""PROJECT['products of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SORT['#1', '#3', 'in descending order']"", ""PROJECT['names of #REF', '#4']"", ""PROJECT['locations of #REF', '#4']"", ""PROJECT['districts of #REF', '#4']"", ""UNION['#5', '#6', '#7']""]","[""SELECT['shops']"", ""PROJECT['products of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SORT['#1', '#3', 'in descending order']"", ""PROJECT['the names of #REF', '#4']"", ""PROJECT['the locations of #REF', '#4']"", ""PROJECT['the districts of #REF', '#4']"", ""UNION['#5', '#6', '#7']""]"
SPIDER_dev_275,Find the names of stores whose number products is more than the average number of products.,"[""SELECT['stores']"", ""PROJECT['products of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""AGGREGATE['avg', '#3']"", ""COMPARATIVE['#1', '#3', 'is higher than #4']"", ""PROJECT['names of #REF', '#5']""]","[""SELECT['stores']"", ""PROJECT['products of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""AGGREGATE['avg', '#3']"", ""COMPARATIVE['#1', '#3', 'is higher than #4']"", ""PROJECT['the names of #REF', '#5']""]"
SPIDER_dev_276,Which shops' number products is above the average? Give me the shop names.,"[""SELECT['shops']"", ""PROJECT['products of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""AGGREGATE['avg', '#3']"", ""COMPARATIVE['#1', '#3', 'is higher than #4']"", ""PROJECT['names of #REF', '#5']""]","[""SELECT['shops']"", ""PROJECT['products of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""AGGREGATE['avg', '#3']"", ""COMPARATIVE['#1', '#3', 'is higher than #4']"", ""PROJECT['shop names of #REF', '#5']""]"
SPIDER_dev_277,find the name of employee who was awarded the most times in the evaluation.,"[""SELECT['employees']"", ""PROJECT['times awarded of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']"", ""PROJECT['name of #REF', '#4']""]","[""SELECT['employees']"", ""PROJECT['times awarded of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']"", ""PROJECT['name of #REF', '#5']""]"
SPIDER_dev_278,Which employee received the most awards in evaluations? Give me the employee name.,"[""SELECT['employees']"", ""PROJECT['evaluations #REF received', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']"", ""PROJECT['name of #REF', '#4']""]","[""SELECT['employees']"", ""PROJECT['evaluations #REF received', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is the highest']"", ""PROJECT['the name of #REF', '#4']""]"
SPIDER_dev_279,Find the name of the employee who got the highest one time bonus.,"[""SELECT['employees']"", ""PROJECT['one time bonuses of #REF', '#1']"", ""SUPERLATIVE['max', '#1', '#2']"", ""PROJECT['name of #REF', '#3']""]","[""SELECT['employees']"", ""PROJECT['one time bonuses of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is the highest']"", ""PROJECT['the name of #REF', '#3']""]"
SPIDER_dev_28,Show the stadium names without any concert.,"[""SELECT['stadiums']"", ""PROJECT['concerts of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is zero']"", ""PROJECT['names of #REF', '#4']""]","[""SELECT['stadiums']"", ""PROJECT['concerts in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is zero']"", ""PROJECT['names of #REF', '#4']""]"
SPIDER_dev_280,Which employee received the biggest bonus? Give me the employee name.,"[""SELECT['employees']"", ""PROJECT['bonuses #REF received', '#1']"", ""SUPERLATIVE['max', '#1', '#2']"", ""PROJECT['name of #REF', '#3']""]","[""SELECT['employees']"", ""PROJECT['bonuses #REF received', '#1']"", ""COMPARATIVE['#1', '#2', 'is the biggest']"", ""PROJECT['the name of #REF', '#3']""."
SPIDER_dev_281,Find the names of employees who never won any award in the evaluation.,"[""SELECT['employees']"", ""PROJECT['awards of #REF', '#1']"", ""FILTER['#2', 'in the evaluation']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is zero']"", ""PROJECT['names of #REF', '#5']""]","[""SELECT['employees']"", ""FILTER['#1', 'who never won any awards in the evaluation']"", ""PROJECT['names of #REF', '#2']""]"
SPIDER_dev_282,What are the names of the employees who never received any evaluation?,"[""SELECT['employees']"", ""FILTER['#1', 'who received evaluations']"", ""DISCARD['#1', '#2']"", ""PROJECT['names of #REF', '#3']""]","[""SELECT['employees']"", ""FILTER['#1', 'who received evaluations']"", ""DISCARD['#1', '#2']"", ""PROJECT['the names of #REF', '#3']""]"
SPIDER_dev_283,What is the name of the shop that is hiring the largest number of employees?,"[""SELECT['shops']"", ""PROJECT['employees of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']"", ""PROJECT['name of #REF', '#4']""]","[""SELECT['shops']"", ""PROJECT['employees hiring #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']"", ""PROJECT['name of #REF', '#4']""]"
SPIDER_dev_284,Which shop has the most employees? Give me the shop name.,"[""SELECT['shops']"", ""PROJECT['employees of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']"", ""PROJECT['name of #REF', '#4']""]","[""SELECT['shops']"", ""PROJECT['employees in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']"", ""PROJECT['name of #REF', '#4']""]"
SPIDER_dev_285,Find the name of the shops that do not hire any employee.,"[""SELECT['shops']"", ""FILTER['#1', 'that hire employees']"", ""DISCARD['#1', '#2']"", ""PROJECT['names of #REF', '#3']""]","[""SELECT['shops']"", ""FILTER['#1', 'that do not hire employees']"", ""PROJECT['names of #REF', '#2']""]"
SPIDER_dev_286,Which shops run with no employees? Find the shop names,"[""SELECT['shops']"", ""PROJECT['employees of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is zero']"", ""PROJECT['names of #REF', '#4']""]","[""SELECT['shops']"", ""FILTER['#1', 'that run with no employees']"", ""PROJECT['names of #REF', '#2']""]"
SPIDER_dev_287,Find the number of employees hired in each shop; show the shop name as well.,"[""SELECT['shops']"", ""PROJECT['employees hired in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""PROJECT['shop names of #REF', '#1']"", ""UNION['#3', '#4']""]","[""SELECT['shops']"", ""PROJECT['employees hired in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""PROJECT['shop name of #REF', '#1']"", ""UNION['#3', '#4']""]"
SPIDER_dev_288,"For each shop, return the number of employees working there and the name of the shop.","[""SELECT['shops']"", ""PROJECT['employees working in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""PROJECT['names of #REF', '#1']"", ""UNION['#3', '#4']""]","[""SELECT['shops']"", ""PROJECT['employees working at #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""PROJECT['names of #REF', '#1']"", ""UNION['#3', '#4']""]"
SPIDER_dev_289,What is total bonus given in all evaluations?,"[""SELECT['evaluations']"", ""PROJECT['bonuses given in #REF', '#1']"", ""AGGREGATE['sum', '#2']""]","[""SELECT['evaluations']"", ""PROJECT['bonus given in #REF', '#1']"", ""AGGREGATE['sum', '#2']""]"
SPIDER_dev_29,What are the names of the stadiums without any concerts?,"[""SELECT['stadiums']"", ""FILTER['#1', 'without concerts']"", ""PROJECT['names of #REF', '#2']""]","[""SELECT['stadiums']"", ""FILTER['#1', 'with concerts']"", ""DISCARD['#1', '#2']"", ""PROJECT['the names of #REF', '#3']""]"
SPIDER_dev_290,Find the total amount of bonus given in all the evaluations.,"[""SELECT['evaluations']"", ""PROJECT['bonuses given in #REF', '#1']"", ""AGGREGATE['sum', '#2']""]","[""SELECT['evaluations']"", ""PROJECT['bonuses of #REF', '#1']"", ""GROUP['sum', '#2', '#1']"", ""UNION['#1', '#3']""]"
SPIDER_dev_291,Give me all the information about hiring.,"[""SELECT['hiring']"", ""PROJECT['information about #REF', '#1']""]","[""SELECT['all the information about hiring']""]"
SPIDER_dev_292,What is all the information about hiring?,"[""SELECT['hiring']"", ""PROJECT['all information about #REF', '#1']""]","[""SELECT['all the information about hiring']""]"
SPIDER_dev_293,Which district has both stores with less than 3000 products and stores with more than 10000 products?,"[""SELECT['districts']"", ""PROJECT['stores of #REF', '#1']"", ""PROJECT['products of #REF', '#2']"", ""GROUP['count', '#3', '#1']"", ""COMPARATIVE['#1', '#4', 'is lower than 3000']"", ""COMPARATIVE['#1', '#4', 'is higher than 10000']"", ""INTERSECTION['#1', '#5', '#6']""]","[""SELECT['stores']"", ""PROJECT['products of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is lower than 3000']"", ""COMPARATIVE['#1', '#3', 'is higher than 10000']"", ""SELECT['district']"", ""INTERSECTION['#6', '#4', '#5']""]"
SPIDER_dev_294,Find the districts in which there are both shops selling less than 3000 products and shops selling more than 10000 products.,"[""SELECT['shops']"", ""PROJECT['products #REF are selling', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is lower than 3000']"", ""COMPARATIVE['#1', '#3', 'is higher than 10000']"", ""INTERSECTION['#1', '#4', '#5']"", ""PROJECT['districts of #REF', '#6']""]","[""SELECT['shops']"", ""PROJECT['products #REF are selling', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is less than 3000']"", ""COMPARATIVE['#1', '#3', 'is more than 10000']"", ""INTERSECTION['#1', '#4', '#5']"", ""PROJECT['districts of #REF', '#6']""]"
SPIDER_dev_295,How many different store locations are there?,"[""SELECT['store locations']"", ""PROJECT['different #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['stores']"", ""PROJECT['locations of #REF', '#1']"", ""AGGREGATE['count', '#2']""]"
SPIDER_dev_296,Count the number of distinct store locations.,"[""SELECT['stores']"", ""PROJECT['locations of #REF', '#1']"", ""PROJECT['distinct #REF', '#2']"", ""AGGREGATE['count', '#3']""]","[""SELECT['store locations']"", ""PROJECT['distinct #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""UNION['#1', '#3']""]"
SPIDER_dev_297,How many documents do we have?,"[""SELECT['documents']"", ""AGGREGATE['count', '#1']""]","[""SELECT['documents']"", ""PROJECT['documents of #REF', '#1']"", ""AGGREGATE['count', '#2']""]"
SPIDER_dev_299,"List document IDs, document names, and document descriptions for all documents.","[""SELECT['documents']"", ""PROJECT['document IDs of #REF', '#1']"", ""PROJECT['document names of #REF', '#1']"", ""PROJECT['document descriptions of #REF', '#1']"", ""UNION['#2', '#3', '#4']""]","[""SELECT['documents']"", ""PROJECT['document ID of #REF', '#1']"", ""PROJECT['document names of #REF', '#1']"", ""PROJECT['document descriptions of #REF', '#1']"", ""UNION['#2', '#3', '#4']""]"
SPIDER_dev_3,"What are the names, countries, and ages for every singer in descending order of age?","[""SELECT['singers']"", ""PROJECT['names of #REF', '#1']"", ""PROJECT['countries of #REF', '#1']"", ""PROJECT['ages of #REF', '#1']"", ""UNION['#2', '#3', '#4']"", ""SORT['#5', '#2', 'in descending order']""]","[""SELECT['singers']"", ""PROJECT['names of #REF', '#1']"", ""PROJECT['countries of #REF', '#1']"", ""PROJECT['ages of #REF', '#1']"", ""UNION['#2', '#3', '#4']"", ""SORT['#5', '#3', 'in descending order']""]"
SPIDER_dev_30,Show countries where a singer above age 40 and a singer below 30 are from.,"[""SELECT['countries']"", ""PROJECT['singers of #REF', '#1']"", ""PROJECT['ages of #REF', '#2']"", ""COMPARATIVE['#1', '#3', 'is above 40']"", ""COMPARATIVE['#1', '#3', 'is below 30']"", ""INTERSECTION['#1', '#4', '#5']""]","[""SELECT['singers']"", ""PROJECT['ages of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is higher than 40']"", ""COMPARATIVE['#1', '#2', 'is lower than 30']"", ""SELECT['countries']"", ""INTERSECTION['#5', '#3', '#4']""]"
SPIDER_dev_300,"What are the ids, names, and descriptions for all documents?","[""SELECT['documents']"", ""PROJECT['ids of #REF', '#1']"", ""PROJECT['names of #REF', '#1']"", ""PROJECT['descriptions of #REF', '#1']"", ""UNION['#2', '#3', '#4']""]","[""SELECT['documents']"", ""PROJECT['ids of #REF', '#1']"", ""PROJECT['names of #REF', '#1']"", ""PROJECT['descriptions of #REF', '#1']"", ""UNION['#2', '#4', '#3']""]"
SPIDER_dev_301,What is the document name and template id for document with description with the letter 'w' in it?,"[""SELECT['documents']"", ""PROJECT['descriptions of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'has the letter w']"", ""PROJECT['document name of #REF', '#3']"", ""PROJECT['template id of #REF', '#3']"", ""UNION['#4', '#5']""]","[""SELECT['documents']"", ""FILTER['#1', 'with description with w in it']"", ""PROJECT['document name of #REF', '#2']"", ""PROJECT['template id of #REF', '#2']"", ""UNION['#3', '#4']""]"
SPIDER_dev_302,Return the names and template ids for documents that contain the letter w in their description.,"[""SELECT['documents']"", ""PROJECT['descriptions of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'contain the letter w']"", ""PROJECT['names of #REF', '#3']"", ""PROJECT['template ids of #REF', '#3']"", ""UNION['#4', '#5']""]","[""SELECT['documents']"", ""PROJECT['descriptions of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'contain the letter w']"", ""PROJECT['names of #REF', '#3']"", ""PROJECT['template ids of #REF', '#3']"", ""UNION['#5', '#6']""]"
SPIDER_dev_303,"What is the document id, template id and description for document named ""Robbin CV""?","[""SELECT['documents']"", ""FILTER['#1', 'named Robert CV']"", ""PROJECT['document id of #REF', '#2']"", ""PROJECT['template id of #REF', '#2']"", ""PROJECT['description of #REF', '#2']"", ""UNION['#3', '#4', '#5']""]","[""SELECT['documents']"", ""FILTER['#1', 'named Robbin CV']"", ""PROJECT['document id of #REF', '#2']"", ""PROJECT['template id of #REF', '#2']"", ""PROJECT['description of #REF', '#2']"", ""UNION['#3', '#4', '#5']""]"
SPIDER_dev_304,"Return the document id, template id, and description for the document with the name Robbin CV.","[""SELECT['documents']"", ""PROJECT['names of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is Robbin CV']"", ""PROJECT['document id of #REF', '#3']"", ""PROJECT['template id of #REF', '#3']"", ""PROJECT['description of #REF', '#3']"", ""UNION['#4', '#5', '#6']""]","[""SELECT['documents']"", ""FILTER['#1', 'with name Robbin CV']"", ""PROJECT['document id of #REF', '#2']"", ""PROJECT['template id of #REF', '#2']"", ""PROJECT['description of #REF', '#2']"", ""UNION['#3', '#4', '#5']""]"
SPIDER_dev_305,How many different templates do all document use?,"[""SELECT['documents']"", ""PROJECT['different templates of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['documents']"", ""PROJECT['different templates #REF use', '#1']"", ""AGGREGATE['count', '#2']""]"
SPIDER_dev_306,Count the number of different templates used for documents.,"[""SELECT['documents']"", ""PROJECT['different templates used for #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['documents']"", ""PROJECT['different templates of #REF', '#1']"", ""AGGREGATE['count', '#2']""]"
SPIDER_dev_307,How many documents are using the template with type code 'PPT'?,"[""SELECT['documents']"", ""PROJECT['the templates of #REF', '#1']"", ""PROJECT['type codes of #REF', '#2']"", ""COMPARATIVE['#1', '#3', 'is PPT']"", ""AGGREGATE['count', '#4']""]","[""SELECT['documents']"", ""FILTER['#1', 'using the template with type code PPT']"", ""AGGREGATE['count', '#2']""]"
SPIDER_dev_308,Count the number of documents that use the PPT template type.,"[""SELECT['documents']"", ""PROJECT['types of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is PPT']"", ""AGGREGATE['count', '#3']""]","[""SELECT['documents']"", ""FILTER['#1', 'that use PPT template type']"", ""AGGREGATE['count', '#2']""]"
SPIDER_dev_309,Show all template ids and number of documents using each template.,"[""SELECT['templates']"", ""PROJECT['ids of #REF', '#1']"", ""PROJECT['documents using #REF', '#1']"", ""GROUP['count', '#3', '#1']"", ""UNION['#2', '#4']""]","[""SELECT['metaphers']"", ""PROJECT['ids of #REF', '#1']"", ""PROJECT['documents using #REF', '#1']"", ""GROUP['count', '#3', '#1']"", ""UNION['#2', '#4']""]"
SPIDER_dev_31,Show names for all stadiums except for stadiums having a concert in year 2014.,"[""SELECT['stadiums']"", ""PROJECT['concerts of #REF', '#1']"", ""PROJECT['years of #REF', '#2']"", ""COMPARATIVE['#1', '#3', 'is 2014']"", ""DISCARD['#1', '#4']"", ""PROJECT['names of #REF', '#5']""]","[""SELECT['stadiums']"", ""PROJECT['concerts in #REF', '#1']"", ""PROJECT['years of #REF', '#2']"", ""COMPARATIVE['#1', '#3', 'is 2014']"", ""DISCARD['#1', '#4']"", ""PROJECT['names of #REF', '#5']""]"
SPIDER_dev_310,"What are all different template ids used for documents, and how many times were each of them used?","[""SELECT['documents']"", ""PROJECT['different template ids used for #REF', '#1']"", ""PROJECT['times #REF were used', '#2']"", ""GROUP['count', '#3', '#2']"", ""UNION['#2', '#4']""]","[""SELECT['different template ids used for documents']"", ""PROJECT['times #REF were used', '#1']"", ""GROUP['count', '#2', '#1']"", ""UNION['#1', '#3']""]"
SPIDER_dev_311,What is the id and type code for the template used by the most documents?,"[""SELECT['templates']"", ""PROJECT['documents of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']"", ""PROJECT['id of #REF', '#4']"", ""PROJECT['type code of #REF', '#4']"", ""UNION['#5', '#6']""]","[""SELECT['templates']"", ""PROJECT['documents that #REF used', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']"", ""PROJECT['id of #REF', '#4']"", ""PROJECT['type code of #REF', '#4']"", ""UNION['#5', '#6']""]"
SPIDER_dev_312,Return the id and type code of the template that is used for the greatest number of documents.,"[""SELECT['templates']"", ""PROJECT['documents #REF are used for', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']"", ""PROJECT['id of #REF', '#4']"", ""PROJECT['type code of #REF', '#4']"", ""UNION['#5', '#6']""]","[""SELECT['templates']"", ""PROJECT['documents of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']"", ""PROJECT['id of #REF', '#4']"", ""PROJECT['type code of #REF', '#4']"", ""UNION['#5', '#6']""]"
SPIDER_dev_313,Show ids for all templates that are used by more than one document.,"[""SELECT['design templates']"", ""PROJECT['documents #REF are used by', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is higher than one']"", ""PROJECT['ids of #REF', '#4']""]","[""SELECT['documents']"", ""PROJECT['design templates used by #REF', '#1']"", ""GROUP['count', '#1', '#2']"", ""COMPARATIVE['#2', '#3', 'is higher than one']"", ""PROJECT['ids of #REF', '#4']""]"
SPIDER_dev_314,What are the template ids of any templates used in more than a single document?,"[""SELECT[' templates']"", ""PROJECT['documents #REF are used in', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is higher than one']"", ""PROJECT['the template ids of #REF', '#4']""]","[""SELECT['templates']"", ""PROJECT['documents #REF are used in', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is higher than one']"", ""PROJECT['the template ids of #REF', '#4']""."
SPIDER_dev_315,Show ids for all templates not used by any document.,"[""SELECT['documents']"", ""PROJECT['templates used by #REF', '#1']"", ""DISCARD['#2', '#1']"", ""PROJECT['ids of #REF', '#3']""]","[""SELECT['documents']"", ""PROJECT['design templates used by #REF', '#1']"", ""DISCARD['#2', '#1']"", ""PROJECT['ids of #REF', '#3']""]"
SPIDER_dev_316,What are the ids for templates that are not used in any documents?,"[""SELECT['design templates']"", ""FILTER['#1', 'used in documents']"", ""DISCARD['#1', '#2']"", ""PROJECT['ids of #REF', '#3']""]","[""SELECT['design templates']"", ""FILTER['#1', 'used in any documents']"", ""DISCARD['#1', '#2']"", ""PROJECT['ids of #REF', '#3']""]"
SPIDER_dev_317,How many templates do we have?,"[""SELECT['design templates']"", ""AGGREGATE['count', '#1']""]","[""SELECT['designers']"", ""AGGREGATE['count', '#1']""]"
SPIDER_dev_318,Count the number of templates.,"[""SELECT['designs']"", ""AGGREGATE['count', '#1']""]","[""SELECT[' templates']"", ""AGGREGATE['count', '#1']""]"
SPIDER_dev_319,"Show template ids, version numbers, and template type codes for all templates.","[""SELECT['all templates']"", ""PROJECT['template ids of #REF', '#1']"", ""PROJECT['version numbers of #REF', '#1']"", ""PROJECT['template type codes of #REF', '#1']"", ""UNION['#2', '#3', '#4']""]","[""SELECT['the templates']"", ""PROJECT['the template ids of #REF', '#1']"", ""PROJECT['the version numbers of #REF', '#1']"", ""PROJECT['the template type codes of #REF', '#1']"", ""UNION['#2', '#3', '#4']""]"
SPIDER_dev_32,What are the names of all stadiums that did not have a concert in 2014?,"[""SELECT['stadiums']"", ""FILTER['#1', 'that did not have a concert in 2014']"", ""PROJECT['names of #REF', '#2']""]","[""SELECT['stadiums']"", ""PROJECT['concerts of #REF', '#1']"", ""FILTER['#2', 'in 2014']"", ""DISCARD['#1', '#3']"", ""PROJECT['names of #REF', '#4']""]"
SPIDER_dev_320,"What are the ids, version numbers, and type codes for each template?","[""SELECT['templates']"", ""PROJECT['ids of #REF', '#1']"", ""PROJECT['version numbers of #REF', '#1']"", ""PROJECT['type codes of #REF', '#1']"", ""UNION['#2', '#3', '#4']""]","[""SELECT['the templates']"", ""PROJECT['ids of #REF', '#1']"", ""PROJECT['version numbers of #REF', '#1']"", ""PROJECT['type codes of #REF', '#1']"", ""UNION['#2', '#3', '#4']""]"
SPIDER_dev_321,Show all distinct template type codes for all templates.,"[""SELECT['templates']"", ""PROJECT['type codes of #REF', '#1']"", ""PROJECT['distinct #REF', '#2']""]","[""SELECT['memoirs']"", ""PROJECT['type codes of #REF', '#1']"", ""PROJECT['distinct #REF', '#2']""."
SPIDER_dev_322,What are the different template type codes?,"[""SELECT['different template type codes']""]","[""SELECT['different template type codes']""]."
SPIDER_dev_323,What are the ids of templates with template type code PP or PPT?,"[""SELECT['templates']"", ""PROJECT['type codes of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is PP']"", ""COMPARATIVE['#1', '#2', 'is PPT']"", ""UNION['#3', '#4']"", ""PROJECT['ids of #REF', '#5']""]","[""SELECT[' templates']"", ""PROJECT['type codes of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is PP']"", ""COMPARATIVE['#1', '#2', 'is PPT']"", ""UNION['#3', '#4']"", ""PROJECT['ids of #REF', '#5']""]"
SPIDER_dev_324,Return the ids of templates that have the code PP or PPT.,"[""SELECT['designations']"", ""PROJECT['codes of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is PP']"", ""COMPARATIVE['#1', '#2', 'is PPT']"", ""UNION['#3', '#4']"", ""PROJECT['ids of #REF', '#5']""]","[""SELECT['design templates']"", ""PROJECT['codes of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is PP']"", ""COMPARATIVE['#1', '#2', 'is PPT']"", ""UNION['#3', '#4']"", ""PROJECT['ids of #REF', '#5']""]"
SPIDER_dev_325,How many templates have template type code CV?,"[""SELECT[' templates']"", ""PROJECT['type codes of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is CV']"", ""AGGREGATE['count', '#3']""]","[""SELECT['templates']"", ""PROJECT['type codes of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is CV']"", ""AGGREGATE['count', '#3']""]"
SPIDER_dev_326,Count the number of templates of the type CV.,"[""SELECT['type CV']"", ""PROJECT['designs of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['types of templates']"", ""FILTER['#1', 'that are CV']"", ""AGGREGATE['count', '#2']""]"
SPIDER_dev_327,What is the version number and template type code for the template with version number later than 5?,"[""SELECT['templates']"", ""PROJECT['version numbers of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is higher than 5']"", ""PROJECT['version number of #REF', '#3']"", ""PROJECT['type code of #REF', '#3']"", ""UNION['#4', '#5']""]","[""SELECT['the templates']"", ""PROJECT['version numbers of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is higher than 5']"", ""PROJECT['the template type code of #REF', '#3']"", ""UNION['#3', '#4']""]"
SPIDER_dev_328,Return the version numbers and template type codes of templates with a version number greater than 5.,"[""SELECT[' templates']"", ""PROJECT['version numbers of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is higher than 5']"", ""PROJECT['the template type codes of #REF', '#1']"", ""UNION['#3', '#4']""]","[""SELECT['models']"", ""PROJECT['version numbers of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is higher than 5']"", ""PROJECT['the template type codes of #REF', '#1']"", ""UNION['#3', '#4']""]"
SPIDER_dev_329,Show all template type codes and number of templates for each.,"[""SELECT['type codes']"", ""PROJECT['templates of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""UNION['#1', '#3']""]","[""SELECT['type codes']"", ""PROJECT['the templates of #REF', '#1']"", ""GROUP['count', '#1', '#2']"", ""UNION['#2', '#3']""]"
SPIDER_dev_33,Show the name and theme for all concerts and the number of singers in each concert.,"[""SELECT['concerts']"", ""PROJECT['names of #REF', '#1']"", ""PROJECT['theme of #REF', '#1']"", ""PROJECT['singers in #REF', '#1']"", ""GROUP['count', '#4', '#1']"", ""UNION['#2', '#3', '#5']""]","[""SELECT['concerts']"", ""PROJECT['names of #REF', '#1']"", ""PROJECT['theme of #REF', '#1']"", ""PROJECT['singers in #REF', '#1']"", ""GROUP['count', '#3', '#1']"", ""UNION['#2', '#4', '#5']""]"
SPIDER_dev_330,"What are the different template type codes, and how many templates correspond to each?","[""SELECT['different template type codes']"", ""PROJECT['different #REF', '#1']"", ""PROJECT['the templates that correspond to #REF', '#2']"", ""GROUP['count', '#3', '#2']"", ""UNION['#2', '#4']""]","[""SELECT['different template type codes']"", ""PROJECT['different #REF', '#1']"", ""PROJECT['the templates of #REF', '#2']"", ""GROUP['count', '#3', '#2']"", ""UNION['#2', '#4']""]"
SPIDER_dev_331,Which template type code has most number of templates?,"[""SELECT['type codes']"", ""PROJECT['templates of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']""]","[""SELECT['type codes']"", ""PROJECT['designers of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']""]"
SPIDER_dev_332,Return the type code of the template type that the most templates belong to.,"[""SELECT['types']"", ""PROJECT['templates belong to #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']"", ""PROJECT['type code of #REF', '#4']""]","[""SELECT['types']"", ""PROJECT['templates of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']"", ""PROJECT['type code of #REF', '#4']""]"
SPIDER_dev_333,Show all template type codes with less than three templates.,"[""SELECT['type codes']"", ""PROJECT['templates of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is lower than three']""]","[""SELECT['type codes']"", ""PROJECT['templates with #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is lower than three']""]"
SPIDER_dev_334,What are the codes of template types that have fewer than 3 templates?,"[""SELECT['types']"", ""PROJECT['templates of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is lower than 3']"", ""PROJECT['codes of #REF', '#4']""]","[""SELECT['types']"", ""PROJECT['memories of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is lower than 3']"", ""PROJECT['codes of #REF', '#4']""]"
SPIDER_dev_335,What the smallest version number and its template type code?,"[""SELECT['versions']"", ""PROJECT['numbers of #REF', '#1']"", ""AGGREGATE['min', '#2']"", ""PROJECT['type codes of #REF', '#1']"", ""UNION['#3', '#4']""]","[""SELECT['versions']"", ""AGGREGATE['count', '#1']"", ""PROJECT['size of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is the lowest']"", ""PROJECT['type code of #REF', '#4']"", ""UNION['#4', '#5']""]"
SPIDER_dev_336,"Return the lowest version number, along with its corresponding template type code.","[""SELECT['versions']"", ""AGGREGATE['min', '#1']"", ""PROJECT['type codes of #REF', '#1']"", ""UNION['#2', '#3']""]","[""SELECT['version numbers']"", ""AGGREGATE['min', '#1']"", ""PROJECT['corresponding template type code of #REF', '#1']"", ""UNION['#2', '#3']""]"
SPIDER_dev_337,"What is the template type code of the template used by document with the name ""Data base""?","[""SELECT['documents']"", ""PROJECT['names of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is Data base']"", ""PROJECT['the template used by #REF', '#3']"", ""PROJECT['the type code of #REF', '#4']""]","[""SELECT['documents']"", ""PROJECT['names of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is Database']"", ""PROJECT['the template used by #REF', '#3']"", ""PROJECT['the type code of #REF', '#4']""]"
SPIDER_dev_338,Return the template type code of the template that is used by a document named Data base.,"[""SELECT['documents']"", ""FILTER['#1', 'named Data base']"", ""PROJECT['the templates used by #REF', '#2']"", ""PROJECT['the template type code of #REF', '#3']""]","[""SELECT['documents']"", ""FILTER['#1', 'named Data base']"", ""PROJECT['the template used by #REF', '#2']"", ""PROJECT['the template type code of #REF', '#3']""]"
SPIDER_dev_339,Show all document names using templates with template type code BK.,"[""SELECT['documents']"", ""PROJECT[' templates of #REF', '#1']"", ""PROJECT['type codes of #REF', '#2']"", ""COMPARATIVE['#1', '#3', 'is BK']"", ""PROJECT['names of #REF', '#4']""]","[""SELECT['documents']"", ""PROJECT['template types of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is BK']"", ""PROJECT['names of #REF', '#3']""]"
SPIDER_dev_34,"What are the names, themes, and number of singers for every concert?","[""SELECT['concerts']"", ""PROJECT['names of #REF', '#1']"", ""PROJECT['themes of #REF', '#1']"", ""PROJECT['singers of #REF', '#1']"", ""GROUP['count', '#4', '#1']"", ""UNION['#2', '#3', '#5']""]","[""SELECT['concerts']"", ""PROJECT['names of #REF', '#1']"", ""PROJECT['themes of #REF', '#1']"", ""PROJECT['singers of #REF', '#1']"", ""GROUP['count', '#3', '#1']"", ""UNION['#2', '#4', '#5']""]"
SPIDER_dev_340,What are the names of documents that use templates with the code BK?,"[""SELECT['documents']"", ""FILTER['#1', 'that use templates']"", ""PROJECT['codes of #REF', '#2']"", ""COMPARATIVE['#2', '#3', 'is BK']"", ""PROJECT['names of #REF', '#4']""]","[""SELECT['documents']"", ""FILTER['#1', 'that use templates with the code BK']"", ""PROJECT['names of #REF', '#2']""]"
SPIDER_dev_341,Show all template type codes and the number of documents using each type.,"[""SELECT['types']"", ""PROJECT['codes of #REF', '#1']"", ""PROJECT['documents using #REF', '#2']"", ""GROUP['count', '#3', '#2']"", ""UNION['#2', '#4']""]","[""SELECT['types']"", ""PROJECT['all template type codes of #REF', '#1']"", ""PROJECT['documents using #REF', '#1']"", ""GROUP['count', '#3', '#1']"", ""UNION['#2', '#4']""]"
SPIDER_dev_342,"What are the different template type codes, and how many documents use each type?","[""SELECT['different template type codes']"", ""PROJECT['documents that use #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""UNION['#1', '#3']""]","[""SELECT['types']"", ""PROJECT['different codes of #REF', '#1']"", ""PROJECT['different #REF', '#2']"", ""PROJECT['documents of #REF', '#3']"", ""GROUP['count', '#4', '#3']"", ""UNION['#3', '#5']""]"
SPIDER_dev_343,Which template type code is used by most number of documents?,"[""SELECT['type codes']"", ""PROJECT['documents with #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']""]","[""SELECT['documents']"", ""PROJECT['type codes of #REF', '#1']"", ""GROUP['count', '#1', '#2']"", ""COMPARATIVE['#2', '#3', 'is the highest']""]"
SPIDER_dev_344,Return the code of the template type that is most commonly used in documents.,"[""SELECT['types']"", ""PROJECT['documents with #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']"", ""PROJECT['code of #REF', '#4']""]","[""SELECT['types of templates']"", ""PROJECT['documents with #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']"", ""PROJECT['code of #REF', '#4']""]"
SPIDER_dev_345,Show all template type codes that are not used by any document.,"[""SELECT['type codes']"", ""FILTER['#1', 'that are template']"", ""FILTER['#2', 'used by any document']"", ""DISCARD['#2', '#3']""]","[""SELECT['type codes']"", ""FILTER['#1', 'of templates']"", ""FILTER['#2', 'not used by any document']""]"
SPIDER_dev_346,What are the codes of template types that are not used for any document?,"[""SELECT['types']"", ""PROJECT['documents of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is zero']"", ""PROJECT['codes of #REF', '#4']""]","[""SELECT['documents']"", ""PROJECT['types of #REF', '#1']"", ""PROJECT['codes of #REF', '#2']"", ""DISCARD['#2', '#3']""]"
SPIDER_dev_347,Show all template type codes and descriptions.,"[""SELECT['template type codes']"", ""PROJECT['descriptions of #REF', '#1']"", ""UNION['#1', '#2']""]","[""SELECT['measuring type codes']"", ""PROJECT['descriptions of #REF', '#1']"", ""UNION['#1', '#2']""."
SPIDER_dev_348,What are the type codes and descriptions for all template types?,"[""SELECT['types']"", ""PROJECT['type codes of #REF', '#1']"", ""PROJECT['descriptions of #REF', '#1']"", ""UNION['#2', '#3']""]","[""SELECT['template types']"", ""PROJECT['type codes of #REF', '#1']"", ""PROJECT['descriptions of #REF', '#1']"", ""UNION['#2', '#3']""]"
SPIDER_dev_349,"What is the template type descriptions for template type code ""AD"".","[""SELECT['the template type code AD']"", ""PROJECT['descriptions of #REF', '#1']""]","[""SELECT['the template type codes']"", ""FILTER['#1', 'that is AD']"", ""PROJECT['descriptions of #REF', '#2']""]"
SPIDER_dev_35,List singer names and number of concerts for each singer.,"[""SELECT['singers']"", ""PROJECT['names of #REF', '#1']"", ""PROJECT['concerts of #REF', '#1']"", ""GROUP['count', '#3', '#1']"", ""UNION['#2', '#4']""]","[""SELECT['singers']"", ""PROJECT['names of #REF', '#1']"", ""PROJECT['concerts of #REF', '#1']"", ""GROUP['count', '#3', '#2']"", ""UNION['#2', '#4']""]"
SPIDER_dev_350,Return the template type description of the template type with the code AD.,"[""SELECT['types']"", ""PROJECT['codes of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is AD']"", ""PROJECT['the template type description of #REF', '#3']""]","[""SELECT['types']"", ""PROJECT['codes of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is AD']"", ""PROJECT['template type description of #REF', '#3']""]"
SPIDER_dev_351,"What is the template type code for template type description ""Book"".","[""SELECT['the template type description Book']"", ""PROJECT['the template type code of #REF', '#1']""]","[""SELECT['the template type description Book']"", ""PROJECT['the template type code for #REF', '#1']""]"
SPIDER_dev_352,"Return the type code of the template type with the description ""Book"".","[""SELECT['types']"", ""PROJECT['descriptions of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is Book']"", ""PROJECT['type code of #REF', '#3']""]","[""SELECT['types']"", ""PROJECT['descriptions of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is Book']"", ""PROJECT['type codes of #REF', '#3']""]"
SPIDER_dev_353,What are the distinct template type descriptions for the templates ever used by any document?,"[""SELECT['documents']"", ""PROJECT['the templates used by #REF', '#1']"", ""PROJECT['the distinct template type descriptions of #REF', '#2']""]","[""SELECT['documents']"", ""PROJECT['made templates used by #REF', '#1']"", ""PROJECT['distinct type descriptions of #REF', '#2']""]"
SPIDER_dev_354,Return the different descriptions for templates that have been used in a document.,"[""SELECT['documents']"", ""PROJECT['templates used in #REF', '#1']"", ""PROJECT['different descriptions of #REF', '#2']""]","[""SELECT['documents']"", ""PROJECT['templates of #REF', '#1']"", ""PROJECT['different descriptions of #REF', '#2']""]"
SPIDER_dev_355,"What are the template ids with template type description ""Presentation"".","[""SELECT['the template']"", ""PROJECT['type descriptions of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is Presentation']"", ""PROJECT['the template ids of #REF', '#3']""]","[""SELECT['template ids']"", ""PROJECT['type descriptions of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is Presentation']""]"
SPIDER_dev_356,Return the ids corresponding to templates with the description 'Presentation'.,"[""SELECT['templates']"", ""PROJECT['descriptions of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is Presentation']"", ""PROJECT['ids of #REF', '#3']""]","[""SELECT[' templates']"", ""PROJECT['descriptions of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is Presentation']"", ""PROJECT['ids corresponding to #REF', '#3']""]"
SPIDER_dev_357,How many paragraphs in total?,"[""SELECT['paragraphs']"", ""AGGREGATE['count', '#1']""]","[""SELECT['paragraphs']"", ""FILTER['#1', 'that are in total']"", ""AGGREGATE['count', '#2']""]"
SPIDER_dev_358,Count the number of paragraphs.,"[""SELECT['paragraphs']"", ""AGGREGATE['count', '#1']""]","[""SELECT['paragraphs']"", ""PROJECT['Count of #REF', '#1']""."
SPIDER_dev_359,How many paragraphs for the document with name 'Summer Show'?,"[""SELECT['documents']"", ""PROJECT['names of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is Summer Show']"", ""PROJECT['paragraphs for #REF', '#3']"", ""AGGREGATE['count', '#4']""]","[""SELECT['documents']"", ""PROJECT['names of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is Summer Show']"", ""PROJECT['paragraphs of #REF', '#3']"", ""AGGREGATE['count', '#4']""]"
SPIDER_dev_36,What are the names of the singers and number of concerts for each person?,"[""SELECT['people']"", ""PROJECT['names of #REF', '#1']"", ""PROJECT['concerts of #REF', '#1']"", ""GROUP['count', '#3', '#1']"", ""UNION['#2', '#4']""]","[""SELECT['people']"", ""PROJECT['singers of #REF', '#1']"", ""PROJECT['names of #REF', '#2']"", ""PROJECT['concerts of #REF', '#2']"", ""GROUP['count', '#5', '#1']"", ""UNION['#3', '#4']""]"
SPIDER_dev_360,Count the number of paragraphs in the document named 'Summer Show'.,"[""SELECT['documents']"", ""FILTER['#1', 'named Summer Show']"", ""PROJECT['paragraphs in #REF', '#2']"", ""AGGREGATE['count', '#3']""]","[""SELECT['documents']"", ""PROJECT['paragraphs in #REF', '#1']"", ""COMPARATIVE['#2', '#1', 'is Summer Show']"", ""AGGREGATE['count', '#3']""]."
SPIDER_dev_361,Show paragraph details for paragraph with text 'Korea'.,"[""SELECT['paragraphs']"", ""PROJECT['texts of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is Korea']"", ""PROJECT['paragraph details of #REF', '#3']""]","[""SELECT['paragraphs']"", ""PROJECT['text of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is Korea']"", ""PROJECT['paragraph details of #REF', '#3']""]"
SPIDER_dev_362,What are the details for the paragraph that includes the text 'Korea'?,"[""SELECT['paragraphs']"", ""PROJECT['texts of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is Korea']"", ""PROJECT['details of #REF', '#3']""]","[""SELECT['paragraphs']"", ""PROJECT['text of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'includes Korea']"", ""PROJECT['details of #REF', '#3']""]"
SPIDER_dev_363,Show all paragraph ids and texts for the document with name 'Welcome to NY'.,"[""SELECT['documents']"", ""PROJECT['names of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is Welcome to NY']"", ""PROJECT['paragraph ids of #REF', '#3']"", ""PROJECT['texts of #REF', '#3']"", ""UNION['#4', '#5']""]","[""SELECT['documents']"", ""PROJECT['names of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is Welcome to NY']"", ""PROJECT['paragraph ids for #REF', '#3']"", ""PROJECT['texts for #REF', '#3']"", ""UNION['#4', '#5']""]"
SPIDER_dev_364,What are the ids and texts of paragraphs in the document titled 'Welcome to NY'?,"[""SELECT['documents']"", ""FILTER['#1', 'titled Welcome to NY']"", ""PROJECT['paragraphs of #REF', '#2']"", ""PROJECT['ids of #REF', '#3']"", ""PROJECT['texts of #REF', '#3']"", ""UNION['#4', '#5']""]","[""SELECT['documents']"", ""FILTER['#1', 'titled Welcome to NY']"", ""PROJECT['paragraphs in #REF', '#2']"", ""PROJECT['ids of #REF', '#3']"", ""PROJECT['texts of #REF', '#3']"", ""UNION['#4', '#5']""]."
SPIDER_dev_365,"Show all paragraph texts for the document ""Customer reviews"".","[""SELECT['documents']"", ""FILTER['#1', 'Customer reviews']"", ""PROJECT['paragraph texts of #REF', '#2']""]","[""SELECT['documents']"", ""PROJECT['paragraph texts for #REF', '#1']"", ""COMPARATIVE['#2', '#1', 'is Customer reviews']""]"
SPIDER_dev_366,What are the paragraph texts for the document with the name 'Customer reviews'?,"[""SELECT['documents']"", ""FILTER['#1', 'with the name Customer reviews']"", ""PROJECT['paragraph texts of #REF', '#2']""]","[""SELECT['documents']"", ""FILTER['#1', 'with name Customer reviews']"", ""PROJECT['paragraph texts of #REF', '#2']""]"
SPIDER_dev_367,Show all document ids and the number of paragraphs in each document. Order by document id.,"[""SELECT['document ids']"", ""PROJECT['paragraphs in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""UNION['#1', '#3']"", ""SORT['#4', '#3']""]","[""SELECT['documents']"", ""PROJECT['document ids of #REF', '#1']"", ""PROJECT['paragraphs in #REF', '#1']"", ""GROUP['count', '#3', '#1']"", ""SORT['#2', '#4']""]"
SPIDER_dev_368,"Return the different document ids along with the number of paragraphs corresponding to each, ordered by id.","[""SELECT['document ids']"", ""PROJECT['different #REF', '#1']"", ""PROJECT['paragraphs of #REF', '#2']"", ""GROUP['count', '#3', '#2']"", ""SORT['#2', '#4']""]","[""SELECT['document ids']"", ""PROJECT['different #REF', '#1']"", ""PROJECT['paragraphs of #REF', '#2']"", ""GROUP['count', '#3', '#2']"", ""UNION['#2', '#4']"", ""SORT['#5', '#2']""]"
SPIDER_dev_369,"Show all document ids, names and the number of paragraphs in each document.","[""SELECT['documents']"", ""PROJECT['document ids of #REF', '#1']"", ""PROJECT['names of #REF', '#1']"", ""PROJECT['paragraphs in #REF', '#1']"", ""GROUP['count', '#4', '#1']"", ""UNION['#2', '#3', '#5']""]","[""SELECT['documents']"", ""PROJECT['ids of #REF', '#1']"", ""PROJECT['names of #REF', '#1']"", ""PROJECT['paragraphs in #REF', '#1']"", ""GROUP['count', '#4', '#1']"", ""UNION['#2', '#3', '#5']""]"
SPIDER_dev_37,List all singer names in concerts in year 2014.,"[""SELECT['concerts']"", ""PROJECT['years of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is 2014']"", ""PROJECT['singers in #REF', '#3']"", ""PROJECT['names of #REF', '#4']""]","[""SELECT['concerts']"", ""PROJECT['years of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is 2014']"", ""PROJECT['singers in #REF', '#3']"", ""PROJECT['names of #REF', '#4']""]"
SPIDER_dev_370,"What are the ids and names of each document, as well as the number of paragraphs in each?","[""SELECT['documents']"", ""PROJECT['ids of #REF', '#1']"", ""PROJECT['names of #REF', '#1']"", ""PROJECT['paragraphs in #REF', '#1']"", ""GROUP['count', '#4', '#1']"", ""UNION['#2', '#3', '#5']""]","[""SELECT['documents']"", ""PROJECT['ids of #REF', '#1']"", ""PROJECT['names of #REF', '#1']"", ""PROJECT['paragraphs in #REF', '#1']"", ""GROUP['count', '#5', '#1']"", ""UNION['#2', '#3', '#4']""]"
SPIDER_dev_371,List all document ids with at least two paragraphs.,"[""SELECT['document ids']"", ""PROJECT['paragraphs of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is at least two']""]","[""SELECT['documents']"", ""PROJECT['paragraphs of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is at least two']"", ""PROJECT['ids of #REF', '#4']""]"
SPIDER_dev_372,What are the ids of documents that have 2 or more paragraphs?,"[""SELECT['documents']"", ""PROJECT['paragraphs of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is at least 2']"", ""PROJECT['ids of #REF', '#4']""]","[""SELECT['documents']"", ""PROJECT['paragraphs in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is at least 2']"", ""PROJECT['ids of #REF', '#4']""]"
SPIDER_dev_373,What is the document id and name with greatest number of paragraphs?,"[""SELECT['documents']"", ""PROJECT['paragraphs of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']"", ""PROJECT['document id of #REF', '#4']"", ""PROJECT['name of #REF', '#4']"", ""UNION['#5', '#6']""]","[""SELECT['document ids']"", ""PROJECT['paragraphs of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']"", ""PROJECT['name of #REF', '#4']"", ""UNION['#5', '#6']""]"
SPIDER_dev_374,Return the id and name of the document with the most paragraphs.,"[""SELECT['documents']"", ""PROJECT['paragraphs of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']"", ""PROJECT['id of #REF', '#4']"", ""PROJECT['name of #REF', '#4']"", ""UNION['#5', '#6']""]","[""SELECT['documents']"", ""PROJECT['paragraphs of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is the highest']"", ""PROJECT['the id of #REF', '#4']"", ""PROJECT['the name of #REF', '#4']"", ""UNION['#5', '#6']."
SPIDER_dev_375,What is the document id with least number of paragraphs?,"[""SELECT['documents']"", ""PROJECT['paragraphs of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['min', '#1', '#3']"", ""PROJECT['document id of #REF', '#4']""]","[""SELECT['document ids']"", ""PROJECT['paragraphs in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['min', '#1', '#3']""]"
SPIDER_dev_376,Return the id of the document with the fewest paragraphs.,"[""SELECT['documents']"", ""PROJECT['paragraphs of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['min', '#1', '#3']"", ""PROJECT['id of #REF', '#4']""]","[""SELECT['documents']"", ""PROJECT['paragraphs of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['min', '#1', '#3']"", ""PROJECT['id of #REF', '#4']""]."
SPIDER_dev_377,What is the document id with 1 to 2 paragraphs?,"[""SELECT['documents']"", ""PROJECT['paragraphs of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is 1 to 2']"", ""PROJECT['document id of #REF', '#4']""]","[""SELECT['document ids']"", ""FILTER['#1', 'with 1 to 2 paragraphs']""]"
SPIDER_dev_378,Give the ids of documents that have between one and two paragraphs.,"[""SELECT['documents']"", ""PROJECT['paragraphs of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is at least one']"", ""COMPARATIVE['#1', '#3', 'is at most two']"", ""INTERSECTION['#1', '#4', '#5']"", ""PROJECT['ids of #REF', '#6']""]","[""SELECT['documents']"", ""PROJECT['paragraphs in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is betweenleftside one']"", ""COMPARATIVE['#4', '#3', 'is betweenrightside two']"", ""PROJECT['ids of #REF', '#5']""]"
SPIDER_dev_379,Show the document id with paragraph text 'Brazil' and 'Ireland'.,"[""SELECT['documents']"", ""PROJECT['paragraph texts of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is Brazil']"", ""COMPARATIVE['#1', '#2', 'is Ireland']"", ""INTERSECTION['#1', '#3', '#4']"", ""PROJECT['document id of #REF', '#5']""]","[""SELECT['document ids']"", ""PROJECT['paragraph text of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is Brazil']"", ""COMPARATIVE['#1', '#2', 'is Ireland']"", ""INTERSECTION['#1', '#3', '#4']""]"
SPIDER_dev_38,What are the names of the singers who performed in a concert in 2014?,"[""SELECT['concerts']"", ""FILTER['#1', 'in 2014']"", ""PROJECT['singers of #REF', '#2']"", ""PROJECT['names of #REF', '#3']""]","[""SELECT['singers']"", ""FILTER['#1', 'who performed in a concert']"", ""FILTER['#2', 'in 2014']"", ""PROJECT['names of #REF', '#3']""]"
SPIDER_dev_380,What are the ids of documents that contain the paragraph text 'Brazil' and 'Ireland'?,"[""SELECT['documents']"", ""PROJECT['paragraph texts of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is Brazil']"", ""COMPARATIVE['#1', '#2', 'is Ireland']"", ""INTERSECTION['#1', '#3', '#4']"", ""PROJECT['ids of #REF', '#5']""]","[""SELECT['documents']"", ""PROJECT['paragraph texts of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'contain Brazil']"", ""COMPARATIVE['#1', '#2', 'contain Ireland']"", ""INTERSECTION['#1', '#3', '#4']"", ""PROJECT['ids of #REF', '#5']""."
SPIDER_dev_381,How many teachers are there?,"[""SELECT['teachers']"", ""AGGREGATE['count', '#1']""]","[""SELECT['enseignants']"", ""AGGREGATE['count', '#1']""]"
SPIDER_dev_382,What is the total count of teachers?,"[""SELECT['teachers']"", ""AGGREGATE['count', '#1']""]","[""SELECT['teachers']"", ""PROJECT['count of #REF', '#1']"", ""AGGREGATE['sum', '#2']""]"
SPIDER_dev_383,List the names of teachers in ascending order of age.,"[""SELECT['teachers']"", ""PROJECT['names of #REF', '#1']"", ""PROJECT['ages of #REF', '#1']"", ""SORT['#2', '#3', 'in ascending order']""]","[""SELECT['teachers']"", ""PROJECT['ages of #REF', '#1']"", ""SORT['#1', '#2']"", ""PROJECT['names of #REF', '#1']""]"
SPIDER_dev_384,What are the names of the teachers ordered by ascending age?,"[""SELECT['teachers']"", ""PROJECT['names of #REF', '#1']"", ""PROJECT['ages of #REF', '#1']"", ""SORT['#2', '#3', 'ascending']""]","[""SELECT['teachers']"", ""PROJECT['names of #REF', '#1']"", ""PROJECT['ages of #REF', '#1']"", ""SORT['#2', '#3', 'in ascending order']""]"
SPIDER_dev_385,What are the age and hometown of teachers?,"[""SELECT['teachers']"", ""PROJECT['ages of #REF', '#1']"", ""PROJECT['hometowns of #REF', '#1']"", ""UNION['#2', '#3']""]","[""SELECT['teachers']"", ""PROJECT['age of #REF', '#1']"", ""PROJECT['hometown of #REF', '#1']"", ""UNION['#2', '#3']""]"
SPIDER_dev_386,What is the age and hometown of every teacher?,"[""SELECT['teachers']"", ""PROJECT['ages of #REF', '#1']"", ""PROJECT['hometowns of #REF', '#1']"", ""UNION['#2', '#3']""]","[""SELECT['teachers']"", ""PROJECT['the age of #REF', '#1']"", ""PROJECT['the hometown of #REF', '#1']"", ""UNION['#2', '#3']""]"
SPIDER_dev_387,"List the name of teachers whose hometown is not ""Little Lever Urban District"".","[""SELECT['teachers']"", ""PROJECT['hometowns of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is not Little Lever Urban District']"", ""PROJECT['names of #REF', '#3']""]","[""SELECT['teachers']"", ""PROJECT['hometown of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is Little Lever Urban District']"", ""DISCARD['#1', '#3']"", ""PROJECT['names of #REF', '#4']""]"
SPIDER_dev_388,"What are the names of the teachers whose hometown is not ""Little Lever Urban District""?","[""SELECT['teachers']"", ""PROJECT['hometowns of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is not Little Lever Urban District']"", ""PROJECT['names of #REF', '#3']""]","[""SELECT['teachers']"", ""PROJECT['hometown of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is not Little Lever Urban District']"", ""PROJECT['names of #REF', '#3']""]"
SPIDER_dev_389,Show the name of teachers aged either 32 or 33?,"[""SELECT['teachers']"", ""FILTER['#1', 'aged 32']"", ""FILTER['#1', 'aged 33']"", ""UNION['#2', '#3']"", ""PROJECT['names of #REF', '#4']""]","[""SELECT['teachers']"", ""FILTER['#1', 'aged 32']"", ""FILTER['#1', 'aged 33']"", ""UNION['#2', '#3']"", ""PROJECT['name of #REF', '#4']""]"
SPIDER_dev_39,what is the name and nation of the singer who have a song having 'Hey' in its name?,"[""SELECT['singers']"", ""PROJECT['songs of #REF', '#1']"", ""PROJECT['names of #REF', '#2']"", ""COMPARATIVE['#1', '#3', 'has Hey']"", ""PROJECT['name of #REF', '#4']"", ""PROJECT['nation of #REF', '#4']"", ""UNION['#5', '#6']""]","[""SELECT['singers']"", ""PROJECT['songs of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'has Hey in its name']"", ""PROJECT['name of #REF', '#3']"", ""PROJECT['nation of #REF', '#3']"", ""UNION['#4', '#5']""]"
SPIDER_dev_390,What are the names of the teachers who are aged either 32 or 33?,"[""SELECT['teachers']"", ""PROJECT['ages of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is 32']"", ""COMPARATIVE['#1', '#2', 'is 33']"", ""UNION['#3', '#4']"", ""PROJECT['names of #REF', '#5']""]","[""SELECT['teachers']"", ""PROJECT['age of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is 32']"", ""COMPARATIVE['#1', '#2', 'is 33']"", ""UNION['#3', '#4']"", ""PROJECT['names of #REF', '#5']""]"
SPIDER_dev_391,What is the hometown of the youngest teacher?,"[""SELECT['teachers']"", ""PROJECT['the youngest #REF', '#1']"", ""PROJECT['hometown of #REF', '#2']""]","[""SELECT['teachers']"", ""PROJECT['youngest #REF', '#1']"", ""PROJECT['hometown of #REF', '#2']""."
SPIDER_dev_392,Where is the youngest teacher from?,"[""SELECT['teachers']"", ""PROJECT['the youngest #REF', '#1']"", ""PROJECT['Where is #REF from', '#2']""]","[""SELECT['teachers']"", ""PROJECT['the youngest #REF', '#1']"", ""PROJECT['Where is #REF from', '#2']""."
SPIDER_dev_393,Show different hometown of teachers and the number of teachers from each hometown.,"[""SELECT['teachers']"", ""PROJECT['hometowns of #REF', '#1']"", ""GROUP['count', '#1', '#2']"", ""UNION['#2', '#3']""]","[""SELECT['teachers']"", ""PROJECT['hometowns of #REF', '#1']"", ""GROUP['count', '#1', '#2']"", ""UNION['#2', '#3']""]4']"
SPIDER_dev_394,"For each hometown, how many teachers are there?","[""SELECT['hometowns']"", ""PROJECT['teachers in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""UNION['#1', '#3']""]","[""SELECT['hometowns']"", ""PROJECT['teachers of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""UNION['#1', '#3']""]"
SPIDER_dev_395,List the most common hometown of teachers.,"[""SELECT['teachers']"", ""PROJECT['hometowns of #REF', '#1']"", ""GROUP['count', '#1', '#2']"", ""SUPERLATIVE['max', '#2', '#3']""]","[""SELECT['teachers']"", ""PROJECT['hometowns of #REF', '#1']"", ""GROUP['count', '#1', '#2']"", ""COMPARATIVE['#2', '#3', 'is the highest']""."
SPIDER_dev_396,What is the most commmon hometowns for teachers?,"[""SELECT['teachers']"", ""PROJECT['hometowns of #REF', '#1']"", ""GROUP['count', '#1', '#2']"", ""SUPERLATIVE['max', '#2', '#3']""]","[""SELECT['teachers']"", ""PROJECT['hometowns of #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""COMPARATIVE['#2', '#3', 'is the highest']""]"
SPIDER_dev_397,Show the hometowns shared by at least two teachers.,"[""SELECT['hometowns']"", ""PROJECT['teachers in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is at least two']""]","[""SELECT['hometowns']"", ""PROJECT['teachers who shared #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is at least two']""]"
SPIDER_dev_398,What are the towns from which at least two teachers come from?,"[""SELECT['towns']"", ""PROJECT['teachers from #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is at least two']""]","[""SELECT['towns']"", ""PROJECT['teachers come from #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is at least two']""]"
SPIDER_dev_399,Show names of teachers and the courses they are arranged to teach.,"[""SELECT['teachers']"", ""PROJECT['names of #REF', '#1']"", ""PROJECT['courses #REF are arranged to teach', '#1']"", ""UNION['#2', '#3']""]","[""SELECT['teachers']"", ""PROJECT['name of #REF', '#1']"", ""PROJECT['courses #REF are arranged to teach', '#1']"", ""UNION['#2', '#3']""]"
SPIDER_dev_4,"What is the average, minimum, and maximum age of all singers from France?","[""SELECT['singers']"", ""FILTER['#1', 'from France']"", ""PROJECT['ages of #REF', '#2']"", ""AGGREGATE['avg', '#3']"", ""AGGREGATE['min', '#3']"", ""AGGREGATE['max', '#3']"", ""UNION['#4', '#5', '#6']""]","[""SELECT['singers']"", ""FILTER['#1', 'from France']"", ""PROJECT['age of #REF', '#2']"", ""AGGREGATE['avg', '#3']"", ""AGGREGATE['min', '#3']"", ""AGGREGATE['max', '#3']"", ""UNION['#4', '#5', '#6']""]"
SPIDER_dev_40,What is the name and country of origin of every singer who has a song with the word 'Hey' in its title?,"[""SELECT['singers']"", ""PROJECT['songs of #REF', '#1']"", ""PROJECT['titles of #REF', '#2']"", ""COMPARATIVE['#1', '#3', 'has the word Hey']"", ""PROJECT['names of #REF', '#4']"", ""PROJECT['countries of origin of #REF', '#4']"", ""UNION['#5', '#6']""]","[""SELECT['songs']"", ""PROJECT['titles of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'has the word Hey']"", ""PROJECT['singers of #REF', '#3']"", ""PROJECT['names of #REF', '#4']"", ""PROJECT['countries of origin of #REF', '#4']"", ""UNION['#5', '#6']""]"
SPIDER_dev_400,What is the name of each teacher and what course they teach?,"[""SELECT['teachers']"", ""PROJECT['names of #REF', '#1']"", ""PROJECT['courses of #REF', '#1']"", ""UNION['#2', '#3']""]","[""SELECT['teachers']"", ""PROJECT['name of #REF', '#1']"", ""PROJECT['courses of #REF', '#1']"", ""UNION['#2', '#3']""]"
SPIDER_dev_401,Show names of teachers and the courses they are arranged to teach in ascending alphabetical order of the teacher's name.,"[""SELECT['teachers']"", ""PROJECT['names of #REF', '#1']"", ""PROJECT['courses #REF are arranged to teach', '#1']"", ""UNION['#2', '#3']"", ""SORT['#4', '#2', 'in ascending alphabetical order']""]","[""SELECT['teachers']"", ""PROJECT['names of #REF', '#1']"", ""PROJECT['courses #REF are arranged to teach', '#1']"", ""UNION['#2', '#3']"", ""SORT['#5', '#4', 'in ascending alphabetical order']""]"
SPIDER_dev_402,What are the names of the teachers and the courses they teach in ascending alphabetical order by the name of the teacher?,"[""SELECT['teachers']"", ""PROJECT['names of #REF', '#1']"", ""PROJECT['courses #REF teach', '#1']"", ""UNION['#2', '#3']"", ""SORT['#4', '#2', 'in ascending alphabetical order']""]","[""SELECT['teachers']"", ""PROJECT['names of #REF', '#1']"", ""PROJECT['courses #REF teach', '#1']"", ""UNION['#2', '#3']"", ""SORT['#4', '#2', 'ascending alphabetical order']""]"
SPIDER_dev_403,Show the name of the teacher for the math course.,"[""SELECT['teachers']"", ""PROJECT['courses of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is math']"", ""PROJECT['name of #REF', '#3']""]","[""SELECT['courses']"", ""FILTER['#1', 'that are math']"", ""PROJECT['teacher of #REF', '#2']"", ""PROJECT['name of #REF', '#3']""]"
SPIDER_dev_404,What are the names of the people who teach math courses?,"[""SELECT['people']"", ""FILTER['#1', 'who teach math courses']"", ""PROJECT['names of #REF', '#2']""]","[""SELECT['people']"", ""PROJECT['courses of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is math']"", ""PROJECT['names of #REF', '#3']""]"
SPIDER_dev_405,Show names of teachers and the number of courses they teach.,"[""SELECT['teachers']"", ""PROJECT['names of #REF', '#1']"", ""PROJECT['courses #REF teach', '#1']"", ""GROUP['count', '#3', '#1']"", ""UNION['#2', '#4']""]","[""SELECT['teachers']"", ""PROJECT['courses #REF teach', '#1']"", ""GROUP['count', '#2', '#1']"", ""PROJECT['names of #REF', '#1']"", ""UNION['#4', '#3']""]"
SPIDER_dev_406,What are the names of the teachers and how many courses do they teach?,"[""SELECT['teachers']"", ""PROJECT['names of #REF', '#1']"", ""PROJECT['courses #REF teach', '#1']"", ""GROUP['count', '#3', '#1']"", ""UNION['#2', '#4']""]","[""SELECT['teachers']"", ""PROJECT['names of #REF', '#1']"", ""PROJECT['courses that #REF teach', '#1']"", ""GROUP['count', '#3', '#1']"", ""UNION['#2', '#4']""]"
SPIDER_dev_407,Show names of teachers that teach at least two courses.,"[""SELECT['teachers']"", ""PROJECT['courses #REF teach', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is at least two']"", ""PROJECT['names of #REF', '#4']""]","[""SELECT['teachers']"", ""FILTER['#1', 'that teach at least two courses']"", ""PROJECT['names of #REF', '#2']""]"
SPIDER_dev_408,What are the names of the teachers who teach at least two courses?,"[""SELECT['teachers']"", ""PROJECT['courses #REF teach', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is at least two']"", ""PROJECT['names of #REF', '#4']""]","[""SELECT['teachers']"", ""PROJECT['courses of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is at least two']"", ""PROJECT['names of #REF', '#4']""]"
SPIDER_dev_409,List the names of teachers who have not been arranged to teach courses.,"[""SELECT['teachers']"", ""FILTER['#1', 'who have not been arranged to teach courses']"", ""PROJECT['names of #REF', '#2']""]","[""SELECT['teachers']"", ""FILTER['#1', 'who have been arranged to teach courses']"", ""DISCARD['#1', '#2']"", ""PROJECT['name of #REF', '#3']""]"
SPIDER_dev_41,Find the name and location of the stadiums which some concerts happened in the years of both 2014 and 2015.,"[""SELECT['stadiums']"", ""PROJECT['concerts of #REF', '#1']"", ""PROJECT['years of #REF', '#2']"", ""COMPARATIVE['#1', '#3', 'is 2014']"", ""COMPARATIVE['#1', '#3', 'is 2015']"", ""INTERSECTION['#1', '#4', '#5']"", ""PROJECT['names of #REF', '#6']"", ""PROJECT['locations of #REF', '#6']"", ""UNION['#7', '#8']""]","[""SELECT['stadiums']"", ""PROJECT['concerts of #REF', '#1']"", ""PROJECT['years that #REF happened', '#2']"", ""COMPARATIVE['#1', '#3', 'is 2014']"", ""COMPARATIVE['#1', '#3', 'is 2015']"", ""INTERSECTION['#1', '#4', '#5']"", ""PROJECT['names of #REF', '#6']"", ""PROJECT['locations of #REF', '#6']"", ""UNION['#7', '#8']""]"
SPIDER_dev_410,What are the names of the teachers whose courses have not been arranged?,"[""SELECT['teachers']"", ""PROJECT['courses of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'have not been arranged']"", ""PROJECT['names of #REF', '#3']""]","[""SELECT['teachers']"", ""PROJECT['courses of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is higher than zero']"", ""DISCARD['#1', '#4']"", ""PROJECT['names of #REF', '#5']""]"
SPIDER_dev_411,How many visitors below age 30 are there?,"[""SELECT['visitors']"", ""PROJECT['ages of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is below 30']"", ""AGGREGATE['count', '#3']""]","[""SELECT['visitors']"", ""FILTER['#1', 'under 30']"", ""AGGREGATE['count', '#2']""]"
SPIDER_dev_412,"Find the names of the visitors whose membership level is higher than 4, and order the results by the level from high to low.","[""SELECT['visitors']"", ""PROJECT['membership levels of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is higher than 4']"", ""PROJECT['names of #REF', '#3']"", ""PROJECT['levels of #REF', '#3']"", ""SORT['#4', '#5']""]","[""SELECT['visitors']"", ""PROJECT['membership levels of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is higher than 4']"", ""PROJECT['names of #REF', '#3']"", ""SORT['#4', '#4', 'from high to low']""]"
SPIDER_dev_413,What is the average age of the visitors whose membership level is not higher than 4?,"[""SELECT['visitors']"", ""PROJECT['membership levels of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is at most 4']"", ""PROJECT['ages of #REF', '#3']"", ""AGGREGATE['avg', '#4']""]","[""SELECT['visitors']"", ""PROJECT['membership levels of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is higher than 4']"", ""PROJECT['ages of #REF', '#3']"", ""AGGREGATE['avg', '#4']""]"
SPIDER_dev_414,"Find the name and membership level of the visitors whose membership level is higher than 4, and sort by their age from old to young.","[""SELECT['visitors']"", ""PROJECT['membership levels of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is higher than 4']"", ""PROJECT['names of #REF', '#3']"", ""PROJECT['ages of #REF', '#3']"", ""SORT['#5', '#4']""]","[""SELECT['visitors']"", ""PROJECT['membership levels of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is higher than 4']"", ""PROJECT['names of #REF', '#3']"", ""PROJECT['ages of #REF', '#3']"", ""SORT['#5', '#6']""]"
SPIDER_dev_415,Find the id and name of the museum that has the most staff members?,"[""SELECT['museums']"", ""PROJECT['staff members of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']"", ""PROJECT['id of #REF', '#4']"", ""PROJECT['name of #REF', '#4']"", ""UNION['#5', '#6']""]","[""SELECT['musees']"", ""PROJECT['staff members of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']"", ""PROJECT['id of #REF', '#4']"", ""PROJECT['name of #REF', '#4']"", ""UNION['#5', '#6']""]"
SPIDER_dev_416,Find the average number of staff working for the museums that were open before 2009.,"[""SELECT['museums']"", ""FILTER['#1', 'that were open before 2009']"", ""PROJECT['staff working for #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['avg', '#4']""]","[""SELECT['museums']"", ""FILTER['#1', 'open before 2009']"", ""PROJECT['staff working for #REF', '#2']"", ""AGGREGATE['count', '#3']"", ""AGGREGATE['avg', '#4']""]"
SPIDER_dev_417,What are the opening year and staff number of the museum named Plaza Museum?,"[""SELECT['museums']"", ""FILTER['#1', 'named Plaza Museum']"", ""PROJECT['opening year of #REF', '#2']"", ""AGGREGATE['count', '#2']"", ""UNION['#3', '#4']""]","[""SELECT['museum named Plaza Museum']"", ""PROJECT['opening year of #REF', '#1']"", ""PROJECT['staff numbers of #REF', '#1']"", ""UNION['#2', '#3']""]"
SPIDER_dev_418,find the names of museums which have more staff than the minimum staff number of all museums opened after 2010.,"[""SELECT['museums']"", ""FILTER['#1', 'opened after 2010']"", ""PROJECT['staff of #REF', '#2']"", ""AGGREGATE['min', '#3']"", ""COMPARATIVE['#2', '#3', 'is higher than #4']"", ""PROJECT['names of #REF', '#5']""]","[""SELECT['museums']"", ""FILTER['#1', 'opened after 2010']"", ""PROJECT['staff of #REF', '#2']"", ""GROUP['count', '#3', '#2']"", ""AGGREGATE['min', '#4']"", ""COMPARATIVE['#2', '#5', 'is higher than #6']"", ""PROJECT['names of #REF', '#7']""]"
SPIDER_dev_419,"find the id, name and age for visitors who visited some museums more than once.","[""SELECT['visitors']"", ""FILTER['#1', 'who visited museums more than once']"", ""PROJECT['ids of #REF', '#2']"", ""PROJECT['names of #REF', '#2']"", ""PROJECT['ages of #REF', '#2']"", ""UNION['#3', '#4', '#5']""]","[""SELECT['visitors']"", ""FILTER['#1', 'who visited museums more than once']"", ""PROJECT['id of #REF', '#2']"", ""PROJECT['name of #REF', '#2']"", ""PROJECT['age of #REF', '#2']"", ""UNION['#3', '#4', '#5']""]"
SPIDER_dev_42,What are the names and locations of the stadiums that had concerts that occurred in both 2014 and 2015?,"[""SELECT['stadiums']"", ""PROJECT['concerts of #REF', '#1']"", ""FILTER['#2', 'in 2014']"", ""FILTER['#2', 'in 2015']"", ""INTERSECTION['#1', '#3', '#4']"", ""PROJECT['names of #REF', '#5']"", ""PROJECT['locations of #REF', '#5']"", ""UNION['#6', '#7']""]","[""SELECT['stadiums']"", ""PROJECT['concerts in #REF', '#1']"", ""FILTER['#2', 'in 2014']"", ""FILTER['#2', 'in 2015']"", ""INTERSECTION['#1', '#3', '#4']"", ""PROJECT['names of #REF', '#5']"", ""PROJECT['locations of #REF', '#5']"", ""UNION['#6', '#7']""]"
SPIDER_dev_420,"What are the id, name and membership level of visitors who have spent the largest amount of money in total in all museum tickets?","[""SELECT['visitors']"", ""PROJECT['tickets of #REF', '#1']"", ""GROUP['sum', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']"", ""PROJECT['id of #REF', '#4']"", ""PROJECT['name of #REF', '#4']"", ""PROJECT['membership level of #REF', '#4']"", ""UNION['#5', '#6', '#7']""]","[""SELECT['visitors']"", ""PROJECT['tickets of #REF', '#1']"", ""GROUP['sum', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is the highest']"", ""PROJECT['the ids of #REF', '#4']"", ""PROJECT['the names of #REF', '#4']"", ""PROJECT['the membership levels of #REF', '#4']"", ""UNION['#5', '#6', '#7']""]"
SPIDER_dev_421,What are the id and name of the museum visited most times?,"[""SELECT['museums']"", ""PROJECT['times visited of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']"", ""PROJECT['id of #REF', '#4']"", ""PROJECT['name of #REF', '#4']"", ""UNION['#5', '#6']""]","[""SELECT['museums']"", ""PROJECT['times visited of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']"", ""PROJECT['id of #REF', '#4']"", ""PROJECT['name of #REF', '#4']"", ""UNION['#6', '#5']""]"
SPIDER_dev_422,What is the name of the museum that had no visitor yet?,"[""SELECT['museums']"", ""PROJECT['visitors of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is zero']"", ""PROJECT['name of #REF', '#4']""]","[""SELECT['museums']"", ""PROJECT['visitors to #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is zero']"", ""PROJECT['name of #REF', '#4']""]"
SPIDER_dev_423,Find the name and age of the visitor who bought the most tickets at once.,"[""SELECT['visitors']"", ""PROJECT['tickets #REF bought', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']"", ""PROJECT['name of #REF', '#4']"", ""PROJECT['age of #REF', '#4']"", ""UNION['#5', '#6']""]","[""SELECT['visitors']"", ""PROJECT['tickets #REF bought', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is the highest']"", ""PROJECT['name of #REF', '#4']"", ""PROJECT['age of #REF', '#4']"", ""UNION['#5', '#6']""]"
SPIDER_dev_424,What are the average and maximum number of tickets bought in all visits?,"[""SELECT['visits']"", ""PROJECT['tickets bought in #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""AGGREGATE['avg', '#3']"", ""AGGREGATE['max', '#3']"", ""UNION['#4', '#5']""]","[""SELECT['visits']"", ""PROJECT['tickets bought in #REF', '#1']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['avg', '#3']"", ""AGGREGATE['max', '#3']"", ""UNION['#4', '#5']""]"
SPIDER_dev_425,What is the total ticket expense of the visitors whose membership level is 1?,"[""SELECT['visitors']"", ""PROJECT['membership levels of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is 1']"", ""PROJECT['ticket expenses of #REF', '#3']"", ""AGGREGATE['sum', '#4']""]","[""SELECT['visitors']"", ""FILTER['#1', 'whose membership level is 1']"", ""PROJECT['ticket expenses of #REF', '#2']"", ""AGGREGATE['sum', '#3']""]"
SPIDER_dev_426,What is the name of the visitor who visited both a museum opened before 2009 and a museum opened after 2011?,"[""SELECT['visitors']"", ""FILTER['#1', 'who visited a museum opened before 2009']"", ""FILTER['#1', 'who visited a museum opened after 2011']"", ""INTERSECTION['#1', '#2', '#3']"", ""PROJECT['name of #REF', '#4']""]","[""SELECT['museums']"", ""FILTER['#1', 'opened before 2009']"", ""FILTER['#1', 'opened after 2011']"", ""SELECT['visitors']"", ""INTERSECTION['#4', '#2', '#3']"", ""PROJECT['names of #REF', '#5']""]"
SPIDER_dev_427,Find the number of visitors who did not visit any museum opened after 2010.,"[""SELECT['museums']"", ""FILTER['#1', 'opened after 2010']"", ""PROJECT['visitors of #REF', '#2']"", ""SELECT['visitors']"", ""DISCARD['#4', '#3']"", ""AGGREGATE['count', '#5']""]","[""SELECT['museums']"", ""FILTER['#1', 'opened after 2010']"", ""PROJECT['visitors of #REF', '#2']"", ""SELECT['visitors']"", ""DISCARD['#4', '#3']"", ""GROUP['count', '#5', '#3']"", ""UNION['#3', '#6']""]"
SPIDER_dev_428,How many museums were opened after 2013 or before 2008?,"[""SELECT['museums']"", ""FILTER['#1', 'opened after 2013']"", ""FILTER['#1', 'opened before 2008']"", ""AGGREGATE['count', '#2']"", ""AGGREGATE['count', '#3']"", ""ARITHMETIC['sum', '#4', '#5']""]","[""SELECT['musees']"", ""FILTER['#1', 'opened after 2013']"", ""FILTER['#1', 'opened before 2008']"", ""UNION['#2', '#3']"", ""AGGREGATE['count', '#4']""]"
SPIDER_dev_429,Find the total number of players.,"[""SELECT['players']"", ""AGGREGATE['count', '#1']""]","[""SELECT['players']"", ""FILTER['#1', 'that are players']"", ""AGGREGATE['count', '#2']""]"
SPIDER_dev_43,Find the number of concerts happened in the stadium with the highest capacity.,"[""SELECT['stadiums']"", ""PROJECT['capacities of #REF', '#1']"", ""SUPERLATIVE['max', '#1', '#2']"", ""PROJECT['concerts in #REF', '#3']"", ""AGGREGATE['count', '#4']""]","[""SELECT['stadiums']"", ""PROJECT['capacity of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is the highest']"", ""PROJECT['concerts in #REF', '#3']"", ""AGGREGATE['count', '#4']""]"
SPIDER_dev_431,Find the total number of matches.,"[""SELECT['matches']"", ""AGGREGATE['count', '#1']""]","[""SELECT['matched']"", ""AGGREGATE['count', '#1']""]"
SPIDER_dev_432,Count the number of matches.,"[""SELECT['matches']"", ""AGGREGATE['count', '#1']""]","[""SELECT['matches']"", ""PROJECT['Count #REF', '#1']""]"
SPIDER_dev_433,List the first name and birth date of all players from the country with code USA.,"[""SELECT['players']"", ""PROJECT['countries of #REF', '#1']"", ""PROJECT['codes of #REF', '#2']"", ""COMPARATIVE['#1', '#3', 'is USA']"", ""PROJECT['first names of #REF', '#4']"", ""PROJECT['birth dates of #REF', '#4']"", ""UNION['#5', '#6']""]","[""SELECT['players']"", ""PROJECT['countries of #REF', '#1']"", ""PROJECT['codes of #REF', '#2']"", ""COMPARATIVE['#1', '#3', 'is USA']"", ""PROJECT['first name of #REF', '#4']"", ""PROJECT['birth date of #REF', '#4']"", ""UNION['#5', '#6']""]"
SPIDER_dev_434,What are the first names and birth dates of players from the USA?,"[""SELECT['players']"", ""FILTER['#1', 'from the USA']"", ""PROJECT['first names of #REF', '#2']"", ""PROJECT['birth dates of #REF', '#2']"", ""UNION['#3', '#4']""]","[""SELECT['players']"", ""FILTER['#1', 'from the USA']"", ""PROJECT['first names of #REF', '#2']"", ""PROJECT['birth dates of #REF', '#2']"", ""UNION['#4', '#3']""]"
SPIDER_dev_435,Find the average age of losers and winners of all matches.,"[""SELECT['matches']"", ""PROJECT['losers of #REF', '#1']"", ""PROJECT['winners of #REF', '#1']"", ""PROJECT['ages of #REF', '#2']"", ""AGGREGATE['avg', '#3']"", ""AGGREGATE['avg', '#4']"", ""UNION['#5', '#6']""]","[""SELECT['matches']"", ""PROJECT['losers of #REF', '#1']"", ""PROJECT['winners of #REF', '#1']"", ""AGGREGATE['avg', '#2']"", ""AGGREGATE['avg', '#3']"", ""UNION['#4', '#5']""]"
SPIDER_dev_436,What are the average ages of losers and winners across matches?,"[""SELECT['matches']"", ""PROJECT['losers of #REF', '#1']"", ""PROJECT['winners of #REF', '#1']"", ""PROJECT['ages of #REF', '#2']"", ""AGGREGATE['avg', '#3']"", ""AGGREGATE['avg', '#4']"", ""UNION['#5', '#6']""]","[""SELECT['matches']"", ""PROJECT['losers of #REF', '#1']"", ""PROJECT['winners of #REF', '#1']"", ""PROJECT['ages of #REF', '#2']"", ""GROUP['avg', '#3', '#1']"", ""GROUP['avg', '#4', '#1']"", ""UNION['#5', '#6']""]"
SPIDER_dev_437,Find the average rank of winners in all matches.,"[""SELECT['matches']"", ""PROJECT['winners of #REF', '#1']"", ""PROJECT['ranks of #REF', '#2']"", ""AGGREGATE['avg', '#3']""]","[""SELECT['matches']"", ""PROJECT['winners of #REF', '#1']"", ""AGGREGATE['avg', '#2']""]"
SPIDER_dev_438,What is the average rank for winners in all matches?,"[""SELECT['matches']"", ""PROJECT['winners of #REF', '#1']"", ""PROJECT['ranks of #REF', '#2']"", ""AGGREGATE['avg', '#3']""]","[""SELECT['matches']"", ""PROJECT['winners in #REF', '#1']"", ""AGGREGATE['avg', '#2']""]"
SPIDER_dev_439,Find the highest rank of losers in all matches.,"[""SELECT['matches']"", ""PROJECT['losers of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']""]","[""SELECT['matches']"", ""PROJECT['loans of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""SUPERLATIVE['max', '#1', '#3']""]"
SPIDER_dev_44,What are the number of concerts that occurred in the stadium with the largest capacity?,"[""SELECT['stadiums']"", ""PROJECT['capacities of #REF', '#1']"", ""SUPERLATIVE['max', '#1', '#2']"", ""PROJECT['concerts in #REF', '#3']"", ""AGGREGATE['count', '#4']""]","[""SELECT['stadiums']"", ""PROJECT['capacities of #REF', '#1']"", ""COMPARATIVE['#1', '#2', 'is the highest']"", ""PROJECT['concerts in #REF', '#3']"", ""AGGREGATE['count', '#4']""]"
SPIDER_dev_440,What is the best rank of losers across all matches?,"[""SELECT['matches']"", ""PROJECT['losers of #REF', '#1']"", ""PROJECT['ranks of #REF', '#2']"", ""AGGREGATE['max', '#3']""]","[""SELECT['matches']"", ""PROJECT['losers of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""AGGREGATE['max', '#3']"", ""PROJECT['rank of #REF', '#4']""]"
SPIDER_dev_441,find the number of distinct country codes of all players.,"[""SELECT['players']"", ""PROJECT['country codes of #REF', '#1']"", ""PROJECT['distinct #REF', '#2']"", ""GROUP['count', '#3', '#1']"", ""UNION['#1', '#4']""]","[""SELECT['players']"", ""PROJECT['country codes of #REF', '#1']"", ""PROJECT['distinct #REF', '#2']"", ""GROUP['count', '#3', '#1']"", ""UNION['#1', '#4']""]"
SPIDER_dev_442,How many distinct countries do players come from?,"[""SELECT['players']"", ""PROJECT['countries of #REF', '#1']"", ""PROJECT['distinct #REF', '#2']"", ""AGGREGATE['count', '#3']""]","[""SELECT['players']"", ""PROJECT['countries come from of #REF', '#1']"", ""PROJECT['distinct #REF', '#2']"", ""AGGREGATE['count', '#3']""]"
SPIDER_dev_443,Find the number of distinct name of losers.,"[""SELECT['losers']"", ""PROJECT['distinct names of #REF', '#1']"", ""AGGREGATE['count', '#2']""]","[""SELECT['lowers']"", ""PROJECT['distinct names of #REF', '#1']"", ""AGGREGATE['count', '#2']""]"
SPIDER_dev_444,How many different loser names are there?,"[""SELECT['losers']"", ""PROJECT['names of #REF', '#1']"", ""PROJECT['different #REF', '#2']"", ""AGGREGATE['count', '#3']""]","[""SELECT['names']"", ""FILTER['#1', 'that are loser']"", ""PROJECT['different #REF', '#2']"", ""AGGREGATE['count', '#3']""]"
SPIDER_dev_445,Find the name of tourney that has more than 10 matches.,"[""SELECT['tourneys']"", ""PROJECT['matches of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is higher than 10']"", ""PROJECT['name of #REF', '#4']""]","[""SELECT['tournaments']"", ""PROJECT['matches of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is higher than 10']"", ""PROJECT['name of #REF', '#4']""]"
SPIDER_dev_446,What are the names of tournaments that have more than 10 matches?,"[""SELECT['tournaments']"", ""PROJECT['matches of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is higher than 10']"", ""PROJECT['names of #REF', '#4']""]","[""SELECT['turnouts']"", ""PROJECT['matches of #REF', '#1']"", ""GROUP['count', '#2', '#1']"", ""COMPARATIVE['#1', '#3', 'is higher than 10']"", ""PROJECT['names of #REF', '#4']""]"
SPIDER_dev_447,List the names of all winners who played in both 2013 and 2016.,"[""SELECT['winners']"", ""FILTER['#1', 'who played in 2013']"", ""FILTER['#1', 'who played in 2016']"", ""INTERSECTION['#1', '#2', '#3']"", ""PROJECT['names of #REF', '#4']""]","[""SELECT['winners']"", ""PROJECT['names of #REF', '#1']"", ""FILTER['#2', 'who played in 2013']"", ""FILTER['#2', 'who played in 2016']"", ""INTERSECTION['#2', '#3', '#4']""]"
